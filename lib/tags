!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    A = 4$/;"	e	enum:llvm::ARM_PROC::IFlags
A6	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    A6 = 15 << Op0Shift,  A7 = 16 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
A7	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    A6 = 15 << Op0Shift,  A7 = 16 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
AA	Analysis/Lint.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon5::Lint	file:
AA	CodeGen/InlineSpiller.cpp	/^  AliasAnalysis *AA;$/;"	m	class:__anon155::InlineSpiller	file:
AA	CodeGen/MachineCSE.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon161::MachineCSE	file:
AA	CodeGen/MachineLICM.cpp	/^    AliasAnalysis        *AA;      \/\/ Alias analysis info.$/;"	m	class:__anon156::MachineLICM	file:
AA	CodeGen/MachineSink.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon101::MachineSinking	file:
AA	CodeGen/PostRASchedulerList.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon102::SchedulePostRATDList	file:
AA	CodeGen/RegisterCoalescer.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon114::RegisterCoalescer	file:
AA	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    AliasAnalysis &AA;$/;"	m	class:__anon68::DAGCombiner	file:
AA	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^  AliasAnalysis *AA;$/;"	m	class:__anon84::ScheduleDAGVLIW	file:
AA	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  AliasAnalysis *AA;$/;"	m	class:llvm::SelectionDAGBuilder
AA	CodeGen/TwoAddressInstructionPass.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
AA	Transforms/IPO/FunctionAttrs.cpp	/^    AliasAnalysis *AA;$/;"	m	struct:__anon578::FunctionAttrs	file:
AA	Transforms/Scalar/DeadStoreElimination.cpp	/^    AliasAnalysis *AA;$/;"	m	struct:__anon552::DSE	file:
AA	Transforms/Scalar/DeadStoreElimination.cpp	/^    AliasAnalysis *AA;$/;"	m	struct:__anon554::CouldRef	file:
AA	Transforms/Scalar/DeadStoreElimination.cpp	/^    AliasAnalysis *AA;$/;"	m	struct:__anon555::CouldAlias	file:
AA	Transforms/Scalar/GVN.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon536::ValueTable	file:
AA	Transforms/Scalar/LICM.cpp	/^    AliasAnalysis *AA;       \/\/ Current AliasAnalysis information$/;"	m	struct:__anon568::LICM	file:
AA	Transforms/Scalar/ObjCARC.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon503::ProvenanceAnalysis	file:
AA	Transforms/Scalar/ObjCARC.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon510::ObjCARCContract	file:
AA	Transforms/Scalar/Sink.cpp	/^    AliasAnalysis *AA;$/;"	m	class:__anon556::Sinking	file:
AA	Transforms/Utils/LoopSimplify.cpp	/^    AliasAnalysis *AA;$/;"	m	struct:__anon483::LoopSimplify	file:
AA	Transforms/Vectorize/BBVectorize.cpp	/^    AliasAnalysis *AA;$/;"	m	struct:__anon604::BBVectorize	file:
AAEval	Analysis/AliasAnalysisEvaluator.cpp	/^    AAEval() : FunctionPass(ID) {$/;"	f	class:__anon47::AAEval
AAEval	Analysis/AliasAnalysisEvaluator.cpp	/^  class AAEval : public FunctionPass {$/;"	c	namespace:__anon47	file:
ABI	Target/Mips/MipsLongBranch.cpp	/^    unsigned ABI;$/;"	m	class:__anon437::MipsLongBranch	file:
ABI_FP_16bit_format	Target/ARM/ARMBuildAttrs.h	/^    ABI_FP_16bit_format       = 38,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_FP_denormal	Target/ARM/ARMBuildAttrs.h	/^    ABI_FP_denormal           = 20,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_FP_exceptions	Target/ARM/ARMBuildAttrs.h	/^    ABI_FP_exceptions         = 21,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_FP_number_model	Target/ARM/ARMBuildAttrs.h	/^    ABI_FP_number_model       = 23,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_FP_optimization_goals	Target/ARM/ARMBuildAttrs.h	/^    ABI_FP_optimization_goals = 31,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_FP_rounding	Target/ARM/ARMBuildAttrs.h	/^    ABI_FP_rounding           = 19,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_FP_user_exceptions	Target/ARM/ARMBuildAttrs.h	/^    ABI_FP_user_exceptions    = 22,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_HardFP_use	Target/ARM/ARMBuildAttrs.h	/^    ABI_HardFP_use            = 27,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_PCS_GOT_use	Target/ARM/ARMBuildAttrs.h	/^    ABI_PCS_GOT_use           = 17,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_PCS_R9_use	Target/ARM/ARMBuildAttrs.h	/^    ABI_PCS_R9_use            = 14,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_PCS_RO_data	Target/ARM/ARMBuildAttrs.h	/^    ABI_PCS_RO_data           = 16,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_PCS_RW_data	Target/ARM/ARMBuildAttrs.h	/^    ABI_PCS_RW_data           = 15,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_PCS_wchar_t	Target/ARM/ARMBuildAttrs.h	/^    ABI_PCS_wchar_t           = 18,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_VFP_args	Target/ARM/ARMBuildAttrs.h	/^    ABI_VFP_args              = 28,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_WMMX_args	Target/ARM/ARMBuildAttrs.h	/^    ABI_WMMX_args             = 29,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_align8_needed	Target/ARM/ARMBuildAttrs.h	/^    ABI_align8_needed         = 24,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_align8_preserved	Target/ARM/ARMBuildAttrs.h	/^    ABI_align8_preserved      = 25,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_enum_size	Target/ARM/ARMBuildAttrs.h	/^    ABI_enum_size             = 26,$/;"	e	enum:ARMBuildAttrs::AttrType
ABI_optimization_goals	Target/ARM/ARMBuildAttrs.h	/^    ABI_optimization_goals    = 30,$/;"	e	enum:ARMBuildAttrs::AttrType
ADC	Target/X86/X86ISelLowering.h	/^      ADD, SUB, ADC, SBB, SMUL,$/;"	e	enum:llvm::X86ISD::NodeType
ADCE	Transforms/Scalar/ADCE.cpp	/^    ADCE() : FunctionPass(ID) {$/;"	f	struct:__anon572::ADCE
ADCE	Transforms/Scalar/ADCE.cpp	/^  struct ADCE : public FunctionPass {$/;"	s	namespace:__anon572	file:
ADD	Target/X86/X86ISelDAGToDAG.cpp	/^  ADD,$/;"	e	enum:AtomicOpc	file:
ADD	Target/X86/X86ISelLowering.h	/^      ADD, SUB, ADC, SBB, SMUL,$/;"	e	enum:llvm::X86ISD::NodeType
ADD64_MARKER	Target/CellSPU/SPUISelLowering.h	/^      ADD64_MARKER,             \/\/\/< i64 addition marker$/;"	e	enum:llvm::SPUISD::NodeType
ADDC	Target/ARM/ARMISelLowering.h	/^      ADDC,         \/\/ Add with carry$/;"	e	enum:llvm::ARMISD::NodeType
ADDE	Target/ARM/ARMISelLowering.h	/^      ADDE,         \/\/ Add using carry$/;"	e	enum:llvm::ARMISD::NodeType
ADDRESS_SPACE_CONST	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  ADDRESS_SPACE_CONST = 4,$/;"	e	enum:llvm::AddressSpace
ADDRESS_SPACE_CONST_NOT_GEN	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  ADDRESS_SPACE_CONST_NOT_GEN = 2, \/\/ Not part of generic space$/;"	e	enum:llvm::AddressSpace
ADDRESS_SPACE_GENERIC	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  ADDRESS_SPACE_GENERIC = 0,$/;"	e	enum:llvm::AddressSpace
ADDRESS_SPACE_GLOBAL	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  ADDRESS_SPACE_GLOBAL = 1,$/;"	e	enum:llvm::AddressSpace
ADDRESS_SPACE_LOCAL	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  ADDRESS_SPACE_LOCAL = 5,$/;"	e	enum:llvm::AddressSpace
ADDRESS_SPACE_PARAM	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  ADDRESS_SPACE_PARAM = 101$/;"	e	enum:llvm::AddressSpace
ADDRESS_SPACE_SHARED	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  ADDRESS_SPACE_SHARED = 3,$/;"	e	enum:llvm::AddressSpace
ADDiu	Target/Mips/MipsAnalyzeImmediate.h	/^    unsigned ADDiu, ORi, SLL, LUi;$/;"	m	class:llvm::MipsAnalyzeImmediate
ADJDYNALLOC	Target/Hexagon/HexagonISelLowering.h	/^      ADJDYNALLOC,$/;"	e	enum:llvm::HexagonISD::__anon404
AFI	Target/ARM/ARMAsmPrinter.h	/^  ARMFunctionInfo *AFI;$/;"	m	class:llvm::ARMAsmPrinter
AFI	Target/ARM/ARMConstantIslandPass.cpp	/^    ARMFunctionInfo *AFI;$/;"	m	class:__anon310::ARMConstantIslands	file:
AFI	Target/ARM/ARMExpandPseudoInsts.cpp	/^    ARMFunctionInfo *AFI;$/;"	m	class:__anon311::ARMExpandPseudo	file:
AFI	Target/ARM/ARMFastISel.cpp	/^  ARMFunctionInfo *AFI;$/;"	m	class:__anon307::ARMFastISel	file:
AFI	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    ARMFunctionInfo *AFI;$/;"	m	struct:__anon303::ARMLoadStoreOpt	file:
AFI	Target/ARM/Thumb2ITBlockPass.cpp	/^    ARMFunctionInfo *AFI;$/;"	m	class:__anon306::Thumb2ITBlockPass	file:
AFormAddr	Target/CellSPU/SPUISelLowering.h	/^      AFormAddr,                \/\/\/< A-form address (local store)$/;"	e	enum:llvm::SPUISD::NodeType
AHEAD	Support/regcomp.c	133;"	d	file:
AI	Transforms/Scalar/SROA.cpp	/^  AllocaInst &AI;$/;"	m	class:__anon557::AllocaPartitioning	file:
AI	Transforms/Scalar/SROA.cpp	/^  AllocaInst &AI;$/;"	m	class:__anon558::AllocaPromoter	file:
AI	Transforms/Scalar/ScalarReplAggregates.cpp	/^      AllocaInst *AI;$/;"	m	struct:__anon521::SROA::AllocaInfo	file:
AI	Transforms/Scalar/ScalarReplAggregates.cpp	/^  AllocaInst *AI;$/;"	m	class:__anon524::AllocaPromoter	file:
AL	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AL             \/\/ Always (unconditional)     Always (unconditional)$/;"	e	enum:llvm::ARMCC::CondCodes
ALIGN_STACK	Target/PowerPC/PPCFrameLowering.cpp	37;"	d	file:
ALL_EA_BASES	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  ALL_EA_BASES$/;"	e	enum:__anon354
ALL_EA_BASES	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  ALL_EA_BASES$/;"	e	enum:__anon355
ALL_EA_BASES	Target/X86/Disassembler/X86DisassemblerDecoder.h	271;"	d
ALL_REGS	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  ALL_REGS$/;"	e	enum:__anon354
ALL_REGS	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  ALL_REGS$/;"	e	enum:__anon358
ALL_REGS	Target/X86/Disassembler/X86DisassemblerDecoder.h	280;"	d
ALL_SIB_BASES	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  ALL_SIB_BASES$/;"	e	enum:__anon356
ALL_SIB_BASES	Target/X86/Disassembler/X86DisassemblerDecoder.h	276;"	d
ALMutex	VMCore/Attributes.cpp	/^static ManagedStatic<sys::SmartMutex<true> > ALMutex;$/;"	m	namespace:llvm	file:
AM	Transforms/Scalar/LoopStrengthReduce.cpp	/^  AddrMode AM;$/;"	m	struct:__anon514::Formula	file:
AM2_BASE	Target/ARM/ARMISelDAGToDAG.cpp	/^  AM2_BASE, \/\/ Simple AM2 (+-imm12)$/;"	e	enum:__anon302::AddrMode2Type	file:
AM2_SHOP	Target/ARM/ARMISelDAGToDAG.cpp	/^  AM2_SHOP  \/\/ Shifter-op AM2$/;"	e	enum:__anon302::AddrMode2Type	file:
AM3_I_BitShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AM3_I_BitShift = 22,$/;"	e	enum:llvm::ARMII::__anon288
AMSubMode	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  enum AMSubMode {$/;"	g	namespace:llvm::ARM_AM
AND	Target/X86/X86ISelDAGToDAG.cpp	/^  AND,$/;"	e	enum:AtomicOpc	file:
AND	Target/X86/X86ISelLowering.h	/^      INC, DEC, OR, XOR, AND,$/;"	e	enum:llvm::X86ISD::NodeType
ANDN	Target/X86/X86ISelLowering.h	/^      ANDN, \/\/ ANDN - Bitwise AND NOT with FLAGS results.$/;"	e	enum:llvm::X86ISD::NodeType
ANDNP	Target/X86/X86ISelLowering.h	/^      ANDNP,$/;"	e	enum:llvm::X86ISD::NodeType
ANDROID_JIT_AGENT_PATH	ExecutionEngine/IntelJITEvents/jitprofiling.c	54;"	d	file:
AOK_Imm	MC/MCParser/AsmParser.cpp	/^   AOK_Imm,$/;"	e	enum:__anon213::AsmRewriteKind	file:
AOK_Input	MC/MCParser/AsmParser.cpp	/^   AOK_Input,$/;"	e	enum:__anon213::AsmRewriteKind	file:
AOK_Output	MC/MCParser/AsmParser.cpp	/^   AOK_Output,$/;"	e	enum:__anon213::AsmRewriteKind	file:
AOK_SizeDirective	MC/MCParser/AsmParser.cpp	/^   AOK_SizeDirective,$/;"	e	enum:__anon213::AsmRewriteKind	file:
AOK_Skip	MC/MCParser/AsmParser.cpp	/^   AOK_Skip$/;"	e	enum:__anon213::AsmRewriteKind	file:
AP	Target/NVPTX/NVPTXAsmPrinter.h	/^    NVPTXAsmPrinter &AP;$/;"	m	class:llvm::NVPTXAsmPrinter::AggBuffer
APFloat	AsmParser/LLToken.h	/^    APFloat,  \/\/ APFloatVal$/;"	e	enum:llvm::lltok::Kind
APFloat	Support/APFloat.cpp	/^APFloat::APFloat(const APFloat &rhs) : exponent2(0), sign2(0) {$/;"	f	class:APFloat
APFloat	Support/APFloat.cpp	/^APFloat::APFloat(const APInt& api, bool isIEEE) : exponent2(0), sign2(0) {$/;"	f	class:APFloat
APFloat	Support/APFloat.cpp	/^APFloat::APFloat(const fltSemantics &ourSemantics) : exponent2(0), sign2(0) {$/;"	f	class:APFloat
APFloat	Support/APFloat.cpp	/^APFloat::APFloat(const fltSemantics &ourSemantics, StringRef text)$/;"	f	class:APFloat
APFloat	Support/APFloat.cpp	/^APFloat::APFloat(const fltSemantics &ourSemantics, integerPart value)$/;"	f	class:APFloat
APFloat	Support/APFloat.cpp	/^APFloat::APFloat(const fltSemantics &ourSemantics, uninitializedTag tag)$/;"	f	class:APFloat
APFloat	Support/APFloat.cpp	/^APFloat::APFloat(const fltSemantics &ourSemantics,$/;"	f	class:APFloat
APFloat	Support/APFloat.cpp	/^APFloat::APFloat(double d) : exponent2(0), sign2(0) {$/;"	f	class:APFloat
APFloat	Support/APFloat.cpp	/^APFloat::APFloat(float f) : exponent2(0), sign2(0) {$/;"	f	class:APFloat
APFloatVal	AsmParser/LLLexer.h	/^    APFloat APFloatVal;$/;"	m	class:llvm::LLLexer
APFloatVal	AsmParser/LLParser.h	/^    APFloat APFloatVal;$/;"	m	struct:llvm::ValID
API_VERSION	ExecutionEngine/IntelJITEvents/ittnotify_config.h	172;"	d
API_VERSION_BUILD	ExecutionEngine/IntelJITEvents/ittnotify_config.h	166;"	d
API_VERSION_NUM	ExecutionEngine/IntelJITEvents/ittnotify_config.h	169;"	d
APInt	Support/APInt.cpp	/^APInt::APInt(unsigned numBits, ArrayRef<uint64_t> bigVal)$/;"	f	class:APInt
APInt	Support/APInt.cpp	/^APInt::APInt(unsigned numBits, unsigned numWords, const uint64_t bigVal[])$/;"	f	class:APInt
APInt	Support/APInt.cpp	/^APInt::APInt(unsigned numbits, StringRef Str, uint8_t radix)$/;"	f	class:APInt
APIntCompare	Analysis/ScalarEvolution.cpp	/^  struct APIntCompare {$/;"	s	namespace:__anon31	file:
APSInt	AsmParser/LLToken.h	/^    APSInt \/\/ APSInt$/;"	e	enum:llvm::lltok::Kind
APSIntVal	AsmParser/LLLexer.h	/^    APSInt  APSIntVal;$/;"	m	class:llvm::LLLexer
APSIntVal	AsmParser/LLParser.h	/^    APSInt APSIntVal;$/;"	m	struct:llvm::ValID
ARFILE_BSD4_SYMTAB_NAME	Archive/ArchiveInternals.h	27;"	d
ARFILE_LLVM_SYMTAB_NAME	Archive/ArchiveInternals.h	26;"	d
ARFILE_MAGIC	Archive/ArchiveInternals.h	23;"	d
ARFILE_MAGIC_LEN	Archive/ArchiveInternals.h	24;"	d
ARFILE_MEMBER_MAGIC	Archive/ArchiveInternals.h	30;"	d
ARFILE_PAD	Archive/ArchiveInternals.h	29;"	d
ARFILE_STRTAB_NAME	Archive/ArchiveInternals.h	28;"	d
ARFILE_SVR4_SYMTAB_NAME	Archive/ArchiveInternals.h	25;"	d
ARGEXTEND	Target/Hexagon/HexagonISelLowering.h	/^      ARGEXTEND,$/;"	e	enum:llvm::HexagonISD::__anon404
ARM	Target/ARM/ARMAsmPrinter.h	/^namespace ARM {$/;"	n	namespace:llvm
ARM	Target/ARM/ARMISelLowering.h	/^  namespace ARM {$/;"	n	namespace:llvm
ARM	Target/ARM/ARMRelocations.h	/^  namespace ARM {$/;"	n	namespace:llvm
ARM	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^namespace ARM {$/;"	n	namespace:llvm
ARMASMPRINTER_H	Target/ARM/ARMAsmPrinter.h	15;"	d
ARMAsmBackend	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  ARMAsmBackend(const Target &T, const StringRef TT)$/;"	f	class:__anon284::ARMAsmBackend
ARMAsmBackend	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^class ARMAsmBackend : public MCAsmBackend {$/;"	c	namespace:__anon284	file:
ARMAsmLexer	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  ARMAsmLexer(const Target &T, const MCRegisterInfo &MRI, const MCAsmInfo &MAI)$/;"	f	class:__anon258::ARMAsmLexer
ARMAsmLexer	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^class ARMAsmLexer : public ARMBaseAsmLexer {$/;"	c	namespace:__anon258	file:
ARMAsmParser	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  ARMAsmParser(MCSubtargetInfo &_STI, MCAsmParser &_Parser)$/;"	f	class:__anon259::ARMAsmParser
ARMAsmParser	Target/ARM/AsmParser/ARMAsmParser.cpp	/^class ARMAsmParser : public MCTargetAsmParser {$/;"	c	namespace:__anon259	file:
ARMAsmPrinter	Target/ARM/ARMAsmPrinter.h	/^  explicit ARMAsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:llvm::ARMAsmPrinter
ARMAsmPrinter	Target/ARM/ARMAsmPrinter.h	/^class LLVM_LIBRARY_VISIBILITY ARMAsmPrinter : public AsmPrinter {$/;"	c	namespace:llvm
ARMBASEINFO_H	Target/ARM/MCTargetDesc/ARMBaseInfo.h	18;"	d
ARMBASEINSTRUCTIONINFO_H	Target/ARM/ARMBaseInstrInfo.h	15;"	d
ARMBASEREGISTERINFO_H	Target/ARM/ARMBaseRegisterInfo.h	15;"	d
ARMBaseAsmLexer	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  ARMBaseAsmLexer(const Target &T, const MCAsmInfo &MAI)$/;"	f	class:__anon258::ARMBaseAsmLexer
ARMBaseAsmLexer	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^class ARMBaseAsmLexer : public MCTargetAsmLexer {$/;"	c	namespace:__anon258	file:
ARMBaseInstrInfo	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::ARMBaseInstrInfo(const ARMSubtarget& STI)$/;"	f	class:ARMBaseInstrInfo
ARMBaseInstrInfo	Target/ARM/ARMBaseInstrInfo.h	/^class ARMBaseInstrInfo : public ARMGenInstrInfo {$/;"	c	namespace:llvm
ARMBaseRegisterInfo	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::ARMBaseRegisterInfo(const ARMBaseInstrInfo &tii,$/;"	f	class:ARMBaseRegisterInfo
ARMBaseRegisterInfo	Target/ARM/ARMBaseRegisterInfo.h	/^class ARMBaseRegisterInfo : public ARMGenRegisterInfo {$/;"	c	namespace:llvm
ARMBaseTargetMachine	Target/ARM/ARMTargetMachine.cpp	/^ARMBaseTargetMachine::ARMBaseTargetMachine(const Target &T, StringRef TT,$/;"	f	class:ARMBaseTargetMachine
ARMBaseTargetMachine	Target/ARM/ARMTargetMachine.h	/^class ARMBaseTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
ARMBuildAttrs	Target/ARM/ARMBuildAttrs.h	/^namespace ARMBuildAttrs {$/;"	n
ARMCALLINGCONV_H	Target/ARM/ARMCallingConv.h	16;"	d
ARMCC	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^namespace ARMCC {$/;"	n	namespace:llvm
ARMCCState	Target/ARM/ARMISelLowering.cpp	/^    ARMCCState(CallingConv::ID CC, bool isVarArg, MachineFunction &MF,$/;"	f	class:__anon296::ARMCCState
ARMCCState	Target/ARM/ARMISelLowering.cpp	/^  class ARMCCState : public CCState {$/;"	c	namespace:__anon296	file:
ARMCGBR	Target/ARM/ARMInstrInfo.cpp	/^    ARMCGBR() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon292::ARMCGBR
ARMCGBR	Target/ARM/ARMInstrInfo.cpp	/^  struct ARMCGBR : public MachineFunctionPass {$/;"	s	namespace:__anon292	file:
ARMCP	Target/ARM/ARMConstantPoolValue.h	/^namespace ARMCP {$/;"	n	namespace:llvm
ARMCPKind	Target/ARM/ARMConstantPoolValue.h	/^  enum ARMCPKind {$/;"	g	namespace:llvm::ARMCP
ARMCPModifier	Target/ARM/ARMConstantPoolValue.h	/^  enum ARMCPModifier {$/;"	g	namespace:llvm::ARMCP
ARMCodeEmitter	Target/ARM/ARMCodeEmitter.cpp	/^    ARMCodeEmitter(TargetMachine &tm, JITCodeEmitter &mce)$/;"	f	class:__anon297::ARMCodeEmitter
ARMCodeEmitter	Target/ARM/ARMCodeEmitter.cpp	/^  class ARMCodeEmitter : public MachineFunctionPass {$/;"	c	namespace:__anon297	file:
ARMCompilationCallback	Target/ARM/ARMJITInfo.cpp	/^  void ARMCompilationCallback() {$/;"	f
ARMCompilationCallbackC	Target/ARM/ARMJITInfo.cpp	/^extern "C" void ARMCompilationCallbackC(intptr_t StubAddr) {$/;"	f
ARMComputeAddress	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::ARMComputeAddress(const Value *Obj, Address &Addr) {$/;"	f	class:ARMFastISel
ARMCondCodeToString	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^inline static const char *ARMCondCodeToString(ARMCC::CondCodes CC) {$/;"	f	namespace:llvm
ARMConstantIslands	Target/ARM/ARMConstantIslandPass.cpp	/^    ARMConstantIslands() : MachineFunctionPass(ID) {}$/;"	f	class:__anon310::ARMConstantIslands
ARMConstantIslands	Target/ARM/ARMConstantIslandPass.cpp	/^  class ARMConstantIslands : public MachineFunctionPass {$/;"	c	namespace:__anon310	file:
ARMConstantPoolConstant	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolConstant::ARMConstantPoolConstant(Type *Ty,$/;"	f	class:ARMConstantPoolConstant
ARMConstantPoolConstant	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolConstant::ARMConstantPoolConstant(const Constant *C,$/;"	f	class:ARMConstantPoolConstant
ARMConstantPoolConstant	Target/ARM/ARMConstantPoolValue.h	/^class ARMConstantPoolConstant : public ARMConstantPoolValue {$/;"	c	namespace:llvm
ARMConstantPoolMBB	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolMBB::ARMConstantPoolMBB(LLVMContext &C,$/;"	f	class:ARMConstantPoolMBB
ARMConstantPoolMBB	Target/ARM/ARMConstantPoolValue.h	/^class ARMConstantPoolMBB : public ARMConstantPoolValue {$/;"	c	namespace:llvm
ARMConstantPoolSymbol	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolSymbol::ARMConstantPoolSymbol(LLVMContext &C, const char *s,$/;"	f	class:ARMConstantPoolSymbol
ARMConstantPoolSymbol	Target/ARM/ARMConstantPoolValue.h	/^class ARMConstantPoolSymbol : public ARMConstantPoolValue {$/;"	c	namespace:llvm
ARMConstantPoolValue	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolValue::ARMConstantPoolValue(LLVMContext &C, unsigned id,$/;"	f	class:ARMConstantPoolValue
ARMConstantPoolValue	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolValue::ARMConstantPoolValue(Type *Ty, unsigned id,$/;"	f	class:ARMConstantPoolValue
ARMConstantPoolValue	Target/ARM/ARMConstantPoolValue.h	/^class ARMConstantPoolValue : public MachineConstantPoolValue {$/;"	c	namespace:llvm
ARMDAGToDAGISel	Target/ARM/ARMISelDAGToDAG.cpp	/^  explicit ARMDAGToDAGISel(ARMBaseTargetMachine &tm,$/;"	f	class:__anon302::ARMDAGToDAGISel
ARMDAGToDAGISel	Target/ARM/ARMISelDAGToDAG.cpp	/^class ARMDAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon302	file:
ARMDisassembler	Target/ARM/Disassembler/ARMDisassembler.cpp	/^  ARMDisassembler(const MCSubtargetInfo &STI) :$/;"	f	class:__anon291::ARMDisassembler
ARMDisassembler	Target/ARM/Disassembler/ARMDisassembler.cpp	/^class ARMDisassembler : public MCDisassembler {$/;"	c	namespace:__anon291	file:
ARMELFMCAsmInfo	Target/ARM/MCTargetDesc/ARMMCAsmInfo.cpp	/^ARMELFMCAsmInfo::ARMELFMCAsmInfo() {$/;"	f	class:ARMELFMCAsmInfo
ARMELFMCAsmInfo	Target/ARM/MCTargetDesc/ARMMCAsmInfo.h	/^  class ARMELFMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
ARMELFObjectWriter	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  ARMELFObjectWriter(uint8_t OSABI)$/;"	f	class:__anon284::ARMELFObjectWriter
ARMELFObjectWriter	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^class ARMELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anon284	file:
ARMELFObjectWriter	Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp	/^  class ARMELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anon286	file:
ARMELFObjectWriter	Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp	/^ARMELFObjectWriter::ARMELFObjectWriter(uint8_t OSABI)$/;"	f	class:ARMELFObjectWriter
ARMELFWriterInfo	Target/ARM/ARMELFWriterInfo.cpp	/^ARMELFWriterInfo::ARMELFWriterInfo(TargetMachine &TM)$/;"	f	class:ARMELFWriterInfo
ARMELFWriterInfo	Target/ARM/ARMELFWriterInfo.h	/^  class ARMELFWriterInfo : public TargetELFWriterInfo {$/;"	c	namespace:llvm
ARMElfTargetObjectFile	Target/ARM/ARMTargetObjectFile.h	/^  ARMElfTargetObjectFile() :$/;"	f	class:llvm::ARMElfTargetObjectFile
ARMElfTargetObjectFile	Target/ARM/ARMTargetObjectFile.h	/^class ARMElfTargetObjectFile : public TargetLoweringObjectFileELF {$/;"	c	namespace:llvm
ARMEmitCmp	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::ARMEmitCmp(const Value *Src1Value, const Value *Src2Value,$/;"	f	class:ARMFastISel
ARMEmitIntExt	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::ARMEmitIntExt(EVT SrcVT, unsigned SrcReg, EVT DestVT,$/;"	f	class:ARMFastISel
ARMEmitLibcall	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::ARMEmitLibcall(const Instruction *I, RTLIB::Libcall Call) {$/;"	f	class:ARMFastISel
ARMEmitLoad	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::ARMEmitLoad(EVT VT, unsigned &ResultReg, Address &Addr,$/;"	f	class:ARMFastISel
ARMEmitStore	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::ARMEmitStore(EVT VT, unsigned SrcReg, Address &Addr,$/;"	f	class:ARMFastISel
ARMException	CodeGen/AsmPrinter/ARMException.cpp	/^ARMException::ARMException(AsmPrinter *A)$/;"	f	class:ARMException
ARMException	CodeGen/AsmPrinter/DwarfException.h	/^class ARMException : public DwarfException {$/;"	c	namespace:llvm
ARMExeDomain	Target/ARM/ARMBaseInstrInfo.cpp	/^enum ARMExeDomain {$/;"	g	file:
ARMExpandPseudo	Target/ARM/ARMExpandPseudoInsts.cpp	/^    ARMExpandPseudo() : MachineFunctionPass(ID) {}$/;"	f	class:__anon311::ARMExpandPseudo
ARMExpandPseudo	Target/ARM/ARMExpandPseudoInsts.cpp	/^  class ARMExpandPseudo : public MachineFunctionPass {$/;"	c	namespace:__anon311	file:
ARMFastISel	Target/ARM/ARMFastISel.cpp	/^    explicit ARMFastISel(FunctionLoweringInfo &funcInfo,$/;"	f	class:__anon307::ARMFastISel
ARMFastISel	Target/ARM/ARMFastISel.cpp	/^class ARMFastISel : public FastISel {$/;"	c	namespace:__anon307	file:
ARMFrameLowering	Target/ARM/ARMFrameLowering.h	/^  explicit ARMFrameLowering(const ARMSubtarget &sti)$/;"	f	class:llvm::ARMFrameLowering
ARMFrameLowering	Target/ARM/ARMFrameLowering.h	/^class ARMFrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
ARMFunctionInfo	Target/ARM/ARMMachineFunctionInfo.h	/^  ARMFunctionInfo() :$/;"	f	class:llvm::ARMFunctionInfo
ARMFunctionInfo	Target/ARM/ARMMachineFunctionInfo.h	/^  explicit ARMFunctionInfo(MachineFunction &MF) :$/;"	f	class:llvm::ARMFunctionInfo
ARMFunctionInfo	Target/ARM/ARMMachineFunctionInfo.h	/^class ARMFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
ARMHAZARDRECOGNIZER_H	Target/ARM/ARMHazardRecognizer.h	15;"	d
ARMHazardRecognizer	Target/ARM/ARMHazardRecognizer.h	/^  ARMHazardRecognizer(const InstrItineraryData *ItinData,$/;"	f	class:llvm::ARMHazardRecognizer
ARMHazardRecognizer	Target/ARM/ARMHazardRecognizer.h	/^class ARMHazardRecognizer : public ScoreboardHazardRecognizer {$/;"	c	namespace:llvm
ARMII	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^namespace ARMII {$/;"	n	namespace:llvm
ARMINSTPRINTER_H	Target/ARM/InstPrinter/ARMInstPrinter.h	15;"	d
ARMINSTRUCTIONINFO_H	Target/ARM/ARMInstrInfo.h	15;"	d
ARMISD	Target/ARM/ARMISelLowering.h	/^  namespace ARMISD {$/;"	n	namespace:llvm
ARMISELLOWERING_H	Target/ARM/ARMISelLowering.h	16;"	d
ARMInstPrinter	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^ARMInstPrinter::ARMInstPrinter(const MCAsmInfo &MAI,$/;"	f	class:ARMInstPrinter
ARMInstPrinter	Target/ARM/InstPrinter/ARMInstPrinter.h	/^class ARMInstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
ARMInstrInfo	Target/ARM/ARMInstrInfo.cpp	/^ARMInstrInfo::ARMInstrInfo(const ARMSubtarget &STI)$/;"	f	class:ARMInstrInfo
ARMInstrInfo	Target/ARM/ARMInstrInfo.h	/^class ARMInstrInfo : public ARMBaseInstrInfo {$/;"	c	namespace:llvm
ARMIsMemCpySmall	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::ARMIsMemCpySmall(uint64_t Len) {$/;"	f	class:ARMFastISel
ARMJITINFO_H	Target/ARM/ARMJITInfo.h	15;"	d
ARMJITInfo	Target/ARM/ARMJITInfo.h	/^    explicit ARMJITInfo() : IsPIC(false) { useGOT = false; }$/;"	f	class:llvm::ARMJITInfo
ARMJITInfo	Target/ARM/ARMJITInfo.h	/^  class ARMJITInfo : public TargetJITInfo {$/;"	c	namespace:llvm
ARMLoadStoreOpt	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    ARMLoadStoreOpt() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon303::ARMLoadStoreOpt
ARMLoadStoreOpt	Target/ARM/ARMLoadStoreOptimizer.cpp	/^  struct ARMLoadStoreOpt : public MachineFunctionPass {$/;"	s	namespace:__anon303	file:
ARMLowerPICELF	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::ARMLowerPICELF(const GlobalValue *GV,$/;"	f	class:ARMFastISel
ARMMACHINEFUNCTIONINFO_H	Target/ARM/ARMMachineFunctionInfo.h	15;"	d
ARMMCAsmInfoDarwin	Target/ARM/MCTargetDesc/ARMMCAsmInfo.cpp	/^ARMMCAsmInfoDarwin::ARMMCAsmInfoDarwin() {$/;"	f	class:ARMMCAsmInfoDarwin
ARMMCAsmInfoDarwin	Target/ARM/MCTargetDesc/ARMMCAsmInfo.h	/^  class ARMMCAsmInfoDarwin : public MCAsmInfoDarwin {$/;"	c	namespace:llvm
ARMMCCodeEmitter	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  ARMMCCodeEmitter(const MCInstrInfo &mcii, const MCSubtargetInfo &sti,$/;"	f	class:__anon283::ARMMCCodeEmitter
ARMMCCodeEmitter	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^class ARMMCCodeEmitter : public MCCodeEmitter {$/;"	c	namespace:__anon283	file:
ARMMCEXPR_H	Target/ARM/MCTargetDesc/ARMMCExpr.h	11;"	d
ARMMCExpr	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  explicit ARMMCExpr(VariantKind _Kind, const MCExpr *_Expr)$/;"	f	class:llvm::ARMMCExpr
ARMMCExpr	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^class ARMMCExpr : public MCTargetExpr {$/;"	c	namespace:llvm
ARMMCInstrAnalysis	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^  ARMMCInstrAnalysis(const MCInstrInfo *Info) : MCInstrAnalysis(Info) {}$/;"	f	class:__anon282::ARMMCInstrAnalysis
ARMMCInstrAnalysis	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^class ARMMCInstrAnalysis : public MCInstrAnalysis {$/;"	c	namespace:__anon282	file:
ARMMCTARGETDESC_H	Target/ARM/MCTargetDesc/ARMMCTargetDesc.h	15;"	d
ARMMachObjectWriter	Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp	/^  ARMMachObjectWriter(bool Is64Bit, uint32_t CPUType,$/;"	f	class:__anon289::ARMMachObjectWriter
ARMMachObjectWriter	Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp	/^class ARMMachObjectWriter : public MCMachObjectTargetWriter {$/;"	c	namespace:__anon289	file:
ARMMatchResultTy	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  enum ARMMatchResultTy {$/;"	g	class:__anon259::ARMAsmParser	file:
ARMMaterializeFP	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::ARMMaterializeFP(const ConstantFP *CFP, EVT VT) {$/;"	f	class:ARMFastISel
ARMMaterializeGV	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::ARMMaterializeGV(const GlobalValue *GV, EVT VT) {$/;"	f	class:ARMFastISel
ARMMaterializeInt	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::ARMMaterializeInt(const Constant *C, EVT VT) {$/;"	f	class:ARMFastISel
ARMMoveToFPReg	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::ARMMoveToFPReg(EVT VT, unsigned SrcReg) {$/;"	f	class:ARMFastISel
ARMMoveToIntReg	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::ARMMoveToIntReg(EVT VT, unsigned SrcReg) {$/;"	f	class:ARMFastISel
ARMOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  ARMOperand(KindTy K) : MCParsedAsmOperand(), Kind(K) {}$/;"	f	class:__anon261::ARMOperand	file:
ARMOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  ARMOperand(const ARMOperand &o) : MCParsedAsmOperand() {$/;"	f	class:__anon261::ARMOperand
ARMOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^class ARMOperand : public MCParsedAsmOperand {$/;"	c	namespace:__anon261	file:
ARMPCLabelIndex	Target/ARM/ARMISelLowering.h	/^    unsigned ARMPCLabelIndex;$/;"	m	class:llvm::ARMTargetLowering
ARMPassConfig	Target/ARM/ARMTargetMachine.cpp	/^  ARMPassConfig(ARMBaseTargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon293::ARMPassConfig
ARMPassConfig	Target/ARM/ARMTargetMachine.cpp	/^class ARMPassConfig : public TargetPassConfig {$/;"	c	namespace:__anon293	file:
ARMPreAllocLoadStoreOpt	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    ARMPreAllocLoadStoreOpt() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon304::ARMPreAllocLoadStoreOpt
ARMPreAllocLoadStoreOpt	Target/ARM/ARMLoadStoreOptimizer.cpp	/^  struct ARMPreAllocLoadStoreOpt : public MachineFunctionPass{$/;"	s	namespace:__anon304	file:
ARMProcFamily	Target/ARM/ARMSubtarget.h	/^  ARMProcFamilyEnum ARMProcFamily;$/;"	m	class:llvm::ARMSubtarget
ARMProcFamilyEnum	Target/ARM/ARMSubtarget.h	/^  enum ARMProcFamilyEnum {$/;"	g	class:llvm::ARMSubtarget
ARMREGISTERINFO_H	Target/ARM/ARMRegisterInfo.h	15;"	d
ARMRELOCATIONS_H	Target/ARM/ARMRelocations.h	15;"	d
ARMRI	Target/ARM/ARMBaseRegisterInfo.h	/^namespace ARMRI {$/;"	n	namespace:llvm
ARMRegisterInfo	Target/ARM/ARMRegisterInfo.cpp	/^ARMRegisterInfo::ARMRegisterInfo(const ARMBaseInstrInfo &tii,$/;"	f	class:ARMRegisterInfo
ARMRegisterInfo	Target/ARM/ARMRegisterInfo.h	/^struct ARMRegisterInfo : public ARMBaseRegisterInfo {$/;"	s	namespace:llvm
ARMSELECTIONDAGINFO_H	Target/ARM/ARMSelectionDAGInfo.h	15;"	d
ARMSUBTARGET_H	Target/ARM/ARMSubtarget.h	15;"	d
ARMSelectCallOp	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::ARMSelectCallOp(bool UseReg) {$/;"	f	class:ARMFastISel
ARMSelectionDAGInfo	Target/ARM/ARMSelectionDAGInfo.cpp	/^ARMSelectionDAGInfo::ARMSelectionDAGInfo(const TargetMachine &TM)$/;"	f	class:ARMSelectionDAGInfo
ARMSelectionDAGInfo	Target/ARM/ARMSelectionDAGInfo.h	/^class ARMSelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
ARMSimplifyAddress	Target/ARM/ARMFastISel.cpp	/^void ARMFastISel::ARMSimplifyAddress(Address &Addr, EVT VT, bool useAM3) {$/;"	f	class:ARMFastISel
ARMSubtarget	Target/ARM/ARMSubtarget.cpp	/^ARMSubtarget::ARMSubtarget(const std::string &TT, const std::string &CPU,$/;"	f	class:ARMSubtarget
ARMSubtarget	Target/ARM/ARMSubtarget.h	/^class ARMSubtarget : public ARMGenSubtargetInfo {$/;"	c	namespace:llvm
ARMTARGETMACHINE_H	Target/ARM/ARMTargetMachine.h	15;"	d
ARMTargetLowering	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::ARMTargetLowering(TargetMachine &TM)$/;"	f	class:ARMTargetLowering
ARMTargetLowering	Target/ARM/ARMISelLowering.h	/^  class ARMTargetLowering : public TargetLowering {$/;"	c	namespace:llvm
ARMTargetMachine	Target/ARM/ARMTargetMachine.cpp	/^ARMTargetMachine::ARMTargetMachine(const Target &T, StringRef TT,$/;"	f	class:ARMTargetMachine
ARMTargetMachine	Target/ARM/ARMTargetMachine.h	/^class ARMTargetMachine : public ARMBaseTargetMachine {$/;"	c	namespace:llvm
ARMTryEmitSmallMemCpy	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::ARMTryEmitSmallMemCpy(Address Dest, Address Src,$/;"	f	class:ARMFastISel
ARM_ABI_AAPCS	Target/ARM/ARMSubtarget.h	/^    ARM_ABI_AAPCS \/\/ ARM EABI$/;"	e	enum:llvm::ARMSubtarget::__anon299
ARM_ABI_APCS	Target/ARM/ARMSubtarget.h	/^    ARM_ABI_APCS,$/;"	e	enum:llvm::ARMSubtarget::__anon299
ARM_AM	Target/ARM/ARMLoadStoreOptimizer.cpp	/^  namespace ARM_AM {$/;"	n	namespace:llvm	file:
ARM_AM	Target/ARM/ARMSelectionDAGInfo.h	/^namespace ARM_AM {$/;"	n	namespace:llvm
ARM_AM	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^namespace ARM_AM {$/;"	n	namespace:llvm
ARM_ELF_WRITER_INFO_H	Target/ARM/ARMELFWriterInfo.h	15;"	d
ARM_FRAMEINFO_H	Target/ARM/ARMFrameLowering.h	15;"	d
ARM_ISA_use	Target/ARM/ARMBuildAttrs.h	/^    ARM_ISA_use               = 8,$/;"	e	enum:ARMBuildAttrs::AttrType
ARM_MB	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^namespace ARM_MB {$/;"	n	namespace:llvm
ARM_MC	Target/ARM/MCTargetDesc/ARMMCTargetDesc.h	/^namespace ARM_MC {$/;"	n	namespace:llvm
ARM_MLxEntry	Target/ARM/ARMBaseInstrInfo.cpp	/^struct ARM_MLxEntry {$/;"	s	file:
ARM_MLxTable	Target/ARM/ARMBaseInstrInfo.cpp	/^static const ARM_MLxEntry ARM_MLxTable[] = {$/;"	v	file:
ARM_PROC	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^namespace ARM_PROC {$/;"	n	namespace:llvm
ARangeSection	DebugInfo/DWARFContext.h	/^  StringRef ARangeSection;$/;"	m	class:llvm::DWARFContextInMemory
ASMPREFIX	Target/ARM/ARMJITInfo.cpp	43;"	d	file:
ASMPREFIX	Target/Mips/MipsJITInfo.cpp	88;"	d	file:
ASMPREFIX	Target/X86/X86JITInfo.cpp	58;"	d	file:
ASPointerTypes	VMCore/LLVMContextImpl.h	/^  DenseMap<std::pair<Type*, unsigned>, PointerType*> ASPointerTypes;$/;"	m	class:llvm::LLVMContextImpl
ASSERTMESSAGE	Analysis/ProfileVerifierPass.cpp	195;"	d	file:
ASSERT_SORTED	Target/X86/X86FloatingPoint.cpp	603;"	d	file:
ASSERT_SORTED	Target/X86/X86FloatingPoint.cpp	605;"	d	file:
ASSIGN	Support/regexec.c	111;"	d	file:
ASSIGN	Support/regexec.c	64;"	d	file:
ASSIGN	Support/regexec.c	90;"	d	file:
AST	Transforms/Scalar/LICM.cpp	/^    AliasSetTracker &AST;$/;"	m	class:__anon569::LoopPromoter	file:
AST	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    AliasSetTracker *AST;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
ASTCallbackVH	Analysis/AliasSetTracker.cpp	/^AliasSetTracker::ASTCallbackVH::ASTCallbackVH(Value *V, AliasSetTracker *ast)$/;"	f	class:AliasSetTracker::ASTCallbackVH
ASTERN	Support/regcomp.c	134;"	d	file:
ATFile	MC/WinCOFFObjectWriter.cpp	/^  ATFile,$/;"	e	enum:__anon222::AuxiliaryType	file:
ATFunctionDefinition	MC/WinCOFFObjectWriter.cpp	/^  ATFunctionDefinition,$/;"	e	enum:__anon222::AuxiliaryType	file:
ATOMADD64_DAG	Target/ARM/ARMISelLowering.h	/^      ATOMADD64_DAG,$/;"	e	enum:llvm::ARMISD::NodeType
ATOMADD64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMADD64_DAG = ISD::FIRST_TARGET_MEMORY_OPCODE,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMAND64_DAG	Target/ARM/ARMISelLowering.h	/^      ATOMAND64_DAG,$/;"	e	enum:llvm::ARMISD::NodeType
ATOMAND64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMAND64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMCMPXCHG64_DAG	Target/ARM/ARMISelLowering.h	/^      ATOMCMPXCHG64_DAG$/;"	e	enum:llvm::ARMISD::NodeType
ATOMMAX64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMMAX64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMMIN64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMMIN64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMNAND64_DAG	Target/ARM/ARMISelLowering.h	/^      ATOMNAND64_DAG,$/;"	e	enum:llvm::ARMISD::NodeType
ATOMNAND64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMNAND64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMOR64_DAG	Target/ARM/ARMISelLowering.h	/^      ATOMOR64_DAG,$/;"	e	enum:llvm::ARMISD::NodeType
ATOMOR64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMOR64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMSUB64_DAG	Target/ARM/ARMISelLowering.h	/^      ATOMSUB64_DAG,$/;"	e	enum:llvm::ARMISD::NodeType
ATOMSUB64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMSUB64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMSWAP64_DAG	Target/ARM/ARMISelLowering.h	/^      ATOMSWAP64_DAG,$/;"	e	enum:llvm::ARMISD::NodeType
ATOMSWAP64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMSWAP64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMUMAX64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMUMAX64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMUMIN64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMUMIN64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATOMXOR64_DAG	Target/ARM/ARMISelLowering.h	/^      ATOMXOR64_DAG,$/;"	e	enum:llvm::ARMISD::NodeType
ATOMXOR64_DAG	Target/X86/X86ISelLowering.h	/^      ATOMXOR64_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
ATSectionDefinition	MC/WinCOFFObjectWriter.cpp	/^  ATSectionDefinition$/;"	e	enum:__anon222::AuxiliaryType	file:
ATT	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^  ATT = 0, Intel = 1$/;"	e	enum:AsmWriterFlavorTy	file:
ATTRIBUTE_BITS	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  ATTRIBUTE_BITS$/;"	e	enum:attributeBits
ATTRIBUTE_BITS	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	50;"	d
ATTR_max	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  ATTR_max$/;"	e	enum:attributeBits
ATWeakExternal	MC/WinCOFFObjectWriter.cpp	/^  ATWeakExternal,$/;"	e	enum:__anon222::AuxiliaryType	file:
ATbfAndefSymbol	MC/WinCOFFObjectWriter.cpp	/^  ATbfAndefSymbol,$/;"	e	enum:__anon222::AuxiliaryType	file:
AVX	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
AVX2	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
Abbrev	CodeGen/AsmPrinter/DIE.h	/^    DIEAbbrev Abbrev;$/;"	m	class:llvm::DIE
Abbrev	DebugInfo/DWARFContext.h	/^  OwningPtr<DWARFDebugAbbrev> Abbrev;$/;"	m	class:llvm::DWARFContext
AbbrevCollMap	DebugInfo/DWARFDebugAbbrev.h	/^  DWARFAbbreviationDeclarationCollMap AbbrevCollMap;$/;"	m	class:llvm::DWARFDebugAbbrev
AbbrevDecl	DebugInfo/DWARFDebugInfoEntry.h	/^  const DWARFAbbreviationDeclaration *AbbrevDecl;$/;"	m	class:llvm::DWARFDebugInfoEntryMinimal
AbbrevSection	DebugInfo/DWARFContext.h	/^  StringRef AbbrevSection;$/;"	m	class:llvm::DWARFContextInMemory
Abbreviations	CodeGen/AsmPrinter/DwarfDebug.h	/^  std::vector<DIEAbbrev *> Abbreviations;$/;"	m	class:llvm::DwarfDebug
AbbreviationsSet	CodeGen/AsmPrinter/DwarfDebug.h	/^  FoldingSet<DIEAbbrev> AbbreviationsSet;$/;"	m	class:llvm::DwarfDebug
Abbrevs	DebugInfo/DWARFCompileUnit.h	/^  const DWARFAbbreviationDeclarationSet *Abbrevs;$/;"	m	class:llvm::DWARFCompileUnit
AbortFn	Transforms/Utils/LowerInvoke.cpp	/^    Constant *AbortFn;$/;"	m	class:__anon474::LowerInvoke	file:
Abs	Transforms/Scalar/SimplifyLibCalls.cpp	/^    FFSOpt FFS; AbsOpt Abs; IsDigitOpt IsDigit; IsAsciiOpt IsAscii;$/;"	m	class:__anon546::SimplifyLibCalls	file:
AbsOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct AbsOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
AbsVar	CodeGen/AsmPrinter/DwarfDebug.h	/^  DbgVariable *AbsVar;               \/\/ Corresponding Abstract variable, if any.$/;"	m	class:llvm::DbgVariable
AbsolutePseudoSection	MC/MCSymbol.cpp	/^const MCSection *MCSymbol::AbsolutePseudoSection =$/;"	m	class:MCSymbol	file:
AbstractSPDies	CodeGen/AsmPrinter/DwarfDebug.h	/^  DenseMap<const MDNode *, DIE *> AbstractSPDies;$/;"	m	class:llvm::DwarfDebug
AbstractVariables	CodeGen/AsmPrinter/DwarfDebug.h	/^  DenseMap<const MDNode *, DbgVariable *> AbstractVariables;$/;"	m	class:llvm::DwarfDebug
AccelNames	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  StringMap<std::vector<DIE*> > AccelNames;$/;"	m	class:llvm::CompileUnit
AccelNamespace	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  StringMap<std::vector<DIE*> > AccelNamespace;$/;"	m	class:llvm::CompileUnit
AccelObjC	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  StringMap<std::vector<DIE*> > AccelObjC;$/;"	m	class:llvm::CompileUnit
AccelTypes	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  StringMap<std::vector<std::pair<DIE*, unsigned> > > AccelTypes;$/;"	m	class:llvm::CompileUnit
AccessMode	Object/Archive.cpp	/^  char AccessMode[8];$/;"	m	struct:__anon228::ArchiveMemberHeader	file:
AccessTy	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Type *AccessTy;$/;"	m	class:__anon517::LSRUse	file:
AccessibilityString	Support/Dwarf.cpp	/^const char *llvm::dwarf::AccessibilityString(unsigned Access) {$/;"	f	class:llvm::dwarf
AccessingFunction	Transforms/IPO/GlobalOpt.cpp	/^  const Function *AccessingFunction;$/;"	m	struct:__anon590::GlobalStatus	file:
Action	CodeGen/AsmPrinter/DwarfException.h	/^    unsigned Action;$/;"	m	struct:llvm::DwarfException::CallSiteEntry
Action	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^  unsigned Action;$/;"	m	struct:__anon183::CallSiteEntry	file:
ActionEntry	CodeGen/AsmPrinter/DwarfException.h	/^  struct ActionEntry {$/;"	s	class:llvm::DwarfException
ActionEntry	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^struct ActionEntry {$/;"	s	namespace:__anon183	file:
ActiveBlocks	CodeGen/RegAllocGreedy.cpp	/^    SmallVector<unsigned, 8> ActiveBlocks;$/;"	m	struct:__anon158::RAGreedy::GlobalSplitCandidate	file:
ActiveMacros	MC/MCParser/AsmParser.cpp	/^  std::vector<MacroInstantiation*> ActiveMacros;$/;"	m	class:__anon211::AsmParser	file:
ActiveNodes	CodeGen/SpillPlacement.h	/^  BitVector *ActiveNodes;$/;"	m	class:llvm::SpillPlacement
ActiveTimers	Support/Timer.cpp	/^static ManagedStatic<std::vector<Timer*> > ActiveTimers;$/;"	v	file:
AdSize	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    AdSize      = 1 << 7,$/;"	e	enum:llvm::X86II::__anon350
Add	CodeGen/MachinePassRegistry.cpp	/^void MachinePassRegistry::Add(MachinePassRegistryNode *Node) {$/;"	f	class:MachinePassRegistry
Add	ExecutionEngine/JIT/JIT.cpp	/^  void Add(JIT *jit) {$/;"	f	class:__anon188::JitPool
Add	Transforms/InstCombine/InstCombineWorklist.h	/^  void Add(Instruction *I) {$/;"	f	class:llvm::InstCombineWorklist
AddArangeDescriptors	DebugInfo/DWARFDebugAranges.cpp	/^    AddArangeDescriptors(DWARFDebugAranges::RangeColl &ranges)$/;"	f	class:__anon173::AddArangeDescriptors
AddArangeDescriptors	DebugInfo/DWARFDebugAranges.cpp	/^  class AddArangeDescriptors {$/;"	c	namespace:__anon173	file:
AddArgumentTrackedFunction	Transforms/Scalar/SCCP.cpp	/^  void AddArgumentTrackedFunction(Function *F) {$/;"	f	class:__anon531::SCCPSolver
AddAttribute	CodeGen/AsmPrinter/DIE.h	/^    void AddAttribute(uint16_t Attribute, uint16_t Form) {$/;"	f	class:llvm::DIEAbbrev
AddAvailableValue	CodeGen/MachineSSAUpdater.cpp	/^void MachineSSAUpdater::AddAvailableValue(MachineBasicBlock *BB, unsigned V) {$/;"	f	class:MachineSSAUpdater
AddAvailableValue	Transforms/Utils/SSAUpdater.cpp	/^void SSAUpdater::AddAvailableValue(BasicBlock *BB, Value *V) {$/;"	f	class:SSAUpdater
AddBlankLine	MC/MCAsmStreamer.cpp	/^  virtual void AddBlankLine() {$/;"	f	class:__anon214::MCAsmStreamer
AddBlockAndPredsToSet	Transforms/Utils/LoopSimplify.cpp	/^static void AddBlockAndPredsToSet(BasicBlock *InputBB, BasicBlock *StopBlock,$/;"	f	file:
AddCallSite	ExecutionEngine/JIT/JITEmitter.cpp	/^    void AddCallSite(const MutexGuard &locked, void *CallSite, Function *F) {$/;"	f	class:__anon182::JITResolverState
AddCatchInfo	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^void llvm::AddCatchInfo(const CallInst &I, MachineModuleInfo *MMI,$/;"	f	class:llvm
AddCombineTo64bitMLAL	Target/ARM/ARMISelLowering.cpp	/^static SDValue AddCombineTo64bitMLAL(SDNode *AddcNode,$/;"	f	file:
AddCombineToVPADDL	Target/ARM/ARMISelLowering.cpp	/^static SDValue AddCombineToVPADDL(SDNode *N, SDValue N0, SDValue N1,$/;"	f	file:
AddComment	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::AddComment(const Twine &T) {$/;"	f	class:MCAsmStreamer
AddCommonSymbol	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::AddCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:WinCOFFStreamer
AddCounts	Analysis/ProfileDataLoader.cpp	/^static unsigned AddCounts(unsigned A, unsigned B) {$/;"	f	file:
AddCounts	Analysis/ProfileInfoLoader.cpp	/^static unsigned AddCounts(unsigned A, unsigned B) {$/;"	f	file:
AddCurrentAddress	Target/ARM/ARMConstantPoolValue.h	/^  bool AddCurrentAddress;$/;"	m	class:llvm::ARMConstantPoolValue
AddDReg	Target/ARM/ARMBaseInstrInfo.cpp	/^MachineInstrBuilder &AddDReg(MachineInstrBuilder &MIB,$/;"	f	file:
AddDbgValue	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::AddDbgValue(SDDbgValue *DB, SDNode *SD, bool isParameter) {$/;"	f	class:SelectionDAG
AddDefaultCC	Target/ARM/ARMBaseInstrInfo.h	/^const MachineInstrBuilder &AddDefaultCC(const MachineInstrBuilder &MIB) {$/;"	f	namespace:llvm
AddDefaultPred	Target/ARM/ARMBaseInstrInfo.h	/^const MachineInstrBuilder &AddDefaultPred(const MachineInstrBuilder &MIB) {$/;"	f	namespace:llvm
AddDefaultT1CC	Target/ARM/ARMBaseInstrInfo.h	/^const MachineInstrBuilder &AddDefaultT1CC(const MachineInstrBuilder &MIB,$/;"	f	namespace:llvm
AddDirectiveHandler	MC/MCParser/AsmParser.cpp	/^  virtual void AddDirectiveHandler(MCAsmParserExtension *Object,$/;"	f	class:__anon211::AsmParser
AddDirectiveHandler	MC/MCParser/AsmParser.cpp	/^  void AddDirectiveHandler(StringRef Directive) {$/;"	f	class:__anon211::GenericAsmParser	file:
AddDirectiveHandler	MC/MCParser/COFFAsmParser.cpp	/^  void AddDirectiveHandler(StringRef Directive) {$/;"	f	class:__anon210::COFFAsmParser	file:
AddDirectiveHandler	MC/MCParser/DarwinAsmParser.cpp	/^  void AddDirectiveHandler(StringRef Directive) {$/;"	f	class:__anon208::DarwinAsmParser	file:
AddDirectiveHandler	MC/MCParser/ELFAsmParser.cpp	/^  void AddDirectiveHandler(StringRef Directive) {$/;"	f	class:__anon209::ELFAsmParser	file:
AddEncodingComment	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::AddEncodingComment(const MCInst &Inst) {$/;"	f	class:MCAsmStreamer
AddExtraVersionPrinter	Support/CommandLine.cpp	/^void cl::AddExtraVersionPrinter(void (*func)()) {$/;"	f	class:cl
AddFastCallStdCallSuffix	Target/Mangler.cpp	/^static void AddFastCallStdCallSuffix(SmallVectorImpl<char> &OutName,$/;"	f	file:
AddFeature	MC/SubtargetFeature.cpp	/^void SubtargetFeatures::AddFeature(const StringRef String,$/;"	f	class:SubtargetFeatures
AddFirstAttribute	CodeGen/AsmPrinter/DIE.h	/^    void AddFirstAttribute(uint16_t Attribute, uint16_t Form) {$/;"	f	class:llvm::DIEAbbrev
AddGlue	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^static bool AddGlue(SDNode *N, SDValue Glue, bool AddGlue, SelectionDAG *DAG) {$/;"	f	file:
AddIncludeFile	Support/SourceMgr.cpp	/^unsigned SourceMgr::AddIncludeFile(const std::string &Filename,$/;"	f	class:SourceMgr
AddInitialGroup	Transforms/InstCombine/InstCombineWorklist.h	/^  void AddInitialGroup(Instruction *const *List, unsigned NumEntries) {$/;"	f	class:llvm::InstCombineWorklist
AddInlineAsmOperands	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void RegsForValue::AddInlineAsmOperands(unsigned Code, bool HasMatching,$/;"	f	class:RegsForValue
AddInstr	Target/Mips/MipsAnalyzeImmediate.cpp	/^void MipsAnalyzeImmediate::AddInstr(InstSeqLs &SeqLs, const Inst &I) {$/;"	f	class:MipsAnalyzeImmediate
AddInteger	Support/FoldingSet.cpp	/^void FoldingSetNodeID::AddInteger(long I) {$/;"	f	class:FoldingSetNodeID
AddInteger	Support/FoldingSet.cpp	/^void FoldingSetNodeID::AddInteger(long long I) {$/;"	f	class:FoldingSetNodeID
AddInteger	Support/FoldingSet.cpp	/^void FoldingSetNodeID::AddInteger(signed I) {$/;"	f	class:FoldingSetNodeID
AddInteger	Support/FoldingSet.cpp	/^void FoldingSetNodeID::AddInteger(unsigned I) {$/;"	f	class:FoldingSetNodeID
AddInteger	Support/FoldingSet.cpp	/^void FoldingSetNodeID::AddInteger(unsigned long I) {$/;"	f	class:FoldingSetNodeID
AddInteger	Support/FoldingSet.cpp	/^void FoldingSetNodeID::AddInteger(unsigned long long I) {$/;"	f	class:FoldingSetNodeID
AddLandingPadInfo	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^void llvm::AddLandingPadInfo(const LandingPadInst &I, MachineModuleInfo &MMI,$/;"	f	class:llvm
AddLegalizedOperand	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^  void AddLegalizedOperand(SDValue From, SDValue To) {$/;"	f	class:__anon72::VectorLegalizer	file:
AddLiveIn	Target/Mips/MipsISelLowering.cpp	/^AddLiveIn(MachineFunction &MF, unsigned PReg, const TargetRegisterClass *RC)$/;"	f	file:
AddLoadStoreOperands	Target/ARM/ARMFastISel.cpp	/^void ARMFastISel::AddLoadStoreOperands(EVT VT, Address &Addr,$/;"	f	class:ARMFastISel
AddModifiedNodeToCSEMaps	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::AddModifiedNodeToCSEMaps(SDNode *N) {$/;"	f	class:SelectionDAG
AddName	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::AddName(StringRef Name, DIE* die, char Flags) {$/;"	f	class:DwarfAccelTable
AddNoAliasAttrs	Transforms/IPO/FunctionAttrs.cpp	/^bool FunctionAttrs::AddNoAliasAttrs(const CallGraphSCC &SCC) {$/;"	f	class:FunctionAttrs
AddNoCaptureAttrs	Transforms/IPO/FunctionAttrs.cpp	/^bool FunctionAttrs::AddNoCaptureAttrs(const CallGraphSCC &SCC) {$/;"	f	class:FunctionAttrs
AddNoT1CC	Target/ARM/ARMBaseInstrInfo.h	/^const MachineInstrBuilder &AddNoT1CC(const MachineInstrBuilder &MIB) {$/;"	f	namespace:llvm
AddNodeID	Support/FoldingSet.cpp	/^void FoldingSetNodeID::AddNodeID(const FoldingSetNodeID &ID) {$/;"	f	class:FoldingSetNodeID
AddNodeIDCustom	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void AddNodeIDCustom(FoldingSetNodeID &ID, const SDNode *N) {$/;"	f	file:
AddNodeIDNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void AddNodeIDNode(FoldingSetNodeID &ID, const SDNode *N) {$/;"	f	file:
AddNodeIDNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void AddNodeIDNode(FoldingSetNodeID &ID,$/;"	f	file:
AddNodeIDOpcode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void AddNodeIDOpcode(FoldingSetNodeID &ID, unsigned OpC)  {$/;"	f	file:
AddNodeIDOperands	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void AddNodeIDOperands(FoldingSetNodeID &ID,$/;"	f	file:
AddNodeIDValueTypes	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void AddNodeIDValueTypes(FoldingSetNodeID &ID, SDVTList VTList) {$/;"	f	file:
AddOne	Transforms/InstCombine/InstCombineAddSub.cpp	/^static Constant *AddOne(Constant *C) {$/;"	f	file:
AddOne	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static Constant *AddOne(Constant *C) {$/;"	f	file:
AddOne	Transforms/InstCombine/InstCombineCompares.cpp	/^static Constant *AddOne(Constant *C) {$/;"	f	file:
AddOperand	CodeGen/SelectionDAG/InstrEmitter.cpp	/^void InstrEmitter::AddOperand(MachineInstr *MI, SDValue Op,$/;"	f	class:InstrEmitter
AddOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^void SimplifyLibCalls::AddOpt(LibFunc::Func F, LibCallOptimization* Opt) {$/;"	f	class:SimplifyLibCalls
AddOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^void SimplifyLibCalls::AddOpt(LibFunc::Func F1, LibFunc::Func F2,$/;"	f	class:SimplifyLibCalls
AddOptionalDefs	Target/ARM/ARMFastISel.cpp	/^ARMFastISel::AddOptionalDefs(const MachineInstrBuilder &MIB) {$/;"	f	class:ARMFastISel
AddPHINodeEntriesForMappedBlock	Transforms/Scalar/JumpThreading.cpp	/^static void AddPHINodeEntriesForMappedBlock(BasicBlock *PHIBB,$/;"	f	file:
AddPHIOperand	CodeGen/MachineSSAUpdater.cpp	/^  static void AddPHIOperand(MachineInstr *PHI, unsigned Val,$/;"	f	class:llvm::SSAUpdaterTraits
AddPHIOperand	Transforms/Utils/SSAUpdater.cpp	/^  static void AddPHIOperand(PHINode *PHI, Value *Val, BasicBlock *Pred) {$/;"	f	class:llvm::SSAUpdaterTraits
AddPointer	Support/FoldingSet.cpp	/^void FoldingSetNodeID::AddPointer(const void *Ptr) {$/;"	f	class:FoldingSetNodeID
AddPred	CodeGen/ScheduleDAG.cpp	/^void ScheduleDAGTopologicalSort::AddPred(SUnit *Y, SUnit *X) {$/;"	f	class:ScheduleDAGTopologicalSort
AddPred	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  void AddPred(SUnit *SU, const SDep &D) {$/;"	f	class:__anon86::ScheduleDAGFast
AddPred	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  void AddPred(SUnit *SU, const SDep &D) {$/;"	f	class:__anon76::ScheduleDAGRRList
AddPredecessorToBlock	Transforms/Utils/SimplifyCFG.cpp	/^static void AddPredecessorToBlock(BasicBlock *Succ, BasicBlock *NewPred,$/;"	f	file:
AddPrototypes	CodeGen/IntrinsicLowering.cpp	/^void IntrinsicLowering::AddPrototypes(Module &M) {$/;"	f	class:IntrinsicLowering
AddPseudoTwoAddrDeps	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void RegReductionPQBase::AddPseudoTwoAddrDeps() {$/;"	f	class:RegReductionPQBase
AddReachableCodeToWorklist	Transforms/InstCombine/InstructionCombining.cpp	/^static bool AddReachableCodeToWorklist(BasicBlock *BB,$/;"	f	file:
AddReadAttrs	Transforms/IPO/FunctionAttrs.cpp	/^bool FunctionAttrs::AddReadAttrs(const CallGraphSCC &SCC) {$/;"	f	class:FunctionAttrs
AddRecCost	Transforms/Scalar/LoopStrengthReduce.cpp	/^  unsigned AddRecCost;$/;"	m	class:__anon515::Cost	file:
AddReductionVar	Transforms/Vectorize/LoopVectorize.cpp	/^bool LoopVectorizationLegality::AddReductionVar(PHINode *Phi,$/;"	f	class:__anon605::LoopVectorizationLegality
AddRef	VMCore/Attributes.cpp	/^  void AddRef() {$/;"	f	class:llvm::AttributeListImpl
AddRegFrm	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    AddRegFrm      = 2,$/;"	e	enum:llvm::X86II::__anon350
AddRegOperandsToUseLists	CodeGen/MachineInstr.cpp	/^void MachineInstr::AddRegOperandsToUseLists(MachineRegisterInfo &MRI) {$/;"	f	class:MachineInstr
AddRegisterOperand	CodeGen/SelectionDAG/InstrEmitter.cpp	/^InstrEmitter::AddRegisterOperand(MachineInstr *MI, SDValue Op,$/;"	f	class:InstrEmitter
AddSSAUpdateEntry	CodeGen/TailDuplication.cpp	/^void TailDuplicatePass::AddSSAUpdateEntry(unsigned OrigReg, unsigned NewReg,$/;"	f	class:TailDuplicatePass
AddSchedEdges	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::AddSchedEdges() {$/;"	f	class:ScheduleDAGSDNodes
AddString	Support/FoldingSet.cpp	/^void FoldingSetNodeID::AddString(StringRef String) {$/;"	f	class:FoldingSetNodeID
AddSubClass	TableGen/TGParser.cpp	/^bool TGParser::AddSubClass(Record *CurRec, SubClassReference &SubClass) {$/;"	f	class:TGParser
AddSubFlagsOpcodeMap	Target/ARM/ARMBaseInstrInfo.cpp	/^static const AddSubFlagsOpcodePair AddSubFlagsOpcodeMap[] = {$/;"	v	file:
AddSubFlagsOpcodePair	Target/ARM/ARMBaseInstrInfo.cpp	/^struct AddSubFlagsOpcodePair {$/;"	s	file:
AddSubMultiClass	TableGen/TGParser.cpp	/^bool TGParser::AddSubMultiClass(MultiClass *CurMC,$/;"	f	class:TGParser
AddSubOpc	Target/ARM/ARMBaseInstrInfo.cpp	/^  uint16_t AddSubOpc;  \/\/ Expanded add \/ sub opcode$/;"	m	struct:ARM_MLxEntry	file:
AddSymbol	Support/DynamicLibrary.cpp	/^void llvm::sys::DynamicLibrary::AddSymbol(StringRef symbolName,$/;"	f	class:llvm::sys::DynamicLibrary
AddTableEntry	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::AddTableEntry(RegOp2MemOpTableType &R2MTable,$/;"	f	class:X86InstrInfo
AddThumb1SBit	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static void AddThumb1SBit(MCInst &MI, bool InITBlock) {$/;"	f	file:
AddThumbPredicate	Target/ARM/Disassembler/ARMDisassembler.cpp	/^ThumbDisassembler::AddThumbPredicate(MCInst &MI) const {$/;"	f	class:ThumbDisassembler
AddToExistingUseList	VMCore/Value.cpp	/^void ValueHandleBase::AddToExistingUseList(ValueHandleBase **List) {$/;"	f	class:ValueHandleBase
AddToExistingUseListAfter	VMCore/Value.cpp	/^void ValueHandleBase::AddToExistingUseListAfter(ValueHandleBase *List) {$/;"	f	class:ValueHandleBase
AddToFreeList	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void AddToFreeList(FreeRangeHeader *FreeList) {$/;"	f	struct:__anon189::FreeRangeHeader
AddToLiveIns	CodeGen/MachineLICM.cpp	/^void MachineLICM::AddToLiveIns(unsigned Reg) {$/;"	f	class:MachineLICM
AddToUseList	VMCore/Value.cpp	/^void ValueHandleBase::AddToUseList() {$/;"	f	class:ValueHandleBase
AddToWorkList	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    void AddToWorkList(SDNode *N) {$/;"	f	class:__anon68::DAGCombiner
AddToWorklist	CodeGen/SelectionDAG/DAGCombiner.cpp	/^void TargetLowering::DAGCombinerInfo::AddToWorklist(SDNode *N) {$/;"	f	class:TargetLowering::DAGCombinerInfo
AddTrackedFunction	Transforms/Scalar/SCCP.cpp	/^  void AddTrackedFunction(Function *F) {$/;"	f	class:__anon531::SCCPSolver
AddUser	Analysis/IVUsers.cpp	/^IVStrideUse &IVUsers::AddUser(Instruction *User, Value *Operand) {$/;"	f	class:IVUsers
AddUsersIfInteresting	Analysis/IVUsers.cpp	/^bool IVUsers::AddUsersIfInteresting(Instruction *I) {$/;"	f	class:IVUsers
AddUsersImpl	Analysis/IVUsers.cpp	/^bool IVUsers::AddUsersImpl(Instruction *I,$/;"	f	class:IVUsers
AddUsersToWorkList	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    void AddUsersToWorkList(SDNode *N) {$/;"	f	class:__anon68::DAGCombiner	file:
AddUsersToWorkList	Transforms/InstCombine/InstCombineWorklist.h	/^  void AddUsersToWorkList(Instruction &I) {$/;"	f	class:llvm::InstCombineWorklist
AddValue	TableGen/TGParser.cpp	/^bool TGParser::AddValue(Record *CurRec, SMLoc Loc, const RecordVal &RV) {$/;"	f	class:TGParser
AddValue	Transforms/InstCombine/InstCombineWorklist.h	/^  void AddValue(Value *V) {$/;"	f	class:llvm::InstCombineWorklist
AddValueSymbols	MC/MCObjectStreamer.cpp	/^const MCExpr *MCObjectStreamer::AddValueSymbols(const MCExpr *Value) {$/;"	f	class:MCObjectStreamer
AddValueSymbols	Target/ARM/MCTargetDesc/ARMMCExpr.cpp	/^void ARMMCExpr::AddValueSymbols(MCAssembler *Asm) const {$/;"	f	class:ARMMCExpr
AddValueSymbols_	Target/ARM/MCTargetDesc/ARMMCExpr.cpp	/^static void AddValueSymbols_(const MCExpr *Value, MCAssembler *Asm) {$/;"	f	file:
AddWithOverflow	Transforms/InstCombine/InstCombineCompares.cpp	/^static bool AddWithOverflow(Constant *&Result, Constant *In1,$/;"	f	file:
Addend	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  intptr_t  Addend;$/;"	m	class:llvm::RelocationValueRef
Addend	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  intptr_t Addend;$/;"	m	class:llvm::RelocationEntry
AdditionalInfo	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  int64_t   AdditionalInfo;$/;"	m	class:llvm::ObjRelocationInfo
AddrBaseReg	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    AddrBaseReg = 0,$/;"	e	enum:llvm::X86::__anon349
AddrDisp	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    AddrDisp = 3,$/;"	e	enum:llvm::X86::__anon349
AddrIndexReg	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    AddrIndexReg = 2,$/;"	e	enum:llvm::X86::__anon349
AddrLabelSymEntry	CodeGen/MachineModuleInfo.cpp	/^  struct AddrLabelSymEntry {$/;"	s	class:llvm::MMIAddrLabelMap	file:
AddrLabelSymbols	CodeGen/MachineModuleInfo.cpp	/^  DenseMap<AssertingVH<BasicBlock>, AddrLabelSymEntry> AddrLabelSymbols;$/;"	m	class:llvm::MMIAddrLabelMap	file:
AddrMode	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  enum AddrMode {$/;"	g	namespace:llvm::ARMII
AddrMode1	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrMode1       = 1,$/;"	e	enum:llvm::ARMII::AddrMode
AddrMode2	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrMode2       = 2,$/;"	e	enum:llvm::ARMII::AddrMode
AddrMode2Type	Target/ARM/ARMISelDAGToDAG.cpp	/^enum AddrMode2Type {$/;"	g	namespace:__anon302	file:
AddrMode3	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrMode3       = 3,$/;"	e	enum:llvm::ARMII::AddrMode
AddrMode4	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrMode4       = 4,$/;"	e	enum:llvm::ARMII::AddrMode
AddrMode5	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrMode5       = 5,$/;"	e	enum:llvm::ARMII::AddrMode
AddrMode6	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrMode6       = 6,$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeMask	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeMask  = 0x1f, \/\/ The AddrMode enums are declared in ARMBaseInfo.h$/;"	e	enum:llvm::ARMII::__anon288
AddrModeNone	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeNone    = 0,$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeT1_1	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeT1_1    = 7,$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeT1_2	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeT1_2    = 8,$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeT1_4	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeT1_4    = 9,$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeT1_s	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeT1_s    = 10, \/\/ i8 * 4 for pc and sp relative data$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeT2_i12	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeT2_i12  = 11,$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeT2_i8	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeT2_i8   = 12,$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeT2_i8s4	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeT2_i8s4 = 15, \/\/ i8 * 4$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeT2_pc	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeT2_pc   = 14, \/\/ +\/- i12 for pc relative data$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeT2_so	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrModeT2_so   = 13,$/;"	e	enum:llvm::ARMII::AddrMode
AddrModeToString	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  inline static const char *AddrModeToString(AddrMode addrmode) {$/;"	f	namespace:llvm::ARMII
AddrMode_i12	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    AddrMode_i12    = 16$/;"	e	enum:llvm::ARMII::AddrMode
AddrNumOperands	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    AddrNumOperands = 5$/;"	e	enum:llvm::X86::__anon349
AddrOpc	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  enum AddrOpc {$/;"	g	namespace:llvm::ARM_AM
AddrScaleAmt	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    AddrScaleAmt = 1,$/;"	e	enum:llvm::X86::__anon349
AddrSegmentReg	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    AddrSegmentReg = 4,$/;"	e	enum:llvm::X86::__anon349
AddrSize	DebugInfo/DWARFCompileUnit.h	/^  uint8_t AddrSize;$/;"	m	class:llvm::DWARFCompileUnit
AddrSize	DebugInfo/DWARFDebugArangeSet.h	/^    uint8_t AddrSize;$/;"	m	struct:llvm::DWARFDebugArangeSet::Header
Address	DebugInfo/DWARFDebugArangeSet.cpp	/^    const uint64_t Address;$/;"	m	class:__anon171::DescriptorContainsAddress	file:
Address	DebugInfo/DWARFDebugArangeSet.h	/^    uint64_t Address;$/;"	m	struct:llvm::DWARFDebugArangeSet::Descriptor
Address	DebugInfo/DWARFDebugLine.h	/^    uint64_t Address;$/;"	m	struct:llvm::DWARFDebugLine::Row
Address	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uint8_t *Address;$/;"	m	class:llvm::SectionEntry
Address	Target/ARM/ARMFastISel.cpp	/^    Address()$/;"	f	struct:__anon307::Address
Address	Target/ARM/ARMFastISel.cpp	/^  typedef struct Address {$/;"	s	namespace:__anon307	file:
Address	Target/ARM/ARMFastISel.cpp	/^  } Address;$/;"	t	namespace:__anon307	typeref:struct:__anon307::Address	file:
Address	Target/Mips/MipsLongBranch.cpp	/^    uint64_t Size, Address;$/;"	m	struct:__anon437::MBBInfo	file:
Address	Transforms/Scalar/LoopStrengthReduce.cpp	/^    Address, \/\/\/< An address use; folding according to TargetLowering$/;"	e	enum:__anon517::LSRUse::KindType	file:
AddressIsTaken	Transforms/Scalar/SCCP.cpp	/^static bool AddressIsTaken(const GlobalValue *GV) {$/;"	f	file:
AddressSanitizer	Transforms/Instrumentation/AddressSanitizer.cpp	/^AddressSanitizer::AddressSanitizer() : FunctionPass(ID) { }$/;"	f	class:AddressSanitizer
AddressSanitizer	Transforms/Instrumentation/AddressSanitizer.cpp	/^struct AddressSanitizer : public FunctionPass {$/;"	s	namespace:__anon491	file:
AddressSize	DebugInfo/DWARFDebugRangeList.h	/^  uint8_t AddressSize;$/;"	m	class:llvm::DWARFDebugRangeList
AddressSpace	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^enum AddressSpace {$/;"	g	namespace:llvm
AddressSpace	Target/NVPTX/NVPTX.h	/^enum AddressSpace{$/;"	g	namespace:llvm::NVPTX::PTXLdStInstCode
AdjustInsertPositionForExpand	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::AdjustInsertPositionForExpand(BasicBlock::iterator LowestIP,$/;"	f	class:LSRInstance
AdjustInstrPostInstrSelection	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^void TargetLowering::AdjustInstrPostInstrSelection(MachineInstr *MI,$/;"	f	class:TargetLowering
AdjustInstrPostInstrSelection	Target/ARM/ARMISelLowering.cpp	/^void ARMTargetLowering::AdjustInstrPostInstrSelection(MachineInstr *MI,$/;"	f	class:ARMTargetLowering
AdjustPriorityOfUnscheduledPreds	CodeGen/LatencyPriorityQueue.cpp	/^void LatencyPriorityQueue::AdjustPriorityOfUnscheduledPreds(SUnit *SU) {$/;"	f	class:LatencyPriorityQueue
AdjustStackOffset	CodeGen/LocalStackSlotAllocation.cpp	/^void LocalStackSlotPass::AdjustStackOffset(MachineFrameInfo *MFI,$/;"	f	class:LocalStackSlotPass
AdjustStackOffset	CodeGen/PrologEpilogInserter.cpp	/^AdjustStackOffset(MachineFrameInfo *MFI, int FrameIdx,$/;"	f	file:
AdjustToPrecision	Support/APFloat.cpp	/^  void AdjustToPrecision(APInt &significand,$/;"	f	namespace:__anon235
AdjustToPrecision	Support/APFloat.cpp	/^  void AdjustToPrecision(SmallVectorImpl<char> &buffer,$/;"	f	namespace:__anon235
Advance	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::RegDefIter::Advance() {$/;"	f	class:ScheduleDAGSDNodes::RegDefIter
AdvanceCycle	CodeGen/ScoreboardHazardRecognizer.cpp	/^void ScoreboardHazardRecognizer::AdvanceCycle() {$/;"	f	class:ScoreboardHazardRecognizer
AdvanceCycle	Target/ARM/ARMHazardRecognizer.cpp	/^void ARMHazardRecognizer::AdvanceCycle() {$/;"	f	class:ARMHazardRecognizer
AdvanceCycle	Target/CellSPU/SPUHazardRecognizers.cpp	/^void SPUHazardRecognizer::AdvanceCycle()$/;"	f	class:SPUHazardRecognizer
AdvanceCycle	Target/PowerPC/PPCHazardRecognizers.cpp	/^void PPCHazardRecognizer970::AdvanceCycle() {$/;"	f	class:PPCHazardRecognizer970
AdvanceCycle	Target/PowerPC/PPCHazardRecognizers.cpp	/^void PPCScoreboardHazardRecognizer::AdvanceCycle() {$/;"	f	class:PPCScoreboardHazardRecognizer
AdvancePastStalls	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::AdvancePastStalls(SUnit *SU) {$/;"	f	class:ScheduleDAGRRList
AdvanceRS	Target/ARM/ARMLoadStoreOptimizer.cpp	/^void ARMLoadStoreOpt::AdvanceRS(MachineBasicBlock &MBB, MemOpQueue &MemOps) {$/;"	f	class:ARMLoadStoreOpt
AdvanceToCycle	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::AdvanceToCycle(unsigned NextCycle) {$/;"	f	class:ScheduleDAGRRList
Advanced_SIMD_arch	Target/ARM/ARMBuildAttrs.h	/^    Advanced_SIMD_arch        = 12,$/;"	e	enum:ARMBuildAttrs::AttrType
AggBuffer	Target/NVPTX/NVPTXAsmPrinter.h	/^    AggBuffer(unsigned _size, raw_ostream &_O, NVPTXAsmPrinter &_AP)$/;"	f	class:llvm::NVPTXAsmPrinter::AggBuffer
AggBuffer	Target/NVPTX/NVPTXAsmPrinter.h	/^  class AggBuffer {$/;"	c	class:llvm::NVPTXAsmPrinter
AggLoadStoreRewriter	Transforms/Scalar/SROA.cpp	/^  AggLoadStoreRewriter(const DataLayout &TD) : TD(TD) {}$/;"	f	class:__anon562::AggLoadStoreRewriter
AggLoadStoreRewriter	Transforms/Scalar/SROA.cpp	/^class AggLoadStoreRewriter : public InstVisitor<AggLoadStoreRewriter, bool> {$/;"	c	namespace:__anon562	file:
AggressiveAntiDepBreaker	CodeGen/AggressiveAntiDepBreaker.cpp	/^AggressiveAntiDepBreaker(MachineFunction& MFi,$/;"	f	class:AggressiveAntiDepBreaker
AggressiveAntiDepBreaker	CodeGen/AggressiveAntiDepBreaker.h	/^  class AggressiveAntiDepBreaker : public AntiDepBreaker {$/;"	c	namespace:llvm
AggressiveAntiDepState	CodeGen/AggressiveAntiDepBreaker.cpp	/^AggressiveAntiDepState::AggressiveAntiDepState(const unsigned TargetRegs,$/;"	f	class:AggressiveAntiDepState
AggressiveAntiDepState	CodeGen/AggressiveAntiDepBreaker.h	/^  class AggressiveAntiDepState {$/;"	c	namespace:llvm
AliasAnalysisCounter	Analysis/AliasAnalysisCounter.cpp	/^    AliasAnalysisCounter() : ModulePass(ID) {$/;"	f	class:__anon43::AliasAnalysisCounter
AliasAnalysisCounter	Analysis/AliasAnalysisCounter.cpp	/^  class AliasAnalysisCounter : public ModulePass, public AliasAnalysis {$/;"	c	namespace:__anon43	file:
AliasCache	Analysis/BasicAliasAnalysis.cpp	/^    AliasCacheTy AliasCache;$/;"	m	struct:__anon15::BasicAliasAnalysis	file:
AliasCacheTy	Analysis/BasicAliasAnalysis.cpp	/^    typedef SmallDenseMap<LocPair, AliasResult, 8> AliasCacheTy;$/;"	t	struct:__anon15::BasicAliasAnalysis	file:
AliasDebugger	Analysis/AliasDebugger.cpp	/^    AliasDebugger() : ModulePass(ID) {$/;"	f	class:__anon44::AliasDebugger
AliasDebugger	Analysis/AliasDebugger.cpp	/^  class AliasDebugger : public ModulePass, public AliasAnalysis {$/;"	c	namespace:__anon44	file:
AliasInits	Bitcode/Reader/BitcodeReader.h	/^  std::vector<std::pair<GlobalAlias*, unsigned> > AliasInits;$/;"	m	class:llvm::BitcodeReader
AliasMap	CodeGen/ExecutionDepsFix.cpp	/^  std::vector<int> AliasMap;$/;"	m	class:__anon120::ExeDepsFix	file:
AliasSetPrinter	Analysis/AliasSetTracker.cpp	/^    AliasSetPrinter() : FunctionPass(ID) {$/;"	f	class:__anon35::AliasSetPrinter
AliasSetPrinter	Analysis/AliasSetTracker.cpp	/^  class AliasSetPrinter : public FunctionPass {$/;"	c	namespace:__anon35	file:
AliasedSymbol	MC/MCSymbol.cpp	/^const MCSymbol &MCSymbol::AliasedSymbol() const {$/;"	f	class:MCSymbol
Aliases	Analysis/TypeBasedAliasAnalysis.cpp	/^TypeBasedAliasAnalysis::Aliases(const MDNode *A,$/;"	f	class:TypeBasedAliasAnalysis
Align	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    unsigned Align;    \/\/ CP alignment.$/;"	m	struct:__anon392::MSP430ISelAddressMode	file:
Align	Target/X86/X86ISelDAGToDAG.cpp	/^    unsigned Align;    \/\/ CP alignment.$/;"	m	struct:__anon371::X86ISelAddressMode	file:
AlignLoop	CodeGen/CodePlacementOpt.cpp	/^bool CodePlacementOpt::AlignLoop(MachineFunction &MF, MachineLoop *L,$/;"	f	class:CodePlacementOpt
AlignLoops	CodeGen/CodePlacementOpt.cpp	/^bool CodePlacementOpt::AlignLoops(MachineFunction &MF) {$/;"	f	class:CodePlacementOpt
AlignPtr	Support/Allocator.cpp	/^char *BumpPtrAllocator::AlignPtr(char *Ptr, size_t Alignment) {$/;"	f	class:llvm::BumpPtrAllocator
Alignment	CodeGen/AsmPrinter/AsmPrinter.cpp	/^    unsigned Alignment;$/;"	m	struct:__anon65::SectionCPs	file:
Alignment	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Alignment;       \/\/ 0 = no alignment specified$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon275	file:
Alignment	Transforms/Scalar/LICM.cpp	/^    int Alignment;$/;"	m	class:__anon569::LoopPromoter	file:
Alignment	Transforms/Scalar/MemCpyOptimizer.cpp	/^  unsigned Alignment;$/;"	m	struct:__anon573::MemsetRange	file:
AliveGlobals	Transforms/IPO/GlobalDCE.cpp	/^    SmallPtrSet<GlobalValue*, 32> AliveGlobals;$/;"	m	struct:__anon588::GlobalDCE	file:
AllButMain	Transforms/IPO/Internalize.cpp	/^    bool AllButMain;$/;"	m	class:__anon593::InternalizePass	file:
AllCallersPassInValidPointerForArgument	Transforms/IPO/ArgumentPromotion.cpp	/^static bool AllCallersPassInValidPointerForArgument(Argument *Arg) {$/;"	f	file:
AllColors	CodeGen/StackSlotColoring.cpp	/^    BitVector AllColors;$/;"	m	class:__anon94::StackSlotColoring	file:
AllDefsAreReloads	CodeGen/InlineSpiller.cpp	/^    bool AllDefsAreReloads;$/;"	m	struct:__anon155::InlineSpiller::SibValueInfo	file:
AllFixupsOutsideLoop	Transforms/Scalar/LoopStrengthReduce.cpp	/^  bool AllFixupsOutsideLoop;$/;"	m	class:__anon517::LSRUse	file:
AllGlobalLoadUsesSimpleEnoughForHeapSRA	Transforms/IPO/GlobalOpt.cpp	/^static bool AllGlobalLoadUsesSimpleEnoughForHeapSRA(const GlobalVariable *GV,$/;"	f	file:
AllJits	ExecutionEngine/JIT/JIT.cpp	/^ManagedStatic<JitPool> AllJits;$/;"	m	namespace:__anon188	file:
AllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^enum VectorLaneTy { NoLanes, AllLanes, IndexedLane };$/;"	e	enum:__anon259::VectorLaneTy	file:
AllUsesDominatedByBlock	CodeGen/MachineSink.cpp	/^MachineSinking::AllUsesDominatedByBlock(unsigned Reg,$/;"	f	class:MachineSinking
AllUsesDominatedByBlock	Transforms/Scalar/Sink.cpp	/^bool Sinking::AllUsesDominatedByBlock(Instruction *Inst,$/;"	f	class:Sinking
AllUsesOfLoadedValueWillTrapIfNull	Transforms/IPO/GlobalOpt.cpp	/^static bool AllUsesOfLoadedValueWillTrapIfNull(const GlobalVariable *GV) {$/;"	f	file:
AllUsesOfValueWillTrapIfNull	Transforms/IPO/GlobalOpt.cpp	/^static bool AllUsesOfValueWillTrapIfNull(const Value *V,$/;"	f	file:
Alloc	CodeGen/LiveRangeCalc.h	/^  VNInfo::Allocator *Alloc;$/;"	m	class:llvm::LiveRangeCalc
Alloc	Support/YAMLParser.cpp	/^  BumpPtrAllocator Alloc;$/;"	m	struct:llvm::ilist_node_traits	file:
AllocFnsTy	Analysis/MemoryBuiltins.cpp	/^struct AllocFnsTy {$/;"	s	file:
AllocLike	Analysis/MemoryBuiltins.cpp	/^  AllocLike          = MallocLike | CallocLike | StrDupLike,$/;"	e	enum:AllocType	file:
AllocSize	Transforms/Scalar/SROA.cpp	/^  const uint64_t AllocSize;$/;"	m	class:AllocaPartitioning::BuilderBase	file:
AllocTy	Analysis/MemoryBuiltins.cpp	/^  AllocType AllocTy;$/;"	m	struct:AllocFnsTy	file:
AllocType	Analysis/MemoryBuiltins.cpp	/^enum AllocType {$/;"	g	file:
AllocaAdjustInsts	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  std::vector<MachineInstr*> AllocaAdjustInsts;$/;"	m	class:llvm::HexagonMachineFunctionInfo
AllocaCaptureTracker	Transforms/Scalar/TailRecursionElimination.cpp	/^  AllocaCaptureTracker() : Captured(false) {}$/;"	f	struct:AllocaCaptureTracker
AllocaCaptureTracker	Transforms/Scalar/TailRecursionElimination.cpp	/^struct AllocaCaptureTracker : public CaptureTracker {$/;"	s	file:
AllocaDbgDeclares	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    SmallVector<DbgDeclareInst*, 8> AllocaDbgDeclares;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
AllocaHolder	ExecutionEngine/Interpreter/Interpreter.h	/^  AllocaHolder() : RefCnt(0) {}$/;"	f	class:llvm::AllocaHolder
AllocaHolder	ExecutionEngine/Interpreter/Interpreter.h	/^class AllocaHolder {$/;"	c	namespace:llvm
AllocaHolderHandle	ExecutionEngine/Interpreter/Interpreter.h	/^  AllocaHolderHandle() : H(new AllocaHolder()) { H->RefCnt++; }$/;"	f	class:llvm::AllocaHolderHandle
AllocaHolderHandle	ExecutionEngine/Interpreter/Interpreter.h	/^  AllocaHolderHandle(const AllocaHolderHandle &AH) : H(AH.H) { H->RefCnt++; }$/;"	f	class:llvm::AllocaHolderHandle
AllocaHolderHandle	ExecutionEngine/Interpreter/Interpreter.h	/^class AllocaHolderHandle {$/;"	c	namespace:llvm
AllocaInfo	Transforms/Scalar/ScalarReplAggregates.cpp	/^      explicit AllocaInfo(AllocaInst *ai)$/;"	f	struct:__anon521::SROA::AllocaInfo
AllocaInfo	Transforms/Scalar/ScalarReplAggregates.cpp	/^    struct AllocaInfo {$/;"	s	struct:__anon521::SROA	file:
AllocaInfo	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  struct AllocaInfo {$/;"	s	namespace:__anon469	file:
AllocaInst	VMCore/Instructions.cpp	/^AllocaInst::AllocaInst(Type *Ty, Value *ArraySize, unsigned Align,$/;"	f	class:AllocaInst
AllocaInst	VMCore/Instructions.cpp	/^AllocaInst::AllocaInst(Type *Ty, Value *ArraySize,$/;"	f	class:AllocaInst
AllocaInst	VMCore/Instructions.cpp	/^AllocaInst::AllocaInst(Type *Ty, const Twine &Name,$/;"	f	class:AllocaInst
AllocaLookup	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DenseMap<AllocaInst*, unsigned>  AllocaLookup;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
AllocaPartitionRewriter	Transforms/Scalar/SROA.cpp	/^  AllocaPartitionRewriter(const DataLayout &TD, AllocaPartitioning &P,$/;"	f	class:__anon561::AllocaPartitionRewriter
AllocaPartitionRewriter	Transforms/Scalar/SROA.cpp	/^class AllocaPartitionRewriter : public InstVisitor<AllocaPartitionRewriter,$/;"	c	namespace:__anon561	file:
AllocaPartitioning	Transforms/Scalar/SROA.cpp	/^AllocaPartitioning::AllocaPartitioning(const DataLayout &TD, AllocaInst &AI)$/;"	f	class:AllocaPartitioning
AllocaPartitioning	Transforms/Scalar/SROA.cpp	/^class AllocaPartitioning {$/;"	c	namespace:__anon557	file:
AllocaPointerVal	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    Value *AllocaPointerVal;$/;"	m	struct:__anon469::AllocaInfo	file:
AllocaPromoter	Transforms/Scalar/SROA.cpp	/^  AllocaPromoter(const SmallVectorImpl<Instruction*> &Insts, SSAUpdater &S,$/;"	f	class:__anon558::AllocaPromoter
AllocaPromoter	Transforms/Scalar/SROA.cpp	/^class AllocaPromoter : public LoadAndStorePromoter {$/;"	c	namespace:__anon558	file:
AllocaPromoter	Transforms/Scalar/ScalarReplAggregates.cpp	/^  AllocaPromoter(const SmallVectorImpl<Instruction*> &Insts, SSAUpdater &S,$/;"	f	class:__anon524::AllocaPromoter
AllocaPromoter	Transforms/Scalar/ScalarReplAggregates.cpp	/^class AllocaPromoter : public LoadAndStorePromoter {$/;"	c	namespace:__anon524	file:
AllocaSize	Transforms/Scalar/ScalarReplAggregates.cpp	/^  unsigned AllocaSize;$/;"	m	class:__anon522::ConvertToScalarInfo	file:
AllocaTmps	Transforms/IPO/GlobalOpt.cpp	/^  SmallVector<GlobalVariable*, 32> AllocaTmps;$/;"	m	class:__anon591::Evaluator	file:
Allocas	ExecutionEngine/Interpreter/Interpreter.h	/^  AllocaHolderHandle    Allocas;    \/\/ Track memory allocated by alloca$/;"	m	struct:llvm::ExecutionContext
Allocas	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    std::vector<AllocaInst*> Allocas;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
AllocatableSet	CodeGen/CriticalAntiDepBreaker.h	/^    const BitVector AllocatableSet;$/;"	m	class:llvm::CriticalAntiDepBreaker
Allocate	CodeGen/ScheduleDAG.cpp	/^void ScheduleDAGTopologicalSort::Allocate(int n, int index) {$/;"	f	class:ScheduleDAGTopologicalSort
Allocate	ExecutionEngine/JIT/JITMemoryManager.cpp	/^MemSlab *JITSlabAllocator::Allocate(size_t Size) {$/;"	f	class:JITSlabAllocator
Allocate	Support/Allocator.cpp	/^MemSlab *MallocSlabAllocator::Allocate(size_t Size) {$/;"	f	class:llvm::MallocSlabAllocator
Allocate	Support/Allocator.cpp	/^void *BumpPtrAllocator::Allocate(size_t Size, size_t Alignment) {$/;"	f	class:llvm::BumpPtrAllocator
AllocateBasicBlock	CodeGen/RegAllocFast.cpp	/^void RAFast::AllocateBasicBlock() {$/;"	f	class:RAFast
AllocateBlock	ExecutionEngine/JIT/JITMemoryManager.cpp	/^FreeRangeHeader *FreeRangeHeader::AllocateBlock() {$/;"	f	class:FreeRangeHeader
AllocateBuckets	Support/FoldingSet.cpp	/^static void **AllocateBuckets(unsigned NumBuckets) {$/;"	f	file:
AllocateGOT	ExecutionEngine/JIT/JITMemoryManager.cpp	/^void DefaultJITMemoryManager::AllocateGOT() {$/;"	f	class:DefaultJITMemoryManager
AllocateGVsWithCode	ExecutionEngine/JIT/JIT.h	/^  bool AllocateGVsWithCode;$/;"	m	class:llvm::JIT
AllocateReg	Target/Hexagon/HexagonCallingConvLower.h	/^  unsigned AllocateReg(const unsigned *Regs, const unsigned *ShadowRegs,$/;"	f	class:llvm::Hexagon_CCState
AllocateReg	Target/Hexagon/HexagonCallingConvLower.h	/^  unsigned AllocateReg(const unsigned *Regs, unsigned NumRegs) {$/;"	f	class:llvm::Hexagon_CCState
AllocateReg	Target/Hexagon/HexagonCallingConvLower.h	/^  unsigned AllocateReg(unsigned Reg) {$/;"	f	class:llvm::Hexagon_CCState
AllocateReg	Target/Hexagon/HexagonCallingConvLower.h	/^  unsigned AllocateReg(unsigned Reg, unsigned ShadowReg) {$/;"	f	class:llvm::Hexagon_CCState
AllocateStack	Target/Hexagon/HexagonCallingConvLower.h	/^  unsigned AllocateStack(unsigned Size, unsigned Align) {$/;"	f	class:llvm::Hexagon_CCState
AllocatedSize	Analysis/InlineCost.cpp	/^  uint64_t AllocatedSize;$/;"	m	class:__anon28::CallAnalyzer	file:
AllocationFnData	Analysis/MemoryBuiltins.cpp	/^static const AllocFnsTy AllocationFnData[] = {$/;"	v	file:
AllocationOrder	CodeGen/AllocationOrder.cpp	/^AllocationOrder::AllocationOrder(unsigned VirtReg,$/;"	f	class:AllocationOrder
AllocationOrder	CodeGen/AllocationOrder.h	/^class AllocationOrder {$/;"	c	namespace:llvm
Allocations	ExecutionEngine/Interpreter/Interpreter.h	/^  std::vector<void*> Allocations;$/;"	m	class:llvm::AllocaHolder
Allocator	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  BumpPtrAllocator Allocator;$/;"	m	class:llvm::DwarfAccelTable
Allocator	CodeGen/ExecutionDepsFix.cpp	/^  SpecificBumpPtrAllocator<DomainValue> Allocator;$/;"	m	class:__anon120::ExeDepsFix	file:
Allocator	CodeGen/LiveIntervalUnion.h	/^  typedef LiveSegments::Allocator Allocator;$/;"	t	class:llvm::LiveIntervalUnion
Allocator	CodeGen/SplitKit.h	/^  RegAssignMap::Allocator Allocator;$/;"	m	class:llvm::SplitEditor
Allocator	CodeGen/StrongPHIElimination.cpp	/^    BumpPtrAllocator Allocator;$/;"	m	class:__anon154::StrongPHIElimination	file:
AllocatorTy	CodeGen/MachineCSE.cpp	/^        ScopedHashTableVal<MachineInstr*, unsigned> > AllocatorTy;$/;"	t	class:__anon161::MachineCSE	file:
AllocatorTy	Transforms/Scalar/EarlyCSE.cpp	/^                      ScopedHashTableVal<SimpleValue, Value*> > AllocatorTy;$/;"	t	class:__anon566::EarlyCSE	file:
AllocsForIndirectGlobals	Analysis/IPA/GlobalsModRef.cpp	/^    std::map<const Value*, const GlobalValue*> AllocsForIndirectGlobals;$/;"	m	class:__anon1::GlobalsModRef	file:
AllowFPv2	Target/ARM/ARMBuildAttrs.h	/^    AllowFPv2  = 2, \/\/ v2 FP ISA permitted (implies use of the v1 FP ISA)$/;"	e	enum:ARMBuildAttrs::__anon294
AllowFPv3A	Target/ARM/ARMBuildAttrs.h	/^    AllowFPv3A = 3, \/\/ v3 FP ISA permitted (implies use of the v2 FP ISA)$/;"	e	enum:ARMBuildAttrs::__anon294
AllowFPv3B	Target/ARM/ARMBuildAttrs.h	/^    AllowFPv3B = 4, \/\/ v3 FP ISA permitted, but only D0-D15, S0-S31 $/;"	e	enum:ARMBuildAttrs::__anon294
AllowFPv4A	Target/ARM/ARMBuildAttrs.h	/^    AllowFPv4A = 5, \/\/ v4 FP ISA permitted (implies use of v3 FP ISA) $/;"	e	enum:ARMBuildAttrs::__anon294
AllowFPv4B	Target/ARM/ARMBuildAttrs.h	/^    AllowFPv4B = 6, \/\/ v4 FP ISA was permitted, but only D0-D15, S0-S31$/;"	e	enum:ARMBuildAttrs::__anon294
AllowIEE754	Target/ARM/ARMBuildAttrs.h	/^    AllowIEE754 = 3 \/\/ this code to use all the IEEE 754-defined FP encodings$/;"	e	enum:ARMBuildAttrs::__anon294
AllowRTABI	Target/ARM/ARMBuildAttrs.h	/^    AllowRTABI = 2,  \/\/ numbers, infinities, and one quiet NaN (see [RTABI])$/;"	e	enum:ARMBuildAttrs::__anon294
AllowThumb32	Target/ARM/ARMBuildAttrs.h	/^    AllowThumb32 = 2, \/\/ 32-bit Thumb (implies 16-bit instructions)$/;"	e	enum:ARMBuildAttrs::__anon294
AllowWMMXv1	Target/ARM/ARMBuildAttrs.h	/^    AllowWMMXv1 = 2,  \/\/ The user permitted this entity to use WMMX v2$/;"	e	enum:ARMBuildAttrs::__anon294
Allowed	Target/ARM/ARMBuildAttrs.h	/^    Allowed = 1,$/;"	e	enum:ARMBuildAttrs::__anon294
AllowedExit	Transforms/Vectorize/LoopVectorize.cpp	/^  SmallPtrSet<Value*, 4> AllowedExit;$/;"	m	class:__anon605::LoopVectorizationLegality	file:
AllowedSet	CodeGen/RegAllocPBQP.cpp	/^  typedef std::vector<unsigned> AllowedSet;$/;"	t	class:__anon135::RegAllocPBQP	file:
AllowedSetMap	CodeGen/RegAllocPBQP.cpp	/^  typedef std::vector<AllowedSet> AllowedSetMap;$/;"	t	class:__anon135::RegAllocPBQP	file:
AllowsUnalignedMem	Target/ARM/ARMSubtarget.h	/^  bool AllowsUnalignedMem;$/;"	m	class:llvm::ARMSubtarget
AlmostDeadIV	Transforms/Scalar/IndVarSimplify.cpp	/^static bool AlmostDeadIV(PHINode *Phi, BasicBlock *LatchBlock, Value *Cond) {$/;"	f	file:
AlwaysInline	Analysis/InlineCost.cpp	/^  const bool AlwaysInline;$/;"	m	class:__anon28::CallAnalyzer	file:
AlwaysInliner	Transforms/IPO/InlineAlways.cpp	/^    AlwaysInliner() : Inliner(ID, -2000000000, \/*InsertLifetime*\/true) {$/;"	f	class:__anon577::AlwaysInliner
AlwaysInliner	Transforms/IPO/InlineAlways.cpp	/^    AlwaysInliner(bool InsertLifetime) : Inliner(ID, -2000000000,$/;"	f	class:__anon577::AlwaysInliner
AlwaysInliner	Transforms/IPO/InlineAlways.cpp	/^  class AlwaysInliner : public Inliner {$/;"	c	namespace:__anon577	file:
AnalysisGroupInfo	VMCore/PassRegistry.cpp	/^  struct AnalysisGroupInfo {$/;"	s	struct:__anon607::PassRegistryImpl	file:
AnalysisGroupInfoMap	VMCore/PassRegistry.cpp	/^  DenseMap<const PassInfo*, AnalysisGroupInfo> AnalysisGroupInfoMap;$/;"	m	struct:__anon607::PassRegistryImpl	file:
Analyze	Target/Mips/MipsAnalyzeImmediate.cpp	/^&MipsAnalyzeImmediate::Analyze(uint64_t Imm, unsigned Size,$/;"	f	class:MipsAnalyzeImmediate
AnalyzeAlloca	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    void AnalyzeAlloca(AllocaInst *AI) {$/;"	f	struct:__anon469::AllocaInfo
AnalyzeBlock	CodeGen/IfConversion.cpp	/^IfConverter::BBInfo &IfConverter::AnalyzeBlock(MachineBasicBlock *BB,$/;"	f	class:IfConverter
AnalyzeBlocks	CodeGen/IfConversion.cpp	/^void IfConverter::AnalyzeBlocks(MachineFunction &MF,$/;"	f	class:IfConverter
AnalyzeBranch	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB,MachineBasicBlock *&TBB,$/;"	f	class:ARMBaseInstrInfo
AnalyzeBranch	Target/CellSPU/SPUInstrInfo.cpp	/^SPUInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB, MachineBasicBlock *&TBB,$/;"	f	class:SPUInstrInfo
AnalyzeBranch	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB,$/;"	f	class:HexagonInstrInfo
AnalyzeBranch	Target/MBlaze/MBlazeInstrInfo.cpp	/^bool MBlazeInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB,$/;"	f	class:MBlazeInstrInfo
AnalyzeBranch	Target/MSP430/MSP430InstrInfo.cpp	/^bool MSP430InstrInfo::AnalyzeBranch(MachineBasicBlock &MBB,$/;"	f	class:MSP430InstrInfo
AnalyzeBranch	Target/Mips/MipsInstrInfo.cpp	/^bool MipsInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB,$/;"	f	class:MipsInstrInfo
AnalyzeBranch	Target/NVPTX/NVPTXInstrInfo.cpp	/^bool NVPTXInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB,$/;"	f	class:NVPTXInstrInfo
AnalyzeBranch	Target/PowerPC/PPCInstrInfo.cpp	/^bool PPCInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB,MachineBasicBlock *&TBB,$/;"	f	class:PPCInstrInfo
AnalyzeBranch	Target/Sparc/SparcInstrInfo.cpp	/^bool SparcInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB,$/;"	f	class:SparcInstrInfo
AnalyzeBranch	Target/X86/X86InstrInfo.cpp	/^bool X86InstrInfo::AnalyzeBranch(MachineBasicBlock &MBB,$/;"	f	class:X86InstrInfo
AnalyzeBranch	Target/XCore/XCoreInstrInfo.cpp	/^XCoreInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB, MachineBasicBlock *&TBB,$/;"	f	class:XCoreInstrInfo
AnalyzeCallGraph	Analysis/IPA/GlobalsModRef.cpp	/^void GlobalsModRef::AnalyzeCallGraph(CallGraph &CG, Module &M) {$/;"	f	class:GlobalsModRef
AnalyzeCallOperands	CodeGen/CallingConvLower.cpp	/^void CCState::AnalyzeCallOperands(SmallVectorImpl<MVT> &ArgVTs,$/;"	f	class:CCState
AnalyzeCallOperands	CodeGen/CallingConvLower.cpp	/^void CCState::AnalyzeCallOperands(const SmallVectorImpl<ISD::OutputArg> &Outs,$/;"	f	class:CCState
AnalyzeCallOperands	Target/Hexagon/HexagonCallingConvLower.cpp	/^Hexagon_CCState::AnalyzeCallOperands(SmallVectorImpl<EVT> &ArgVTs,$/;"	f	class:Hexagon_CCState
AnalyzeCallOperands	Target/Hexagon/HexagonCallingConvLower.cpp	/^Hexagon_CCState::AnalyzeCallOperands(const SmallVectorImpl<ISD::OutputArg>$/;"	f	class:Hexagon_CCState
AnalyzeCallResult	CodeGen/CallingConvLower.cpp	/^void CCState::AnalyzeCallResult(MVT VT, CCAssignFn Fn) {$/;"	f	class:CCState
AnalyzeCallResult	CodeGen/CallingConvLower.cpp	/^void CCState::AnalyzeCallResult(const SmallVectorImpl<ISD::InputArg> &Ins,$/;"	f	class:CCState
AnalyzeCallResult	Target/Hexagon/HexagonCallingConvLower.cpp	/^Hexagon_CCState::AnalyzeCallResult(const SmallVectorImpl<ISD::InputArg> &Ins,$/;"	f	class:Hexagon_CCState
AnalyzeCallResult	Target/Hexagon/HexagonCallingConvLower.cpp	/^void Hexagon_CCState::AnalyzeCallResult(EVT VT, Hexagon_CCAssignFn Fn) {$/;"	f	class:Hexagon_CCState
AnalyzeCondBr	Target/Mips/MipsInstrInfo.cpp	/^void MipsInstrInfo::AnalyzeCondBr(const MachineInstr *Inst, unsigned Opc,$/;"	f	class:MipsInstrInfo
AnalyzeFormalArguments	CodeGen/CallingConvLower.cpp	/^CCState::AnalyzeFormalArguments(const SmallVectorImpl<ISD::InputArg> &Ins,$/;"	f	class:CCState
AnalyzeFormalArguments	Target/Hexagon/HexagonCallingConvLower.cpp	/^Hexagon_CCState::AnalyzeFormalArguments(const SmallVectorImpl<ISD::InputArg>$/;"	f	class:Hexagon_CCState
AnalyzeGlobal	Transforms/IPO/GlobalOpt.cpp	/^static bool AnalyzeGlobal(const Value *V, GlobalStatus &GS,$/;"	f	file:
AnalyzeGlobals	Analysis/IPA/GlobalsModRef.cpp	/^void GlobalsModRef::AnalyzeGlobals(Module &M) {$/;"	f	class:GlobalsModRef
AnalyzeIndirectGlobalMemory	Analysis/IPA/GlobalsModRef.cpp	/^bool GlobalsModRef::AnalyzeIndirectGlobalMemory(GlobalValue *GV) {$/;"	f	class:GlobalsModRef
AnalyzeLibCallDetails	Analysis/LibCallAliasAnalysis.cpp	/^LibCallAliasAnalysis::AnalyzeLibCallDetails(const LibCallFunctionInfo *FI,$/;"	f	class:LibCallAliasAnalysis
AnalyzeLoadFromClobberingLoad	Transforms/Scalar/GVN.cpp	/^static int AnalyzeLoadFromClobberingLoad(Type *LoadTy, Value *LoadPtr,$/;"	f	file:
AnalyzeLoadFromClobberingMemInst	Transforms/Scalar/GVN.cpp	/^static int AnalyzeLoadFromClobberingMemInst(Type *LoadTy, Value *LoadPtr,$/;"	f	file:
AnalyzeLoadFromClobberingStore	Transforms/Scalar/GVN.cpp	/^static int AnalyzeLoadFromClobberingStore(Type *LoadTy, Value *LoadPtr,$/;"	f	file:
AnalyzeLoadFromClobberingWrite	Transforms/Scalar/GVN.cpp	/^static int AnalyzeLoadFromClobberingWrite(Type *LoadTy, Value *LoadPtr,$/;"	f	file:
AnalyzeMips64CallOperands	Target/Mips/MipsISelLowering.cpp	/^AnalyzeMips64CallOperands(CCState &CCInfo,$/;"	f	file:
AnalyzeModule	CodeGen/MachineModuleInfo.cpp	/^void MachineModuleInfo::AnalyzeModule(const Module &M) {$/;"	f	class:MachineModuleInfo
AnalyzeNewNode	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDNode *DAGTypeLegalizer::AnalyzeNewNode(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
AnalyzeNewValue	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::AnalyzeNewValue(SDValue &Val) {$/;"	f	class:DAGTypeLegalizer
AnalyzeReturn	CodeGen/CallingConvLower.cpp	/^void CCState::AnalyzeReturn(const SmallVectorImpl<ISD::OutputArg> &Outs,$/;"	f	class:CCState
AnalyzeReturn	Target/Hexagon/HexagonCallingConvLower.cpp	/^Hexagon_CCState::AnalyzeReturn(const SmallVectorImpl<ISD::OutputArg> &Outs,$/;"	f	class:Hexagon_CCState
AnalyzeUsesOfPointer	Analysis/IPA/GlobalsModRef.cpp	/^bool GlobalsModRef::AnalyzeUsesOfPointer(Value *V,$/;"	f	class:GlobalsModRef
AndSlowCase	Support/APInt.cpp	/^APInt APInt::AndSlowCase(const APInt& RHS) const {$/;"	f	class:APInt
AnnotateHappensAfter	Support/Valgrind.cpp	/^void AnnotateHappensAfter(const char *file, int line,$/;"	f
AnnotateHappensBefore	Support/Valgrind.cpp	/^void AnnotateHappensBefore(const char *file, int line,$/;"	f
AnnotateIgnoreWritesBegin	Support/Valgrind.cpp	/^void AnnotateIgnoreWritesBegin(const char *file, int line) {}$/;"	f
AnnotateIgnoreWritesEnd	Support/Valgrind.cpp	/^void AnnotateIgnoreWritesEnd(const char *file, int line) {}$/;"	f
AnnotationNameLen	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^const unsigned AnnotationNameLen = 8; \/\/ length of each annotation name$/;"	m	namespace:llvm
AnnotationWriter	VMCore/AsmWriter.cpp	/^  AssemblyAnnotationWriter *AnnotationWriter;$/;"	m	class:__anon613::AssemblyWriter	file:
AnonStructTypeKeyInfo	VMCore/LLVMContextImpl.h	/^struct AnonStructTypeKeyInfo {$/;"	s	namespace:llvm
AnonStructTypes	VMCore/LLVMContextImpl.h	/^  StructTypeMap AnonStructTypes;$/;"	m	class:llvm::LLVMContextImpl
AntiDepBreak	CodeGen/PostRASchedulerList.cpp	/^    AntiDepBreaker *AntiDepBreak;$/;"	m	class:__anon102::SchedulePostRATDList	file:
AntiDepBreaker	CodeGen/AntiDepBreaker.h	/^class AntiDepBreaker {$/;"	c	namespace:llvm
AntiDepEdges	CodeGen/AggressiveAntiDepBreaker.cpp	/^static void AntiDepEdges(const SUnit *SU, std::vector<const SDep*>& Edges) {$/;"	f	file:
AnticIn	CodeGen/PrologEpilogInserter.h	/^    CSRegBlockMap AnticIn, AnticOut;$/;"	m	class:llvm::PEI
AnticOut	CodeGen/PrologEpilogInserter.h	/^    CSRegBlockMap AnticIn, AnticOut;$/;"	m	class:llvm::PEI
AnyAlloc	Analysis/MemoryBuiltins.cpp	/^  AnyAlloc           = MallocLike | CallocLike | ReallocLike | StrDupLike$/;"	e	enum:AllocType	file:
AppendingVarInfo	Linker/LinkModules.cpp	/^    struct AppendingVarInfo {$/;"	s	class:__anon202::ModuleLinker	file:
AppendingVars	Linker/LinkModules.cpp	/^    std::vector<AppendingVarInfo> AppendingVars;$/;"	m	class:__anon202::ModuleLinker	file:
ApplicationProfile	Target/ARM/ARMBuildAttrs.h	/^    ApplicationProfile = (0x41), \/\/ 'A' (e.g. for Cortex A8)$/;"	e	enum:ARMBuildAttrs::CPUArchProfile
ApplyModifierToExpr	MC/MCParser/AsmParser.cpp	/^AsmParser::ApplyModifierToExpr(const MCExpr *E,$/;"	f	class:AsmParser
ApproximateLoopSize	Transforms/Scalar/LoopUnrollPass.cpp	/^static unsigned ApproximateLoopSize(const Loop *L, unsigned &NumCalls,$/;"	f	file:
ArangeDescriptors	DebugInfo/DWARFDebugArangeSet.h	/^  DescriptorColl ArangeDescriptors;$/;"	m	class:llvm::DWARFDebugArangeSet
Aranges	DebugInfo/DWARFContext.h	/^  OwningPtr<DWARFDebugAranges> Aranges;$/;"	m	class:llvm::DWARFContext
Aranges	DebugInfo/DWARFDebugAranges.h	/^  RangeColl Aranges;$/;"	m	class:llvm::DWARFDebugAranges
Arch	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  Triple::ArchType Arch;$/;"	m	class:llvm::RuntimeDyldImpl
Arch	MC/MCDisassembler/EDDisassembler.cpp	/^  Triple::ArchType Arch;$/;"	m	struct:TripleMap	file:
Archive	Archive/Archive.cpp	/^Archive::Archive(const sys::Path& filename, LLVMContext& C)$/;"	f	class:Archive
Archive	Object/Archive.cpp	/^Archive::Archive(MemoryBuffer *source, error_code &ec)$/;"	f	class:Archive
ArchiveMember	Archive/Archive.cpp	/^ArchiveMember::ArchiveMember()$/;"	f	class:ArchiveMember
ArchiveMember	Archive/Archive.cpp	/^ArchiveMember::ArchiveMember(Archive* PAR)$/;"	f	class:ArchiveMember
ArchiveMemberHeader	Archive/ArchiveInternals.h	/^  class ArchiveMemberHeader {$/;"	c	namespace:llvm
ArchiveMemberHeader	Object/Archive.cpp	/^struct ArchiveMemberHeader {$/;"	s	namespace:__anon228	file:
AreEquivalentAddressValues	Analysis/Loads.cpp	/^static bool AreEquivalentAddressValues(const Value *A, const Value *B) {$/;"	f	file:
ArePredicatesComplements	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::ArePredicatesComplements (MachineInstr* MI1,$/;"	f	class:HexagonPacketizerList
AreStatisticsEnabled	Support/Statistic.cpp	/^bool llvm::AreStatisticsEnabled() {$/;"	f	class:llvm
Arg	MC/MCDisassembler/EDDisassembler.cpp	/^    void *Arg;$/;"	m	class:__anon204::EDMemoryObject	file:
Arg	Target/PowerPC/PPCISelLowering.cpp	/^  SDValue Arg;$/;"	m	struct:__anon328::TailCallArgumentInfo	file:
ArgInfo	AsmParser/LLParser.h	/^      ArgInfo(LocTy L, Type *ty, Attributes Attr, const std::string &N)$/;"	f	struct:llvm::LLParser::ArgInfo
ArgInfo	AsmParser/LLParser.h	/^    struct ArgInfo {$/;"	s	class:llvm::LLParser
ArgPromotion	Transforms/IPO/ArgumentPromotion.cpp	/^    explicit ArgPromotion(unsigned maxElements = 3)$/;"	f	struct:__anon602::ArgPromotion
ArgPromotion	Transforms/IPO/ArgumentPromotion.cpp	/^  struct ArgPromotion : public CallGraphSCCPass {$/;"	s	namespace:__anon602	file:
Argument	VMCore/Function.cpp	/^Argument::Argument(Type *Ty, const Twine &Name, Function *Par)$/;"	f	class:Argument
ArgumentGraph	Transforms/IPO/FunctionAttrs.cpp	/^    ArgumentGraph() { SyntheticRoot.Definition = 0; }$/;"	f	class:__anon579::ArgumentGraph
ArgumentGraph	Transforms/IPO/FunctionAttrs.cpp	/^  class ArgumentGraph {$/;"	c	namespace:__anon579	file:
ArgumentGraphNode	Transforms/IPO/FunctionAttrs.cpp	/^  struct ArgumentGraphNode {$/;"	s	namespace:__anon579	file:
ArgumentMap	Transforms/IPO/FunctionAttrs.cpp	/^    ArgumentMapTy ArgumentMap;$/;"	m	class:__anon579::ArgumentGraph	file:
ArgumentMapTy	Transforms/IPO/FunctionAttrs.cpp	/^    typedef std::map<Argument*, ArgumentGraphNode> ArgumentMapTy;$/;"	t	class:__anon579::ArgumentGraph	file:
ArgumentStackSize	Target/X86/X86MachineFunctionInfo.h	/^  unsigned ArgumentStackSize;$/;"	m	class:llvm::X86MachineFunctionInfo
ArgumentUsesTracker	Transforms/IPO/FunctionAttrs.cpp	/^    ArgumentUsesTracker(const SmallPtrSet<Function*, 8> &SCCNodes)$/;"	f	struct:__anon579::ArgumentUsesTracker
ArgumentUsesTracker	Transforms/IPO/FunctionAttrs.cpp	/^  struct ArgumentUsesTracker : public CaptureTracker {$/;"	s	namespace:__anon579	file:
Arguments	VMCore/PassManager.cpp	/^  None, Arguments, Structure, Executions, Details$/;"	e	enum:llvm::PassDebugLevel	file:
ArgvArray	ExecutionEngine/ExecutionEngine.cpp	/^  ArgvArray() : Array(NULL) {}$/;"	f	class:__anon200::ArgvArray
ArgvArray	ExecutionEngine/ExecutionEngine.cpp	/^class ArgvArray {$/;"	c	namespace:__anon200	file:
ArithMiscFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ArithMiscFrm  = 12 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
Array	CodeGen/LiveIntervalUnion.h	/^    Array() : Size(0), LIUs(0) {}$/;"	f	class:llvm::LiveIntervalUnion::Array
Array	CodeGen/LiveIntervalUnion.h	/^  class Array {$/;"	c	class:llvm::LiveIntervalUnion
Array	ExecutionEngine/ExecutionEngine.cpp	/^  char *Array;$/;"	m	class:__anon200::ArgvArray	file:
Array	Transforms/Utils/SimplifyCFG.cpp	/^    GlobalVariable *Array;$/;"	m	class:__anon480::SwitchLookupTable	file:
ArrayConstants	VMCore/LLVMContextImpl.h	/^  ArrayConstantsTy ArrayConstants;$/;"	m	class:llvm::LLVMContextImpl
ArrayConstantsTy	VMCore/LLVMContextImpl.h	/^  typedef ConstantAggrUniqueMap<ArrayType, ConstantArray> ArrayConstantsTy;$/;"	t	class:llvm::LLVMContextImpl
ArrayElementThreshold	Transforms/Scalar/ScalarReplAggregates.cpp	/^    unsigned ArrayElementThreshold;$/;"	m	struct:__anon521::SROA	file:
ArrayKind	Transforms/Utils/SimplifyCFG.cpp	/^      ArrayKind$/;"	e	enum:__anon480::SwitchLookupTable::__anon481	file:
ArrayOrderString	Support/Dwarf.cpp	/^const char *llvm::dwarf::ArrayOrderString(unsigned Order) {$/;"	f	class:llvm::dwarf
ArrayType	VMCore/Type.cpp	/^ArrayType::ArrayType(Type *ElType, uint64_t NumEl)$/;"	f	class:ArrayType
ArrayTypes	VMCore/LLVMContextImpl.h	/^  DenseMap<std::pair<Type *, uint64_t>, ArrayType*> ArrayTypes;$/;"	m	class:llvm::LLVMContextImpl
AsanCtorFunction	Transforms/Instrumentation/AddressSanitizer.cpp	/^  Function *AsanCtorFunction;$/;"	m	struct:__anon491::AddressSanitizer	file:
AsanErrorCallback	Transforms/Instrumentation/AddressSanitizer.cpp	/^  Function *AsanErrorCallback[2][kNumberOfAccessSizes];$/;"	m	struct:__anon491::AddressSanitizer	file:
AsanHandleNoReturnFunc	Transforms/Instrumentation/AddressSanitizer.cpp	/^  Function *AsanHandleNoReturnFunc;$/;"	m	struct:__anon491::AddressSanitizer	file:
AsanInitFunction	Transforms/Instrumentation/AddressSanitizer.cpp	/^  Function *AsanInitFunction;$/;"	m	struct:__anon491::AddressSanitizer	file:
AsanStackFreeFunc	Transforms/Instrumentation/AddressSanitizer.cpp	/^  Function *AsanStackMallocFunc, *AsanStackFreeFunc;$/;"	m	struct:__anon491::AddressSanitizer	file:
AsanStackMallocFunc	Transforms/Instrumentation/AddressSanitizer.cpp	/^  Function *AsanStackMallocFunc, *AsanStackFreeFunc;$/;"	m	struct:__anon491::AddressSanitizer	file:
Asm	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  AsmPrinter *Asm;$/;"	m	class:llvm::CompileUnit
Asm	CodeGen/AsmPrinter/DwarfDebug.h	/^  AsmPrinter *Asm;$/;"	m	class:llvm::DwarfDebug
Asm	CodeGen/AsmPrinter/DwarfException.h	/^  AsmPrinter *Asm;$/;"	m	class:llvm::DwarfException
AsmAttributeEmitter	Target/ARM/ARMAsmPrinter.cpp	/^    AsmAttributeEmitter(MCStreamer &Streamer_) : Streamer(Streamer_) {}$/;"	f	class:__anon313::AsmAttributeEmitter
AsmAttributeEmitter	Target/ARM/ARMAsmPrinter.cpp	/^  class AsmAttributeEmitter : public AttributeEmitter {$/;"	c	namespace:__anon313	file:
AsmBackend	MC/MCAsmStreamer.cpp	/^  OwningPtr<MCAsmBackend> AsmBackend;$/;"	m	class:__anon214::MCAsmStreamer	file:
AsmInfo	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<const llvm::MCAsmInfo> AsmInfo;$/;"	m	struct:llvm::EDDisassembler
AsmInfo	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  const MCAsmInfo &AsmInfo;$/;"	m	class:__anon258::ARMBaseAsmLexer	file:
AsmInfo	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^    const MCAsmInfo &AsmInfo;$/;"	m	class:__anon453::MBlazeBaseAsmLexer	file:
AsmInfo	Target/X86/AsmParser/X86AsmLexer.cpp	/^  const MCAsmInfo &AsmInfo;$/;"	m	class:__anon342::X86AsmLexer	file:
AsmLexer	MC/MCParser/AsmLexer.cpp	/^AsmLexer::AsmLexer(const MCAsmInfo &_MAI) : MAI(_MAI)  {$/;"	f	class:AsmLexer
AsmParser	MC/MCParser/AsmParser.cpp	/^AsmParser::AsmParser(SourceMgr &_SM, MCContext &_Ctx,$/;"	f	class:AsmParser
AsmParser	MC/MCParser/AsmParser.cpp	/^class AsmParser : public MCAsmParser {$/;"	c	namespace:__anon211	file:
AsmPrinter	CodeGen/AsmPrinter/AsmPrinter.cpp	/^AsmPrinter::AsmPrinter(TargetMachine &tm, MCStreamer &Streamer)$/;"	f	class:AsmPrinter
AsmPrinter	Target/Mips/MipsMCInstLower.h	/^  MipsAsmPrinter &AsmPrinter;$/;"	m	class:llvm::MipsMCInstLower
AsmPrinter	Target/X86/X86MCInstLower.cpp	/^  X86AsmPrinter &AsmPrinter;$/;"	m	class:__anon380::X86MCInstLower	file:
AsmRewrite	MC/MCParser/AsmParser.cpp	/^  AsmRewrite(AsmRewriteKind kind, SMLoc loc, unsigned len, unsigned size = 0)$/;"	f	struct:__anon213::AsmRewrite
AsmRewrite	MC/MCParser/AsmParser.cpp	/^struct AsmRewrite {$/;"	s	namespace:__anon213	file:
AsmRewriteKind	MC/MCParser/AsmParser.cpp	/^enum AsmRewriteKind {$/;"	g	namespace:__anon213	file:
AsmWriterFlavorTy	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^enum AsmWriterFlavorTy {$/;"	g	file:
AssemblerDialect	MC/MCParser/AsmParser.cpp	/^  unsigned AssemblerDialect;$/;"	m	class:__anon211::AsmParser	file:
AssemblerName	MC/MCSectionMachO.cpp	/^  const char *AssemblerName, *EnumName;$/;"	m	struct:__anon226	file:
AssemblerName	MC/MCSectionMachO.cpp	/^  const char *AssemblerName, *EnumName;$/;"	m	struct:__anon227	file:
AssemblySyntax	MC/MCDisassembler/EDDisassembler.h	/^  } AssemblySyntax;$/;"	t	struct:llvm::EDDisassembler	typeref:enum:llvm::EDDisassembler::__anon206
AssemblyWriter	VMCore/AsmWriter.cpp	/^  inline AssemblyWriter(formatted_raw_ostream &o, SlotTracker &Mac,$/;"	f	class:__anon613::AssemblyWriter
AssemblyWriter	VMCore/AsmWriter.cpp	/^class AssemblyWriter {$/;"	c	namespace:__anon613	file:
Assert	Analysis/Lint.cpp	162;"	d	file:
Assert	VMCore/Verifier.cpp	362;"	d	file:
Assert1	Analysis/Lint.cpp	164;"	d	file:
Assert1	VMCore/Verifier.cpp	364;"	d	file:
Assert2	Analysis/Lint.cpp	166;"	d	file:
Assert2	VMCore/Verifier.cpp	366;"	d	file:
Assert3	Analysis/Lint.cpp	168;"	d	file:
Assert3	VMCore/Verifier.cpp	368;"	d	file:
Assert4	Analysis/Lint.cpp	170;"	d	file:
Assert4	VMCore/Verifier.cpp	370;"	d	file:
AssertOK	VMCore/Instructions.cpp	/^void BranchInst::AssertOK() {$/;"	f	class:BranchInst
AssertOK	VMCore/Instructions.cpp	/^void LoadInst::AssertOK() {$/;"	f	class:LoadInst
AssertOK	VMCore/Instructions.cpp	/^void StoreInst::AssertOK() {$/;"	f	class:StoreInst
AssertSorted	Analysis/MemoryDependenceAnalysis.cpp	/^static void AssertSorted(MemoryDependenceAnalysis::NonLocalDepInfo &Cache,$/;"	f	file:
AssignOrdering	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::AssignOrdering(const SDNode *SD, unsigned Order) {$/;"	f	class:SelectionDAG
AssignOrderingToNode	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::AssignOrderingToNode(const SDNode *Node) {$/;"	f	class:SelectionDAGBuilder
AssignSlowCase	Support/APInt.cpp	/^APInt& APInt::AssignSlowCase(const APInt& RHS) {$/;"	f	class:APInt
AssignTopologicalOrder	CodeGen/SelectionDAG/SelectionDAG.cpp	/^unsigned SelectionDAG::AssignTopologicalOrder() {$/;"	f	class:SelectionDAG
AssignValue	Bitcode/Reader/BitcodeReader.cpp	/^void BitcodeReaderMDValueList::AssignValue(Value *V, unsigned Idx) {$/;"	f	class:BitcodeReaderMDValueList
AssignValue	Bitcode/Reader/BitcodeReader.cpp	/^void BitcodeReaderValueList::AssignValue(Value *V, unsigned Idx) {$/;"	f	class:BitcodeReaderValueList
AssignedRegs	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^  RegsForValue AssignedRegs;$/;"	m	class:__anon83::SDISelAsmOperandInfo	file:
Assignments	CodeGen/RegisterCoalescer.cpp	/^  SmallVector<int, 8> Assignments;$/;"	m	class:__anon115::JoinVals	file:
Assignments	CodeGen/StackSlotColoring.cpp	/^    SmallVector<SmallVector<LiveInterval*,4>, 16> Assignments;$/;"	m	class:__anon94::StackSlotColoring	file:
AtExitHandlers	ExecutionEngine/Interpreter/Interpreter.h	/^  std::vector<Function*> AtExitHandlers;$/;"	m	class:llvm::Interpreter
AtExitHandlers	ExecutionEngine/JIT/JITMemoryManager.cpp	/^static std::vector<void (*)()> AtExitHandlers;$/;"	v	file:
Atom	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    Atom(AtomType type, uint16_t form) : type(type), form(form) {}$/;"	f	struct:llvm::DwarfAccelTable::Atom
Atom	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  struct Atom {$/;"	s	class:llvm::DwarfAccelTable
AtomType	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  enum AtomType {$/;"	g	class:llvm::DwarfAccelTable
AtomTypeString	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^const char *DwarfAccelTable::Atom::AtomTypeString(enum AtomType AT) {$/;"	f	class:DwarfAccelTable::Atom
AtomicAdd	Support/Atomic.cpp	/^sys::cas_flag sys::AtomicAdd(volatile sys::cas_flag* ptr, sys::cas_flag val) {$/;"	f	class:sys
AtomicCmpXchgInst	VMCore/Instructions.cpp	/^AtomicCmpXchgInst::AtomicCmpXchgInst(Value *Ptr, Value *Cmp, Value *NewVal,$/;"	f	class:AtomicCmpXchgInst
AtomicDecrement	Support/Atomic.cpp	/^sys::cas_flag sys::AtomicDecrement(volatile sys::cas_flag* ptr) {$/;"	f	class:sys
AtomicDiv	Support/Atomic.cpp	/^sys::cas_flag sys::AtomicDiv(volatile sys::cas_flag* ptr, sys::cas_flag val) {$/;"	f	class:sys
AtomicIncrement	Support/Atomic.cpp	/^sys::cas_flag sys::AtomicIncrement(volatile sys::cas_flag* ptr) {$/;"	f	class:sys
AtomicMul	Support/Atomic.cpp	/^sys::cas_flag sys::AtomicMul(volatile sys::cas_flag* ptr, sys::cas_flag val) {$/;"	f	class:sys
AtomicOpc	Target/X86/X86ISelDAGToDAG.cpp	/^enum AtomicOpc {$/;"	g	file:
AtomicOpcEnd	Target/X86/X86ISelDAGToDAG.cpp	/^  AtomicOpcEnd$/;"	e	enum:AtomicOpc	file:
AtomicOpcTbl	Target/X86/X86ISelDAGToDAG.cpp	/^static const uint16_t AtomicOpcTbl[AtomicOpcEnd][AtomicSzEnd] = {$/;"	v	file:
AtomicRMWInst	VMCore/Instructions.cpp	/^AtomicRMWInst::AtomicRMWInst(BinOp Operation, Value *Ptr, Value *Val,$/;"	f	class:AtomicRMWInst
AtomicSz	Target/X86/X86ISelDAGToDAG.cpp	/^enum AtomicSz {$/;"	g	file:
AtomicSzEnd	Target/X86/X86ISelDAGToDAG.cpp	/^  AtomicSzEnd$/;"	e	enum:AtomicSz	file:
Atoms	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    SmallVector<Atom, 1> Atoms;$/;"	m	struct:llvm::DwarfAccelTable::TableHeaderData
AttemptToFoldSymbolOffsetDifference	MC/MCExpr.cpp	/^static void AttemptToFoldSymbolOffsetDifference(const MCAssembler *Asm,$/;"	f	file:
AttrFlag	MC/MCSectionMachO.cpp	/^  unsigned AttrFlag;$/;"	m	struct:__anon227	file:
AttrFlagEnd	MC/MCSectionMachO.cpp	71;"	d	file:
AttrListPtr	VMCore/Attributes.cpp	/^AttrListPtr::AttrListPtr(AttributeListImpl *LI) : AttrList(LI) {$/;"	f	class:AttrListPtr
AttrListPtr	VMCore/Attributes.cpp	/^AttrListPtr::AttrListPtr(const AttrListPtr &P) : AttrList(P.AttrList) {$/;"	f	class:AttrListPtr
AttrMagic	Target/ARM/ARMBuildAttrs.h	/^  enum AttrMagic {$/;"	g	namespace:ARMBuildAttrs
AttrType	Target/ARM/ARMBuildAttrs.h	/^  enum AttrType {$/;"	g	namespace:ARMBuildAttrs
Attribute	CodeGen/AsmPrinter/DIE.h	/^    uint16_t Attribute;$/;"	m	class:llvm::DIEAbbrevData
Attribute	DebugInfo/DWARFAttribute.h	/^  uint16_t Attribute;$/;"	m	class:llvm::DWARFAttribute
AttributeEmitter	Target/ARM/ARMAsmPrinter.cpp	/^  class AttributeEmitter {$/;"	c	namespace:__anon313	file:
AttributeEncodingString	Support/Dwarf.cpp	/^const char *llvm::dwarf::AttributeEncodingString(unsigned Encoding) {$/;"	f	class:llvm::dwarf
AttributeItem	Target/ARM/ARMAsmPrinter.cpp	/^    } AttributeItem;$/;"	m	class:__anon313::ObjectAttributeEmitter	typeref:struct:__anon313::ObjectAttributeEmitter::AttributeItemType	file:
AttributeItemType	Target/ARM/ARMAsmPrinter.cpp	/^    struct AttributeItemType {$/;"	s	class:__anon313::ObjectAttributeEmitter	file:
AttributeListImpl	VMCore/Attributes.cpp	/^  AttributeListImpl(ArrayRef<AttributeWithIndex> attrs)$/;"	f	class:llvm::AttributeListImpl
AttributeListImpl	VMCore/Attributes.cpp	/^class AttributeListImpl : public FoldingSetNode {$/;"	c	namespace:llvm	file:
AttributeMap	Bitcode/Writer/ValueEnumerator.h	/^  AttributeMapType AttributeMap;$/;"	m	class:llvm::ValueEnumerator
AttributeMapType	Bitcode/Writer/ValueEnumerator.h	/^  typedef DenseMap<void*, unsigned> AttributeMapType;$/;"	t	class:llvm::ValueEnumerator
AttributeString	Support/Dwarf.cpp	/^const char *llvm::dwarf::AttributeString(unsigned Attribute) {$/;"	f	class:llvm::dwarf
Attributes	Bitcode/Writer/ValueEnumerator.h	/^  std::vector<AttrListPtr> Attributes;$/;"	m	class:llvm::ValueEnumerator
Attributes	DebugInfo/DWARFAbbreviationDeclaration.h	/^  SmallVector<DWARFAttribute, 8> Attributes;$/;"	m	class:llvm::DWARFAbbreviationDeclaration
AttributesImpl	VMCore/AttributesImpl.h	/^  AttributesImpl(uint64_t bits) : Bits(bits) {}$/;"	f	class:llvm::AttributesImpl
AttributesImpl	VMCore/AttributesImpl.h	/^class AttributesImpl : public FoldingSetNode {$/;"	c	namespace:llvm
AttributesLists	VMCore/Attributes.cpp	/^static ManagedStatic<FoldingSet<AttributeListImpl> > AttributesLists;$/;"	v	file:
AttributesSection	Target/ARM/ARMTargetObjectFile.h	/^  const MCSection *AttributesSection;$/;"	m	class:llvm::ARMElfTargetObjectFile
Attrs	AsmParser/LLParser.h	/^      Attributes Attrs;$/;"	m	struct:llvm::LLParser::ArgInfo
Attrs	AsmParser/LLParser.h	/^      Attributes Attrs;$/;"	m	struct:llvm::LLParser::ParamInfo
Attrs	VMCore/Attributes.cpp	/^  SmallVector<AttributeWithIndex, 4> Attrs;$/;"	m	class:llvm::AttributeListImpl	file:
AttrsSet	VMCore/LLVMContextImpl.h	/^  FoldingSet<AttributesImpl> AttrsSet;$/;"	m	class:llvm::LLVMContextImpl
AutoDetectSubtargetFeatures	Target/X86/X86Subtarget.cpp	/^void X86Subtarget::AutoDetectSubtargetFeatures() {$/;"	f	class:X86Subtarget
AutoreleaseCallee	Transforms/Scalar/ObjCARC.cpp	/^             *RetainCallee, *RetainBlockCallee, *AutoreleaseCallee;$/;"	m	class:__anon508::ObjCARCOpt	file:
AutoreleasePoolBoundary	Transforms/Scalar/ObjCARC.cpp	/^    AutoreleasePoolBoundary,$/;"	e	enum:__anon509::DependenceKind	file:
AutoreleaseRVCallee	Transforms/Scalar/ObjCARC.cpp	/^    Constant *RetainRVCallee, *AutoreleaseRVCallee, *ReleaseCallee,$/;"	m	class:__anon508::ObjCARCOpt	file:
Aux	MC/WinCOFFObjectWriter.cpp	/^  AuxiliarySymbols Aux;$/;"	m	class:__anon222::COFFSymbol	file:
Aux	MC/WinCOFFObjectWriter.cpp	/^  COFF::Auxiliary Aux;$/;"	m	struct:__anon222::AuxSymbol	file:
AuxSymbol	MC/WinCOFFObjectWriter.cpp	/^struct AuxSymbol {$/;"	s	namespace:__anon222	file:
AuxType	MC/WinCOFFObjectWriter.cpp	/^  AuxiliaryType   AuxType;$/;"	m	struct:__anon222::AuxSymbol	file:
AuxiliarySymbols	MC/WinCOFFObjectWriter.cpp	/^  typedef llvm::SmallVector<AuxSymbol, 1> AuxiliarySymbols;$/;"	t	class:__anon222::COFFSymbol	file:
AuxiliaryType	MC/WinCOFFObjectWriter.cpp	/^enum AuxiliaryType {$/;"	g	namespace:__anon222	file:
Avail	CodeGen/ExecutionDepsFix.cpp	/^  SmallVector<DomainValue*,16> Avail;$/;"	m	class:__anon120::ExeDepsFix	file:
AvailIn	CodeGen/PrologEpilogInserter.h	/^    CSRegBlockMap AvailIn, AvailOut;$/;"	m	class:llvm::PEI
AvailOut	CodeGen/PrologEpilogInserter.h	/^    CSRegBlockMap AvailIn, AvailOut;$/;"	m	class:llvm::PEI
Available	CodeGen/MachineScheduler.cpp	/^    ReadyQueue Available;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
Available	Target/Hexagon/HexagonMachineScheduler.h	/^    ReadyQueue Available;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
AvailableCalls	Transforms/Scalar/EarlyCSE.cpp	/^  CallHTType *AvailableCalls;$/;"	m	class:__anon566::EarlyCSE	file:
AvailableDomains	CodeGen/ExecutionDepsFix.cpp	/^  unsigned AvailableDomains;$/;"	m	struct:__anon118::DomainValue	file:
AvailableLoads	Transforms/Scalar/EarlyCSE.cpp	/^  LoadHTType *AvailableLoads;$/;"	m	class:__anon566::EarlyCSE	file:
AvailableQueue	CodeGen/PostRASchedulerList.cpp	/^    LatencyPriorityQueue AvailableQueue;$/;"	m	class:__anon102::SchedulePostRATDList	file:
AvailableQueue	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  FastPriorityQueue AvailableQueue;$/;"	m	class:__anon86::ScheduleDAGFast	file:
AvailableQueue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  SchedulingPriorityQueue *AvailableQueue;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
AvailableQueue	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^  SchedulingPriorityQueue *AvailableQueue;$/;"	m	class:__anon84::ScheduleDAGVLIW	file:
AvailableValsTy	CodeGen/MachineSSAUpdater.cpp	/^typedef DenseMap<MachineBasicBlock*, unsigned> AvailableValsTy;$/;"	t	file:
AvailableValsTy	CodeGen/TailDuplication.cpp	/^typedef std::vector<std::pair<MachineBasicBlock*,unsigned> > AvailableValsTy;$/;"	t	file:
AvailableValsTy	Transforms/Utils/SSAUpdater.cpp	/^typedef DenseMap<BasicBlock*, Value*> AvailableValsTy;$/;"	t	file:
AvailableValueInBlock	Transforms/Scalar/GVN.cpp	/^struct AvailableValueInBlock {$/;"	s	namespace:__anon538	file:
AvailableValues	Transforms/Scalar/EarlyCSE.cpp	/^  ScopedHTType *AvailableValues;$/;"	m	class:__anon566::EarlyCSE	file:
AvoidCPSRPartialUpdate	Target/ARM/ARMSubtarget.h	/^  bool AvoidCPSRPartialUpdate;$/;"	m	class:llvm::ARMSubtarget
AvoidsSinking	CodeGen/MachineSink.cpp	/^static bool AvoidsSinking(MachineInstr *MI, MachineRegisterInfo *MRI) {$/;"	f	file:
BACK	Support/regexec.c	101;"	d	file:
BACK	Support/regexec.c	126;"	d	file:
BACK	Support/regexec.c	77;"	d	file:
BACKSL	Support/regcomp.c	505;"	d	file:
BARRIER	Target/Hexagon/HexagonISelLowering.h	/^      BARRIER,     \/\/ Memory barrier.$/;"	e	enum:llvm::HexagonISD::__anon404
BB	Analysis/LazyValueInfo.cpp	/^      BasicBlock *BB;$/;"	m	struct:__anon20::LazyValueInfoCache::OverDefinedCacheUpdater	file:
BB	Analysis/ProfileVerifierPass.cpp	/^      const BType *BB;$/;"	m	struct:__anon36::ProfileVerifierPassT::DetailedBlockInfo	file:
BB	CodeGen/IfConversion.cpp	/^      MachineBasicBlock *BB;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
BB	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^    MachineBasicBlock *BB;$/;"	m	class:llvm::ScheduleDAGSDNodes
BB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock* BB;$/;"	m	struct:llvm::SelectionDAGBuilder::Case
BB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock* BB;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBits
BB	Transforms/Scalar/GVN.cpp	/^      const BasicBlock *BB;$/;"	m	struct:__anon537::GVN::LeaderTableEntry	file:
BB	Transforms/Scalar/GVN.cpp	/^  BasicBlock *BB;$/;"	m	struct:__anon538::AvailableValueInBlock	file:
BB	Transforms/Utils/LowerSwitch.cpp	/^      BasicBlock* BB;$/;"	m	struct:__anon466::LowerSwitch::CaseRange	file:
BB	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    BasicBlock *BB;$/;"	m	class:__anon469::RenamePassData	file:
BBAnalysis	CodeGen/IfConversion.cpp	/^    std::vector<BBInfo> BBAnalysis;$/;"	m	class:__anon99::IfConverter	file:
BBCallbacks	CodeGen/MachineModuleInfo.cpp	/^  std::vector<MMIAddrLabelMapCallbackPtr> BBCallbacks;$/;"	m	class:llvm::MMIAddrLabelMap	file:
BBExecutable	Transforms/Scalar/SCCP.cpp	/^  SmallPtrSet<BasicBlock*, 8> BBExecutable; \/\/ The BBs that are executable.$/;"	m	class:__anon531::SCCPSolver	file:
BBHasFallthrough	Target/ARM/ARMConstantIslandPass.cpp	/^static bool BBHasFallthrough(MachineBasicBlock *MBB) {$/;"	f	file:
BBI	CodeGen/IfConversion.cpp	/^      BBInfo &BBI;$/;"	m	struct:__anon99::IfConverter::IfcvtToken	file:
BBInfo	CodeGen/IfConversion.cpp	/^      BBInfo() : IsDone(false), IsBeingAnalyzed(false),$/;"	f	struct:__anon99::IfConverter::BBInfo
BBInfo	CodeGen/IfConversion.cpp	/^    struct BBInfo {$/;"	s	class:__anon99::IfConverter	file:
BBInfo	CodeGen/MachineVerifier.cpp	/^      BBInfo() : reachable(false) {}$/;"	f	struct:__anon139::MachineVerifier::BBInfo
BBInfo	CodeGen/MachineVerifier.cpp	/^    struct BBInfo {$/;"	s	struct:__anon139::MachineVerifier	file:
BBInfo	Target/ARM/ARMConstantIslandPass.cpp	/^    std::vector<BasicBlockInfo> BBInfo;$/;"	m	class:__anon310::ARMConstantIslands	file:
BBIsJumpedOver	Target/ARM/ARMConstantIslandPass.cpp	/^static bool BBIsJumpedOver(MachineBasicBlock *MBB) {$/;"	f	file:
BBLV	Analysis/LazyValueInfo.cpp	/^      LVILatticeVal &BBLV;$/;"	m	struct:__anon20::LazyValueInfoCache::OverDefinedCacheUpdater	file:
BBNumPreds	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DenseMap<const BasicBlock*, unsigned> BBNumPreds;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
BBNumbers	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DenseMap<BasicBlock*, unsigned> BBNumbers;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
BBPassManager	VMCore/PassManager.cpp	/^  explicit BBPassManager()$/;"	f	class:__anon614::BBPassManager
BBPassManager	VMCore/PassManager.cpp	/^class BBPassManager : public PMDataManager, public FunctionPass {$/;"	c	namespace:__anon614	file:
BBSolved	Target/X86/X86VZeroUpper.cpp	/^    BitVector BBSolved;$/;"	m	struct:__anon382::VZeroUpperInserter	file:
BBState	Target/X86/X86VZeroUpper.cpp	/^    SmallVector<uint8_t, 8> BBState;$/;"	m	struct:__anon382::VZeroUpperInserter	file:
BBState	Transforms/Scalar/ObjCARC.cpp	/^    BBState() : TopDownPathCount(0), BottomUpPathCount(0) {}$/;"	f	class:__anon507::BBState
BBState	Transforms/Scalar/ObjCARC.cpp	/^  class BBState {$/;"	c	namespace:__anon507	file:
BBToVisit	Analysis/ProfileEstimatorPass.cpp	/^    std::set<BasicBlock*>  BBToVisit;$/;"	m	class:__anon9::ProfileEstimatorPass	file:
BBVRegPair	CodeGen/PHIElimination.cpp	/^    typedef std::pair<unsigned, unsigned> BBVRegPair;$/;"	t	class:__anon164::PHIElimination	file:
BBV_NAME	Transforms/Vectorize/BBVectorize.cpp	17;"	d	file:
BBVectorize	Transforms/Vectorize/BBVectorize.cpp	/^    BBVectorize(Pass *P, const VectorizeConfig &C)$/;"	f	struct:__anon604::BBVectorize
BBVectorize	Transforms/Vectorize/BBVectorize.cpp	/^    BBVectorize(const VectorizeConfig &C = VectorizeConfig())$/;"	f	struct:__anon604::BBVectorize
BBVectorize	Transforms/Vectorize/BBVectorize.cpp	/^  struct BBVectorize : public BasicBlockPass {$/;"	s	namespace:__anon604	file:
BBWeight	Analysis/ProfileVerifierPass.cpp	/^      double      BBWeight;$/;"	m	struct:__anon36::ProfileVerifierPassT::DetailedBlockInfo	file:
BBWorkList	Transforms/Scalar/SCCP.cpp	/^  SmallVector<BasicBlock*, 64>  BBWorkList;  \/\/ The BasicBlock work list$/;"	m	class:__anon531::SCCPSolver	file:
BBisPrinted	Analysis/ProfileVerifierPass.cpp	/^    std::set<const BType*> BBisPrinted;$/;"	m	class:__anon36::ProfileVerifierPassT	file:
BBisUnvisited	Analysis/ProfileInfoLoaderPass.cpp	/^    std::set<const BasicBlock*> BBisUnvisited;$/;"	m	class:__anon52::LoaderPass	file:
BBisVisited	Analysis/ProfileVerifierPass.cpp	/^    std::set<const BType*> BBisVisited;$/;"	m	class:__anon36::ProfileVerifierPassT	file:
BCC_i64	Target/ARM/ARMISelLowering.h	/^      BCC_i64,$/;"	e	enum:llvm::ARMISD::NodeType
BCTRL_Darwin	Target/PowerPC/PPCISelLowering.h	/^      BCTRL_Darwin, BCTRL_SVR4,$/;"	e	enum:llvm::PPCISD::NodeType
BCTRL_SVR4	Target/PowerPC/PPCISelLowering.h	/^      BCTRL_Darwin, BCTRL_SVR4,$/;"	e	enum:llvm::PPCISD::NodeType
BFI	Target/ARM/ARMISelLowering.h	/^      BFI,$/;"	e	enum:llvm::ARMISD::NodeType
BITCODE_READER_H	Bitcode/Reader/BitcodeReader.h	15;"	d
BL	Target/XCore/XCoreISelLowering.h	/^      BL,$/;"	e	enum:llvm::XCoreISD::NodeType
BL	Transforms/Instrumentation/AddressSanitizer.cpp	/^  OwningPtr<BlackList> BL;$/;"	m	struct:__anon491::AddressSanitizer	file:
BL	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  OwningPtr<BlackList> BL;$/;"	m	struct:__anon486::ThreadSanitizer	file:
BLENDPD	Target/X86/X86ISelLowering.h	/^      BLENDPD,$/;"	e	enum:llvm::X86ISD::NodeType
BLENDPS	Target/X86/X86ISelLowering.h	/^      BLENDPS,$/;"	e	enum:llvm::X86ISD::NodeType
BLENDPW	Target/X86/X86ISelLowering.h	/^      BLENDPW,$/;"	e	enum:llvm::X86ISD::NodeType
BLENDV	Target/X86/X86ISelLowering.h	/^      BLENDV,$/;"	e	enum:llvm::X86ISD::NodeType
BLInstrumentationDag	Transforms/Instrumentation/PathProfiling.cpp	/^BLInstrumentationDag::BLInstrumentationDag(Function &F) : BallLarusDag(F),$/;"	f	class:BLInstrumentationDag
BLInstrumentationDag	Transforms/Instrumentation/PathProfiling.cpp	/^class BLInstrumentationDag : public BallLarusDag {$/;"	c	namespace:__anon488	file:
BLInstrumentationEdge	Transforms/Instrumentation/PathProfiling.cpp	/^BLInstrumentationEdge::BLInstrumentationEdge(BLInstrumentationNode* source,$/;"	f	class:BLInstrumentationEdge
BLInstrumentationEdge	Transforms/Instrumentation/PathProfiling.cpp	/^class BLInstrumentationEdge : public BallLarusEdge {$/;"	c	namespace:__anon488	file:
BLInstrumentationNode	Transforms/Instrumentation/PathProfiling.cpp	/^BLInstrumentationNode::BLInstrumentationNode(BasicBlock* BB) :$/;"	f	class:BLInstrumentationNode
BLInstrumentationNode	Transforms/Instrumentation/PathProfiling.cpp	/^class BLInstrumentationNode : public BallLarusNode {$/;"	c	namespace:__anon488	file:
BLSI	Target/X86/X86ISelLowering.h	/^      BLSI,   \/\/ BLSI - Extract lowest set isolated bit$/;"	e	enum:llvm::X86ISD::NodeType
BLSMSK	Target/X86/X86ISelLowering.h	/^      BLSMSK, \/\/ BLSMSK - Get mask up to lowest set bit$/;"	e	enum:llvm::X86ISD::NodeType
BLSR	Target/X86/X86ISelLowering.h	/^      BLSR,   \/\/ BLSR - Reset lowest set bit$/;"	e	enum:llvm::X86ISD::NodeType
BOOL	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^typedef uint8_t BOOL;$/;"	t
BP_DI	Target/X86/Disassembler/X86Disassembler.cpp	/^    BP_DI = 503,$/;"	e	enum:llvm::X86::__anon362	file:
BP_SI	Target/X86/Disassembler/X86Disassembler.cpp	/^    BP_SI = 502,$/;"	e	enum:llvm::X86::__anon362	file:
BR2_JT	Target/ARM/ARMISelLowering.h	/^      BR2_JT,       \/\/ Jumptable branch (2 level - jumptable entry is a jump).$/;"	e	enum:llvm::ARMISD::NodeType
BRANCH_F	Target/MBlaze/MBlazeInstrInfo.h	/^    BRANCH_F,$/;"	e	enum:llvm::MBlaze::FPBranchCode
BRANCH_F	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  BRANCH_F,$/;"	e	enum:llvm::Mips::FPBranchCode
BRANCH_FL	Target/MBlaze/MBlazeInstrInfo.h	/^    BRANCH_FL,$/;"	e	enum:llvm::MBlaze::FPBranchCode
BRANCH_FL	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  BRANCH_FL,$/;"	e	enum:llvm::Mips::FPBranchCode
BRANCH_INVALID	Target/MBlaze/MBlazeInstrInfo.h	/^    BRANCH_INVALID$/;"	e	enum:llvm::MBlaze::FPBranchCode
BRANCH_INVALID	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  BRANCH_INVALID$/;"	e	enum:llvm::Mips::FPBranchCode
BRANCH_T	Target/MBlaze/MBlazeInstrInfo.h	/^    BRANCH_T,$/;"	e	enum:llvm::MBlaze::FPBranchCode
BRANCH_T	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  BRANCH_T,$/;"	e	enum:llvm::Mips::FPBranchCode
BRANCH_TL	Target/MBlaze/MBlazeInstrInfo.h	/^    BRANCH_TL,$/;"	e	enum:llvm::MBlaze::FPBranchCode
BRANCH_TL	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  BRANCH_TL,$/;"	e	enum:llvm::Mips::FPBranchCode
BRCOND	Target/ARM/ARMISelLowering.h	/^      BRCOND,       \/\/ Conditional branch.$/;"	e	enum:llvm::ARMISD::NodeType
BRCOND	Target/X86/X86ISelLowering.h	/^      BRCOND,$/;"	e	enum:llvm::X86ISD::NodeType
BRFCC	Target/Hexagon/HexagonISelLowering.h	/^      BRFCC,       \/\/ Branch to dest on fcc condition$/;"	e	enum:llvm::HexagonISD::__anon404
BRFCC	Target/Sparc/SparcISelLowering.h	/^      BRFCC,       \/\/ Branch to dest on fcc condition$/;"	e	enum:llvm::SPISD::__anon444
BRICC	Target/Hexagon/HexagonISelLowering.h	/^      BRICC,       \/\/ Branch to dest on icc condition$/;"	e	enum:llvm::HexagonISD::__anon404
BRICC	Target/Sparc/SparcISelLowering.h	/^      BRICC,       \/\/ Branch to dest on icc condition$/;"	e	enum:llvm::SPISD::__anon444
BR_CC	Target/MSP430/MSP430ISelLowering.h	/^      BR_CC,$/;"	e	enum:llvm::MSP430ISD::__anon397
BR_JT	Target/ARM/ARMISelLowering.h	/^      BR_JT,        \/\/ Jumptable branch.$/;"	e	enum:llvm::ARMISD::NodeType
BR_JT	Target/Hexagon/HexagonISelLowering.h	/^      BR_JT,       \/\/ Jump table.$/;"	e	enum:llvm::HexagonISD::__anon404
BR_JT	Target/XCore/XCoreISelLowering.h	/^      BR_JT,$/;"	e	enum:llvm::XCoreISD::NodeType
BR_JT32	Target/XCore/XCoreISelLowering.h	/^      BR_JT32$/;"	e	enum:llvm::XCoreISD::NodeType
BSF	Target/X86/X86ISelLowering.h	/^      BSF,$/;"	e	enum:llvm::X86ISD::NodeType
BSR	Target/X86/X86ISelLowering.h	/^      BSR,$/;"	e	enum:llvm::X86ISD::NodeType
BT	Target/X86/X86ISelLowering.h	/^      BT,$/;"	e	enum:llvm::X86ISD::NodeType
BUCompareLatency	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static int BUCompareLatency(SUnit *left, SUnit *right, bool checkPref,$/;"	f	file:
BUHasStall	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool BUHasStall(SUnit *SU, int Height, RegReductionPQBase *SPQ) {$/;"	f	file:
BUILD_ADDIS	Target/PowerPC/PPCJITInfo.cpp	27;"	d	file:
BUILD_ARCHIVE	Analysis/IPA/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Analysis/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Archive/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	AsmParser/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Bitcode/Reader/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Bitcode/Writer/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	CodeGen/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	DebugInfo/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	Linker/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	MC/MCParser/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	MC/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	Object/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	Support/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	TableGen/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Target/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Transforms/IPO/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Transforms/InstCombine/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Transforms/Instrumentation/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Transforms/Scalar/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Transforms/Utils/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	Transforms/Vectorize/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_ARCHIVE	VMCore/Makefile	/^BUILD_ARCHIVE = 1$/;"	m
BUILD_B	Target/PowerPC/PPCJITInfo.cpp	40;"	d	file:
BUILD_BCCTRx	Target/PowerPC/PPCJITInfo.cpp	38;"	d	file:
BUILD_BCTR	Target/PowerPC/PPCJITInfo.cpp	47;"	d	file:
BUILD_LIS	Target/PowerPC/PPCJITInfo.cpp	44;"	d	file:
BUILD_MTCTR	Target/PowerPC/PPCJITInfo.cpp	46;"	d	file:
BUILD_MTSPR	Target/PowerPC/PPCJITInfo.cpp	36;"	d	file:
BUILD_ORI	Target/PowerPC/PPCJITInfo.cpp	29;"	d	file:
BUILD_ORIS	Target/PowerPC/PPCJITInfo.cpp	31;"	d	file:
BUILD_RLDICR	Target/PowerPC/PPCJITInfo.cpp	33;"	d	file:
BUILD_SLDI	Target/PowerPC/PPCJITInfo.cpp	45;"	d	file:
BUILD_VECTOR	Target/ARM/ARMISelLowering.h	/^      BUILD_VECTOR,$/;"	e	enum:llvm::ARMISD::NodeType
BUILT_SOURCES	Target/ARM/Makefile	/^BUILT_SOURCES = ARMGenRegisterInfo.inc ARMGenInstrInfo.inc \\$/;"	m
BUILT_SOURCES	Target/CellSPU/Makefile	/^BUILT_SOURCES = SPUGenInstrInfo.inc SPUGenRegisterInfo.inc \\$/;"	m
BUILT_SOURCES	Target/Hexagon/Makefile	/^BUILT_SOURCES = HexagonGenRegisterInfo.inc \\$/;"	m
BUILT_SOURCES	Target/MBlaze/Makefile	/^BUILT_SOURCES = MBlazeGenRegisterInfo.inc MBlazeGenInstrInfo.inc \\$/;"	m
BUILT_SOURCES	Target/MSP430/Makefile	/^BUILT_SOURCES = MSP430GenRegisterInfo.inc MSP430GenInstrInfo.inc \\$/;"	m
BUILT_SOURCES	Target/Mips/Makefile	/^BUILT_SOURCES = MipsGenRegisterInfo.inc MipsGenInstrInfo.inc \\$/;"	m
BUILT_SOURCES	Target/NVPTX/Makefile	/^BUILT_SOURCES = NVPTXGenAsmWriter.inc \\$/;"	m
BUILT_SOURCES	Target/PowerPC/Makefile	/^BUILT_SOURCES = PPCGenRegisterInfo.inc \\$/;"	m
BUILT_SOURCES	Target/Sparc/Makefile	/^BUILT_SOURCES = SparcGenRegisterInfo.inc SparcGenInstrInfo.inc \\$/;"	m
BUILT_SOURCES	Target/X86/Makefile	/^BUILT_SOURCES = X86GenRegisterInfo.inc X86GenInstrInfo.inc \\$/;"	m
BUILT_SOURCES	Target/XCore/Makefile	/^BUILT_SOURCES = XCoreGenRegisterInfo.inc XCoreGenInstrInfo.inc \\$/;"	m
BUILT_SOURCES	VMCore/Makefile	/^BUILT_SOURCES = $(PROJ_OBJ_ROOT)\/include\/llvm\/Intrinsics.gen$/;"	m
BURRSort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool BURRSort(SUnit *left, SUnit *right, RegReductionPQBase *SPQ) {$/;"	f	file:
BURegReductionPriorityQueue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^BURegReductionPriorityQueue;$/;"	t	namespace:__anon77	file:
BX_DI	Target/X86/Disassembler/X86Disassembler.cpp	/^    BX_DI = 501,$/;"	e	enum:llvm::X86::__anon362	file:
BX_SI	Target/X86/Disassembler/X86Disassembler.cpp	/^    BX_SI = 500,$/;"	e	enum:llvm::X86::__anon362	file:
BackTrace	CodeGen/MachineLICM.cpp	/^    SmallVector<SmallVector<unsigned, 8>, 16> BackTrace;$/;"	m	class:__anon156::MachineLICM	file:
BackedgeTakenInfo	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::BackedgeTakenInfo::BackedgeTakenInfo($/;"	f	class:ScalarEvolution::BackedgeTakenInfo
Backtrace	Support/CrashRecoveryContext.cpp	/^  std::string Backtrace;$/;"	m	struct:__anon255::CrashRecoveryContextImpl	file:
BacktrackBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::BacktrackBottomUp(SUnit *SU, SUnit *BtSU) {$/;"	f	class:ScheduleDAGRRList
BackupNumber	Support/FileUtilities.cpp	/^static const char *BackupNumber(const char *Pos, const char *FirstChar) {$/;"	f	file:
Banner	Analysis/IPA/CallGraphSCCPass.cpp	/^    std::string Banner;$/;"	m	class:__anon4::PrintCallGraphPass	file:
Banner	Analysis/LoopPass.cpp	/^  std::string Banner;$/;"	m	class:__anon45::PrintLoopPass	file:
Banner	Analysis/RegionPass.cpp	/^  std::string Banner;$/;"	m	class:__anon8::PrintRegionPass	file:
Banner	CodeGen/MachineFunctionPrinterPass.cpp	/^  const std::string Banner;$/;"	m	struct:__anon96::MachineFunctionPrinterPass	file:
Banner	CodeGen/MachineVerifier.cpp	/^    const char *Banner;$/;"	m	struct:__anon139::MachineVerifier	file:
Banner	CodeGen/MachineVerifier.cpp	/^    const char *const Banner;$/;"	m	struct:__anon139::MachineVerifierPass	file:
Banner	VMCore/PrintModulePass.cpp	/^    std::string Banner;     \/\/ String to print before each function$/;"	m	class:__anon619::PrintFunctionPass	file:
Banner	VMCore/PrintModulePass.cpp	/^    std::string Banner;$/;"	m	class:__anon619::PrintModulePass	file:
BarrierNoop	Transforms/IPO/BarrierNoopPass.cpp	/^  BarrierNoop() : ModulePass(ID) {$/;"	f	class:__anon585::BarrierNoop
BarrierNoop	Transforms/IPO/BarrierNoopPass.cpp	/^class BarrierNoop : public ModulePass {$/;"	c	namespace:__anon585	file:
Base	Analysis/InlineCost.cpp	/^  typedef InstVisitor<CallAnalyzer, bool> Base;$/;"	t	class:__anon28::CallAnalyzer	file:
Base	Target/ARM/ARMFastISel.cpp	/^    } Base;$/;"	m	struct:__anon307::Address	typeref:union:__anon307::Address::__anon309	file:
Base	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^      unsigned Base;$/;"	m	struct:__anon446::MBlazeOperand::__anon447::__anon451	file:
Base	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    } Base;$/;"	m	struct:__anon392::MSP430ISelAddressMode	typeref:struct:__anon392::MSP430ISelAddressMode::__anon394	file:
Base	Target/Mips/AsmParser/MipsAsmParser.cpp	/^      unsigned Base;$/;"	m	struct:__anon423::MipsOperand::__anon424::__anon428	file:
Base	Target/X86/X86InstrBuilder.h	/^  } Base;$/;"	m	struct:llvm::X86AddressMode	typeref:union:llvm::X86AddressMode::__anon385
Base	Transforms/Scalar/Reassociate.cpp	/^    Value *Base;$/;"	m	struct:__anon548::Factor	file:
BaseAddr	DebugInfo/DWARFCompileUnit.h	/^  uint64_t BaseAddr;$/;"	m	class:llvm::DWARFCompileUnit
BaseEqual	Transforms/Scalar/Reassociate.cpp	/^    struct BaseEqual {$/;"	s	struct:__anon548::Factor	file:
BasePC	MC/MCDisassembler/Disassembler.cpp	/^  uint64_t BasePC;$/;"	m	class:__anon207::DisasmMemoryObject	file:
BasePtr	Target/ARM/ARMBaseRegisterInfo.h	/^  unsigned BasePtr;$/;"	m	class:llvm::ARMBaseRegisterInfo
BasePtr	Target/X86/X86RegisterInfo.h	/^  unsigned BasePtr;$/;"	m	class:llvm::X86RegisterInfo
BaseReg	Target/X86/AsmParser/X86AsmParser.cpp	/^      unsigned BaseReg;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon341	file:
BaseRegNum	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned BaseRegNum;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon275	file:
BaseRegs	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallVector<const SCEV *, 2> BaseRegs;$/;"	m	struct:__anon514::Formula	file:
BaseSorter	Transforms/Scalar/Reassociate.cpp	/^    struct BaseSorter {$/;"	s	struct:__anon548::Factor	file:
BaseType	Target/ARM/ARMFastISel.cpp	/^    } BaseType;$/;"	m	struct:__anon307::Address	typeref:enum:__anon307::Address::__anon308	file:
BaseType	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    } BaseType;$/;"	m	struct:__anon392::MSP430ISelAddressMode	typeref:enum:__anon392::MSP430ISelAddressMode::__anon393	file:
BaseType	Target/X86/X86ISelDAGToDAG.cpp	/^    } BaseType;$/;"	m	struct:__anon371::X86ISelAddressMode	typeref:enum:__anon371::X86ISelAddressMode::__anon372	file:
BaseType	Target/X86/X86InstrBuilder.h	/^  } BaseType;$/;"	m	struct:llvm::X86AddressMode	typeref:enum:llvm::X86AddressMode::__anon384
Base_FrameIndex	Target/X86/X86ISelDAGToDAG.cpp	/^    int Base_FrameIndex;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
Base_Reg	Target/X86/X86ISelDAGToDAG.cpp	/^    SDValue Base_Reg;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
Basic	Transforms/Scalar/LoopStrengthReduce.cpp	/^    Basic,   \/\/\/< A normal use, with no folding.$/;"	e	enum:__anon517::LSRUse::KindType	file:
BasicAliasAnalysis	Analysis/BasicAliasAnalysis.cpp	/^    BasicAliasAnalysis() : ImmutablePass(ID) {$/;"	f	struct:__anon15::BasicAliasAnalysis
BasicAliasAnalysis	Analysis/BasicAliasAnalysis.cpp	/^  struct BasicAliasAnalysis : public ImmutablePass, public AliasAnalysis {$/;"	s	namespace:__anon15	file:
BasicBlock	DebugInfo/DWARFDebugLine.h	/^            BasicBlock:1,$/;"	m	struct:llvm::DWARFDebugLine::Row
BasicBlock	VMCore/BasicBlock.cpp	/^BasicBlock::BasicBlock(LLVMContext &C, const Twine &Name, Function *NewParent,$/;"	f	class:BasicBlock
BasicBlockAddressMap	ExecutionEngine/JIT/JIT.h	/^  BasicBlockAddressMapTy BasicBlockAddressMap;$/;"	m	class:llvm::JIT
BasicBlockAddressMapTy	ExecutionEngine/JIT/JIT.h	/^      BasicBlockAddressMapTy;$/;"	t	class:llvm::JIT
BasicBlockInfo	Target/ARM/ARMConstantIslandPass.cpp	/^      BasicBlockInfo() : Offset(0), Size(0), KnownBits(0), Unalign(0),$/;"	f	struct:__anon310::ARMConstantIslands::BasicBlockInfo
BasicBlockInfo	Target/ARM/ARMConstantIslandPass.cpp	/^    struct BasicBlockInfo {$/;"	s	class:__anon310::ARMConstantIslands	file:
BasicBlockNumbering	CodeGen/StackColoring.cpp	/^  SmallVector<MachineBasicBlock*, 8> BasicBlockNumbering;$/;"	m	class:__anon113::StackColoring	file:
BasicBlocks	Bitcode/Writer/ValueEnumerator.h	/^  std::vector<const BasicBlock*> BasicBlocks;$/;"	m	class:llvm::ValueEnumerator
BasicBlocks	CodeGen/StackColoring.cpp	/^  DenseMap<MachineBasicBlock*, int> BasicBlocks;$/;"	m	class:__anon113::StackColoring	file:
BasicCallGraph	Analysis/IPA/CallGraph.cpp	/^  BasicCallGraph() : ModulePass(ID), Root(0), $/;"	f	class:__anon2::BasicCallGraph
BasicCallGraph	Analysis/IPA/CallGraph.cpp	/^class BasicCallGraph : public ModulePass, public CallGraph {$/;"	c	namespace:__anon2	file:
BasicInfo	CodeGen/ShrinkWrapping.cpp	/^  None, BasicInfo, Iterations, Details$/;"	e	enum:ShrinkWrapDebugLevel	file:
BeforeHere	Analysis/AliasAnalysis.cpp	/^    const Instruction *BeforeHere;$/;"	m	struct:__anon21::CapturesBefore	file:
Begin	CodeGen/AllocationOrder.h	/^  const unsigned *Begin;$/;"	m	class:llvm::AllocationOrder
Begin	CodeGen/AsmPrinter/DwarfDebug.h	/^  const MCSymbol *Begin;$/;"	m	struct:llvm::DotDebugLocEntry
Begin	CodeGen/StackColoring.cpp	/^    BitVector Begin;$/;"	m	struct:__anon113::StackColoring::BlockLifetimeInfo	file:
BeginCOFFSymbolDef	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::BeginCOFFSymbolDef(const MCSymbol *Symbol) {$/;"	f	class:MCAsmStreamer
BeginCOFFSymbolDef	MC/MCELFStreamer.cpp	/^  virtual void BeginCOFFSymbolDef(const MCSymbol *Symbol) {$/;"	f	class:__anon215::MCELFStreamer
BeginCOFFSymbolDef	MC/MCMachOStreamer.cpp	/^  virtual void BeginCOFFSymbolDef(const MCSymbol *Symbol) {$/;"	f	class:__anon221::MCMachOStreamer
BeginCOFFSymbolDef	MC/MCNullStreamer.cpp	/^    virtual void BeginCOFFSymbolDef(const MCSymbol *Symbol) {}$/;"	f	class:__anon217::MCNullStreamer
BeginCOFFSymbolDef	MC/MCPureStreamer.cpp	/^  virtual void BeginCOFFSymbolDef(const MCSymbol *Symbol) {$/;"	f	class:__anon219::MCPureStreamer
BeginCOFFSymbolDef	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::BeginCOFFSymbolDef(MCSymbol const *Symbol) {$/;"	f	class:WinCOFFStreamer
BeginFunction	CodeGen/AsmPrinter/ARMException.cpp	/^void ARMException::BeginFunction(const MachineFunction *MF) {$/;"	f	class:ARMException
BeginFunction	CodeGen/AsmPrinter/DwarfCFIException.cpp	/^void DwarfCFIException::BeginFunction(const MachineFunction *MF) {$/;"	f	class:DwarfCFIException
BeginFunction	CodeGen/AsmPrinter/DwarfException.cpp	/^void DwarfException::BeginFunction(const MachineFunction *MF) {$/;"	f	class:DwarfException
BeginFunction	CodeGen/AsmPrinter/Win64Exception.cpp	/^void Win64Exception::BeginFunction(const MachineFunction *MF) {$/;"	f	class:Win64Exception
BeginLabel	CodeGen/AsmPrinter/DwarfException.h	/^    MCSymbol *BeginLabel; \/\/ zero indicates the start of the function.$/;"	m	struct:llvm::DwarfException::CallSiteEntry
BeginLabel	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^  MCSymbol *BeginLabel; \/\/ zero indicates the start of the function.$/;"	m	struct:__anon183::CallSiteEntry	file:
BeginOffset	Transforms/Scalar/SROA.cpp	/^    uint64_t BeginOffset;$/;"	m	struct:__anon557::AllocaPartitioning::ByteRange	file:
BeginOffset	Transforms/Scalar/SROA.cpp	/^  uint64_t BeginOffset, EndOffset;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
BestCost	Target/Hexagon/HexagonMachineScheduler.h	/^    BestCost};$/;"	e	enum:llvm::ConvergingVLIWScheduler::CandResult
BestForm	CodeGen/AsmPrinter/DIE.h	/^    static unsigned BestForm(bool IsSigned, uint64_t Int) {$/;"	f	class:llvm::DIEInteger
BestForm	CodeGen/AsmPrinter/DIE.h	/^    unsigned BestForm() const {$/;"	f	class:llvm::DIEBlock
Bias	CodeGen/SpillPlacement.cpp	/^  float Bias;$/;"	m	struct:SpillPlacement::Node	file:
Binary	Object/Binary.cpp	/^Binary::Binary(unsigned int Type, MemoryBuffer *Source)$/;"	f	class:Binary
BinaryConstantExpr	VMCore/ConstantsContext.h	/^  BinaryConstantExpr(unsigned Opcode, Constant *C1, Constant *C2,$/;"	f	class:llvm::BinaryConstantExpr
BinaryConstantExpr	VMCore/ConstantsContext.h	/^class BinaryConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
BinaryOperator	VMCore/Instructions.cpp	/^BinaryOperator::BinaryOperator(BinaryOps iType, Value *S1, Value *S2, $/;"	f	class:BinaryOperator
BinaryOperator	VMCore/Instructions.cpp	/^BinaryOperator::BinaryOperator(BinaryOps iType, Value *S1, Value *S2,$/;"	f	class:BinaryOperator
BindIndirectSymbols	MC/MachObjectWriter.cpp	/^void MachObjectWriter::BindIndirectSymbols(MCAssembler &Asm) {$/;"	f	class:MachObjectWriter
BindingExplicitlySet	MC/MCELFStreamer.cpp	/^  SmallPtrSet<MCSymbol *, 16> BindingExplicitlySet;$/;"	m	class:__anon215::MCELFStreamer	file:
BinomialCoefficient	Analysis/ScalarEvolution.cpp	/^static const SCEV *BinomialCoefficient(const SCEV *It, unsigned K,$/;"	f	file:
Bit	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
BitCastConstantVector	VMCore/ConstantFold.cpp	/^static Constant *BitCastConstantVector(Constant *CV, VectorType *DstTy) {$/;"	f	file:
BitCastInst	VMCore/Instructions.cpp	/^BitCastInst::BitCastInst($/;"	f	class:BitCastInst
BitConvertToInteger	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDValue DAGTypeLegalizer::BitConvertToInteger(SDValue Op) {$/;"	f	class:DAGTypeLegalizer
BitConvertVectorToIntegerVector	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDValue DAGTypeLegalizer::BitConvertVectorToIntegerVector(SDValue Op) {$/;"	f	class:DAGTypeLegalizer
BitMap	Transforms/Utils/SimplifyCFG.cpp	/^    ConstantInt *BitMap;$/;"	m	class:__anon480::SwitchLookupTable	file:
BitMapElementTy	Transforms/Utils/SimplifyCFG.cpp	/^    IntegerType *BitMapElementTy;$/;"	m	class:__anon480::SwitchLookupTable	file:
BitMapKind	Transforms/Utils/SimplifyCFG.cpp	/^      BitMapKind,$/;"	e	enum:__anon480::SwitchLookupTable::__anon481	file:
BitTestBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    BitTestBlock(APInt F, APInt R, const Value* SV,$/;"	f	struct:llvm::SelectionDAGBuilder::BitTestBlock
BitTestBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  struct BitTestBlock {$/;"	s	class:llvm::SelectionDAGBuilder
BitTestCase	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    BitTestCase(uint64_t M, MachineBasicBlock* T, MachineBasicBlock* Tr,$/;"	f	struct:llvm::SelectionDAGBuilder::BitTestCase
BitTestCase	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  struct BitTestCase {$/;"	s	class:llvm::SelectionDAGBuilder
BitTestCases	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  std::vector<BitTestBlock> BitTestCases;$/;"	m	class:llvm::SelectionDAGBuilder
BitTestInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  typedef SmallVector<BitTestCase, 3> BitTestInfo;$/;"	t	class:llvm::SelectionDAGBuilder
BitcodeReader	Bitcode/Reader/BitcodeReader.h	/^  explicit BitcodeReader(DataStreamer *streamer, LLVMContext &C)$/;"	f	class:llvm::BitcodeReader
BitcodeReader	Bitcode/Reader/BitcodeReader.h	/^  explicit BitcodeReader(MemoryBuffer *buffer, LLVMContext &C)$/;"	f	class:llvm::BitcodeReader
BitcodeReader	Bitcode/Reader/BitcodeReader.h	/^class BitcodeReader : public GVMaterializer {$/;"	c	namespace:llvm
BitcodeReaderMDValueList	Bitcode/Reader/BitcodeReader.h	/^  BitcodeReaderMDValueList(LLVMContext& C) : Context(C) {}$/;"	f	class:llvm::BitcodeReaderMDValueList
BitcodeReaderMDValueList	Bitcode/Reader/BitcodeReader.h	/^class BitcodeReaderMDValueList {$/;"	c	namespace:llvm
BitcodeReaderValueList	Bitcode/Reader/BitcodeReader.h	/^  BitcodeReaderValueList(LLVMContext &C) : Context(C) {}$/;"	f	class:llvm::BitcodeReaderValueList
BitcodeReaderValueList	Bitcode/Reader/BitcodeReader.h	/^class BitcodeReaderValueList {$/;"	c	namespace:llvm
Bitfield	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } Bitfield;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon281	file:
Bits	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    unsigned Bits;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBits
Bits	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
Bits	TableGen/TGParser.h	/^    std::vector<unsigned> Bits;$/;"	m	struct:llvm::LetRecord
Bits	VMCore/AttributesImpl.h	/^  uint64_t Bits;                \/\/ FIXME: We will be expanding this.$/;"	m	class:llvm::AttributesImpl
BlackList	Transforms/Instrumentation/BlackList.cpp	/^BlackList::BlackList(const StringRef Path) {$/;"	f	class:llvm::BlackList
BlackList	Transforms/Instrumentation/BlackList.h	/^class BlackList {$/;"	c	namespace:llvm
BlkSucc_begin	CodeGen/MachineSSAUpdater.cpp	/^  static BlkSucc_iterator BlkSucc_begin(BlkT *BB) { return BB->succ_begin(); }$/;"	f	class:llvm::SSAUpdaterTraits
BlkSucc_begin	Transforms/Utils/SSAUpdater.cpp	/^  static BlkSucc_iterator BlkSucc_begin(BlkT *BB) { return succ_begin(BB); }$/;"	f	class:llvm::SSAUpdaterTraits
BlkSucc_end	CodeGen/MachineSSAUpdater.cpp	/^  static BlkSucc_iterator BlkSucc_end(BlkT *BB) { return BB->succ_end(); }$/;"	f	class:llvm::SSAUpdaterTraits
BlkSucc_end	Transforms/Utils/SSAUpdater.cpp	/^  static BlkSucc_iterator BlkSucc_end(BlkT *BB) { return succ_end(BB); }$/;"	f	class:llvm::SSAUpdaterTraits
BlkSucc_iterator	CodeGen/MachineSSAUpdater.cpp	/^  typedef MachineBasicBlock::succ_iterator BlkSucc_iterator;$/;"	t	class:llvm::SSAUpdaterTraits	file:
BlkSucc_iterator	Transforms/Utils/SSAUpdater.cpp	/^  typedef succ_iterator BlkSucc_iterator;$/;"	t	class:llvm::SSAUpdaterTraits	file:
BlkT	CodeGen/MachineSSAUpdater.cpp	/^  typedef MachineBasicBlock BlkT;$/;"	t	class:llvm::SSAUpdaterTraits	file:
BlkT	Transforms/Utils/SSAUpdater.cpp	/^  typedef BasicBlock BlkT;$/;"	t	class:llvm::SSAUpdaterTraits	file:
Block	CodeGen/BranchFolding.h	/^      MachineBasicBlock *Block;$/;"	m	class:llvm::BranchFolder::MergePotentialsElt
BlockAddr	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    const BlockAddress *BlockAddr;$/;"	m	struct:__anon392::MSP430ISelAddressMode	file:
BlockAddr	Target/X86/X86ISelDAGToDAG.cpp	/^    const BlockAddress *BlockAddr;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
BlockAddrFwdRefs	Bitcode/Reader/BitcodeReader.h	/^  DenseMap<Function*, std::vector<BlockAddrRefTy> > BlockAddrFwdRefs;$/;"	m	class:llvm::BitcodeReader
BlockAddrRefTy	Bitcode/Reader/BitcodeReader.h	/^  typedef std::pair<unsigned, GlobalVariable*> BlockAddrRefTy;$/;"	t	class:llvm::BitcodeReader
BlockAddress	VMCore/Constants.cpp	/^BlockAddress::BlockAddress(Function *F, BasicBlock *BB)$/;"	f	class:BlockAddress
BlockAddresses	VMCore/LLVMContextImpl.h	/^  DenseMap<std::pair<Function*, BasicBlock*> , BlockAddress*> BlockAddresses;$/;"	m	class:llvm::LLVMContextImpl
BlockChain	CodeGen/MachineBlockPlacement.cpp	/^  BlockChain(BlockToChainMapType &BlockToChain, MachineBasicBlock *BB)$/;"	f	class:__anon106::BlockChain
BlockChain	CodeGen/MachineBlockPlacement.cpp	/^class BlockChain {$/;"	c	namespace:__anon106	file:
BlockConstraint	CodeGen/SpillPlacement.h	/^  struct BlockConstraint {$/;"	s	class:llvm::SpillPlacement
BlockData	DebugInfo/DWARFFormValue.cpp	/^const uint8_t *DWARFFormValue::BlockData() const {$/;"	f	class:DWARFFormValue
BlockDominatesAnExit	Transforms/Utils/LCSSA.cpp	/^static bool BlockDominatesAnExit(BasicBlock *BB,$/;"	f	file:
BlockExtractorPass	Transforms/IPO/LoopExtractor.cpp	/^    BlockExtractorPass() : ModulePass(ID) {$/;"	f	class:__anon582::BlockExtractorPass
BlockExtractorPass	Transforms/IPO/LoopExtractor.cpp	/^  class BlockExtractorPass : public ModulePass {$/;"	c	namespace:__anon582	file:
BlockFilterSet	CodeGen/MachineBlockPlacement.cpp	/^  typedef SmallPtrSet<MachineBasicBlock *, 16> BlockFilterSet;$/;"	t	class:__anon107::MachineBlockPlacement	file:
BlockFrequency	CodeGen/SpillPlacement.h	/^  SmallVector<float, 4> BlockFrequency;$/;"	m	class:llvm::SpillPlacement
BlockFrequencyInfo	Analysis/BlockFrequencyInfo.cpp	/^BlockFrequencyInfo::BlockFrequencyInfo() : FunctionPass(ID) {$/;"	f	class:BlockFrequencyInfo
BlockInfo	CodeGen/MachineTraceMetrics.h	/^    SmallVector<TraceBlockInfo, 4> BlockInfo;$/;"	m	class:llvm::MachineTraceMetrics::Ensemble
BlockInfo	CodeGen/MachineTraceMetrics.h	/^  SmallVector<FixedBlockInfo, 4> BlockInfo;$/;"	m	class:llvm::MachineTraceMetrics
BlockInfo	CodeGen/SplitKit.h	/^  struct BlockInfo {$/;"	s	class:llvm::SplitAnalysis
BlockInterference	CodeGen/InterferenceCache.h	/^    BlockInterference() : Tag(0) {}$/;"	f	struct:llvm::InterferenceCache::BlockInterference
BlockInterference	CodeGen/InterferenceCache.h	/^  struct BlockInterference {$/;"	s	class:llvm::InterferenceCache
BlockIsSimpleEnoughToThreadThrough	Transforms/Utils/SimplifyCFG.cpp	/^static bool BlockIsSimpleEnoughToThreadThrough(BasicBlock *BB) {$/;"	f	file:
BlockLifetimeInfo	CodeGen/StackColoring.cpp	/^  struct BlockLifetimeInfo {$/;"	s	class:__anon113::StackColoring	file:
BlockLiveness	CodeGen/StackColoring.cpp	/^  DenseMap<MachineBasicBlock*, BlockLifetimeInfo> BlockLiveness;$/;"	m	class:__anon113::StackColoring	file:
BlockPlacement	Transforms/Scalar/BasicBlockPlacement.cpp	/^    BlockPlacement() : FunctionPass(ID) {$/;"	f	struct:__anon528::BlockPlacement
BlockPlacement	Transforms/Scalar/BasicBlockPlacement.cpp	/^  struct BlockPlacement : public FunctionPass {$/;"	s	namespace:__anon528	file:
BlockPtrSet	CodeGen/SplitKit.h	/^  typedef SmallPtrSet<const MachineBasicBlock*, 16> BlockPtrSet;$/;"	t	class:llvm::SplitAnalysis
BlockScanLimit	Analysis/MemoryDependenceAnalysis.cpp	/^static const int BlockScanLimit = 500;$/;"	v	file:
BlockSet	CodeGen/MachineVerifier.cpp	/^    typedef SmallPtrSet<const MachineBasicBlock*, 8> BlockSet;$/;"	t	struct:__anon139::MachineVerifier	file:
BlockSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uintptr_t BlockSize : (sizeof(intptr_t)*CHAR_BIT - 2);$/;"	m	struct:__anon189::MemoryRangeHeader	file:
BlockSizes	Target/MSP430/MSP430BranchSelector.cpp	/^    std::vector<unsigned> BlockSizes;$/;"	m	struct:__anon396::MSP430BSel	file:
BlockSizes	Target/PowerPC/PPCBranchSelector.cpp	/^    std::vector<unsigned> BlockSizes;$/;"	m	struct:__anon323::PPCBSel	file:
BlockTag	Transforms/Instrumentation/GCOVProfiling.cpp	/^    static const char *BlockTag;$/;"	m	class:__anon490::GCOVRecord	file:
BlockTag	Transforms/Instrumentation/GCOVProfiling.cpp	/^  const char *GCOVRecord::BlockTag = "\\0\\0\\x41\\x01";$/;"	m	class:__anon490::GCOVRecord	file:
BlockToChain	CodeGen/MachineBlockPlacement.cpp	/^  BlockToChainMapType &BlockToChain;$/;"	m	class:__anon106::BlockChain	file:
BlockToChain	CodeGen/MachineBlockPlacement.cpp	/^  DenseMap<MachineBasicBlock *, BlockChain *> BlockToChain;$/;"	m	class:__anon107::MachineBlockPlacement	file:
BlockToChain	CodeGen/MachineBlockPlacement.cpp	/^  const BlockToChainMapType &BlockToChain;$/;"	m	class:__anon108::IsBlockPlaced	file:
BlockToChainMapType	CodeGen/MachineBlockPlacement.cpp	/^typedef DenseMap<MachineBasicBlock *, BlockChain *> BlockToChainMapType;$/;"	t	namespace:__anon105	file:
BlockToDuplicateMap	Analysis/PathProfileVerifier.cpp	/^typedef std::map<BasicBlock*,DuplicateToIndexMap> BlockToDuplicateMap;$/;"	t	file:
BlockValueStack	Analysis/LazyValueInfo.cpp	/^    std::stack<std::pair<BasicBlock*, Value*> > BlockValueStack;$/;"	m	class:__anon20::LazyValueInfoCache	file:
Blocks	CodeGen/InterferenceCache.h	/^    SmallVector<BlockInterference, 8> Blocks;$/;"	m	class:llvm::InterferenceCache::Entry
Blocks	CodeGen/MachineBlockPlacement.cpp	/^  SmallVector<MachineBasicBlock *, 4> Blocks;$/;"	m	class:__anon106::BlockChain	file:
Blocks	CodeGen/MachineTraceMetrics.cpp	/^  MutableArrayRef<MachineTraceMetrics::TraceBlockInfo> Blocks;$/;"	m	struct:__anon132::LoopBounds	file:
Blocks	Transforms/Instrumentation/GCOVProfiling.cpp	/^    DenseMap<BasicBlock *, GCOVBlock *> Blocks;$/;"	m	class:__anon490::GCOVFunction	file:
BlocksToNotExtract	Transforms/IPO/LoopExtractor.cpp	/^    std::vector<BasicBlock*> BlocksToNotExtract;$/;"	m	class:__anon582::BlockExtractorPass	file:
BlocksToNotExtractByName	Transforms/IPO/LoopExtractor.cpp	/^    std::vector<std::pair<std::string, std::string> > BlocksToNotExtractByName;$/;"	m	class:__anon582::BlockExtractorPass	file:
Body	MC/MCParser/AsmParser.cpp	/^  StringRef Body;$/;"	m	struct:__anon211::Macro	file:
Bogus	Support/APFloat.cpp	/^  const fltSemantics APFloat::Bogus = { 0, 0, 0, true };$/;"	m	class:llvm::APFloat	file:
BorderConstraint	CodeGen/SpillPlacement.h	/^  enum BorderConstraint {$/;"	g	class:llvm::SpillPlacement
Bot	CodeGen/MachineScheduler.cpp	/^  SchedBoundary Bot;$/;"	m	class:__anon126::ConvergingScheduler	file:
Bot	Target/Hexagon/HexagonMachineScheduler.h	/^  SchedBoundary Bot;$/;"	m	class:llvm::ConvergingVLIWScheduler
BotQID	CodeGen/MachineScheduler.cpp	/^    BotQID = 2,$/;"	e	enum:__anon126::ConvergingScheduler::__anon127	file:
BotQID	Target/Hexagon/HexagonMachineScheduler.h	/^    BotQID = 2,$/;"	e	enum:llvm::ConvergingVLIWScheduler::__anon405
BottomQ	CodeGen/MachineScheduler.cpp	/^    BottomQ;$/;"	m	class:__anon129::InstructionShuffler	file:
BottomUpPathCount	Transforms/Scalar/ObjCARC.cpp	/^    unsigned BottomUpPathCount;$/;"	m	class:__anon507::BBState	file:
BoundsChecking	Transforms/Instrumentation/BoundsChecking.cpp	/^    BoundsChecking(unsigned _Penalty = 5) : FunctionPass(ID), Penalty(_Penalty){$/;"	f	struct:__anon493::BoundsChecking
BoundsChecking	Transforms/Instrumentation/BoundsChecking.cpp	/^  struct BoundsChecking : public FunctionPass {$/;"	s	namespace:__anon493	file:
Br	Target/Mips/MipsLongBranch.cpp	/^    MachineInstr *Br;$/;"	m	struct:__anon437::MBBInfo	file:
BrCond	CodeGen/IfConversion.cpp	/^      SmallVector<MachineOperand, 4> BrCond;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
BrFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    BrFrm         = 2  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
BrMiscFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    BrMiscFrm     = 3  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
BranchFolder	CodeGen/BranchFolding.cpp	/^BranchFolder::BranchFolder(bool defaultEnableTailMerge, bool CommonHoist) {$/;"	f	class:BranchFolder
BranchFolder	CodeGen/BranchFolding.h	/^  class BranchFolder {$/;"	c	namespace:llvm
BranchFolderPass	CodeGen/BranchFolding.cpp	/^    explicit BranchFolderPass(): MachineFunctionPass(ID) {}$/;"	f	class:__anon98::BranchFolderPass
BranchFolderPass	CodeGen/BranchFolding.cpp	/^  class BranchFolderPass : public MachineFunctionPass {$/;"	c	namespace:__anon98	file:
BranchFolderPassID	CodeGen/BranchFolding.cpp	/^char &llvm::BranchFolderPassID = BranchFolderPass::ID;$/;"	m	class:llvm	file:
BranchInst	VMCore/Instructions.cpp	/^BranchInst::BranchInst(BasicBlock *IfTrue, BasicBlock *IfFalse, Value *Cond,$/;"	f	class:BranchInst
BranchInst	VMCore/Instructions.cpp	/^BranchInst::BranchInst(BasicBlock *IfTrue, BasicBlock *InsertAtEnd)$/;"	f	class:BranchInst
BranchInst	VMCore/Instructions.cpp	/^BranchInst::BranchInst(BasicBlock *IfTrue, Instruction *InsertBefore)$/;"	f	class:BranchInst
BranchInst	VMCore/Instructions.cpp	/^BranchInst::BranchInst(const BranchInst &BI) :$/;"	f	class:BranchInst
BranchTarget	MC/MCDisassembler/EDInst.h	/^  int BranchTarget;$/;"	m	struct:llvm::EDInst
Branchee	Analysis/Lint.cpp	/^    static unsigned Branchee = 8;$/;"	m	namespace:__anon5::MemRef	file:
BranchesInfo	Transforms/Scalar/LoopUnswitch.cpp	/^    LUAnalysisCache BranchesInfo;$/;"	m	class:__anon494::LoopUnswitch	file:
BreakAntiDependencies	CodeGen/AggressiveAntiDepBreaker.cpp	/^unsigned AggressiveAntiDepBreaker::BreakAntiDependencies($/;"	f	class:AggressiveAntiDepBreaker
BreakAntiDependencies	CodeGen/CriticalAntiDepBreaker.cpp	/^BreakAntiDependencies(const std::vector<SUnit>& SUnits,$/;"	f	class:CriticalAntiDepBreaker
BreakCriticalEdges	Transforms/Utils/BreakCriticalEdges.cpp	/^    BreakCriticalEdges() : FunctionPass(ID) {$/;"	f	struct:__anon476::BreakCriticalEdges
BreakCriticalEdges	Transforms/Utils/BreakCriticalEdges.cpp	/^  struct BreakCriticalEdges : public FunctionPass {$/;"	s	namespace:__anon476	file:
BreakCriticalEdgesID	Transforms/Utils/BreakCriticalEdges.cpp	/^char &llvm::BreakCriticalEdgesID = BreakCriticalEdges::ID;$/;"	m	class:llvm	file:
BreakUpSubtract	Transforms/Scalar/Reassociate.cpp	/^static BinaryOperator *BreakUpSubtract(Instruction *Sub) {$/;"	f	file:
Broken	VMCore/Verifier.cpp	/^    bool Broken;          \/\/ Is this module found to be broken?$/;"	m	struct:__anon610::Verifier	file:
BrokenHints	CodeGen/RegAllocGreedy.cpp	/^    unsigned BrokenHints; \/\/\/< Total number of broken hints.$/;"	m	struct:__anon158::RAGreedy::EvictionCost	file:
BucketList	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  typedef std::vector<HashList> BucketList;$/;"	t	class:llvm::DwarfAccelTable
Buckets	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  BucketList Buckets;$/;"	m	class:llvm::DwarfAccelTable
Buffer	Bitcode/Reader/BitcodeReader.h	/^  MemoryBuffer *Buffer;$/;"	m	class:llvm::BitcodeReader
BufferOwned	Bitcode/Reader/BitcodeReader.h	/^  bool BufferOwned;$/;"	m	class:llvm::BitcodeReader
BuildCondBr	Target/Mips/MipsInstrInfo.cpp	/^void MipsInstrInfo::BuildCondBr(MachineBasicBlock &MBB,$/;"	f	class:MipsInstrInfo
BuildConstantFromSCEV	Analysis/ScalarEvolution.cpp	/^static Constant *BuildConstantFromSCEV(const SCEV *V) {$/;"	f	file:
BuildExactSDIV	CodeGen/SelectionDAG/TargetLowering.cpp	/^SDValue TargetLowering::BuildExactSDIV(SDValue Op1, SDValue Op2, DebugLoc dl,$/;"	f	class:TargetLowering
BuildFILD	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::BuildFILD(SDValue Op, EVT SrcVT, SDValue Chain,$/;"	f	class:X86TargetLowering
BuildGetId	Target/XCore/XCoreISelLowering.cpp	/^static inline SDValue BuildGetId(SelectionDAG &DAG, DebugLoc dl) {$/;"	f	file:
BuildIntrinsicOp	Target/PowerPC/PPCISelLowering.cpp	/^static SDValue BuildIntrinsicOp(unsigned IID, SDValue LHS, SDValue RHS,$/;"	f	file:
BuildIntrinsicOp	Target/PowerPC/PPCISelLowering.cpp	/^static SDValue BuildIntrinsicOp(unsigned IID, SDValue Op0, SDValue Op1,$/;"	f	file:
BuildLazyArguments	VMCore/Function.cpp	/^void Function::BuildLazyArguments() const {$/;"	f	class:Function
BuildLookup	Transforms/Utils/SimplifyCFG.cpp	/^Value *SwitchLookupTable::BuildLookup(Value *Index, IRBuilder<> &Builder) {$/;"	f	class:SwitchLookupTable
BuildPairF64	Target/Mips/MipsISelLowering.h	/^      BuildPairF64,$/;"	e	enum:llvm::MipsISD::NodeType
BuildRankMap	Transforms/Scalar/Reassociate.cpp	/^void Reassociate::BuildRankMap(Function &F) {$/;"	f	class:Reassociate
BuildSDIV	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::BuildSDIV(SDNode *N) {$/;"	f	class:DAGCombiner
BuildSDIV	CodeGen/SelectionDAG/TargetLowering.cpp	/^BuildSDIV(SDNode *N, SelectionDAG &DAG, bool IsAfterLegalization,$/;"	f	class:TargetLowering
BuildSchedGraph	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::BuildSchedGraph(AliasAnalysis *AA) {$/;"	f	class:ScheduleDAGSDNodes
BuildSchedUnits	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::BuildSchedUnits() {$/;"	f	class:ScheduleDAGSDNodes
BuildSplatI	Target/PowerPC/PPCISelLowering.cpp	/^static SDValue BuildSplatI(int Val, unsigned SplatSize, EVT VT,$/;"	f	file:
BuildSubAggregate	Analysis/ValueTracking.cpp	/^static Value *BuildSubAggregate(Value *From, ArrayRef<unsigned> idx_range,$/;"	f	file:
BuildSubAggregate	Analysis/ValueTracking.cpp	/^static Value *BuildSubAggregate(Value *From, Value* To, Type *IndexedType,$/;"	f	file:
BuildSymbolDiff	MC/MCStreamer.cpp	/^const MCExpr *MCStreamer::BuildSymbolDiff(MCContext &Context,$/;"	f	class:MCStreamer
BuildUDIV	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::BuildUDIV(SDNode *N) {$/;"	f	class:DAGCombiner
BuildUDIV	CodeGen/SelectionDAG/TargetLowering.cpp	/^BuildUDIV(SDNode *N, SelectionDAG &DAG, bool IsAfterLegalization,$/;"	f	class:TargetLowering
BuildVSLDOI	Target/PowerPC/PPCISelLowering.cpp	/^static SDValue BuildVSLDOI(SDValue LHS, SDValue RHS, unsigned Amt,$/;"	f	file:
BuildVectorFromScalar	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^static SDValue BuildVectorFromScalar(SelectionDAG& DAG, EVT VecTy,$/;"	f	file:
Builder	CodeGen/ShadowStackGC.cpp	/^    IRBuilder<> Builder;$/;"	m	class:__anon149::EscapeEnumerator	file:
Builder	Transforms/InstCombine/InstCombine.h	/^  BuilderTy *Builder;$/;"	m	class:llvm::InstCombiner
Builder	Transforms/Instrumentation/BoundsChecking.cpp	/^    BuilderTy *Builder;$/;"	m	struct:__anon493::BoundsChecking	file:
Builder	Transforms/Vectorize/LoopVectorize.cpp	/^  IRBuilder<> Builder;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
BuilderBase	Transforms/Scalar/SROA.cpp	/^  BuilderBase(const DataLayout &TD, AllocaInst &AI, AllocaPartitioning &P)$/;"	f	class:AllocaPartitioning::BuilderBase
BuilderBase	Transforms/Scalar/SROA.cpp	/^class AllocaPartitioning::BuilderBase$/;"	c	class:AllocaPartitioning	file:
BuilderTy	Transforms/InstCombine/InstCombine.h	/^  typedef IRBuilder<true, TargetFolder, InstCombineIRInserter> BuilderTy;$/;"	t	class:llvm::InstCombiner
BuilderTy	Transforms/Instrumentation/BoundsChecking.cpp	/^typedef IRBuilder<true, TargetFolder> BuilderTy;$/;"	t	file:
BuiltinSetjmpFn	CodeGen/SjLjEHPrepare.cpp	/^    Constant *BuiltinSetjmpFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
BumpPtrAllocator	Support/Allocator.cpp	/^BumpPtrAllocator::BumpPtrAllocator(size_t size, size_t threshold,$/;"	f	class:llvm::BumpPtrAllocator
BumpSlabAllocator	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    JITSlabAllocator BumpSlabAllocator;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
BundleCand	CodeGen/RegAllocGreedy.cpp	/^  SmallVector<unsigned, 32> BundleCand;$/;"	m	class:__anon158::RAGreedy	file:
Bundles	CodeGen/RegAllocGreedy.cpp	/^  EdgeBundles *Bundles;$/;"	m	class:__anon158::RAGreedy	file:
Bundles	Target/X86/X86FloatingPoint.cpp	/^    EdgeBundles *Bundles;$/;"	m	struct:__anon386::FPS	file:
ByteAlignment	MC/MCELFStreamer.cpp	/^    unsigned ByteAlignment;$/;"	m	struct:__anon215::MCELFStreamer::LocalCommon	file:
ByteRange	Transforms/Scalar/SROA.cpp	/^    ByteRange() : BeginOffset(), EndOffset() {}$/;"	f	struct:__anon557::AllocaPartitioning::ByteRange
ByteRange	Transforms/Scalar/SROA.cpp	/^    ByteRange(uint64_t BeginOffset, uint64_t EndOffset)$/;"	f	struct:__anon557::AllocaPartitioning::ByteRange
ByteRange	Transforms/Scalar/SROA.cpp	/^  struct ByteRange {$/;"	s	class:__anon557::AllocaPartitioning	file:
ByteReaderWrapper	MC/MCDisassembler/EDMain.cpp	/^struct ByteReaderWrapper {$/;"	s	file:
ByteSize	MC/MCDisassembler/EDInst.h	/^  uint64_t ByteSize;$/;"	m	struct:llvm::EDInst
ByteSwap	Analysis/ProfileInfoLoader.cpp	/^static inline unsigned ByteSwap(unsigned Var, bool Really) {$/;"	f	file:
Bytes	MC/MCDisassembler/Disassembler.cpp	/^  uint8_t *Bytes;$/;"	m	class:__anon207::DisasmMemoryObject	file:
BytesToPopOnReturn	Target/X86/X86MachineFunctionInfo.h	/^  unsigned BytesToPopOnReturn;$/;"	m	class:llvm::X86MachineFunctionInfo
C	Transforms/Instrumentation/AddressSanitizer.cpp	/^  LLVMContext *C;$/;"	m	struct:__anon491::AddressSanitizer	file:
C	Transforms/Scalar/SROA.cpp	/^  LLVMContext *C;$/;"	m	class:__anon559::SROA	file:
CA	Transforms/IPO/InlineSimple.cpp	/^    InlineCostAnalyzer CA;$/;"	m	class:__anon595::SimpleInliner	file:
CALL	Target/ARM/ARMISelLowering.h	/^      CALL,         \/\/ Function call.$/;"	e	enum:llvm::ARMISD::NodeType
CALL	Target/CellSPU/SPUISelLowering.h	/^      CALL,                     \/\/\/< CALL instruction$/;"	e	enum:llvm::SPUISD::NodeType
CALL	Target/Hexagon/HexagonISelLowering.h	/^      CALL,        \/\/ A call instruction.$/;"	e	enum:llvm::HexagonISD::__anon404
CALL	Target/MSP430/MSP430ISelLowering.h	/^      CALL,$/;"	e	enum:llvm::MSP430ISD::__anon397
CALL	Target/NVPTX/NVPTXISelLowering.h	/^  CALL,$/;"	e	enum:llvm::NVPTXISD::NodeType
CALL	Target/Sparc/SparcISelLowering.h	/^      CALL,        \/\/ A call instruction.$/;"	e	enum:llvm::SPISD::__anon444
CALL	Target/X86/X86ISelLowering.h	/^      CALL,$/;"	e	enum:llvm::X86ISD::NodeType
CALL_Darwin	Target/PowerPC/PPCISelLowering.h	/^      CALL_Darwin, CALL_SVR4, CALL_NOP_SVR4,$/;"	e	enum:llvm::PPCISD::NodeType
CALL_NOLINK	Target/ARM/ARMISelLowering.h	/^      CALL_NOLINK,  \/\/ Function call with branch not branch-and-link.$/;"	e	enum:llvm::ARMISD::NodeType
CALL_NOP_SVR4	Target/PowerPC/PPCISelLowering.h	/^      CALL_Darwin, CALL_SVR4, CALL_NOP_SVR4,$/;"	e	enum:llvm::PPCISD::NodeType
CALL_PRED	Target/ARM/ARMISelLowering.h	/^      CALL_PRED,    \/\/ Function call that's predicable.$/;"	e	enum:llvm::ARMISD::NodeType
CALL_SVR4	Target/PowerPC/PPCISelLowering.h	/^      CALL_Darwin, CALL_SVR4, CALL_NOP_SVR4,$/;"	e	enum:llvm::PPCISD::NodeType
CAZConstants	VMCore/LLVMContextImpl.h	/^  DenseMap<Type*, ConstantAggregateZero*> CAZConstants;$/;"	m	class:llvm::LLVMContextImpl
CC	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    ISD::CondCode CC;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBlock
CC	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } CC;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon263	file:
CC	Target/MBlaze/MBlazeISelLowering.h	/^    enum CC {$/;"	g	namespace:llvm::MBlazeCC
CCAssignFnForCall	Target/ARM/ARMFastISel.cpp	/^CCAssignFn *ARMFastISel::CCAssignFnForCall(CallingConv::ID CC,$/;"	f	class:ARMFastISel
CCAssignFnForNode	Target/ARM/ARMISelLowering.cpp	/^CCAssignFn *ARMTargetLowering::CCAssignFnForNode(CallingConv::ID CC,$/;"	f	class:ARMTargetLowering
CCState	CodeGen/CallingConvLower.cpp	/^CCState::CCState(CallingConv::ID CC, bool isVarArg, MachineFunction &mf,$/;"	f	class:CCState
CC_ARM_AAPCS_Custom_f64	Target/ARM/ARMCallingConv.h	/^static bool CC_ARM_AAPCS_Custom_f64(unsigned &ValNo, MVT &ValVT, MVT &LocVT,$/;"	f	namespace:llvm
CC_ARM_APCS_Custom_f64	Target/ARM/ARMCallingConv.h	/^static bool CC_ARM_APCS_Custom_f64(unsigned &ValNo, MVT &ValVT, MVT &LocVT,$/;"	f	namespace:llvm
CC_Hexagon	Target/Hexagon/HexagonISelLowering.cpp	/^CC_Hexagon (unsigned ValNo, MVT ValVT,$/;"	f	file:
CC_Hexagon32	Target/Hexagon/HexagonISelLowering.cpp	/^static bool CC_Hexagon32(unsigned ValNo, MVT ValVT,$/;"	f	file:
CC_Hexagon32_VarArgs	Target/Hexagon/HexagonVarargsCallingConvention.h	/^static bool CC_Hexagon32_VarArgs(unsigned ValNo, EVT ValVT,$/;"	f
CC_Hexagon64	Target/Hexagon/HexagonISelLowering.cpp	/^static bool CC_Hexagon64(unsigned ValNo, MVT ValVT,$/;"	f	file:
CC_Hexagon_VarArg	Target/Hexagon/HexagonISelLowering.cpp	/^CC_Hexagon_VarArg (unsigned ValNo, MVT ValVT,$/;"	f	file:
CC_MBlaze_AssignReg	Target/MBlaze/MBlazeISelLowering.cpp	/^static bool CC_MBlaze_AssignReg(unsigned &ValNo, MVT &ValVT, MVT &LocVT,$/;"	f	file:
CC_Mips64Byval	Target/Mips/MipsISelLowering.cpp	/^static bool CC_Mips64Byval(unsigned ValNo, MVT ValVT, MVT LocVT,$/;"	f	file:
CC_MipsO32	Target/Mips/MipsISelLowering.cpp	/^static bool CC_MipsO32(unsigned ValNo, MVT ValVT,$/;"	f	file:
CC_PPC_SVR4_Custom_AlignArgRegs	Target/PowerPC/PPCISelLowering.cpp	/^static bool CC_PPC_SVR4_Custom_AlignArgRegs(unsigned &ValNo, MVT &ValVT,$/;"	f	file:
CC_PPC_SVR4_Custom_AlignFPArgRegs	Target/PowerPC/PPCISelLowering.cpp	/^static bool CC_PPC_SVR4_Custom_AlignFPArgRegs(unsigned &ValNo, MVT &ValVT,$/;"	f	file:
CC_PPC_SVR4_Custom_Dummy	Target/PowerPC/PPCISelLowering.cpp	/^static bool CC_PPC_SVR4_Custom_Dummy(unsigned &ValNo, MVT &ValVT, MVT &LocVT,$/;"	f	file:
CC_Sparc_Assign_SRet	Target/Sparc/SparcISelLowering.cpp	/^static bool CC_Sparc_Assign_SRet(unsigned &ValNo, MVT &ValVT,$/;"	f	file:
CC_Sparc_Assign_f64	Target/Sparc/SparcISelLowering.cpp	/^static bool CC_Sparc_Assign_f64(unsigned &ValNo, MVT &ValVT,$/;"	f	file:
CDECL	ExecutionEngine/IntelJITEvents/ittnotify_config.h	77;"	d
CDECL	ExecutionEngine/IntelJITEvents/ittnotify_config.h	80;"	d
CDECL	ExecutionEngine/IntelJITEvents/ittnotify_config.h	82;"	d
CDECL	ExecutionEngine/IntelJITEvents/jitprofiling.h	226;"	d
CDECL	ExecutionEngine/IntelJITEvents/jitprofiling.h	229;"	d
CDECL	ExecutionEngine/IntelJITEvents/jitprofiling.h	231;"	d
CDSConstants	VMCore/LLVMContextImpl.h	/^  StringMap<ConstantDataSequential*> CDSConstants;$/;"	m	class:llvm::LLVMContextImpl
CEBCandidates	CodeGen/MachineSink.cpp	/^    CEBCandidates;$/;"	m	class:__anon101::MachineSinking	file:
CELLSPUSELECTIONDAGINFO_H	Target/CellSPU/SPUSelectionDAGInfo.h	15;"	d
CELLSUBTARGET_H	Target/CellSPU/SPUSubtarget.h	15;"	d
CFAOffset	MC/MCDwarf.cpp	/^    int CFAOffset;$/;"	m	class:__anon223::FrameEmitterImpl	file:
CFGOnlyList	VMCore/Pass.cpp	/^    VectorType &CFGOnlyList;$/;"	m	struct:__anon616::GetCFGOnlyPasses	file:
CFGOnlyPrinter	Analysis/CFGPrinter.cpp	/^    CFGOnlyPrinter() : FunctionPass(ID) {$/;"	f	struct:__anon27::CFGOnlyPrinter
CFGOnlyPrinter	Analysis/CFGPrinter.cpp	/^  struct CFGOnlyPrinter : public FunctionPass {$/;"	s	namespace:__anon27	file:
CFGOnlyViewer	Analysis/CFGPrinter.cpp	/^    CFGOnlyViewer() : FunctionPass(ID) {$/;"	f	struct:__anon25::CFGOnlyViewer
CFGOnlyViewer	Analysis/CFGPrinter.cpp	/^  struct CFGOnlyViewer : public FunctionPass {$/;"	s	namespace:__anon25	file:
CFGPrinter	Analysis/CFGPrinter.cpp	/^    CFGPrinter() : FunctionPass(ID) {$/;"	f	struct:__anon26::CFGPrinter
CFGPrinter	Analysis/CFGPrinter.cpp	/^  struct CFGPrinter : public FunctionPass {$/;"	s	namespace:__anon26	file:
CFGSimplifyPass	Transforms/Scalar/SimplifyCFGPass.cpp	/^    CFGSimplifyPass() : FunctionPass(ID) {$/;"	f	struct:__anon551::CFGSimplifyPass
CFGSimplifyPass	Transforms/Scalar/SimplifyCFGPass.cpp	/^  struct CFGSimplifyPass : public FunctionPass {$/;"	s	namespace:__anon551	file:
CFGViewer	Analysis/CFGPrinter.cpp	/^    CFGViewer() : FunctionPass(ID) {$/;"	f	struct:__anon24::CFGViewer
CFGViewer	Analysis/CFGPrinter.cpp	/^  struct CFGViewer : public FunctionPass {$/;"	s	namespace:__anon24	file:
CFI	Target/X86/X86JITInfo.cpp	74;"	d	file:
CFI	Target/X86/X86JITInfo.cpp	79;"	d	file:
CFP	CodeGen/AsmPrinter/DwarfDebug.h	/^    const ConstantFP *CFP;$/;"	m	union:llvm::DotDebugLocEntry::__anon64
CGBR	Target/X86/X86InstrInfo.cpp	/^    CGBR() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon375::CGBR
CGBR	Target/X86/X86InstrInfo.cpp	/^  struct CGBR : public MachineFunctionPass {$/;"	s	namespace:__anon375	file:
CGPassManager	Analysis/IPA/CallGraphSCCPass.cpp	/^  explicit CGPassManager() $/;"	f	class:__anon3::CGPassManager
CGPassManager	Analysis/IPA/CallGraphSCCPass.cpp	/^class CGPassManager : public ModulePass, public PMDataManager {$/;"	c	namespace:__anon3	file:
CHIN	Support/regex2.h	115;"	d
CHadd	Support/regex2.h	113;"	d
CHsub	Support/regex2.h	114;"	d
CI	Transforms/Utils/SimplifyLibCalls.cpp	/^  CallInst *CI;$/;"	m	struct:__anon473::InstFortifiedLibCallOptimization	file:
CIEKey	MC/MCDwarf.cpp	/^    CIEKey(const MCSymbol* Personality_, unsigned PersonalityEncoding_,$/;"	f	struct:__anon224::CIEKey
CIEKey	MC/MCDwarf.cpp	/^  struct CIEKey {$/;"	s	namespace:__anon224	file:
CIENum	MC/MCDwarf.cpp	/^    int CIENum;$/;"	m	class:__anon223::FrameEmitterImpl	file:
CIP	CodeGen/AsmPrinter/DwarfDebug.h	/^    const ConstantInt *CIP;$/;"	m	union:llvm::DotDebugLocEntry::__anon64
CLEAR	Support/regexec.c	107;"	d	file:
CLEAR	Support/regexec.c	60;"	d	file:
CLEAR	Support/regexec.c	86;"	d	file:
CLK_A	Target/NVPTX/cl_common_defines.h	/^  CLK_A = 0x10B1,$/;"	e	enum:__anon318
CLK_ADDRESS_CLAMP	Target/NVPTX/cl_common_defines.h	/^    CLK_ADDRESS_CLAMP              = 1 << __CLK_ADDRESS_BASE,$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_CLAMP_TO_EDGE	Target/NVPTX/cl_common_defines.h	/^    CLK_ADDRESS_CLAMP_TO_EDGE      = 2 << __CLK_ADDRESS_BASE,$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_MIRROR	Target/NVPTX/cl_common_defines.h	/^    CLK_ADDRESS_MIRROR             = 4 << __CLK_ADDRESS_BASE,$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_MIRRORED_REPEAT	Target/NVPTX/cl_common_defines.h	/^    CLK_ADDRESS_MIRRORED_REPEAT    = CLK_ADDRESS_MIRROR,$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_NONE	Target/NVPTX/cl_common_defines.h	/^    CLK_ADDRESS_NONE               = 0 << __CLK_ADDRESS_BASE,$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_REPEAT	Target/NVPTX/cl_common_defines.h	/^    CLK_ADDRESS_REPEAT             = 3 << __CLK_ADDRESS_BASE,$/;"	e	enum:clk_sampler_type
CLK_ARGB	Target/NVPTX/cl_common_defines.h	/^  CLK_ARGB = 0x10B7,$/;"	e	enum:__anon318
CLK_BGRA	Target/NVPTX/cl_common_defines.h	/^  CLK_BGRA = 0x10B6,$/;"	e	enum:__anon318
CLK_FILTER_ANISOTROPIC	Target/NVPTX/cl_common_defines.h	/^    CLK_FILTER_ANISOTROPIC         = 2 << __CLK_FILTER_BASE,$/;"	e	enum:clk_sampler_type
CLK_FILTER_LINEAR	Target/NVPTX/cl_common_defines.h	/^    CLK_FILTER_LINEAR              = 1 << __CLK_FILTER_BASE,$/;"	e	enum:clk_sampler_type
CLK_FILTER_NEAREST	Target/NVPTX/cl_common_defines.h	/^    CLK_FILTER_NEAREST             = 0 << __CLK_FILTER_BASE,$/;"	e	enum:clk_sampler_type
CLK_FLOAT	Target/NVPTX/cl_common_defines.h	/^  CLK_FLOAT = 0x10DE,                 \/\/ four channel RGBA float$/;"	e	enum:clk_channel_type
CLK_GLOBAL_MEM_FENCE	Target/NVPTX/cl_common_defines.h	123;"	d
CLK_HALF_FLOAT	Target/NVPTX/cl_common_defines.h	/^  CLK_HALF_FLOAT = 0x10DD,            \/\/ four channel RGBA half$/;"	e	enum:clk_channel_type
CLK_INTENSITY	Target/NVPTX/cl_common_defines.h	/^  CLK_INTENSITY = 0x10B8,$/;"	e	enum:__anon318
CLK_LOCAL_MEM_FENCE	Target/NVPTX/cl_common_defines.h	122;"	d
CLK_LUMINANCE	Target/NVPTX/cl_common_defines.h	/^  CLK_LUMINANCE = 0x10B9$/;"	e	enum:__anon318
CLK_MIP_ANISOTROPIC	Target/NVPTX/cl_common_defines.h	/^    CLK_MIP_ANISOTROPIC            = 2 << __CLK_MIP_BASE,$/;"	e	enum:clk_sampler_type
CLK_MIP_LINEAR	Target/NVPTX/cl_common_defines.h	/^    CLK_MIP_LINEAR                 = 1 << __CLK_MIP_BASE,$/;"	e	enum:clk_sampler_type
CLK_MIP_NEAREST	Target/NVPTX/cl_common_defines.h	/^    CLK_MIP_NEAREST                = 0 << __CLK_MIP_BASE,$/;"	e	enum:clk_sampler_type
CLK_NORMALIZED_COORDS_FALSE	Target/NVPTX/cl_common_defines.h	/^    CLK_NORMALIZED_COORDS_FALSE    = 0,$/;"	e	enum:clk_sampler_type
CLK_NORMALIZED_COORDS_TRUE	Target/NVPTX/cl_common_defines.h	/^    CLK_NORMALIZED_COORDS_TRUE     = 1 << __CLK_NORMALIZED_BASE,$/;"	e	enum:clk_sampler_type
CLK_R	Target/NVPTX/cl_common_defines.h	/^  CLK_R = 0x10B0,$/;"	e	enum:__anon318
CLK_RA	Target/NVPTX/cl_common_defines.h	/^  CLK_RA = 0x10B3,$/;"	e	enum:__anon318
CLK_RG	Target/NVPTX/cl_common_defines.h	/^  CLK_RG = 0x10B2,$/;"	e	enum:__anon318
CLK_RGB	Target/NVPTX/cl_common_defines.h	/^  CLK_RGB = 0x10B4,$/;"	e	enum:__anon318
CLK_RGBA	Target/NVPTX/cl_common_defines.h	/^  CLK_RGBA = 0x10B5,$/;"	e	enum:__anon318
CLK_RGBx	Target/NVPTX/cl_common_defines.h	/^  CLK_RGBx = 0x10BC$/;"	e	enum:__anon318
CLK_RGx	Target/NVPTX/cl_common_defines.h	/^  CLK_RGx = 0x10BB,$/;"	e	enum:__anon318
CLK_Rx	Target/NVPTX/cl_common_defines.h	/^  CLK_Rx = 0x10BA,$/;"	e	enum:__anon318
CLK_SIGNED_INT16	Target/NVPTX/cl_common_defines.h	/^  CLK_SIGNED_INT16 = 0x10D8,$/;"	e	enum:clk_channel_type
CLK_SIGNED_INT32	Target/NVPTX/cl_common_defines.h	/^  CLK_SIGNED_INT32 = 0x10D9,$/;"	e	enum:clk_channel_type
CLK_SIGNED_INT8	Target/NVPTX/cl_common_defines.h	/^  CLK_SIGNED_INT8 =  0x10D7,$/;"	e	enum:clk_channel_type
CLK_SNORM_INT16	Target/NVPTX/cl_common_defines.h	/^  CLK_SNORM_INT16 = 0x10D1,           \/\/ four channel RGBA unorm16$/;"	e	enum:clk_channel_type
CLK_SNORM_INT8	Target/NVPTX/cl_common_defines.h	/^  CLK_SNORM_INT8 = 0x10D0,            \/\/ four channel RGBA unorm8$/;"	e	enum:clk_channel_type
CLK_UNORM_INT16	Target/NVPTX/cl_common_defines.h	/^  CLK_UNORM_INT16 = 0x10D3,           \/\/ four channel RGBA unorm16$/;"	e	enum:clk_channel_type
CLK_UNORM_INT8	Target/NVPTX/cl_common_defines.h	/^  CLK_UNORM_INT8 = 0x10D2,            \/\/ four channel RGBA unorm8$/;"	e	enum:clk_channel_type
CLK_UNORM_INT_101010	Target/NVPTX/cl_common_defines.h	/^  CLK_UNORM_INT_101010 = 0x10D6,$/;"	e	enum:clk_channel_type
CLK_UNORM_SHORT_555	Target/NVPTX/cl_common_defines.h	/^  CLK_UNORM_SHORT_555 = 0x10D5,$/;"	e	enum:clk_channel_type
CLK_UNORM_SHORT_565	Target/NVPTX/cl_common_defines.h	/^  CLK_UNORM_SHORT_565 = 0x10D4,$/;"	e	enum:clk_channel_type
CLK_UNSIGNED_INT16	Target/NVPTX/cl_common_defines.h	/^  CLK_UNSIGNED_INT16 = 0x10DB,$/;"	e	enum:clk_channel_type
CLK_UNSIGNED_INT32	Target/NVPTX/cl_common_defines.h	/^  CLK_UNSIGNED_INT32 = 0x10DC,$/;"	e	enum:clk_channel_type
CLK_UNSIGNED_INT8	Target/NVPTX/cl_common_defines.h	/^  CLK_UNSIGNED_INT8 = 0x10DA,$/;"	e	enum:clk_channel_type
CLK_xRGB	Target/NVPTX/cl_common_defines.h	/^  CLK_xRGB = 0x10B7,$/;"	e	enum:__anon318
CMN	Target/ARM/ARMISelLowering.h	/^      CMN,          \/\/ ARM CMN instructions.$/;"	e	enum:llvm::ARMISD::NodeType
CMOV	Target/ARM/ARMISelLowering.h	/^      CMOV,         \/\/ ARM conditional move instructions.$/;"	e	enum:llvm::ARMISD::NodeType
CMOV	Target/X86/X86ISelLowering.h	/^      CMOV,$/;"	e	enum:llvm::X86ISD::NodeType
CMP	Target/ARM/ARMISelLowering.h	/^      CMP,          \/\/ ARM compare instructions.$/;"	e	enum:llvm::ARMISD::NodeType
CMP	Target/MSP430/MSP430ISelLowering.h	/^      CMP,$/;"	e	enum:llvm::MSP430ISD::__anon397
CMP	Target/X86/X86ISelLowering.h	/^      CMP, COMI, UCOMI,$/;"	e	enum:llvm::X86ISD::NodeType
CMPEQCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue CMPEQCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
CMPFCC	Target/Hexagon/HexagonISelLowering.h	/^      CMPFCC,      \/\/ Compare two FP operands, set fcc.$/;"	e	enum:llvm::HexagonISD::__anon404
CMPFCC	Target/Sparc/SparcISelLowering.h	/^      CMPFCC,      \/\/ Compare two FP operands, set fcc.$/;"	e	enum:llvm::SPISD::__anon444
CMPFP	Target/ARM/ARMISelLowering.h	/^      CMPFP,        \/\/ ARM VFP compare instruction, sets FPSCR.$/;"	e	enum:llvm::ARMISD::NodeType
CMPFPw0	Target/ARM/ARMISelLowering.h	/^      CMPFPw0,      \/\/ ARM VFP compare against zero instruction, sets FPSCR.$/;"	e	enum:llvm::ARMISD::NodeType
CMPICC	Target/Hexagon/HexagonISelLowering.h	/^      CMPICC,      \/\/ Compare two GPR operands, set icc.$/;"	e	enum:llvm::HexagonISD::__anon404
CMPICC	Target/Sparc/SparcISelLowering.h	/^      CMPICC,      \/\/ Compare two GPR operands, set icc.$/;"	e	enum:llvm::SPISD::__anon444
CMPP	Target/X86/X86ISelLowering.h	/^      CMPP,$/;"	e	enum:llvm::X86ISD::NodeType
CMPZ	Target/ARM/ARMISelLowering.h	/^      CMPZ,         \/\/ ARM compare that sets only Z flag.$/;"	e	enum:llvm::ARMISD::NodeType
CMovFP_F	Target/Mips/MipsISelLowering.h	/^      CMovFP_F,$/;"	e	enum:llvm::MipsISD::NodeType
CMovFP_T	Target/Mips/MipsISelLowering.h	/^      CMovFP_T,$/;"	e	enum:llvm::MipsISD::NodeType
CNTB	Target/CellSPU/SPUISelLowering.h	/^      CNTB,                     \/\/\/< Count leading ones in bytes$/;"	e	enum:llvm::SPUISD::NodeType
CODEGEN_ASMPRINTER_DIE_H__	CodeGen/AsmPrinter/DIE.h	15;"	d
CODEGEN_ASMPRINTER_DWARFACCELTABLE_H__	CodeGen/AsmPrinter/DwarfAccelTable.h	15;"	d
CODEGEN_ASMPRINTER_DWARFCOMPILEUNIT_H	CodeGen/AsmPrinter/DwarfCompileUnit.h	15;"	d
CODEGEN_ASMPRINTER_DWARFDEBUG_H__	CodeGen/AsmPrinter/DwarfDebug.h	15;"	d
COFFAsmParser	MC/MCParser/COFFAsmParser.cpp	/^  COFFAsmParser() {}$/;"	f	class:__anon210::COFFAsmParser
COFFAsmParser	MC/MCParser/COFFAsmParser.cpp	/^class COFFAsmParser : public MCAsmParserExtension {$/;"	c	namespace:__anon210	file:
COFFObjectFile	Object/COFFObjectFile.cpp	/^COFFObjectFile::COFFObjectFile(MemoryBuffer *Object, error_code &ec)$/;"	f	class:COFFObjectFile
COFFRelocation	MC/WinCOFFObjectWriter.cpp	/^  COFFRelocation() : Symb(NULL) {}$/;"	f	struct:__anon222::COFFRelocation
COFFRelocation	MC/WinCOFFObjectWriter.cpp	/^struct COFFRelocation {$/;"	s	namespace:__anon222	file:
COFFSection	MC/WinCOFFObjectWriter.cpp	/^COFFSection::COFFSection(llvm::StringRef name)$/;"	f	class:COFFSection
COFFSection	MC/WinCOFFObjectWriter.cpp	/^class COFFSection {$/;"	c	namespace:__anon222	file:
COFFSymbol	MC/WinCOFFObjectWriter.cpp	/^COFFSymbol::COFFSymbol(llvm::StringRef name)$/;"	f	class:COFFSymbol
COFFSymbol	MC/WinCOFFObjectWriter.cpp	/^class COFFSymbol {$/;"	c	namespace:__anon222	file:
COFFUniqueMapTy	MC/MCContext.cpp	/^typedef StringMap<const MCSectionCOFF*> COFFUniqueMapTy;$/;"	t	file:
COMI	Target/X86/X86ISelLowering.h	/^      CMP, COMI, UCOMI,$/;"	e	enum:llvm::X86ISD::NodeType
COMPILE_TIME_ASSERT	Support/APFloat.cpp	31;"	d	file:
COMPILE_TIME_ASSERT	Support/APInt.cpp	2232;"	d	file:
COND_A	Target/X86/X86InstrInfo.h	/^    COND_A  = 0,$/;"	e	enum:llvm::X86::CondCode
COND_AE	Target/X86/X86InstrInfo.h	/^    COND_AE = 1,$/;"	e	enum:llvm::X86::CondCode
COND_B	Target/X86/X86InstrInfo.h	/^    COND_B  = 2,$/;"	e	enum:llvm::X86::CondCode
COND_BE	Target/X86/X86InstrInfo.h	/^    COND_BE = 3,$/;"	e	enum:llvm::X86::CondCode
COND_BRANCH	Target/PowerPC/PPCISelLowering.h	/^      COND_BRANCH,$/;"	e	enum:llvm::PPCISD::NodeType
COND_E	Target/MSP430/MSP430.h	/^    COND_E  = 0,  \/\/ aka COND_Z$/;"	e	enum:MSP430CC::CondCodes
COND_E	Target/X86/X86InstrInfo.h	/^    COND_E  = 4,$/;"	e	enum:llvm::X86::CondCode
COND_EQ	Target/MBlaze/MBlazeInstrInfo.h	/^    COND_EQ,$/;"	e	enum:llvm::MBlaze::CondCode
COND_FALSE	Target/XCore/XCoreInstrInfo.cpp	/^    COND_FALSE,$/;"	e	enum:llvm::XCore::CondCode	file:
COND_G	Target/X86/X86InstrInfo.h	/^    COND_G  = 5,$/;"	e	enum:llvm::X86::CondCode
COND_GE	Target/MBlaze/MBlazeInstrInfo.h	/^    COND_GE,$/;"	e	enum:llvm::MBlaze::CondCode
COND_GE	Target/MSP430/MSP430.h	/^    COND_GE = 4,$/;"	e	enum:MSP430CC::CondCodes
COND_GE	Target/X86/X86InstrInfo.h	/^    COND_GE = 6,$/;"	e	enum:llvm::X86::CondCode
COND_GT	Target/MBlaze/MBlazeInstrInfo.h	/^    COND_GT,$/;"	e	enum:llvm::MBlaze::CondCode
COND_HS	Target/MSP430/MSP430.h	/^    COND_HS = 2,  \/\/ aka COND_C$/;"	e	enum:MSP430CC::CondCodes
COND_INVALID	Target/MBlaze/MBlazeInstrInfo.h	/^    COND_INVALID$/;"	e	enum:llvm::MBlaze::CondCode
COND_INVALID	Target/MSP430/MSP430.h	/^    COND_INVALID = -1$/;"	e	enum:MSP430CC::CondCodes
COND_INVALID	Target/X86/X86InstrInfo.h	/^    COND_INVALID$/;"	e	enum:llvm::X86::CondCode
COND_INVALID	Target/XCore/XCoreInstrInfo.cpp	/^    COND_INVALID$/;"	e	enum:llvm::XCore::CondCode	file:
COND_L	Target/MSP430/MSP430.h	/^    COND_L  = 5,$/;"	e	enum:MSP430CC::CondCodes
COND_L	Target/X86/X86InstrInfo.h	/^    COND_L  = 7,$/;"	e	enum:llvm::X86::CondCode
COND_LE	Target/MBlaze/MBlazeInstrInfo.h	/^    COND_LE,$/;"	e	enum:llvm::MBlaze::CondCode
COND_LE	Target/X86/X86InstrInfo.h	/^    COND_LE = 8,$/;"	e	enum:llvm::X86::CondCode
COND_LO	Target/MSP430/MSP430.h	/^    COND_LO = 3,  \/\/ aka COND_NC$/;"	e	enum:MSP430CC::CondCodes
COND_LT	Target/MBlaze/MBlazeInstrInfo.h	/^    COND_LT,$/;"	e	enum:llvm::MBlaze::CondCode
COND_NE	Target/MBlaze/MBlazeInstrInfo.h	/^    COND_NE,$/;"	e	enum:llvm::MBlaze::CondCode
COND_NE	Target/MSP430/MSP430.h	/^    COND_NE = 1,  \/\/ aka COND_NZ$/;"	e	enum:MSP430CC::CondCodes
COND_NE	Target/X86/X86InstrInfo.h	/^    COND_NE = 9,$/;"	e	enum:llvm::X86::CondCode
COND_NE_OR_P	Target/X86/X86InstrInfo.h	/^    COND_NE_OR_P,$/;"	e	enum:llvm::X86::CondCode
COND_NO	Target/X86/X86InstrInfo.h	/^    COND_NO = 10,$/;"	e	enum:llvm::X86::CondCode
COND_NP	Target/X86/X86InstrInfo.h	/^    COND_NP = 11,$/;"	e	enum:llvm::X86::CondCode
COND_NP_OR_E	Target/X86/X86InstrInfo.h	/^    COND_NP_OR_E,$/;"	e	enum:llvm::X86::CondCode
COND_NS	Target/X86/X86InstrInfo.h	/^    COND_NS = 12,$/;"	e	enum:llvm::X86::CondCode
COND_O	Target/X86/X86InstrInfo.h	/^    COND_O  = 13,$/;"	e	enum:llvm::X86::CondCode
COND_P	Target/X86/X86InstrInfo.h	/^    COND_P  = 14,$/;"	e	enum:llvm::X86::CondCode
COND_S	Target/X86/X86InstrInfo.h	/^    COND_S  = 15,$/;"	e	enum:llvm::X86::CondCode
COND_TRUE	Target/XCore/XCoreInstrInfo.cpp	/^    COND_TRUE,$/;"	e	enum:llvm::XCore::CondCode	file:
CONST	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^    CONST = 1,              \/\/ value is a constant$/;"	e	enum:llvm::SDDbgValue::DbgValueKind
CONST32	Target/Hexagon/HexagonISelLowering.h	/^      CONST32,$/;"	e	enum:llvm::HexagonISD::__anon404
CONST32_GP	Target/Hexagon/HexagonISelLowering.h	/^      CONST32_GP,  \/\/ For marking data present in GP.$/;"	e	enum:llvm::HexagonISD::__anon404
CONSTANT	Target/NVPTX/NVPTX.h	/^  CONSTANT = 2,$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::AddressSpace
CONSTANTFOLDING_H	VMCore/ConstantFold.h	20;"	d
CONSTANTS_CE_CAST_Abbrev	Bitcode/Writer/BitcodeWriter.cpp	/^  CONSTANTS_CE_CAST_Abbrev,$/;"	e	enum:__anon57	file:
CONSTANTS_INTEGER_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  CONSTANTS_INTEGER_ABBREV,$/;"	e	enum:__anon57	file:
CONSTANTS_NULL_Abbrev	Bitcode/Writer/BitcodeWriter.cpp	/^  CONSTANTS_NULL_Abbrev,$/;"	e	enum:__anon57	file:
CONSTANTS_SETTYPE_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  CONSTANTS_SETTYPE_ABBREV = bitc::FIRST_APPLICATION_ABBREV,$/;"	e	enum:__anon57	file:
CONSUME_FUNC	Target/X86/Disassembler/X86DisassemblerDecoder.c	196;"	d	file:
CONTEXTS_STR	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	37;"	d
CONTEXTS_SYM	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	28;"	d
COPY_STRUCT_BYVAL	Target/ARM/ARMISelLowering.h	/^      COPY_STRUCT_BYVAL,$/;"	e	enum:llvm::ARMISD::NodeType
CP	CodeGen/RegisterCoalescer.cpp	/^  const CoalescerPair &CP;$/;"	m	class:__anon115::JoinVals	file:
CP	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    const Constant *CP;$/;"	m	struct:__anon392::MSP430ISelAddressMode	file:
CP	Target/X86/X86ISelDAGToDAG.cpp	/^    const Constant *CP;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
CPBlockAddress	Target/ARM/ARMConstantPoolValue.h	/^    CPBlockAddress,$/;"	e	enum:llvm::ARMCP::ARMCPKind
CPEClones	Target/ARM/ARMMachineFunctionInfo.h	/^  DenseMap<unsigned, unsigned> CPEClones;$/;"	m	class:llvm::ARMFunctionInfo
CPEMI	Target/ARM/ARMConstantIslandPass.cpp	/^      MachineInstr *CPEMI;$/;"	m	struct:__anon310::ARMConstantIslands::CPEntry	file:
CPEMI	Target/ARM/ARMConstantIslandPass.cpp	/^      MachineInstr *CPEMI;$/;"	m	struct:__anon310::ARMConstantIslands::CPUser	file:
CPEntries	Target/ARM/ARMConstantIslandPass.cpp	/^    std::vector<std::vector<CPEntry> > CPEntries;$/;"	m	class:__anon310::ARMConstantIslands	file:
CPEntry	Target/ARM/ARMConstantIslandPass.cpp	/^      CPEntry(MachineInstr *cpemi, unsigned cpi, unsigned rc = 0)$/;"	f	struct:__anon310::ARMConstantIslands::CPEntry
CPEntry	Target/ARM/ARMConstantIslandPass.cpp	/^    struct CPEntry {$/;"	s	class:__anon310::ARMConstantIslands	file:
CPEs	CodeGen/AsmPrinter/AsmPrinter.cpp	/^    SmallVector<unsigned, 4> CPEs;$/;"	m	struct:__anon65::SectionCPs	file:
CPExtSymbol	Target/ARM/ARMConstantPoolValue.h	/^    CPExtSymbol,$/;"	e	enum:llvm::ARMCP::ARMCPKind
CPI	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned CPI;$/;"	m	struct:__anon310::ARMConstantIslands::CPEntry	file:
CPLSDA	Target/ARM/ARMConstantPoolValue.h	/^    CPLSDA,$/;"	e	enum:llvm::ARMCP::ARMCPKind
CPMachineBasicBlock	Target/ARM/ARMConstantPoolValue.h	/^    CPMachineBasicBlock$/;"	e	enum:llvm::ARMCP::ARMCPKind
CPNConstants	VMCore/LLVMContextImpl.h	/^  DenseMap<PointerType*, ConstantPointerNull*> CPNConstants;$/;"	m	class:llvm::LLVMContextImpl
CPPFLAGS	Target/ARM/Disassembler/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/ARM/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/CellSPU/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/CppBackend/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/Hexagon/InstPrinter/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/Hexagon/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/MBlaze/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/MSP430/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/Mips/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/NVPTX/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/Sparc/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPFLAGS	Target/XCore/TargetInfo/Makefile	/^CPPFLAGS = -I$(PROJ_OBJ_DIR)\/.. -I$(PROJ_SRC_DIR)\/..$/;"	m
CPPTARGETMACHINE_H	Target/CppBackend/CPPTargetMachine.h	15;"	d
CPPTargetMachine	Target/CppBackend/CPPTargetMachine.h	/^  CPPTargetMachine(const Target &T, StringRef TT,$/;"	f	struct:llvm::CPPTargetMachine
CPPTargetMachine	Target/CppBackend/CPPTargetMachine.h	/^struct CPPTargetMachine : public TargetMachine {$/;"	s	namespace:llvm
CPRelativeWrapper	Target/XCore/XCoreISelLowering.h	/^      CPRelativeWrapper,$/;"	e	enum:llvm::XCoreISD::NodeType
CPU	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  StringRef CPU;$/;"	m	class:__anon344::X86AsmBackend	file:
CPUArch	Target/ARM/ARMBuildAttrs.h	/^  enum CPUArch {$/;"	g	namespace:ARMBuildAttrs
CPUArchProfile	Target/ARM/ARMBuildAttrs.h	/^  enum CPUArchProfile { \/\/ (=7), uleb128 $/;"	g	namespace:ARMBuildAttrs
CPUKey	MC/MCDisassembler/EDDisassembler.h	/^  struct CPUKey {$/;"	s	struct:llvm::EDDisassembler
CPUString	Target/ARM/ARMSubtarget.h	/^  std::string CPUString;$/;"	m	class:llvm::ARMSubtarget
CPUString	Target/Hexagon/HexagonSubtarget.h	/^  std::string CPUString;$/;"	m	class:llvm::HexagonSubtarget
CPU_arch	Target/ARM/ARMBuildAttrs.h	/^    CPU_arch                  = 6,$/;"	e	enum:ARMBuildAttrs::AttrType
CPU_arch_profile	Target/ARM/ARMBuildAttrs.h	/^    CPU_arch_profile          = 7,$/;"	e	enum:ARMBuildAttrs::AttrType
CPU_name	Target/ARM/ARMBuildAttrs.h	/^    CPU_name                  = 5,$/;"	e	enum:ARMBuildAttrs::AttrType
CPU_raw_name	Target/ARM/ARMBuildAttrs.h	/^    CPU_raw_name              = 4,$/;"	e	enum:ARMBuildAttrs::AttrType
CPU_unaligned_access	Target/ARM/ARMBuildAttrs.h	/^    CPU_unaligned_access      = 34,$/;"	e	enum:ARMBuildAttrs::AttrType
CPUser	Target/ARM/ARMConstantIslandPass.cpp	/^      CPUser(MachineInstr *mi, MachineInstr *cpemi, unsigned maxdisp,$/;"	f	struct:__anon310::ARMConstantIslands::CPUser
CPUser	Target/ARM/ARMConstantIslandPass.cpp	/^    struct CPUser {$/;"	s	class:__anon310::ARMConstantIslands	file:
CPUsers	Target/ARM/ARMConstantIslandPass.cpp	/^    std::vector<CPUser> CPUsers;$/;"	m	class:__anon310::ARMConstantIslands	file:
CPV_streq	Target/ARM/ARMConstantPoolValue.cpp	/^static bool CPV_streq(const char *S1, const char *S2) {$/;"	f	file:
CPValue	Target/ARM/ARMConstantPoolValue.h	/^    CPValue,$/;"	e	enum:llvm::ARMCP::ARMCPKind
CR6SET	Target/PowerPC/PPCISelLowering.h	/^      CR6SET,$/;"	e	enum:llvm::PPCISD::NodeType
CR6UNSET	Target/PowerPC/PPCISelLowering.h	/^      CR6UNSET,$/;"	e	enum:llvm::PPCISD::NodeType
CRC	Support/CrashRecoveryContext.cpp	/^  CrashRecoveryContext *CRC;$/;"	m	struct:__anon255::CrashRecoveryContextImpl	file:
CRC	Support/CrashRecoveryContext.cpp	/^  CrashRecoveryContext *CRC;$/;"	m	struct:__anon256::RunSafelyOnThreadInfo	file:
CRSpillFrameIdx	Target/PowerPC/PPCRegisterInfo.h	/^  mutable int CRSpillFrameIdx;$/;"	m	class:llvm::PPCRegisterInfo
CR_Erase	CodeGen/RegisterCoalescer.cpp	/^    CR_Erase,$/;"	e	enum:__anon115::JoinVals::ConflictResolution	file:
CR_Impossible	CodeGen/RegisterCoalescer.cpp	/^    CR_Impossible$/;"	e	enum:__anon115::JoinVals::ConflictResolution	file:
CR_InducesCycle	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  CR_InducesCycle,$/;"	e	enum:ChainResult	file:
CR_Keep	CodeGen/RegisterCoalescer.cpp	/^    CR_Keep,$/;"	e	enum:__anon115::JoinVals::ConflictResolution	file:
CR_LeadsToInteriorNode	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  CR_LeadsToInteriorNode$/;"	e	enum:ChainResult	file:
CR_Merge	CodeGen/RegisterCoalescer.cpp	/^    CR_Merge,$/;"	e	enum:__anon115::JoinVals::ConflictResolution	file:
CR_Replace	CodeGen/RegisterCoalescer.cpp	/^    CR_Replace,$/;"	e	enum:__anon115::JoinVals::ConflictResolution	file:
CR_Simple	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  CR_Simple,$/;"	e	enum:ChainResult	file:
CR_Unresolved	CodeGen/RegisterCoalescer.cpp	/^    CR_Unresolved,$/;"	e	enum:__anon115::JoinVals::ConflictResolution	file:
CS	Transforms/Scalar/DeadStoreElimination.cpp	/^    const CallSite CS;$/;"	m	struct:__anon554::CouldRef	file:
CSEMap	CodeGen/MachineLICM.cpp	/^    DenseMap<unsigned, std::vector<const MachineInstr*> > CSEMap;$/;"	m	class:__anon156::MachineLICM	file:
CSRRestore	CodeGen/PrologEpilogInserter.h	/^    CSRegBlockMap CSRRestore;$/;"	m	class:llvm::PEI
CSRSave	CodeGen/PrologEpilogInserter.h	/^    CSRegBlockMap CSRSave;$/;"	m	class:llvm::PEI
CSRUsed	CodeGen/PrologEpilogInserter.h	/^    CSRegBlockMap CSRUsed;$/;"	m	class:llvm::PEI
CSRegBlockMap	CodeGen/PrologEpilogInserter.h	/^    typedef DenseMap<MachineBasicBlock*, CSRegSet> CSRegBlockMap;$/;"	t	class:llvm::PEI
CSRegSet	CodeGen/PrologEpilogInserter.h	/^    typedef SparseBitVector<> CSRegSet;$/;"	t	class:llvm::PEI
CTX	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  const MCContext &CTX;$/;"	m	class:__anon283::ARMMCCodeEmitter	file:
CUDA	Target/NVPTX/NVPTX.h	/^  CUDA,$/;"	e	enum:llvm::NVPTX::DrvInterface
CUDie	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  const OwningPtr<DIE> CUDie;$/;"	m	class:llvm::CompileUnit
CUMap	CodeGen/AsmPrinter/DwarfDebug.h	/^  DenseMap <const MDNode *, CompileUnit *> CUMap;$/;"	m	class:llvm::DwarfDebug
CU_NUM_SAVED_REGS	Target/X86/X86FrameLowering.cpp	381;"	d	file:
CUs	DebugInfo/DWARFContext.h	/^  SmallVector<DWARFCompileUnit, 1> CUs;$/;"	m	class:llvm::DWARFContext
CV_Immediate	Target/Hexagon/HexagonHardwareLoops.cpp	/^      CV_Immediate$/;"	e	enum:__anon408::CountValue::CountValueType	file:
CV_Immediate	Target/PowerPC/PPCCTRLoops.cpp	/^      CV_Immediate$/;"	e	enum:__anon325::CountValue::CountValueType	file:
CV_Register	Target/Hexagon/HexagonHardwareLoops.cpp	/^      CV_Register,$/;"	e	enum:__anon408::CountValue::CountValueType	file:
CV_Register	Target/PowerPC/PPCCTRLoops.cpp	/^      CV_Register,$/;"	e	enum:__anon325::CountValue::CountValueType	file:
CVal	Target/ARM/ARMConstantPoolValue.h	/^  const Constant *CVal;         \/\/ Constant being loaded.$/;"	m	class:llvm::ARMConstantPoolConstant
Cache	VMCore/LeaksContext.h	/^  const T* Cache;$/;"	m	struct:llvm::LeakDetectorImpl
CacheEntries	CodeGen/InterferenceCache.h	/^  enum { CacheEntries = 32 };$/;"	e	enum:llvm::InterferenceCache::__anon162
CacheEntry	CodeGen/InterferenceCache.h	/^    Entry *CacheEntry;$/;"	m	class:llvm::InterferenceCache::Cursor
CachedResult	MC/MCDisassembler/EDInst.h	/^  CachedResult() : Valid(false) { }$/;"	f	struct:llvm::CachedResult
CachedResult	MC/MCDisassembler/EDInst.h	/^struct CachedResult {$/;"	s	namespace:llvm
CachedResults	Transforms/Scalar/ObjCARC.cpp	/^    CachedResultsTy CachedResults;$/;"	m	class:__anon503::ProvenanceAnalysis	file:
CachedResultsTy	Transforms/Scalar/ObjCARC.cpp	/^    typedef DenseMap<ValuePairTy, bool> CachedResultsTy;$/;"	t	class:__anon503::ProvenanceAnalysis	file:
CalcNodeSethiUllmanNumber	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^CalcNodeSethiUllmanNumber(const SUnit *SU, std::vector<unsigned> &SUNumbers) {$/;"	f	file:
Calculate	Analysis/RegionInfo.cpp	/^void RegionInfo::Calculate(Function &F) {$/;"	f	class:RegionInfo
CalculateMissingEdge	Analysis/ProfileInfo.cpp	/^        CalculateMissingEdge(const BasicBlock *BB, Edge &removed,$/;"	f	class:llvm::ProfileInfoT
CalculateParameterAndLinkageAreaSize	Target/PowerPC/PPCISelLowering.cpp	/^CalculateParameterAndLinkageAreaSize(SelectionDAG &DAG,$/;"	f	file:
CalculateSethiUllmanNumbers	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void RegReductionPQBase::CalculateSethiUllmanNumbers() {$/;"	f	class:RegReductionPQBase
CalculateStackSlotSize	Target/PowerPC/PPCISelLowering.cpp	/^static unsigned CalculateStackSlotSize(EVT ArgVT, ISD::ArgFlagsTy Flags,$/;"	f	file:
CalculateTailCallArgDest	Target/PowerPC/PPCISelLowering.cpp	/^CalculateTailCallArgDest(SelectionDAG &DAG, MachineFunction &MF, bool isPPC64,$/;"	f	file:
CalculateTailCallSPDiff	Target/PowerPC/PPCISelLowering.cpp	/^static int CalculateTailCallSPDiff(SelectionDAG& DAG, bool isTailCall,$/;"	f	file:
CalculateWeightAndHint	CodeGen/CalcSpillWeights.cpp	/^void VirtRegAuxInfo::CalculateWeightAndHint(LiveInterval &li) {$/;"	f	class:VirtRegAuxInfo
CallAnalyzer	Analysis/InlineCost.cpp	/^  CallAnalyzer(const DataLayout *TD, Function &Callee, int Threshold)$/;"	f	class:__anon28::CallAnalyzer
CallAnalyzer	Analysis/InlineCost.cpp	/^class CallAnalyzer : public InstVisitor<CallAnalyzer, bool> {$/;"	c	namespace:__anon28	file:
CallArg	Target/NVPTX/NVPTXISelLowering.h	/^  CallArg,$/;"	e	enum:llvm::NVPTXISD::NodeType
CallArgBegin	Target/NVPTX/NVPTXISelLowering.h	/^  CallArgBegin,$/;"	e	enum:llvm::NVPTXISD::NodeType
CallArgEnd	Target/NVPTX/NVPTXISelLowering.h	/^  CallArgEnd,$/;"	e	enum:llvm::NVPTXISD::NodeType
CallFrameString	Support/Dwarf.cpp	/^const char *llvm::dwarf::CallFrameString(unsigned Encoding) {$/;"	f	class:llvm::dwarf
CallHTType	Transforms/Scalar/EarlyCSE.cpp	/^  typedef ScopedHashTable<CallValue, std::pair<Value*, unsigned> > CallHTType;$/;"	t	class:__anon566::EarlyCSE	file:
CallHasFloatingPointArgument	Transforms/Scalar/SimplifyLibCalls.cpp	/^static bool CallHasFloatingPointArgument(const CallInst *CI) {$/;"	f	file:
CallInst	VMCore/Instructions.cpp	/^CallInst::CallInst(Value *Func, const Twine &Name,$/;"	f	class:CallInst
CallInst	VMCore/Instructions.cpp	/^CallInst::CallInst(const CallInst &CI)$/;"	f	class:CallInst
CallOperand	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^  SDValue CallOperand;$/;"	m	class:__anon83::SDISelAsmOperandInfo	file:
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::AbsOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::CosOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::Exp2Opt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::FFSOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::FPrintFOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::FPutsOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::FWriteOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::IsAsciiOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::IsDigitOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::MemCmpOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::MemCpyOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::MemMoveOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::MemSetOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::PowOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::PrintFOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::PutsOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::SPrintFOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::StpCpyOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::StrCSpnOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::StrLenOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::StrNCpyOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::StrPBrkOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::StrSpnOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::StrStrOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::StrToOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::ToAsciiOpt
CallOptimizer	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual Value *CallOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon545::UnaryDoubleFPOpt
CallScope	Transforms/Scalar/EarlyCSE.cpp	/^    CallHTType::ScopeTy CallScope;$/;"	m	class:__anon566::EarlyCSE::NodeScope	file:
CallSeqBegin	Target/NVPTX/NVPTXISelLowering.h	/^  CallSeqBegin,$/;"	e	enum:llvm::NVPTXISD::NodeType
CallSeqEnd	Target/NVPTX/NVPTXISelLowering.h	/^  CallSeqEnd,$/;"	e	enum:llvm::NVPTXISD::NodeType
CallSeqEndForStart	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  DenseMap<SUnit*, SUnit*> CallSeqEndForStart;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
CallSiteEntry	CodeGen/AsmPrinter/DwarfException.h	/^  struct CallSiteEntry {$/;"	s	class:llvm::DwarfException
CallSiteEntry	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^struct CallSiteEntry {$/;"	s	namespace:__anon183	file:
CallSiteFn	CodeGen/SjLjEHPrepare.cpp	/^    Constant *CallSiteFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
CallSiteToFunctionMap	ExecutionEngine/JIT/JITEmitter.cpp	/^    CallSiteToFunctionMapTy CallSiteToFunctionMap;$/;"	m	class:__anon182::JITResolverState	file:
CallSiteToFunctionMapTy	ExecutionEngine/JIT/JITEmitter.cpp	/^    typedef JITResolverState::CallSiteToFunctionMapTy CallSiteToFunctionMapTy;$/;"	t	class:__anon182::JITResolver	file:
CallSiteToFunctionMapTy	ExecutionEngine/JIT/JITEmitter.cpp	/^    typedef std::map<void*, AssertingVH<Function> > CallSiteToFunctionMapTy;$/;"	t	class:__anon182::JITResolverState	file:
CallSiteValueMapConfig	ExecutionEngine/JIT/JITEmitter.cpp	/^  struct CallSiteValueMapConfig : public NoRAUWValueMapConfig<Function*> {$/;"	s	namespace:__anon182	file:
CallStack	Transforms/IPO/GlobalOpt.cpp	/^  SmallVector<Function*, 4> CallStack;$/;"	m	class:__anon591::Evaluator	file:
CallSymbol	Target/NVPTX/NVPTXISelLowering.h	/^  CallSymbol,$/;"	e	enum:llvm::NVPTXISD::NodeType
CallToNoUnwindFunction	CodeGen/AsmPrinter/DwarfException.cpp	/^bool DwarfException::CallToNoUnwindFunction(const MachineInstr *MI) {$/;"	f	class:DwarfException
CallVal	Target/NVPTX/NVPTXISelLowering.h	/^  CallVal,$/;"	e	enum:llvm::NVPTXISD::NodeType
CallValue	Transforms/Scalar/EarlyCSE.cpp	/^    CallValue(Instruction *I) : Inst(I) {$/;"	f	struct:__anon565::CallValue
CallValue	Transforms/Scalar/EarlyCSE.cpp	/^  struct CallValue {$/;"	s	namespace:__anon565	file:
CallVoid	Target/NVPTX/NVPTXISelLowering.h	/^  CallVoid,$/;"	e	enum:llvm::NVPTXISD::NodeType
Callback	MC/MCDisassembler/EDDisassembler.cpp	/^    EDByteReaderCallback Callback;$/;"	m	class:__anon204::EDMemoryObject	file:
Callee	Analysis/Lint.cpp	/^    static unsigned Callee   = 4;$/;"	m	namespace:__anon5::MemRef	file:
CalleeSavedFrameSize	Target/MSP430/MSP430MachineFunctionInfo.h	/^  unsigned CalleeSavedFrameSize;$/;"	m	class:llvm::MSP430MachineFunctionInfo
CalleeSavedFrameSize	Target/X86/X86MachineFunctionInfo.h	/^  unsigned CalleeSavedFrameSize;$/;"	m	class:llvm::X86MachineFunctionInfo
Caller	ExecutionEngine/Interpreter/Interpreter.h	/^  CallSite             Caller;     \/\/ Holds the call that called subframes.$/;"	m	struct:llvm::ExecutionContext
Caller	Transforms/Scalar/SimplifyLibCalls.cpp	/^  Function *Caller;$/;"	m	class:__anon544::LibCallOptimization	file:
Caller	Transforms/Utils/SimplifyLibCalls.cpp	/^  Function *Caller;$/;"	m	class:__anon473::LibCallOptimization	file:
CallerLPad	Transforms/Utils/InlineFunction.cpp	/^    LandingPadInst *CallerLPad;  \/\/\/< LandingPadInst associated with the invoke.$/;"	m	class:__anon468::InvokeInliningInfo	file:
CallingConv	Target/Hexagon/HexagonCallingConvLower.h	/^  CallingConv::ID CallingConv;$/;"	m	class:llvm::Hexagon_CCState
CallocLike	Analysis/MemoryBuiltins.cpp	/^  CallocLike         = 1<<1, \/\/ allocates + bzero$/;"	e	enum:AllocType	file:
Calls	Transforms/Scalar/ObjCARC.cpp	/^    SmallPtrSet<Instruction *, 2> Calls;$/;"	m	struct:__anon505::RRInfo	file:
CallsExternalNode	Analysis/IPA/CallGraph.cpp	/^  CallGraphNode *CallsExternalNode;$/;"	m	class:__anon2::BasicCallGraph	file:
CanAlterRefCount	Transforms/Scalar/ObjCARC.cpp	/^CanAlterRefCount(const Instruction *Inst, const Value *Ptr,$/;"	f	file:
CanBeUnswitchedCount	Transforms/Scalar/LoopUnswitch.cpp	/^      unsigned CanBeUnswitchedCount;$/;"	m	struct:__anon494::LUAnalysisCache::LoopProperties	file:
CanCauseHighRegPressure	CodeGen/MachineLICM.cpp	/^bool MachineLICM::CanCauseHighRegPressure(DenseMap<unsigned, int> &Cost,$/;"	f	class:MachineLICM
CanChangeRetainCount	Transforms/Scalar/ObjCARC.cpp	/^    CanChangeRetainCount,$/;"	e	enum:__anon509::DependenceKind	file:
CanCoerceMustAliasedValueToLoad	Transforms/Scalar/GVN.cpp	/^static bool CanCoerceMustAliasedValueToLoad(Value *StoredVal,$/;"	f	file:
CanConstantFold	Analysis/ScalarEvolution.cpp	/^static bool CanConstantFold(const Instruction *I) {$/;"	f	file:
CanConvertToScalar	Transforms/Scalar/ScalarReplAggregates.cpp	/^bool ConvertToScalarInfo::CanConvertToScalar(Value *V, uint64_t Offset,$/;"	f	class:ConvertToScalarInfo
CanEvaluateSExtd	Transforms/InstCombine/InstCombineCasts.cpp	/^static bool CanEvaluateSExtd(Value *V, Type *Ty) {$/;"	f	file:
CanEvaluateShifted	Transforms/InstCombine/InstCombineShifts.cpp	/^static bool CanEvaluateShifted(Value *V, unsigned NumBits, bool isLeftShift,$/;"	f	file:
CanEvaluateTruncated	Transforms/InstCombine/InstCombineCasts.cpp	/^static bool CanEvaluateTruncated(Value *V, Type *Ty) {$/;"	f	file:
CanEvaluateZExtd	Transforms/InstCombine/InstCombineCasts.cpp	/^static bool CanEvaluateZExtd(Value *V, Type *Ty, unsigned &BitsToClear) {$/;"	f	file:
CanFoldXORWithAllOnes	Target/X86/X86ISelLowering.cpp	/^static bool CanFoldXORWithAllOnes(const SDNode *N) {$/;"	f	file:
CanFormLdStDWord	Target/ARM/ARMLoadStoreOptimizer.cpp	/^ARMPreAllocLoadStoreOpt::CanFormLdStDWord(MachineInstr *Op0, MachineInstr *Op1,$/;"	f	class:ARMPreAllocLoadStoreOpt
CanInterruptRV	Transforms/Scalar/ObjCARC.cpp	/^CanInterruptRV(InstructionClass Class) {$/;"	f	file:
CanLowerReturn	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::CanLowerReturn(CallingConv::ID CallConv,$/;"	f	class:MipsTargetLowering
CanLowerReturn	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::CanLowerReturn(CallingConv::ID CallConv,$/;"	f	class:PPCTargetLowering
CanLowerReturn	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::CanLowerReturn(CallingConv::ID CallConv,$/;"	f	class:X86TargetLowering
CanLowerReturn	Target/XCore/XCoreISelLowering.cpp	/^CanLowerReturn(CallingConv::ID CallConv, MachineFunction &MF,$/;"	f	class:XCoreTargetLowering
CanMergeBlocks	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::CanMergeBlocks(const BasicBlock *BB,$/;"	f	class:CodeGenPrepare
CanMoveAboveCall	Transforms/Scalar/TailRecursionElimination.cpp	/^bool TailCallElim::CanMoveAboveCall(Instruction *I, CallInst *CI) {$/;"	f	class:TailCallElim
CanPHITrans	Analysis/PHITransAddr.cpp	/^static bool CanPHITrans(Instruction *Inst) {$/;"	f	file:
CanPromoteToDotNew	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::CanPromoteToDotNew( MachineInstr *MI,$/;"	f	class:HexagonPacketizerList
CanPromoteToNewValue	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::CanPromoteToNewValue( MachineInstr *MI,$/;"	f	class:HexagonPacketizerList
CanPromoteToNewValueStore	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::CanPromoteToNewValueStore( MachineInstr *MI,$/;"	f	class:HexagonPacketizerList
CanPropagatePredecessorsForPHIs	Transforms/Utils/Local.cpp	/^static bool CanPropagatePredecessorsForPHIs(BasicBlock *BB, BasicBlock *Succ) {$/;"	f	file:
CanSelectOperandBeMappingIntoPredBlock	Transforms/InstCombine/InstCombineSelect.cpp	/^static bool CanSelectOperandBeMappingIntoPredBlock(const Value *V,$/;"	f	file:
CanShareConstantPoolEntry	CodeGen/MachineFunction.cpp	/^static bool CanShareConstantPoolEntry(const Constant *A, const Constant *B,$/;"	f	file:
CanTRE	Transforms/Scalar/TailRecursionElimination.cpp	/^static bool CanTRE(AllocaInst *AI) {$/;"	f	file:
CanTailMerge	Target/NVPTX/NVPTXInstrInfo.cpp	/^bool NVPTXInstrInfo::CanTailMerge(const MachineInstr *MI) const {$/;"	f	class:NVPTXInstrInfo
CanTransformAccumulatorRecursion	Transforms/Scalar/TailRecursionElimination.cpp	/^Value *TailCallElim::CanTransformAccumulatorRecursion(Instruction *I,$/;"	f	class:TailCallElim
CanUse	Transforms/Scalar/ObjCARC.cpp	/^CanUse(const Instruction *Inst, const Value *Ptr, ProvenanceAnalysis &PA,$/;"	f	file:
CandResult	CodeGen/MachineScheduler.cpp	/^  enum CandResult {$/;"	g	class:__anon126::ConvergingScheduler	file:
CandResult	Target/Hexagon/HexagonMachineScheduler.h	/^  enum CandResult {$/;"	g	class:llvm::ConvergingVLIWScheduler
CandidateInfo	CodeGen/MachineLICM.cpp	/^      CandidateInfo(MachineInstr *mi, unsigned def, int fi)$/;"	f	struct:__anon156::MachineLICM::CandidateInfo
CandidateInfo	CodeGen/MachineLICM.cpp	/^    struct CandidateInfo {$/;"	s	class:__anon156::MachineLICM	file:
CannotBeCopied	CodeGen/IfConversion.cpp	/^      bool CannotBeCopied  : 1;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
CannotBeNegativeZero	Analysis/ValueTracking.cpp	/^bool llvm::CannotBeNegativeZero(const Value *V, unsigned Depth) {$/;"	f	class:llvm
CannotYetSelect	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^void SelectionDAGISel::CannotYetSelect(SDNode *N) {$/;"	f	class:SelectionDAGISel
CapturePred	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::CapturePred(SDep *PredEdge) {$/;"	f	class:ScheduleDAGRRList
Captured	Analysis/AliasAnalysis.cpp	/^    bool Captured;$/;"	m	struct:__anon21::CapturesBefore	file:
Captured	Analysis/CaptureTracking.cpp	/^    bool Captured;$/;"	m	struct:__anon10::SimpleCaptureTracker	file:
Captured	Transforms/IPO/FunctionAttrs.cpp	/^    bool Captured;  \/\/ True only if certainly captured (used outside our SCC).$/;"	m	struct:__anon579::ArgumentUsesTracker	file:
Captured	Transforms/Scalar/TailRecursionElimination.cpp	/^  bool Captured;$/;"	m	struct:AllocaCaptureTracker	file:
CapturesBefore	Analysis/AliasAnalysis.cpp	/^    CapturesBefore(const Instruction *I, DominatorTree *DT)$/;"	f	struct:__anon21::CapturesBefore
CapturesBefore	Analysis/AliasAnalysis.cpp	/^  struct CapturesBefore : public CaptureTracker {$/;"	s	namespace:__anon21	file:
CarmichaelShift	Transforms/Scalar/Reassociate.cpp	/^static unsigned CarmichaelShift(unsigned Bitwidth) {$/;"	f	file:
Cascade	CodeGen/RegAllocGreedy.cpp	/^    unsigned Cascade;$/;"	m	struct:__anon158::RAGreedy::RegInfo	file:
Case	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    Case() : Low(0), High(0), BB(0), ExtraWeight(0) { }$/;"	f	struct:llvm::SelectionDAGBuilder::Case
Case	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    Case(const Constant *low, const Constant *high, MachineBasicBlock *bb,$/;"	f	struct:llvm::SelectionDAGBuilder::Case
Case	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  struct Case {$/;"	s	class:llvm::SelectionDAGBuilder
CaseBB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *CaseBB;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseRec
CaseBits	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    CaseBits(uint64_t mask, MachineBasicBlock* bb, unsigned bits,$/;"	f	struct:llvm::SelectionDAGBuilder::CaseBits
CaseBits	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  struct CaseBits {$/;"	s	class:llvm::SelectionDAGBuilder
CaseBitsCmp	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  struct CaseBitsCmp {$/;"	s	class:llvm::SelectionDAGBuilder
CaseBitsVector	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  typedef std::vector<CaseBits>       CaseBitsVector;$/;"	t	class:llvm::SelectionDAGBuilder
CaseBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    CaseBlock(ISD::CondCode cc, const Value *cmplhs, const Value *cmprhs,$/;"	f	struct:llvm::SelectionDAGBuilder::CaseBlock
CaseBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  struct CaseBlock {$/;"	s	class:llvm::SelectionDAGBuilder
CaseItr	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  typedef CaseVector::iterator        CaseItr;$/;"	t	class:llvm::SelectionDAGBuilder
CaseItr	Transforms/Utils/LowerSwitch.cpp	/^    typedef std::vector<CaseRange>::iterator CaseItr;$/;"	t	class:__anon466::LowerSwitch	file:
CaseRange	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  typedef std::pair<CaseItr, CaseItr> CaseRange;$/;"	t	class:llvm::SelectionDAGBuilder
CaseRange	Transforms/Utils/LowerSwitch.cpp	/^      CaseRange(Constant *low = 0, Constant *high = 0, BasicBlock *bb = 0) :$/;"	f	struct:__anon466::LowerSwitch::CaseRange
CaseRange	Transforms/Utils/LowerSwitch.cpp	/^    struct CaseRange {$/;"	s	class:__anon466::LowerSwitch	file:
CaseRec	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    CaseRec(MachineBasicBlock *bb, const Constant *lt, const Constant *ge,$/;"	f	struct:llvm::SelectionDAGBuilder::CaseRec
CaseRec	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  struct CaseRec {$/;"	s	class:llvm::SelectionDAGBuilder
CaseRecVector	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  typedef std::vector<CaseRec> CaseRecVector;$/;"	t	class:llvm::SelectionDAGBuilder
CaseString	Support/Dwarf.cpp	/^const char *llvm::dwarf::CaseString(unsigned Case) {$/;"	f	class:llvm::dwarf
CaseVector	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  typedef std::vector<Case>           CaseVector;$/;"	t	class:llvm::SelectionDAGBuilder
CaseVector	Transforms/Utils/LowerSwitch.cpp	/^    typedef std::vector<CaseRange>           CaseVector;$/;"	t	class:__anon466::LowerSwitch	file:
Cases	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    BitTestInfo Cases;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestBlock
CastGEPIndices	Analysis/ConstantFolding.cpp	/^static Constant *CastGEPIndices(ArrayRef<Constant *> Ops,$/;"	f	file:
CastOperand	VMCore/IntrinsicInst.cpp	/^static Value *CastOperand(Value *C) {$/;"	f	file:
CastToCStr	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::CastToCStr(Value *V, IRBuilder<> &B) {$/;"	f	class:llvm
ChainAllocator	CodeGen/MachineBlockPlacement.cpp	/^  SpecificBumpPtrAllocator<BlockChain> ChainAllocator;$/;"	m	class:__anon107::MachineBlockPlacement	file:
ChainInstruction	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::ChainInstruction(Instruction *UserInst, Instruction *IVOper,$/;"	f	class:LSRInstance
ChainResult	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^enum ChainResult {$/;"	g	file:
ChainUsers	Transforms/Scalar/LoopStrengthReduce.cpp	/^struct ChainUsers {$/;"	s	namespace:__anon518	file:
ChangeCalleesToFastCall	Transforms/IPO/GlobalOpt.cpp	/^static void ChangeCalleesToFastCall(Function *F) {$/;"	f	file:
ChangeOpInto	Target/Hexagon/HexagonPeephole.cpp	/^void HexagonPeephole::ChangeOpInto(MachineOperand &Dst, MachineOperand &Src) {$/;"	f	class:HexagonPeephole
ChangeSection	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::ChangeSection(const MCSection *Section) {$/;"	f	class:MCAsmStreamer
ChangeSection	MC/MCELFStreamer.cpp	/^void MCELFStreamer::ChangeSection(const MCSection *Section) {$/;"	f	class:MCELFStreamer
ChangeSection	MC/MCNullStreamer.cpp	/^    virtual void ChangeSection(const MCSection *Section) {$/;"	f	class:__anon217::MCNullStreamer
ChangeSection	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::ChangeSection(const MCSection *Section) {$/;"	f	class:MCObjectStreamer
ChangeToImmediate	CodeGen/MachineInstr.cpp	/^void MachineOperand::ChangeToImmediate(int64_t ImmVal) {$/;"	f	class:MachineOperand
ChangeToRegister	CodeGen/MachineInstr.cpp	/^void MachineOperand::ChangeToRegister(unsigned Reg, bool isDef, bool isImp,$/;"	f	class:MachineOperand
Changed	CodeGen/MachineLICM.cpp	/^    bool         Changed;          \/\/ True if a loop is changed.$/;"	m	class:__anon156::MachineLICM	file:
Changed	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^  bool Changed; \/\/ Keep track of whether anything changed$/;"	m	class:__anon72::VectorLegalizer	file:
Changed	Transforms/Scalar/IndVarSimplify.cpp	/^    bool Changed;$/;"	m	class:__anon495::IndVarSimplify	file:
Changed	Transforms/Scalar/LICM.cpp	/^    bool Changed;            \/\/ Set to true when we change anything.$/;"	m	struct:__anon568::LICM	file:
Changed	Transforms/Scalar/LoopStrengthReduce.cpp	/^  bool Changed;$/;"	m	class:__anon518::LSRInstance	file:
Changed	Transforms/Scalar/ObjCARC.cpp	/^    bool Changed;$/;"	m	class:__anon508::ObjCARCOpt	file:
Changed	Transforms/Scalar/ObjCARC.cpp	/^    bool Changed;$/;"	m	class:__anon510::ObjCARCContract	file:
Changed	Transforms/Utils/SimplifyIndVar.cpp	/^    bool Changed;$/;"	m	class:__anon463::SimplifyIndvar	file:
Changes	Support/DAGDeltaAlgorithm.cpp	/^  const changeset_ty &Changes;$/;"	m	class:__anon233::DAGDeltaAlgorithmImpl	file:
ChangesValue	CodeGen/SpillPlacement.h	/^    bool ChangesValue;$/;"	m	struct:llvm::SpillPlacement::BlockConstraint
CheapToScalarize	Transforms/InstCombine/InstCombineVectorOps.cpp	/^static bool CheapToScalarize(Value *V, bool isConstant) {$/;"	f	file:
Check	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^  error_code Check(error_code Err) {$/;"	f	namespace:llvm::__anon179
Check	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static bool Check(DecodeStatus &Out, DecodeStatus In) {$/;"	f	file:
CheckAndImm	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckAndImm(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckAndMask	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^bool SelectionDAGISel::CheckAndMask(SDValue LHS, ConstantSDNode *RHS,$/;"	f	class:SelectionDAGISel
CheckBitcodeOutputToConsole	Support/SystemUtils.cpp	/^bool llvm::CheckBitcodeOutputToConsole(raw_ostream &stream_to_check,$/;"	f	class:llvm
CheckChildType	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckChildType(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckCondCode	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckCondCode(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckFailed	Analysis/Lint.cpp	/^    void CheckFailed(const Twine &Message,$/;"	f	class:__anon5::Lint
CheckFailed	VMCore/Verifier.cpp	/^    void CheckFailed(const Twine &Message, Type *T1,$/;"	f	struct:__anon610::Verifier
CheckFailed	VMCore/Verifier.cpp	/^    void CheckFailed(const Twine &Message, const Value *V1,$/;"	f	struct:__anon610::Verifier
CheckFailed	VMCore/Verifier.cpp	/^    void CheckFailed(const Twine &Message,$/;"	f	struct:__anon610::Verifier
CheckForCFGHazards	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::CheckForCFGHazards(const BasicBlock *BB,$/;"	f	class:ObjCARCOpt
CheckForLiveRegDef	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^static bool CheckForLiveRegDef(SUnit *SU, unsigned Reg,$/;"	f	file:
CheckForLiveRegDef	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static void CheckForLiveRegDef(SUnit *SU, unsigned Reg,$/;"	f	file:
CheckForLiveRegDefMasked	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static void CheckForLiveRegDefMasked(SUnit *SU, const uint32_t *RegMask,$/;"	f	file:
CheckForMaskedLoad	CodeGen/SelectionDAG/DAGCombiner.cpp	/^CheckForMaskedLoad(SDValue V, SDValue Ptr, SDValue Chain) {$/;"	f	file:
CheckForPhysRegDependency	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^static void CheckForPhysRegDependency(SDNode *Def, SDNode *User, unsigned Op,$/;"	f	file:
CheckForValidSection	MC/MCParser/AsmParser.cpp	/^void AsmParser::CheckForValidSection() {$/;"	f	class:AsmParser
CheckInteger	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckInteger(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckInvariants	ExecutionEngine/JIT/JITMemoryManager.cpp	/^bool DefaultJITMemoryManager::CheckInvariants(std::string &ErrorStr) {$/;"	f	class:DefaultJITMemoryManager
CheckNodePredicate	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckNodePredicate(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckOpcode	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckOpcode(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckOrImm	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckOrImm(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckOrMask	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^bool SelectionDAGISel::CheckOrMask(SDValue LHS, ConstantSDNode *RHS,$/;"	f	class:SelectionDAGISel
CheckPatternPredicate	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckPatternPredicate(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckPending	CodeGen/MachineScheduler.cpp	/^    bool CheckPending;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
CheckPending	Target/Hexagon/HexagonMachineScheduler.h	/^    bool CheckPending;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
CheckRetType	Transforms/Scalar/SimplifyLibCalls.cpp	/^  bool CheckRetType;$/;"	m	struct:__anon545::UnaryDoubleFPOpt	file:
CheckReturn	CodeGen/CallingConvLower.cpp	/^bool CCState::CheckReturn(const SmallVectorImpl<ISD::OutputArg> &Outs,$/;"	f	class:CCState
CheckSame	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckSame(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckType	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckType(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckValue	Analysis/ProfileVerifierPass.cpp	/^  void ProfileVerifierPassT<FType, BType>::CheckValue(bool Error, $/;"	f	class:__anon36::ProfileVerifierPassT
CheckValueType	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^CheckValueType(const unsigned char *MatcherTable, unsigned &MatcherIndex,$/;"	f	file:
CheckedFirstInterference	CodeGen/LiveIntervalUnion.h	/^    bool CheckedFirstInterference;$/;"	m	class:llvm::LiveIntervalUnion::Query
CheckedPHIs	Transforms/Scalar/ScalarReplAggregates.cpp	/^      SmallPtrSet<PHINode*, 8> CheckedPHIs;$/;"	m	struct:__anon521::SROA::AllocaInfo	file:
ChildGeneration	Transforms/Scalar/EarlyCSE.cpp	/^    unsigned ChildGeneration;$/;"	m	class:__anon566::EarlyCSE::StackNode	file:
ChildIter	Transforms/Scalar/EarlyCSE.cpp	/^    DomTreeNode::iterator ChildIter;$/;"	m	class:__anon566::EarlyCSE::StackNode	file:
ChildIteratorType	Transforms/IPO/FunctionAttrs.cpp	/^    typedef SmallVectorImpl<ArgumentGraphNode*>::iterator ChildIteratorType;$/;"	t	struct:llvm::GraphTraits	file:
Children	CodeGen/AsmPrinter/DIE.h	/^    std::vector<DIE *> Children;$/;"	m	class:llvm::DIE
ChildrenFlag	CodeGen/AsmPrinter/DIE.h	/^    uint16_t ChildrenFlag;$/;"	m	class:llvm::DIEAbbrev
ChildrenString	Support/Dwarf.cpp	/^const char *llvm::dwarf::ChildrenString(unsigned Children) {$/;"	f	class:llvm::dwarf
ChkMemSDNodeAddressSpace	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::ChkMemSDNodeAddressSpace(SDNode *N,$/;"	f	class:NVPTXDAGToDAGISel
Choose	Analysis/ScalarEvolution.cpp	/^static uint64_t Choose(uint64_t n, uint64_t k, bool &Overflow) {$/;"	f	file:
ChooseConstraint	CodeGen/SelectionDAG/TargetLowering.cpp	/^static void ChooseConstraint(TargetLowering::AsmOperandInfo &OpInfo,$/;"	f	file:
Class	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
Classes	CodeGen/CriticalAntiDepBreaker.h	/^    std::vector<const TargetRegisterClass*> Classes;$/;"	m	class:llvm::CriticalAntiDepBreaker
Classify	CodeGen/LiveInterval.cpp	/^unsigned ConnectedVNInfoEqClasses::Classify(const LiveInterval *LI) {$/;"	f	class:ConnectedVNInfoEqClasses
ClassifyBlockAddressReference	Target/X86/X86Subtarget.cpp	/^ClassifyBlockAddressReference() const {$/;"	f	class:X86Subtarget
ClassifyGlobalReference	Target/X86/X86Subtarget.cpp	/^ClassifyGlobalReference(const GlobalValue *GV, const TargetMachine &TM) const {$/;"	f	class:X86Subtarget
CleanupBBName	CodeGen/ShadowStackGC.cpp	/^    const char *CleanupBBName;$/;"	m	class:__anon149::EscapeEnumerator	file:
CleanupConstantGlobalUsers	Transforms/IPO/GlobalOpt.cpp	/^static bool CleanupConstantGlobalUsers(Value *V, Constant *Init,$/;"	f	file:
CleanupInstaller	Support/ToolOutputFile.cpp	/^tool_output_file::CleanupInstaller::CleanupInstaller(const char *filename)$/;"	f	class:tool_output_file::CleanupInstaller
CleanupPointerRootUsers	Transforms/IPO/GlobalOpt.cpp	/^static bool CleanupPointerRootUsers(GlobalVariable *GV,$/;"	f	file:
ClearImpliedBits	MC/SubtargetFeature.cpp	/^void ClearImpliedBits(uint64_t &Bits, const SubtargetFeatureKV *FeatureEntry,$/;"	f	file:
ClearRefCount	Transforms/Scalar/ObjCARC.cpp	/^    void ClearRefCount() {$/;"	f	class:__anon506::PtrState
ClearSequenceProgress	Transforms/Scalar/ObjCARC.cpp	/^    void ClearSequenceProgress() {$/;"	f	class:__anon506::PtrState
Clobber	Analysis/MemDepPrinter.cpp	/^      Clobber = 0,$/;"	e	enum:__anon33::MemDepPrinter::DepType	file:
ClobberedRegUnits	CodeGen/EarlyIfConversion.cpp	/^  BitVector ClobberedRegUnits;$/;"	m	class:__anon91::SSAIfConv	file:
ClobbersPred	CodeGen/IfConversion.cpp	/^      bool ClobbersPred    : 1;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
Clone	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^SUnit *ScheduleDAGSDNodes::Clone(SUnit *Old) {$/;"	f	class:ScheduleDAGSDNodes
CloneAndPruneFunctionInto	Transforms/Utils/CloneFunction.cpp	/^void llvm::CloneAndPruneFunctionInto(Function *NewFunc, const Function *OldFunc,$/;"	f	class:llvm
CloneBasicBlock	Transforms/Utils/CloneFunction.cpp	/^BasicBlock *llvm::CloneBasicBlock(const BasicBlock *BB,$/;"	f	class:llvm
CloneBlock	Transforms/Utils/CloneFunction.cpp	/^void PruningFunctionCloner::CloneBlock(const BasicBlock *BB,$/;"	f	class:PruningFunctionCloner
CloneFunction	Transforms/Utils/CloneFunction.cpp	/^Function *llvm::CloneFunction(const Function *F, ValueToValueMapTy &VMap,$/;"	f	class:llvm
CloneFunctionInto	Transforms/Utils/CloneFunction.cpp	/^void llvm::CloneFunctionInto(Function *NewFunc, const Function *OldFunc,$/;"	f	class:llvm
CloneIVUser	Transforms/Scalar/IndVarSimplify.cpp	/^Instruction *WidenIV::CloneIVUser(NarrowIVDefUse DU) {$/;"	f	class:WidenIV
CloneLoop	Transforms/Scalar/LoopUnswitch.cpp	/^static Loop *CloneLoop(Loop *L, Loop *PL, ValueToValueMapTy &VM,$/;"	f	file:
CloneLoopBlocks	Transforms/Utils/LoopUnrollRuntime.cpp	/^static void CloneLoopBlocks(Loop *L,$/;"	f	file:
CloneMachineInstr	CodeGen/MachineFunction.cpp	/^MachineFunction::CloneMachineInstr(const MachineInstr *Orig) {$/;"	f	class:MachineFunction
CloneModule	Transforms/Utils/CloneModule.cpp	/^Module *llvm::CloneModule(const Module *M) {$/;"	f	class:llvm
CloneModule	Transforms/Utils/CloneModule.cpp	/^Module *llvm::CloneModule(const Module *M, ValueToValueMapTy &VMap) {$/;"	f	class:llvm
CloneNodeWithValues	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^static void CloneNodeWithValues(SDNode *N, SelectionDAG *DAG,$/;"	f	file:
Close	Support/Windows/Windows.h	/^  static void Close(handle_type h) {$/;"	f	struct:CommonHandleTraits
Close	Support/Windows/Windows.h	/^  static void Close(handle_type h) {$/;"	f	struct:CryptContextTraits
Close	Support/Windows/Windows.h	/^  static void Close(handle_type h) {$/;"	f	struct:FindHandleTraits
ClusterNeighboringLoads	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::ClusterNeighboringLoads(SDNode *Node) {$/;"	f	class:ScheduleDAGSDNodes
ClusterNodes	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::ClusterNodes() {$/;"	f	class:ScheduleDAGSDNodes
Clusterify	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^size_t SelectionDAGBuilder::Clusterify(CaseVector& Cases,$/;"	f	class:SelectionDAGBuilder
Clusterify	Transforms/Utils/LowerSwitch.cpp	/^unsigned LowerSwitch::Clusterify(CaseVector& Cases, SwitchInst *SI) {$/;"	f	class:LowerSwitch
Cmp	CodeGen/MachineScheduler.cpp	/^  ILPOrder Cmp;$/;"	m	class:__anon128::ILPScheduler	file:
CmpInst	VMCore/Instructions.cpp	/^CmpInst::CmpInst(Type *ty, OtherOps op, unsigned short predicate,$/;"	f	class:CmpInst
CmpLHS	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const Value *CmpLHS, *CmpMHS, *CmpRHS;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBlock
CmpMHS	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const Value *CmpLHS, *CmpMHS, *CmpRHS;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBlock
CmpRHS	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const Value *CmpLHS, *CmpMHS, *CmpRHS;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBlock
CoalesceExtSubRegs	CodeGen/TwoAddressInstructionPass.cpp	/^TwoAddressInstructionPass::CoalesceExtSubRegs(SmallVector<unsigned,4> &Srcs,$/;"	f	class:TwoAddressInstructionPass
CoalesceMap	CodeGen/RegAllocPBQP.cpp	/^  typedef std::map<RegPair, PBQP::PBQPNum> CoalesceMap;$/;"	t	class:__anon135::RegAllocPBQP	file:
CoalescerPair	CodeGen/RegisterCoalescer.h	/^    CoalescerPair(const TargetRegisterInfo &tri)$/;"	f	class:llvm::CoalescerPair
CoalescerPair	CodeGen/RegisterCoalescer.h	/^    CoalescerPair(unsigned VirtReg, unsigned PhysReg,$/;"	f	class:llvm::CoalescerPair
CoalescerPair	CodeGen/RegisterCoalescer.h	/^  class CoalescerPair {$/;"	c	namespace:llvm
Code	DebugInfo/DWARFAbbreviationDeclaration.h	/^  uint32_t Code;$/;"	m	class:llvm::DWARFAbbreviationDeclaration
Code	ExecutionEngine/JIT/JITEmitter.cpp	/^      void *Code;  \/\/ The address the function's code actually starts at.$/;"	m	struct:__anon182::JITEmitter::EmittedCode	file:
Code	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
CodeExtractor	Transforms/Utils/CodeExtractor.cpp	/^CodeExtractor::CodeExtractor(ArrayRef<BasicBlock *> BBs, DominatorTree *DT,$/;"	f	class:CodeExtractor
CodeExtractor	Transforms/Utils/CodeExtractor.cpp	/^CodeExtractor::CodeExtractor(BasicBlock *BB, bool AggregateArgs)$/;"	f	class:CodeExtractor
CodeExtractor	Transforms/Utils/CodeExtractor.cpp	/^CodeExtractor::CodeExtractor(DominatorTree &DT, Loop &L, bool AggregateArgs)$/;"	f	class:CodeExtractor
CodeExtractor	Transforms/Utils/CodeExtractor.cpp	/^CodeExtractor::CodeExtractor(DominatorTree &DT, const RegionNode &RN,$/;"	f	class:CodeExtractor
CodeFragment	TableGen/TGLexer.h	/^    Id, StrVal, VarName, CodeFragment$/;"	e	enum:llvm::tgtok::TokKind
CodeGenAndEmitDAG	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^void SelectionDAGISel::CodeGenAndEmitDAG() {$/;"	f	class:SelectionDAGISel
CodeGenPrepare	Transforms/Scalar/CodeGenPrepare.cpp	/^    explicit CodeGenPrepare(const TargetLowering *tli = 0)$/;"	f	class:__anon525::CodeGenPrepare
CodeGenPrepare	Transforms/Scalar/CodeGenPrepare.cpp	/^  class CodeGenPrepare : public FunctionPass {$/;"	c	namespace:__anon525	file:
CodeGenPrepareFortifiedLibCalls	Transforms/Scalar/CodeGenPrepare.cpp	/^class CodeGenPrepareFortifiedLibCalls : public SimplifyFortifiedLibCalls {$/;"	c	namespace:__anon526	file:
CodeInfo	Transforms/Utils/CloneFunction.cpp	/^    ClonedCodeInfo *CodeInfo;$/;"	m	struct:__anon465::PruningFunctionCloner	file:
CodePlacementOpt	CodeGen/CodePlacementOpt.cpp	/^    CodePlacementOpt() : MachineFunctionPass(ID) {}$/;"	f	class:__anon150::CodePlacementOpt
CodePlacementOpt	CodeGen/CodePlacementOpt.cpp	/^  class CodePlacementOpt : public MachineFunctionPass {$/;"	c	namespace:__anon150	file:
CodePlacementOptID	CodeGen/CodePlacementOpt.cpp	/^char &llvm::CodePlacementOptID = CodePlacementOpt::ID;$/;"	m	class:llvm	file:
CodeSlabs	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    std::vector<sys::MemoryBlock> CodeSlabs;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
CoerceAvailableValueToLoadType	Transforms/Scalar/GVN.cpp	/^static Value *CoerceAvailableValueToLoadType(Value *StoredVal,$/;"	f	file:
CollectAddOperandsWithScales	Analysis/ScalarEvolution.cpp	/^CollectAddOperandsWithScales(DenseMap<const SCEV *, APInt> &M,$/;"	f	file:
CollectBSwapParts	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static bool CollectBSwapParts(Value *V, int OverallLeftShift, uint32_t ByteMask,$/;"	f	file:
CollectChains	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::CollectChains() {$/;"	f	class:LSRInstance
CollectFixupsAndInitialFormulae	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::CollectFixupsAndInitialFormulae() {$/;"	f	class:LSRInstance
CollectFunctionDIs	Transforms/IPO/DeadArgumentElimination.cpp	/^void DAE::CollectFunctionDIs(Module &M) {$/;"	f	class:DAE
CollectInsertionElements	Transforms/InstCombine/InstCombineCasts.cpp	/^static bool CollectInsertionElements(Value *V, unsigned ElementIndex,$/;"	f	file:
CollectInterestingTypesAndFactors	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::CollectInterestingTypesAndFactors() {$/;"	f	class:LSRInstance
CollectLoopInvariantFixupsAndFormulae	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::CollectLoopInvariantFixupsAndFormulae() {$/;"	f	class:LSRInstance
CollectRoots	CodeGen/ShadowStackGC.cpp	/^void ShadowStackGC::CollectRoots(Function &F) {$/;"	f	class:ShadowStackGC
CollectShuffleElements	Transforms/InstCombine/InstCombineVectorOps.cpp	/^static Value *CollectShuffleElements(Value *V, SmallVectorImpl<Constant*> &Mask,$/;"	f	file:
CollectSingleShuffleElements	Transforms/InstCombine/InstCombineVectorOps.cpp	/^static bool CollectSingleShuffleElements(Value *V, Value *LHS, Value *RHS,$/;"	f	file:
CollectSubexprs	Transforms/Scalar/LoopStrengthReduce.cpp	/^static const SCEV *CollectSubexprs(const SCEV *S, const SCEVConstant *C,$/;"	f	file:
ColorSlot	CodeGen/StackSlotColoring.cpp	/^int StackSlotColoring::ColorSlot(LiveInterval *li) {$/;"	f	class:StackSlotColoring
ColorSlots	CodeGen/StackSlotColoring.cpp	/^bool StackSlotColoring::ColorSlots(MachineFunction &MF) {$/;"	f	class:StackSlotColoring
Column	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned Column;                   \/\/ Source column.$/;"	m	class:llvm::SrcLineInfo
Column	DebugInfo/DWARFDebugLine.h	/^    uint16_t Column;$/;"	m	struct:llvm::DWARFDebugLine::Row
Column	Support/YAMLParser.cpp	/^  unsigned Column;$/;"	m	class:llvm::yaml::Scanner	file:
Column	Support/YAMLParser.cpp	/^  unsigned Column;$/;"	m	struct:__anon244::SimpleKey	file:
Combine	CodeGen/SelectionDAG/DAGCombiner.cpp	/^void SelectionDAG::Combine(CombineLevel Level, AliasAnalysis &AA,$/;"	f	class:SelectionDAG
CombineBaseUpdate	Target/ARM/ARMISelLowering.cpp	/^static SDValue CombineBaseUpdate(SDNode *N,$/;"	f	file:
CombineConsecutiveLoads	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::CombineConsecutiveLoads(SDNode *N, EVT VT) {$/;"	f	class:DAGCombiner
CombineTo	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    SDValue CombineTo(SDNode *N, SDValue Res, bool AddTo = true) {$/;"	f	class:__anon68::DAGCombiner
CombineTo	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    SDValue CombineTo(SDNode *N, SDValue Res0, SDValue Res1,$/;"	f	class:__anon68::DAGCombiner
CombineTo	CodeGen/SelectionDAG/DAGCombiner.cpp	/^CombineTo(SDNode *N, SDValue Res, bool AddTo) {$/;"	f	class:TargetLowering::DAGCombinerInfo
CombineTo	CodeGen/SelectionDAG/DAGCombiner.cpp	/^CombineTo(SDNode *N, SDValue Res0, SDValue Res1, bool AddTo) {$/;"	f	class:TargetLowering::DAGCombinerInfo
CombineTo	CodeGen/SelectionDAG/DAGCombiner.cpp	/^CombineTo(SDNode *N, const std::vector<SDValue> &To, bool AddTo) {$/;"	f	class:TargetLowering::DAGCombinerInfo
CombineTo	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::CombineTo(SDNode *N, const SDValue *To, unsigned NumTo,$/;"	f	class:DAGCombiner
CombineToPostIndexedLoadStore	CodeGen/SelectionDAG/DAGCombiner.cpp	/^bool DAGCombiner::CombineToPostIndexedLoadStore(SDNode *N) {$/;"	f	class:DAGCombiner
CombineToPreIndexedLoadStore	CodeGen/SelectionDAG/DAGCombiner.cpp	/^bool DAGCombiner::CombineToPreIndexedLoadStore(SDNode *N) {$/;"	f	class:DAGCombiner
CombineVLDDUP	Target/ARM/ARMISelLowering.cpp	/^static bool CombineVLDDUP(SDNode *N, TargetLowering::DAGCombinerInfo &DCI) {$/;"	f	file:
CommaSeparateAndAddOccurence	Support/CommandLine.cpp	/^static bool CommaSeparateAndAddOccurence(Option *Handler, unsigned pos,$/;"	f	file:
CommentStream	MC/MCAsmStreamer.cpp	/^  raw_svector_ostream CommentStream;$/;"	m	class:__anon214::MCAsmStreamer	file:
CommentStream	MC/MCDisassembler/Disassembler.h	/^  raw_svector_ostream CommentStream;$/;"	m	class:llvm::LLVMDisasmContext
CommentToEmit	MC/MCAsmStreamer.cpp	/^  SmallString<128> CommentToEmit;$/;"	m	class:__anon214::MCAsmStreamer	file:
CommentsToEmit	MC/MCDisassembler/Disassembler.h	/^  SmallString<128> CommentsToEmit;$/;"	m	class:llvm::LLVMDisasmContext
CommitTargetLoweringOpt	CodeGen/SelectionDAG/DAGCombiner.cpp	/^CommitTargetLoweringOpt(const TargetLowering::TargetLoweringOpt &TLO) {$/;"	f	class:DAGCombiner
CommitTargetLoweringOpt	CodeGen/SelectionDAG/DAGCombiner.cpp	/^CommitTargetLoweringOpt(const TargetLowering::TargetLoweringOpt &TLO) {$/;"	f	class:TargetLowering::DAGCombinerInfo
CommitValueTo	Transforms/IPO/GlobalOpt.cpp	/^static void CommitValueTo(Constant *Val, Constant *Addr) {$/;"	f	file:
CommonHandleTraits	Support/Windows/Windows.h	/^struct CommonHandleTraits {$/;"	s
CommonSymbolMap	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  typedef std::map<SymbolRef, unsigned> CommonSymbolMap;$/;"	t	class:llvm::RuntimeDyldImpl
CommuteInstruction	CodeGen/TwoAddressInstructionPass.cpp	/^TwoAddressInstructionPass::CommuteInstruction(MachineBasicBlock::iterator &mi,$/;"	f	class:TwoAddressInstructionPass
CommuteVectorShuffle	Target/X86/X86ISelLowering.cpp	/^static SDValue CommuteVectorShuffle(ShuffleVectorSDNode *SVOp,$/;"	f	file:
CommuteVectorShuffleMask	Target/X86/X86ISelLowering.cpp	/^static void CommuteVectorShuffleMask(SmallVectorImpl<int> &Mask,$/;"	f	file:
CompSpillWeight	CodeGen/RegAllocBasic.cpp	/^  struct CompSpillWeight {$/;"	s	namespace:__anon121	file:
Compact8x32ShuffleNode	Target/X86/X86ISelLowering.cpp	/^SDValue Compact8x32ShuffleNode(ShuffleVectorSDNode *SVOp,$/;"	f	file:
ComparableFunction	Transforms/IPO/MergeFunctions.cpp	/^  ComparableFunction(Function *Func, DataLayout *TD)$/;"	f	class:__anon596::ComparableFunction
ComparableFunction	Transforms/IPO/MergeFunctions.cpp	/^  explicit ComparableFunction(unsigned Hash)$/;"	f	class:__anon596::ComparableFunction	file:
ComparableFunction	Transforms/IPO/MergeFunctions.cpp	/^class ComparableFunction {$/;"	c	namespace:__anon596	file:
CompareAndSwap	Support/Atomic.cpp	/^sys::cas_flag sys::CompareAndSwap(volatile sys::cas_flag* ptr,$/;"	f	class:sys
CompareConstantExpr	VMCore/ConstantsContext.h	/^  CompareConstantExpr(Type *ty, Instruction::OtherOps opc,$/;"	f	class:llvm::CompareConstantExpr
CompareConstantExpr	VMCore/ConstantsContext.h	/^class CompareConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
CompareFP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    CompareFP  = 5 << FPTypeShift,$/;"	e	enum:llvm::X86II::__anon350
CompareMBBNumbers	Target/ARM/ARMConstantIslandPass.cpp	/^static bool CompareMBBNumbers(const MachineBasicBlock *LHS,$/;"	f	file:
CompareNumbers	Support/FileUtilities.cpp	/^static bool CompareNumbers(const char *&F1P, const char *&F2P,$/;"	f	file:
CompareOffset	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^static int CompareOffset(const RelEntry &R0, const RelEntry &R1) {$/;"	f	file:
CompilationDir	CodeGen/AsmPrinter/DwarfDebug.h	/^  StringRef CompilationDir;$/;"	m	class:llvm::DwarfDebug
CompileCommonOpts	CodeGen/Makefile	/^CompileCommonOpts := $(filter-out -pedantic, $(CompileCommonOpts))$/;"	m
CompileCommonOpts	Support/Makefile	/^CompileCommonOpts := $(filter-out -Wno-long-long,$(CompileCommonOpts))$/;"	m
CompileCommonOpts	Support/Makefile	/^CompileCommonOpts := $(filter-out -pedantic,$(CompileCommonOpts))$/;"	m
CompileUnit	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^CompileUnit::CompileUnit(unsigned I, unsigned L, DIE *D, AsmPrinter *A,$/;"	f	class:CompileUnit
CompileUnit	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^class CompileUnit {$/;"	c	namespace:llvm
ComplementSpillMode	CodeGen/SplitKit.h	/^  enum ComplementSpillMode {$/;"	g	class:llvm::SplitEditor
ComplexityLimit	Transforms/Scalar/LoopStrengthReduce.cpp	/^static const size_t ComplexityLimit = UINT16_MAX;$/;"	v	file:
ComputeActionsTable	CodeGen/AsmPrinter/DwarfException.cpp	/^ComputeActionsTable(const SmallVectorImpl<const LandingPadInfo*> &LandingPads,$/;"	f	class:DwarfException
ComputeBackedgeTakenCount	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::ComputeBackedgeTakenCount(const Loop *L) {$/;"	f	class:ScalarEvolution
ComputeBucketCount	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::ComputeBucketCount(void) {$/;"	f	class:DwarfAccelTable
ComputeCallSiteTable	CodeGen/AsmPrinter/DwarfException.cpp	/^ComputeCallSiteTable(SmallVectorImpl<CallSiteEntry> &CallSites,$/;"	f	class:DwarfException
ComputeColumn	Support/FormattedStream.cpp	/^void formatted_raw_ostream::ComputeColumn(const char *Ptr, size_t Size) {$/;"	f	class:formatted_raw_ostream
ComputeCommonTailLength	CodeGen/BranchFolding.cpp	/^static unsigned ComputeCommonTailLength(MachineBasicBlock *MBB1,$/;"	f	file:
ComputeConstraintToUse	CodeGen/SelectionDAG/TargetLowering.cpp	/^void TargetLowering::ComputeConstraintToUse(AsmOperandInfo &OpInfo,$/;"	f	class:TargetLowering
ComputeDepth	CodeGen/ScheduleDAG.cpp	/^void SUnit::ComputeDepth() {$/;"	f	class:SUnit
ComputeExitCountExhaustively	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::ComputeExitCountExhaustively(const Loop *L,$/;"	f	class:ScalarEvolution
ComputeExitLimit	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::ComputeExitLimit(const Loop *L, BasicBlock *ExitingBlock) {$/;"	f	class:ScalarEvolution
ComputeExitLimitFromCond	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::ComputeExitLimitFromCond(const Loop *L,$/;"	f	class:ScalarEvolution
ComputeExitLimitFromICmp	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::ComputeExitLimitFromICmp(const Loop *L,$/;"	f	class:ScalarEvolution
ComputeHash	Support/FoldingSet.cpp	/^unsigned FoldingSetNodeID::ComputeHash() const {$/;"	f	class:FoldingSetNodeID
ComputeHash	Support/FoldingSet.cpp	/^unsigned FoldingSetNodeIDRef::ComputeHash() const {$/;"	f	class:FoldingSetNodeIDRef
ComputeHash	VMCore/LLVMContextImpl.h	/^  static unsigned ComputeHash(const MDNode &X, FoldingSetNodeID &) {$/;"	f	struct:llvm::FoldingSetTrait
ComputeHeight	CodeGen/ScheduleDAG.cpp	/^void SUnit::ComputeHeight() {$/;"	f	class:SUnit
ComputeIndexMap	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::ComputeIndexMap(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
ComputeLinearIndex	CodeGen/Analysis.cpp	/^unsigned llvm::ComputeLinearIndex(Type *Ty,$/;"	f	class:llvm
ComputeLiveInBlocks	Transforms/Utils/PromoteMemoryToRegister.cpp	/^ComputeLiveInBlocks(AllocaInst *AI, AllocaInfo &Info, $/;"	f	class:PromoteMem2Reg
ComputeLiveOutVRegInfo	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^void SelectionDAGISel::ComputeLiveOutVRegInfo() {$/;"	f	class:SelectionDAGISel
ComputeLoadConstantCompareExitLimit	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::ComputeLoadConstantCompareExitLimit($/;"	f	class:ScalarEvolution
ComputeLoadResult	Transforms/IPO/GlobalOpt.cpp	/^Constant *Evaluator::ComputeLoadResult(Constant *P) {$/;"	f	class:Evaluator
ComputeMaskedBits	Analysis/ValueTracking.cpp	/^void llvm::ComputeMaskedBits(Value *V, APInt &KnownZero, APInt &KnownOne,$/;"	f	class:llvm
ComputeMaskedBits	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::ComputeMaskedBits(SDValue Op, APInt &KnownZero,$/;"	f	class:SelectionDAG
ComputeMaskedBits	Transforms/InstCombine/InstCombine.h	/^  void ComputeMaskedBits(Value *V, APInt &KnownZero,$/;"	f	class:llvm::InstCombiner
ComputeMaskedBitsAddSub	Analysis/ValueTracking.cpp	/^static void ComputeMaskedBitsAddSub(bool Add, Value *Op0, Value *Op1, bool NSW,$/;"	f	file:
ComputeMaskedBitsMul	Analysis/ValueTracking.cpp	/^static void ComputeMaskedBitsMul(Value *Op0, Value *Op1, bool NSW,$/;"	f	file:
ComputeMultiple	Analysis/ValueTracking.cpp	/^bool llvm::ComputeMultiple(Value *V, unsigned Base, Value *&Multiple,$/;"	f	class:llvm
ComputeNumSignBits	Analysis/ValueTracking.cpp	/^unsigned llvm::ComputeNumSignBits(Value *V, const DataLayout *TD,$/;"	f	class:llvm
ComputeNumSignBits	CodeGen/SelectionDAG/SelectionDAG.cpp	/^unsigned SelectionDAG::ComputeNumSignBits(SDValue Op, unsigned Depth) const{$/;"	f	class:SelectionDAG
ComputeNumSignBits	Transforms/InstCombine/InstCombine.h	/^  unsigned ComputeNumSignBits(Value *Op, unsigned Depth = 0) const {$/;"	f	class:llvm::InstCombiner
ComputeNumSignBitsForTargetNode	CodeGen/SelectionDAG/TargetLowering.cpp	/^unsigned TargetLowering::ComputeNumSignBitsForTargetNode(SDValue Op,$/;"	f	class:TargetLowering
ComputeNumSignBitsForTargetNode	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::ComputeNumSignBitsForTargetNode(SDValue Op,$/;"	f	class:SPUTargetLowering
ComputeNumSignBitsForTargetNode	Target/X86/X86ISelLowering.cpp	/^unsigned X86TargetLowering::ComputeNumSignBitsForTargetNode(SDValue Op,$/;"	f	class:X86TargetLowering
ComputePHILiveOutRegInfo	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^void FunctionLoweringInfo::ComputePHILiveOutRegInfo(const PHINode *PN) {$/;"	f	class:FunctionLoweringInfo
ComputePostOrders	Transforms/Scalar/ObjCARC.cpp	/^ComputePostOrders(Function &F,$/;"	f	file:
ComputeRange	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static APInt ComputeRange(const APInt &First, const APInt &Last) {$/;"	f	file:
ComputeSameTails	CodeGen/BranchFolding.cpp	/^unsigned BranchFolder::ComputeSameTails(unsigned CurHash,$/;"	f	class:BranchFolder
ComputeSectionOrder	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::ComputeSectionOrder(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
ComputeSignBit	Analysis/ValueTracking.cpp	/^void llvm::ComputeSignBit(Value *V, bool &KnownZero, bool &KnownOne,$/;"	f	class:llvm
ComputeSignedMinMaxValuesFromKnownBits	Transforms/InstCombine/InstCombineCompares.cpp	/^static void ComputeSignedMinMaxValuesFromKnownBits(const APInt& KnownZero,$/;"	f	file:
ComputeSize	CodeGen/AsmPrinter/DIE.cpp	/^unsigned DIEBlock::ComputeSize(AsmPrinter *AP) {$/;"	f	class:DIEBlock
ComputeSpeculationCost	Transforms/Utils/SimplifyCFG.cpp	/^static unsigned ComputeSpeculationCost(const User *I) {$/;"	f	file:
ComputeSymbolTable	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::ComputeSymbolTable(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
ComputeSymbolTable	MC/MachObjectWriter.cpp	/^ComputeSymbolTable(MCAssembler &Asm, SmallString<256> &StringTable,$/;"	f	class:MachObjectWriter
ComputeUnsignedMinMaxValuesFromKnownBits	Transforms/InstCombine/InstCombineCompares.cpp	/^static void ComputeUnsignedMinMaxValuesFromKnownBits(const APInt &KnownZero,$/;"	f	file:
ComputeUsesVAFloatArgument	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^void llvm::ComputeUsesVAFloatArgument(const CallInst &I,$/;"	f	class:llvm
ComputeValueKnownInPredecessors	Transforms/Scalar/JumpThreading.cpp	/^ComputeValueKnownInPredecessors(Value *V, BasicBlock *BB, PredValueInfo &Result,$/;"	f	class:JumpThreading
ComputeValueVTs	CodeGen/Analysis.cpp	/^void llvm::ComputeValueVTs(const TargetLowering &TLI, Type *Ty,$/;"	f	class:llvm
Concat128BitVectors	Target/X86/X86ISelLowering.cpp	/^static SDValue Concat128BitVectors(SDValue V1, SDValue V2, EVT VT,$/;"	f	file:
Cond	Analysis/ScalarEvolution.cpp	/^  Value *Cond;$/;"	m	struct:MarkPendingLoopPredicate	file:
Cond	CodeGen/EarlyIfConversion.cpp	/^  SmallVector<MachineOperand, 4> Cond;$/;"	m	class:__anon91::SSAIfConv	file:
Cond	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    ARMCC::CondCodes Cond;    \/\/ Condition for IT block.$/;"	m	struct:__anon259::ARMAsmParser::__anon260	file:
CondCode	Target/MBlaze/MBlazeInstrInfo.h	/^  enum CondCode {$/;"	g	namespace:llvm::MBlaze
CondCode	Target/Mips/InstPrinter/MipsInstPrinter.h	/^enum CondCode {$/;"	g	namespace:llvm::Mips
CondCode	Target/X86/X86InstrInfo.h	/^  enum CondCode {$/;"	g	namespace:llvm::X86
CondCode	Target/XCore/XCoreInstrInfo.cpp	/^  enum CondCode {$/;"	g	namespace:llvm::XCore	file:
CondCodes	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  enum CondCodes { \/\/ Meaning (integer)          Meaning (floating-point)$/;"	g	namespace:llvm::ARMCC
CondCodes	Target/MSP430/MSP430.h	/^  enum CondCodes {$/;"	g	namespace:MSP430CC
CondCodes	Target/NVPTX/NVPTX.h	/^enum CondCodes {$/;"	g	namespace:llvm::NVPTXCC
CondCodes	Target/Sparc/Sparc.h	/^    enum CondCodes {$/;"	g	namespace:llvm::SPCC
CondCycles	CodeGen/EarlyIfConversion.cpp	/^    int CondCycles, TCycles, FCycles;$/;"	m	struct:__anon91::SSAIfConv::PHIInfo	file:
CondMovFP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    CondMovFP  = 6 << FPTypeShift,$/;"	e	enum:llvm::X86II::__anon350
CondShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    CondShift      = 28$/;"	e	enum:llvm::ARMII::__anon288
Config	Transforms/Vectorize/BBVectorize.cpp	/^    const VectorizeConfig Config;$/;"	m	struct:__anon604::BBVectorize	file:
ConflictResolution	CodeGen/RegisterCoalescer.cpp	/^  enum ConflictResolution {$/;"	g	class:__anon115::JoinVals	file:
ConnectProlog	Transforms/Utils/LoopUnrollRuntime.cpp	/^static void ConnectProlog(Loop *L, Value *TripCount, unsigned Count,$/;"	f	file:
ConsecutiveMemoryChainSorter	CodeGen/SelectionDAG/DAGCombiner.cpp	/^struct ConsecutiveMemoryChainSorter {$/;"	s	file:
Const	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^    const Value *Const;     \/\/ valid for constants$/;"	m	union:llvm::SDDbgValue::__anon89
ConstPoolAddresses	ExecutionEngine/JIT/JITEmitter.cpp	/^    SmallVector<uintptr_t, 8> ConstPoolAddresses;$/;"	m	class:__anon182::JITEmitter	file:
ConstPoolId2AddrMap	Target/ARM/ARMJITInfo.h	/^    SmallVector<intptr_t, 16> ConstPoolId2AddrMap;$/;"	m	class:llvm::ARMJITInfo
Constant	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool Constant;$/;"	m	struct:llvm::DotDebugLocEntry
ConstantAggrUniqueMap	VMCore/ConstantsContext.h	/^class ConstantAggrUniqueMap {$/;"	c	namespace:llvm
ConstantArray	VMCore/Constants.cpp	/^ConstantArray::ConstantArray(ArrayType *T, ArrayRef<Constant *> V)$/;"	f	class:ConstantArray
ConstantArrayCreator	VMCore/ConstantsContext.h	/^struct ConstantArrayCreator {$/;"	s	namespace:llvm
ConstantClassInfo	VMCore/ConstantsContext.h	/^    typedef DenseMapInfo<ConstantClass*> ConstantClassInfo;$/;"	t	struct:llvm::ConstantAggrUniqueMap::MapInfo
ConstantCreator	VMCore/ConstantsContext.h	/^struct ConstantCreator {$/;"	s	namespace:llvm
ConstantCreator	VMCore/ConstantsContext.h	/^struct ConstantCreator<ConstantExpr, Type, ExprMapKeyType> {$/;"	s	namespace:llvm
ConstantCreator	VMCore/ConstantsContext.h	/^struct ConstantCreator<InlineAsm, PointerType, InlineAsmKeyType> {$/;"	s	namespace:llvm
ConstantFP	VMCore/Constants.cpp	/^ConstantFP::ConstantFP(Type *Ty, const APFloat& V)$/;"	f	class:ConstantFP
ConstantFoldBITCASTofBUILD_VECTOR	CodeGen/SelectionDAG/DAGCombiner.cpp	/^ConstantFoldBITCASTofBUILD_VECTOR(SDNode *BV, EVT DstEltVT) {$/;"	f	class:DAGCombiner
ConstantFoldBinaryFP	Analysis/ConstantFolding.cpp	/^static Constant *ConstantFoldBinaryFP(double (*NativeFP)(double, double),$/;"	f	file:
ConstantFoldBinaryInstruction	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldBinaryInstruction(unsigned Opcode,$/;"	f	class:llvm
ConstantFoldCall	Analysis/ConstantFolding.cpp	/^llvm::ConstantFoldCall(Function *F, ArrayRef<Constant *> Operands,$/;"	f	class:llvm
ConstantFoldCastInstruction	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldCastInstruction(unsigned opc, Constant *V,$/;"	f	class:llvm
ConstantFoldCompareInstOperands	Analysis/ConstantFolding.cpp	/^Constant *llvm::ConstantFoldCompareInstOperands(unsigned Predicate,$/;"	f	class:llvm
ConstantFoldCompareInstruction	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldCompareInstruction(unsigned short pred, $/;"	f	class:llvm
ConstantFoldConstantExpression	Analysis/ConstantFolding.cpp	/^Constant *llvm::ConstantFoldConstantExpression(const ConstantExpr *CE,$/;"	f	class:llvm
ConstantFoldConvertToInt	Analysis/ConstantFolding.cpp	/^static Constant *ConstantFoldConvertToInt(const APFloat &Val,$/;"	f	file:
ConstantFoldExtractElementInstruction	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldExtractElementInstruction(Constant *Val,$/;"	f	class:llvm
ConstantFoldExtractValueInstruction	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldExtractValueInstruction(Constant *Agg,$/;"	f	class:llvm
ConstantFoldFP	Analysis/ConstantFolding.cpp	/^static Constant *ConstantFoldFP(double (*NativeFP)(double), double V, $/;"	f	file:
ConstantFoldGetElementPtr	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldGetElementPtr(Constant *C,$/;"	f	class:llvm
ConstantFoldGetElementPtrImpl	VMCore/ConstantFold.cpp	/^static Constant *ConstantFoldGetElementPtrImpl(Constant *C,$/;"	f	file:
ConstantFoldInsertElementInstruction	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldInsertElementInstruction(Constant *Val,$/;"	f	class:llvm
ConstantFoldInsertValueInstruction	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldInsertValueInstruction(Constant *Agg,$/;"	f	class:llvm
ConstantFoldInstOperands	Analysis/ConstantFolding.cpp	/^Constant *llvm::ConstantFoldInstOperands(unsigned Opcode, Type *DestTy, $/;"	f	class:llvm
ConstantFoldInstruction	Analysis/ConstantFolding.cpp	/^Constant *llvm::ConstantFoldInstruction(Instruction *I,$/;"	f	class:llvm
ConstantFoldLoadFromConstPtr	Analysis/ConstantFolding.cpp	/^Constant *llvm::ConstantFoldLoadFromConstPtr(Constant *C,$/;"	f	class:llvm
ConstantFoldLoadInst	Analysis/ConstantFolding.cpp	/^static Constant *ConstantFoldLoadInst(const LoadInst *LI, const DataLayout *TD){$/;"	f	file:
ConstantFoldLoadThroughGEPConstantExpr	Analysis/ConstantFolding.cpp	/^Constant *llvm::ConstantFoldLoadThroughGEPConstantExpr(Constant *C, $/;"	f	class:llvm
ConstantFoldLoadThroughGEPIndices	Analysis/ConstantFolding.cpp	/^Constant *llvm::ConstantFoldLoadThroughGEPIndices(Constant *C,$/;"	f	class:llvm
ConstantFoldSelectInstruction	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldSelectInstruction(Constant *Cond,$/;"	f	class:llvm
ConstantFoldShuffleVectorInstruction	VMCore/ConstantFold.cpp	/^Constant *llvm::ConstantFoldShuffleVectorInstruction(Constant *V1,$/;"	f	class:llvm
ConstantFoldTerminator	Transforms/Utils/Local.cpp	/^bool llvm::ConstantFoldTerminator(BasicBlock *BB, bool DeleteDeadConditions,$/;"	f	class:llvm
ConstantI16	Target/X86/X86ISelDAGToDAG.cpp	/^  ConstantI16,$/;"	e	enum:AtomicSz	file:
ConstantI32	Target/X86/X86ISelDAGToDAG.cpp	/^  ConstantI32,$/;"	e	enum:AtomicSz	file:
ConstantI64	Target/X86/X86ISelDAGToDAG.cpp	/^  ConstantI64,$/;"	e	enum:AtomicSz	file:
ConstantI8	Target/X86/X86ISelDAGToDAG.cpp	/^  ConstantI8,$/;"	e	enum:AtomicSz	file:
ConstantInfo	VMCore/ConstantsContext.h	/^    typedef DenseMapInfo<Constant*> ConstantInfo;$/;"	t	struct:llvm::ConstantAggrUniqueMap::MapInfo
ConstantInt	VMCore/Constants.cpp	/^ConstantInt::ConstantInt(IntegerType *Ty, const APInt& V)$/;"	f	class:ConstantInt
ConstantIntOrdering	Transforms/Utils/SimplifyCFG.cpp	/^  struct ConstantIntOrdering {$/;"	s	namespace:__anon479	file:
ConstantIntSortPredicate	Transforms/Utils/SimplifyCFG.cpp	/^static int ConstantIntSortPredicate(const void *P1, const void *P2) {$/;"	f	file:
ConstantKeyData	VMCore/ConstantsContext.h	/^struct ConstantKeyData {$/;"	s	namespace:llvm
ConstantKeyData	VMCore/ConstantsContext.h	/^struct ConstantKeyData<ConstantExpr> {$/;"	s	namespace:llvm
ConstantKeyData	VMCore/ConstantsContext.h	/^struct ConstantKeyData<InlineAsm> {$/;"	s	namespace:llvm
ConstantMerge	Transforms/IPO/ConstantMerge.cpp	/^    ConstantMerge() : ModulePass(ID) {$/;"	f	struct:__anon586::ConstantMerge
ConstantMerge	Transforms/IPO/ConstantMerge.cpp	/^  struct ConstantMerge : public ModulePass {$/;"	s	namespace:__anon586	file:
ConstantOffsetPtrs	Analysis/InlineCost.cpp	/^  DenseMap<Value *, std::pair<Value *, APInt> > ConstantOffsetPtrs;$/;"	m	class:__anon28::CallAnalyzer	file:
ConstantPlaceHolder	Bitcode/Reader/BitcodeReader.cpp	/^    explicit ConstantPlaceHolder(Type *Ty, LLVMContext& Context)$/;"	f	class:llvm::__anon55::ConstantPlaceHolder
ConstantPlaceHolder	Bitcode/Reader/BitcodeReader.cpp	/^  class ConstantPlaceHolder : public ConstantExpr {$/;"	c	namespace:llvm::__anon55	file:
ConstantPool	ExecutionEngine/JIT/JITEmitter.cpp	/^    MachineConstantPool *ConstantPool;$/;"	m	class:__anon182::JITEmitter	file:
ConstantPoolBase	ExecutionEngine/JIT/JITEmitter.cpp	/^    void *ConstantPoolBase;$/;"	m	class:__anon182::JITEmitter	file:
ConstantPreference	Transforms/Scalar/JumpThreading.cpp	/^  enum ConstantPreference {$/;"	g	namespace:__anon542	file:
ConstantPropUsersOf	Transforms/IPO/GlobalOpt.cpp	/^static void ConstantPropUsersOf(Value *V,$/;"	f	file:
ConstantPropagation	Transforms/Scalar/ConstantProp.cpp	/^    ConstantPropagation() : FunctionPass(ID) {$/;"	f	struct:__anon535::ConstantPropagation
ConstantPropagation	Transforms/Scalar/ConstantProp.cpp	/^  struct ConstantPropagation : public FunctionPass {$/;"	s	namespace:__anon535	file:
ConstantRange	Support/ConstantRange.cpp	/^ConstantRange::ConstantRange(const APInt &L, const APInt &U) :$/;"	f	class:ConstantRange
ConstantRange	Support/ConstantRange.cpp	/^ConstantRange::ConstantRange(const APInt &V) : Lower(V), Upper(V + 1) {}$/;"	f	class:ConstantRange
ConstantRange	Support/ConstantRange.cpp	/^ConstantRange::ConstantRange(uint32_t BitWidth, bool Full) {$/;"	f	class:ConstantRange
ConstantStruct	VMCore/Constants.cpp	/^ConstantStruct::ConstantStruct(StructType *T, ArrayRef<Constant *> V)$/;"	f	class:ConstantStruct
ConstantStructElts	AsmParser/LLParser.h	/^    Constant **ConstantStructElts;$/;"	m	struct:llvm::ValID
ConstantTraits	VMCore/ConstantsContext.h	/^struct ConstantTraits< std::vector<T, Alloc> > {$/;"	s	namespace:llvm
ConstantTraits	VMCore/ConstantsContext.h	/^struct ConstantTraits<Constant *> {$/;"	s	namespace:llvm
ConstantUniqueMap	VMCore/ConstantsContext.h	/^class ConstantUniqueMap {$/;"	c	namespace:llvm
ConstantVal	AsmParser/LLParser.h	/^    Constant *ConstantVal;$/;"	m	struct:llvm::ValID
ConstantVector	VMCore/Constants.cpp	/^ConstantVector::ConstantVector(VectorType *T, ArrayRef<Constant *> V)$/;"	f	class:ConstantVector
Constants	CodeGen/AsmPrinter/DwarfDebug.h	/^  } Constants;$/;"	m	struct:llvm::DotDebugLocEntry	typeref:union:llvm::DotDebugLocEntry::__anon64
ConstantsOut	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  DenseMap<const Constant *, unsigned> ConstantsOut;$/;"	m	class:llvm::SelectionDAGBuilder
ConstrainForSubReg	CodeGen/SelectionDAG/InstrEmitter.cpp	/^unsigned InstrEmitter::ConstrainForSubReg(unsigned VReg, unsigned SubIdx,$/;"	f	class:InstrEmitter
ConstraintInfo	VMCore/InlineAsm.cpp	/^InlineAsm::ConstraintInfo::ConstraintInfo() :$/;"	f	class:InlineAsm::ConstraintInfo
ConstraintInfo	VMCore/InlineAsm.cpp	/^InlineAsm::ConstraintInfo::ConstraintInfo(const ConstraintInfo &other) :$/;"	f	class:InlineAsm::ConstraintInfo
ConstructSSAForLoadSet	Transforms/Scalar/GVN.cpp	/^static Value *ConstructSSAForLoadSet(LoadInst *LI,$/;"	f	file:
ContainingTypeMap	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DenseMap<DIE *, const MDNode *> ContainingTypeMap;$/;"	m	class:llvm::CompileUnit
ContainsProtectableArray	CodeGen/StackProtector.cpp	/^bool StackProtector::ContainsProtectableArray(Type *Ty, bool InStruct) const {$/;"	f	class:StackProtector
Contents	Target/ARM/ARMAsmPrinter.cpp	/^    SmallVector<AttributeItemType, 64> Contents;$/;"	m	class:__anon313::ObjectAttributeEmitter	file:
Contents	Target/Hexagon/HexagonHardwareLoops.cpp	/^    } Contents;$/;"	m	class:__anon408::CountValue	typeref:union:__anon408::CountValue::Values	file:
Contents	Target/PowerPC/PPCCTRLoops.cpp	/^    } Contents;$/;"	m	class:__anon325::CountValue	typeref:union:__anon325::CountValue::Values	file:
ContentsSize	Target/ARM/ARMAsmPrinter.cpp	/^    size_t ContentsSize;$/;"	m	class:__anon313::ObjectAttributeEmitter	file:
Context	AsmParser/LLLexer.h	/^    LLVMContext &Context;$/;"	m	class:llvm::LLLexer
Context	AsmParser/LLParser.h	/^    LLVMContext &Context;$/;"	m	class:llvm::LLParser
Context	Bitcode/Reader/BitcodeReader.h	/^  LLVMContext &Context;$/;"	m	class:llvm::BitcodeReader
Context	Bitcode/Reader/BitcodeReader.h	/^  LLVMContext &Context;$/;"	m	class:llvm::BitcodeReaderMDValueList
Context	Bitcode/Reader/BitcodeReader.h	/^  LLVMContext &Context;$/;"	m	class:llvm::BitcodeReaderValueList
Context	CodeGen/MachineModuleInfo.cpp	/^  MCContext &Context;$/;"	m	class:llvm::MMIAddrLabelMap	file:
Context	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  LLVMContext *Context;$/;"	m	class:llvm::SelectionDAGBuilder
Context	DebugInfo/DWARFCompileUnit.h	/^  DWARFContext &Context;$/;"	m	class:llvm::DWARFCompileUnit
Context	Target/ARM/ARMFastISel.cpp	/^  LLVMContext *Context;$/;"	m	class:__anon307::ARMFastISel	file:
Context	Target/Hexagon/HexagonCallingConvLower.h	/^  LLVMContext &Context;$/;"	m	class:llvm::Hexagon_CCState
Context	Transforms/Instrumentation/PathProfiling.cpp	/^  LLVMContext* Context;$/;"	m	class:__anon488::PathProfiler	file:
Context	Transforms/Scalar/SimplifyLibCalls.cpp	/^  LLVMContext* Context;$/;"	m	class:__anon544::LibCallOptimization	file:
Context	Transforms/Utils/SimplifyLibCalls.cpp	/^  LLVMContext* Context;$/;"	m	class:__anon473::LibCallOptimization	file:
Context	VMCore/Verifier.cpp	/^    LLVMContext *Context; \/\/ Context within which we are verifying$/;"	m	struct:__anon610::Verifier	file:
ContextDecision	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^struct ContextDecision {$/;"	s
ContractAutorelease	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCContract::ContractAutorelease(Function &F, Instruction *Autorelease,$/;"	f	class:ObjCARCContract
ContractRelease	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCContract::ContractRelease(Instruction *Release,$/;"	f	class:ObjCARCContract
ConventionString	Support/Dwarf.cpp	/^const char *llvm::dwarf::ConventionString(unsigned Convention) {$/;"	f	class:llvm::dwarf
ConvergingScheduler	CodeGen/MachineScheduler.cpp	/^  ConvergingScheduler():$/;"	f	class:__anon126::ConvergingScheduler
ConvergingScheduler	CodeGen/MachineScheduler.cpp	/^class ConvergingScheduler : public MachineSchedStrategy {$/;"	c	namespace:__anon126	file:
ConvergingVLIWScheduler	Target/Hexagon/HexagonMachineScheduler.h	/^  ConvergingVLIWScheduler():$/;"	f	class:llvm::ConvergingVLIWScheduler
ConvergingVLIWScheduler	Target/Hexagon/HexagonMachineScheduler.h	/^class ConvergingVLIWScheduler : public MachineSchedStrategy {$/;"	c	namespace:llvm
ConvertAtomicOrdering	Target/CppBackend/CPPBackend.cpp	/^static StringRef ConvertAtomicOrdering(AtomicOrdering Ordering) {$/;"	f	file:
ConvertAtomicSynchScope	Target/CppBackend/CPPBackend.cpp	/^static StringRef ConvertAtomicSynchScope(SynchronizationScope SynchScope) {$/;"	f	file:
ConvertCcString	Target/Mips/AsmParser/MipsAsmParser.cpp	/^static int ConvertCcString(StringRef CondString) {$/;"	f	file:
ConvertCmpIfNecessary	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::ConvertCmpIfNecessary(SDValue Cmp,$/;"	f	class:X86TargetLowering
ConvertDebugDeclareToDebugValue	Transforms/Utils/Local.cpp	/^bool llvm::ConvertDebugDeclareToDebugValue(DbgDeclareInst *DDI,$/;"	f	class:llvm
ConvertInstTo3Addr	CodeGen/TwoAddressInstructionPass.cpp	/^TwoAddressInstructionPass::ConvertInstTo3Addr(MachineBasicBlock::iterator &mi,$/;"	f	class:TwoAddressInstructionPass
ConvertLoadToSwitch	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::ConvertLoadToSwitch(LoadInst *LI) {$/;"	f	class:CodeGenPrepare
ConvertScalar_ExtractValue	Transforms/Scalar/ScalarReplAggregates.cpp	/^ConvertScalar_ExtractValue(Value *FromVal, Type *ToType,$/;"	f	class:ConvertToScalarInfo
ConvertScalar_InsertValue	Transforms/Scalar/ScalarReplAggregates.cpp	/^ConvertScalar_InsertValue(Value *SV, Value *Old,$/;"	f	class:ConvertToScalarInfo
ConvertShiftToMul	Transforms/Scalar/Reassociate.cpp	/^static BinaryOperator *ConvertShiftToMul(Instruction *Shl) {$/;"	f	file:
ConvertToSInt	Transforms/Scalar/IndVarSimplify.cpp	/^static bool ConvertToSInt(const APFloat &APF, int64_t &IntVal) {$/;"	f	file:
ConvertToScalarInfo	Transforms/Scalar/ScalarReplAggregates.cpp	/^  explicit ConvertToScalarInfo(unsigned Size, const DataLayout &td,$/;"	f	class:__anon522::ConvertToScalarInfo
ConvertToScalarInfo	Transforms/Scalar/ScalarReplAggregates.cpp	/^class ConvertToScalarInfo {$/;"	c	namespace:__anon522	file:
ConvertToString	Bitcode/Reader/BitcodeReader.cpp	/^static bool ConvertToString(ArrayRef<uint64_t> Record, unsigned Idx,$/;"	f	file:
ConvertUsesToScalar	Transforms/Scalar/ScalarReplAggregates.cpp	/^void ConvertToScalarInfo::ConvertUsesToScalar(Value *Ptr, AllocaInst *NewAI,$/;"	f	class:ConvertToScalarInfo
ConvertValIDToValue	AsmParser/LLParser.cpp	/^bool LLParser::ConvertValIDToValue(Type *Ty, ValID &ID, Value *&V,$/;"	f	class:LLParser
Cop	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } Cop;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon264	file:
CoprocOption	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } CoprocOption;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon265	file:
CopyAndMoveSuccessors	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^SUnit *ScheduleDAGFast::CopyAndMoveSuccessors(SUnit *SU) {$/;"	f	class:ScheduleDAGFast
CopyAndMoveSuccessors	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^SUnit *ScheduleDAGRRList::CopyAndMoveSuccessors(SUnit *SU) {$/;"	f	class:ScheduleDAGRRList
CopyAndPredicateBlock	CodeGen/IfConversion.cpp	/^void IfConverter::CopyAndPredicateBlock(BBInfo &ToBBI, BBInfo &FromBBI,$/;"	f	class:IfConverter
CopyFrom	Support/SmallPtrSet.cpp	/^void SmallPtrSetImpl::CopyFrom(const SmallPtrSetImpl &RHS) {$/;"	f	class:SmallPtrSetImpl
CopyMips64ByValRegs	Target/Mips/MipsISelLowering.cpp	/^CopyMips64ByValRegs(MachineFunction &MF, SDValue Chain, DebugLoc dl,$/;"	f	file:
CopyOnEscapeMDKind	Transforms/Scalar/ObjCARC.cpp	/^    unsigned CopyOnEscapeMDKind;$/;"	m	class:__anon508::ObjCARCOpt	file:
CopyPropagateBlock	CodeGen/MachineCopyPropagation.cpp	/^bool MachineCopyPropagation::CopyPropagateBlock(MachineBasicBlock &MBB) {$/;"	f	class:MachineCopyPropagation
CopyStringRef	Support/MemoryBuffer.cpp	/^static void CopyStringRef(char *Memory, StringRef Data) {$/;"	f	file:
CopyToExportRegsIfNeeded	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::CopyToExportRegsIfNeeded(const Value *V) {$/;"	f	class:SelectionDAGBuilder
CopyToFromAsymmetricReg	Target/X86/X86InstrInfo.cpp	/^static unsigned CopyToFromAsymmetricReg(unsigned DestReg, unsigned SrcReg,$/;"	f	file:
CopyValueToVirtualRegister	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::CopyValueToVirtualRegister(const Value *V, unsigned Reg) {$/;"	f	class:SelectionDAGBuilder
CorrectExtraCFGEdges	CodeGen/MachineBasicBlock.cpp	/^bool MachineBasicBlock::CorrectExtraCFGEdges(MachineBasicBlock *DestA,$/;"	f	class:MachineBasicBlock
CorrelatedValuePropagation	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^    CorrelatedValuePropagation(): FunctionPass(ID) {$/;"	f	class:__anon529::CorrelatedValuePropagation
CorrelatedValuePropagation	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^  class CorrelatedValuePropagation : public FunctionPass {$/;"	c	namespace:__anon529	file:
CortexA15	Target/ARM/ARMSubtarget.h	/^    Others, CortexA8, CortexA9, CortexA15, Swift$/;"	e	enum:llvm::ARMSubtarget::ARMProcFamilyEnum
CortexA8	Target/ARM/ARMSubtarget.h	/^    Others, CortexA8, CortexA9, CortexA15, Swift$/;"	e	enum:llvm::ARMSubtarget::ARMProcFamilyEnum
CortexA9	Target/ARM/ARMSubtarget.h	/^    Others, CortexA8, CortexA9, CortexA15, Swift$/;"	e	enum:llvm::ARMSubtarget::ARMProcFamilyEnum
Cos	Transforms/Scalar/SimplifyLibCalls.cpp	/^    CosOpt Cos; PowOpt Pow; Exp2Opt Exp2;$/;"	m	class:__anon546::SimplifyLibCalls	file:
CosOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct CosOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
Cost	Analysis/InlineCost.cpp	/^  int Cost;$/;"	m	class:__anon28::CallAnalyzer	file:
Cost	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Cost()$/;"	f	class:__anon515::Cost
Cost	Transforms/Scalar/LoopStrengthReduce.cpp	/^class Cost {$/;"	c	namespace:__anon515	file:
CouldAlias	Transforms/Scalar/DeadStoreElimination.cpp	/^  struct CouldAlias {$/;"	s	namespace:__anon555	file:
CouldBecomeSafePoint	CodeGen/GCStrategy.cpp	/^bool LowerIntrinsics::CouldBecomeSafePoint(Instruction *I) {$/;"	f	class:LowerIntrinsics
CouldRef	Transforms/Scalar/DeadStoreElimination.cpp	/^  struct CouldRef {$/;"	s	namespace:__anon554	file:
Count	DebugInfo/DWARFDebugAranges.cpp	/^    uint32_t &Count;$/;"	m	class:__anon173::CountArangeDescriptors	file:
Count	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Count;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon272	file:
CountArangeDescriptors	DebugInfo/DWARFDebugAranges.cpp	/^    CountArangeDescriptors(uint32_t &count_ref) : Count(count_ref) {}$/;"	f	class:__anon173::CountArangeDescriptors
CountArangeDescriptors	DebugInfo/DWARFDebugAranges.cpp	/^  class CountArangeDescriptors {$/;"	c	namespace:__anon173	file:
CountColumns	Support/FormattedStream.cpp	/^static unsigned CountColumns(unsigned Column, const char *Ptr, size_t Size) {$/;"	f	file:
CountOfUnwindCodes	MC/MCWin64EH.cpp	/^static uint8_t CountOfUnwindCodes(std::vector<MCWin64EHInstruction> &instArray){$/;"	f	namespace:llvm
CountRegister	Transforms/Scalar/LoopStrengthReduce.cpp	/^RegUseTracker::CountRegister(const SCEV *Reg, size_t LUIdx) {$/;"	f	class:RegUseTracker
CountRegisters	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::CountRegisters(const Formula &F, size_t LUIdx) {$/;"	f	class:LSRInstance
CountResults	CodeGen/SelectionDAG/InstrEmitter.cpp	/^unsigned InstrEmitter::CountResults(SDNode *Node) {$/;"	f	class:InstrEmitter
CountTerminators	CodeGen/BranchFolding.cpp	/^static unsigned CountTerminators(MachineBasicBlock *MBB,$/;"	f	file:
CountValue	Target/Hexagon/HexagonHardwareLoops.cpp	/^    CountValue(unsigned r, bool neg) : Kind(CV_Register), Contents(r),$/;"	f	class:__anon408::CountValue
CountValue	Target/Hexagon/HexagonHardwareLoops.cpp	/^    explicit CountValue(int64_t i) : Kind(CV_Immediate), Contents(i),$/;"	f	class:__anon408::CountValue
CountValue	Target/Hexagon/HexagonHardwareLoops.cpp	/^  class CountValue {$/;"	c	namespace:__anon408	file:
CountValue	Target/PowerPC/PPCCTRLoops.cpp	/^    CountValue(unsigned r, bool neg) : Kind(CV_Register), Contents(r),$/;"	f	class:__anon325::CountValue
CountValue	Target/PowerPC/PPCCTRLoops.cpp	/^    explicit CountValue(int64_t i) : Kind(CV_Immediate), Contents(i),$/;"	f	class:__anon325::CountValue
CountValue	Target/PowerPC/PPCCTRLoops.cpp	/^  class CountValue {$/;"	c	namespace:__anon325	file:
CountValueType	Target/Hexagon/HexagonHardwareLoops.cpp	/^    enum CountValueType {$/;"	g	class:__anon408::CountValue	file:
CountValueType	Target/PowerPC/PPCCTRLoops.cpp	/^    enum CountValueType {$/;"	g	class:__anon325::CountValue	file:
CppBackend_TripleMatchQuality	Target/CppBackend/TargetInfo/CppBackendTargetInfo.cpp	/^static unsigned CppBackend_TripleMatchQuality(const std::string &TT) {$/;"	f	file:
CppHashFilename	MC/MCParser/AsmParser.cpp	/^  StringRef CppHashFilename;$/;"	m	class:__anon211::AsmParser	file:
CppHashLineNumber	MC/MCParser/AsmParser.cpp	/^  int64_t CppHashLineNumber;$/;"	m	class:__anon211::AsmParser	file:
CppHashLoc	MC/MCParser/AsmParser.cpp	/^  SMLoc CppHashLoc;$/;"	m	class:__anon211::AsmParser	file:
CppWriter	Target/CppBackend/CPPBackend.cpp	/^    explicit CppWriter(formatted_raw_ostream &o) :$/;"	f	class:__anon412::CppWriter
CppWriter	Target/CppBackend/CPPBackend.cpp	/^  class CppWriter : public ModulePass {$/;"	c	namespace:__anon412	file:
CrashHandler	Support/PrettyStackTrace.cpp	/^static void CrashHandler(void *) {$/;"	f	file:
CrashRecoveryContextImpl	Support/CrashRecoveryContext.cpp	/^  CrashRecoveryContextImpl(CrashRecoveryContext *CRC) : CRC(CRC),$/;"	f	struct:__anon255::CrashRecoveryContextImpl
CrashRecoveryContextImpl	Support/CrashRecoveryContext.cpp	/^struct CrashRecoveryContextImpl {$/;"	s	namespace:__anon255	file:
CrashRecoverySignalHandler	Support/CrashRecoveryContext.cpp	/^static void CrashRecoverySignalHandler(int Signal) {$/;"	f	file:
Create	ExecutionEngine/ExecutionEngine.cpp	/^  static char *Create(const GlobalVariable *GV, const DataLayout& TD) {$/;"	f	class:__anon199::GVMemoryBlock
Create	MC/MCExpr.cpp	/^const MCBinaryExpr *MCBinaryExpr::Create(Opcode Opc, const MCExpr *LHS,$/;"	f	class:MCBinaryExpr
Create	MC/MCExpr.cpp	/^const MCConstantExpr *MCConstantExpr::Create(int64_t Value, MCContext &Ctx) {$/;"	f	class:MCConstantExpr
Create	MC/MCExpr.cpp	/^const MCSymbolRefExpr *MCSymbolRefExpr::Create(StringRef Name, VariantKind Kind,$/;"	f	class:MCSymbolRefExpr
Create	MC/MCExpr.cpp	/^const MCSymbolRefExpr *MCSymbolRefExpr::Create(const MCSymbol *Sym,$/;"	f	class:MCSymbolRefExpr
Create	MC/MCExpr.cpp	/^const MCUnaryExpr *MCUnaryExpr::Create(Opcode Opc, const MCExpr *Expr,$/;"	f	class:MCUnaryExpr
Create	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolConstant::Create(const Constant *C, unsigned ID) {$/;"	f	class:ARMConstantPoolConstant
Create	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolConstant::Create(const Constant *C, unsigned ID,$/;"	f	class:ARMConstantPoolConstant
Create	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolConstant::Create(const GlobalValue *GV,$/;"	f	class:ARMConstantPoolConstant
Create	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolMBB *ARMConstantPoolMBB::Create(LLVMContext &C,$/;"	f	class:ARMConstantPoolMBB
Create	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolSymbol::Create(LLVMContext &C, const char *s,$/;"	f	class:ARMConstantPoolSymbol
Create	Target/ARM/MCTargetDesc/ARMMCExpr.cpp	/^ARMMCExpr::Create(VariantKind Kind, const MCExpr *Expr,$/;"	f	class:ARMMCExpr
Create	VMCore/ConstantsContext.h	/^  ConstantClass *Create(TypeClass *Ty, Operands V, typename MapTy::iterator I) {$/;"	f	class:llvm::ConstantAggrUniqueMap
Create	VMCore/ConstantsContext.h	/^  ConstantClass *Create(TypeClass *Ty, ValRefType V,$/;"	f	class:llvm::ConstantUniqueMap
Create	VMCore/ConstantsContext.h	/^  static GetElementPtrConstantExpr *Create(Constant *C,$/;"	f	class:llvm::GetElementPtrConstantExpr
Create	VMCore/Instructions.cpp	/^BinaryOperator *BinaryOperator::Create(BinaryOps Op, Value *S1, Value *S2,$/;"	f	class:BinaryOperator
Create	VMCore/Instructions.cpp	/^CastInst *CastInst::Create(Instruction::CastOps op, Value *S, Type *Ty, $/;"	f	class:CastInst
Create	VMCore/Instructions.cpp	/^CastInst *CastInst::Create(Instruction::CastOps op, Value *S, Type *Ty,$/;"	f	class:CastInst
Create	VMCore/Instructions.cpp	/^CmpInst::Create(OtherOps Op, unsigned short predicate, Value *S1, Value *S2, $/;"	f	class:CmpInst
Create	VMCore/Instructions.cpp	/^CmpInst::Create(OtherOps Op, unsigned short predicate,$/;"	f	class:CmpInst
Create	VMCore/Instructions.cpp	/^LandingPadInst *LandingPadInst::Create(Type *RetTy, Value *PersonalityFn,$/;"	f	class:LandingPadInst
CreateArg	Transforms/IPO/DeadArgumentElimination.cpp	/^    RetOrArg CreateArg(const Function *F, unsigned Idx) {$/;"	f	class:__anon600::DAE
CreateBitfield	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateBitfield(unsigned LSB, unsigned Width,$/;"	f	class:__anon261::ARMOperand
CreateCCOut	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateCCOut(unsigned RegNum, SMLoc S) {$/;"	f	class:__anon261::ARMOperand
CreateCMovFP	Target/Mips/MipsISelLowering.cpp	/^static SDValue CreateCMovFP(SelectionDAG &DAG, SDValue Cond, SDValue True,$/;"	f	file:
CreateClone	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  SUnit *CreateClone(SUnit *N) {$/;"	f	class:__anon76::ScheduleDAGRRList	file:
CreateCommonTailOnlyBlock	CodeGen/BranchFolding.cpp	/^bool BranchFolder::CreateCommonTailOnlyBlock(MachineBasicBlock *&PredBB,$/;"	f	class:BranchFolder
CreateCondCode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateCondCode(ARMCC::CondCodes CC, SMLoc S) {$/;"	f	class:__anon261::ARMOperand
CreateCoprocNum	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateCoprocNum(unsigned CopVal, SMLoc S) {$/;"	f	class:__anon261::ARMOperand
CreateCoprocOption	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateCoprocOption(unsigned Val, SMLoc S, SMLoc E) {$/;"	f	class:__anon261::ARMOperand
CreateCoprocReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateCoprocReg(unsigned CopVal, SMLoc S) {$/;"	f	class:__anon261::ARMOperand
CreateCopyOfByValArgument	Target/Hexagon/HexagonISelLowering.cpp	/^CreateCopyOfByValArgument(SDValue Src, SDValue Dst, SDValue Chain,$/;"	f	file:
CreateCopyOfByValArgument	Target/PowerPC/PPCISelLowering.cpp	/^CreateCopyOfByValArgument(SDValue Src, SDValue Dst, SDValue Chain,$/;"	f	file:
CreateCopyOfByValArgument	Target/X86/X86ISelLowering.cpp	/^CreateCopyOfByValArgument(SDValue Src, SDValue Dst, SDValue Chain,$/;"	f	file:
CreateDefaultMemManager	ExecutionEngine/JIT/JITMemoryManager.cpp	/^JITMemoryManager *JITMemoryManager::CreateDefaultMemManager() {$/;"	f	class:JITMemoryManager
CreateDirectionalLocalSymbol	MC/MCContext.cpp	/^MCSymbol *MCContext::CreateDirectionalLocalSymbol(int64_t LocalLabelVal) {$/;"	f	class:MCContext
CreateELFGroupSection	MC/MCContext.cpp	/^const MCSectionELF *MCContext::CreateELFGroupSection() {$/;"	f	class:MCContext
CreateEmpty	Archive/ArchiveWriter.cpp	/^Archive* Archive::CreateEmpty(const sys::Path& FilePath, LLVMContext& C) {$/;"	f	class:Archive
CreateEmptyPHI	CodeGen/MachineSSAUpdater.cpp	/^  static unsigned CreateEmptyPHI(MachineBasicBlock *BB, unsigned NumPreds,$/;"	f	class:llvm::SSAUpdaterTraits
CreateEmptyPHI	Transforms/Utils/SSAUpdater.cpp	/^  static Value *CreateEmptyPHI(BasicBlock *BB, unsigned NumPreds,$/;"	f	class:llvm::SSAUpdaterTraits
CreateFNeg	VMCore/Instructions.cpp	/^BinaryOperator *BinaryOperator::CreateFNeg(Value *Op, const Twine &Name,$/;"	f	class:BinaryOperator
CreateFPCast	VMCore/Instructions.cpp	/^CastInst *CastInst::CreateFPCast(Value *C, Type *Ty, $/;"	f	class:CastInst
CreateFPCmp	Target/Mips/MipsISelLowering.cpp	/^static SDValue CreateFPCmp(SelectionDAG &DAG, const SDValue &Op) {$/;"	f	file:
CreateFailBB	CodeGen/StackProtector.cpp	/^BasicBlock *StackProtector::CreateFailBB() {$/;"	f	class:StackProtector
CreateFixedObject	CodeGen/MachineFunction.cpp	/^int MachineFrameInfo::CreateFixedObject(uint64_t Size, int64_t SPOffset,$/;"	f	class:MachineFrameInfo
CreateFree	VMCore/Instructions.cpp	/^Instruction * CallInst::CreateFree(Value* Source, Instruction *InsertBefore) {$/;"	f	class:CallInst
CreateFree	VMCore/Instructions.cpp	/^Instruction* CallInst::CreateFree(Value* Source, BasicBlock *InsertAtEnd) {$/;"	f	class:CallInst
CreateFslImm	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  static MBlazeOperand *CreateFslImm(const MCExpr *Val, SMLoc S, SMLoc E) {$/;"	f	struct:__anon446::MBlazeOperand
CreateFunctionSlot	VMCore/AsmWriter.cpp	/^void SlotTracker::CreateFunctionSlot(const Value *V) {$/;"	f	class:SlotTracker
CreateGEP	CodeGen/ShadowStackGC.cpp	/^ShadowStackGC::CreateGEP(LLVMContext &Context, IRBuilder<> &B, Value *BasePtr,$/;"	f	class:ShadowStackGC
CreateGlobalString	VMCore/IRBuilder.cpp	/^Value *IRBuilderBase::CreateGlobalString(StringRef Str, const Twine &Name) {$/;"	f	class:IRBuilderBase
CreateITMask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateITMask(unsigned Mask, SMLoc S) {$/;"	f	class:__anon261::ARMOperand
CreateImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateImm(const MCExpr *Val, SMLoc S, SMLoc E) {$/;"	f	class:__anon261::ARMOperand
CreateImm	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  static MBlazeOperand *CreateImm(const MCExpr *Val, SMLoc S, SMLoc E) {$/;"	f	struct:__anon446::MBlazeOperand
CreateImm	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  static MipsOperand *CreateImm(const MCExpr *Val, SMLoc S, SMLoc E) {$/;"	f	class:__anon423::MipsOperand
CreateImm	Target/X86/AsmParser/X86AsmParser.cpp	/^  static X86Operand *CreateImm(const MCExpr *Val, SMLoc StartLoc, SMLoc EndLoc){$/;"	f	struct:__anon336::X86Operand
CreateIndexedSections	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::CreateIndexedSections(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
CreateInfoOutputFile	Support/Timer.cpp	/^raw_ostream *llvm::CreateInfoOutputFile() {$/;"	f	class:llvm
CreateIntegerCast	VMCore/Instructions.cpp	/^CastInst *CastInst::CreateIntegerCast(Value *C, Type *Ty, $/;"	f	class:CastInst
CreateLifetimeEnd	VMCore/IRBuilder.cpp	/^CallInst *IRBuilderBase::CreateLifetimeEnd(Value *Ptr, ConstantInt *Size) {$/;"	f	class:IRBuilderBase
CreateLifetimeStart	VMCore/IRBuilder.cpp	/^CallInst *IRBuilderBase::CreateLifetimeStart(Value *Ptr, ConstantInt *Size) {$/;"	f	class:IRBuilderBase
CreateLoadLR	Target/Mips/MipsISelLowering.cpp	/^static SDValue CreateLoadLR(unsigned Opc, SelectionDAG &DAG, LoadSDNode *LD,$/;"	f	file:
CreateLower16	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  static const ARMMCExpr *CreateLower16(const MCExpr *Expr, MCContext &Ctx) {$/;"	f	class:llvm::ARMMCExpr
CreateMSRMask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateMSRMask(unsigned MMask, SMLoc S) {$/;"	f	class:__anon261::ARMOperand
CreateMachineBasicBlock	CodeGen/MachineFunction.cpp	/^MachineFunction::CreateMachineBasicBlock(const BasicBlock *bb) {$/;"	f	class:MachineFunction
CreateMachineInstr	CodeGen/MachineFunction.cpp	/^MachineFunction::CreateMachineInstr(const MCInstrDesc &MCID,$/;"	f	class:MachineFunction
CreateMalloc	VMCore/Instructions.cpp	/^Instruction *CallInst::CreateMalloc(BasicBlock *InsertAtEnd,$/;"	f	class:CallInst
CreateMalloc	VMCore/Instructions.cpp	/^Instruction *CallInst::CreateMalloc(Instruction *InsertBefore,$/;"	f	class:CallInst
CreateMem	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateMem(unsigned BaseRegNum,$/;"	f	class:__anon261::ARMOperand
CreateMem	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  static MBlazeOperand *CreateMem(unsigned Base, const MCExpr *Off, SMLoc S,$/;"	f	struct:__anon446::MBlazeOperand
CreateMem	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  static MBlazeOperand *CreateMem(unsigned Base, unsigned Off, SMLoc S,$/;"	f	struct:__anon446::MBlazeOperand
CreateMem	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  static MipsOperand *CreateMem(unsigned Base, const MCExpr *Off,$/;"	f	class:__anon423::MipsOperand
CreateMem	Target/X86/AsmParser/X86AsmParser.cpp	/^  static X86Operand *CreateMem(const MCExpr *Disp, SMLoc StartLoc,$/;"	f	struct:__anon336::X86Operand
CreateMem	Target/X86/AsmParser/X86AsmParser.cpp	/^  static X86Operand *CreateMem(unsigned SegReg, const MCExpr *Disp,$/;"	f	struct:__anon336::X86Operand
CreateMemBarrierOpt	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateMemBarrierOpt(ARM_MB::MemBOpt Opt, SMLoc S) {$/;"	f	class:__anon261::ARMOperand
CreateMemCpy	VMCore/IRBuilder.cpp	/^CreateMemCpy(Value *Dst, Value *Src, Value *Size, unsigned Align,$/;"	f	class:IRBuilderBase
CreateMemMove	VMCore/IRBuilder.cpp	/^CreateMemMove(Value *Dst, Value *Src, Value *Size, unsigned Align,$/;"	f	class:IRBuilderBase
CreateMemSet	VMCore/IRBuilder.cpp	/^CreateMemSet(Value *Ptr, Value *Val, Value *Size, unsigned Align,$/;"	f	class:IRBuilderBase
CreateMetadataSections	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::CreateMetadataSections(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
CreateMetadataSlot	VMCore/AsmWriter.cpp	/^void SlotTracker::CreateMetadataSlot(const MDNode *N) {$/;"	f	class:SlotTracker
CreateModuleSlot	VMCore/AsmWriter.cpp	/^void SlotTracker::CreateModuleSlot(const GlobalValue *V) {$/;"	f	class:SlotTracker
CreateNSWNeg	VMCore/Instructions.cpp	/^BinaryOperator *BinaryOperator::CreateNSWNeg(Value *Op, const Twine &Name,$/;"	f	class:BinaryOperator
CreateNUWNeg	VMCore/Instructions.cpp	/^BinaryOperator *BinaryOperator::CreateNUWNeg(Value *Op, const Twine &Name,$/;"	f	class:BinaryOperator
CreateNeg	VMCore/Instructions.cpp	/^BinaryOperator *BinaryOperator::CreateNeg(Value *Op, const Twine &Name,$/;"	f	class:BinaryOperator
CreateNewSUnit	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  SUnit *CreateNewSUnit(SDNode *N) {$/;"	f	class:__anon76::ScheduleDAGRRList	file:
CreateNot	VMCore/Instructions.cpp	/^BinaryOperator *BinaryOperator::CreateNot(Value *Op, const Twine &Name,$/;"	f	class:BinaryOperator
CreatePointerCast	VMCore/Instructions.cpp	/^CastInst *CastInst::CreatePointerCast(Value *S, Type *Ty, $/;"	f	class:CastInst
CreatePointerCast	VMCore/Instructions.cpp	/^CastInst *CastInst::CreatePointerCast(Value *S, Type *Ty,$/;"	f	class:CastInst
CreatePostIdxReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreatePostIdxReg(unsigned RegNum, bool isAdd,$/;"	f	class:__anon261::ARMOperand
CreateProcIFlags	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateProcIFlags(ARM_PROC::IFlags IFlags, SMLoc S) {$/;"	f	class:__anon261::ARMOperand
CreateReg	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^unsigned FunctionLoweringInfo::CreateReg(EVT VT) {$/;"	f	class:FunctionLoweringInfo
CreateReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateReg(unsigned RegNum, SMLoc S, SMLoc E) {$/;"	f	class:__anon261::ARMOperand
CreateReg	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  static MBlazeOperand *CreateReg(unsigned RegNum, SMLoc S, SMLoc E) {$/;"	f	struct:__anon446::MBlazeOperand
CreateReg	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  static MipsOperand *CreateReg(unsigned RegNum, SMLoc S, SMLoc E) {$/;"	f	class:__anon423::MipsOperand
CreateReg	Target/X86/AsmParser/X86AsmParser.cpp	/^  static X86Operand *CreateReg(unsigned RegNo, SMLoc StartLoc, SMLoc EndLoc) {$/;"	f	struct:__anon336::X86Operand
CreateRegList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  CreateRegList(const SmallVectorImpl<std::pair<unsigned, SMLoc> > &Regs,$/;"	f	class:__anon261::ARMOperand
CreateRegs	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^unsigned FunctionLoweringInfo::CreateRegs(Type *Ty) {$/;"	f	class:FunctionLoweringInfo
CreateRelocationSections	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::CreateRelocationSections(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
CreateRet	Transforms/IPO/DeadArgumentElimination.cpp	/^    RetOrArg CreateRet(const Function *F, unsigned Idx) {$/;"	f	class:__anon600::DAE
CreateRotImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateRotImm(unsigned Imm, SMLoc S, SMLoc E) {$/;"	f	class:__anon261::ARMOperand
CreateSExtOrBitCast	VMCore/Instructions.cpp	/^CastInst *CastInst::CreateSExtOrBitCast(Value *S, Type *Ty, $/;"	f	class:CastInst
CreateScheduler	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^ScheduleDAGSDNodes *SelectionDAGISel::CreateScheduler() {$/;"	f	class:SelectionDAGISel
CreateShiftedImmediate	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateShiftedImmediate(ARM_AM::ShiftOpc ShTy,$/;"	f	class:__anon261::ARMOperand
CreateShiftedRegister	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateShiftedRegister(ARM_AM::ShiftOpc ShTy,$/;"	f	class:__anon261::ARMOperand
CreateShifterImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateShifterImm(bool isASR, unsigned Imm,$/;"	f	class:__anon261::ARMOperand
CreateStackStoreLoad	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDValue DAGTypeLegalizer::CreateStackStoreLoad(SDValue Op,$/;"	f	class:DAGTypeLegalizer
CreateStackTemporary	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::CreateStackTemporary(EVT VT, unsigned minAlign) {$/;"	f	class:SelectionDAG
CreateStackTemporary	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::CreateStackTemporary(EVT VT1, EVT VT2) {$/;"	f	class:SelectionDAG
CreateStoreLR	Target/Mips/MipsISelLowering.cpp	/^static SDValue CreateStoreLR(unsigned Opc, SelectionDAG &DAG, StoreSDNode *SD,$/;"	f	file:
CreateSymbol	MC/MCContext.cpp	/^MCSymbol *MCContext::CreateSymbol(StringRef Name) {$/;"	f	class:MCContext
CreateTLOF	Target/PowerPC/PPCISelLowering.cpp	/^static TargetLoweringObjectFile *CreateTLOF(const PPCTargetMachine &TM) {$/;"	f	file:
CreateTargetHazardRecognizer	CodeGen/TargetInstrInfoImpl.cpp	/^CreateTargetHazardRecognizer(const TargetMachine *TM,$/;"	f	class:TargetInstrInfoImpl
CreateTargetHazardRecognizer	Target/ARM/ARMBaseInstrInfo.cpp	/^CreateTargetHazardRecognizer(const TargetMachine *TM,$/;"	f	class:ARMBaseInstrInfo
CreateTargetHazardRecognizer	Target/CellSPU/SPUInstrInfo.cpp	/^ScheduleHazardRecognizer *SPUInstrInfo::CreateTargetHazardRecognizer($/;"	f	class:SPUInstrInfo
CreateTargetHazardRecognizer	Target/PowerPC/PPCInstrInfo.cpp	/^ScheduleHazardRecognizer *PPCInstrInfo::CreateTargetHazardRecognizer($/;"	f	class:PPCInstrInfo
CreateTargetMIHazardRecognizer	CodeGen/TargetInstrInfoImpl.cpp	/^CreateTargetMIHazardRecognizer(const InstrItineraryData *II,$/;"	f	class:TargetInstrInfoImpl
CreateTargetPostRAHazardRecognizer	CodeGen/TargetInstrInfoImpl.cpp	/^CreateTargetPostRAHazardRecognizer(const InstrItineraryData *II,$/;"	f	class:TargetInstrInfoImpl
CreateTargetPostRAHazardRecognizer	Target/ARM/ARMBaseInstrInfo.cpp	/^CreateTargetPostRAHazardRecognizer(const InstrItineraryData *II,$/;"	f	class:ARMBaseInstrInfo
CreateTargetPostRAHazardRecognizer	Target/PowerPC/PPCInstrInfo.cpp	/^ScheduleHazardRecognizer *PPCInstrInfo::CreateTargetPostRAHazardRecognizer($/;"	f	class:PPCInstrInfo
CreateTargetScheduleState	Target/Hexagon/HexagonInstrInfo.cpp	/^CreateTargetScheduleState(const TargetMachine *TM,$/;"	f	class:HexagonInstrInfo
CreateTempSymbol	MC/MCContext.cpp	/^MCSymbol *MCContext::CreateTempSymbol() {$/;"	f	class:MCContext
CreateToken	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateToken(StringRef Str, SMLoc S) {$/;"	f	class:__anon261::ARMOperand
CreateToken	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  static MBlazeOperand *CreateToken(StringRef Str, SMLoc S) {$/;"	f	struct:__anon446::MBlazeOperand
CreateToken	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  static MipsOperand *CreateToken(StringRef Str, SMLoc S) {$/;"	f	class:__anon423::MipsOperand
CreateToken	Target/X86/AsmParser/X86AsmParser.cpp	/^  static X86Operand *CreateToken(StringRef Str, SMLoc Loc) {$/;"	f	struct:__anon336::X86Operand
CreateTruncOrBitCast	VMCore/Instructions.cpp	/^CastInst *CastInst::CreateTruncOrBitCast(Value *S, Type *Ty,$/;"	f	class:CastInst
CreateUpper16	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  static const ARMMCExpr *CreateUpper16(const MCExpr *Expr, MCContext &Ctx) {$/;"	f	class:llvm::ARMMCExpr
CreateVectorIndex	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateVectorIndex(unsigned Idx, SMLoc S, SMLoc E,$/;"	f	class:__anon261::ARMOperand
CreateVectorList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateVectorList(unsigned RegNum, unsigned Count,$/;"	f	class:__anon261::ARMOperand
CreateVectorListAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateVectorListAllLanes(unsigned RegNum, unsigned Count,$/;"	f	class:__anon261::ARMOperand
CreateVectorListIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  static ARMOperand *CreateVectorListIndexed(unsigned RegNum, unsigned Count,$/;"	f	class:__anon261::ARMOperand
CreateVirtualRegisters	CodeGen/SelectionDAG/InstrEmitter.cpp	/^void InstrEmitter::CreateVirtualRegisters(SDNode *Node, MachineInstr *MI,$/;"	f	class:InstrEmitter
CreateWideIV	Transforms/Scalar/IndVarSimplify.cpp	/^PHINode *WidenIV::CreateWideIV(SCEVExpander &Rewriter) {$/;"	f	class:WidenIV
CreateZExtOrBitCast	VMCore/Instructions.cpp	/^CastInst *CastInst::CreateZExtOrBitCast(Value *S, Type *Ty, $/;"	f	class:CastInst
CriticalAntiDepBreaker	CodeGen/CriticalAntiDepBreaker.cpp	/^CriticalAntiDepBreaker(MachineFunction& MFi, const RegisterClassInfo &RCI) :$/;"	f	class:CriticalAntiDepBreaker
CriticalAntiDepBreaker	CodeGen/CriticalAntiDepBreaker.h	/^  class CriticalAntiDepBreaker : public AntiDepBreaker {$/;"	c	namespace:llvm
CriticalPath	CodeGen/MachineTraceMetrics.h	/^    unsigned CriticalPath;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
CriticalPathSet	CodeGen/AggressiveAntiDepBreaker.h	/^    BitVector CriticalPathSet;$/;"	m	class:llvm::AggressiveAntiDepBreaker
CriticalPathStep	CodeGen/AggressiveAntiDepBreaker.cpp	/^static const SUnit *CriticalPathStep(const SUnit *SU) {$/;"	f	file:
CriticalPathStep	CodeGen/CriticalAntiDepBreaker.cpp	/^static const SDep *CriticalPathStep(const SUnit *SU) {$/;"	f	file:
CrossClass	CodeGen/RegisterCoalescer.h	/^    bool CrossClass;$/;"	m	class:llvm::CoalescerPair
CryptContextTraits	Support/Windows/Windows.h	/^struct CryptContextTraits : CommonHandleTraits {$/;"	s
CstSortPredicate	Bitcode/Writer/ValueEnumerator.cpp	/^    explicit CstSortPredicate(ValueEnumerator &ve) : VE(ve) {}$/;"	f	struct:__anon56::CstSortPredicate
CstSortPredicate	Bitcode/Writer/ValueEnumerator.cpp	/^  struct CstSortPredicate {$/;"	s	namespace:__anon56	file:
CtorInsertBefore	Transforms/Instrumentation/AddressSanitizer.cpp	/^  Instruction *CtorInsertBefore;$/;"	m	struct:__anon491::AddressSanitizer	file:
Ctx	ExecutionEngine/MCJIT/MCJIT.h	/^  MCContext *Ctx;$/;"	m	class:llvm::MCJIT
Ctx	MC/MCDisassembler/Disassembler.h	/^  llvm::OwningPtr<const llvm::MCContext> Ctx;$/;"	m	class:llvm::LLVMDisasmContext
Ctx	MC/MCParser/AsmParser.cpp	/^  MCContext &Ctx;$/;"	m	class:__anon211::AsmParser	file:
Ctx	Target/MBlaze/MBlazeMCInstLower.h	/^  MCContext &Ctx;$/;"	m	class:llvm::MBlazeMCInstLower
Ctx	Target/MSP430/MSP430MCInstLower.h	/^  MCContext &Ctx;$/;"	m	class:llvm::MSP430MCInstLower
Ctx	Target/Mips/MipsMCInstLower.h	/^  MCContext *Ctx;$/;"	m	class:llvm::MipsMCInstLower
Ctx	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  MCContext &Ctx;$/;"	m	class:__anon353::X86MCCodeEmitter	file:
Ctx	Target/X86/X86MCInstLower.cpp	/^  MCContext &Ctx;$/;"	m	class:__anon380::X86MCInstLower	file:
Ctx	Transforms/Instrumentation/GCOVProfiling.cpp	/^    LLVMContext *Ctx;$/;"	m	class:__anon489::GCOVProfiler	file:
Ctx	VMCore/LLVMContextImpl.h	/^  LLVMContextImpl *Ctx;$/;"	m	class:llvm::DebugRecVH
CuOffset	DebugInfo/DWARFDebugArangeSet.h	/^    uint32_t CuOffset;$/;"	m	struct:llvm::DWARFDebugArangeSet::Header
CurAST	Transforms/Scalar/LICM.cpp	/^    AliasSetTracker *CurAST; \/\/ AliasSet information for the current loop...$/;"	m	struct:__anon568::LICM	file:
CurBB	ExecutionEngine/Interpreter/Interpreter.h	/^  BasicBlock           *CurBB;      \/\/ The currently executing BB$/;"	m	struct:llvm::ExecutionContext
CurBlock	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    MemoryRangeHeader *CurBlock;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
CurBuf	AsmParser/LLLexer.h	/^    MemoryBuffer *CurBuf;$/;"	m	class:llvm::LLLexer
CurBuf	TableGen/TGLexer.h	/^  const MemoryBuffer *CurBuf;$/;"	m	class:llvm::TGLexer
CurBuffer	MC/MCParser/AsmParser.cpp	/^  int CurBuffer;$/;"	m	class:__anon211::AsmParser	file:
CurBuffer	TableGen/TGLexer.h	/^  int CurBuffer;$/;"	m	class:llvm::TGLexer
CurCode	TableGen/TGLexer.h	/^  tgtok::TokKind CurCode;$/;"	m	class:llvm::TGLexer
CurCycle	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  unsigned CurCycle;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
CurDebugLoc	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  DebugLoc CurDebugLoc;$/;"	m	class:llvm::SelectionDAGBuilder
CurFn	ExecutionEngine/JIT/JITEmitter.cpp	/^    const Function *CurFn;$/;"	m	class:__anon182::JITEmitter	file:
CurFunction	ExecutionEngine/Interpreter/Interpreter.h	/^  Function             *CurFunction;\/\/ The currently executing function$/;"	m	struct:llvm::ExecutionContext
CurInst	ExecutionEngine/Interpreter/Interpreter.h	/^  BasicBlock::iterator  CurInst;    \/\/ The next instruction to execute$/;"	m	struct:llvm::ExecutionContext
CurInstIterator	Transforms/Scalar/CodeGenPrepare.cpp	/^    BasicBlock::iterator CurInstIterator;$/;"	m	class:__anon525::CodeGenPrepare	file:
CurInstr	CodeGen/ExecutionDepsFix.cpp	/^  int CurInstr;$/;"	m	class:__anon120::ExeDepsFix	file:
CurIntVal	TableGen/TGLexer.h	/^  int64_t CurIntVal;      \/\/ This is valid for INTVAL.$/;"	m	class:llvm::TGLexer
CurKind	AsmParser/LLLexer.h	/^    lltok::Kind CurKind;$/;"	m	class:llvm::LLLexer
CurLI	CodeGen/SplitKit.h	/^  const LiveInterval *CurLI;$/;"	m	class:llvm::SplitAnalysis
CurLoop	CodeGen/MachineLICM.cpp	/^    MachineLoop *CurLoop;          \/\/ The current loop we are working on.$/;"	m	class:__anon156::MachineLICM	file:
CurLoop	Transforms/Scalar/LICM.cpp	/^    Loop *CurLoop;           \/\/ The current loop we are working on...$/;"	m	struct:__anon568::LICM	file:
CurLoop	Transforms/Scalar/LoopIdiomRecognize.cpp	/^    Loop *CurLoop;$/;"	m	class:__anon543::LoopIdiomRecognize	file:
CurLoopInstructions	Transforms/Scalar/LoopUnswitch.cpp	/^    UnswitchedValsMap* CurLoopInstructions;$/;"	m	class:__anon494::LUAnalysisCache	file:
CurMultiClass	TableGen/TGParser.h	/^  MultiClass *CurMultiClass;$/;"	m	class:llvm::TGParser
CurPosition	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    unsigned CurPosition;     \/\/ Current position in parsing of IT$/;"	m	struct:__anon259::ARMAsmParser::__anon260	file:
CurPreheader	CodeGen/MachineLICM.cpp	/^    MachineBasicBlock *CurPreheader; \/\/ The preheader for CurLoop.$/;"	m	class:__anon156::MachineLICM	file:
CurPtr	AsmParser/LLLexer.h	/^    const char *CurPtr;$/;"	m	class:llvm::LLLexer
CurPtr	TableGen/TGLexer.h	/^  const char *CurPtr;$/;"	m	class:llvm::TGLexer
CurQueueId	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  unsigned CurQueueId;$/;"	m	class:__anon77::RegReductionPQBase	file:
CurStrVal	TableGen/TGLexer.h	/^  std::string CurStrVal;  \/\/ This is valid for ID, STRVAL, VARNAME, CODEFRAGMENT$/;"	m	class:llvm::TGLexer
CurSymbol	MC/WinCOFFStreamer.cpp	/^  MCSymbol const *CurSymbol;$/;"	m	class:__anon218::WinCOFFStreamer	file:
CurrCycle	CodeGen/MachineScheduler.cpp	/^    unsigned CurrCycle;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
CurrCycle	Target/Hexagon/HexagonMachineScheduler.h	/^    unsigned CurrCycle;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
CurrVN	CodeGen/MachineCSE.cpp	/^    unsigned CurrVN;$/;"	m	class:__anon161::MachineCSE	file:
Current	CodeGen/InterferenceCache.h	/^    BlockInterference *Current;$/;"	m	class:llvm::InterferenceCache::Cursor
Current	Support/YAMLParser.cpp	/^  StringRef::iterator Current;$/;"	m	class:llvm::yaml::Scanner	file:
CurrentAllowPartial	Transforms/Scalar/LoopUnrollPass.cpp	/^    bool     CurrentAllowPartial;$/;"	m	class:__anon571::LoopUnroll	file:
CurrentBankselLabelInBasicBlock	Target/NVPTX/NVPTXAsmPrinter.h	/^  std::string CurrentBankselLabelInBasicBlock;$/;"	m	class:llvm::NVPTXAsmPrinter
CurrentContext	Support/CrashRecoveryContext.cpp	/^static sys::ThreadLocal<const CrashRecoveryContextImpl> CurrentContext;$/;"	m	namespace:__anon255	file:
CurrentCount	Transforms/Scalar/LoopUnrollPass.cpp	/^    unsigned CurrentCount;$/;"	m	class:__anon571::LoopUnroll	file:
CurrentDebugType	Support/Debug.cpp	/^static std::string CurrentDebugType;$/;"	v	file:
CurrentFnArguments	CodeGen/AsmPrinter/DwarfDebug.h	/^  SmallVector<DbgVariable *, 8> CurrentFnArguments;$/;"	m	class:llvm::DwarfDebug
CurrentFnName	Target/NVPTX/NVPTXAsmPrinter.h	/^  std::string CurrentFnName;$/;"	m	class:llvm::NVPTXAsmPrinter
CurrentGeneration	Transforms/Scalar/EarlyCSE.cpp	/^    unsigned CurrentGeneration;$/;"	m	class:__anon566::EarlyCSE::StackNode	file:
CurrentGeneration	Transforms/Scalar/EarlyCSE.cpp	/^  unsigned CurrentGeneration;$/;"	m	class:__anon566::EarlyCSE	file:
CurrentLoopProperties	Transforms/Scalar/LoopUnswitch.cpp	/^    LoopProperties* CurrentLoopProperties;$/;"	m	class:__anon494::LUAnalysisCache	file:
CurrentPHIForColor	CodeGen/StrongPHIElimination.cpp	/^    DenseMap<unsigned, std::pair<MachineInstr*, unsigned> > CurrentPHIForColor;$/;"	m	class:__anon154::StrongPHIElimination	file:
CurrentStack	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^    unsigned int CurrentStack;$/;"	m	struct:__anon195	file:
CurrentThreshold	Transforms/Scalar/LoopUnrollPass.cpp	/^    unsigned CurrentThreshold;$/;"	m	class:__anon571::LoopUnroll	file:
CurrentVendor	Target/ARM/ARMAsmPrinter.cpp	/^    StringRef CurrentVendor;$/;"	m	class:__anon313::ObjectAttributeEmitter	file:
Cursor	CodeGen/InterferenceCache.h	/^    Cursor() : CacheEntry(0), Current(0) {}$/;"	f	class:llvm::InterferenceCache::Cursor
Cursor	CodeGen/InterferenceCache.h	/^    Cursor(const Cursor &O) : CacheEntry(0), Current(0) {$/;"	f	class:llvm::InterferenceCache::Cursor
Cursor	CodeGen/InterferenceCache.h	/^  class Cursor {$/;"	c	class:llvm::InterferenceCache
CustomLowerNode	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^bool DAGTypeLegalizer::CustomLowerNode(SDNode *N, EVT VT, bool LegalizeResult) {$/;"	f	class:DAGTypeLegalizer
CustomMDKindNames	VMCore/LLVMContextImpl.h	/^  StringMap<unsigned> CustomMDKindNames;$/;"	m	class:llvm::LLVMContextImpl
CustomWidenLowerNode	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^bool DAGTypeLegalizer::CustomWidenLowerNode(SDNode *N, EVT VT) {$/;"	f	class:DAGTypeLegalizer
Cycle	CodeGen/MachineTraceMetrics.cpp	/^  unsigned Cycle;$/;"	m	struct:__anon134::LiveRegUnit	file:
Cycles	CodeGen/MachineTraceMetrics.h	/^    DenseMap<const MachineInstr*, InstrCycles> Cycles;$/;"	m	class:llvm::MachineTraceMetrics::Ensemble
D8	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    D8 = 3 << Op0Shift,   D9 = 4 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
D9	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    D8 = 3 << Op0Shift,   D9 = 4 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
DA	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    DA = 5 << Op0Shift,   DB = 6 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
DAE	Transforms/IPO/DeadArgumentElimination.cpp	/^    DAE() : ModulePass(ID) {$/;"	f	class:__anon600::DAE
DAE	Transforms/IPO/DeadArgumentElimination.cpp	/^    explicit DAE(char &ID) : ModulePass(ID) {}$/;"	f	class:__anon600::DAE
DAE	Transforms/IPO/DeadArgumentElimination.cpp	/^  class DAE : public ModulePass {$/;"	c	namespace:__anon600	file:
DAG	CodeGen/MachineScheduler.cpp	/^    ScheduleDAGMI *DAG;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
DAG	CodeGen/MachineScheduler.cpp	/^  ScheduleDAGMI *DAG;$/;"	m	class:__anon126::ConvergingScheduler	file:
DAG	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    SelectionDAG &DAG;$/;"	m	class:__anon68::DAGCombiner	file:
DAG	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  SelectionDAG &DAG;$/;"	m	class:__anon67::SelectionDAGLegalize	file:
DAG	CodeGen/SelectionDAG/LegalizeTypes.h	/^  SelectionDAG &DAG;$/;"	m	class:llvm::DAGTypeLegalizer
DAG	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^  SelectionDAG& DAG;$/;"	m	class:__anon72::VectorLegalizer	file:
DAG	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^    SelectionDAG *DAG;                    \/\/ DAG of the current basic block$/;"	m	class:llvm::ScheduleDAGSDNodes
DAG	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  SelectionDAG &DAG;$/;"	m	class:llvm::SelectionDAGBuilder
DAG	Target/Hexagon/HexagonMachineScheduler.h	/^    VLIWMachineScheduler *DAG;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
DAG	Target/Hexagon/HexagonMachineScheduler.h	/^  VLIWMachineScheduler *DAG;$/;"	m	class:llvm::ConvergingVLIWScheduler
DAG	Target/PowerPC/PPCHazardRecognizers.h	/^  const ScheduleDAG *DAG;$/;"	m	class:llvm::PPCScoreboardHazardRecognizer
DAGCombiner	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    DAGCombiner(SelectionDAG &D, AliasAnalysis &A, CodeGenOpt::Level OL)$/;"	f	class:__anon68::DAGCombiner
DAGCombiner	CodeGen/SelectionDAG/DAGCombiner.cpp	/^  class DAGCombiner {$/;"	c	namespace:__anon68	file:
DAGDeltaAlgorithmImpl	Support/DAGDeltaAlgorithm.cpp	/^DAGDeltaAlgorithmImpl::DAGDeltaAlgorithmImpl(DAGDeltaAlgorithm &_DDA,$/;"	f	class:DAGDeltaAlgorithmImpl
DAGDeltaAlgorithmImpl	Support/DAGDeltaAlgorithm.cpp	/^class DAGDeltaAlgorithmImpl {$/;"	c	namespace:__anon233	file:
DAGTypeLegalizer	CodeGen/SelectionDAG/LegalizeTypes.h	/^  explicit DAGTypeLegalizer(SelectionDAG &dag)$/;"	f	class:llvm::DAGTypeLegalizer
DAGTypeLegalizer	CodeGen/SelectionDAG/LegalizeTypes.h	/^class LLVM_LIBRARY_VISIBILITY DAGTypeLegalizer {$/;"	c	namespace:llvm
DAH	Transforms/IPO/DeadArgumentElimination.cpp	/^    DAH() : DAE(ID) {}$/;"	f	struct:__anon601::DAH
DAH	Transforms/IPO/DeadArgumentElimination.cpp	/^  struct DAH : public DAE {$/;"	s	namespace:__anon601	file:
DATA_MASK	Target/NVPTX/NVPTXutil.cpp	33;"	d	file:
DATA_MASK	Target/NVPTX/NVPTXutil.cpp	60;"	d	file:
DB	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    DA = 5 << Op0Shift,   DB = 6 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
DC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^  DAGCombiner &DC;$/;"	m	class:__anon69::WorkListRemover	file:
DC	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    DC = 7 << Op0Shift,   DD = 8 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
DCE	Transforms/Scalar/DCE.cpp	/^    DCE() : FunctionPass(ID) {$/;"	f	struct:__anon540::DCE
DCE	Transforms/Scalar/DCE.cpp	/^  struct DCE : public FunctionPass {$/;"	s	namespace:__anon540	file:
DD	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DwarfDebug *DD;$/;"	m	class:llvm::CompileUnit
DD	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    DC = 7 << Op0Shift,   DD = 8 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
DDA	Support/DAGDeltaAlgorithm.cpp	/^  DAGDeltaAlgorithm &DDA;$/;"	m	class:__anon233::DAGDeltaAlgorithmImpl	file:
DDAI	Support/DAGDeltaAlgorithm.cpp	/^  DAGDeltaAlgorithmImpl &DDAI;$/;"	m	class:__anon233::DeltaActiveSetHelper	file:
DDInstrument	Transforms/DDA/DDProfiling.cpp	/^    DDInstrument(): FunctionPass(ID){}$/;"	f	class:__anon606::DDInstrument
DDInstrument	Transforms/DDA/DDProfiling.cpp	/^  class DDInstrument: public FunctionPass{$/;"	c	namespace:__anon606	file:
DDIs	Transforms/Scalar/SROA.cpp	/^  SmallVector<DbgDeclareInst *, 4> DDIs;$/;"	m	class:__anon558::AllocaPromoter	file:
DDIs	Transforms/Scalar/ScalarReplAggregates.cpp	/^  SmallVector<DbgDeclareInst *, 4> DDIs;$/;"	m	class:__anon524::AllocaPromoter	file:
DE	ExecutionEngine/JIT/JITEmitter.cpp	/^    OwningPtr<JITDwarfEmitter> DE;$/;"	m	class:__anon182::JITEmitter	file:
DE	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    DE = 9 << Op0Shift,   DF = 10 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
DEBUG_PRINT_STAT	Analysis/InlineCost.cpp	1029;"	d	file:
DEBUG_PRINT_STAT	Analysis/InlineCost.cpp	1038;"	d	file:
DEBUG_TYPE	Analysis/DependenceAnalysis.cpp	54;"	d	file:
DEBUG_TYPE	Analysis/IPA/CallGraphSCCPass.cpp	18;"	d	file:
DEBUG_TYPE	Analysis/IPA/GlobalsModRef.cpp	17;"	d	file:
DEBUG_TYPE	Analysis/IVUsers.cpp	15;"	d	file:
DEBUG_TYPE	Analysis/InlineCost.cpp	14;"	d	file:
DEBUG_TYPE	Analysis/InstCount.cpp	14;"	d	file:
DEBUG_TYPE	Analysis/InstructionSimplify.cpp	20;"	d	file:
DEBUG_TYPE	Analysis/LazyValueInfo.cpp	15;"	d	file:
DEBUG_TYPE	Analysis/LoopDependenceAnalysis.cpp	22;"	d	file:
DEBUG_TYPE	Analysis/MemoryBuiltins.cpp	15;"	d	file:
DEBUG_TYPE	Analysis/MemoryDependenceAnalysis.cpp	17;"	d	file:
DEBUG_TYPE	Analysis/PathNumbering.cpp	25;"	d	file:
DEBUG_TYPE	Analysis/PathProfileInfo.cpp	14;"	d	file:
DEBUG_TYPE	Analysis/PathProfileVerifier.cpp	14;"	d	file:
DEBUG_TYPE	Analysis/PostDominators.cpp	14;"	d	file:
DEBUG_TYPE	Analysis/ProfileDataLoaderPass.cpp	17;"	d	file:
DEBUG_TYPE	Analysis/ProfileEstimatorPass.cpp	14;"	d	file:
DEBUG_TYPE	Analysis/ProfileInfo.cpp	14;"	d	file:
DEBUG_TYPE	Analysis/ProfileInfoLoaderPass.cpp	14;"	d	file:
DEBUG_TYPE	Analysis/ProfileVerifierPass.cpp	14;"	d	file:
DEBUG_TYPE	Analysis/RegionInfo.cpp	22;"	d	file:
DEBUG_TYPE	Analysis/RegionPass.cpp	20;"	d	file:
DEBUG_TYPE	Analysis/ScalarEvolution.cpp	61;"	d	file:
DEBUG_TYPE	Analysis/SparsePropagation.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/AggressiveAntiDepBreaker.cpp	17;"	d	file:
DEBUG_TYPE	CodeGen/AsmPrinter/AsmPrinter.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/AsmPrinter/DwarfDebug.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/BranchFolding.cpp	19;"	d	file:
DEBUG_TYPE	CodeGen/CalcSpillWeights.cpp	10;"	d	file:
DEBUG_TYPE	CodeGen/CodePlacementOpt.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/CriticalAntiDepBreaker.cpp	16;"	d	file:
DEBUG_TYPE	CodeGen/DeadMachineInstructionElim.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/DwarfEHPrepare.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/EarlyIfConversion.cpp	19;"	d	file:
DEBUG_TYPE	CodeGen/ExecutionDepsFix.cpp	23;"	d	file:
DEBUG_TYPE	CodeGen/ExpandISelPseudos.cpp	17;"	d	file:
DEBUG_TYPE	CodeGen/ExpandPostRAPseudos.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/IfConversion.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/InlineSpiller.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/InterferenceCache.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/LatencyPriorityQueue.cpp	16;"	d	file:
DEBUG_TYPE	CodeGen/LexicalScopes.cpp	17;"	d	file:
DEBUG_TYPE	CodeGen/LiveDebugVariables.cpp	22;"	d	file:
DEBUG_TYPE	CodeGen/LiveIntervalAnalysis.cpp	18;"	d	file:
DEBUG_TYPE	CodeGen/LiveIntervalUnion.cpp	16;"	d	file:
DEBUG_TYPE	CodeGen/LiveRangeCalc.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/LiveRangeEdit.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/LiveRegMatrix.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/LiveStackAnalysis.cpp	16;"	d	file:
DEBUG_TYPE	CodeGen/LocalStackSlotAllocation.cpp	17;"	d	file:
DEBUG_TYPE	CodeGen/MachineBlockPlacement.cpp	28;"	d	file:
DEBUG_TYPE	CodeGen/MachineCSE.cpp	16;"	d	file:
DEBUG_TYPE	CodeGen/MachineCopyPropagation.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/MachineLICM.cpp	23;"	d	file:
DEBUG_TYPE	CodeGen/MachineScheduler.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/MachineSink.cpp	19;"	d	file:
DEBUG_TYPE	CodeGen/MachineTraceMetrics.cpp	10;"	d	file:
DEBUG_TYPE	CodeGen/OptimizePHIs.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/PHIElimination.cpp	16;"	d	file:
DEBUG_TYPE	CodeGen/PeepholeOptimizer.cpp	54;"	d	file:
DEBUG_TYPE	CodeGen/PostRASchedulerList.cpp	21;"	d	file:
DEBUG_TYPE	CodeGen/ProcessImplicitDefs.cpp	10;"	d	file:
DEBUG_TYPE	CodeGen/PrologEpilogInserter.cpp	22;"	d	file:
DEBUG_TYPE	CodeGen/RegAllocBase.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/RegAllocBasic.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/RegAllocFast.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/RegAllocGreedy.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/RegAllocPBQP.cpp	32;"	d	file:
DEBUG_TYPE	CodeGen/RegAllocPBQP.cpp	639;"	d	file:
DEBUG_TYPE	CodeGen/RegisterClassInfo.cpp	17;"	d	file:
DEBUG_TYPE	CodeGen/RegisterCoalescer.cpp	16;"	d	file:
DEBUG_TYPE	CodeGen/RegisterScavenging.cpp	17;"	d	file:
DEBUG_TYPE	CodeGen/ScheduleDAG.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/ScheduleDAGInstrs.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/ScoreboardHazardRecognizer.cpp	16;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/DAGCombiner.cpp	19;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/FastISel.cpp	42;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/InstrEmitter.cpp	16;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/LegalizeTypes.h	19;"	d
DEBUG_TYPE	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	22;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	18;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	21;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/SelectionDAG/SelectionDAGISel.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/ShadowStackGC.cpp	28;"	d	file:
DEBUG_TYPE	CodeGen/ShrinkWrapping.cpp	35;"	d	file:
DEBUG_TYPE	CodeGen/SjLjEHPrepare.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/SlotIndexes.cpp	10;"	d	file:
DEBUG_TYPE	CodeGen/SpillPlacement.cpp	30;"	d	file:
DEBUG_TYPE	CodeGen/Spiller.cpp	10;"	d	file:
DEBUG_TYPE	CodeGen/SplitKit.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/StackColoring.cpp	24;"	d	file:
DEBUG_TYPE	CodeGen/StackProtector.cpp	17;"	d	file:
DEBUG_TYPE	CodeGen/StackSlotColoring.cpp	14;"	d	file:
DEBUG_TYPE	CodeGen/StrongPHIElimination.cpp	41;"	d	file:
DEBUG_TYPE	CodeGen/TailDuplication.cpp	15;"	d	file:
DEBUG_TYPE	CodeGen/TwoAddressInstructionPass.cpp	30;"	d	file:
DEBUG_TYPE	CodeGen/VirtRegMap.cpp	19;"	d	file:
DEBUG_TYPE	ExecutionEngine/ExecutionEngine.cpp	15;"	d	file:
DEBUG_TYPE	ExecutionEngine/ExecutionEngineBindings.cpp	14;"	d	file:
DEBUG_TYPE	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	18;"	d	file:
DEBUG_TYPE	ExecutionEngine/Interpreter/Execution.cpp	14;"	d	file:
DEBUG_TYPE	ExecutionEngine/JIT/JITEmitter.cpp	15;"	d	file:
DEBUG_TYPE	ExecutionEngine/JIT/JITMemoryManager.cpp	14;"	d	file:
DEBUG_TYPE	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	18;"	d	file:
DEBUG_TYPE	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	18;"	d	file:
DEBUG_TYPE	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	14;"	d	file:
DEBUG_TYPE	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	14;"	d	file:
DEBUG_TYPE	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp	14;"	d	file:
DEBUG_TYPE	MC/ELFObjectWriter.cpp	38;"	d	file:
DEBUG_TYPE	MC/ELFObjectWriter.cpp	39;"	d	file:
DEBUG_TYPE	MC/MCAssembler.cpp	10;"	d	file:
DEBUG_TYPE	MC/MCExpr.cpp	10;"	d	file:
DEBUG_TYPE	MC/WinCOFFObjectWriter.cpp	14;"	d	file:
DEBUG_TYPE	MC/WinCOFFStreamer.cpp	14;"	d	file:
DEBUG_TYPE	Support/APInt.cpp	15;"	d	file:
DEBUG_TYPE	Support/DataStream.cpp	17;"	d	file:
DEBUG_TYPE	Target/ARM/ARMAsmPrinter.cpp	15;"	d	file:
DEBUG_TYPE	Target/ARM/ARMCodeEmitter.cpp	15;"	d	file:
DEBUG_TYPE	Target/ARM/ARMConstantIslandPass.cpp	16;"	d	file:
DEBUG_TYPE	Target/ARM/ARMExpandPseudoInsts.cpp	17;"	d	file:
DEBUG_TYPE	Target/ARM/ARMISelDAGToDAG.cpp	14;"	d	file:
DEBUG_TYPE	Target/ARM/ARMISelLowering.cpp	15;"	d	file:
DEBUG_TYPE	Target/ARM/ARMJITInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/ARM/ARMLoadStoreOptimizer.cpp	15;"	d	file:
DEBUG_TYPE	Target/ARM/ARMSelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/ARM/Disassembler/ARMDisassembler.cpp	10;"	d	file:
DEBUG_TYPE	Target/ARM/InstPrinter/ARMInstPrinter.cpp	14;"	d	file:
DEBUG_TYPE	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	14;"	d	file:
DEBUG_TYPE	Target/ARM/MCTargetDesc/ARMMCExpr.cpp	10;"	d	file:
DEBUG_TYPE	Target/ARM/MLxExpansionPass.cpp	15;"	d	file:
DEBUG_TYPE	Target/ARM/Thumb2ITBlockPass.cpp	10;"	d	file:
DEBUG_TYPE	Target/ARM/Thumb2SizeReduction.cpp	10;"	d	file:
DEBUG_TYPE	Target/CellSPU/SPUAsmPrinter.cpp	16;"	d	file:
DEBUG_TYPE	Target/CellSPU/SPUHazardRecognizers.cpp	15;"	d	file:
DEBUG_TYPE	Target/CellSPU/SPURegisterInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/CellSPU/SPUSelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonAsmPrinter.cpp	16;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonCFGOptimizer.cpp	9;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonHardwareLoops.cpp	29;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonISelDAGToDAG.cpp	14;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonMachineScheduler.cpp	15;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonNewValueJump.cpp	24;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonPeephole.cpp	38;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonSelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonSplitTFRCondSets.cpp	29;"	d	file:
DEBUG_TYPE	Target/Hexagon/HexagonVLIWPacketizer.cpp	19;"	d	file:
DEBUG_TYPE	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	14;"	d	file:
DEBUG_TYPE	Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp	14;"	d	file:
DEBUG_TYPE	Target/MBlaze/MBlazeAsmPrinter.cpp	15;"	d	file:
DEBUG_TYPE	Target/MBlaze/MBlazeDelaySlotFiller.cpp	15;"	d	file:
DEBUG_TYPE	Target/MBlaze/MBlazeFrameLowering.cpp	14;"	d	file:
DEBUG_TYPE	Target/MBlaze/MBlazeISelDAGToDAG.cpp	14;"	d	file:
DEBUG_TYPE	Target/MBlaze/MBlazeISelLowering.cpp	15;"	d	file:
DEBUG_TYPE	Target/MBlaze/MBlazeRegisterInfo.cpp	15;"	d	file:
DEBUG_TYPE	Target/MBlaze/MBlazeSelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	14;"	d	file:
DEBUG_TYPE	Target/MSP430/InstPrinter/MSP430InstPrinter.cpp	14;"	d	file:
DEBUG_TYPE	Target/MSP430/MSP430AsmPrinter.cpp	15;"	d	file:
DEBUG_TYPE	Target/MSP430/MSP430BranchSelector.cpp	18;"	d	file:
DEBUG_TYPE	Target/MSP430/MSP430ISelLowering.cpp	14;"	d	file:
DEBUG_TYPE	Target/MSP430/MSP430RegisterInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/MSP430/MSP430SelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/Mips/InstPrinter/MipsInstPrinter.cpp	14;"	d	file:
DEBUG_TYPE	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	14;"	d	file:
DEBUG_TYPE	Target/Mips/MipsAsmPrinter.cpp	15;"	d	file:
DEBUG_TYPE	Target/Mips/MipsCodeEmitter.cpp	15;"	d	file:
DEBUG_TYPE	Target/Mips/MipsDelaySlotFiller.cpp	14;"	d	file:
DEBUG_TYPE	Target/Mips/MipsISelDAGToDAG.cpp	14;"	d	file:
DEBUG_TYPE	Target/Mips/MipsISelLowering.cpp	15;"	d	file:
DEBUG_TYPE	Target/Mips/MipsJITInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/Mips/MipsLongBranch.cpp	19;"	d	file:
DEBUG_TYPE	Target/Mips/MipsRegisterInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/Mips/MipsSelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/NVPTX/NVPTXISelDAGToDAG.cpp	24;"	d	file:
DEBUG_TYPE	Target/NVPTX/NVPTXISelDAGToDAG.cpp	25;"	d	file:
DEBUG_TYPE	Target/NVPTX/NVPTXISelDAGToDAG.h	14;"	d
DEBUG_TYPE	Target/NVPTX/NVPTXISelLowering.cpp	40;"	d	file:
DEBUG_TYPE	Target/NVPTX/NVPTXISelLowering.cpp	41;"	d	file:
DEBUG_TYPE	Target/NVPTX/NVPTXRegisterInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	14;"	d	file:
DEBUG_TYPE	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	14;"	d	file:
DEBUG_TYPE	Target/PowerPC/PPCAsmPrinter.cpp	19;"	d	file:
DEBUG_TYPE	Target/PowerPC/PPCBranchSelector.cpp	18;"	d	file:
DEBUG_TYPE	Target/PowerPC/PPCCTRLoops.cpp	32;"	d	file:
DEBUG_TYPE	Target/PowerPC/PPCHazardRecognizers.cpp	14;"	d	file:
DEBUG_TYPE	Target/PowerPC/PPCISelDAGToDAG.cpp	15;"	d	file:
DEBUG_TYPE	Target/PowerPC/PPCJITInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/PowerPC/PPCRegisterInfo.cpp	15;"	d	file:
DEBUG_TYPE	Target/PowerPC/PPCSelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/Sparc/DelaySlotFiller.cpp	15;"	d	file:
DEBUG_TYPE	Target/Sparc/FPMover.cpp	14;"	d	file:
DEBUG_TYPE	Target/Sparc/SparcAsmPrinter.cpp	15;"	d	file:
DEBUG_TYPE	Target/Sparc/SparcSelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/X86/InstPrinter/X86ATTInstPrinter.cpp	15;"	d	file:
DEBUG_TYPE	Target/X86/InstPrinter/X86IntelInstPrinter.cpp	15;"	d	file:
DEBUG_TYPE	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	14;"	d	file:
DEBUG_TYPE	Target/X86/X86CodeEmitter.cpp	15;"	d	file:
DEBUG_TYPE	Target/X86/X86FloatingPoint.cpp	26;"	d	file:
DEBUG_TYPE	Target/X86/X86ISelDAGToDAG.cpp	15;"	d	file:
DEBUG_TYPE	Target/X86/X86ISelLowering.cpp	15;"	d	file:
DEBUG_TYPE	Target/X86/X86JITInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/X86/X86SelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Target/X86/X86Subtarget.cpp	14;"	d	file:
DEBUG_TYPE	Target/X86/X86VZeroUpper.cpp	17;"	d	file:
DEBUG_TYPE	Target/XCore/XCoreAsmPrinter.cpp	15;"	d	file:
DEBUG_TYPE	Target/XCore/XCoreISelLowering.cpp	14;"	d	file:
DEBUG_TYPE	Target/XCore/XCoreSelectionDAGInfo.cpp	14;"	d	file:
DEBUG_TYPE	Transforms/Hello/Hello.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/IPO/ArgumentPromotion.cpp	32;"	d	file:
DEBUG_TYPE	Transforms/IPO/ConstantMerge.cpp	20;"	d	file:
DEBUG_TYPE	Transforms/IPO/DeadArgumentElimination.cpp	20;"	d	file:
DEBUG_TYPE	Transforms/IPO/FunctionAttrs.cpp	21;"	d	file:
DEBUG_TYPE	Transforms/IPO/GlobalDCE.cpp	18;"	d	file:
DEBUG_TYPE	Transforms/IPO/GlobalOpt.cpp	16;"	d	file:
DEBUG_TYPE	Transforms/IPO/IPConstantPropagation.cpp	18;"	d	file:
DEBUG_TYPE	Transforms/IPO/InlineAlways.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/IPO/InlineSimple.cpp	14;"	d	file:
DEBUG_TYPE	Transforms/IPO/Inliner.cpp	16;"	d	file:
DEBUG_TYPE	Transforms/IPO/Internalize.cpp	16;"	d	file:
DEBUG_TYPE	Transforms/IPO/LoopExtractor.cpp	17;"	d	file:
DEBUG_TYPE	Transforms/IPO/MergeFunctions.cpp	46;"	d	file:
DEBUG_TYPE	Transforms/IPO/PartialInlining.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/IPO/PruneEH.cpp	17;"	d	file:
DEBUG_TYPE	Transforms/IPO/StripDeadPrototypes.cpp	17;"	d	file:
DEBUG_TYPE	Transforms/InstCombine/InstCombineWorklist.h	13;"	d
DEBUG_TYPE	Transforms/InstCombine/InstructionCombining.cpp	36;"	d	file:
DEBUG_TYPE	Transforms/Instrumentation/AddressSanitizer.cpp	16;"	d	file:
DEBUG_TYPE	Transforms/Instrumentation/BoundsChecking.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/Instrumentation/EdgeProfiling.cpp	19;"	d	file:
DEBUG_TYPE	Transforms/Instrumentation/GCOVProfiling.cpp	17;"	d	file:
DEBUG_TYPE	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/Instrumentation/PathProfiling.cpp	46;"	d	file:
DEBUG_TYPE	Transforms/Instrumentation/ThreadSanitizer.cpp	22;"	d	file:
DEBUG_TYPE	Transforms/Scalar/ADCE.cpp	17;"	d	file:
DEBUG_TYPE	Transforms/Scalar/BasicBlockPlacement.cpp	29;"	d	file:
DEBUG_TYPE	Transforms/Scalar/CodeGenPrepare.cpp	16;"	d	file:
DEBUG_TYPE	Transforms/Scalar/ConstantProp.cpp	21;"	d	file:
DEBUG_TYPE	Transforms/Scalar/CorrelatedValuePropagation.cpp	14;"	d	file:
DEBUG_TYPE	Transforms/Scalar/DCE.cpp	19;"	d	file:
DEBUG_TYPE	Transforms/Scalar/DeadStoreElimination.cpp	18;"	d	file:
DEBUG_TYPE	Transforms/Scalar/EarlyCSE.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/Scalar/GVN.cpp	18;"	d	file:
DEBUG_TYPE	Transforms/Scalar/GlobalMerge.cpp	54;"	d	file:
DEBUG_TYPE	Transforms/Scalar/IndVarSimplify.cpp	27;"	d	file:
DEBUG_TYPE	Transforms/Scalar/JumpThreading.cpp	14;"	d	file:
DEBUG_TYPE	Transforms/Scalar/LICM.cpp	33;"	d	file:
DEBUG_TYPE	Transforms/Scalar/LoopDeletion.cpp	17;"	d	file:
DEBUG_TYPE	Transforms/Scalar/LoopIdiomRecognize.cpp	44;"	d	file:
DEBUG_TYPE	Transforms/Scalar/LoopInstSimplify.cpp	14;"	d	file:
DEBUG_TYPE	Transforms/Scalar/LoopRotation.cpp	14;"	d	file:
DEBUG_TYPE	Transforms/Scalar/LoopStrengthReduce.cpp	56;"	d	file:
DEBUG_TYPE	Transforms/Scalar/LoopUnrollPass.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/Scalar/LoopUnswitch.cpp	29;"	d	file:
DEBUG_TYPE	Transforms/Scalar/LowerAtomic.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/Scalar/MemCpyOptimizer.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/Scalar/ObjCARC.cpp	31;"	d	file:
DEBUG_TYPE	Transforms/Scalar/Reassociate.cpp	23;"	d	file:
DEBUG_TYPE	Transforms/Scalar/Reg2Mem.cpp	19;"	d	file:
DEBUG_TYPE	Transforms/Scalar/SCCP.cpp	20;"	d	file:
DEBUG_TYPE	Transforms/Scalar/SROA.cpp	26;"	d	file:
DEBUG_TYPE	Transforms/Scalar/ScalarReplAggregates.cpp	22;"	d	file:
DEBUG_TYPE	Transforms/Scalar/SimplifyCFGPass.cpp	24;"	d	file:
DEBUG_TYPE	Transforms/Scalar/SimplifyLibCalls.cpp	18;"	d	file:
DEBUG_TYPE	Transforms/Scalar/Sink.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/Scalar/TailRecursionElimination.cpp	53;"	d	file:
DEBUG_TYPE	Transforms/Utils/BreakCriticalEdges.cpp	18;"	d	file:
DEBUG_TYPE	Transforms/Utils/BypassSlowDivision.cpp	18;"	d	file:
DEBUG_TYPE	Transforms/Utils/IntegerDivision.cpp	17;"	d	file:
DEBUG_TYPE	Transforms/Utils/LCSSA.cpp	30;"	d	file:
DEBUG_TYPE	Transforms/Utils/LoopSimplify.cpp	40;"	d	file:
DEBUG_TYPE	Transforms/Utils/LoopUnroll.cpp	19;"	d	file:
DEBUG_TYPE	Transforms/Utils/LoopUnrollRuntime.cpp	24;"	d	file:
DEBUG_TYPE	Transforms/Utils/LowerExpectIntrinsic.cpp	14;"	d	file:
DEBUG_TYPE	Transforms/Utils/LowerInvoke.cpp	37;"	d	file:
DEBUG_TYPE	Transforms/Utils/Mem2Reg.cpp	15;"	d	file:
DEBUG_TYPE	Transforms/Utils/PromoteMemoryToRegister.cpp	28;"	d	file:
DEBUG_TYPE	Transforms/Utils/SSAUpdater.cpp	14;"	d	file:
DEBUG_TYPE	Transforms/Utils/SimplifyCFG.cpp	14;"	d	file:
DEBUG_TYPE	Transforms/Utils/SimplifyIndVar.cpp	16;"	d	file:
DEBUG_TYPE	Transforms/Utils/SimplifyInstructions.cpp	17;"	d	file:
DEBUG_TYPE	Transforms/Vectorize/BBVectorize.cpp	18;"	d	file:
DEBUG_TYPE	Transforms/Vectorize/LoopVectorize.cpp	38;"	d	file:
DEBUG_TYPE	VMCore/ValueSymbolTable.cpp	14;"	d	file:
DEC	Target/X86/X86ISelDAGToDAG.cpp	/^  DEC,$/;"	e	enum:AtomicOpc	file:
DEC	Target/X86/X86ISelLowering.h	/^      INC, DEC, OR, XOR, AND,$/;"	e	enum:llvm::X86ISD::NodeType
DEFAULT_ADDRSPACE	MC/MCParser/AsmParser.cpp	/^enum { DEFAULT_ADDRSPACE = 0 };$/;"	e	enum:__anon212	file:
DEFAULT_DLLNAME	ExecutionEngine/IntelJITEvents/jitprofiling.c	46;"	d	file:
DEFAULT_DLLNAME	ExecutionEngine/IntelJITEvents/jitprofiling.c	49;"	d	file:
DEFAULT_PROC	Target/CellSPU/SPUSubtarget.h	/^      DEFAULT_PROC$/;"	e	enum:llvm::SPU::__anon420
DEPOTNAME	Target/NVPTX/NVPTXAsmPrinter.cpp	54;"	d	file:
DF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    DE = 9 << Op0Shift,   DF = 10 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
DFAPacketizer	CodeGen/DFAPacketizer.cpp	/^DFAPacketizer::DFAPacketizer(const InstrItineraryData *I, const int (*SIT)[2],$/;"	f	class:DFAPacketizer
DFCalculateWorkObject	Analysis/DominanceFrontier.cpp	/^    DFCalculateWorkObject(BasicBlock *B, BasicBlock *P, $/;"	f	class:__anon6::DFCalculateWorkObject
DFCalculateWorkObject	Analysis/DominanceFrontier.cpp	/^  class DFCalculateWorkObject {$/;"	c	namespace:__anon6	file:
DFS	Analysis/LoopInfo.cpp	/^  LoopBlocksDFS DFS;$/;"	m	class:__anon37::UnloopUpdater	file:
DFS	CodeGen/ScheduleDAG.cpp	/^void ScheduleDAGTopologicalSort::DFS(const SUnit *SU, int UpperBound,$/;"	f	class:ScheduleDAGTopologicalSort
DFSStack	CodeGen/ScheduleDAGInstrs.cpp	/^  std::vector<std::pair<const SUnit*, SUnit::const_pred_iterator> > DFSStack;$/;"	m	class:__anon110::SchedDAGReverseDFS	file:
DFormAddressPredicate	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SPUDAGToDAGISel::DFormAddressPredicate(SDNode *Op, SDValue N, SDValue &Base,$/;"	f	class:SPUDAGToDAGISel
DI	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const DbgValueInst* DI;$/;"	m	class:llvm::SelectionDAGBuilder::DanglingDebugInfo
DIB	Transforms/Scalar/SROA.cpp	/^  DIBuilder &DIB;$/;"	m	class:__anon558::AllocaPromoter	file:
DIB	Transforms/Scalar/ScalarReplAggregates.cpp	/^  DIBuilder *DIB;$/;"	m	class:__anon524::AllocaPromoter	file:
DIB	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DIBuilder *DIB;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
DIBuilder	VMCore/DIBuilder.cpp	/^DIBuilder::DIBuilder(Module &m)$/;"	f	class:DIBuilder
DIDescriptor	VMCore/DebugInfo.cpp	/^DIDescriptor::DIDescriptor(const DIFile F) : DbgNode(F.DbgNode) {$/;"	f	class:DIDescriptor
DIDescriptor	VMCore/DebugInfo.cpp	/^DIDescriptor::DIDescriptor(const DILexicalBlock F) : DbgNode(F.DbgNode) {$/;"	f	class:DIDescriptor
DIDescriptor	VMCore/DebugInfo.cpp	/^DIDescriptor::DIDescriptor(const DILexicalBlockFile F) : DbgNode(F.DbgNode) {$/;"	f	class:DIDescriptor
DIDescriptor	VMCore/DebugInfo.cpp	/^DIDescriptor::DIDescriptor(const DISubprogram F) : DbgNode(F.DbgNode) {$/;"	f	class:DIDescriptor
DIDescriptor	VMCore/DebugInfo.cpp	/^DIDescriptor::DIDescriptor(const DIType F) : DbgNode(F.DbgNode) {$/;"	f	class:DIDescriptor
DIDescriptor	VMCore/DebugInfo.cpp	/^DIDescriptor::DIDescriptor(const DIVariable F) : DbgNode(F.DbgNode) {$/;"	f	class:DIDescriptor
DIE	CodeGen/AsmPrinter/DIE.h	/^    explicit DIE(unsigned Tag)$/;"	f	class:llvm::DIE
DIE	CodeGen/AsmPrinter/DIE.h	/^  class DIE {$/;"	c	namespace:llvm
DIEAbbrev	CodeGen/AsmPrinter/DIE.h	/^    DIEAbbrev(uint16_t T, uint16_t C) : Tag(T), ChildrenFlag(C), Data() {}$/;"	f	class:llvm::DIEAbbrev
DIEAbbrev	CodeGen/AsmPrinter/DIE.h	/^  class DIEAbbrev : public FoldingSetNode {$/;"	c	namespace:llvm
DIEAbbrevData	CodeGen/AsmPrinter/DIE.h	/^    DIEAbbrevData(uint16_t A, uint16_t F) : Attribute(A), Form(F) {}$/;"	f	class:llvm::DIEAbbrevData
DIEAbbrevData	CodeGen/AsmPrinter/DIE.h	/^  class DIEAbbrevData {$/;"	c	namespace:llvm
DIEBlock	CodeGen/AsmPrinter/DIE.h	/^    DIEBlock()$/;"	f	class:llvm::DIEBlock
DIEBlock	CodeGen/AsmPrinter/DIE.h	/^  class DIEBlock : public DIEValue, public DIE {$/;"	c	namespace:llvm
DIEBlocks	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  std::vector<DIEBlock *> DIEBlocks;$/;"	m	class:llvm::CompileUnit
DIEDelta	CodeGen/AsmPrinter/DIE.h	/^    DIEDelta(const MCSymbol *Hi, const MCSymbol *Lo)$/;"	f	class:llvm::DIEDelta
DIEDelta	CodeGen/AsmPrinter/DIE.h	/^  class DIEDelta : public DIEValue {$/;"	c	namespace:llvm
DIEEntry	CodeGen/AsmPrinter/DIE.h	/^    explicit DIEEntry(DIE *E) : DIEValue(isEntry), Entry(E) {}$/;"	f	class:llvm::DIEEntry
DIEEntry	CodeGen/AsmPrinter/DIE.h	/^  class DIEEntry : public DIEValue {$/;"	c	namespace:llvm
DIEInteger	CodeGen/AsmPrinter/DIE.h	/^    explicit DIEInteger(uint64_t I) : DIEValue(isInteger), Integer(I) {}$/;"	f	class:llvm::DIEInteger
DIEInteger	CodeGen/AsmPrinter/DIE.h	/^  class DIEInteger : public DIEValue {$/;"	c	namespace:llvm
DIEIntegerOne	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DIEInteger *DIEIntegerOne;$/;"	m	class:llvm::CompileUnit
DIELabel	CodeGen/AsmPrinter/DIE.h	/^    explicit DIELabel(const MCSymbol *L) : DIEValue(isLabel), Label(L) {}$/;"	f	class:llvm::DIELabel
DIELabel	CodeGen/AsmPrinter/DIE.h	/^  class DIELabel : public DIEValue {$/;"	c	namespace:llvm
DIEValue	CodeGen/AsmPrinter/DIE.h	/^    explicit DIEValue(unsigned T) : Type(T) {}$/;"	f	class:llvm::DIEValue
DIEValue	CodeGen/AsmPrinter/DIE.h	/^  class DIEValue {$/;"	c	namespace:llvm
DIEValueAllocator	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  BumpPtrAllocator DIEValueAllocator;$/;"	m	class:llvm::CompileUnit
DIEValueAllocator	CodeGen/AsmPrinter/DwarfDebug.h	/^  BumpPtrAllocator DIEValueAllocator;$/;"	m	class:llvm::DwarfDebug
DIGIT_WIDTH	Target/NVPTX/NVPTXutil.cpp	34;"	d	file:
DIGIT_WIDTH	Target/NVPTX/NVPTXutil.cpp	61;"	d	file:
DIRS	Analysis/Makefile	/^DIRS = IPA$/;"	m
DIRS	Target/ARM/Makefile	/^DIRS = InstPrinter AsmParser Disassembler TargetInfo MCTargetDesc$/;"	m
DIRS	Target/CellSPU/Makefile	/^DIRS = TargetInfo MCTargetDesc$/;"	m
DIRS	Target/CppBackend/Makefile	/^DIRS = TargetInfo$/;"	m
DIRS	Target/Hexagon/Makefile	/^DIRS = InstPrinter TargetInfo MCTargetDesc$/;"	m
DIRS	Target/MBlaze/Makefile	/^DIRS = InstPrinter AsmParser Disassembler TargetInfo MCTargetDesc$/;"	m
DIRS	Target/MSP430/Makefile	/^DIRS = InstPrinter TargetInfo MCTargetDesc$/;"	m
DIRS	Target/Mips/Makefile	/^DIRS = InstPrinter Disassembler AsmParser TargetInfo MCTargetDesc$/;"	m
DIRS	Target/NVPTX/Makefile	/^DIRS = InstPrinter TargetInfo MCTargetDesc$/;"	m
DIRS	Target/PowerPC/Makefile	/^DIRS = InstPrinter TargetInfo MCTargetDesc$/;"	m
DIRS	Target/Sparc/Makefile	/^DIRS = TargetInfo MCTargetDesc$/;"	m
DIRS	Target/X86/Makefile	/^DIRS = InstPrinter AsmParser Disassembler TargetInfo MCTargetDesc Utils$/;"	m
DIRS	Target/XCore/Makefile	/^DIRS = TargetInfo MCTargetDesc$/;"	m
DIR_32	Target/PowerPC/PPCSubtarget.h	/^    DIR_32,$/;"	e	enum:llvm::PPC::__anon326
DIR_440	Target/PowerPC/PPCSubtarget.h	/^    DIR_440, $/;"	e	enum:llvm::PPC::__anon326
DIR_601	Target/PowerPC/PPCSubtarget.h	/^    DIR_601, $/;"	e	enum:llvm::PPC::__anon326
DIR_602	Target/PowerPC/PPCSubtarget.h	/^    DIR_602, $/;"	e	enum:llvm::PPC::__anon326
DIR_603	Target/PowerPC/PPCSubtarget.h	/^    DIR_603, $/;"	e	enum:llvm::PPC::__anon326
DIR_64	Target/PowerPC/PPCSubtarget.h	/^    DIR_64  $/;"	e	enum:llvm::PPC::__anon326
DIR_7400	Target/PowerPC/PPCSubtarget.h	/^    DIR_7400,$/;"	e	enum:llvm::PPC::__anon326
DIR_750	Target/PowerPC/PPCSubtarget.h	/^    DIR_750, $/;"	e	enum:llvm::PPC::__anon326
DIR_970	Target/PowerPC/PPCSubtarget.h	/^    DIR_970, $/;"	e	enum:llvm::PPC::__anon326
DIR_A2	Target/PowerPC/PPCSubtarget.h	/^    DIR_A2,$/;"	e	enum:llvm::PPC::__anon326
DIR_E500mc	Target/PowerPC/PPCSubtarget.h	/^    DIR_E500mc,$/;"	e	enum:llvm::PPC::__anon326
DIR_E5500	Target/PowerPC/PPCSubtarget.h	/^    DIR_E5500,$/;"	e	enum:llvm::PPC::__anon326
DIR_NONE	Target/PowerPC/PPCSubtarget.h	/^    DIR_NONE,$/;"	e	enum:llvm::PPC::__anon326
DIR_PWR6	Target/PowerPC/PPCSubtarget.h	/^    DIR_PWR6,$/;"	e	enum:llvm::PPC::__anon326
DIR_PWR7	Target/PowerPC/PPCSubtarget.h	/^    DIR_PWR7,$/;"	e	enum:llvm::PPC::__anon326
DIType	VMCore/DebugInfo.cpp	/^DIType::DIType(const MDNode *N) : DIScope(N) {$/;"	f	class:DIType
DIV_use	Target/ARM/ARMBuildAttrs.h	/^    DIV_use                   = 44,$/;"	e	enum:ARMBuildAttrs::AttrType
DL	CodeGen/LiveDebugVariables.cpp	/^  DebugLoc DL;$/;"	m	class:__anon151::UserValueScopes	file:
DL	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  DebugLoc DL;$/;"	m	class:llvm::SDDbgValue
DL	Target/ARM/ARMTargetMachine.h	/^  const DataLayout    DL;       \/\/ Calculates type size & alignment$/;"	m	class:llvm::ARMTargetMachine
DL	Target/ARM/ARMTargetMachine.h	/^  const DataLayout    DL;   \/\/ Calculates type size & alignment$/;"	m	class:llvm::ThumbTargetMachine
DL	Target/CellSPU/SPUTargetMachine.h	/^  const DataLayout    DL;$/;"	m	class:llvm::SPUTargetMachine
DL	Target/Hexagon/HexagonTargetMachine.h	/^  const DataLayout DL;       \/\/ Calculates type size & alignment.$/;"	m	class:llvm::HexagonTargetMachine
DL	Target/MBlaze/MBlazeTargetMachine.h	/^    const DataLayout       DL; \/\/ Calculates type size & alignment$/;"	m	class:llvm::MBlazeTargetMachine
DL	Target/MSP430/MSP430TargetMachine.h	/^  const DataLayout       DL;       \/\/ Calculates type size & alignment$/;"	m	class:llvm::MSP430TargetMachine
DL	Target/Mips/MipsTargetMachine.h	/^  const DataLayout    DL; \/\/ Calculates type size & alignment$/;"	m	class:llvm::MipsTargetMachine
DL	Target/NVPTX/NVPTXTargetMachine.h	/^  const DataLayout      DL;       \/\/ Calculates type size & alignment$/;"	m	class:llvm::NVPTXTargetMachine
DL	Target/PowerPC/PPCTargetMachine.h	/^  const DataLayout    DL;       \/\/ Calculates type size & alignment$/;"	m	class:llvm::PPCTargetMachine
DL	Target/Sparc/SparcTargetMachine.h	/^  const DataLayout DL;       \/\/ Calculates type size & alignment$/;"	m	class:llvm::SparcTargetMachine
DL	Target/X86/X86TargetMachine.h	/^  const DataLayout  DL; \/\/ Calculates type size & alignment$/;"	m	class:llvm::X86_32TargetMachine
DL	Target/X86/X86TargetMachine.h	/^  const DataLayout  DL; \/\/ Calculates type size & alignment$/;"	m	class:llvm::X86_64TargetMachine
DL	Target/XCore/XCoreTargetMachine.h	/^  const DataLayout DL;       \/\/ Calculates type size & alignment$/;"	m	class:llvm::XCoreTargetMachine
DL	Transforms/Scalar/LICM.cpp	/^    DebugLoc DL;$/;"	m	class:__anon569::LoopPromoter	file:
DL	Transforms/Vectorize/LoopVectorize.cpp	/^  DataLayout *DL;$/;"	m	class:__anon605::LoopVectorizationLegality	file:
DL	Transforms/Vectorize/LoopVectorize.cpp	/^  DataLayout *DL;$/;"	m	struct:__anon605::LoopVectorize	file:
DLL_ENVIRONMENT_VAR	ExecutionEngine/IntelJITEvents/jitprofiling.c	35;"	d	file:
DONT_GET_PLUGIN_LOADER_OPTION	Support/PluginLoader.cpp	14;"	d	file:
DOTGraphTraits	Analysis/DomPrinter.cpp	/^  DOTGraphTraits (bool isSimple=false)$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	Analysis/DomPrinter.cpp	/^struct DOTGraphTraits<DomTreeNode*> : public DefaultDOTGraphTraits {$/;"	s	namespace:llvm	file:
DOTGraphTraits	Analysis/DomPrinter.cpp	/^struct DOTGraphTraits<DominatorTree*> : public DOTGraphTraits<DomTreeNode*> {$/;"	s	namespace:llvm	file:
DOTGraphTraits	Analysis/DomPrinter.cpp	/^struct DOTGraphTraits<PostDominatorTree*>$/;"	s	namespace:llvm	file:
DOTGraphTraits	Analysis/RegionPrinter.cpp	/^  DOTGraphTraits (bool isSimple=false)$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	Analysis/RegionPrinter.cpp	/^struct DOTGraphTraits<RegionInfo*> : public DOTGraphTraits<RegionNode*> {$/;"	s	namespace:llvm	file:
DOTGraphTraits	Analysis/RegionPrinter.cpp	/^struct DOTGraphTraits<RegionNode*> : public DefaultDOTGraphTraits {$/;"	s	namespace:llvm	file:
DOTGraphTraits	CodeGen/MachineFunction.cpp	/^  DOTGraphTraits (bool isSimple=false) : DefaultDOTGraphTraits(isSimple) {}$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	CodeGen/MachineFunction.cpp	/^  struct DOTGraphTraits<const MachineFunction*> : public DefaultDOTGraphTraits {$/;"	s	namespace:llvm	file:
DOTGraphTraits	CodeGen/ScheduleDAGPrinter.cpp	/^  DOTGraphTraits (bool isSimple=false) : DefaultDOTGraphTraits(isSimple) {}$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	CodeGen/ScheduleDAGPrinter.cpp	/^  struct DOTGraphTraits<ScheduleDAG*> : public DefaultDOTGraphTraits {$/;"	s	namespace:llvm	file:
DOTGraphTraits	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    explicit DOTGraphTraits(bool isSimple=false) :$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^  struct DOTGraphTraits<SelectionDAG*> : public DefaultDOTGraphTraits {$/;"	s	namespace:llvm	file:
DPAQX_SA_W_PH	Target/Mips/MipsISelLowering.h	/^      DPAQX_SA_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPAQX_S_W_PH	Target/Mips/MipsISelLowering.h	/^      DPAQX_S_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPAQ_SA_L_W	Target/Mips/MipsISelLowering.h	/^      DPAQ_SA_L_W,$/;"	e	enum:llvm::MipsISD::NodeType
DPAQ_S_W_PH	Target/Mips/MipsISelLowering.h	/^      DPAQ_S_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPAU_H_QBL	Target/Mips/MipsISelLowering.h	/^      DPAU_H_QBL,$/;"	e	enum:llvm::MipsISD::NodeType
DPAU_H_QBR	Target/Mips/MipsISelLowering.h	/^      DPAU_H_QBR,$/;"	e	enum:llvm::MipsISD::NodeType
DPAX_W_PH	Target/Mips/MipsISelLowering.h	/^      DPAX_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPA_W_PH	Target/Mips/MipsISelLowering.h	/^      DPA_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    DPFrm         = 4  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
DPRCSFrames	Target/ARM/ARMMachineFunctionInfo.h	/^  BitVector DPRCSFrames;$/;"	m	class:llvm::ARMFunctionInfo
DPRCSOffset	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned DPRCSOffset;$/;"	m	class:llvm::ARMFunctionInfo
DPRCSSize	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned DPRCSSize;$/;"	m	class:llvm::ARMFunctionInfo
DPRDecoderTable	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static const uint16_t DPRDecoderTable[] = {$/;"	v	file:
DPRelativeWrapper	Target/XCore/XCoreISelLowering.h	/^      DPRelativeWrapper,$/;"	e	enum:llvm::XCoreISD::NodeType
DPSQX_SA_W_PH	Target/Mips/MipsISelLowering.h	/^      DPSQX_SA_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPSQX_S_W_PH	Target/Mips/MipsISelLowering.h	/^      DPSQX_S_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPSQ_SA_L_W	Target/Mips/MipsISelLowering.h	/^      DPSQ_SA_L_W,$/;"	e	enum:llvm::MipsISD::NodeType
DPSQ_S_W_PH	Target/Mips/MipsISelLowering.h	/^      DPSQ_S_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPSU_H_QBL	Target/Mips/MipsISelLowering.h	/^      DPSU_H_QBL,$/;"	e	enum:llvm::MipsISD::NodeType
DPSU_H_QBR	Target/Mips/MipsISelLowering.h	/^      DPSU_H_QBR,$/;"	e	enum:llvm::MipsISD::NodeType
DPSX_W_PH	Target/Mips/MipsISelLowering.h	/^      DPSX_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPS_W_PH	Target/Mips/MipsISelLowering.h	/^      DPS_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
DPSoRegFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    DPSoRegFrm    = 5  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
DPairDecoderTable	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static const uint16_t DPairDecoderTable[] = {$/;"	v	file:
DPairSpacedDecoderTable	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static const uint16_t DPairSpacedDecoderTable[] = {$/;"	v	file:
DROP	Support/regcomp.c	138;"	d	file:
DSE	Transforms/Scalar/DeadStoreElimination.cpp	/^    DSE() : FunctionPass(ID), AA(0), MD(0), DT(0) {$/;"	f	struct:__anon552::DSE
DSE	Transforms/Scalar/DeadStoreElimination.cpp	/^  struct DSE : public FunctionPass {$/;"	s	namespace:__anon552	file:
DT	Analysis/AliasAnalysis.cpp	/^    DominatorTree *DT;$/;"	m	struct:__anon21::CapturesBefore	file:
DT	Analysis/InstructionSimplify.cpp	/^  const DominatorTree *DT;$/;"	m	struct:Query	file:
DT	Analysis/Lint.cpp	/^    DominatorTree *DT;$/;"	m	class:__anon5::Lint	file:
DT	Analysis/ScalarEvolutionExpander.cpp	/^  DominatorTree &DT;$/;"	m	class:__anon22::LoopCompare	file:
DT	Analysis/ScalarEvolutionNormalization.cpp	/^  DominatorTree &DT;$/;"	m	class:__anon48::PostIncTransform	file:
DT	CodeGen/MachineCSE.cpp	/^    MachineDominatorTree *DT;$/;"	m	class:__anon161::MachineCSE	file:
DT	CodeGen/MachineLICM.cpp	/^    MachineDominatorTree *DT;      \/\/ Machine dominator tree for the cur loop$/;"	m	class:__anon156::MachineLICM	file:
DT	CodeGen/MachineSink.cpp	/^    MachineDominatorTree *DT;   \/\/ Machine dominator tree$/;"	m	class:__anon101::MachineSinking	file:
DT	CodeGen/PeepholeOptimizer.cpp	/^    MachineDominatorTree  *DT;  \/\/ Machine dominator tree$/;"	m	class:__anon163::PeepholeOptimizer	file:
DT	CodeGen/StackProtector.cpp	/^    DominatorTree *DT;$/;"	m	class:__anon130::StackProtector	file:
DT	CodeGen/StrongPHIElimination.cpp	/^    MachineDominatorTree *DT;$/;"	m	class:__anon154::StrongPHIElimination	file:
DT	Transforms/Scalar/CodeGenPrepare.cpp	/^    DominatorTree *DT;$/;"	m	class:__anon525::CodeGenPrepare	file:
DT	Transforms/Scalar/DeadStoreElimination.cpp	/^    DominatorTree *DT;$/;"	m	struct:__anon552::DSE	file:
DT	Transforms/Scalar/EarlyCSE.cpp	/^  DominatorTree *DT;$/;"	m	class:__anon566::EarlyCSE	file:
DT	Transforms/Scalar/GVN.cpp	/^    DominatorTree *DT;$/;"	m	class:__anon536::ValueTable	file:
DT	Transforms/Scalar/GVN.cpp	/^    DominatorTree *DT;$/;"	m	class:__anon537::GVN	file:
DT	Transforms/Scalar/IndVarSimplify.cpp	/^    DominatorTree   *DT;$/;"	m	class:__anon495::IndVarSimplify	file:
DT	Transforms/Scalar/IndVarSimplify.cpp	/^  DominatorTree   *DT;$/;"	m	class:__anon497::WidenIV	file:
DT	Transforms/Scalar/LICM.cpp	/^    DominatorTree *DT;       \/\/ Dominator Tree for the current Loop.$/;"	m	struct:__anon568::LICM	file:
DT	Transforms/Scalar/LoopIdiomRecognize.cpp	/^    DominatorTree *DT;$/;"	m	class:__anon543::LoopIdiomRecognize	file:
DT	Transforms/Scalar/LoopStrengthReduce.cpp	/^  DominatorTree &DT;$/;"	m	class:__anon518::LSRInstance	file:
DT	Transforms/Scalar/LoopUnswitch.cpp	/^    DominatorTree *DT;$/;"	m	class:__anon494::LoopUnswitch	file:
DT	Transforms/Scalar/ObjCARC.cpp	/^    DominatorTree *DT;$/;"	m	class:__anon510::ObjCARCContract	file:
DT	Transforms/Scalar/SROA.cpp	/^  DominatorTree *DT;$/;"	m	class:__anon559::SROA	file:
DT	Transforms/Scalar/Sink.cpp	/^    DominatorTree *DT;$/;"	m	class:__anon556::Sinking	file:
DT	Transforms/Utils/LCSSA.cpp	/^    DominatorTree *DT;$/;"	m	struct:__anon475::LCSSA	file:
DT	Transforms/Utils/LoopSimplify.cpp	/^    DominatorTree *DT;$/;"	m	struct:__anon483::LoopSimplify	file:
DT	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DominatorTree &DT;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
DT	VMCore/Verifier.cpp	/^    DominatorTree *DT;    \/\/ Dominator Tree, caution can be null!$/;"	m	struct:__anon610::Verifier	file:
DTL	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^    DAGTypeLegalizer &DTL;$/;"	m	class:__anon85::NodeUpdateListener	file:
DUPMAX	Support/regcomp.c	141;"	d	file:
DUPMAX	Support/regcomp.c	143;"	d	file:
DVIs	Transforms/Scalar/SROA.cpp	/^  SmallVector<DbgValueInst *, 4> DVIs;$/;"	m	class:__anon558::AllocaPromoter	file:
DVIs	Transforms/Scalar/ScalarReplAggregates.cpp	/^  SmallVector<DbgValueInst *, 4> DVIs;$/;"	m	class:__anon524::AllocaPromoter	file:
DWARF2_LINE_BASE	MC/MCDwarf.cpp	45;"	d	file:
DWARF2_LINE_MIN_INSN_LENGTH	MC/MCDwarf.cpp	52;"	d	file:
DWARF2_LINE_OPCODE_BASE	MC/MCDwarf.cpp	41;"	d	file:
DWARF2_LINE_RANGE	MC/MCDwarf.cpp	48;"	d	file:
DWARFAbbreviationDeclaration	DebugInfo/DWARFAbbreviationDeclaration.h	/^  DWARFAbbreviationDeclaration()$/;"	f	class:llvm::DWARFAbbreviationDeclaration
DWARFAbbreviationDeclaration	DebugInfo/DWARFAbbreviationDeclaration.h	/^class DWARFAbbreviationDeclaration {$/;"	c	namespace:llvm
DWARFAbbreviationDeclarationColl	DebugInfo/DWARFDebugAbbrev.h	/^  DWARFAbbreviationDeclarationColl;$/;"	t	namespace:llvm
DWARFAbbreviationDeclarationCollConstIter	DebugInfo/DWARFDebugAbbrev.h	/^  DWARFAbbreviationDeclarationCollConstIter;$/;"	t	namespace:llvm
DWARFAbbreviationDeclarationCollIter	DebugInfo/DWARFDebugAbbrev.h	/^  DWARFAbbreviationDeclarationCollIter;$/;"	t	namespace:llvm
DWARFAbbreviationDeclarationCollMap	DebugInfo/DWARFDebugAbbrev.h	/^    DWARFAbbreviationDeclarationCollMap;$/;"	t	class:llvm::DWARFDebugAbbrev
DWARFAbbreviationDeclarationCollMapConstIter	DebugInfo/DWARFDebugAbbrev.h	/^    DWARFAbbreviationDeclarationCollMapConstIter;$/;"	t	class:llvm::DWARFDebugAbbrev
DWARFAbbreviationDeclarationCollMapIter	DebugInfo/DWARFDebugAbbrev.h	/^    DWARFAbbreviationDeclarationCollMapIter;$/;"	t	class:llvm::DWARFDebugAbbrev
DWARFAbbreviationDeclarationSet	DebugInfo/DWARFDebugAbbrev.h	/^  DWARFAbbreviationDeclarationSet()$/;"	f	class:llvm::DWARFAbbreviationDeclarationSet
DWARFAbbreviationDeclarationSet	DebugInfo/DWARFDebugAbbrev.h	/^  DWARFAbbreviationDeclarationSet(uint32_t offset, uint32_t idxOffset)$/;"	f	class:llvm::DWARFAbbreviationDeclarationSet
DWARFAbbreviationDeclarationSet	DebugInfo/DWARFDebugAbbrev.h	/^class DWARFAbbreviationDeclarationSet {$/;"	c	namespace:llvm
DWARFAttribute	DebugInfo/DWARFAttribute.h	/^  DWARFAttribute(uint16_t attr, uint16_t form)$/;"	f	class:llvm::DWARFAttribute
DWARFAttribute	DebugInfo/DWARFAttribute.h	/^class DWARFAttribute {$/;"	c	namespace:llvm
DWARFCompileUnit	DebugInfo/DWARFCompileUnit.h	/^  DWARFCompileUnit(DWARFContext &context) : Context(context) {$/;"	f	class:llvm::DWARFCompileUnit
DWARFCompileUnit	DebugInfo/DWARFCompileUnit.h	/^class DWARFCompileUnit {$/;"	c	namespace:llvm
DWARFContext	DebugInfo/DWARFContext.h	/^  DWARFContext(bool isLittleEndian) : IsLittleEndian(isLittleEndian) {}$/;"	f	class:llvm::DWARFContext
DWARFContext	DebugInfo/DWARFContext.h	/^class DWARFContext : public DIContext {$/;"	c	namespace:llvm
DWARFContextInMemory	DebugInfo/DWARFContext.h	/^  DWARFContextInMemory(bool isLittleEndian,$/;"	f	class:llvm::DWARFContextInMemory
DWARFContextInMemory	DebugInfo/DWARFContext.h	/^class DWARFContextInMemory : public DWARFContext {$/;"	c	namespace:llvm
DWARFDebugAbbrev	DebugInfo/DWARFDebugAbbrev.cpp	/^DWARFDebugAbbrev::DWARFDebugAbbrev() :$/;"	f	class:DWARFDebugAbbrev
DWARFDebugAbbrev	DebugInfo/DWARFDebugAbbrev.h	/^class DWARFDebugAbbrev {$/;"	c	namespace:llvm
DWARFDebugArangeSet	DebugInfo/DWARFDebugArangeSet.h	/^  DWARFDebugArangeSet() { clear(); }$/;"	f	class:llvm::DWARFDebugArangeSet
DWARFDebugArangeSet	DebugInfo/DWARFDebugArangeSet.h	/^class DWARFDebugArangeSet {$/;"	c	namespace:llvm
DWARFDebugAranges	DebugInfo/DWARFDebugAranges.h	/^class DWARFDebugAranges {$/;"	c	namespace:llvm
DWARFDebugInfoEntryMinimal	DebugInfo/DWARFDebugInfoEntry.h	/^  DWARFDebugInfoEntryMinimal()$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
DWARFDebugInfoEntryMinimal	DebugInfo/DWARFDebugInfoEntry.h	/^class DWARFDebugInfoEntryMinimal {$/;"	c	namespace:llvm
DWARFDebugLine	DebugInfo/DWARFDebugLine.h	/^class DWARFDebugLine {$/;"	c	namespace:llvm
DWARFDebugRangeList	DebugInfo/DWARFDebugRangeList.h	/^  DWARFDebugRangeList() { clear(); }$/;"	f	class:llvm::DWARFDebugRangeList
DWARFDebugRangeList	DebugInfo/DWARFDebugRangeList.h	/^class DWARFDebugRangeList {$/;"	c	namespace:llvm
DWARFFlavour	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^namespace DWARFFlavour {$/;"	n	namespace:llvm
DWARFFormValue	DebugInfo/DWARFFormValue.h	/^  DWARFFormValue(uint16_t form = 0) : Form(form) {}$/;"	f	class:llvm::DWARFFormValue
DWARFFormValue	DebugInfo/DWARFFormValue.h	/^class DWARFFormValue {$/;"	c	namespace:llvm
DWARFGroupName	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static const char *DWARFGroupName = "DWARF Emission";$/;"	v	file:
DWARFGroupName	CodeGen/AsmPrinter/DwarfDebug.cpp	/^  const char *DWARFGroupName = "DWARF Emission";$/;"	m	namespace:__anon63	file:
DWARFLineTable	DebugInfo/DWARFContext.cpp	/^typedef DWARFDebugLine::LineTable DWARFLineTable;$/;"	t	file:
DW_ISA	Target/ARM/ARMAsmPrinter.h	/^  enum DW_ISA {$/;"	g	namespace:llvm::ARM
DW_ISA_ARM_arm	Target/ARM/ARMAsmPrinter.h	/^    DW_ISA_ARM_arm = 2$/;"	e	enum:llvm::ARM::DW_ISA
DW_ISA_ARM_thumb	Target/ARM/ARMAsmPrinter.h	/^    DW_ISA_ARM_thumb = 1,$/;"	e	enum:llvm::ARM::DW_ISA
DYNALLOC	Target/PowerPC/PPCISelLowering.h	/^      DYNALLOC,$/;"	e	enum:llvm::PPCISD::NodeType
DYN_ALLOC	Target/ARM/ARMISelLowering.h	/^      DYN_ALLOC,    \/\/ Dynamic allocation on the stack.$/;"	e	enum:llvm::ARMISD::NodeType
D_BitShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    D_BitShift     = 22,$/;"	e	enum:llvm::ARMII::__anon288
Dag	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
DanglingDebugInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    DanglingDebugInfo() : DI(0), dl(DebugLoc()), SDNodeOrder(0) { }$/;"	f	class:llvm::SelectionDAGBuilder::DanglingDebugInfo
DanglingDebugInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    DanglingDebugInfo(const DbgValueInst *di, DebugLoc DL, unsigned SDNO) :$/;"	f	class:llvm::SelectionDAGBuilder::DanglingDebugInfo
DanglingDebugInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  class DanglingDebugInfo {$/;"	c	class:llvm::SelectionDAGBuilder
DanglingDebugInfoMap	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  DenseMap<const Value*, DanglingDebugInfo> DanglingDebugInfoMap;$/;"	m	class:llvm::SelectionDAGBuilder
DarwinARMAsmBackend	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  DarwinARMAsmBackend(const Target &T, const StringRef TT,$/;"	f	class:__anon285::DarwinARMAsmBackend
DarwinARMAsmBackend	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^class DarwinARMAsmBackend : public ARMAsmBackend {$/;"	c	namespace:__anon285	file:
DarwinAsmParser	MC/MCParser/DarwinAsmParser.cpp	/^  DarwinAsmParser() {}$/;"	f	class:__anon208::DarwinAsmParser
DarwinAsmParser	MC/MCParser/DarwinAsmParser.cpp	/^class DarwinAsmParser : public MCAsmParserExtension {$/;"	c	namespace:__anon208	file:
DarwinBCHeaderSize	Bitcode/Writer/BitcodeWriter.cpp	/^  DarwinBCHeaderSize = 5*4$/;"	e	enum:__anon58	file:
DarwinBCSizeFieldOffset	Bitcode/Writer/BitcodeWriter.cpp	/^  DarwinBCSizeFieldOffset = 3*4, \/\/ Offset to bitcode_size.$/;"	e	enum:__anon58	file:
DarwinDirective	Target/PowerPC/PPCSubtarget.h	/^  unsigned DarwinDirective;$/;"	m	class:llvm::PPCSubtarget
DarwinPPCAsmBackend	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^    DarwinPPCAsmBackend(const Target &T) : PPCAsmBackend(T) { }$/;"	f	class:__anon321::DarwinPPCAsmBackend
DarwinPPCAsmBackend	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  class DarwinPPCAsmBackend : public PPCAsmBackend {$/;"	c	namespace:__anon321	file:
DarwinRegisterFrame	ExecutionEngine/JIT/JIT.cpp	/^void DarwinRegisterFrame(void* FrameBegin) {$/;"	f	namespace:__anon185
DarwinX86AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  DarwinX86AsmBackend(const Target &T, StringRef CPU)$/;"	f	class:__anon345::DarwinX86AsmBackend
DarwinX86AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^class DarwinX86AsmBackend : public X86AsmBackend {$/;"	c	namespace:__anon345	file:
DarwinX86_32AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  DarwinX86_32AsmBackend(const Target &T, StringRef CPU)$/;"	f	class:__anon345::DarwinX86_32AsmBackend
DarwinX86_32AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^class DarwinX86_32AsmBackend : public DarwinX86AsmBackend {$/;"	c	namespace:__anon345	file:
DarwinX86_64AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  DarwinX86_64AsmBackend(const Target &T, StringRef CPU)$/;"	f	class:__anon345::DarwinX86_64AsmBackend
DarwinX86_64AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^class DarwinX86_64AsmBackend : public DarwinX86AsmBackend {$/;"	c	namespace:__anon345	file:
Data	CodeGen/AsmPrinter/DIE.h	/^    SmallVector<DIEAbbrevData, 8> Data;$/;"	m	class:llvm::DIEAbbrev
Data	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    ArrayRef<HashDataContents*> Data; \/\/ offsets$/;"	m	struct:llvm::DwarfAccelTable::HashData
Data	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  std::vector<HashData*> Data;$/;"	m	class:llvm::DwarfAccelTable
Data	MC/WinCOFFObjectWriter.cpp	/^  COFF::relocation Data;$/;"	m	struct:__anon222::COFFRelocation	file:
Data	MC/WinCOFFObjectWriter.cpp	/^  COFF::symbol Data;$/;"	m	class:__anon222::COFFSymbol	file:
Data	MC/WinCOFFObjectWriter.cpp	/^  std::vector<char> Data;$/;"	m	class:__anon222::StringTable	file:
Data	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      const char *Data;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon270	file:
Data	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^      const char *Data;$/;"	m	struct:__anon446::MBlazeOperand::__anon447::__anon448	file:
Data	Target/Mips/AsmParser/MipsAsmParser.cpp	/^      const char *Data;$/;"	m	struct:__anon423::MipsOperand::__anon424::__anon425	file:
Data	Target/X86/AsmParser/X86AsmParser.cpp	/^      const char *Data;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon338	file:
DataAllocator	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    BumpPtrAllocator DataAllocator;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
DataArray	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  typedef std::vector<HashDataContents*> DataArray;$/;"	t	class:llvm::DwarfAccelTable
DataDep	CodeGen/MachineTraceMetrics.cpp	/^  DataDep(const MachineInstr *DefMI, unsigned DefOp, unsigned UseOp)$/;"	f	struct:__anon133::DataDep
DataDep	CodeGen/MachineTraceMetrics.cpp	/^  DataDep(const MachineRegisterInfo *MRI, unsigned VirtReg, unsigned UseOp)$/;"	f	struct:__anon133::DataDep
DataDep	CodeGen/MachineTraceMetrics.cpp	/^struct DataDep {$/;"	s	namespace:__anon133	file:
DataFileStreamer	Support/DataStream.cpp	/^  DataFileStreamer() : Fd(0) {}$/;"	f	class:__anon234::DataFileStreamer
DataFileStreamer	Support/DataStream.cpp	/^class DataFileStreamer : public DataStreamer {$/;"	c	namespace:__anon234	file:
DataLayout	VMCore/DataLayout.cpp	/^DataLayout::DataLayout() : ImmutablePass(ID) {$/;"	f	class:DataLayout
DataLayout	VMCore/DataLayout.cpp	/^DataLayout::DataLayout(const Module *M)$/;"	f	class:DataLayout
DataSectionSize	MC/ELFObjectWriter.cpp	/^uint64_t ELFObjectWriter::DataSectionSize(const MCSectionData &SD) {$/;"	f	class:ELFObjectWriter
DbgDeclare	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DbgDeclareInst *DbgDeclare;$/;"	m	struct:__anon469::AllocaInfo	file:
DbgTimerName	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static const char *DbgTimerName = "DWARF Debug Writer";$/;"	v	file:
DbgTimerName	CodeGen/AsmPrinter/DwarfDebug.cpp	/^  const char *DbgTimerName = "DWARF Debug Writer";$/;"	m	namespace:__anon63	file:
DbgValueHistoryMap	CodeGen/AsmPrinter/DwarfDebug.h	/^    DbgValueHistoryMap;$/;"	t	class:llvm::DwarfDebug
DbgValueKind	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  enum DbgValueKind {$/;"	g	class:llvm::SDDbgValue
DbgValueVector	CodeGen/AntiDepBreaker.h	/^    DbgValueVector;$/;"	t	class:llvm::AntiDepBreaker
DbgValues	CodeGen/AsmPrinter/DwarfDebug.h	/^  DbgValueHistoryMap DbgValues;$/;"	m	class:llvm::DwarfDebug
DbgVariable	CodeGen/AsmPrinter/DwarfDebug.h	/^  DbgVariable(DIVariable V, DbgVariable *AV) $/;"	f	class:llvm::DbgVariable
DbgVariable	CodeGen/AsmPrinter/DwarfDebug.h	/^class DbgVariable {$/;"	c	namespace:llvm
DeadDefs	CodeGen/InlineSpiller.cpp	/^  SmallVector<MachineInstr*, 8> DeadDefs;$/;"	m	class:__anon155::InlineSpiller	file:
DeadDefs	CodeGen/RegisterCoalescer.cpp	/^    SmallVector<MachineInstr*, 8> DeadDefs;$/;"	m	class:__anon114::RegisterCoalescer	file:
DeadDefs	CodeGen/RegisterPressure.cpp	/^  SmallVector<unsigned, 8> DeadDefs;$/;"	m	struct:RegisterOperands	file:
DeadInstElimination	Transforms/Scalar/DCE.cpp	/^    DeadInstElimination() : BasicBlockPass(ID) {$/;"	f	struct:__anon539::DeadInstElimination
DeadInstElimination	Transforms/Scalar/DCE.cpp	/^  struct DeadInstElimination : public BasicBlockPass {$/;"	s	namespace:__anon539	file:
DeadInsts	Transforms/Scalar/IndVarSimplify.cpp	/^    SmallVector<WeakVH, 16> DeadInsts;$/;"	m	class:__anon495::IndVarSimplify	file:
DeadInsts	Transforms/Scalar/IndVarSimplify.cpp	/^  SmallVectorImpl<WeakVH> &DeadInsts;$/;"	m	class:__anon497::WidenIV	file:
DeadInsts	Transforms/Scalar/SROA.cpp	/^  SmallVector<Instruction *, 8> DeadInsts;$/;"	m	class:__anon559::SROA	file:
DeadInsts	Transforms/Scalar/ScalarReplAggregates.cpp	/^    SmallVector<Value*, 32> DeadInsts;$/;"	m	struct:__anon521::SROA	file:
DeadInsts	Transforms/Utils/SimplifyIndVar.cpp	/^    SmallVectorImpl<WeakVH> &DeadInsts;$/;"	m	class:__anon463::SimplifyIndvar	file:
DeadMachineInstructionElim	CodeGen/DeadMachineInstructionElim.cpp	/^    DeadMachineInstructionElim() : MachineFunctionPass(ID) {$/;"	f	class:__anon137::DeadMachineInstructionElim
DeadMachineInstructionElim	CodeGen/DeadMachineInstructionElim.cpp	/^  class DeadMachineInstructionElim : public MachineFunctionPass {$/;"	c	namespace:__anon137	file:
DeadMachineInstructionElimID	CodeGen/DeadMachineInstructionElim.cpp	/^char &llvm::DeadMachineInstructionElimID = DeadMachineInstructionElim::ID;$/;"	m	class:llvm	file:
DeadOperands	Transforms/Scalar/SROA.cpp	/^  SmallVector<Use *, 8> DeadOperands;$/;"	m	class:__anon557::AllocaPartitioning	file:
DeadPHICycle	Transforms/InstCombine/InstCombinePHI.cpp	/^static bool DeadPHICycle(PHINode *PN,$/;"	f	file:
DeadSplitInsts	Transforms/Scalar/SROA.cpp	/^  SmallPtrSet<Instruction *, 4> DeadSplitInsts;$/;"	m	class:__anon559::SROA	file:
DeadUsers	Transforms/Scalar/SROA.cpp	/^  SmallVector<Instruction *, 8> DeadUsers;$/;"	m	class:__anon557::AllocaPartitioning	file:
Deallocate	ExecutionEngine/JIT/JITMemoryManager.cpp	/^void JITSlabAllocator::Deallocate(MemSlab *Slab) {$/;"	f	class:JITSlabAllocator
Deallocate	Support/Allocator.cpp	/^void MallocSlabAllocator::Deallocate(MemSlab *Slab) {$/;"	f	class:llvm::MallocSlabAllocator
DeallocateNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::DeallocateNode(SDNode *N) {$/;"	f	class:SelectionDAG
DeallocateSlabs	Support/Allocator.cpp	/^void BumpPtrAllocator::DeallocateSlabs(MemSlab *Slab) {$/;"	f	class:llvm::BumpPtrAllocator
DebugFrames	CodeGen/AsmPrinter/DwarfDebug.h	/^  std::vector<FunctionDebugFrameInfo> DebugFrames;$/;"	m	class:llvm::DwarfDebug
DebugOnlyOpt	Support/Debug.cpp	/^struct DebugOnlyOpt {$/;"	s	namespace:__anon253	file:
DebugOnlyOptLoc	Support/Debug.cpp	/^static DebugOnlyOpt DebugOnlyOptLoc;$/;"	v	file:
DebugRangeSymbols	CodeGen/AsmPrinter/DwarfDebug.h	/^  SmallVector<const MCSymbol *, 8> DebugRangeSymbols;$/;"	m	class:llvm::DwarfDebug
DebugRecVH	VMCore/LLVMContextImpl.h	/^  DebugRecVH(MDNode *n, LLVMContextImpl *ctx, int idx)$/;"	f	class:llvm::DebugRecVH
DebugRecVH	VMCore/LLVMContextImpl.h	/^class DebugRecVH : public CallbackVH {$/;"	c	namespace:llvm
DebugType	CodeGen/ScoreboardHazardRecognizer.cpp	/^const char *ScoreboardHazardRecognizer::DebugType = "";$/;"	m	class:ScoreboardHazardRecognizer	file:
DebugVars	CodeGen/RegAllocGreedy.cpp	/^  LiveDebugVariables *DebugVars;$/;"	m	class:__anon158::RAGreedy	file:
DecimalSignString	Support/Dwarf.cpp	/^const char *llvm::dwarf::DecimalSignString(unsigned Sign) {$/;"	f	class:llvm::dwarf
DeclareParam	Target/NVPTX/NVPTXISelLowering.h	/^  DeclareParam,$/;"	e	enum:llvm::NVPTXISD::NodeType
DeclareRet	Target/NVPTX/NVPTXISelLowering.h	/^  DeclareRet,$/;"	e	enum:llvm::NVPTXISD::NodeType
DeclareRetParam	Target/NVPTX/NVPTXISelLowering.h	/^  DeclareRetParam,$/;"	e	enum:llvm::NVPTXISD::NodeType
DeclareScalarParam	Target/NVPTX/NVPTXISelLowering.h	/^  DeclareScalarParam,$/;"	e	enum:llvm::NVPTXISD::NodeType
DeclareScalarRet	Target/NVPTX/NVPTXISelLowering.h	/^  DeclareScalarRet,$/;"	e	enum:llvm::NVPTXISD::NodeType
Decls	DebugInfo/DWARFDebugAbbrev.h	/^  std::vector<DWARFAbbreviationDeclaration> Decls;$/;"	m	class:llvm::DWARFAbbreviationDeclarationSet
DecodeACRegsRegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeACRegsRegisterClass(MCInst &Inst,$/;"	f	file:
DecodeAFGR64RegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeAFGR64RegisterClass(MCInst &Inst,$/;"	f	file:
DecodeAddrMode2IdxInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeAddrMode2IdxInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeAddrMode3Instruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeAddrMode3Instruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeAddrMode5Operand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeAddrMode5Operand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeAddrMode6Operand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeAddrMode6Operand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeAddrMode7Operand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeAddrMode7Operand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeAddrModeImm12Operand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeAddrModeImm12Operand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeArmMOVTWInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeArmMOVTWInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeBC1	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeBC1(MCInst &Inst,$/;"	f	file:
DecodeBitfieldMaskOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeBitfieldMaskOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeBranchImmInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeBranchImmInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeBranchTarget	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeBranchTarget(MCInst &Inst,$/;"	f	file:
DecodeCCOutOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeCCOutOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeCCRRegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeCCRRegisterClass(MCInst &Inst,$/;"	f	file:
DecodeCPSInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeCPSInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeCPU64RegsRegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeCPU64RegsRegisterClass(MCInst &Inst,$/;"	f	file:
DecodeCPURegsRegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeCPURegsRegisterClass(MCInst &Inst,$/;"	f	file:
DecodeCondCode	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeCondCode(MCInst &Inst,$/;"	f	file:
DecodeCopMemInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeCopMemInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeCoprocessor	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeCoprocessor(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeDPRRegListOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeDPRRegListOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeDPRRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeDPRRegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodeDPR_8RegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeDPR_8RegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodeDPR_VFP2RegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeDPR_VFP2RegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodeDPairRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeDPairRegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodeDPairSpacedRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeDPairSpacedRegisterClass(MCInst &Inst,$/;"	f	file:
DecodeDSPRegsRegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeDSPRegsRegisterClass(MCInst &Inst,$/;"	f	file:
DecodeDWARFEncoding	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^static const char *DecodeDWARFEncoding(unsigned Encoding) {$/;"	f	file:
DecodeDoubleRegLoad	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeDoubleRegLoad(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeDoubleRegStore	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeDoubleRegStore(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeExtSize	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeExtSize(MCInst &Inst,$/;"	f	file:
DecodeFGR32RegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeFGR32RegisterClass(MCInst &Inst,$/;"	f	file:
DecodeFGR64RegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeFGR64RegisterClass(MCInst &Inst,$/;"	f	file:
DecodeFMem	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeFMem(MCInst &Inst,$/;"	f	file:
DecodeFixedType	VMCore/Function.cpp	/^static Type *DecodeFixedType(ArrayRef<Intrinsic::IITDescriptor> &Infos,$/;"	f	file:
DecodeGPRRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeGPRRegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodeGPRnopcRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeGPRnopcRegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodeHWRegs64RegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeHWRegs64RegisterClass(MCInst &Inst,$/;"	f	file:
DecodeHWRegsRegisterClass	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeHWRegsRegisterClass(MCInst &Inst,$/;"	f	file:
DecodeIITType	VMCore/Function.cpp	/^static void DecodeIITType(unsigned &NextElt, ArrayRef<unsigned char> Infos,$/;"	f	file:
DecodeINSERTPSMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodeINSERTPSMask(unsigned Imm, SmallVectorImpl<int> &ShuffleMask) {$/;"	f	namespace:llvm
DecodeIT	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeIT(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeInsSize	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeInsSize(MCInst &Inst,$/;"	f	file:
DecodeJumpTarget	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeJumpTarget(MCInst &Inst,$/;"	f	file:
DecodeLDR	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeLDR(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeLDRPreImm	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeLDRPreImm(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeLDRPreReg	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeLDRPreReg(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeMOVHLPSMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodeMOVHLPSMask(unsigned NElts, SmallVectorImpl<int> &ShuffleMask) {$/;"	f	namespace:llvm
DecodeMOVLHPSMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodeMOVLHPSMask(unsigned NElts, SmallVectorImpl<int> &ShuffleMask) {$/;"	f	namespace:llvm
DecodeMRRC2	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeMRRC2(llvm::MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeMSRMask	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeMSRMask(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeMem	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeMem(MCInst &Inst,$/;"	f	file:
DecodeMemBarrierOption	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeMemBarrierOption(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeMemMultipleWritebackInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeMemMultipleWritebackInstruction(MCInst &Inst,$/;"	f	file:
DecodeNEONModImmInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeNEONModImmInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodePSHUFHWMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodePSHUFHWMask(MVT VT, unsigned Imm,$/;"	f	namespace:llvm
DecodePSHUFLWMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodePSHUFLWMask(MVT VT, unsigned Imm,$/;"	f	namespace:llvm
DecodePSHUFMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodePSHUFMask(MVT VT, unsigned Imm, SmallVectorImpl<int> &ShuffleMask) {$/;"	f	namespace:llvm
DecodePostIdxReg	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodePostIdxReg(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodePredicateOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodePredicateOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeQPRRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeQPRRegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodeRFEInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeRFEInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeRegListOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeRegListOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeSHUFPMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodeSHUFPMask(MVT VT, unsigned Imm, SmallVectorImpl<int> &ShuffleMask) {$/;"	f	namespace:llvm
DecodeSMLAInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSMLAInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeSOImmOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSOImmOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeSORegImmOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSORegImmOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeSORegMemOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSORegMemOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeSORegRegOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSORegRegOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeSPRRegListOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSPRRegListOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeSPRRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSPRRegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodeSTRPreImm	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSTRPreImm(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeSTRPreReg	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSTRPreReg(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeShiftRight16Imm	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeShiftRight16Imm(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeShiftRight32Imm	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeShiftRight32Imm(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeShiftRight64Imm	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeShiftRight64Imm(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeShiftRight8Imm	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeShiftRight8Imm(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeSimm16	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus DecodeSimm16(MCInst &Inst,$/;"	f	file:
DecodeStatus	Target/ARM/Disassembler/ARMDisassembler.cpp	/^typedef MCDisassembler::DecodeStatus DecodeStatus;$/;"	t	file:
DecodeStatus	Target/Mips/Disassembler/MipsDisassembler.cpp	/^typedef MCDisassembler::DecodeStatus DecodeStatus;$/;"	t	file:
DecodeSwap	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeSwap(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeT2AddrModeImm0_1020s4	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2AddrModeImm0_1020s4(MCInst &Inst,unsigned Val,$/;"	f	file:
DecodeT2AddrModeImm12	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2AddrModeImm12(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeT2AddrModeImm8	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2AddrModeImm8(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeT2AddrModeImm8s4	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2AddrModeImm8s4(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeT2AddrModeSOReg	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2AddrModeSOReg(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeT2Adr	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2Adr(MCInst &Inst, uint32_t Insn,$/;"	f	file:
DecodeT2BInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeT2BInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeT2BROperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2BROperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeT2CPSInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2CPSInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeT2Imm8	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2Imm8(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeT2Imm8S4	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2Imm8S4(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeT2LDRDPreInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeT2LDRDPreInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeT2LdStPre	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2LdStPre(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeT2LoadShift	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2LoadShift(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeT2MOVTWInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2MOVTWInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeT2SOImm	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2SOImm(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeT2STRDPreInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeT2STRDPreInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeT2ShifterImmOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeT2ShifterImmOperand(MCInst &Inst, uint32_t Val,$/;"	f	file:
DecodeTBLInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeTBLInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeThumb2BCCInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeThumb2BCCInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeThumbAddSPImm	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbAddSPImm(MCInst &Inst, uint16_t Insn,$/;"	f	file:
DecodeThumbAddSPReg	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbAddSPReg(MCInst &Inst, uint16_t Insn,$/;"	f	file:
DecodeThumbAddSpecialReg	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbAddSpecialReg(MCInst &Inst, uint16_t Insn,$/;"	f	file:
DecodeThumbAddrModeIS	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbAddrModeIS(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeThumbAddrModePC	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbAddrModePC(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeThumbAddrModeRR	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbAddrModeRR(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeThumbAddrModeSP	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbAddrModeSP(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeThumbBCCTargetOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeThumbBCCTargetOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeThumbBLTargetOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbBLTargetOperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeThumbBLXOffset	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbBLXOffset(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeThumbBROperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbBROperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeThumbCPS	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbCPS(MCInst &Inst, uint16_t Insn,$/;"	f	file:
DecodeThumbCmpBROperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeThumbCmpBROperand(MCInst &Inst, unsigned Val,$/;"	f	file:
DecodeThumbTableBranch	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeThumbTableBranch(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeUNPCKHMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodeUNPCKHMask(MVT VT, SmallVectorImpl<int> &ShuffleMask) {$/;"	f	namespace:llvm
DecodeUNPCKLMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodeUNPCKLMask(MVT VT, SmallVectorImpl<int> &ShuffleMask) {$/;"	f	namespace:llvm
DecodeVCVTD	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVCVTD(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVCVTQ	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVCVTQ(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVLD1DupInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVLD1DupInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVLD1LN	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVLD1LN(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVLD2DupInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVLD2DupInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVLD2LN	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVLD2LN(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVLD3DupInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVLD3DupInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVLD3LN	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVLD3LN(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVLD4DupInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVLD4DupInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVLD4LN	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVLD4LN(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVLDInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVLDInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVMOVRRS	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVMOVRRS(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVMOVSRR	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVMOVSRR(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVPERM2X128Mask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodeVPERM2X128Mask(MVT VT, unsigned Imm,$/;"	f	namespace:llvm
DecodeVPERMMask	Target/X86/Utils/X86ShuffleDecode.cpp	/^void DecodeVPERMMask(unsigned Imm, SmallVectorImpl<int> &ShuffleMask) {$/;"	f	namespace:llvm
DecodeVSHLMaxInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVSHLMaxInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVST1LN	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVST1LN(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVST2LN	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVST2LN(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVST3LN	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVST3LN(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVST4LN	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVST4LN(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecodeVSTInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodeVSTInstruction(MCInst &Inst, unsigned Insn,$/;"	f	file:
DecoderGPRRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecoderGPRRegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodetGPRRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodetGPRRegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecodetcGPRRegisterClass	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static DecodeStatus DecodetcGPRRegisterClass(MCInst &Inst, unsigned RegNo,$/;"	f	file:
DecomposeGEPExpression	Analysis/BasicAliasAnalysis.cpp	/^DecomposeGEPExpression(const Value *V, int64_t &BaseOffs,$/;"	f	file:
DecomposeSimpleLinearExpr	Transforms/InstCombine/InstCombineCasts.cpp	/^static Value *DecomposeSimpleLinearExpr(Value *Val, unsigned &Scale,$/;"	f	file:
Def	Analysis/MemDepPrinter.cpp	/^      Def,$/;"	e	enum:__anon33::MemDepPrinter::DepType	file:
Def	CodeGen/ExecutionDepsFix.cpp	/^  int Def;$/;"	m	struct:__anon119::LiveReg	file:
Def	CodeGen/MachineLICM.cpp	/^      unsigned      Def;$/;"	m	struct:__anon156::MachineLICM::CandidateInfo	file:
Def	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
DefByOrigPHI	CodeGen/InlineSpiller.cpp	/^    bool DefByOrigPHI;$/;"	m	struct:__anon155::InlineSpiller::SibValueInfo	file:
DefIdx	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^      unsigned DefIdx;$/;"	m	class:llvm::ScheduleDAGSDNodes::RegDefIter
DefIndices	CodeGen/AggressiveAntiDepBreaker.h	/^    std::vector<unsigned> DefIndices;$/;"	m	class:llvm::AggressiveAntiDepState
DefIndices	CodeGen/CriticalAntiDepBreaker.h	/^    std::vector<unsigned> DefIndices;$/;"	m	class:llvm::CriticalAntiDepBreaker
DefMI	CodeGen/InlineSpiller.cpp	/^    MachineInstr *DefMI;$/;"	m	struct:__anon155::InlineSpiller::SibValueInfo	file:
DefMI	CodeGen/MachineTraceMetrics.cpp	/^  const MachineInstr *DefMI;$/;"	m	struct:__anon133::DataDep	file:
DefOp	CodeGen/MachineTraceMetrics.cpp	/^  unsigned DefOp;$/;"	m	struct:__anon133::DataDep	file:
Default	CodeGen/AsmPrinter/DwarfDebug.cpp	/^    Default, Enable, Disable$/;"	e	enum:__anon62::DefaultOnOff	file:
Default	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *Default;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestBlock
Default	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *Default;$/;"	m	struct:llvm::SelectionDAGBuilder::JumpTable
DefaultCodeSlabSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    static const size_t DefaultCodeSlabSize;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
DefaultCodeSlabSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^const size_t DefaultJITMemoryManager::DefaultCodeSlabSize = 512 * 1024;$/;"	m	class:DefaultJITMemoryManager	file:
DefaultEABIVersion	Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp	/^    enum { DefaultEABIVersion = 0x05000000U };$/;"	e	enum:__anon286::ARMELFObjectWriter::__anon287	file:
DefaultIsStmt	DebugInfo/DWARFDebugLine.h	/^    uint8_t DefaultIsStmt;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
DefaultJITMemoryManager	ExecutionEngine/JIT/JITMemoryManager.cpp	/^  class DefaultJITMemoryManager : public JITMemoryManager {$/;"	c	namespace:__anon190	file:
DefaultJITMemoryManager	ExecutionEngine/JIT/JITMemoryManager.cpp	/^DefaultJITMemoryManager::DefaultJITMemoryManager()$/;"	f	class:DefaultJITMemoryManager
DefaultOnOff	CodeGen/AsmPrinter/DwarfDebug.cpp	/^  enum DefaultOnOff {$/;"	g	namespace:__anon62	file:
DefaultSizeThreshold	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    static const size_t DefaultSizeThreshold;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
DefaultSizeThreshold	ExecutionEngine/JIT/JITMemoryManager.cpp	/^const size_t DefaultJITMemoryManager::DefaultSizeThreshold = 16 * 1024;$/;"	m	class:DefaultJITMemoryManager	file:
DefaultSlabAllocator	Support/Allocator.cpp	/^MallocSlabAllocator BumpPtrAllocator::DefaultSlabAllocator =$/;"	m	class:llvm::BumpPtrAllocator	file:
DefaultSlabSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    static const size_t DefaultSlabSize;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
DefaultSlabSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^const size_t DefaultJITMemoryManager::DefaultSlabSize = 64 * 1024;$/;"	m	class:DefaultJITMemoryManager	file:
DefaultTimerGroup	Support/Timer.cpp	/^static TimerGroup *DefaultTimerGroup = 0;$/;"	v	file:
DefaultVLIWScheduler	CodeGen/DFAPacketizer.cpp	/^DefaultVLIWScheduler::DefaultVLIWScheduler($/;"	f	class:DefaultVLIWScheduler
DefaultVLIWScheduler	CodeGen/DFAPacketizer.cpp	/^class DefaultVLIWScheduler : public ScheduleDAGInstrs {$/;"	c	namespace:llvm	file:
Deferred	Transforms/IPO/MergeFunctions.cpp	/^  std::vector<WeakVH> Deferred;$/;"	m	class:__anon598::MergeFunctions	file:
DeferredFunctionInfo	Bitcode/Reader/BitcodeReader.h	/^  DenseMap<Function*, uint64_t> DeferredFunctionInfo;$/;"	m	class:llvm::BitcodeReader
DefineBB	AsmParser/LLParser.cpp	/^BasicBlock *LLParser::PerFunctionState::DefineBB(const std::string &Name,$/;"	f	class:LLParser::PerFunctionState
DefineSection	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::DefineSection(MCSectionData const &SectionData) {$/;"	f	class:WinCOFFObjectWriter
DefineSymbol	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::DefineSymbol(MCSymbolData const &SymbolData,$/;"	f	class:WinCOFFObjectWriter
DefinedTypes	Target/CppBackend/CPPBackend.cpp	/^    TypeSet DefinedTypes;$/;"	m	class:__anon412::CppWriter	file:
DefinedValues	Target/CppBackend/CPPBackend.cpp	/^    ValueSet DefinedValues;$/;"	m	class:__anon412::CppWriter	file:
DefinesOptionalPredicate	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::DefinesOptionalPredicate(MachineInstr *MI, bool *CPSR) {$/;"	f	class:ARMFastISel
DefinesPredicate	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::DefinesPredicate(MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
DefinesPredicate	Target/Hexagon/HexagonInstrInfo.cpp	/^HexagonInstrInfo::DefinesPredicate(MachineInstr *MI,$/;"	f	class:HexagonInstrInfo
DefiningBlocks	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    SmallVector<BasicBlock*, 32> DefiningBlocks;$/;"	m	struct:__anon469::AllocaInfo	file:
Definition	Transforms/IPO/FunctionAttrs.cpp	/^    Argument *Definition;$/;"	m	struct:__anon579::ArgumentGraphNode	file:
Defm	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
Defs	CodeGen/RegisterPressure.cpp	/^  SmallVector<unsigned, 8> Defs;$/;"	m	struct:RegisterOperands	file:
DelayForLiveRegsBottomUp	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^bool ScheduleDAGFast::DelayForLiveRegsBottomUp(SUnit *SU,$/;"	f	class:ScheduleDAGFast
DelayForLiveRegsBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^DelayForLiveRegsBottomUp(SUnit *SU, SmallVector<unsigned, 4> &LRegs) {$/;"	f	class:ScheduleDAGRRList
DelaySlot	Target/Sparc/SparcInstrInfo.h	/^    DelaySlot = (1<<3)$/;"	e	enum:llvm::SPII::__anon445
DeleteBaseReg	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Formula::DeleteBaseReg(const SCEV *&S) {$/;"	f	class:Formula
DeleteBasicBlock	Transforms/IPO/PruneEH.cpp	/^void PruneEH::DeleteBasicBlock(BasicBlock *BB) {$/;"	f	class:PruneEH
DeleteDeadBlock	Transforms/Utils/BasicBlockUtils.cpp	/^void llvm::DeleteDeadBlock(BasicBlock *BB) {$/;"	f	class:llvm
DeleteDeadInstruction	Transforms/Scalar/DeadStoreElimination.cpp	/^static void DeleteDeadInstruction(Instruction *I,$/;"	f	file:
DeleteDeadInstructions	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::DeleteDeadInstructions() {$/;"	f	class:SROA
DeleteDeadPHIs	Transforms/Utils/BasicBlockUtils.cpp	/^bool llvm::DeleteDeadPHIs(BasicBlock *BB, const TargetLibraryInfo *TLI) {$/;"	f	class:llvm
DeleteDeadVarargs	Transforms/IPO/DeadArgumentElimination.cpp	/^bool DAE::DeleteDeadVarargs(Function &Fn) {$/;"	f	class:DAE
DeleteFormula	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRUse::DeleteFormula(Formula &F) {$/;"	f	class:LSRUse
DeleteInstructionInBlock	Transforms/Scalar/SCCP.cpp	/^static void DeleteInstructionInBlock(BasicBlock *BB) {$/;"	f	file:
DeleteMachineBasicBlock	CodeGen/MachineFunction.cpp	/^MachineFunction::DeleteMachineBasicBlock(MachineBasicBlock *MBB) {$/;"	f	class:MachineFunction
DeleteMachineInstr	CodeGen/MachineFunction.cpp	/^MachineFunction::DeleteMachineInstr(MachineInstr *MI) {$/;"	f	class:MachineFunction
DeleteNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::DeleteNode(SDNode *N) {$/;"	f	class:SelectionDAG
DeleteNodeNotInCSEMaps	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::DeleteNodeNotInCSEMaps(SDNode *N) {$/;"	f	class:SelectionDAG
DeleteStream	VMCore/PrintModulePass.cpp	/^    bool DeleteStream;      \/\/ Delete the ostream in our dtor?$/;"	m	class:__anon619::PrintFunctionPass	file:
DeleteStream	VMCore/PrintModulePass.cpp	/^    bool DeleteStream;      \/\/ Delete the ostream in our dtor?$/;"	m	class:__anon619::PrintModulePass	file:
DeleteTriviallyDeadInstructions	Transforms/Scalar/LoopStrengthReduce.cpp	/^DeleteTriviallyDeadInstructions(SmallVectorImpl<WeakVH> &DeadInsts) {$/;"	f	file:
DeleteUse	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::DeleteUse(LSRUse &LU, size_t LUIdx) {$/;"	f	class:LSRInstance
DeletedAddrLabelsNeedingEmission	CodeGen/MachineModuleInfo.cpp	/^    DeletedAddrLabelsNeedingEmission;$/;"	m	class:llvm::MMIAddrLabelMap	file:
Deleter	CodeGen/GCMetadata.cpp	/^  class Deleter : public FunctionPass {$/;"	c	namespace:__anon160	file:
Deleter	CodeGen/GCMetadata.cpp	/^Deleter::Deleter() : FunctionPass(ID) {}$/;"	f	class:Deleter
Delta	Support/DeltaAlgorithm.cpp	/^DeltaAlgorithm::Delta(const changeset_ty &Changes,$/;"	f	class:DeltaAlgorithm
DeltaActiveSetHelper	Support/DAGDeltaAlgorithm.cpp	/^  DeltaActiveSetHelper(DAGDeltaAlgorithmImpl &_DDAI,$/;"	f	class:__anon233::DeltaActiveSetHelper
DeltaActiveSetHelper	Support/DAGDeltaAlgorithm.cpp	/^class DeltaActiveSetHelper : public DeltaAlgorithm {$/;"	c	namespace:__anon233	file:
DemandedBitsLHSMask	Transforms/InstCombine/InstCombineCompares.cpp	/^static APInt DemandedBitsLHSMask(ICmpInst &I,$/;"	f	file:
Dematerialize	Bitcode/Reader/BitcodeReader.cpp	/^void BitcodeReader::Dematerialize(GlobalValue *GV) {$/;"	f	class:BitcodeReader
Dematerialize	VMCore/Globals.cpp	/^void GlobalValue::Dematerialize() {$/;"	f	class:GlobalValue
Dematerialize	VMCore/Module.cpp	/^void Module::Dematerialize(GlobalValue *GV) {$/;"	f	class:Module
DemotePHIToStack	Transforms/Utils/DemoteRegToStack.cpp	/^AllocaInst *llvm::DemotePHIToStack(PHINode *P, Instruction *AllocaPoint) {$/;"	f	class:llvm
DemoteRegToStack	Transforms/Utils/DemoteRegToStack.cpp	/^AllocaInst *llvm::DemoteRegToStack(Instruction &I, bool VolatileLoads,$/;"	f	class:llvm
DemoteRegisterToMemoryID	Transforms/Scalar/Reg2Mem.cpp	/^char &llvm::DemoteRegisterToMemoryID = RegToMem::ID;$/;"	m	class:llvm	file:
DemoteToDotOld	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::DemoteToDotOld(MachineInstr* MI) {$/;"	f	class:HexagonPacketizerList
DenseMapAPFloatKeyInfo	VMCore/LLVMContextImpl.h	/^struct DenseMapAPFloatKeyInfo {$/;"	s	namespace:llvm
DenseMapAPIntKeyInfo	VMCore/LLVMContextImpl.h	/^struct DenseMapAPIntKeyInfo {$/;"	s	namespace:llvm
DenseMapInfo	MC/MCDwarf.cpp	/^  struct DenseMapInfo<CIEKey> {$/;"	s	namespace:llvm	file:
DenseMapInfo	TableGen/Record.cpp	/^template<> struct DenseMapInfo<TableGenStringKey> {$/;"	s	namespace:llvm	file:
DenseMapInfo	Transforms/IPO/MergeFunctions.cpp	/^  struct DenseMapInfo<ComparableFunction> {$/;"	s	namespace:llvm	file:
DenseMapInfo	Transforms/InstCombine/InstCombinePHI.cpp	/^  struct DenseMapInfo<LoweredPHIRecord> {$/;"	s	namespace:llvm	file:
DenseMapInfo	Transforms/Scalar/EarlyCSE.cpp	/^  template<> struct DenseMapInfo<CallValue> {$/;"	s	namespace:llvm	file:
DenseMapInfo	Transforms/Scalar/EarlyCSE.cpp	/^template<> struct DenseMapInfo<SimpleValue> {$/;"	s	namespace:llvm	file:
DenseMapInfo	Transforms/Scalar/GVN.cpp	/^template <> struct DenseMapInfo<Expression> {$/;"	s	namespace:llvm	file:
DenseMapInfo	Transforms/Utils/BypassSlowDivision.cpp	/^  struct DenseMapInfo<DivOpInfo> {$/;"	s	namespace:llvm	file:
DenseMapInfo	Transforms/Utils/PromoteMemoryToRegister.cpp	/^struct DenseMapInfo<std::pair<BasicBlock*, unsigned> > {$/;"	s	namespace:llvm	file:
Dep	Analysis/MemDepPrinter.cpp	/^    typedef std::pair<InstTypePair, const BasicBlock *> Dep;$/;"	t	struct:__anon33::MemDepPrinter	file:
DepSet	Analysis/MemDepPrinter.cpp	/^    typedef SmallSetVector<Dep, 4> DepSet;$/;"	t	struct:__anon33::MemDepPrinter	file:
DepSetMap	Analysis/MemDepPrinter.cpp	/^    typedef DenseMap<const Instruction *, DepSet> DepSetMap;$/;"	t	struct:__anon33::MemDepPrinter	file:
DepType	Analysis/MemDepPrinter.cpp	/^    enum DepType {$/;"	g	struct:__anon33::MemDepPrinter	file:
DepTypeStr	Analysis/MemDepPrinter.cpp	/^    static const char *const DepTypeStr[];$/;"	m	struct:__anon33::MemDepPrinter	file:
DepTypeStr	Analysis/MemDepPrinter.cpp	/^const char *const MemDepPrinter::DepTypeStr[]$/;"	m	class:MemDepPrinter	file:
Dependence	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^    bool Dependence;$/;"	m	class:__anon403::HexagonPacketizerList	file:
DependenceKind	Transforms/Scalar/ObjCARC.cpp	/^  enum DependenceKind {$/;"	g	namespace:__anon509	file:
Dependencies	Support/DAGDeltaAlgorithm.cpp	/^  const std::vector<edge_ty> &Dependencies;$/;"	m	class:__anon233::DAGDeltaAlgorithmImpl	file:
Dependencies	TableGen/TGLexer.h	/^  std::vector<std::string> Dependencies;$/;"	m	class:llvm::TGLexer
Depends	Transforms/Scalar/ObjCARC.cpp	/^Depends(DependenceKind Flavor, Instruction *Inst, const Value *Arg,$/;"	f	file:
Deps	Analysis/MemDepPrinter.cpp	/^    DepSetMap Deps;$/;"	m	struct:__anon33::MemDepPrinter	file:
Deps	CodeGen/InlineSpiller.cpp	/^    TinyPtrVector<VNInfo*> Deps;$/;"	m	struct:__anon155::InlineSpiller::SibValueInfo	file:
Depth	CodeGen/MachineTraceMetrics.h	/^    unsigned Depth;$/;"	m	struct:llvm::MachineTraceMetrics::InstrCycles
DepthMBBCompare	CodeGen/RegisterCoalescer.cpp	/^  struct DepthMBBCompare {$/;"	s	namespace:__anon116	file:
DepthMBBPair	CodeGen/RegisterCoalescer.cpp	/^    typedef std::pair<unsigned, MachineBasicBlock*> DepthMBBPair;$/;"	t	struct:__anon116::DepthMBBCompare	file:
DeregisterAllTables	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::DeregisterAllTables() {$/;"	f	class:ExecutionEngine
DescKind	CodeGen/GCMetadata.cpp	/^static const char *DescKind(GC::PointKind Kind) {$/;"	f	file:
Descriptor	DebugInfo/DWARFDebugArangeSet.h	/^  struct Descriptor {$/;"	s	class:llvm::DWARFDebugArangeSet
DescriptorColl	DebugInfo/DWARFDebugArangeSet.h	/^  typedef std::vector<Descriptor> DescriptorColl;$/;"	t	class:llvm::DWARFDebugArangeSet
DescriptorConstIter	DebugInfo/DWARFDebugArangeSet.h	/^  typedef DescriptorColl::const_iterator DescriptorConstIter;$/;"	t	class:llvm::DWARFDebugArangeSet
DescriptorContainsAddress	DebugInfo/DWARFDebugArangeSet.cpp	/^    DescriptorContainsAddress(uint64_t address) : Address(address) {}$/;"	f	class:__anon171::DescriptorContainsAddress
DescriptorContainsAddress	DebugInfo/DWARFDebugArangeSet.cpp	/^  class DescriptorContainsAddress {$/;"	c	namespace:__anon171	file:
DescriptorIter	DebugInfo/DWARFDebugArangeSet.h	/^  typedef DescriptorColl::iterator DescriptorIter;$/;"	t	class:llvm::DWARFDebugArangeSet
Dest	Transforms/Utils/SimplifyCFG.cpp	/^    BasicBlock *Dest;$/;"	m	struct:__anon478::ValueEqualityComparisonCase	file:
DestBegin	Transforms/Scalar/SROA.cpp	/^    uint64_t DestBegin, DestEnd;$/;"	m	struct:__anon557::AllocaPartitioning::MemTransferOffsets	file:
DestCopyMap	CodeGen/StrongPHIElimination.cpp	/^    typedef DenseMap<unsigned, MachineInstr*> DestCopyMap;$/;"	t	class:__anon154::StrongPHIElimination	file:
DestEnd	Transforms/Scalar/SROA.cpp	/^    uint64_t DestBegin, DestEnd;$/;"	m	struct:__anon557::AllocaPartitioning::MemTransferOffsets	file:
DestList	CodeGen/MachineCopyPropagation.cpp	/^    typedef SmallVector<unsigned, 4> DestList;$/;"	t	class:__anon93::MachineCopyPropagation	file:
DetailedBlockInfo	Analysis/ProfileVerifierPass.cpp	/^    struct DetailedBlockInfo {$/;"	s	class:__anon36::ProfileVerifierPassT	file:
Details	CodeGen/ShrinkWrapping.cpp	/^  None, BasicInfo, Iterations, Details$/;"	e	enum:ShrinkWrapDebugLevel	file:
Details	VMCore/PassManager.cpp	/^  None, Arguments, Structure, Executions, Details$/;"	e	enum:llvm::PassDebugLevel	file:
DetectFamilyModel	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^void X86_MC::DetectFamilyModel(unsigned EAX, unsigned &Family,$/;"	f	class:X86_MC
DetectX86FamilyModel	Support/Host.cpp	/^static void DetectX86FamilyModel(unsigned EAX, unsigned &Family,$/;"	f	file:
DetermineEntrySize	MC/MCSectionELF.cpp	/^unsigned MCSectionELF::DetermineEntrySize(SectionKind Kind) {$/;"	f	class:MCSectionELF
DetermineInsertionPoint	Transforms/Utils/PromoteMemoryToRegister.cpp	/^void PromoteMem2Reg::DetermineInsertionPoint(AllocaInst *AI, unsigned AllocaNum,$/;"	f	class:PromoteMem2Reg
DetermineREXPrefix	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^static unsigned DetermineREXPrefix(const MCInst &MI, uint64_t TSFlags,$/;"	f	file:
DiagContext	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^    void *DiagContext;$/;"	m	struct:__anon66::SrcMgrDiagInfo	file:
DiagHandler	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^    LLVMContext::InlineAsmDiagHandlerTy DiagHandler;$/;"	m	struct:__anon66::SrcMgrDiagInfo	file:
DiagHandler	MC/MCParser/AsmParser.cpp	/^void AsmParser::DiagHandler(const SMDiagnostic &Diag, void *Context) {$/;"	f	class:AsmParser
DidRepairRange	CodeGen/SplitKit.h	/^  bool DidRepairRange;$/;"	m	class:llvm::SplitAnalysis
Die	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    DIE *Die; \/\/ Offsets$/;"	m	struct:llvm::DwarfAccelTable::HashDataContents
DieArray	DebugInfo/DWARFCompileUnit.h	/^  std::vector<DWARFDebugInfoEntryMinimal> DieArray;$/;"	m	class:llvm::DWARFCompileUnit
DiffFilesWithTolerance	Support/FileUtilities.cpp	/^int llvm::DiffFilesWithTolerance(const sys::PathWithStatus &FileA,$/;"	f	class:llvm
DirIdx	DebugInfo/DWARFDebugLine.h	/^    uint64_t DirIdx;$/;"	m	struct:llvm::DWARFDebugLine::FileNameEntry
DirectiveMap	MC/MCParser/AsmParser.cpp	/^  StringMap<std::pair<MCAsmParserExtension*, DirectiveHandler> > DirectiveMap;$/;"	m	class:__anon211::AsmParser	file:
Dirty	CodeGen/RegAllocFast.cpp	/^      bool Dirty;               \/\/ Register needs spill.$/;"	m	struct:__anon140::RAFast::LiveReg	file:
DisAsm	MC/MCDisassembler/Disassembler.h	/^  llvm::OwningPtr<const llvm::MCDisassembler> DisAsm;$/;"	m	class:llvm::LLVMDisasmContext
DisInfo	MC/MCDisassembler/Disassembler.h	/^  void *DisInfo;$/;"	m	class:llvm::LLVMDisasmContext
Disable	CodeGen/AsmPrinter/DwarfDebug.cpp	/^    Default, Enable, Disable$/;"	e	enum:__anon62::DefaultOnOff	file:
Disable	Support/CrashRecoveryContext.cpp	/^void CrashRecoveryContext::Disable() {$/;"	f	class:CrashRecoveryContext
DisableAssertions	Analysis/ProfileVerifierPass.cpp	/^    bool DisableAssertions;$/;"	m	class:__anon36::ProfileVerifierPassT	file:
DisableFramePointerElim	CodeGen/TargetOptionsImpl.cpp	/^bool TargetOptions::DisableFramePointerElim(const MachineFunction &MF) const {$/;"	f	class:TargetOptions
DisablePrettyStackTrace	Support/PrettyStackTrace.cpp	/^  bool DisablePrettyStackTrace = false;$/;"	m	namespace:llvm	file:
DisasmMemoryObject	MC/MCDisassembler/Disassembler.cpp	/^  DisasmMemoryObject(uint8_t *bytes, uint64_t size, uint64_t basePC) :$/;"	f	class:__anon207::DisasmMemoryObject
DisasmMemoryObject	MC/MCDisassembler/Disassembler.cpp	/^class DisasmMemoryObject : public MemoryObject {$/;"	c	namespace:__anon207	file:
Disassembler	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<const llvm::MCDisassembler> Disassembler;$/;"	m	struct:llvm::EDDisassembler
Disassembler	MC/MCDisassembler/EDInst.h	/^  EDDisassembler &Disassembler;$/;"	m	struct:llvm::EDInst
Disassembler	MC/MCDisassembler/EDOperand.h	/^  const EDDisassembler &Disassembler;$/;"	m	struct:llvm::EDOperand
Disassembler	MC/MCDisassembler/EDToken.h	/^  EDDisassembler &Disassembler;$/;"	m	struct:llvm::EDToken
DisassemblerMap_t	MC/MCDisassembler/EDDisassembler.h	/^  typedef std::map<CPUKey, EDDisassembler*> DisassemblerMap_t;$/;"	t	struct:llvm::EDDisassembler
DisassemblerMode	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^} DisassemblerMode;$/;"	t	typeref:enum:__anon369
DiscriminantString	Support/Dwarf.cpp	/^const char *llvm::dwarf::DiscriminantString(unsigned Discriminant) {$/;"	f	class:llvm::dwarf
DisintegrateMERGE_VALUES	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDValue DAGTypeLegalizer::DisintegrateMERGE_VALUES(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
Disp	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    int16_t Disp;$/;"	m	struct:__anon392::MSP430ISelAddressMode	file:
Disp	Target/X86/AsmParser/X86AsmParser.cpp	/^      const MCExpr *Disp;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon341	file:
Disp	Target/X86/X86ISelDAGToDAG.cpp	/^    int32_t Disp;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
Disp	Target/X86/X86InstrBuilder.h	/^  int Disp;$/;"	m	struct:llvm::X86AddressMode
DisplayGraph	Support/GraphWriter.cpp	/^void llvm::DisplayGraph(const sys::Path &Filename, bool wait,$/;"	f	class:llvm
DistanceMap	CodeGen/TwoAddressInstructionPass.cpp	/^    DenseMap<MachineInstr*, unsigned> DistanceMap;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
Distribute	CodeGen/LiveInterval.cpp	/^void ConnectedVNInfoEqClasses::Distribute(LiveInterval *LIV[],$/;"	f	class:ConnectedVNInfoEqClasses
DivCacheTy	Transforms/Utils/BypassSlowDivision.cpp	/^  typedef DenseMap<DivOpInfo, DivPhiNodes> DivCacheTy;$/;"	t	namespace:llvm	file:
DivOpInfo	Transforms/Utils/BypassSlowDivision.cpp	/^    DivOpInfo(bool InSignedOp, Value *InDividend, Value *InDivisor)$/;"	f	struct:__anon477::DivOpInfo
DivOpInfo	Transforms/Utils/BypassSlowDivision.cpp	/^  struct DivOpInfo {$/;"	s	namespace:__anon477	file:
DivPhiNodes	Transforms/Utils/BypassSlowDivision.cpp	/^    DivPhiNodes(PHINode *InQuotient, PHINode *InRemainder)$/;"	f	struct:__anon477::DivPhiNodes
DivPhiNodes	Transforms/Utils/BypassSlowDivision.cpp	/^  struct DivPhiNodes {$/;"	s	namespace:__anon477	file:
DivRem	Target/Mips/MipsISelLowering.h	/^      DivRem,$/;"	e	enum:llvm::MipsISD::NodeType
DivRemU	Target/Mips/MipsISelLowering.h	/^      DivRemU,$/;"	e	enum:llvm::MipsISD::NodeType
Dividend	Transforms/Utils/BypassSlowDivision.cpp	/^    Value *Dividend;$/;"	m	struct:__anon477::DivOpInfo	file:
Divisor	Transforms/Utils/BypassSlowDivision.cpp	/^    Value *Divisor;$/;"	m	struct:__anon477::DivOpInfo	file:
DoInitialMatch	Transforms/Scalar/LoopStrengthReduce.cpp	/^static void DoInitialMatch(const SCEV *S, Loop *L,$/;"	f	file:
DoInstructionSelection	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^void SelectionDAGISel::DoInstructionSelection() {$/;"	f	class:SelectionDAGISel
DoNotLinkFromSource	Linker/LinkModules.cpp	/^    SmallPtrSet<const Value*, 16> DoNotLinkFromSource;$/;"	m	class:__anon202::ModuleLinker	file:
DoOneIteration	Transforms/InstCombine/InstructionCombining.cpp	/^bool InstCombiner::DoOneIteration(Function &F, unsigned Iteration) {$/;"	f	class:InstCombiner
DoPHITranslation	VMCore/Value.cpp	/^Value *Value::DoPHITranslation(const BasicBlock *CurBB,$/;"	f	class:Value
DoPromotion	Transforms/IPO/ArgumentPromotion.cpp	/^CallGraphNode *ArgPromotion::DoPromotion(Function *F,$/;"	f	class:ArgPromotion
DoScalarReplacement	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::DoScalarReplacement(AllocaInst *AI,$/;"	f	class:SROA
DoSearch	Support/SearchForAddressOfSpecialSymbol.cpp	/^static void *DoSearch(const char* symbolName) {$/;"	f	file:
DoSelectCall	Target/X86/X86FastISel.cpp	/^bool X86FastISel::DoSelectCall(const Instruction *I, const char *MemIntName) {$/;"	f	class:X86FastISel
Document	Support/YAMLParser.cpp	/^Document::Document(Stream &S) : stream(S), Root(0) {$/;"	f	class:Document
DoesModifyCalleeSavedReg	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static bool DoesModifyCalleeSavedReg(MachineInstr *MI,$/;"	f	file:
DoesObjCBlockEscape	Transforms/Scalar/ObjCARC.cpp	/^static bool DoesObjCBlockEscape(const Value *BlockPtr) {$/;"	f	file:
DomLevels	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DenseMap<DomTreeNode*, unsigned> DomLevels;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
DomNode	CodeGen/LiveRangeCalc.h	/^    MachineDomTreeNode *DomNode;$/;"	m	struct:llvm::LiveRangeCalc::LiveInBlock
DomOnlyPrinter	Analysis/DomPrinter.cpp	/^  DomOnlyPrinter() : DOTGraphTraitsPrinter<DominatorTree, true>("domonly", ID) {$/;"	f	struct:__anon50::DomOnlyPrinter
DomOnlyPrinter	Analysis/DomPrinter.cpp	/^struct DomOnlyPrinter$/;"	s	namespace:__anon50	file:
DomOnlyViewer	Analysis/DomPrinter.cpp	/^  DomOnlyViewer() : DOTGraphTraitsViewer<DominatorTree, true>("domonly", ID){$/;"	f	struct:__anon49::DomOnlyViewer
DomOnlyViewer	Analysis/DomPrinter.cpp	/^struct DomOnlyViewer$/;"	s	namespace:__anon49	file:
DomPrinter	Analysis/DomPrinter.cpp	/^  DomPrinter() : DOTGraphTraitsPrinter<DominatorTree, false>("dom", ID) {$/;"	f	struct:__anon50::DomPrinter
DomPrinter	Analysis/DomPrinter.cpp	/^struct DomPrinter$/;"	s	namespace:__anon50	file:
DomTree	CodeGen/EarlyIfConversion.cpp	/^  MachineDominatorTree *DomTree;$/;"	m	class:__anon92::EarlyIfConverter	file:
DomTree	CodeGen/LiveRangeCalc.h	/^  MachineDominatorTree *DomTree;$/;"	m	class:llvm::LiveRangeCalc
DomTree	CodeGen/RegAllocGreedy.cpp	/^  MachineDominatorTree *DomTree;$/;"	m	class:__anon158::RAGreedy	file:
DomTreeNodeCompare	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  struct DomTreeNodeCompare {$/;"	s	namespace:__anon469	file:
DomTreeNodePair	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  typedef std::pair<DomTreeNode*, unsigned> DomTreeNodePair;$/;"	t	namespace:__anon469	file:
DomViewer	Analysis/DomPrinter.cpp	/^  DomViewer() : DOTGraphTraitsViewer<DominatorTree, false>("dom", ID){$/;"	f	struct:__anon49::DomViewer
DomViewer	Analysis/DomPrinter.cpp	/^struct DomViewer$/;"	s	namespace:__anon49	file:
DomainGeneral	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    DomainGeneral = 0 << DomainShift,$/;"	e	enum:llvm::ARMII::__anon288
DomainMask	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    DomainMask    = 7 << DomainShift,$/;"	e	enum:llvm::ARMII::__anon288
DomainNEON	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    DomainNEON    = 2 << DomainShift,$/;"	e	enum:llvm::ARMII::__anon288
DomainNEONA8	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    DomainNEONA8  = 4 << DomainShift,$/;"	e	enum:llvm::ARMII::__anon288
DomainShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    DomainShift   = 15,$/;"	e	enum:llvm::ARMII::__anon288
DomainVFP	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    DomainVFP     = 1 << DomainShift,$/;"	e	enum:llvm::ARMII::__anon288
DomainValue	CodeGen/ExecutionDepsFix.cpp	/^  DomainValue() : Refs(0) { clear(); }$/;"	f	struct:__anon118::DomainValue
DomainValue	CodeGen/ExecutionDepsFix.cpp	/^struct DomainValue {$/;"	s	namespace:__anon118	file:
DominatesMergePoint	Transforms/Utils/SimplifyCFG.cpp	/^static bool DominatesMergePoint(Value *V, BasicBlock *BB,$/;"	f	file:
DoneParsingLineTable	DebugInfo/DWARFDebugLine.h	/^      DoneParsingLineTable = -1$/;"	e	enum:llvm::DWARFDebugLine::State::__anon174
DontCare	CodeGen/SpillPlacement.h	/^    DontCare,  \/\/\/< Block doesn't care \/ variable not live.$/;"	e	enum:llvm::SpillPlacement::BorderConstraint
DotDebugLocEntries	CodeGen/AsmPrinter/DwarfDebug.h	/^  SmallVector<DotDebugLocEntry, 4> DotDebugLocEntries;$/;"	m	class:llvm::DwarfDebug
DotDebugLocEntry	CodeGen/AsmPrinter/DwarfDebug.h	/^  DotDebugLocEntry() $/;"	f	struct:llvm::DotDebugLocEntry
DotDebugLocEntry	CodeGen/AsmPrinter/DwarfDebug.h	/^  DotDebugLocEntry(const MCSymbol *B, const MCSymbol *E, MachineLocation &L,$/;"	f	struct:llvm::DotDebugLocEntry
DotDebugLocEntry	CodeGen/AsmPrinter/DwarfDebug.h	/^  DotDebugLocEntry(const MCSymbol *B, const MCSymbol *E, const ConstantFP *FPtr)$/;"	f	struct:llvm::DotDebugLocEntry
DotDebugLocEntry	CodeGen/AsmPrinter/DwarfDebug.h	/^  DotDebugLocEntry(const MCSymbol *B, const MCSymbol *E, int64_t i)$/;"	f	struct:llvm::DotDebugLocEntry
DotDebugLocEntry	CodeGen/AsmPrinter/DwarfDebug.h	/^  DotDebugLocEntry(const MCSymbol *B, const MCSymbol *E,$/;"	f	struct:llvm::DotDebugLocEntry
DotDebugLocEntry	CodeGen/AsmPrinter/DwarfDebug.h	/^typedef struct DotDebugLocEntry {$/;"	s	namespace:llvm
DotDebugLocEntry	CodeGen/AsmPrinter/DwarfDebug.h	/^} DotDebugLocEntry;$/;"	t	namespace:llvm	typeref:struct:llvm::DotDebugLocEntry
DotDebugLocOffset	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned DotDebugLocOffset;        \/\/ Offset in DotDebugLocEntries.$/;"	m	class:llvm::DbgVariable
DoubleTy	VMCore/LLVMContextImpl.h	/^  Type VoidTy, LabelTy, HalfTy, FloatTy, DoubleTy, MetadataTy;$/;"	m	class:llvm::LLVMContextImpl
Downward	CodeGen/MachineTraceMetrics.cpp	/^  bool Downward;$/;"	m	struct:__anon132::LoopBounds	file:
DropFirst	VMCore/LLVMContextImpl.cpp	/^struct DropFirst {$/;"	s	namespace:__anon608	file:
DropOperands	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SDNode::DropOperands() {$/;"	f	class:SDNode
DropRef	VMCore/Attributes.cpp	/^  void DropRef() {$/;"	f	class:llvm::AttributeListImpl
DropReferences	VMCore/LLVMContextImpl.cpp	/^struct DropReferences {$/;"	s	namespace:__anon608	file:
DropRegister	Transforms/Scalar/LoopStrengthReduce.cpp	/^RegUseTracker::DropRegister(const SCEV *Reg, size_t LUIdx) {$/;"	f	class:RegUseTracker
DrvInterface	Target/NVPTX/NVPTX.h	/^enum DrvInterface {$/;"	g	namespace:llvm::NVPTX
DstIdx	CodeGen/RegisterCoalescer.h	/^    unsigned DstIdx;$/;"	m	class:llvm::CoalescerPair
DstInit	Linker/LinkModules.cpp	/^      Constant *DstInit;      \/\/ Old initializer from dest module.$/;"	m	struct:__anon202::ModuleLinker::AppendingVarInfo	file:
DstM	Linker/LinkModules.cpp	/^    Module *DstM, *SrcM;$/;"	m	class:__anon202::ModuleLinker	file:
DstReg	CodeGen/RegisterCoalescer.h	/^    unsigned DstReg;$/;"	m	class:llvm::CoalescerPair
DstRegMap	CodeGen/TwoAddressInstructionPass.cpp	/^    DenseMap<unsigned, unsigned> DstRegMap;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
DstResolvedOpaqueTypes	Linker/LinkModules.cpp	/^  SmallPtrSet<StructType*, 16> DstResolvedOpaqueTypes;$/;"	m	class:__anon201::TypeMapTy	file:
Dummy	Support/DynamicLibrary.cpp	/^static ExplicitSymbolsDeleter Dummy;$/;"	v	file:
Dummy	Target/NVPTX/NVPTXISelLowering.h	/^  Dummy$/;"	e	enum:llvm::NVPTXISD::NodeType
DumpNodes	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^static void DumpNodes(const SDNode *N, unsigned indent, const SelectionDAG *G) {$/;"	f	file:
DumpNodesr	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^static void DumpNodesr(raw_ostream &OS, const SDNode *N, unsigned indent,$/;"	f	file:
DumpingState	DebugInfo/DWARFDebugLine.h	/^    DumpingState(raw_ostream &OS) : OS(OS) {}$/;"	f	struct:llvm::DWARFDebugLine::DumpingState
DumpingState	DebugInfo/DWARFDebugLine.h	/^  struct DumpingState : public State {$/;"	s	class:llvm::DWARFDebugLine
DupRetToEnableTailCallOpts	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::DupRetToEnableTailCallOpts(ReturnInst *RI) {$/;"	f	class:CodeGenPrepare
DuplicateCondBranchOnPHIIntoPred	Transforms/Scalar/JumpThreading.cpp	/^bool JumpThreading::DuplicateCondBranchOnPHIIntoPred(BasicBlock *BB,$/;"	f	class:JumpThreading
DuplicateInstruction	CodeGen/TailDuplication.cpp	/^void TailDuplicatePass::DuplicateInstruction(MachineInstr *MI,$/;"	f	class:TailDuplicatePass
DuplicateToIndexMap	Analysis/PathProfileVerifier.cpp	/^typedef std::map<unsigned, unsigned> DuplicateToIndexMap;$/;"	t	file:
DwarfAbbrevSectionSym	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *DwarfInfoSectionSym, *DwarfAbbrevSectionSym;$/;"	m	class:llvm::DwarfDebug
DwarfAccelTable	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^DwarfAccelTable::DwarfAccelTable(ArrayRef<DwarfAccelTable::Atom> atomList) :$/;"	f	class:DwarfAccelTable
DwarfAccelTable	CodeGen/AsmPrinter/DwarfAccelTable.h	/^class DwarfAccelTable {$/;"	c	namespace:llvm
DwarfCFIException	CodeGen/AsmPrinter/DwarfCFIException.cpp	/^DwarfCFIException::DwarfCFIException(AsmPrinter *A)$/;"	f	class:DwarfCFIException
DwarfCFIException	CodeGen/AsmPrinter/DwarfException.h	/^class DwarfCFIException : public DwarfException {$/;"	c	namespace:llvm
DwarfDebug	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DwarfDebug::DwarfDebug(AsmPrinter *A, Module *M)$/;"	f	class:DwarfDebug
DwarfDebug	CodeGen/AsmPrinter/DwarfDebug.h	/^class DwarfDebug {$/;"	c	namespace:llvm
DwarfDebugLocSectionSym	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *DwarfDebugLocSectionSym;$/;"	m	class:llvm::DwarfDebug
DwarfDebugRangeSectionSym	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *DwarfStrSectionSym, *TextSectionSym, *DwarfDebugRangeSectionSym;$/;"	m	class:llvm::DwarfDebug
DwarfEHPrepare	CodeGen/DwarfEHPrepare.cpp	/^    DwarfEHPrepare(const TargetMachine *tm) :$/;"	f	class:__anon138::DwarfEHPrepare
DwarfEHPrepare	CodeGen/DwarfEHPrepare.cpp	/^  class DwarfEHPrepare : public FunctionPass {$/;"	c	namespace:__anon138	file:
DwarfException	CodeGen/AsmPrinter/DwarfException.cpp	/^DwarfException::DwarfException(AsmPrinter *A)$/;"	f	class:DwarfException
DwarfException	CodeGen/AsmPrinter/DwarfException.h	/^class DwarfException {$/;"	c	namespace:llvm
DwarfInfoSectionSym	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *DwarfInfoSectionSym, *DwarfAbbrevSectionSym;$/;"	m	class:llvm::DwarfDebug
DwarfStrSectionSym	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *DwarfStrSectionSym, *TextSectionSym, *DwarfDebugRangeSectionSym;$/;"	m	class:llvm::DwarfDebug
Dyld	ExecutionEngine/MCJIT/MCJIT.h	/^  RuntimeDyld Dyld;$/;"	m	class:llvm::MCJIT
DyldELFObject	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^DyldELFObject<target_endianness, is64Bits>::DyldELFObject(MemoryBuffer *Wrapper,$/;"	f	class:__anon180::DyldELFObject
DyldELFObject	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^class DyldELFObject : public ELFObjectFile<target_endianness, is64Bits> {$/;"	c	namespace:__anon180	file:
DyldObj	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^    DyldELFObject<target_endianness, is64Bits> *DyldObj;$/;"	m	class:__anon180::ELFObjectImage	file:
DynAlloc	Target/Mips/MipsISelLowering.h	/^      DynAlloc,$/;"	e	enum:llvm::MipsISD::NodeType
DynamicallyInitializedGlobals	Transforms/Instrumentation/AddressSanitizer.cpp	/^  SmallSet<GlobalValue*, 32> DynamicallyInitializedGlobals;$/;"	m	struct:__anon491::AddressSanitizer	file:
EABI	Target/Mips/MipsSubtarget.h	/^    UnknownABI, O32, N32, N64, EABI$/;"	e	enum:llvm::MipsSubtarget::MipsABIEnum
EABase	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^} EABase;$/;"	t	typeref:enum:__anon354
EADisplacement	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^} EADisplacement;$/;"	t	typeref:enum:__anon357
EAT	Support/regcomp.c	120;"	d	file:
EATTWO	Support/regcomp.c	121;"	d	file:
EAX	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    EAX = 0, ECX = 1, EDX = 2, EBX = 3, ESP = 4, EBP = 5, ESI = 6, EDI = 7$/;"	e	enum:llvm::N86::__anon348
EA_BASES_16BIT	Target/X86/Disassembler/X86DisassemblerDecoder.h	88;"	d
EA_BASES_32BIT	Target/X86/Disassembler/X86DisassemblerDecoder.h	124;"	d
EA_BASES_64BIT	Target/X86/Disassembler/X86DisassemblerDecoder.h	160;"	d
EA_BASE_NONE	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EA_BASE_NONE,$/;"	e	enum:__anon354
EA_DISP_16	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EA_DISP_16,$/;"	e	enum:__anon357
EA_DISP_32	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EA_DISP_32$/;"	e	enum:__anon357
EA_DISP_8	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EA_DISP_8,$/;"	e	enum:__anon357
EA_DISP_NONE	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EA_DISP_NONE,$/;"	e	enum:__anon357
EA_max	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EA_max$/;"	e	enum:__anon354
EBP	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    EAX = 0, ECX = 1, EDX = 2, EBX = 3, ESP = 4, EBP = 5, ESI = 6, EDI = 7$/;"	e	enum:llvm::N86::__anon348
EBX	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    EAX = 0, ECX = 1, EDX = 2, EBX = 3, ESP = 4, EBP = 5, ESI = 6, EDI = 7$/;"	e	enum:llvm::N86::__anon348
ECStack	ExecutionEngine/Interpreter/Interpreter.h	/^  std::vector<ExecutionContext> ECStack;$/;"	m	class:llvm::Interpreter
ECX	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    EAX = 0, ECX = 1, EDX = 2, EBX = 3, ESP = 4, EBP = 5, ESI = 6, EDI = 7$/;"	e	enum:llvm::N86::__anon348
EDBlockCreateInsts	MC/MCDisassembler/EDMain.cpp	/^extern "C" unsigned int EDBlockCreateInsts() {$/;"	f
EDBlockCreateInsts	MC/MCDisassembler/EDMain.cpp	/^unsigned int EDBlockCreateInsts(EDInstRef *insts,$/;"	f
EDBlockEvaluateOperand	MC/MCDisassembler/EDMain.cpp	/^extern "C" int EDBlockEvaluateOperand() {$/;"	f
EDBlockEvaluateOperand	MC/MCDisassembler/EDMain.cpp	/^int EDBlockEvaluateOperand(uint64_t *result, EDOperandRef operand,$/;"	f
EDBlockVisitTokens	MC/MCDisassembler/EDMain.cpp	/^extern "C" int EDBlockVisitTokens() {$/;"	f
EDBlockVisitTokens	MC/MCDisassembler/EDMain.cpp	/^int EDBlockVisitTokens(EDInstRef inst, ::EDTokenVisitor_t visitor) {$/;"	f
EDBranchTargetID	MC/MCDisassembler/EDMain.cpp	/^int EDBranchTargetID(EDInstRef inst) {$/;"	f
EDByteReaderCallback	MC/MCDisassembler/EDDisassembler.h	/^typedef int (*EDByteReaderCallback)(uint8_t *byte, uint64_t address, void *arg);$/;"	t	namespace:llvm
EDCreateInsts	MC/MCDisassembler/EDMain.cpp	/^unsigned int EDCreateInsts(EDInstRef *insts,$/;"	f
EDDisassembler	MC/MCDisassembler/EDDisassembler.cpp	/^EDDisassembler::EDDisassembler(CPUKey &key) : $/;"	f	class:EDDisassembler
EDDisassembler	MC/MCDisassembler/EDDisassembler.h	/^struct EDDisassembler {$/;"	s	namespace:llvm
EDEvaluateOperand	MC/MCDisassembler/EDMain.cpp	/^int EDEvaluateOperand(uint64_t *result, EDOperandRef operand,$/;"	f
EDGetDisassembler	MC/MCDisassembler/EDMain.cpp	/^int EDGetDisassembler(EDDisassemblerRef *disassembler,$/;"	f
EDGetInstString	MC/MCDisassembler/EDMain.cpp	/^int EDGetInstString(const char **buf,$/;"	f
EDGetOperand	MC/MCDisassembler/EDMain.cpp	/^int EDGetOperand(EDOperandRef *operand,$/;"	f
EDGetRegisterName	MC/MCDisassembler/EDMain.cpp	/^int EDGetRegisterName(const char** regName,$/;"	f
EDGetToken	MC/MCDisassembler/EDMain.cpp	/^int EDGetToken(EDTokenRef *token,$/;"	f
EDGetTokenString	MC/MCDisassembler/EDMain.cpp	/^int EDGetTokenString(const char **buf,$/;"	f
EDI	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    EAX = 0, ECX = 1, EDX = 2, EBX = 3, ESP = 4, EBP = 5, ESI = 6, EDI = 7$/;"	e	enum:llvm::N86::__anon348
EDIS_MAX_OPERANDS	MC/MCDisassembler/EDInfo.h	/^  EDIS_MAX_OPERANDS = 13,$/;"	e	enum:__anon205
EDIS_MAX_SYNTAXES	MC/MCDisassembler/EDInfo.h	/^  EDIS_MAX_SYNTAXES = 2$/;"	e	enum:__anon205
EDImmediateOperandValue	MC/MCDisassembler/EDMain.cpp	/^int EDImmediateOperandValue(uint64_t *value, EDOperandRef operand) {$/;"	f
EDInst	MC/MCDisassembler/EDInst.cpp	/^EDInst::EDInst(llvm::MCInst *inst,$/;"	f	class:EDInst
EDInst	MC/MCDisassembler/EDInst.h	/^struct EDInst {$/;"	s	namespace:llvm
EDInstByteSize	MC/MCDisassembler/EDMain.cpp	/^int EDInstByteSize(EDInstRef inst) {$/;"	f
EDInstID	MC/MCDisassembler/EDMain.cpp	/^int EDInstID(unsigned *instID, EDInstRef inst) {$/;"	f
EDInstIsBranch	MC/MCDisassembler/EDMain.cpp	/^int EDInstIsBranch(EDInstRef inst) {$/;"	f
EDInstIsMove	MC/MCDisassembler/EDMain.cpp	/^int EDInstIsMove(EDInstRef inst) {$/;"	f
EDLiteralTokenAbsoluteValue	MC/MCDisassembler/EDMain.cpp	/^int EDLiteralTokenAbsoluteValue(uint64_t *value, EDTokenRef token) {$/;"	f
EDMemoryObject	MC/MCDisassembler/EDDisassembler.cpp	/^    EDMemoryObject(EDByteReaderCallback callback,$/;"	f	class:__anon204::EDMemoryObject
EDMemoryObject	MC/MCDisassembler/EDDisassembler.cpp	/^  class EDMemoryObject : public llvm::MemoryObject {$/;"	c	namespace:__anon204	file:
EDMoveSourceID	MC/MCDisassembler/EDMain.cpp	/^int EDMoveSourceID(EDInstRef inst) {$/;"	f
EDMoveTargetID	MC/MCDisassembler/EDMain.cpp	/^int EDMoveTargetID(EDInstRef inst) {$/;"	f
EDNumOperands	MC/MCDisassembler/EDMain.cpp	/^int EDNumOperands(EDInstRef inst) {$/;"	f
EDNumTokens	MC/MCDisassembler/EDMain.cpp	/^int EDNumTokens(EDInstRef inst) {$/;"	f
EDOperand	MC/MCDisassembler/EDOperand.cpp	/^EDOperand::EDOperand(const EDDisassembler &disassembler,$/;"	f	class:EDOperand
EDOperand	MC/MCDisassembler/EDOperand.h	/^struct EDOperand {$/;"	s	namespace:llvm
EDOperandIndexForToken	MC/MCDisassembler/EDMain.cpp	/^int EDOperandIndexForToken(EDTokenRef token) {$/;"	f
EDOperandIsImmediate	MC/MCDisassembler/EDMain.cpp	/^int EDOperandIsImmediate(EDOperandRef operand) {$/;"	f
EDOperandIsMemory	MC/MCDisassembler/EDMain.cpp	/^int EDOperandIsMemory(EDOperandRef operand) {$/;"	f
EDOperandIsRegister	MC/MCDisassembler/EDMain.cpp	/^int EDOperandIsRegister(EDOperandRef operand) {$/;"	f
EDRegisterIsProgramCounter	MC/MCDisassembler/EDMain.cpp	/^int EDRegisterIsProgramCounter(EDDisassemblerRef disassembler,$/;"	f
EDRegisterIsStackPointer	MC/MCDisassembler/EDMain.cpp	/^int EDRegisterIsStackPointer(EDDisassemblerRef disassembler,$/;"	f
EDRegisterOperandValue	MC/MCDisassembler/EDMain.cpp	/^int EDRegisterOperandValue(unsigned *value, EDOperandRef operand) {$/;"	f
EDRegisterReaderCallback	MC/MCDisassembler/EDOperand.h	/^typedef int (*EDRegisterReaderCallback)(uint64_t *value, unsigned regID, $/;"	t	namespace:llvm
EDRegisterTokenValue	MC/MCDisassembler/EDMain.cpp	/^int EDRegisterTokenValue(unsigned *registerID,$/;"	f
EDReleaseInst	MC/MCDisassembler/EDMain.cpp	/^void EDReleaseInst(EDInstRef inst) {$/;"	f
EDToken	MC/MCDisassembler/EDToken.cpp	/^EDToken::EDToken(StringRef str,$/;"	f	class:EDToken
EDToken	MC/MCDisassembler/EDToken.h	/^struct EDToken {$/;"	s	namespace:llvm
EDTokenIsLiteral	MC/MCDisassembler/EDMain.cpp	/^int EDTokenIsLiteral(EDTokenRef token) {$/;"	f
EDTokenIsNegativeLiteral	MC/MCDisassembler/EDMain.cpp	/^int EDTokenIsNegativeLiteral(EDTokenRef token) {$/;"	f
EDTokenIsOpcode	MC/MCDisassembler/EDMain.cpp	/^int EDTokenIsOpcode(EDTokenRef token) {$/;"	f
EDTokenIsPunctuation	MC/MCDisassembler/EDMain.cpp	/^int EDTokenIsPunctuation(EDTokenRef token) {$/;"	f
EDTokenIsRegister	MC/MCDisassembler/EDMain.cpp	/^int EDTokenIsRegister(EDTokenRef token) {$/;"	f
EDTokenIsWhitespace	MC/MCDisassembler/EDMain.cpp	/^int EDTokenIsWhitespace(EDTokenRef token) {$/;"	f
EDX	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    EAX = 0, ECX = 1, EDX = 2, EBX = 3, ESP = 4, EBP = 5, ESI = 6, EDI = 7$/;"	e	enum:llvm::N86::__anon348
EHGlobal	MC/MCAsmStreamer.cpp	/^  enum EHSymbolFlags { EHGlobal         = 1,$/;"	e	enum:__anon214::MCAsmStreamer::EHSymbolFlags	file:
EHPrivateExtern	MC/MCAsmStreamer.cpp	/^                       EHPrivateExtern  = 1 << 2 };$/;"	e	enum:__anon214::MCAsmStreamer::EHSymbolFlags	file:
EHSymbolFlags	MC/MCAsmStreamer.cpp	/^  enum EHSymbolFlags { EHGlobal         = 1,$/;"	g	class:__anon214::MCAsmStreamer	file:
EHTimerName	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static const char *EHTimerName = "DWARF Exception Writer";$/;"	v	file:
EHWeakDefinition	MC/MCAsmStreamer.cpp	/^                       EHWeakDefinition = 1 << 1,$/;"	e	enum:__anon214::MCAsmStreamer::EHSymbolFlags	file:
EH_RETURN	Target/X86/X86ISelLowering.h	/^      EH_RETURN,$/;"	e	enum:llvm::X86ISD::NodeType
EH_SJLJ_LONGJMP	Target/ARM/ARMISelLowering.h	/^      EH_SJLJ_LONGJMP,        \/\/ SjLj exception handling longjmp.$/;"	e	enum:llvm::ARMISD::NodeType
EH_SJLJ_LONGJMP	Target/X86/X86ISelLowering.h	/^      EH_SJLJ_LONGJMP,$/;"	e	enum:llvm::X86ISD::NodeType
EH_SJLJ_SETJMP	Target/ARM/ARMISelLowering.h	/^      EH_SJLJ_SETJMP,         \/\/ SjLj exception handling setjmp.$/;"	e	enum:llvm::ARMISD::NodeType
EH_SJLJ_SETJMP	Target/X86/X86ISelLowering.h	/^      EH_SJLJ_SETJMP,$/;"	e	enum:llvm::X86ISD::NodeType
EK_NotExtended	Analysis/BasicAliasAnalysis.cpp	/^    EK_NotExtended,$/;"	e	enum:__anon14::ExtensionKind	file:
EK_SignExt	Analysis/BasicAliasAnalysis.cpp	/^    EK_SignExt,$/;"	e	enum:__anon14::ExtensionKind	file:
EK_ZeroExt	Analysis/BasicAliasAnalysis.cpp	/^    EK_ZeroExt$/;"	e	enum:__anon14::ExtensionKind	file:
ELFARMAsmBackend	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  ELFARMAsmBackend(const Target &T, const StringRef TT,$/;"	f	class:__anon285::ELFARMAsmBackend
ELFARMAsmBackend	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^class ELFARMAsmBackend : public ARMAsmBackend {$/;"	c	namespace:__anon285	file:
ELFAsmParser	MC/MCParser/ELFAsmParser.cpp	/^  ELFAsmParser() : SeenIdent(false) {$/;"	f	class:__anon209::ELFAsmParser
ELFAsmParser	MC/MCParser/ELFAsmParser.cpp	/^class ELFAsmParser : public MCAsmParserExtension {$/;"	c	namespace:__anon209	file:
ELFMBlazeAsmBackend	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^  ELFMBlazeAsmBackend(const Target &T, uint8_t _OSABI)$/;"	f	class:__anon456::ELFMBlazeAsmBackend
ELFMBlazeAsmBackend	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^class ELFMBlazeAsmBackend : public MBlazeAsmBackend {$/;"	c	namespace:__anon456	file:
ELFObjectImage	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^    ELFObjectImage(ObjectBuffer *Input,$/;"	f	class:__anon180::ELFObjectImage
ELFObjectImage	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^class ELFObjectImage : public ObjectImageCommon {$/;"	c	namespace:__anon180	file:
ELFObjectWriter	MC/ELFObjectWriter.cpp	/^    ELFObjectWriter(MCELFObjectTargetWriter *MOTW,$/;"	f	class:__anon225::ELFObjectWriter
ELFObjectWriter	MC/ELFObjectWriter.cpp	/^class ELFObjectWriter : public MCObjectWriter {$/;"	c	namespace:__anon225	file:
ELFPPCAsmBackend	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^    ELFPPCAsmBackend(const Target &T, uint8_t OSABI) :$/;"	f	class:__anon321::ELFPPCAsmBackend
ELFPPCAsmBackend	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  class ELFPPCAsmBackend : public PPCAsmBackend {$/;"	c	namespace:__anon321	file:
ELFSymbolData	MC/ELFObjectWriter.cpp	/^    struct ELFSymbolData {$/;"	s	class:__anon225::ELFObjectWriter	file:
ELFUniqueMapTy	MC/MCContext.cpp	/^typedef StringMap<const MCSectionELF*> ELFUniqueMapTy;$/;"	t	file:
ELFWriterInfo	Target/ARM/ARMTargetMachine.h	/^  ARMELFWriterInfo    ELFWriterInfo;$/;"	m	class:llvm::ARMTargetMachine
ELFWriterInfo	Target/ARM/ARMTargetMachine.h	/^  ARMELFWriterInfo    ELFWriterInfo;$/;"	m	class:llvm::ThumbTargetMachine
ELFWriterInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    MBlazeELFWriterInfo    ELFWriterInfo;$/;"	m	class:llvm::MBlazeTargetMachine
ELFWriterInfo	Target/Mips/MipsTargetMachine.h	/^  MipsELFWriterInfo   ELFWriterInfo;$/;"	m	class:llvm::MipsTargetMachine
ELFWriterInfo	Target/X86/X86TargetMachine.h	/^  X86ELFWriterInfo   ELFWriterInfo;$/;"	m	class:llvm::X86TargetMachine
ELFX86AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  ELFX86AsmBackend(const Target &T, uint8_t _OSABI, StringRef CPU)$/;"	f	class:__anon345::ELFX86AsmBackend
ELFX86AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^class ELFX86AsmBackend : public X86AsmBackend {$/;"	c	namespace:__anon345	file:
ELFX86_32AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  ELFX86_32AsmBackend(const Target &T, uint8_t OSABI, StringRef CPU)$/;"	f	class:__anon345::ELFX86_32AsmBackend
ELFX86_32AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^class ELFX86_32AsmBackend : public ELFX86AsmBackend {$/;"	c	namespace:__anon345	file:
ELFX86_64AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  ELFX86_64AsmBackend(const Target &T, uint8_t OSABI, StringRef CPU)$/;"	f	class:__anon345::ELFX86_64AsmBackend
ELFX86_64AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^class ELFX86_64AsmBackend : public ELFX86AsmBackend {$/;"	c	namespace:__anon345	file:
EMIT	Support/regcomp.c	131;"	d	file:
ENABLE_SPARC_JIT	ExecutionEngine/JIT/Makefile	/^  ENABLE_SPARC_JIT = 1$/;"	m
ENABLE_X86_JIT	ExecutionEngine/JIT/Makefile	/^  ENABLE_X86_JIT = 1$/;"	m
ENCODINGS	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^    ENCODINGS$/;"	e	enum:__anon366
ENCODINGS	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	222;"	d
ENCODING_max	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^    ENCODING_max$/;"	e	enum:__anon366
ENTRY	MC/MCSectionMachO.cpp	57;"	d	file:
ENTRY	MC/MCSectionMachO.cpp	69;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	166;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	171;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	443;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	445;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	449;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	453;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	494;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	498;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	540;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	547;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	600;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	604;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	605;"	d	file:
ENTRY	Target/X86/Disassembler/X86Disassembler.cpp	607;"	d	file:
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	301;"	d
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	303;"	d
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	304;"	d
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	306;"	d
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	318;"	d
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	322;"	d
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	331;"	d
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	333;"	d
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	352;"	d
ENTRY	Target/X86/Disassembler/X86DisassemblerDecoder.h	354;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	122;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	127;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	180;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	185;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	252;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	257;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	340;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	345;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	366;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	371;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	61;"	d
ENUM_ENTRY	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	66;"	d
EQ	Support/regexec.c	112;"	d	file:
EQ	Support/regexec.c	65;"	d	file:
EQ	Support/regexec.c	91;"	d	file:
EQ	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    EQ,            \/\/ Equal                      Equal$/;"	e	enum:llvm::ARMCC::CondCodes
EQ	Target/MBlaze/MBlazeISelLowering.h	/^      EQ,$/;"	e	enum:llvm::MBlazeCC::CC
EQ	Target/NVPTX/NVPTX.h	/^  EQ,$/;"	e	enum:llvm::NVPTXCC::CondCodes
ES	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    const char *ES;$/;"	m	struct:__anon392::MSP430ISelAddressMode	file:
ES	Target/X86/X86ISelDAGToDAG.cpp	/^    const char *ES;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
ESI	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    EAX = 0, ECX = 1, EDX = 2, EBX = 3, ESP = 4, EBP = 5, ESI = 6, EDI = 7$/;"	e	enum:llvm::N86::__anon348
ESP	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    EAX = 0, ECX = 1, EDX = 2, EBX = 3, ESP = 4, EBP = 5, ESI = 6, EDI = 7$/;"	e	enum:llvm::N86::__anon348
ETypes	VMCore/LLVMContextImpl.h	/^    ArrayRef<Type*> ETypes;$/;"	m	struct:llvm::AnonStructTypeKeyInfo::KeyTy
EVENT_LISTENER_COMMON_H	ExecutionEngine/EventListenerCommon.h	15;"	d
EVTArray	CodeGen/SelectionDAG/SelectionDAG.cpp	/^    EVTArray() {$/;"	f	struct:__anon75::EVTArray
EVTArray	CodeGen/SelectionDAG/SelectionDAG.cpp	/^  struct EVTArray {$/;"	s	namespace:__anon75	file:
EVTToAPFloatSemantics	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^static const fltSemantics *EVTToAPFloatSemantics(EVT VT) {$/;"	f	file:
EVTToAPFloatSemantics	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static const fltSemantics *EVTToAPFloatSemantics(EVT VT) {$/;"	f	file:
EVTs	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static ManagedStatic<std::set<EVT, EVT::compareRawBits> > EVTs;$/;"	v	file:
EXPLICIT_SYMBOL	Support/DynamicLibrary.cpp	157;"	d	file:
EXPLICIT_SYMBOL	Support/DynamicLibrary.cpp	184;"	d	file:
EXPLICIT_SYMBOL	Support/SearchForAddressOfSpecialSymbol.cpp	21;"	d	file:
EXPLICIT_SYMBOL	Support/SearchForAddressOfSpecialSymbol.cpp	50;"	d	file:
EXPORTED_SYMBOL_FILE	Transforms/DDA/Makefile	/^EXPORTED_SYMBOL_FILE = $(PROJ_SRC_DIR)\/Hello.exports$/;"	m
EXPORTED_SYMBOL_FILE	Transforms/Hello/Makefile	/^EXPORTED_SYMBOL_FILE = $(PROJ_SRC_DIR)\/Hello.exports$/;"	m
EXTP	Target/Mips/MipsISelLowering.h	/^      EXTP,$/;"	e	enum:llvm::MipsISD::NodeType
EXTPDP	Target/Mips/MipsISelLowering.h	/^      EXTPDP,$/;"	e	enum:llvm::MipsISD::NodeType
EXTRA_DIST	Support/Makefile	/^EXTRA_DIST = Unix Win32 README.txt$/;"	m
EXTR_RS_W	Target/Mips/MipsISelLowering.h	/^      EXTR_RS_W,$/;"	e	enum:llvm::MipsISD::NodeType
EXTR_R_W	Target/Mips/MipsISelLowering.h	/^      EXTR_R_W,$/;"	e	enum:llvm::MipsISD::NodeType
EXTR_S_H	Target/Mips/MipsISelLowering.h	/^      EXTR_S_H,$/;"	e	enum:llvm::MipsISD::NodeType
EXTR_W	Target/Mips/MipsISelLowering.h	/^      EXTR_W,$/;"	e	enum:llvm::MipsISD::NodeType
EXTSW_32	Target/PowerPC/PPCISelLowering.h	/^      EXTSW_32,$/;"	e	enum:llvm::PPCISD::NodeType
E_ConstantFP	CodeGen/AsmPrinter/DwarfDebug.h	/^    E_ConstantFP,$/;"	e	enum:llvm::DotDebugLocEntry::EntryType
E_ConstantInt	CodeGen/AsmPrinter/DwarfDebug.h	/^    E_ConstantInt$/;"	e	enum:llvm::DotDebugLocEntry::EntryType
E_Integer	CodeGen/AsmPrinter/DwarfDebug.h	/^    E_Integer,$/;"	e	enum:llvm::DotDebugLocEntry::EntryType
E_Location	CodeGen/AsmPrinter/DwarfDebug.h	/^    E_Location,$/;"	e	enum:llvm::DotDebugLocEntry::EntryType
EarlyCSE	Transforms/Scalar/EarlyCSE.cpp	/^  explicit EarlyCSE() : FunctionPass(ID) {$/;"	f	class:__anon566::EarlyCSE
EarlyCSE	Transforms/Scalar/EarlyCSE.cpp	/^class EarlyCSE : public FunctionPass {$/;"	c	namespace:__anon566	file:
EarlyIfConverter	CodeGen/EarlyIfConversion.cpp	/^  EarlyIfConverter() : MachineFunctionPass(ID) {}$/;"	f	class:__anon92::EarlyIfConverter
EarlyIfConverter	CodeGen/EarlyIfConversion.cpp	/^class EarlyIfConverter : public MachineFunctionPass {$/;"	c	namespace:__anon92	file:
EarlyIfConverterID	CodeGen/EarlyIfConversion.cpp	/^char &llvm::EarlyIfConverterID = EarlyIfConverter::ID;$/;"	m	class:llvm	file:
EarlyTailDuplicateID	CodeGen/Passes.cpp	/^char TargetPassConfig::EarlyTailDuplicateID = 0;$/;"	m	class:TargetPassConfig	file:
EatIfPresent	AsmParser/LLParser.h	/^    bool EatIfPresent(lltok::Kind T) {$/;"	f	class:llvm::LLParser
EatNumber	Support/Triple.cpp	/^static unsigned EatNumber(StringRef &Str) {$/;"	f	file:
EatToEndOfLine	MC/MCParser/AsmParser.cpp	/^void AsmParser::EatToEndOfLine() {$/;"	f	class:AsmParser
EatToEndOfStatement	MC/MCParser/AsmParser.cpp	/^void AsmParser::EatToEndOfStatement() {$/;"	f	class:AsmParser
EatsUnboundedNumberOfValues	Support/CommandLine.cpp	/^static bool EatsUnboundedNumberOfValues(const Option *O) {$/;"	f	file:
Edge	Transforms/Instrumentation/MaximumSpanningTree.h	/^    typedef std::pair<const T*, const T*> Edge;$/;"	t	class:llvm::MaximumSpanningTree
Edge	Transforms/Scalar/SCCP.cpp	/^  typedef std::pair<BasicBlock*, BasicBlock*> Edge;$/;"	t	class:__anon531::SCCPSolver	file:
EdgeBundlesID	CodeGen/EdgeBundles.cpp	/^char &llvm::EdgeBundlesID = EdgeBundles::ID;$/;"	m	class:llvm	file:
EdgeProfiler	Transforms/Instrumentation/EdgeProfiling.cpp	/^    EdgeProfiler() : ModulePass(ID) {$/;"	f	class:__anon492::EdgeProfiler
EdgeProfiler	Transforms/Instrumentation/EdgeProfiling.cpp	/^  class EdgeProfiler : public ModulePass {$/;"	c	namespace:__anon492	file:
EdgeTag	Transforms/Instrumentation/GCOVProfiling.cpp	/^    static const char *EdgeTag;$/;"	m	class:__anon490::GCOVRecord	file:
EdgeTag	Transforms/Instrumentation/GCOVProfiling.cpp	/^  const char *GCOVRecord::EdgeTag = "\\0\\0\\x43\\x01";$/;"	m	class:__anon490::GCOVRecord	file:
EdgeWeight	Transforms/Instrumentation/MaximumSpanningTree.h	/^    typedef std::pair<Edge, double> EdgeWeight;$/;"	t	class:llvm::MaximumSpanningTree
EdgeWeightCompare	Transforms/Instrumentation/MaximumSpanningTree.h	/^    struct EdgeWeightCompare {$/;"	s	class:llvm::MaximumSpanningTree
EdgeWeights	Transforms/Instrumentation/MaximumSpanningTree.h	/^    typedef std::vector<EdgeWeight> EdgeWeights;$/;"	t	class:llvm::MaximumSpanningTree
Edit	CodeGen/InlineSpiller.cpp	/^  LiveRangeEdit *Edit;$/;"	m	class:__anon155::InlineSpiller	file:
Edit	CodeGen/SplitKit.h	/^  LiveRangeEdit *Edit;$/;"	m	class:llvm::SplitEditor
ElementSize	Transforms/Scalar/SROA.cpp	/^  uint64_t ElementSize;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
ElementTy	Transforms/Scalar/SROA.cpp	/^  Type *ElementTy;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
Elf_Ehdr	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^  typedef Elf_Ehdr_Impl<target_endianness, is64Bits> Elf_Ehdr;$/;"	t	class:__anon180::DyldELFObject	file:
Elf_Rel	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^  typedef Elf_Rel_Impl<target_endianness, is64Bits, false> Elf_Rel;$/;"	t	class:__anon180::DyldELFObject	file:
Elf_Rela	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^  typedef Elf_Rel_Impl<target_endianness, is64Bits, true> Elf_Rela;$/;"	t	class:__anon180::DyldELFObject	file:
Elf_Shdr	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^  typedef Elf_Shdr_Impl<target_endianness, is64Bits> Elf_Shdr;$/;"	t	class:__anon180::DyldELFObject	file:
Elf_Sym	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^  typedef Elf_Sym_Impl<target_endianness, is64Bits> Elf_Sym;$/;"	t	class:__anon180::DyldELFObject	file:
EliminateBlockCases	Transforms/Utils/SimplifyCFG.cpp	/^static void EliminateBlockCases(BasicBlock *BB,$/;"	f	file:
EliminateCSE	CodeGen/MachineLICM.cpp	/^bool MachineLICM::EliminateCSE(MachineInstr *MI,$/;"	f	class:MachineLICM
EliminateDeadSwitchCases	Transforms/Utils/SimplifyCFG.cpp	/^static bool EliminateDeadSwitchCases(SwitchInst *SI) {$/;"	f	file:
EliminateDuplicatePHINodes	Transforms/Utils/Local.cpp	/^bool llvm::EliminateDuplicatePHINodes(BasicBlock *BB) {$/;"	f	class:llvm
EliminateFallThrough	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::EliminateFallThrough(Function &F) {$/;"	f	class:CodeGenPrepare
EliminateMostlyEmptyBlock	Transforms/Scalar/CodeGenPrepare.cpp	/^void CodeGenPrepare::EliminateMostlyEmptyBlock(BasicBlock *BB) {$/;"	f	class:CodeGenPrepare
EliminateMostlyEmptyBlocks	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::EliminateMostlyEmptyBlocks(Function &F) {$/;"	f	class:CodeGenPrepare
EliminatePHINodes	CodeGen/PHIElimination.cpp	/^bool PHIElimination::EliminatePHINodes(MachineFunction &MF,$/;"	f	class:PHIElimination
EliminateRecursiveTailCall	Transforms/Scalar/TailRecursionElimination.cpp	/^bool TailCallElim::EliminateRecursiveTailCall(CallInst *CI, ReturnInst *Ret,$/;"	f	class:TailCallElim
EliminateRegSequences	CodeGen/TwoAddressInstructionPass.cpp	/^bool TwoAddressInstructionPass::EliminateRegSequences() {$/;"	f	class:TwoAddressInstructionPass
EliminateUnconditionalJumpsToTop	CodeGen/CodePlacementOpt.cpp	/^bool CodePlacementOpt::EliminateUnconditionalJumpsToTop(MachineFunction &MF,$/;"	f	class:CodePlacementOpt
EltTy	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  typedef std::pair<BasicBlock*, unsigned> EltTy;$/;"	t	struct:llvm::DenseMapInfo	file:
EltsFromConsecutiveLoads	Target/X86/X86ISelLowering.cpp	/^static SDValue EltsFromConsecutiveLoads(EVT VT, SmallVectorImpl<SDValue> &Elts,$/;"	f	file:
EmissionDetails	ExecutionEngine/JIT/JITEmitter.cpp	/^    JITEvent_EmittedFunctionDetails EmissionDetails;$/;"	m	class:__anon182::JITEmitter	file:
Emit	CodeGen/AsmPrinter/DIE.cpp	/^void DIEAbbrev::Emit(AsmPrinter *AP) const {$/;"	f	class:DIEAbbrev
Emit	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::Emit(AsmPrinter *Asm, MCSymbol *SecBegin,$/;"	f	class:DwarfAccelTable
Emit	MC/MCDwarf.cpp	/^const MCSymbol *MCDwarfFileTable::Emit(MCStreamer *MCOS) {$/;"	f	class:MCDwarfFileTable
Emit	MC/MCDwarf.cpp	/^void MCDwarfFrameEmitter::Emit(MCStreamer &Streamer,$/;"	f	class:MCDwarfFrameEmitter
Emit	MC/MCDwarf.cpp	/^void MCDwarfLineAddr::Emit(MCStreamer *MCOS, int64_t LineDelta,$/;"	f	class:MCDwarfLineAddr
Emit	MC/MCDwarf.cpp	/^void MCGenDwarfInfo::Emit(MCStreamer *MCOS, const MCSymbol *LineSectionSymbol) {$/;"	f	class:MCGenDwarfInfo
Emit	MC/MCWin64EH.cpp	/^void MCWin64EHUnwindEmitter::Emit(MCStreamer &streamer) {$/;"	f	class:llvm::MCWin64EHUnwindEmitter
Emit	TableGen/StringMatcher.cpp	/^void StringMatcher::Emit(unsigned Indent) const {$/;"	f	class:StringMatcher
EmitAPInt	Bitcode/Writer/BitcodeWriter.cpp	/^static void EmitAPInt(SmallVectorImpl<uint64_t> &Vals,$/;"	f	file:
EmitAbbrev	MC/MCDwarf.cpp	/^static void EmitAbbrev(MCStreamer *MCOS, uint64_t Name, uint64_t Form) {$/;"	f	file:
EmitAbsDifference	MC/MCWin64EH.cpp	/^static void EmitAbsDifference(MCStreamer &streamer, MCSymbol *lhs,$/;"	f	namespace:llvm
EmitAbsValue	MC/MCStreamer.cpp	/^void MCStreamer::EmitAbsValue(const MCExpr *Value, unsigned Size,$/;"	f	class:MCStreamer
EmitAddTreeOfValues	Transforms/Scalar/Reassociate.cpp	/^static Value *EmitAddTreeOfValues(Instruction *I,$/;"	f	file:
EmitAdvanceLoc	MC/MCDwarf.cpp	/^void MCDwarfFrameEmitter::EmitAdvanceLoc(MCStreamer &Streamer,$/;"	f	class:MCDwarfFrameEmitter
EmitAlignment	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitAlignment(unsigned NumBits, const GlobalValue *GV) const {$/;"	f	class:AsmPrinter
EmitAlignment	Target/Hexagon/HexagonAsmPrinter.cpp	/^void HexagonAsmPrinter::EmitAlignment(unsigned NumBits,$/;"	f	class:HexagonAsmPrinter
EmitAlignment	Target/NVPTX/NVPTXAsmPrinter.h	/^  void EmitAlignment(unsigned NumBits, const GlobalValue *GV = 0) const {}$/;"	f	class:llvm::NVPTXAsmPrinter
EmitAnyX86InstComments	Target/X86/InstPrinter/X86InstComments.cpp	/^void llvm::EmitAnyX86InstComments(const MCInst *MI, raw_ostream &OS,$/;"	f	class:llvm
EmitAssemblerFlag	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitAssemblerFlag(MCAssemblerFlag Flag) {$/;"	f	class:MCAsmStreamer
EmitAssemblerFlag	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitAssemblerFlag(MCAssemblerFlag Flag) {$/;"	f	class:MCELFStreamer
EmitAssemblerFlag	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitAssemblerFlag(MCAssemblerFlag Flag) {$/;"	f	class:MCMachOStreamer
EmitAssemblerFlag	MC/MCNullStreamer.cpp	/^    virtual void EmitAssemblerFlag(MCAssemblerFlag Flag) {}$/;"	f	class:__anon217::MCNullStreamer
EmitAssemblerFlag	MC/MCPureStreamer.cpp	/^  virtual void EmitAssemblerFlag(MCAssemblerFlag Flag) {$/;"	f	class:__anon219::MCPureStreamer
EmitAssemblerFlag	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitAssemblerFlag(MCAssemblerFlag Flag) {$/;"	f	class:WinCOFFStreamer
EmitAssignment	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitAssignment(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:MCAsmStreamer
EmitAssignment	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitAssignment(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:MCELFStreamer
EmitAssignment	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitAssignment(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:MCMachOStreamer
EmitAssignment	MC/MCNullStreamer.cpp	/^    virtual void EmitAssignment(MCSymbol *Symbol, const MCExpr *Value) {}$/;"	f	class:__anon217::MCNullStreamer
EmitAssignment	MC/MCPureStreamer.cpp	/^void MCPureStreamer::EmitAssignment(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:MCPureStreamer
EmitAssignment	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitAssignment(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:WinCOFFStreamer
EmitAtomicBinary	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::EmitAtomicBinary(MachineInstr *MI, MachineBasicBlock *BB,$/;"	f	class:ARMTargetLowering
EmitAtomicBinary	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::EmitAtomicBinary(MachineInstr *MI, MachineBasicBlock *BB,$/;"	f	class:MipsTargetLowering
EmitAtomicBinary	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::EmitAtomicBinary(MachineInstr *MI, MachineBasicBlock *BB,$/;"	f	class:PPCTargetLowering
EmitAtomicBinary64	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::EmitAtomicBinary64(MachineInstr *MI, MachineBasicBlock *BB,$/;"	f	class:ARMTargetLowering
EmitAtomicBinaryMinMax	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::EmitAtomicBinaryMinMax(MachineInstr *MI,$/;"	f	class:ARMTargetLowering
EmitAtomicBinaryPartword	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::EmitAtomicBinaryPartword(MachineInstr *MI,$/;"	f	class:MipsTargetLowering
EmitAtomicCmpSwap	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::EmitAtomicCmpSwap(MachineInstr *MI,$/;"	f	class:ARMTargetLowering
EmitAtomicCmpSwap	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::EmitAtomicCmpSwap(MachineInstr *MI,$/;"	f	class:MipsTargetLowering
EmitAtomicCmpSwapPartword	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::EmitAtomicCmpSwapPartword(MachineInstr *MI,$/;"	f	class:MipsTargetLowering
EmitAtomicLoadArith	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitAtomicLoadArith(MachineInstr *MI,$/;"	f	class:X86TargetLowering
EmitAtomicLoadArith6432	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitAtomicLoadArith6432(MachineInstr *MI,$/;"	f	class:X86TargetLowering
EmitAttribute	Target/ARM/ARMAsmPrinter.cpp	/^    void EmitAttribute(unsigned Attribute, unsigned Value) {$/;"	f	class:__anon313::AsmAttributeEmitter
EmitAttribute	Target/ARM/ARMAsmPrinter.cpp	/^    void EmitAttribute(unsigned Attribute, unsigned Value) {$/;"	f	class:__anon313::ObjectAttributeEmitter
EmitBPOSGE32	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::EmitBPOSGE32(MachineInstr *MI, MachineBasicBlock *BB) const{$/;"	f	class:MipsTargetLowering
EmitBasicBlockStart	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitBasicBlockStart(const MachineBasicBlock *MBB) const {$/;"	f	class:AsmPrinter
EmitBranchForMergedCondition	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::EmitBranchForMergedCondition(const Value *Cond,$/;"	f	class:SelectionDAGBuilder
EmitBranchToAt	Target/PowerPC/PPCJITInfo.cpp	/^static void EmitBranchToAt(uint64_t At, uint64_t To, bool isCall, bool is64Bit){$/;"	f	file:
EmitBuckets	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::EmitBuckets(AsmPrinter *Asm) {$/;"	f	class:DwarfAccelTable
EmitByte	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  void EmitByte(unsigned char C, raw_ostream &OS) const {$/;"	f	class:__anon283::ARMMCCodeEmitter
EmitByte	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  void EmitByte(unsigned char C, unsigned &CurByte, raw_ostream &OS) const {$/;"	f	class:__anon454::MBlazeMCCodeEmitter
EmitByte	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^  void EmitByte(unsigned char C, raw_ostream &OS) const {$/;"	f	class:__anon432::MipsMCCodeEmitter
EmitByte	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  void EmitByte(unsigned char C, unsigned &CurByte, raw_ostream &OS) const {$/;"	f	class:__anon353::X86MCCodeEmitter
EmitBytes	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitBytes(StringRef Data, unsigned AddrSpace) {$/;"	f	class:MCAsmStreamer
EmitBytes	MC/MCNullStreamer.cpp	/^    virtual void EmitBytes(StringRef Data, unsigned AddrSpace) {}$/;"	f	class:__anon217::MCNullStreamer
EmitBytes	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitBytes(StringRef Data, unsigned AddrSpace) {$/;"	f	class:MCObjectStreamer
EmitBytes	MC/MCPureStreamer.cpp	/^void MCPureStreamer::EmitBytes(StringRef Data, unsigned AddrSpace) {$/;"	f	class:MCPureStreamer
EmitCFAByte	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^void AsmPrinter::EmitCFAByte(unsigned Val) const {$/;"	f	class:AsmPrinter
EmitCFIAdjustCfaOffset	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIAdjustCfaOffset(int64_t Adjustment) {$/;"	f	class:MCAsmStreamer
EmitCFIAdjustCfaOffset	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIAdjustCfaOffset(int64_t Adjustment) {$/;"	f	class:MCStreamer
EmitCFIDefCfa	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIDefCfa(int64_t Register, int64_t Offset) {$/;"	f	class:MCAsmStreamer
EmitCFIDefCfa	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIDefCfa(int64_t Register, int64_t Offset) {$/;"	f	class:MCStreamer
EmitCFIDefCfaOffset	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIDefCfaOffset(int64_t Offset) {$/;"	f	class:MCAsmStreamer
EmitCFIDefCfaOffset	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIDefCfaOffset(int64_t Offset) {$/;"	f	class:MCStreamer
EmitCFIDefCfaRegister	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIDefCfaRegister(int64_t Register) {$/;"	f	class:MCAsmStreamer
EmitCFIDefCfaRegister	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIDefCfaRegister(int64_t Register) {$/;"	f	class:MCStreamer
EmitCFIEndProc	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIEndProc() {$/;"	f	class:MCStreamer
EmitCFIEndProcImpl	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIEndProcImpl(MCDwarfFrameInfo &Frame) {$/;"	f	class:MCAsmStreamer
EmitCFIEndProcImpl	MC/MCNullStreamer.cpp	/^    virtual void EmitCFIEndProcImpl(MCDwarfFrameInfo &Frame) {$/;"	f	class:__anon217::MCNullStreamer
EmitCFIEndProcImpl	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitCFIEndProcImpl(MCDwarfFrameInfo &Frame) {$/;"	f	class:MCObjectStreamer
EmitCFIEndProcImpl	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIEndProcImpl(MCDwarfFrameInfo &Frame) {$/;"	f	class:MCStreamer
EmitCFIEscape	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIEscape(StringRef Values) {$/;"	f	class:MCStreamer
EmitCFIFrameMove	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^void AsmPrinter::EmitCFIFrameMove(const MachineMove &Move) const {$/;"	f	class:AsmPrinter
EmitCFIInstruction	MC/MCDwarf.cpp	/^void FrameEmitterImpl::EmitCFIInstruction(MCStreamer &Streamer,$/;"	f	class:FrameEmitterImpl
EmitCFIInstructions	MC/MCDwarf.cpp	/^void FrameEmitterImpl::EmitCFIInstructions(MCStreamer &streamer,$/;"	f	class:FrameEmitterImpl
EmitCFILsda	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFILsda(const MCSymbol *Sym, unsigned Encoding) {$/;"	f	class:MCAsmStreamer
EmitCFILsda	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFILsda(const MCSymbol *Sym, unsigned Encoding) {$/;"	f	class:MCStreamer
EmitCFIOffset	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIOffset(int64_t Register, int64_t Offset) {$/;"	f	class:MCAsmStreamer
EmitCFIOffset	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIOffset(int64_t Register, int64_t Offset) {$/;"	f	class:MCStreamer
EmitCFIPersonality	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIPersonality(const MCSymbol *Sym,$/;"	f	class:MCAsmStreamer
EmitCFIPersonality	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIPersonality(const MCSymbol *Sym,$/;"	f	class:MCStreamer
EmitCFIRelOffset	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIRelOffset(int64_t Register, int64_t Offset) {$/;"	f	class:MCAsmStreamer
EmitCFIRelOffset	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIRelOffset(int64_t Register, int64_t Offset) {$/;"	f	class:MCStreamer
EmitCFIRememberState	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIRememberState() {$/;"	f	class:MCAsmStreamer
EmitCFIRememberState	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIRememberState() {$/;"	f	class:MCStreamer
EmitCFIRestore	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIRestore(int64_t Register) {$/;"	f	class:MCStreamer
EmitCFIRestoreState	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIRestoreState() {$/;"	f	class:MCAsmStreamer
EmitCFIRestoreState	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIRestoreState() {$/;"	f	class:MCStreamer
EmitCFISameValue	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFISameValue(int64_t Register) {$/;"	f	class:MCAsmStreamer
EmitCFISameValue	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFISameValue(int64_t Register) {$/;"	f	class:MCStreamer
EmitCFISections	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFISections(bool EH, bool Debug) {$/;"	f	class:MCAsmStreamer
EmitCFISections	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFISections(bool EH, bool Debug) {$/;"	f	class:MCStreamer
EmitCFISignalFrame	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFISignalFrame() {$/;"	f	class:MCAsmStreamer
EmitCFISignalFrame	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFISignalFrame() {$/;"	f	class:MCStreamer
EmitCFIStartProc	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIStartProc() {$/;"	f	class:MCStreamer
EmitCFIStartProcImpl	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCFIStartProcImpl(MCDwarfFrameInfo &Frame) {$/;"	f	class:MCAsmStreamer
EmitCFIStartProcImpl	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitCFIStartProcImpl(MCDwarfFrameInfo &Frame) {$/;"	f	class:MCObjectStreamer
EmitCFIStartProcImpl	MC/MCStreamer.cpp	/^void MCStreamer::EmitCFIStartProcImpl(MCDwarfFrameInfo &Frame) {$/;"	f	class:MCStreamer
EmitCIE	MC/MCDwarf.cpp	/^const MCSymbol &FrameEmitterImpl::EmitCIE(MCStreamer &streamer,$/;"	f	class:FrameEmitterImpl
EmitCMP	Target/MSP430/MSP430ISelLowering.cpp	/^static SDValue EmitCMP(SDValue &LHS, SDValue &RHS, SDValue &TargetCC,$/;"	f	file:
EmitCOFFSecRel32	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCOFFSecRel32(MCSymbol const *Symbol) {$/;"	f	class:MCAsmStreamer
EmitCOFFSecRel32	MC/MCNullStreamer.cpp	/^    virtual void EmitCOFFSecRel32(MCSymbol const *Symbol) {}$/;"	f	class:__anon217::MCNullStreamer
EmitCOFFSecRel32	MC/MCStreamer.cpp	/^void MCStreamer::EmitCOFFSecRel32(MCSymbol const *Symbol) {$/;"	f	class:MCStreamer
EmitCOFFSecRel32	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitCOFFSecRel32(MCSymbol const *Symbol)$/;"	f	class:WinCOFFStreamer
EmitCOFFSymbolStorageClass	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCOFFSymbolStorageClass (int StorageClass) {$/;"	f	class:MCAsmStreamer
EmitCOFFSymbolStorageClass	MC/MCELFStreamer.cpp	/^  virtual void EmitCOFFSymbolStorageClass(int StorageClass) {$/;"	f	class:__anon215::MCELFStreamer
EmitCOFFSymbolStorageClass	MC/MCMachOStreamer.cpp	/^  virtual void EmitCOFFSymbolStorageClass(int StorageClass) {$/;"	f	class:__anon221::MCMachOStreamer
EmitCOFFSymbolStorageClass	MC/MCNullStreamer.cpp	/^    virtual void EmitCOFFSymbolStorageClass(int StorageClass) {}$/;"	f	class:__anon217::MCNullStreamer
EmitCOFFSymbolStorageClass	MC/MCPureStreamer.cpp	/^  virtual void EmitCOFFSymbolStorageClass(int StorageClass) {$/;"	f	class:__anon219::MCPureStreamer
EmitCOFFSymbolStorageClass	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitCOFFSymbolStorageClass(int StorageClass) {$/;"	f	class:WinCOFFStreamer
EmitCOFFSymbolType	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCOFFSymbolType (int Type) {$/;"	f	class:MCAsmStreamer
EmitCOFFSymbolType	MC/MCELFStreamer.cpp	/^  virtual void EmitCOFFSymbolType(int Type) {$/;"	f	class:__anon215::MCELFStreamer
EmitCOFFSymbolType	MC/MCMachOStreamer.cpp	/^  virtual void EmitCOFFSymbolType(int Type) {$/;"	f	class:__anon221::MCMachOStreamer
EmitCOFFSymbolType	MC/MCNullStreamer.cpp	/^    virtual void EmitCOFFSymbolType(int Type) {}$/;"	f	class:__anon217::MCNullStreamer
EmitCOFFSymbolType	MC/MCPureStreamer.cpp	/^  virtual void EmitCOFFSymbolType(int Type) {$/;"	f	class:__anon219::MCPureStreamer
EmitCOFFSymbolType	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitCOFFSymbolType(int Type) {$/;"	f	class:WinCOFFStreamer
EmitCamlGlobal	CodeGen/AsmPrinter/OcamlGCPrinter.cpp	/^static void EmitCamlGlobal(const Module &M, AsmPrinter &AP, const char *Id) {$/;"	f	file:
EmitCantUnwind	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCantUnwind() {$/;"	f	class:MCAsmStreamer
EmitCantUnwind	MC/MCStreamer.cpp	/^void MCStreamer::EmitCantUnwind() {$/;"	f	class:MCStreamer
EmitCmp	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::EmitCmp(SDValue Op0, SDValue Op1, unsigned X86CC,$/;"	f	class:X86TargetLowering
EmitCodeAlignment	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCodeAlignment(unsigned ByteAlignment,$/;"	f	class:MCAsmStreamer
EmitCodeAlignment	MC/MCNullStreamer.cpp	/^    virtual void EmitCodeAlignment(unsigned ByteAlignment,$/;"	f	class:__anon217::MCNullStreamer
EmitCodeAlignment	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitCodeAlignment(unsigned ByteAlignment,$/;"	f	class:MCObjectStreamer
EmitCodeAlignment	MC/MCPureStreamer.cpp	/^void MCPureStreamer::EmitCodeAlignment(unsigned ByteAlignment,$/;"	f	class:MCPureStreamer
EmitCommentsAndEOL	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCommentsAndEOL() {$/;"	f	class:MCAsmStreamer
EmitCommonEHFrame	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^JITDwarfEmitter::EmitCommonEHFrame(const Function* Personality) const {$/;"	f	class:JITDwarfEmitter
EmitCommonSymbol	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:MCAsmStreamer
EmitCommonSymbol	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:MCELFStreamer
EmitCommonSymbol	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:MCMachOStreamer
EmitCommonSymbol	MC/MCNullStreamer.cpp	/^    virtual void EmitCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:__anon217::MCNullStreamer
EmitCommonSymbol	MC/MCPureStreamer.cpp	/^  virtual void EmitCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:__anon219::MCPureStreamer
EmitCommonSymbol	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:WinCOFFStreamer
EmitCompactUnwind	MC/MCDwarf.cpp	/^bool FrameEmitterImpl::EmitCompactUnwind(MCStreamer &Streamer,$/;"	f	class:FrameEmitterImpl
EmitCompactUnwindEncoding	MC/MCStreamer.cpp	/^void MCStreamer::EmitCompactUnwindEncoding(uint32_t CompactUnwindEncoding) {$/;"	f	class:MCStreamer
EmitConstant	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  void EmitConstant(uint64_t Val, unsigned Size, raw_ostream &OS) const {$/;"	f	class:__anon283::ARMMCCodeEmitter
EmitConstant	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  void EmitConstant(uint64_t Val, unsigned Size, unsigned &CurByte,$/;"	f	class:__anon454::MBlazeMCCodeEmitter
EmitConstant	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  void EmitConstant(uint64_t Val, unsigned Size, unsigned &CurByte,$/;"	f	class:__anon353::X86MCCodeEmitter
EmitConstantPool	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitConstantPool() {$/;"	f	class:AsmPrinter
EmitCopyFromReg	CodeGen/SelectionDAG/InstrEmitter.cpp	/^EmitCopyFromReg(SDNode *Node, unsigned ResNo, bool IsClone, bool IsCloned,$/;"	f	class:InstrEmitter
EmitCopyToRegClassNode	CodeGen/SelectionDAG/InstrEmitter.cpp	/^InstrEmitter::EmitCopyToRegClassNode(SDNode *Node,$/;"	f	class:InstrEmitter
EmitCustomAtomic	Target/MBlaze/MBlazeISelLowering.cpp	/^MBlazeTargetLowering::EmitCustomAtomic(MachineInstr *MI,$/;"	f	class:MBlazeTargetLowering
EmitCustomSelect	Target/MBlaze/MBlazeISelLowering.cpp	/^MBlazeTargetLowering::EmitCustomSelect(MachineInstr *MI,$/;"	f	class:MBlazeTargetLowering
EmitCustomShift	Target/MBlaze/MBlazeISelLowering.cpp	/^MBlazeTargetLowering::EmitCustomShift(MachineInstr *MI,$/;"	f	class:MBlazeTargetLowering
EmitDarwinBCHeaderAndTrailer	Bitcode/Writer/BitcodeWriter.cpp	/^static void EmitDarwinBCHeaderAndTrailer(SmallVectorImpl<char> &Buffer,$/;"	f	file:
EmitData	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::EmitData(AsmPrinter *Asm, DwarfDebug *D) {$/;"	f	class:DwarfAccelTable
EmitData	Transforms/Instrumentation/GCOVProfiling.cpp	/^    bool EmitData;$/;"	m	class:__anon489::GCOVProfiler	file:
EmitDataRegion	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitDataRegion(MCDataRegionType Kind) {$/;"	f	class:MCAsmStreamer
EmitDataRegion	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitDataRegion(DataRegionData::KindTy Kind) {$/;"	f	class:MCMachOStreamer
EmitDataRegion	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitDataRegion(MCDataRegionType Kind) {$/;"	f	class:MCMachOStreamer
EmitDataRegionEnd	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitDataRegionEnd() {$/;"	f	class:MCMachOStreamer
EmitDbgValue	CodeGen/SelectionDAG/InstrEmitter.cpp	/^InstrEmitter::EmitDbgValue(SDDbgValue *SD,$/;"	f	class:InstrEmitter
EmitDebugARanges	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::EmitDebugARanges() {$/;"	f	class:DwarfDebug
EmitDwarfAdvanceFrameAddr	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitDwarfAdvanceFrameAddr(const MCSymbol *LastLabel,$/;"	f	class:MCAsmStreamer
EmitDwarfAdvanceFrameAddr	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitDwarfAdvanceFrameAddr(const MCSymbol *LastLabel,$/;"	f	class:MCObjectStreamer
EmitDwarfAdvanceLineAddr	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitDwarfAdvanceLineAddr(int64_t LineDelta,$/;"	f	class:MCAsmStreamer
EmitDwarfAdvanceLineAddr	MC/MCNullStreamer.cpp	/^    virtual void EmitDwarfAdvanceLineAddr(int64_t LineDelta,$/;"	f	class:__anon217::MCNullStreamer
EmitDwarfAdvanceLineAddr	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitDwarfAdvanceLineAddr(int64_t LineDelta,$/;"	f	class:MCObjectStreamer
EmitDwarfFileDirective	MC/MCAsmStreamer.cpp	/^bool MCAsmStreamer::EmitDwarfFileDirective(unsigned FileNo, StringRef Directory,$/;"	f	class:MCAsmStreamer
EmitDwarfFileDirective	MC/MCNullStreamer.cpp	/^    virtual bool EmitDwarfFileDirective(unsigned FileNo, StringRef Directory,$/;"	f	class:__anon217::MCNullStreamer
EmitDwarfFileDirective	MC/MCPureStreamer.cpp	/^  virtual bool EmitDwarfFileDirective(unsigned FileNo, StringRef Directory,$/;"	f	class:__anon219::MCPureStreamer
EmitDwarfFileDirective	MC/MCStreamer.cpp	/^bool MCStreamer::EmitDwarfFileDirective(unsigned FileNo,$/;"	f	class:MCStreamer
EmitDwarfLineTable	MC/MCDwarf.cpp	/^static inline void EmitDwarfLineTable(MCStreamer *MCOS,$/;"	f	file:
EmitDwarfLocDirective	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitDwarfLocDirective(unsigned FileNo, unsigned Line,$/;"	f	class:MCAsmStreamer
EmitDwarfLocDirective	MC/MCNullStreamer.cpp	/^    virtual void EmitDwarfLocDirective(unsigned FileNo, unsigned Line,$/;"	f	class:__anon217::MCNullStreamer
EmitDwarfLocDirective	MC/MCStreamer.cpp	/^void MCStreamer::EmitDwarfLocDirective(unsigned FileNo, unsigned Line,$/;"	f	class:MCStreamer
EmitDwarfRegOp	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitDwarfRegOp(const MachineLocation &MLoc) const {$/;"	f	class:AsmPrinter
EmitDwarfRegOp	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitDwarfRegOp(const MachineLocation &MLoc) const {$/;"	f	class:ARMAsmPrinter
EmitDwarfSetLineAddr	MC/MCStreamer.cpp	/^void MCStreamer::EmitDwarfSetLineAddr(int64_t LineDelta,$/;"	f	class:MCStreamer
EmitDwarfTable	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^unsigned char* JITDwarfEmitter::EmitDwarfTable(MachineFunction& F,$/;"	f	class:JITDwarfEmitter
EmitEHFrame	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^JITDwarfEmitter::EmitEHFrame(const Function* Personality,$/;"	f	class:JITDwarfEmitter
EmitEHSymAttributes	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitEHSymAttributes(const MCSymbol *Symbol,$/;"	f	class:MCAsmStreamer
EmitEHSymAttributes	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitEHSymAttributes(const MCSymbol *Symbol,$/;"	f	class:MCMachOStreamer
EmitEHSymAttributes	MC/MCStreamer.cpp	/^void MCStreamer::EmitEHSymAttributes(const MCSymbol *Symbol,$/;"	f	class:MCStreamer
EmitELFSize	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitELFSize(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:MCAsmStreamer
EmitELFSize	MC/MCELFStreamer.cpp	/^  virtual void EmitELFSize(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:__anon215::MCELFStreamer
EmitELFSize	MC/MCMachOStreamer.cpp	/^  virtual void EmitELFSize(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:__anon221::MCMachOStreamer
EmitELFSize	MC/MCNullStreamer.cpp	/^    virtual void EmitELFSize(MCSymbol *Symbol, const MCExpr *Value) {}$/;"	f	class:__anon217::MCNullStreamer
EmitELFSize	MC/MCPureStreamer.cpp	/^  virtual void EmitELFSize(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:__anon219::MCPureStreamer
EmitELFSize	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitELFSize(MCSymbol *Symbol, const MCExpr *Value) {$/;"	f	class:WinCOFFStreamer
EmitEOL	MC/MCAsmStreamer.cpp	/^  inline void EmitEOL() {$/;"	f	class:__anon214::MCAsmStreamer
EmitEncodingByte	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^void AsmPrinter::EmitEncodingByte(unsigned Val, const char *Desc) const {$/;"	f	class:AsmPrinter
EmitEncodingByte	MC/MCDwarf.cpp	/^static void EmitEncodingByte(MCStreamer &Streamer, unsigned Encoding,$/;"	f	file:
EmitEndOfAsmFile	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitEndOfAsmFile(Module &M) {$/;"	f	class:ARMAsmPrinter
EmitEndOfAsmFile	Target/X86/X86AsmPrinter.cpp	/^void X86AsmPrinter::EmitEndOfAsmFile(Module &M) {$/;"	f	class:X86AsmPrinter
EmitExceptionTable	CodeGen/AsmPrinter/DwarfException.cpp	/^void DwarfException::EmitExceptionTable() {$/;"	f	class:DwarfException
EmitExceptionTable	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^unsigned char* JITDwarfEmitter::EmitExceptionTable(MachineFunction* MF,$/;"	f	class:JITDwarfEmitter
EmitFDE	MC/MCDwarf.cpp	/^MCSymbol *FrameEmitterImpl::EmitFDE(MCStreamer &streamer,$/;"	f	class:FrameEmitterImpl
EmitFPutC	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitFPutC(Value *Char, Value *File, IRBuilder<> &B,$/;"	f	class:llvm
EmitFPutS	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitFPutS(Value *Str, Value *File, IRBuilder<> &B,$/;"	f	class:llvm
EmitFWrite	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitFWrite(Value *Ptr, Value *Size, Value *File,$/;"	f	class:llvm
EmitFileDirective	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitFileDirective(StringRef Filename) {$/;"	f	class:MCAsmStreamer
EmitFileDirective	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitFileDirective(StringRef Filename) {$/;"	f	class:MCELFStreamer
EmitFileDirective	MC/MCMachOStreamer.cpp	/^  virtual void EmitFileDirective(StringRef Filename) {$/;"	f	class:__anon221::MCMachOStreamer
EmitFileDirective	MC/MCNullStreamer.cpp	/^    virtual void EmitFileDirective(StringRef Filename) {}$/;"	f	class:__anon217::MCNullStreamer
EmitFileDirective	MC/MCPureStreamer.cpp	/^  virtual void EmitFileDirective(StringRef Filename) {$/;"	f	class:__anon219::MCPureStreamer
EmitFileDirective	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitFileDirective(StringRef Filename) {$/;"	f	class:WinCOFFStreamer
EmitFill	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitFill(uint64_t NumBytes, uint8_t FillValue,$/;"	f	class:MCAsmStreamer
EmitFill	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitFill(uint64_t NumBytes, uint8_t FillValue,$/;"	f	class:MCObjectStreamer
EmitFill	MC/MCStreamer.cpp	/^void MCStreamer::EmitFill(uint64_t NumBytes, uint8_t FillValue,$/;"	f	class:MCStreamer
EmitFnEnd	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitFnEnd() {$/;"	f	class:MCAsmStreamer
EmitFnEnd	MC/MCStreamer.cpp	/^void MCStreamer::EmitFnEnd() {$/;"	f	class:MCStreamer
EmitFnStart	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitFnStart() {$/;"	f	class:MCAsmStreamer
EmitFnStart	MC/MCStreamer.cpp	/^void MCStreamer::EmitFnStart() {$/;"	f	class:MCStreamer
EmitFrameMoves	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^JITDwarfEmitter::EmitFrameMoves(intptr_t BaseLabelPtr,$/;"	f	class:JITDwarfEmitter
EmitFrames	MC/MCStreamer.cpp	/^void MCStreamer::EmitFrames(bool usingCFI) {$/;"	f	class:MCStreamer
EmitFuncArgumentDbgValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::EmitFuncArgumentDbgValue(const Value *V, MDNode *Variable,$/;"	f	class:SelectionDAGBuilder
EmitFunctionBody	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitFunctionBody() {$/;"	f	class:AsmPrinter
EmitFunctionBodyEnd	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitFunctionBodyEnd() {$/;"	f	class:ARMAsmPrinter
EmitFunctionBodyEnd	Target/MBlaze/MBlazeAsmPrinter.cpp	/^void MBlazeAsmPrinter::EmitFunctionBodyEnd() {$/;"	f	class:MBlazeAsmPrinter
EmitFunctionBodyEnd	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::EmitFunctionBodyEnd() {$/;"	f	class:MipsAsmPrinter
EmitFunctionBodyEnd	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::EmitFunctionBodyEnd() {$/;"	f	class:NVPTXAsmPrinter
EmitFunctionBodyEnd	Target/PowerPC/PPCAsmPrinter.cpp	/^void PPCLinuxAsmPrinter::EmitFunctionBodyEnd() {$/;"	f	class:PPCLinuxAsmPrinter
EmitFunctionBodyEnd	Target/XCore/XCoreAsmPrinter.cpp	/^void XCoreAsmPrinter::EmitFunctionBodyEnd() {$/;"	f	class:XCoreAsmPrinter
EmitFunctionBodyStart	Target/MBlaze/MBlazeAsmPrinter.cpp	/^void MBlazeAsmPrinter::EmitFunctionBodyStart() {$/;"	f	class:MBlazeAsmPrinter
EmitFunctionBodyStart	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::EmitFunctionBodyStart() {$/;"	f	class:MipsAsmPrinter
EmitFunctionBodyStart	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::EmitFunctionBodyStart() {$/;"	f	class:NVPTXAsmPrinter
EmitFunctionEntryCode	Target/X86/X86ISelDAGToDAG.cpp	/^void X86DAGToDAGISel::EmitFunctionEntryCode() {$/;"	f	class:X86DAGToDAGISel
EmitFunctionEntryLabel	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitFunctionEntryLabel() {$/;"	f	class:AsmPrinter
EmitFunctionEntryLabel	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitFunctionEntryLabel() {$/;"	f	class:ARMAsmPrinter
EmitFunctionEntryLabel	Target/MBlaze/MBlazeAsmPrinter.cpp	/^void MBlazeAsmPrinter::EmitFunctionEntryLabel() {$/;"	f	class:MBlazeAsmPrinter
EmitFunctionEntryLabel	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::EmitFunctionEntryLabel() {$/;"	f	class:MipsAsmPrinter
EmitFunctionEntryLabel	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::EmitFunctionEntryLabel() {$/;"	f	class:NVPTXAsmPrinter
EmitFunctionEntryLabel	Target/PowerPC/PPCAsmPrinter.cpp	/^void PPCLinuxAsmPrinter::EmitFunctionEntryLabel() {$/;"	f	class:PPCLinuxAsmPrinter
EmitFunctionEntryLabel	Target/XCore/XCoreAsmPrinter.cpp	/^void XCoreAsmPrinter::EmitFunctionEntryLabel() {$/;"	f	class:XCoreAsmPrinter
EmitFunctionHeader	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitFunctionHeader() {$/;"	f	class:AsmPrinter
EmitFunctionStubs	Target/PowerPC/PPCAsmPrinter.cpp	/^EmitFunctionStubs(const MachineModuleInfoMachO::SymbolListTy &Stubs) {$/;"	f	class:PPCDarwinAsmPrinter
EmitGCCInlineAsmStr	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^static void EmitGCCInlineAsmStr(const char *AsmStr, const MachineInstr *MI,$/;"	f	file:
EmitGEPOffset	Transforms/InstCombine/InstructionCombining.cpp	/^Value *InstCombiner::EmitGEPOffset(User *GEP) {$/;"	f	class:InstCombiner
EmitGPRel32Value	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitGPRel32Value(const MCExpr *Value) {$/;"	f	class:MCAsmStreamer
EmitGPRel32Value	MC/MCNullStreamer.cpp	/^    virtual void EmitGPRel32Value(const MCExpr *Value) {}$/;"	f	class:__anon217::MCNullStreamer
EmitGPRel32Value	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitGPRel32Value(const MCExpr *Value) {$/;"	f	class:MCObjectStreamer
EmitGPRel32Value	MC/MCStreamer.cpp	/^void MCStreamer::EmitGPRel32Value(const MCExpr *Value) {$/;"	f	class:MCStreamer
EmitGPRel64Value	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitGPRel64Value(const MCExpr *Value) {$/;"	f	class:MCAsmStreamer
EmitGPRel64Value	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitGPRel64Value(const MCExpr *Value) {$/;"	f	class:MCObjectStreamer
EmitGPRel64Value	MC/MCStreamer.cpp	/^void MCStreamer::EmitGPRel64Value(const MCExpr *Value) {$/;"	f	class:MCStreamer
EmitGenDwarfAbbrev	MC/MCDwarf.cpp	/^static void EmitGenDwarfAbbrev(MCStreamer *MCOS) {$/;"	f	file:
EmitGenDwarfAranges	MC/MCDwarf.cpp	/^static void EmitGenDwarfAranges(MCStreamer *MCOS) {$/;"	f	file:
EmitGenDwarfInfo	MC/MCDwarf.cpp	/^static void EmitGenDwarfInfo(MCStreamer *MCOS,$/;"	f	file:
EmitGlobalConstant	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitGlobalConstant(const Constant *CV, unsigned AddrSpace) {$/;"	f	class:AsmPrinter
EmitGlobalVariable	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitGlobalVariable(const GlobalVariable *GV) {$/;"	f	class:AsmPrinter
EmitGlobalVariable	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::EmitGlobalVariable(const GlobalVariable *GV) {$/;"	f	class:ExecutionEngine
EmitGlobalVariable	Target/XCore/XCoreAsmPrinter.cpp	/^void XCoreAsmPrinter::EmitGlobalVariable(const GlobalVariable *GV) {$/;"	f	class:XCoreAsmPrinter
EmitHandlerData	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitHandlerData() {$/;"	f	class:MCAsmStreamer
EmitHandlerData	MC/MCStreamer.cpp	/^void MCStreamer::EmitHandlerData() {$/;"	f	class:MCStreamer
EmitHashes	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::EmitHashes(AsmPrinter *Asm) {$/;"	f	class:DwarfAccelTable
EmitHeader	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::EmitHeader(AsmPrinter *Asm) {$/;"	f	class:DwarfAccelTable
EmitIMM	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^EmitIMM(const MCInst &MI, unsigned &CurByte,raw_ostream &OS) const {$/;"	f	class:MBlazeMCCodeEmitter
EmitIMM	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^EmitIMM(const MCOperand &imm, unsigned &CurByte, raw_ostream &OS) const {$/;"	f	class:MBlazeMCCodeEmitter
EmitImmediate	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^EmitImmediate(const MCInst &MI, unsigned opNo, bool pcrel, unsigned &CurByte,$/;"	f	class:MBlazeMCCodeEmitter
EmitImmediate	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^EmitImmediate(const MCOperand &DispOp, SMLoc Loc, unsigned Size,$/;"	f	class:X86MCCodeEmitter
EmitInlineAsm	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^void AsmPrinter::EmitInlineAsm(StringRef Str, const MDNode *LocMDNode,$/;"	f	class:AsmPrinter
EmitInlineAsm	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^void AsmPrinter::EmitInlineAsm(const MachineInstr *MI) const {$/;"	f	class:AsmPrinter
EmitInstToData	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitInstToData(const MCInst &Inst) {$/;"	f	class:MCELFStreamer
EmitInstToData	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitInstToData(const MCInst &Inst) {$/;"	f	class:MCMachOStreamer
EmitInstToData	MC/MCPureStreamer.cpp	/^void MCPureStreamer::EmitInstToData(const MCInst &Inst) {$/;"	f	class:MCPureStreamer
EmitInstToData	MC/WinCOFFStreamer.cpp	/^  virtual void EmitInstToData(const MCInst &Inst) {$/;"	f	class:__anon218::WinCOFFStreamer	file:
EmitInstToFragment	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitInstToFragment(const MCInst &Inst) {$/;"	f	class:MCELFStreamer
EmitInstToFragment	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitInstToFragment(const MCInst &Inst) {$/;"	f	class:MCObjectStreamer
EmitInstToFragment	MC/MCPureStreamer.cpp	/^void MCPureStreamer::EmitInstToFragment(const MCInst &Inst) {$/;"	f	class:MCPureStreamer
EmitInstToFragment	MC/WinCOFFStreamer.cpp	/^  virtual void EmitInstToFragment(const MCInst &Inst) {$/;"	f	class:__anon218::WinCOFFStreamer	file:
EmitInstrWithCustomInserter	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^TargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:TargetLowering
EmitInstrWithCustomInserter	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:ARMTargetLowering
EmitInstrWithCustomInserter	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:HexagonTargetLowering
EmitInstrWithCustomInserter	Target/MBlaze/MBlazeISelLowering.cpp	/^MBlazeTargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:MBlazeTargetLowering
EmitInstrWithCustomInserter	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:MSP430TargetLowering
EmitInstrWithCustomInserter	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:MipsTargetLowering
EmitInstrWithCustomInserter	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:PPCTargetLowering
EmitInstrWithCustomInserter	Target/Sparc/SparcISelLowering.cpp	/^SparcTargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:SparcTargetLowering
EmitInstrWithCustomInserter	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:X86TargetLowering
EmitInstrWithCustomInserter	Target/XCore/XCoreISelLowering.cpp	/^XCoreTargetLowering::EmitInstrWithCustomInserter(MachineInstr *MI,$/;"	f	class:XCoreTargetLowering
EmitInstruction	CodeGen/ScoreboardHazardRecognizer.cpp	/^void ScoreboardHazardRecognizer::EmitInstruction(SUnit *SU) {$/;"	f	class:ScoreboardHazardRecognizer
EmitInstruction	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitInstruction(const MCInst &Inst) {$/;"	f	class:MCAsmStreamer
EmitInstruction	MC/MCNullStreamer.cpp	/^    virtual void EmitInstruction(const MCInst &Inst) {}$/;"	f	class:__anon217::MCNullStreamer
EmitInstruction	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitInstruction(const MCInst &Inst) {$/;"	f	class:MCObjectStreamer
EmitInstruction	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitInstruction(const MCInst &Instruction) {$/;"	f	class:WinCOFFStreamer
EmitInstruction	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:ARMAsmPrinter
EmitInstruction	Target/ARM/ARMHazardRecognizer.cpp	/^void ARMHazardRecognizer::EmitInstruction(SUnit *SU) {$/;"	f	class:ARMHazardRecognizer
EmitInstruction	Target/CellSPU/SPUAsmPrinter.cpp	/^    void EmitInstruction(const MachineInstr *MI) {$/;"	f	class:__anon413::SPUAsmPrinter
EmitInstruction	Target/CellSPU/SPUHazardRecognizers.cpp	/^void SPUHazardRecognizer::EmitInstruction(SUnit *SU)$/;"	f	class:SPUHazardRecognizer
EmitInstruction	Target/Hexagon/HexagonAsmPrinter.cpp	/^void HexagonAsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:HexagonAsmPrinter
EmitInstruction	Target/MBlaze/MBlazeAsmPrinter.cpp	/^void MBlazeAsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:MBlazeAsmPrinter
EmitInstruction	Target/MSP430/MSP430AsmPrinter.cpp	/^void MSP430AsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:MSP430AsmPrinter
EmitInstruction	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^  void EmitInstruction(uint64_t Val, unsigned Size, raw_ostream &OS) const {$/;"	f	class:__anon432::MipsMCCodeEmitter
EmitInstruction	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:MipsAsmPrinter
EmitInstruction	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:NVPTXAsmPrinter
EmitInstruction	Target/PowerPC/PPCAsmPrinter.cpp	/^void PPCAsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:PPCAsmPrinter
EmitInstruction	Target/PowerPC/PPCHazardRecognizers.cpp	/^void PPCHazardRecognizer970::EmitInstruction(SUnit *SU) {$/;"	f	class:PPCHazardRecognizer970
EmitInstruction	Target/PowerPC/PPCHazardRecognizers.cpp	/^void PPCScoreboardHazardRecognizer::EmitInstruction(SUnit *SU) {$/;"	f	class:PPCScoreboardHazardRecognizer
EmitInstruction	Target/Sparc/SparcAsmPrinter.cpp	/^    virtual void EmitInstruction(const MachineInstr *MI) {$/;"	f	class:__anon441::SparcAsmPrinter
EmitInstruction	Target/X86/X86MCInstLower.cpp	/^void X86AsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:X86AsmPrinter
EmitInstruction	Target/XCore/XCoreAsmPrinter.cpp	/^void XCoreAsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:XCoreAsmPrinter
EmitInt16	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitInt16(int Value) const {$/;"	f	class:AsmPrinter
EmitInt32	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitInt32(int Value) const {$/;"	f	class:AsmPrinter
EmitInt8	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitInt8(int Value) const {$/;"	f	class:AsmPrinter
EmitIntValue	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitIntValue(uint64_t Value, unsigned Size,$/;"	f	class:MCAsmStreamer
EmitIntValue	MC/MCStreamer.cpp	/^void MCStreamer::EmitIntValue(uint64_t Value, unsigned Size,$/;"	f	class:MCStreamer
EmitJump2Table	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitJump2Table(const MachineInstr *MI) {$/;"	f	class:ARMAsmPrinter
EmitJumpTable	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitJumpTable(const MachineInstr *MI) {$/;"	f	class:ARMAsmPrinter
EmitJumpTableEntry	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitJumpTableEntry(const MachineJumpTableInfo *MJTI,$/;"	f	class:AsmPrinter
EmitJumpTableInfo	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitJumpTableInfo() {$/;"	f	class:AsmPrinter
EmitLLVMUsedList	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitLLVMUsedList(const Constant *List) {$/;"	f	class:AsmPrinter
EmitLabel	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitLabel(MCSymbol *Symbol) {$/;"	f	class:MCAsmStreamer
EmitLabel	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitLabel(MCSymbol *Symbol) {$/;"	f	class:MCELFStreamer
EmitLabel	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitLabel(MCSymbol *Symbol) {$/;"	f	class:MCMachOStreamer
EmitLabel	MC/MCNullStreamer.cpp	/^    virtual void EmitLabel(MCSymbol *Symbol) {$/;"	f	class:__anon217::MCNullStreamer
EmitLabel	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitLabel(MCSymbol *Symbol) {$/;"	f	class:MCObjectStreamer
EmitLabel	MC/MCPureStreamer.cpp	/^void MCPureStreamer::EmitLabel(MCSymbol *Symbol) {$/;"	f	class:MCPureStreamer
EmitLabel	MC/MCStreamer.cpp	/^void MCStreamer::EmitLabel(MCSymbol *Symbol) {$/;"	f	class:MCStreamer
EmitLabel	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitLabel(MCSymbol *Symbol) {$/;"	f	class:WinCOFFStreamer
EmitLabelDifference	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitLabelDifference(const MCSymbol *Hi, const MCSymbol *Lo,$/;"	f	class:AsmPrinter
EmitLabelOffsetDifference	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitLabelOffsetDifference(const MCSymbol *Hi, uint64_t Offset,$/;"	f	class:AsmPrinter
EmitLabelPlusOffset	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitLabelPlusOffset(const MCSymbol *Label, uint64_t Offset,$/;"	f	class:AsmPrinter
EmitLinkage	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitLinkage(unsigned Linkage, MCSymbol *GVSym) const {$/;"	f	class:AsmPrinter
EmitLiveInCopies	CodeGen/MachineRegisterInfo.cpp	/^MachineRegisterInfo::EmitLiveInCopies(MachineBasicBlock *EntryMBB,$/;"	f	class:MachineRegisterInfo
EmitLocalCommonSymbol	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitLocalCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:MCAsmStreamer
EmitLocalCommonSymbol	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitLocalCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:MCELFStreamer
EmitLocalCommonSymbol	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitLocalCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:MCMachOStreamer
EmitLocalCommonSymbol	MC/MCNullStreamer.cpp	/^    virtual void EmitLocalCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:__anon217::MCNullStreamer
EmitLocalCommonSymbol	MC/MCPureStreamer.cpp	/^  virtual void EmitLocalCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:__anon219::MCPureStreamer
EmitLocalCommonSymbol	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitLocalCommonSymbol(MCSymbol *Symbol, uint64_t Size,$/;"	f	class:WinCOFFStreamer
EmitLoweredSegAlloca	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitLoweredSegAlloca(MachineInstr *MI, MachineBasicBlock *BB,$/;"	f	class:X86TargetLowering
EmitLoweredSelect	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitLoweredSelect(MachineInstr *MI,$/;"	f	class:X86TargetLowering
EmitLoweredTLSCall	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitLoweredTLSCall(MachineInstr *MI,$/;"	f	class:X86TargetLowering
EmitLoweredWinAlloca	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitLoweredWinAlloca(MachineInstr *MI,$/;"	f	class:X86TargetLowering
EmitMSInlineAsmStr	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^static void EmitMSInlineAsmStr(const char *AsmStr, const MachineInstr *MI,$/;"	f	file:
EmitMachineConstantPoolValue	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitMachineConstantPoolValue(MachineConstantPoolValue *MCPV) {$/;"	f	class:AsmPrinter
EmitMachineConstantPoolValue	Target/ARM/ARMAsmPrinter.cpp	/^EmitMachineConstantPoolValue(MachineConstantPoolValue *MCPV) {$/;"	f	class:ARMAsmPrinter
EmitMachineNode	CodeGen/SelectionDAG/InstrEmitter.cpp	/^EmitMachineNode(SDNode *Node, bool IsClone, bool IsCloned,$/;"	f	class:InstrEmitter
EmitMemChr	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitMemChr(Value *Ptr, Value *Val,$/;"	f	class:llvm
EmitMemCmp	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitMemCmp(Value *Ptr1, Value *Ptr2,$/;"	f	class:llvm
EmitMemCpyChk	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitMemCpyChk(Value *Dst, Value *Src, Value *Len, Value *ObjSize,$/;"	f	class:llvm
EmitMemModRMByte	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^void X86MCCodeEmitter::EmitMemModRMByte(const MCInst &MI, unsigned Op,$/;"	f	class:X86MCCodeEmitter
EmitMonitor	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitMonitor(MachineInstr *MI, MachineBasicBlock *BB) const {$/;"	f	class:X86TargetLowering
EmitNOAT	Target/Mips/MipsMachineFunction.h	/^  bool EmitNOAT;$/;"	m	class:llvm::MipsFunctionInfo
EmitNode	CodeGen/SelectionDAG/InstrEmitter.h	/^  void EmitNode(SDNode *Node, bool IsClone, bool IsCloned,$/;"	f	class:llvm::InstrEmitter
EmitNode	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::EmitNode(SUnit *SU) {$/;"	f	class:ScheduleDAGRRList
EmitNoop	Target/CellSPU/SPUHazardRecognizers.cpp	/^void SPUHazardRecognizer::EmitNoop()$/;"	f	class:SPUHazardRecognizer
EmitNotes	Transforms/Instrumentation/GCOVProfiling.cpp	/^    bool EmitNotes;$/;"	m	class:__anon489::GCOVProfiler	file:
EmitOffsets	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::EmitOffsets(AsmPrinter *Asm, MCSymbol *SecBegin) {$/;"	f	class:DwarfAccelTable
EmitOpcodePrefix	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^void X86MCCodeEmitter::EmitOpcodePrefix(uint64_t TSFlags, unsigned &CurByte,$/;"	f	class:X86MCCodeEmitter
EmitPCMP	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitPCMP(MachineInstr *MI, MachineBasicBlock *BB,$/;"	f	class:X86TargetLowering
EmitPad	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitPad(int64_t Offset) {$/;"	f	class:MCAsmStreamer
EmitPad	MC/MCStreamer.cpp	/^void MCStreamer::EmitPad(int64_t Offset) {$/;"	f	class:MCStreamer
EmitPartwordAtomicBinary	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::EmitPartwordAtomicBinary(MachineInstr *MI,$/;"	f	class:PPCTargetLowering
EmitPersonality	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitPersonality(const MCSymbol *Personality) {$/;"	f	class:MCAsmStreamer
EmitPersonality	MC/MCDwarf.cpp	/^static void EmitPersonality(MCStreamer &streamer, const MCSymbol &symbol,$/;"	f	file:
EmitPersonality	MC/MCStreamer.cpp	/^void MCStreamer::EmitPersonality(const MCSymbol *Personality) {$/;"	f	class:MCStreamer
EmitPhysRegCopy	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^EmitPhysRegCopy(SUnit *SU, DenseMap<SUnit*, unsigned> &VRBaseMap,$/;"	f	class:ScheduleDAGSDNodes
EmitPreheaderBranchOnCondition	Transforms/Scalar/LoopUnswitch.cpp	/^void LoopUnswitch::EmitPreheaderBranchOnCondition(Value *LIC, Constant *Val,$/;"	f	class:LoopUnswitch
EmitPutChar	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitPutChar(Value *Char, IRBuilder<> &B, const DataLayout *TD,$/;"	f	class:llvm
EmitPutS	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitPutS(Value *Str, IRBuilder<> &B, const DataLayout *TD,$/;"	f	class:llvm
EmitRawByte	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  void EmitRawByte(unsigned char C, unsigned &CurByte, raw_ostream &OS) const {$/;"	f	class:__anon454::MBlazeMCCodeEmitter
EmitRawText	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitRawText(StringRef String) {$/;"	f	class:MCAsmStreamer
EmitRawText	MC/MCStreamer.cpp	/^void MCStreamer::EmitRawText(StringRef String) {$/;"	f	class:MCStreamer
EmitRawText	MC/MCStreamer.cpp	/^void MCStreamer::EmitRawText(const Twine &T) {$/;"	f	class:MCStreamer
EmitReference	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^void AsmPrinter::EmitReference(const GlobalValue *GV, unsigned Encoding)const{$/;"	f	class:AsmPrinter
EmitReference	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^void AsmPrinter::EmitReference(const MCSymbol *Sym, unsigned Encoding) const {$/;"	f	class:AsmPrinter
EmitRegModRMByte	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  void EmitRegModRMByte(const MCOperand &ModRMReg, unsigned RegOpcodeFld,$/;"	f	class:__anon353::X86MCCodeEmitter
EmitRegSave	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitRegSave(const SmallVectorImpl<unsigned> &RegList,$/;"	f	class:MCAsmStreamer
EmitRegSave	MC/MCStreamer.cpp	/^void MCStreamer::EmitRegSave(const SmallVectorImpl<unsigned> &RegList, bool) {$/;"	f	class:MCStreamer
EmitRegSequence	CodeGen/SelectionDAG/InstrEmitter.cpp	/^void InstrEmitter::EmitRegSequence(SDNode *Node,$/;"	f	class:InstrEmitter
EmitRegisterName	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitRegisterName(int64_t Register) {$/;"	f	class:MCAsmStreamer
EmitRuntimeFunction	MC/MCWin64EH.cpp	/^static void EmitRuntimeFunction(MCStreamer &streamer,$/;"	f	namespace:llvm
EmitSIBByte	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  void EmitSIBByte(unsigned SS, unsigned Index, unsigned Base,$/;"	f	class:__anon353::X86MCCodeEmitter
EmitSLEB128	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^void AsmPrinter::EmitSLEB128(int Value, const char *Desc) const {$/;"	f	class:AsmPrinter
EmitSLEB128IntValue	MC/MCStreamer.cpp	/^void MCStreamer::EmitSLEB128IntValue(int64_t Value, unsigned AddrSpace) {$/;"	f	class:MCStreamer
EmitSLEB128Value	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitSLEB128Value(const MCExpr *Value) {$/;"	f	class:MCAsmStreamer
EmitSLEB128Value	MC/MCNullStreamer.cpp	/^    virtual void EmitSLEB128Value(const MCExpr *Value) {}$/;"	f	class:__anon217::MCNullStreamer
EmitSLEB128Value	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitSLEB128Value(const MCExpr *Value) {$/;"	f	class:MCObjectStreamer
EmitSchedule	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::EmitSchedule() {$/;"	f	class:SchedulePostRATDList
EmitSchedule	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^ScheduleDAGLinearize::EmitSchedule(MachineBasicBlock::iterator &InsertPos) {$/;"	f	class:ScheduleDAGLinearize
EmitSchedule	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^EmitSchedule(MachineBasicBlock::iterator &InsertPos) {$/;"	f	class:ScheduleDAGSDNodes
EmitSectionLabels	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::EmitSectionLabels() {$/;"	f	class:DwarfDebug
EmitSectionOffset	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^void AsmPrinter::EmitSectionOffset(const MCSymbol *Label,$/;"	f	class:AsmPrinter
EmitSectionSym	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static MCSymbol *EmitSectionSym(AsmPrinter *Asm, const MCSection *Section,$/;"	f	file:
EmitSegmentOverridePrefix	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^void X86MCCodeEmitter::EmitSegmentOverridePrefix(uint64_t TSFlags,$/;"	f	class:X86MCCodeEmitter
EmitSetFP	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitSetFP(unsigned FpReg, unsigned SpReg, int64_t Offset) {$/;"	f	class:MCAsmStreamer
EmitSetFP	MC/MCStreamer.cpp	/^void MCStreamer::EmitSetFP(unsigned FpReg, unsigned SpReg, int64_t Offset) {$/;"	f	class:MCStreamer
EmitShiftInstr	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::EmitShiftInstr(MachineInstr *MI,$/;"	f	class:MSP430TargetLowering
EmitSjLjDispatchBlock	Target/ARM/ARMISelLowering.cpp	/^EmitSjLjDispatchBlock(MachineInstr *MI, MachineBasicBlock *MBB) const {$/;"	f	class:ARMTargetLowering
EmitSpecialCodeForMain	Target/X86/X86ISelDAGToDAG.cpp	/^void X86DAGToDAGISel::EmitSpecialCodeForMain(MachineBasicBlock *BB,$/;"	f	class:X86DAGToDAGISel
EmitSpecialLLVMGlobal	CodeGen/AsmPrinter/AsmPrinter.cpp	/^bool AsmPrinter::EmitSpecialLLVMGlobal(const GlobalVariable *GV) {$/;"	f	class:AsmPrinter
EmitSpecialNode	CodeGen/SelectionDAG/InstrEmitter.cpp	/^EmitSpecialNode(SDNode *Node, bool IsClone, bool IsCloned,$/;"	f	class:InstrEmitter
EmitStackConvert	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::EmitStackConvert(SDValue SrcOp,$/;"	f	class:SelectionDAGLegalize
EmitStartOfAsmFile	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitStartOfAsmFile(Module &M) {$/;"	f	class:ARMAsmPrinter
EmitStartOfAsmFile	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::EmitStartOfAsmFile(Module &M) {$/;"	f	class:MipsAsmPrinter
EmitStartOfAsmFile	Target/PowerPC/PPCAsmPrinter.cpp	/^void PPCDarwinAsmPrinter::EmitStartOfAsmFile(Module &M) {$/;"	f	class:PPCDarwinAsmPrinter
EmitStartOfAsmFile	Target/X86/X86AsmPrinter.cpp	/^void X86AsmPrinter::EmitStartOfAsmFile(Module &M) {$/;"	f	class:X86AsmPrinter
EmitStrChr	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitStrChr(Value *Ptr, char C, IRBuilder<> &B,$/;"	f	class:llvm
EmitStrCpy	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitStrCpy(Value *Dst, Value *Src, IRBuilder<> &B,$/;"	f	class:llvm
EmitStrLen	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitStrLen(Value *Ptr, IRBuilder<> &B, const DataLayout *TD,$/;"	f	class:llvm
EmitStrNCmp	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitStrNCmp(Value *Ptr1, Value *Ptr2, Value *Len,$/;"	f	class:llvm
EmitStrNCpy	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitStrNCpy(Value *Dst, Value *Src, Value *Len,$/;"	f	class:llvm
EmitStrNLen	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitStrNLen(Value *Ptr, Value *MaxLen, IRBuilder<> &B,$/;"	f	class:llvm
EmitStringMatcherForChar	TableGen/StringMatcher.cpp	/^EmitStringMatcherForChar(const std::vector<const StringPair*> &Matches,$/;"	f	class:StringMatcher
EmitStructByval	Target/ARM/ARMISelLowering.cpp	/^EmitStructByval(MachineInstr *MI, MachineBasicBlock *BB) const {$/;"	f	class:ARMTargetLowering
EmitSubregNode	CodeGen/SelectionDAG/InstrEmitter.cpp	/^void InstrEmitter::EmitSubregNode(SDNode *Node,$/;"	f	class:InstrEmitter
EmitSymbol	MC/MCDwarf.cpp	/^static void EmitSymbol(MCStreamer &streamer, const MCSymbol &symbol,$/;"	f	file:
EmitSymbolAttribute	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitSymbolAttribute(MCSymbol *Symbol,$/;"	f	class:MCAsmStreamer
EmitSymbolAttribute	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitSymbolAttribute(MCSymbol *Symbol,$/;"	f	class:MCELFStreamer
EmitSymbolAttribute	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitSymbolAttribute(MCSymbol *Symbol,$/;"	f	class:MCMachOStreamer
EmitSymbolAttribute	MC/MCNullStreamer.cpp	/^    virtual void EmitSymbolAttribute(MCSymbol *Symbol, MCSymbolAttr Attribute){}$/;"	f	class:__anon217::MCNullStreamer
EmitSymbolAttribute	MC/MCPureStreamer.cpp	/^  virtual void EmitSymbolAttribute(MCSymbol *Symbol, MCSymbolAttr Attribute) {$/;"	f	class:__anon219::MCPureStreamer
EmitSymbolAttribute	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitSymbolAttribute(MCSymbol *Symbol,$/;"	f	class:WinCOFFStreamer
EmitSymbolDesc	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitSymbolDesc(MCSymbol *Symbol, unsigned DescValue) {$/;"	f	class:MCAsmStreamer
EmitSymbolDesc	MC/MCELFStreamer.cpp	/^  virtual void EmitSymbolDesc(MCSymbol *Symbol, unsigned DescValue) {$/;"	f	class:__anon215::MCELFStreamer
EmitSymbolDesc	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitSymbolDesc(MCSymbol *Symbol, unsigned DescValue) {$/;"	f	class:MCMachOStreamer
EmitSymbolDesc	MC/MCNullStreamer.cpp	/^    virtual void EmitSymbolDesc(MCSymbol *Symbol, unsigned DescValue) {}$/;"	f	class:__anon217::MCNullStreamer
EmitSymbolDesc	MC/MCPureStreamer.cpp	/^  virtual void EmitSymbolDesc(MCSymbol *Symbol, unsigned DescValue) {$/;"	f	class:__anon219::MCPureStreamer
EmitSymbolDesc	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitSymbolDesc(MCSymbol *Symbol, unsigned DescValue) {$/;"	f	class:WinCOFFStreamer
EmitSymbolValue	MC/MCStreamer.cpp	/^void MCStreamer::EmitSymbolValue(const MCSymbol *Sym, unsigned Size,$/;"	f	class:MCStreamer
EmitTBSSSymbol	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitTBSSSymbol(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:MCAsmStreamer
EmitTBSSSymbol	MC/MCELFStreamer.cpp	/^  virtual void EmitTBSSSymbol(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:__anon215::MCELFStreamer
EmitTBSSSymbol	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitTBSSSymbol(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:MCMachOStreamer
EmitTBSSSymbol	MC/MCNullStreamer.cpp	/^    virtual void EmitTBSSSymbol(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:__anon217::MCNullStreamer
EmitTBSSSymbol	MC/MCPureStreamer.cpp	/^  virtual void EmitTBSSSymbol(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:__anon219::MCPureStreamer
EmitTBSSSymbol	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitTBSSSymbol(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:WinCOFFStreamer
EmitTCEntry	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitTCEntry(const MCSymbol &S) {$/;"	f	class:MCAsmStreamer
EmitTCEntry	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitTCEntry(const MCSymbol &S)$/;"	f	class:MCELFStreamer
EmitTCEntry	MC/MCStreamer.cpp	/^void MCStreamer::EmitTCEntry(const MCSymbol &S) {$/;"	f	class:MCStreamer
EmitTailCallLoadFPAndRetAddr	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::EmitTailCallLoadFPAndRetAddr(SelectionDAG & DAG,$/;"	f	class:PPCTargetLowering
EmitTailCallLoadRetAddr	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitTailCallLoadRetAddr(SelectionDAG &DAG,$/;"	f	class:X86TargetLowering
EmitTailCallStoreFPAndRetAddr	Target/PowerPC/PPCISelLowering.cpp	/^static SDValue EmitTailCallStoreFPAndRetAddr(SelectionDAG &DAG,$/;"	f	file:
EmitTailCallStoreRetAddr	Target/X86/X86ISelLowering.cpp	/^EmitTailCallStoreRetAddr(SelectionDAG & DAG, MachineFunction &MF,$/;"	f	file:
EmitTargetCodeForMemcpy	Target/ARM/ARMSelectionDAGInfo.cpp	/^ARMSelectionDAGInfo::EmitTargetCodeForMemcpy(SelectionDAG &DAG, DebugLoc dl,$/;"	f	class:ARMSelectionDAGInfo
EmitTargetCodeForMemcpy	Target/Hexagon/HexagonSelectionDAGInfo.cpp	/^EmitTargetCodeForMemcpy(SelectionDAG &DAG, DebugLoc dl, SDValue Chain,$/;"	f	class:HexagonSelectionDAGInfo
EmitTargetCodeForMemcpy	Target/X86/X86SelectionDAGInfo.cpp	/^X86SelectionDAGInfo::EmitTargetCodeForMemcpy(SelectionDAG &DAG, DebugLoc dl,$/;"	f	class:X86SelectionDAGInfo
EmitTargetCodeForMemset	Target/ARM/ARMSelectionDAGInfo.cpp	/^EmitTargetCodeForMemset(SelectionDAG &DAG, DebugLoc dl,$/;"	f	class:ARMSelectionDAGInfo
EmitTargetCodeForMemset	Target/X86/X86SelectionDAGInfo.cpp	/^X86SelectionDAGInfo::EmitTargetCodeForMemset(SelectionDAG &DAG, DebugLoc dl,$/;"	f	class:X86SelectionDAGInfo
EmitTest	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::EmitTest(SDValue Op, unsigned X86CC,$/;"	f	class:X86TargetLowering
EmitTextAttribute	Target/ARM/ARMAsmPrinter.cpp	/^    void EmitTextAttribute(unsigned Attribute, StringRef String) {$/;"	f	class:__anon313::AsmAttributeEmitter
EmitTextAttribute	Target/ARM/ARMAsmPrinter.cpp	/^    void EmitTextAttribute(unsigned Attribute, StringRef String) {$/;"	f	class:__anon313::ObjectAttributeEmitter
EmitThumbFunc	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitThumbFunc(MCSymbol *Func) {$/;"	f	class:MCAsmStreamer
EmitThumbFunc	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitThumbFunc(MCSymbol *Func) {$/;"	f	class:MCELFStreamer
EmitThumbFunc	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitThumbFunc(MCSymbol *Symbol) {$/;"	f	class:MCMachOStreamer
EmitThumbFunc	MC/MCNullStreamer.cpp	/^    virtual void EmitThumbFunc(MCSymbol *Func) {}$/;"	f	class:__anon217::MCNullStreamer
EmitThumbFunc	MC/MCPureStreamer.cpp	/^  virtual void EmitThumbFunc(MCSymbol *Func) {$/;"	f	class:__anon219::MCPureStreamer
EmitThumbFunc	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitThumbFunc(MCSymbol *Func) {$/;"	f	class:WinCOFFStreamer
EmitULEB128	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^void AsmPrinter::EmitULEB128(unsigned Value, const char *Desc,$/;"	f	class:AsmPrinter
EmitULEB128IntValue	MC/MCStreamer.cpp	/^void MCStreamer::EmitULEB128IntValue(uint64_t Value, unsigned AddrSpace,$/;"	f	class:MCStreamer
EmitULEB128Value	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitULEB128Value(const MCExpr *Value) {$/;"	f	class:MCAsmStreamer
EmitULEB128Value	MC/MCNullStreamer.cpp	/^    virtual void EmitULEB128Value(const MCExpr *Value) {}$/;"	f	class:__anon217::MCNullStreamer
EmitULEB128Value	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitULEB128Value(const MCExpr *Value) {$/;"	f	class:MCObjectStreamer
EmitUnaryFloatFnCall	Transforms/Utils/BuildLibCalls.cpp	/^Value *llvm::EmitUnaryFloatFnCall(Value *Op, StringRef Name, IRBuilder<> &B,$/;"	f	class:llvm
EmitUnwindCode	MC/MCWin64EH.cpp	/^static void EmitUnwindCode(MCStreamer &streamer, MCSymbol *begin,$/;"	f	namespace:llvm
EmitUnwindInfo	MC/MCWin64EH.cpp	/^static void EmitUnwindInfo(MCStreamer &streamer, MCWin64EHUnwindInfo *info) {$/;"	f	namespace:llvm
EmitUnwindInfo	MC/MCWin64EH.cpp	/^void MCWin64EHUnwindEmitter::EmitUnwindInfo(MCStreamer &streamer,$/;"	f	class:llvm::MCWin64EHUnwindEmitter
EmitUnwindingInstruction	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitUnwindingInstruction(const MachineInstr *MI) {$/;"	f	class:ARMAsmPrinter
EmitVAARG64WithCustomInserter	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitVAARG64WithCustomInserter($/;"	f	class:X86TargetLowering
EmitVAStartSaveXMMRegsWithCustomInserter	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::EmitVAStartSaveXMMRegsWithCustomInserter($/;"	f	class:X86TargetLowering
EmitVEXOpcodePrefix	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^void X86MCCodeEmitter::EmitVEXOpcodePrefix(uint64_t TSFlags, unsigned &CurByte,$/;"	f	class:X86MCCodeEmitter
EmitValue	CodeGen/AsmPrinter/DIE.cpp	/^void DIEBlock::EmitValue(AsmPrinter *Asm, unsigned Form) const {$/;"	f	class:DIEBlock
EmitValue	CodeGen/AsmPrinter/DIE.cpp	/^void DIEDelta::EmitValue(AsmPrinter *AP, unsigned Form) const {$/;"	f	class:DIEDelta
EmitValue	CodeGen/AsmPrinter/DIE.cpp	/^void DIEEntry::EmitValue(AsmPrinter *AP, unsigned Form) const {$/;"	f	class:DIEEntry
EmitValue	CodeGen/AsmPrinter/DIE.cpp	/^void DIEInteger::EmitValue(AsmPrinter *Asm, unsigned Form) const {$/;"	f	class:DIEInteger
EmitValue	CodeGen/AsmPrinter/DIE.cpp	/^void DIELabel::EmitValue(AsmPrinter *AP, unsigned Form) const {$/;"	f	class:DIELabel
EmitValue	MC/MCStreamer.cpp	/^void MCStreamer::EmitValue(const MCExpr *Value, unsigned Size,$/;"	f	class:MCStreamer
EmitValueImpl	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitValueImpl(const MCExpr *Value, unsigned Size,$/;"	f	class:MCAsmStreamer
EmitValueImpl	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitValueImpl(const MCExpr *Value, unsigned Size,$/;"	f	class:MCELFStreamer
EmitValueImpl	MC/MCNullStreamer.cpp	/^    virtual void EmitValueImpl(const MCExpr *Value, unsigned Size,$/;"	f	class:__anon217::MCNullStreamer
EmitValueImpl	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitValueImpl(const MCExpr *Value, unsigned Size,$/;"	f	class:MCObjectStreamer
EmitValueToAlignment	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitValueToAlignment(unsigned ByteAlignment, int64_t Value,$/;"	f	class:MCAsmStreamer
EmitValueToAlignment	MC/MCNullStreamer.cpp	/^    virtual void EmitValueToAlignment(unsigned ByteAlignment, int64_t Value = 0,$/;"	f	class:__anon217::MCNullStreamer
EmitValueToAlignment	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitValueToAlignment(unsigned ByteAlignment,$/;"	f	class:MCObjectStreamer
EmitValueToAlignment	MC/MCPureStreamer.cpp	/^void MCPureStreamer::EmitValueToAlignment(unsigned ByteAlignment,$/;"	f	class:MCPureStreamer
EmitValueToOffset	MC/MCAsmStreamer.cpp	/^bool MCAsmStreamer::EmitValueToOffset(const MCExpr *Offset,$/;"	f	class:MCAsmStreamer
EmitValueToOffset	MC/MCNullStreamer.cpp	/^    virtual bool EmitValueToOffset(const MCExpr *Offset,$/;"	f	class:__anon217::MCNullStreamer
EmitValueToOffset	MC/MCObjectStreamer.cpp	/^bool MCObjectStreamer::EmitValueToOffset(const MCExpr *Offset,$/;"	f	class:MCObjectStreamer
EmitValueToOffset	MC/MCPureStreamer.cpp	/^bool MCPureStreamer::EmitValueToOffset(const MCExpr *Offset,$/;"	f	class:MCPureStreamer
EmitVisibility	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitVisibility(MCSymbol *Sym, unsigned Visibility,$/;"	f	class:AsmPrinter
EmitW64Tables	MC/MCStreamer.cpp	/^void MCStreamer::EmitW64Tables() {$/;"	f	class:MCStreamer
EmitWeakReference	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWeakReference(MCSymbol *Alias, const MCSymbol *Symbol) {$/;"	f	class:MCAsmStreamer
EmitWeakReference	MC/MCELFStreamer.cpp	/^void MCELFStreamer::EmitWeakReference(MCSymbol *Alias, const MCSymbol *Symbol) {$/;"	f	class:MCELFStreamer
EmitWeakReference	MC/MCNullStreamer.cpp	/^    virtual void EmitWeakReference(MCSymbol *Alias, const MCSymbol *Symbol){}$/;"	f	class:__anon217::MCNullStreamer
EmitWeakReference	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::EmitWeakReference(MCSymbol *Alias,$/;"	f	class:MCObjectStreamer
EmitWin64EHAllocStack	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHAllocStack(unsigned Size) {$/;"	f	class:MCAsmStreamer
EmitWin64EHAllocStack	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHAllocStack(unsigned Size) {$/;"	f	class:MCStreamer
EmitWin64EHEndChained	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHEndChained() {$/;"	f	class:MCAsmStreamer
EmitWin64EHEndChained	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHEndChained() {$/;"	f	class:MCStreamer
EmitWin64EHEndProc	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHEndProc() {$/;"	f	class:MCAsmStreamer
EmitWin64EHEndProc	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHEndProc() {$/;"	f	class:MCStreamer
EmitWin64EHEndProlog	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHEndProlog(void) {$/;"	f	class:MCAsmStreamer
EmitWin64EHEndProlog	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHEndProlog() {$/;"	f	class:MCStreamer
EmitWin64EHHandler	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHHandler(const MCSymbol *Sym, bool Unwind,$/;"	f	class:MCAsmStreamer
EmitWin64EHHandler	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHHandler(const MCSymbol *Sym, bool Unwind,$/;"	f	class:MCStreamer
EmitWin64EHHandlerData	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHHandlerData() {$/;"	f	class:MCAsmStreamer
EmitWin64EHHandlerData	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHHandlerData() {$/;"	f	class:MCStreamer
EmitWin64EHHandlerData	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitWin64EHHandlerData() {$/;"	f	class:WinCOFFStreamer
EmitWin64EHPushFrame	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHPushFrame(bool Code) {$/;"	f	class:MCAsmStreamer
EmitWin64EHPushFrame	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHPushFrame(bool Code) {$/;"	f	class:MCStreamer
EmitWin64EHPushReg	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHPushReg(unsigned Register) {$/;"	f	class:MCAsmStreamer
EmitWin64EHPushReg	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHPushReg(unsigned Register) {$/;"	f	class:MCStreamer
EmitWin64EHSaveReg	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHSaveReg(unsigned Register, unsigned Offset) {$/;"	f	class:MCAsmStreamer
EmitWin64EHSaveReg	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHSaveReg(unsigned Register, unsigned Offset) {$/;"	f	class:MCStreamer
EmitWin64EHSaveXMM	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHSaveXMM(unsigned Register, unsigned Offset) {$/;"	f	class:MCAsmStreamer
EmitWin64EHSaveXMM	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHSaveXMM(unsigned Register, unsigned Offset) {$/;"	f	class:MCStreamer
EmitWin64EHSetFrame	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHSetFrame(unsigned Register, unsigned Offset) {$/;"	f	class:MCAsmStreamer
EmitWin64EHSetFrame	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHSetFrame(unsigned Register, unsigned Offset) {$/;"	f	class:MCStreamer
EmitWin64EHStartChained	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHStartChained() {$/;"	f	class:MCAsmStreamer
EmitWin64EHStartChained	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHStartChained() {$/;"	f	class:MCStreamer
EmitWin64EHStartProc	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitWin64EHStartProc(const MCSymbol *Symbol) {$/;"	f	class:MCAsmStreamer
EmitWin64EHStartProc	MC/MCStreamer.cpp	/^void MCStreamer::EmitWin64EHStartProc(const MCSymbol *Symbol) {$/;"	f	class:MCStreamer
EmitXXStructor	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::EmitXXStructor(const Constant *CV) {$/;"	f	class:ARMAsmPrinter
EmitXXStructorList	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::EmitXXStructorList(const Constant *List, bool isCtor) {$/;"	f	class:AsmPrinter
EmitZerofill	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EmitZerofill(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:MCAsmStreamer
EmitZerofill	MC/MCELFStreamer.cpp	/^  virtual void EmitZerofill(const MCSection *Section, MCSymbol *Symbol = 0,$/;"	f	class:__anon215::MCELFStreamer
EmitZerofill	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::EmitZerofill(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:MCMachOStreamer
EmitZerofill	MC/MCNullStreamer.cpp	/^    virtual void EmitZerofill(const MCSection *Section, MCSymbol *Symbol = 0,$/;"	f	class:__anon217::MCNullStreamer
EmitZerofill	MC/MCPureStreamer.cpp	/^void MCPureStreamer::EmitZerofill(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:MCPureStreamer
EmitZerofill	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EmitZerofill(const MCSection *Section, MCSymbol *Symbol,$/;"	f	class:WinCOFFStreamer
Emitted	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    bool Emitted;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestBlock
Emitted	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    bool Emitted;$/;"	m	struct:llvm::SelectionDAGBuilder::JumpTableHeader
EmittedCode	ExecutionEngine/JIT/JITEmitter.cpp	/^      EmittedCode() : FunctionBody(0), Code(0), ExceptionTable(0) {}$/;"	f	struct:__anon182::JITEmitter::EmittedCode
EmittedCode	ExecutionEngine/JIT/JITEmitter.cpp	/^    struct EmittedCode {$/;"	s	class:__anon182::JITEmitter	file:
EmittedFunctionConfig	ExecutionEngine/JIT/JITEmitter.cpp	/^    struct EmittedFunctionConfig : public ValueMapConfig<const Function*> {$/;"	s	class:__anon182::JITEmitter	file:
EmittedFunctions	ExecutionEngine/JIT/JITEmitter.cpp	/^             EmittedFunctionConfig> EmittedFunctions;$/;"	m	class:__anon182::JITEmitter	file:
Emitter	MC/MCAsmStreamer.cpp	/^  OwningPtr<MCCodeEmitter> Emitter;$/;"	m	class:__anon214::MCAsmStreamer	file:
Emitter	Target/X86/X86CodeEmitter.cpp	/^    Emitter(X86TargetMachine &tm, CodeEmitter &mce,$/;"	f	class:__anon379::Emitter
Emitter	Target/X86/X86CodeEmitter.cpp	/^    explicit Emitter(X86TargetMachine &tm, CodeEmitter &mce)$/;"	f	class:__anon379::Emitter
Emitter	Target/X86/X86CodeEmitter.cpp	/^  class Emitter : public MachineFunctionPass {$/;"	c	namespace:__anon379	file:
Empty	DebugInfo/DWARFDebugLine.h	/^    bool Empty;$/;"	m	struct:llvm::DWARFDebugLine::Sequence
EmptyArg	Support/CommandLine.cpp	/^  const Option *EmptyArg;$/;"	m	class:__anon247::HelpPrinter	file:
EmptyAsm	Transforms/Instrumentation/AddressSanitizer.cpp	/^  InlineAsm *EmptyAsm;$/;"	m	struct:__anon491::AddressSanitizer	file:
EmptyKey	Transforms/IPO/MergeFunctions.cpp	/^  static const ComparableFunction EmptyKey;$/;"	m	class:__anon596::ComparableFunction	file:
EmptyKey	Transforms/IPO/MergeFunctions.cpp	/^const ComparableFunction ComparableFunction::EmptyKey = ComparableFunction(0);$/;"	m	class:__anon596::ComparableFunction	file:
Enable	CodeGen/AsmPrinter/DwarfDebug.cpp	/^    Default, Enable, Disable$/;"	e	enum:__anon62::DefaultOnOff	file:
Enable	Support/CrashRecoveryContext.cpp	/^void CrashRecoveryContext::Enable() {$/;"	f	class:CrashRecoveryContext
EnableDebugBuffering	Support/Debug.cpp	/^bool llvm::EnableDebugBuffering = false;$/;"	m	class:llvm	file:
EnableHoistCommonCode	CodeGen/BranchFolding.h	/^    bool EnableHoistCommonCode;$/;"	m	class:llvm::BranchFolder
EnableStatistics	Support/Statistic.cpp	/^void llvm::EnableStatistics() {$/;"	f	class:llvm
EnableTailMerge	CodeGen/BranchFolding.h	/^    bool EnableTailMerge;$/;"	m	class:llvm::BranchFolder
Encode	MC/MCDwarf.cpp	/^void MCDwarfLineAddr::Encode(int64_t LineDelta, uint64_t AddrDelta,$/;"	f	class:MCDwarfLineAddr
EncodeAddrModeOpValues	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^EncodeAddrModeOpValues(const MCInst &MI, unsigned OpIdx, unsigned &Reg,$/;"	f	class:ARMMCCodeEmitter
EncodeAdvanceLoc	MC/MCDwarf.cpp	/^void MCDwarfFrameEmitter::EncodeAdvanceLoc(uint64_t AddrDelta,$/;"	f	class:MCDwarfFrameEmitter
EncodeInstruction	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^EncodeInstruction(const MCInst &MI, raw_ostream &OS,$/;"	f	class:ARMMCCodeEmitter
EncodeInstruction	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^EncodeInstruction(const MCInst &MI, raw_ostream &OS,$/;"	f	class:MBlazeMCCodeEmitter
EncodeInstruction	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^EncodeInstruction(const MCInst &MI, raw_ostream &OS,$/;"	f	class:MipsMCCodeEmitter
EncodeInstruction	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^  void EncodeInstruction(const MCInst &MI, raw_ostream &OS,$/;"	f	class:__anon319::PPCMCCodeEmitter
EncodeInstruction	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^EncodeInstruction(const MCInst &MI, raw_ostream &OS,$/;"	f	class:X86MCCodeEmitter
EncodingInfo	Support/YAMLParser.cpp	/^typedef std::pair<UnicodeEncodingForm, unsigned> EncodingInfo;$/;"	t	file:
End	CodeGen/AllocationOrder.h	/^  const unsigned *End;$/;"	m	class:llvm::AllocationOrder
End	CodeGen/AsmPrinter/DwarfDebug.h	/^  const MCSymbol *End;$/;"	m	struct:llvm::DotDebugLocEntry
End	CodeGen/StackColoring.cpp	/^    BitVector End;$/;"	m	struct:__anon113::StackColoring::BlockLifetimeInfo	file:
End	Support/YAMLParser.cpp	/^  StringRef::iterator End;$/;"	m	class:llvm::yaml::Scanner	file:
End	Transforms/Scalar/MemCpyOptimizer.cpp	/^  int64_t Start, End;$/;"	m	struct:__anon573::MemsetRange	file:
EndAddress	DebugInfo/DWARFDebugRangeList.h	/^    uint64_t EndAddress;$/;"	m	struct:llvm::DWARFDebugRangeList::RangeListEntry
EndCOFFSymbolDef	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::EndCOFFSymbolDef() {$/;"	f	class:MCAsmStreamer
EndCOFFSymbolDef	MC/MCELFStreamer.cpp	/^  virtual void EndCOFFSymbolDef() {$/;"	f	class:__anon215::MCELFStreamer
EndCOFFSymbolDef	MC/MCMachOStreamer.cpp	/^  virtual void EndCOFFSymbolDef() {$/;"	f	class:__anon221::MCMachOStreamer
EndCOFFSymbolDef	MC/MCNullStreamer.cpp	/^    virtual void EndCOFFSymbolDef() {}$/;"	f	class:__anon217::MCNullStreamer
EndCOFFSymbolDef	MC/MCPureStreamer.cpp	/^  virtual void EndCOFFSymbolDef() {$/;"	f	class:__anon219::MCPureStreamer
EndCOFFSymbolDef	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::EndCOFFSymbolDef() {$/;"	f	class:WinCOFFStreamer
EndDispatchGroup	Target/PowerPC/PPCHazardRecognizers.cpp	/^void PPCHazardRecognizer970::EndDispatchGroup() {$/;"	f	class:PPCHazardRecognizer970
EndFunction	CodeGen/AsmPrinter/ARMException.cpp	/^void ARMException::EndFunction() {$/;"	f	class:ARMException
EndFunction	CodeGen/AsmPrinter/DwarfCFIException.cpp	/^void DwarfCFIException::EndFunction() {$/;"	f	class:DwarfCFIException
EndFunction	CodeGen/AsmPrinter/DwarfException.cpp	/^void DwarfException::EndFunction() {$/;"	f	class:DwarfException
EndFunction	CodeGen/AsmPrinter/Win64Exception.cpp	/^void Win64Exception::EndFunction() {$/;"	f	class:Win64Exception
EndFunction	CodeGen/MachineModuleInfo.cpp	/^void MachineModuleInfo::EndFunction() {$/;"	f	class:MachineModuleInfo
EndIter	Transforms/Scalar/EarlyCSE.cpp	/^    DomTreeNode::iterator EndIter;$/;"	m	class:__anon566::EarlyCSE::StackNode	file:
EndLabel	CodeGen/AsmPrinter/DwarfException.h	/^    MCSymbol *EndLabel;   \/\/ zero indicates the end of the function.$/;"	m	struct:llvm::DwarfException::CallSiteEntry
EndLabel	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^  MCSymbol *EndLabel;   \/\/ zero indicates the end of the function.$/;"	m	struct:__anon183::CallSiteEntry	file:
EndLoc	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	class:__anon261::ARMOperand	file:
EndLoc	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	struct:__anon446::MBlazeOperand	file:
EndLoc	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	class:__anon423::MipsOperand	file:
EndLoc	Target/X86/AsmParser/X86AsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	struct:__anon336::X86Operand	file:
EndModule	CodeGen/AsmPrinter/ARMException.cpp	/^void ARMException::EndModule() {$/;"	f	class:ARMException
EndModule	CodeGen/AsmPrinter/DwarfCFIException.cpp	/^void DwarfCFIException::EndModule() {$/;"	f	class:DwarfCFIException
EndModule	CodeGen/AsmPrinter/DwarfException.cpp	/^void DwarfException::EndModule() {$/;"	f	class:DwarfException
EndModule	CodeGen/AsmPrinter/Win64Exception.cpp	/^void Win64Exception::EndModule() {$/;"	f	class:Win64Exception
EndOfNumber	Support/FileUtilities.cpp	/^static const char *EndOfNumber(const char *Pos) {$/;"	f	file:
EndOffset	Transforms/Scalar/SROA.cpp	/^    uint64_t EndOffset;$/;"	m	struct:__anon557::AllocaPartitioning::ByteRange	file:
EndOffset	Transforms/Scalar/SROA.cpp	/^  uint64_t BeginOffset, EndOffset;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
EndPacket	Target/Hexagon/HexagonMachineFunctionInfo.h	/^    const unsigned int EndPacket = 0x2;$/;"	m	namespace:llvm::Hexagon
EndSequence	DebugInfo/DWARFDebugLine.h	/^            EndSequence:1,$/;"	m	struct:llvm::DWARFDebugLine::Row
EndianityString	Support/Dwarf.cpp	/^const char *llvm::dwarf::EndianityString(unsigned Endian) {$/;"	f	class:llvm::dwarf
Ensemble	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::Ensemble::Ensemble(MachineTraceMetrics *ct)$/;"	f	class:MachineTraceMetrics::Ensemble
Ensemble	CodeGen/MachineTraceMetrics.h	/^  class Ensemble {$/;"	c	class:llvm::MachineTraceMetrics
Ensembles	CodeGen/MachineTraceMetrics.h	/^  Ensemble* Ensembles[TS_NumStrategies];$/;"	m	class:llvm::MachineTraceMetrics
EnsureFPIntrinsicsExist	CodeGen/IntrinsicLowering.cpp	/^static void EnsureFPIntrinsicsExist(Module &M, Function *Fn,$/;"	f	file:
EnsureFunctionExists	CodeGen/IntrinsicLowering.cpp	/^static void EnsureFunctionExists(Module &M, const char *Name,$/;"	f	file:
EnsureValid	MC/MCAssembler.cpp	/^void MCAsmLayout::EnsureValid(const MCFragment *F) const {$/;"	f	class:MCAsmLayout
EnsureValidFrame	MC/MCStreamer.cpp	/^void MCStreamer::EnsureValidFrame() {$/;"	f	class:MCStreamer
EnsureValidW64UnwindInfo	MC/MCStreamer.cpp	/^void MCStreamer::EnsureValidW64UnwindInfo() {$/;"	f	class:MCStreamer
EnterIncludeFile	MC/MCParser/AsmParser.cpp	/^bool AsmParser::EnterIncludeFile(const std::string &Filename) {$/;"	f	class:AsmParser
EnterScope	CodeGen/MachineCSE.cpp	/^void MachineCSE::EnterScope(MachineBasicBlock *MBB) {$/;"	f	class:MachineCSE
EnterScope	CodeGen/MachineLICM.cpp	/^void MachineLICM::EnterScope(MachineBasicBlock *MBB) {$/;"	f	class:MachineLICM
Entries	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  StringEntries Entries;$/;"	m	class:llvm::DwarfAccelTable
Entries	CodeGen/InterferenceCache.h	/^  Entry Entries[CacheEntries];$/;"	m	class:llvm::InterferenceCache
Entries	DebugInfo/DWARFDebugRangeList.h	/^  std::vector<RangeListEntry> Entries;$/;"	m	class:llvm::DWARFDebugRangeList
Entries	Transforms/Instrumentation/BlackList.h	/^  StringMap<Regex*> Entries;$/;"	m	class:llvm::BlackList
Entry	CodeGen/AsmPrinter/DIE.h	/^    DIE *const Entry;$/;"	m	class:llvm::DIEEntry
Entry	CodeGen/InterferenceCache.h	/^    Entry() : PhysReg(0), Tag(0), RefCount(0), Indexes(0), LIS(0) {}$/;"	f	class:llvm::InterferenceCache::Entry
Entry	CodeGen/InterferenceCache.h	/^  class Entry {$/;"	c	class:llvm::InterferenceCache
Entry	CodeGen/SpillPlacement.h	/^    BorderConstraint Entry : 8; \/\/\/< Constraint on block entry.$/;"	m	struct:llvm::SpillPlacement::BlockConstraint
EntryBlock	CodeGen/PrologEpilogInserter.h	/^    MachineBasicBlock* EntryBlock;$/;"	m	class:llvm::PEI
EntryKind	CodeGen/AsmPrinter/DwarfDebug.h	/^  enum EntryType EntryKind;$/;"	m	struct:llvm::DotDebugLocEntry	typeref:enum:llvm::DotDebugLocEntry::EntryType
EntryType	CodeGen/AsmPrinter/DwarfDebug.h	/^  enum EntryType {$/;"	g	struct:llvm::DotDebugLocEntry
EnumName	MC/MCSectionMachO.cpp	/^  const char *AssemblerName, *EnumName;$/;"	m	struct:__anon226	file:
EnumName	MC/MCSectionMachO.cpp	/^  const char *AssemblerName, *EnumName;$/;"	m	struct:__anon227	file:
EnumerateAttributes	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateAttributes(const AttrListPtr &PAL) {$/;"	f	class:ValueEnumerator
EnumerateFunctionLocalMetadata	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateFunctionLocalMetadata(const MDNode *N) {$/;"	f	class:ValueEnumerator
EnumerateMDNodeOperands	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateMDNodeOperands(const MDNode *N) {$/;"	f	class:ValueEnumerator
EnumerateMetadata	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateMetadata(const Value *MD) {$/;"	f	class:ValueEnumerator
EnumerateNamedMDNode	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateNamedMDNode(const NamedMDNode *MD) {$/;"	f	class:ValueEnumerator
EnumerateNamedMetadata	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateNamedMetadata(const Module *M) {$/;"	f	class:ValueEnumerator
EnumerateOperandType	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateOperandType(const Value *V) {$/;"	f	class:ValueEnumerator
EnumerateType	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateType(Type *Ty) {$/;"	f	class:ValueEnumerator
EnumerateValue	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateValue(const Value *V) {$/;"	f	class:ValueEnumerator
EnumerateValueSymbolTable	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::EnumerateValueSymbolTable(const ValueSymbolTable &VST) {$/;"	f	class:ValueEnumerator
Eof	AsmParser/LLToken.h	/^    Eof, Error,$/;"	e	enum:llvm::lltok::Kind
Eof	TableGen/TGLexer.h	/^    Eof, Error,$/;"	e	enum:llvm::tgtok::TokKind
EpilogueBegin	DebugInfo/DWARFDebugLine.h	/^            EpilogueBegin:1;$/;"	m	struct:llvm::DWARFDebugLine::Row
EqualSlowCase	Support/APInt.cpp	/^bool APInt::EqualSlowCase(const APInt& RHS) const {$/;"	f	class:APInt
EqualSlowCase	Support/APInt.cpp	/^bool APInt::EqualSlowCase(uint64_t Val) const {$/;"	f	class:APInt
Equals	Analysis/ProfileVerifierPass.cpp	/^  static bool Equals(double A, double B) {$/;"	f	namespace:__anon36
Equals	VMCore/LLVMContextImpl.h	/^  static bool Equals(const MDNode &X, const FoldingSetNodeID &ID,$/;"	f	struct:llvm::FoldingSetTrait
EraseAllCallSitesForPrelocked	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITResolverState::EraseAllCallSitesForPrelocked(Function *F) {$/;"	f	class:JITResolverState
EraseAllCallSitesPrelocked	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITResolverState::EraseAllCallSitesPrelocked() {$/;"	f	class:JITResolverState
EraseInst	Transforms/Scalar/Reassociate.cpp	/^void Reassociate::EraseInst(Instruction *I) {$/;"	f	class:Reassociate
EraseInstFromFunction	Transforms/InstCombine/InstCombine.h	/^  Instruction *EraseInstFromFunction(Instruction &I) {$/;"	f	class:llvm::InstCombiner
EraseInstruction	Transforms/Scalar/ObjCARC.cpp	/^static void EraseInstruction(Instruction *CI) {$/;"	f	file:
EraseTerminatorInstAndDCECond	Transforms/Utils/SimplifyCFG.cpp	/^static void EraseTerminatorInstAndDCECond(TerminatorInst *TI) {$/;"	f	file:
ErasedInstrs	CodeGen/RegisterCoalescer.cpp	/^    SmallPtrSet<MachineInstr*, 8> ErasedInstrs;$/;"	m	class:__anon114::RegisterCoalescer	file:
Error	AsmParser/LLLexer.cpp	/^bool LLLexer::Error(LocTy ErrorLoc, const Twine &Msg) const {$/;"	f	class:LLLexer
Error	AsmParser/LLLexer.h	/^    bool Error(const Twine &Msg) const { return Error(getLoc(), Msg); }$/;"	f	class:llvm::LLLexer
Error	AsmParser/LLParser.h	/^    bool Error(LocTy L, const Twine &Msg) const {$/;"	f	class:llvm::LLParser
Error	AsmParser/LLToken.h	/^    Eof, Error,$/;"	e	enum:llvm::lltok::Kind
Error	Bitcode/Reader/BitcodeReader.h	/^  bool Error(const char *Str) {$/;"	f	class:llvm::BitcodeReader
Error	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  bool Error(const Twine &Msg) {$/;"	f	class:llvm::RuntimeDyldImpl
Error	MC/MCParser/AsmParser.cpp	/^bool AsmParser::Error(SMLoc L, const Twine &Msg, ArrayRef<SMRange> Ranges) {$/;"	f	class:AsmParser
Error	TableGen/TGLexer.h	/^    Eof, Error,$/;"	e	enum:llvm::tgtok::TokKind
Error	TableGen/TGParser.h	/^  bool Error(SMLoc L, const Twine &Msg) const {$/;"	f	class:llvm::TGParser
Error	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool Error(SMLoc L, const Twine &Msg,$/;"	f	class:__anon259::ARMAsmParser	file:
Error	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  bool Error(SMLoc L, const Twine &Msg) { return Parser.Error(L, Msg); }$/;"	f	class:__anon446::MBlazeAsmParser	file:
Error	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool Error(SMLoc L, const Twine &Msg,$/;"	f	class:__anon335::X86AsmParser	file:
ErrorHandler	Support/ErrorHandling.cpp	/^static fatal_error_handler_t ErrorHandler = 0;$/;"	v	file:
ErrorHandlerUserData	Support/ErrorHandling.cpp	/^static void *ErrorHandlerUserData = 0;$/;"	v	file:
ErrorInfo	AsmParser/LLLexer.h	/^    SMDiagnostic &ErrorInfo;$/;"	m	class:llvm::LLLexer
ErrorMsg	Linker/LinkModules.cpp	/^    std::string ErrorMsg;$/;"	m	class:__anon202::ModuleLinker	file:
ErrorOperand	Target/X86/AsmParser/X86AsmParser.cpp	/^  X86Operand *ErrorOperand(SMLoc Loc, StringRef Msg) {$/;"	f	class:__anon335::X86AsmParser	file:
ErrorStr	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  std::string ErrorStr;$/;"	m	class:llvm::RuntimeDyldImpl
ErrorStream	MC/MCDisassembler/EDDisassembler.h	/^  llvm::raw_ostream &ErrorStream;$/;"	m	struct:llvm::EDDisassembler
ErrorString	Bitcode/Reader/BitcodeReader.h	/^  const char *ErrorString;$/;"	m	class:llvm::BitcodeReader
EscapeEnumerator	CodeGen/ShadowStackGC.cpp	/^    EscapeEnumerator(Function &F, const char *N = "cleanup")$/;"	f	class:__anon149::EscapeEnumerator
EscapeEnumerator	CodeGen/ShadowStackGC.cpp	/^  class EscapeEnumerator {$/;"	c	namespace:__anon149	file:
EscapeString	Support/GraphWriter.cpp	/^std::string llvm::DOT::EscapeString(const std::string &Label) {$/;"	f	class:llvm::DOT
EstimateMissingEdges	Analysis/ProfileInfo.cpp	/^bool ProfileInfoT<Function,BasicBlock>::EstimateMissingEdges(const BasicBlock *BB) {$/;"	f	class:llvm::ProfileInfoT
EstimateRuntime	CodeGen/BranchFolding.cpp	/^static unsigned EstimateRuntime(MachineBasicBlock::iterator I,$/;"	f	file:
EstimateSearchSpaceComplexity	Transforms/Scalar/LoopStrengthReduce.cpp	/^size_t LSRInstance::EstimateSearchSpaceComplexity() const {$/;"	f	class:LSRInstance
EvaluateAsAbsolute	MC/MCExpr.cpp	/^bool MCExpr::EvaluateAsAbsolute(int64_t &Res) const {$/;"	f	class:MCExpr
EvaluateAsAbsolute	MC/MCExpr.cpp	/^bool MCExpr::EvaluateAsAbsolute(int64_t &Res, const MCAssembler &Asm) const {$/;"	f	class:MCExpr
EvaluateAsAbsolute	MC/MCExpr.cpp	/^bool MCExpr::EvaluateAsAbsolute(int64_t &Res, const MCAssembler *Asm,$/;"	f	class:MCExpr
EvaluateAsAbsolute	MC/MCExpr.cpp	/^bool MCExpr::EvaluateAsAbsolute(int64_t &Res,$/;"	f	class:MCExpr
EvaluateAsPCRel	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^static bool EvaluateAsPCRel(const MCExpr *Expr) {$/;"	f	file:
EvaluateAsRelocatable	MC/MCExpr.cpp	/^bool MCExpr::EvaluateAsRelocatable(MCValue &Res,$/;"	f	class:MCExpr
EvaluateAsRelocatableImpl	MC/MCExpr.cpp	/^bool MCExpr::EvaluateAsRelocatableImpl(MCValue &Res,$/;"	f	class:MCExpr
EvaluateAsRelocatableImpl	Target/ARM/MCTargetDesc/ARMMCExpr.cpp	/^ARMMCExpr::EvaluateAsRelocatableImpl(MCValue &Res,$/;"	f	class:ARMMCExpr
EvaluateBlock	Transforms/IPO/GlobalOpt.cpp	/^bool Evaluator::EvaluateBlock(BasicBlock::iterator CurInst,$/;"	f	class:Evaluator
EvaluateConstantChrecAtConstant	Analysis/ScalarEvolution.cpp	/^EvaluateConstantChrecAtConstant(const SCEVAddRecExpr *AddRec, ConstantInt *C,$/;"	f	file:
EvaluateExpression	Analysis/ScalarEvolution.cpp	/^static Constant *EvaluateExpression(Value *V, const Loop *L,$/;"	f	file:
EvaluateFunction	Transforms/IPO/GlobalOpt.cpp	/^bool Evaluator::EvaluateFunction(Function *F, Constant *&RetVal,$/;"	f	class:Evaluator
EvaluateGEPOffsetExpression	Transforms/InstCombine/InstCombineCompares.cpp	/^static Value *EvaluateGEPOffsetExpression(User *GEP, InstCombiner &IC) {$/;"	f	file:
EvaluateInDifferentType	Transforms/InstCombine/InstCombineCasts.cpp	/^Value *InstCombiner::EvaluateInDifferentType(Value *V, Type *Ty, $/;"	f	class:InstCombiner
EvaluateOperation	TableGen/Record.cpp	/^static Init *EvaluateOperation(OpInit *RHSo, Init *LHS, Init *Arg,$/;"	f	file:
EvaluateRepeatedConstant	Transforms/Scalar/Reassociate.cpp	/^static Constant *EvaluateRepeatedConstant(unsigned Opcode, Constant *C,$/;"	f	file:
EvaluateStaticConstructor	Transforms/IPO/GlobalOpt.cpp	/^static bool EvaluateStaticConstructor(Function *F, const DataLayout *TD,$/;"	f	file:
EvaluateStoreInto	Transforms/IPO/GlobalOpt.cpp	/^static Constant *EvaluateStoreInto(Constant *Init, Constant *Val,$/;"	f	file:
EvaluateSymbolicAdd	MC/MCExpr.cpp	/^static bool EvaluateSymbolicAdd(const MCAssembler *Asm,$/;"	f	file:
Evaluator	Transforms/IPO/GlobalOpt.cpp	/^  Evaluator(const DataLayout *TD, const TargetLibraryInfo *TLI)$/;"	f	class:__anon591::Evaluator
Evaluator	Transforms/IPO/GlobalOpt.cpp	/^class Evaluator {$/;"	c	namespace:__anon591	file:
EvenDblSpc	Target/ARM/ARMExpandPseudoInsts.cpp	/^    EvenDblSpc,$/;"	e	enum:__anon312::NEONRegSpacing	file:
EventListeners	ExecutionEngine/JIT/JIT.h	/^  std::vector<JITEventListener*> EventListeners;$/;"	m	class:llvm::JIT
EvictionCost	CodeGen/RegAllocGreedy.cpp	/^    EvictionCost(unsigned B = 0) : BrokenHints(B), MaxWeight(0) {}$/;"	f	struct:__anon158::RAGreedy::EvictionCost
EvictionCost	CodeGen/RegAllocGreedy.cpp	/^  struct EvictionCost {$/;"	s	class:__anon158::RAGreedy	file:
ExFunc	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^typedef GenericValue (*ExFunc)(FunctionType *,$/;"	t	file:
ExceptionHandler	Support/CrashRecoveryContext.cpp	/^static LONG CALLBACK ExceptionHandler(PEXCEPTION_POINTERS ExceptionInfo)$/;"	f	file:
ExceptionTable	ExecutionEngine/JIT/JITEmitter.cpp	/^      void *ExceptionTable;$/;"	m	struct:__anon182::JITEmitter::EmittedCode	file:
ExeDepsFix	CodeGen/ExecutionDepsFix.cpp	/^  ExeDepsFix(const TargetRegisterClass *rc)$/;"	f	class:__anon120::ExeDepsFix
ExeDepsFix	CodeGen/ExecutionDepsFix.cpp	/^class ExeDepsFix : public MachineFunctionPass {$/;"	c	namespace:__anon120	file:
ExeGeneric	Target/ARM/ARMBaseInstrInfo.cpp	/^  ExeGeneric = 0,$/;"	e	enum:ARMExeDomain	file:
ExeNEON	Target/ARM/ARMBaseInstrInfo.cpp	/^  ExeNEON = 2$/;"	e	enum:ARMExeDomain	file:
ExeVFP	Target/ARM/ARMBaseInstrInfo.cpp	/^  ExeVFP = 1,$/;"	e	enum:ARMExeDomain	file:
ExecCount	Analysis/ProfileEstimatorPass.cpp	/^    double ExecCount;$/;"	m	class:__anon9::ProfileEstimatorPass	file:
ExecGraphViewer	Support/GraphWriter.cpp	/^ExecGraphViewer(const sys::Path &ExecPath, std::vector<const char*> &args,$/;"	f	file:
ExecuteAndWait	Support/Program.cpp	/^Program::ExecuteAndWait(const Path& path,$/;"	f	class:Program
ExecuteNoWait	Support/Program.cpp	/^Program::ExecuteNoWait(const Path& path,$/;"	f	class:Program
ExecuteOnThread_Dispatch	Support/Threading.cpp	/^static void *ExecuteOnThread_Dispatch(void *Arg) {$/;"	f	file:
ExecuteOneTest	Support/DAGDeltaAlgorithm.cpp	/^  bool ExecuteOneTest(const changeset_ty &S) {$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
ExecutePostLayoutBinding	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::ExecutePostLayoutBinding(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
ExecutePostLayoutBinding	MC/MachObjectWriter.cpp	/^void MachObjectWriter::ExecutePostLayoutBinding(MCAssembler &Asm,$/;"	f	class:MachObjectWriter
ExecutePostLayoutBinding	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::ExecutePostLayoutBinding(MCAssembler &Asm,$/;"	f	class:WinCOFFObjectWriter
ExecutionContext	ExecutionEngine/Interpreter/Interpreter.h	/^struct ExecutionContext {$/;"	s	namespace:llvm
ExecutionEngine	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngine::ExecutionEngine(Module *M)$/;"	f	class:ExecutionEngine
ExecutionEngineState	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngineState::ExecutionEngineState(ExecutionEngine &EE)$/;"	f	class:ExecutionEngineState
Executions	VMCore/PassManager.cpp	/^  None, Arguments, Structure, Executions, Details$/;"	e	enum:llvm::PassDebugLevel	file:
Exit	CodeGen/SpillPlacement.h	/^    BorderConstraint Exit : 8;  \/\/\/< Constraint on block exit.$/;"	m	struct:llvm::SpillPlacement::BlockConstraint
ExitBlocks	CodeGen/MachineLICM.cpp	/^    SmallVector<MachineBasicBlock*, 8> ExitBlocks;$/;"	m	class:__anon156::MachineLICM	file:
ExitLoc	MC/MCParser/AsmParser.cpp	/^  SMLoc ExitLoc;$/;"	m	struct:__anon211::MacroInstantiation	file:
ExitScope	CodeGen/MachineCSE.cpp	/^void MachineCSE::ExitScope(MachineBasicBlock *MBB) {$/;"	f	class:MachineCSE
ExitScope	CodeGen/MachineLICM.cpp	/^void MachineLICM::ExitScope(MachineBasicBlock *MBB) {$/;"	f	class:MachineLICM
ExitScopeIfDone	CodeGen/MachineCSE.cpp	/^MachineCSE::ExitScopeIfDone(MachineDomTreeNode *Node,$/;"	f	class:MachineCSE
ExitScopeIfDone	CodeGen/MachineLICM.cpp	/^void MachineLICM::ExitScopeIfDone(MachineDomTreeNode *Node,$/;"	f	class:MachineLICM
ExitValue	ExecutionEngine/Interpreter/Interpreter.h	/^  GenericValue ExitValue;          \/\/ The return value of the called function$/;"	m	class:llvm::Interpreter
Exp2	Transforms/Scalar/SimplifyLibCalls.cpp	/^    CosOpt Cos; PowOpt Pow; Exp2Opt Exp2;$/;"	m	class:__anon546::SimplifyLibCalls	file:
Exp2Opt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct Exp2Opt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
Expand	Transforms/Scalar/LoopStrengthReduce.cpp	/^Value *LSRInstance::Expand(const LSRFixup &LF,$/;"	f	class:LSRInstance
Expand2AddrUndef	Target/X86/X86InstrInfo.cpp	/^static bool Expand2AddrUndef(MachineInstr *MI, const MCInstrDesc &Desc) {$/;"	f	file:
Expand64BitShift	Target/ARM/ARMISelLowering.cpp	/^static SDValue Expand64BitShift(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
ExpandADDSUB	Target/XCore/XCoreISelLowering.cpp	/^ExpandADDSUB(SDNode *N, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
ExpandAtomic	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^std::pair <SDValue, SDValue> SelectionDAGLegalize::ExpandAtomic(SDNode *Node) {$/;"	f	class:SelectionDAGLegalize
ExpandAtomic	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^std::pair <SDValue, SDValue> DAGTypeLegalizer::ExpandAtomic(SDNode *Node) {$/;"	f	class:DAGTypeLegalizer
ExpandBITCAST	Target/ARM/ARMISelLowering.cpp	/^static SDValue ExpandBITCAST(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
ExpandBSWAP	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandBSWAP(SDValue Op, DebugLoc dl) {$/;"	f	class:SelectionDAGLegalize
ExpandBUILD_VECTOR	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandBUILD_VECTOR(SDNode *Node) {$/;"	f	class:SelectionDAGLegalize
ExpandBinOp	Analysis/InstructionSimplify.cpp	/^static Value *ExpandBinOp(unsigned Opcode, Value *LHS, Value *RHS,$/;"	f	file:
ExpandBitCount	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandBitCount(unsigned Opc, SDValue Op,$/;"	f	class:SelectionDAGLegalize
ExpandBuildPairF64	Target/Mips/MipsSEInstrInfo.cpp	/^void MipsSEInstrInfo::ExpandBuildPairF64(MachineBasicBlock &MBB,$/;"	f	class:MipsSEInstrInfo
ExpandChainLibCall	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SelectionDAGLegalize::ExpandChainLibCall(RTLIB::Libcall LC,$/;"	f	class:SelectionDAGLegalize
ExpandChainLibCall	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^DAGTypeLegalizer::ExpandChainLibCall(RTLIB::Libcall LC,$/;"	f	class:DAGTypeLegalizer
ExpandConstantFP	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SelectionDAGLegalize::ExpandConstantFP(ConstantFPSDNode *CFP, bool UseCP) {$/;"	f	class:SelectionDAGLegalize
ExpandDYNAMIC_STACKALLOC	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^void SelectionDAGLegalize::ExpandDYNAMIC_STACKALLOC(SDNode* Node,$/;"	f	class:SelectionDAGLegalize
ExpandDivRemLibCall	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SelectionDAGLegalize::ExpandDivRemLibCall(SDNode *Node,$/;"	f	class:SelectionDAGLegalize
ExpandExtractElementF64	Target/Mips/MipsSEInstrInfo.cpp	/^void MipsSEInstrInfo::ExpandExtractElementF64(MachineBasicBlock &MBB,$/;"	f	class:MipsSEInstrInfo
ExpandExtractFromVectorThroughStack	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandExtractFromVectorThroughStack(SDValue Op) {$/;"	f	class:SelectionDAGLegalize
ExpandFCOPYSIGN	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandFCOPYSIGN(SDNode* Node) {$/;"	f	class:SelectionDAGLegalize
ExpandFNEG	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::ExpandFNEG(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
ExpandFPLibCall	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandFPLibCall(SDNode* Node,$/;"	f	class:SelectionDAGLegalize
ExpandFPMLxInstruction	Target/ARM/MLxExpansionPass.cpp	/^MLxExpansion::ExpandFPMLxInstruction(MachineBasicBlock &MBB, MachineInstr *MI,$/;"	f	class:MLxExpansion
ExpandFPMLxInstructions	Target/ARM/MLxExpansionPass.cpp	/^bool MLxExpansion::ExpandFPMLxInstructions(MachineBasicBlock &MBB) {$/;"	f	class:MLxExpansion
ExpandFloatOp_BR_CC	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandFloatOp_BR_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandFloatOp_FP_ROUND	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandFloatOp_FP_ROUND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandFloatOp_FP_TO_SINT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandFloatOp_FP_TO_SINT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandFloatOp_FP_TO_UINT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandFloatOp_FP_TO_UINT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandFloatOp_SELECT_CC	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandFloatOp_SELECT_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandFloatOp_SETCC	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandFloatOp_SETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandFloatOp_STORE	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandFloatOp_STORE(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
ExpandFloatOperand	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^bool DAGTypeLegalizer::ExpandFloatOperand(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_ConstantFP	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_ConstantFP(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FABS	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FABS(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FADD	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FADD(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FCEIL	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FCEIL(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FCOPYSIGN	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FCOPYSIGN(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FCOS	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FCOS(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FDIV	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FDIV(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FEXP	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FEXP(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FEXP2	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FEXP2(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FFLOOR	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FFLOOR(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FLOG	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FLOG(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FLOG10	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FLOG10(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FLOG2	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FLOG2(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FMA	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FMA(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FMUL	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FMUL(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FNEARBYINT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FNEARBYINT(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FNEG	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FNEG(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FPOW	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FPOW(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FPOWI	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FPOWI(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FP_EXTEND	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FP_EXTEND(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FRINT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FRINT(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FSIN	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FSIN(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FSQRT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FSQRT(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FSUB	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FSUB(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_FTRUNC	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_FTRUNC(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_LOAD	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_LOAD(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatRes_XINT_TO_FP	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatRes_XINT_TO_FP(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandFloatResult	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::ExpandFloatResult(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
ExpandINSERT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^ExpandINSERT_VECTOR_ELT(SDValue Vec, SDValue Val, SDValue Idx, DebugLoc dl) {$/;"	f	class:SelectionDAGLegalize
ExpandISelPseudos	CodeGen/ExpandISelPseudos.cpp	/^    ExpandISelPseudos() : MachineFunctionPass(ID) {}$/;"	f	class:__anon124::ExpandISelPseudos
ExpandISelPseudos	CodeGen/ExpandISelPseudos.cpp	/^  class ExpandISelPseudos : public MachineFunctionPass {$/;"	c	namespace:__anon124	file:
ExpandISelPseudosID	CodeGen/ExpandISelPseudos.cpp	/^char &llvm::ExpandISelPseudosID = ExpandISelPseudos::ID;$/;"	m	class:llvm	file:
ExpandInlineAsm	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::ExpandInlineAsm(CallInst *CI) const {$/;"	f	class:ARMTargetLowering
ExpandInlineAsm	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::ExpandInlineAsm(CallInst *CI) const {$/;"	f	class:X86TargetLowering
ExpandInsertToVectorThroughStack	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandInsertToVectorThroughStack(SDValue Op) {$/;"	f	class:SelectionDAGLegalize
ExpandIntLibCall	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandIntLibCall(SDNode* Node, bool isSigned,$/;"	f	class:SelectionDAGLegalize
ExpandIntOp_ATOMIC_STORE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_ATOMIC_STORE(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandIntOp_BR_CC	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_BR_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandIntOp_RETURNADDR	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_RETURNADDR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandIntOp_SELECT_CC	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_SELECT_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandIntOp_SETCC	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_SETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandIntOp_SINT_TO_FP	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_SINT_TO_FP(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandIntOp_STORE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_STORE(StoreSDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
ExpandIntOp_Shift	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_Shift(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandIntOp_TRUNCATE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_TRUNCATE(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandIntOp_UINT_TO_FP	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::ExpandIntOp_UINT_TO_FP(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_ADDSUB	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_ADDSUB(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_ADDSUBC	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_ADDSUBC(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_ADDSUBE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_ADDSUBE(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_ANY_EXTEND	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_ANY_EXTEND(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_ATOMIC_LOAD	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_ATOMIC_LOAD(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_AssertSext	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_AssertSext(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_AssertZext	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_AssertZext(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_BSWAP	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_BSWAP(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_CTLZ	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_CTLZ(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_CTPOP	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_CTPOP(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_CTTZ	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_CTTZ(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_Constant	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_Constant(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_FP_TO_SINT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_FP_TO_SINT(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_FP_TO_UINT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_FP_TO_UINT(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_LOAD	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_LOAD(LoadSDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_Logical	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_Logical(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_MERGE_VALUES	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_MERGE_VALUES(SDNode *N, unsigned ResNo,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_MUL	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_MUL(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_SADDSUBO	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_SADDSUBO(SDNode *Node,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_SDIV	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_SDIV(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_SIGN_EXTEND	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_SIGN_EXTEND(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_SIGN_EXTEND_INREG	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^ExpandIntRes_SIGN_EXTEND_INREG(SDNode *N, SDValue &Lo, SDValue &Hi) {$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_SREM	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_SREM(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_Shift	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_Shift(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_TRUNCATE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_TRUNCATE(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_UADDSUBO	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_UADDSUBO(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_UDIV	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_UDIV(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_UREM	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_UREM(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_XMULO	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_XMULO(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntRes_ZERO_EXTEND	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntRes_ZERO_EXTEND(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ExpandIntegerOperand	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^bool DAGTypeLegalizer::ExpandIntegerOperand(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
ExpandIntegerResult	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandIntegerResult(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
ExpandLaneOp	Target/ARM/ARMExpandPseudoInsts.cpp	/^void ARMExpandPseudo::ExpandLaneOp(MachineBasicBlock::iterator &MBBI) {$/;"	f	class:ARMExpandPseudo
ExpandLegalINT_TO_FP	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandLegalINT_TO_FP(bool isSigned,$/;"	f	class:SelectionDAGLegalize
ExpandLibCall	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandLibCall(RTLIB::Libcall LC, EVT RetVT,$/;"	f	class:SelectionDAGLegalize
ExpandLibCall	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandLibCall(RTLIB::Libcall LC, SDNode *Node,$/;"	f	class:SelectionDAGLegalize
ExpandLibCall	Target/CellSPU/SPUISelLowering.cpp	/^  ExpandLibCall(RTLIB::Libcall LC, SDValue Op, SelectionDAG &DAG,$/;"	f	namespace:__anon419
ExpandLoad	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::ExpandLoad(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
ExpandMBB	Target/ARM/ARMExpandPseudoInsts.cpp	/^bool ARMExpandPseudo::ExpandMBB(MachineBasicBlock &MBB) {$/;"	f	class:ARMExpandPseudo
ExpandMI	Target/ARM/ARMExpandPseudoInsts.cpp	/^bool ARMExpandPseudo::ExpandMI(MachineBasicBlock &MBB,$/;"	f	class:ARMExpandPseudo
ExpandMOV32BitImm	Target/ARM/ARMExpandPseudoInsts.cpp	/^void ARMExpandPseudo::ExpandMOV32BitImm(MachineBasicBlock &MBB,$/;"	f	class:ARMExpandPseudo
ExpandNode	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^void SelectionDAGLegalize::ExpandNode(SDNode *Node) {$/;"	f	class:SelectionDAGLegalize
ExpandOp_BITCAST	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^SDValue DAGTypeLegalizer::ExpandOp_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandOp_BUILD_VECTOR	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^SDValue DAGTypeLegalizer::ExpandOp_BUILD_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandOp_EXTRACT_ELEMENT	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^SDValue DAGTypeLegalizer::ExpandOp_EXTRACT_ELEMENT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandOp_INSERT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^SDValue DAGTypeLegalizer::ExpandOp_INSERT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandOp_NormalStore	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^SDValue DAGTypeLegalizer::ExpandOp_NormalStore(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
ExpandOp_SCALAR_TO_VECTOR	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^SDValue DAGTypeLegalizer::ExpandOp_SCALAR_TO_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ExpandPostRA	CodeGen/ExpandPostRAPseudos.cpp	/^  ExpandPostRA() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon165::ExpandPostRA
ExpandPostRA	CodeGen/ExpandPostRAPseudos.cpp	/^struct ExpandPostRA : public MachineFunctionPass {$/;"	s	namespace:__anon165	file:
ExpandPostRAPseudosID	CodeGen/ExpandPostRAPseudos.cpp	/^char &llvm::ExpandPostRAPseudosID = ExpandPostRA::ID;$/;"	m	class:llvm	file:
ExpandPowI	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static SDValue ExpandPowI(DebugLoc DL, SDValue LHS, SDValue RHS,$/;"	f	file:
ExpandRes_BITCAST	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::ExpandRes_BITCAST(SDNode *N, SDValue &Lo, SDValue &Hi) {$/;"	f	class:DAGTypeLegalizer
ExpandRes_BUILD_PAIR	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::ExpandRes_BUILD_PAIR(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandRes_EXTRACT_ELEMENT	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::ExpandRes_EXTRACT_ELEMENT(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandRes_EXTRACT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::ExpandRes_EXTRACT_VECTOR_ELT(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandRes_MERGE_VALUES	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::ExpandRes_MERGE_VALUES(SDNode *N, unsigned ResNo,$/;"	f	class:DAGTypeLegalizer
ExpandRes_NormalLoad	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::ExpandRes_NormalLoad(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
ExpandRes_VAARG	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::ExpandRes_VAARG(SDNode *N, SDValue &Lo, SDValue &Hi) {$/;"	f	class:DAGTypeLegalizer
ExpandResponseFiles	Support/CommandLine.cpp	/^static void ExpandResponseFiles(unsigned argc, const char*const* argv,$/;"	f	file:
ExpandRetRA	Target/Mips/MipsSEInstrInfo.cpp	/^void MipsSEInstrInfo::ExpandRetRA(MachineBasicBlock &MBB,$/;"	f	class:MipsSEInstrInfo
ExpandRetRA16	Target/Mips/Mips16InstrInfo.cpp	/^void Mips16InstrInfo::ExpandRetRA16(MachineBasicBlock &MBB,$/;"	f	class:Mips16InstrInfo
ExpandSCALAR_TO_VECTOR	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandSCALAR_TO_VECTOR(SDNode *Node) {$/;"	f	class:SelectionDAGLegalize
ExpandSELECT	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::ExpandSELECT(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
ExpandShiftByConstant	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::ExpandShiftByConstant(SDNode *N, unsigned Amt,$/;"	f	class:DAGTypeLegalizer
ExpandShiftWithKnownAmountBit	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^ExpandShiftWithKnownAmountBit(SDNode *N, SDValue &Lo, SDValue &Hi) {$/;"	f	class:DAGTypeLegalizer
ExpandShiftWithUnknownAmountBit	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^ExpandShiftWithUnknownAmountBit(SDNode *N, SDValue &Lo, SDValue &Hi) {$/;"	f	class:DAGTypeLegalizer
ExpandStore	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::ExpandStore(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
ExpandUINT_TO_FLOAT	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::ExpandUINT_TO_FLOAT(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
ExpandUnalignedLoad	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^ExpandUnalignedLoad(LoadSDNode *LD, SelectionDAG &DAG,$/;"	f	file:
ExpandUnalignedStore	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^static void ExpandUnalignedStore(StoreSDNode *ST, SelectionDAG &DAG,$/;"	f	file:
ExpandVLD	Target/ARM/ARMExpandPseudoInsts.cpp	/^void ARMExpandPseudo::ExpandVLD(MachineBasicBlock::iterator &MBBI) {$/;"	f	class:ARMExpandPseudo
ExpandVSELECT	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::ExpandVSELECT(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
ExpandVST	Target/ARM/ARMExpandPseudoInsts.cpp	/^void ARMExpandPseudo::ExpandVST(MachineBasicBlock::iterator &MBBI) {$/;"	f	class:ARMExpandPseudo
ExpandVTBL	Target/ARM/ARMExpandPseudoInsts.cpp	/^void ARMExpandPseudo::ExpandVTBL(MachineBasicBlock::iterator &MBBI,$/;"	f	class:ARMExpandPseudo
ExpandVectorBuildThroughStack	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::ExpandVectorBuildThroughStack(SDNode* Node) {$/;"	f	class:SelectionDAGLegalize
ExpandedFloats	CodeGen/SelectionDAG/LegalizeTypes.h	/^  DenseMap<SDValue, std::pair<SDValue, SDValue> > ExpandedFloats;$/;"	m	class:llvm::DAGTypeLegalizer
ExpandedIntegers	CodeGen/SelectionDAG/LegalizeTypes.h	/^  DenseMap<SDValue, std::pair<SDValue, SDValue> > ExpandedIntegers;$/;"	m	class:llvm::DAGTypeLegalizer
ExplicitRelSym	MC/ELFObjectWriter.cpp	/^    const MCSymbol *ExplicitRelSym(const MCAssembler &Asm,$/;"	f	class:__anon225::ELFObjectWriter
ExplicitRelSym	MC/MCELFObjectTargetWriter.cpp	/^const MCSymbol *MCELFObjectTargetWriter::ExplicitRelSym(const MCAssembler &Asm,$/;"	f	class:MCELFObjectTargetWriter
ExplicitRelSym	Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp	/^const MCSymbol *ARMELFObjectWriter::ExplicitRelSym(const MCAssembler &Asm,$/;"	f	class:ARMELFObjectWriter
ExplicitRelSym	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^const MCSymbol *MipsELFObjectWriter::ExplicitRelSym(const MCAssembler &Asm,$/;"	f	class:MipsELFObjectWriter
ExplicitSymbols	Support/DynamicLibrary.cpp	/^static llvm::StringMap<void *> *ExplicitSymbols = 0;$/;"	v	file:
ExplicitSymbolsDeleter	Support/DynamicLibrary.cpp	/^struct ExplicitSymbolsDeleter {$/;"	s	namespace:__anon242	file:
ExportFromCurrentBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::ExportFromCurrentBlock(const Value *V) {$/;"	f	class:SelectionDAGBuilder
ExportSection	MC/WinCOFFObjectWriter.cpp	/^bool WinCOFFObjectWriter::ExportSection(COFFSection const *S) {$/;"	f	class:WinCOFFObjectWriter
ExportSymbol	MC/WinCOFFObjectWriter.cpp	/^bool WinCOFFObjectWriter::ExportSymbol(MCSymbolData const &SymbolData,$/;"	f	class:WinCOFFObjectWriter
ExportedFunctions	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static ManagedStatic<std::map<const Function *, ExFunc> > ExportedFunctions;$/;"	v	file:
ExposePointerBase	Analysis/ScalarEvolutionExpander.cpp	/^static void ExposePointerBase(const SCEV *&Base, const SCEV *&Rest,$/;"	f	file:
ExposesReturnsTwice	Analysis/InlineCost.cpp	/^  bool ExposesReturnsTwice;$/;"	m	class:__anon28::CallAnalyzer	file:
Expr	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  const MCExpr *Expr;$/;"	m	class:llvm::ARMMCExpr
ExprBase	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const SCEV *ExprBase;$/;"	m	struct:__anon518::IVChain	file:
ExprConstants	VMCore/LLVMContextImpl.h	/^    ExprConstants;$/;"	m	class:llvm::LLVMContextImpl
ExprMapKeyType	VMCore/ConstantsContext.h	/^  ExprMapKeyType(unsigned opc,$/;"	f	struct:llvm::ExprMapKeyType
ExprMapKeyType	VMCore/ConstantsContext.h	/^struct ExprMapKeyType {$/;"	s	namespace:llvm
Expression	Transforms/Scalar/GVN.cpp	/^    Expression(uint32_t o = ~2U) : opcode(o) { }$/;"	f	struct:__anon536::Expression
Expression	Transforms/Scalar/GVN.cpp	/^  struct Expression {$/;"	s	namespace:__anon536	file:
Exps	CodeGen/MachineCSE.cpp	/^    SmallVector<MachineInstr*, 64> Exps;$/;"	m	class:__anon161::MachineCSE	file:
ExpungeNode	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::ExpungeNode(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
Ext	Target/Mips/MipsISelLowering.h	/^      Ext,$/;"	e	enum:llvm::MipsISD::NodeType
ExtFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ExtFrm        = 14 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
ExtRotImmShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ExtRotImmShift = 10,$/;"	e	enum:llvm::ARMII::__anon288
ExtendSetCCUses	CodeGen/SelectionDAG/DAGCombiner.cpp	/^void DAGCombiner::ExtendSetCCUses(SmallVector<SDNode*, 4> SetCCs,$/;"	f	class:DAGCombiner
ExtendUsesToFormExtLoad	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static bool ExtendUsesToFormExtLoad(SDNode *N, SDValue N0,$/;"	f	file:
ExtendedInsts	Target/MSP430/MSP430Subtarget.h	/^  bool ExtendedInsts;$/;"	m	class:llvm::MSP430Subtarget
Extension	Analysis/BasicAliasAnalysis.cpp	/^    ExtensionKind Extension;$/;"	m	struct:__anon14::VariableGEPIndex	file:
ExtensionKind	Analysis/BasicAliasAnalysis.cpp	/^  enum ExtensionKind {$/;"	g	namespace:__anon14	file:
ExternalCallingNode	Analysis/IPA/CallGraph.cpp	/^  CallGraphNode *ExternalCallingNode;$/;"	m	class:__anon2::BasicCallGraph	file:
ExternalFnToStubMap	ExecutionEngine/JIT/JITEmitter.cpp	/^    std::map<void*, void*> ExternalFnToStubMap;$/;"	m	class:__anon182::JITResolver	file:
ExternalNames	Transforms/IPO/Internalize.cpp	/^    std::set<std::string> ExternalNames;$/;"	m	class:__anon593::InternalizePass	file:
ExternalSymbolData	MC/ELFObjectWriter.cpp	/^    std::vector<ELFSymbolData> ExternalSymbolData;$/;"	m	class:__anon225::ELFObjectWriter	file:
ExternalSymbolRelocations	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  StringMap<RelocationList> ExternalSymbolRelocations;$/;"	m	class:llvm::RuntimeDyldImpl
Externals	Target/X86/X86COFFMachineModuleInfo.h	/^  DenseSet<MCSymbol const *> Externals;$/;"	m	class:llvm::X86COFFMachineModuleInfo
ExtraCost	CodeGen/IfConversion.cpp	/^      unsigned ExtraCost;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
ExtraCost2	CodeGen/IfConversion.cpp	/^      unsigned ExtraCost2;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
ExtraData	ExecutionEngine/JIT/JITEmitter.cpp	/^      typedef JITEmitter *ExtraData;$/;"	t	struct:__anon182::JITEmitter::EmittedFunctionConfig	file:
ExtraData	ExecutionEngine/JIT/JITEmitter.cpp	/^    typedef JITResolverState *ExtraData;$/;"	t	struct:__anon182::CallSiteValueMapConfig	file:
ExtraData	ExecutionEngine/JIT/JITEmitter.cpp	/^    typedef JITResolverState *ExtraData;$/;"	t	struct:__anon182::NoRAUWValueMapConfig	file:
ExtraRegInfo	CodeGen/RegAllocGreedy.cpp	/^  IndexedMap<RegInfo, VirtReg2IndexFunctor> ExtraRegInfo;$/;"	m	class:__anon158::RAGreedy	file:
ExtraVersionPrinters	Support/CommandLine.cpp	/^static std::vector<void (*)()>* ExtraVersionPrinters = 0;$/;"	v	file:
ExtraWeight	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    uint32_t ExtraWeight;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestCase
ExtraWeight	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    uint32_t ExtraWeight;$/;"	m	struct:llvm::SelectionDAGBuilder::Case
ExtraWeight	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    uint32_t ExtraWeight;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBits
Extract128BitVector	Target/X86/X86ISelLowering.cpp	/^static SDValue Extract128BitVector(SDValue Vec, unsigned IdxVal,$/;"	f	file:
ExtractBranchMetadata	Transforms/Utils/SimplifyCFG.cpp	/^static bool ExtractBranchMetadata(BranchInst *BI,$/;"	f	file:
ExtractConstantBytes	VMCore/ConstantFold.cpp	/^static Constant *ExtractConstantBytes(Constant *C, unsigned ByteStart,$/;"	f	file:
ExtractElement	Transforms/InstCombine/InstCombineCompares.cpp	/^static ConstantInt *ExtractElement(Constant *V, Constant *Idx) {$/;"	f	file:
ExtractElementConstantExpr	VMCore/ConstantsContext.h	/^  ExtractElementConstantExpr(Constant *C1, Constant *C2)$/;"	f	class:llvm::ExtractElementConstantExpr
ExtractElementConstantExpr	VMCore/ConstantsContext.h	/^class ExtractElementConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
ExtractElementF64	Target/Mips/MipsISelLowering.h	/^      ExtractElementF64,$/;"	e	enum:llvm::MipsISD::NodeType
ExtractElementInst	VMCore/Instructions.cpp	/^ExtractElementInst::ExtractElementInst(Value *Val, Value *Index,$/;"	f	class:ExtractElementInst
ExtractEquivalentCondition	Analysis/InstructionSimplify.cpp	/^static Value *ExtractEquivalentCondition(Value *V, CmpInst::Predicate Pred,$/;"	f	file:
ExtractHoistableLoad	CodeGen/MachineLICM.cpp	/^MachineInstr *MachineLICM::ExtractHoistableLoad(MachineInstr *MI) {$/;"	f	class:MachineLICM
ExtractImmediate	Transforms/Scalar/LoopStrengthReduce.cpp	/^static int64_t ExtractImmediate(const SCEV *&S, ScalarEvolution &SE) {$/;"	f	file:
ExtractSymbol	Transforms/Scalar/LoopStrengthReduce.cpp	/^static GlobalValue *ExtractSymbol(const SCEV *&S, ScalarEvolution &SE) {$/;"	f	file:
ExtractTypeInfo	CodeGen/Analysis.cpp	/^GlobalVariable *llvm::ExtractTypeInfo(Value *V) {$/;"	f	class:llvm
ExtractValueConstantExpr	VMCore/ConstantsContext.h	/^  ExtractValueConstantExpr(Constant *Agg,$/;"	f	class:llvm::ExtractValueConstantExpr
ExtractValueConstantExpr	VMCore/ConstantsContext.h	/^class ExtractValueConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
ExtractValueInst	VMCore/Instructions.cpp	/^ExtractValueInst::ExtractValueInst(const ExtractValueInst &EVI)$/;"	f	class:ExtractValueInst
F	Analysis/InlineCost.cpp	/^  Function &F;$/;"	m	class:__anon28::CallAnalyzer	file:
F	Analysis/MemDepPrinter.cpp	/^    const Function *F;$/;"	m	struct:__anon33::MemDepPrinter	file:
F	AsmParser/LLParser.h	/^      Function &F;$/;"	m	class:llvm::LLParser::PerFunctionState
F	CodeGen/ShadowStackGC.cpp	/^    Function &F;$/;"	m	class:__anon149::EscapeEnumerator	file:
F	CodeGen/StackProtector.cpp	/^    Function *F;$/;"	m	class:__anon130::StackProtector	file:
F	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    F = 1,$/;"	e	enum:llvm::ARM_PROC::IFlags
F	Target/NVPTX/NVPTXAsmPrinter.h	/^  const Function *F;$/;"	m	class:llvm::NVPTXAsmPrinter
F	Transforms/IPO/DeadArgumentElimination.cpp	/^      const Function *F;$/;"	m	struct:__anon600::DAE::RetOrArg	file:
F1	Transforms/IPO/MergeFunctions.cpp	/^  const Function *F1, *F2;$/;"	m	class:__anon597::FunctionComparator	file:
F2	Transforms/IPO/MergeFunctions.cpp	/^  const Function *F1, *F2;$/;"	m	class:__anon597::FunctionComparator	file:
FADDRTZ	Target/PowerPC/PPCISelLowering.h	/^      FADDRTZ,$/;"	e	enum:llvm::PPCISD::NodeType
FALSE	Target/X86/Disassembler/X86DisassemblerDecoder.c	26;"	d	file:
FAND	Target/X86/X86ISelLowering.h	/^      FAND,$/;"	e	enum:llvm::X86ISD::NodeType
FBB	CodeGen/EarlyIfConversion.cpp	/^  MachineBasicBlock *FBB;$/;"	m	class:__anon91::SSAIfConv	file:
FC	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FC,$/;"	e	enum:llvm::MBlazeII::__anon458
FCCI	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FCCI,$/;"	e	enum:llvm::MBlazeII::__anon458
FCCR	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FCCR,$/;"	e	enum:llvm::MBlazeII::__anon458
FCC_E	Target/Sparc/Sparc.h	/^      FCC_E   =  9+16,  \/\/ Equal$/;"	e	enum:llvm::SPCC::CondCodes
FCC_G	Target/Sparc/Sparc.h	/^      FCC_G   =  6+16,  \/\/ Greater$/;"	e	enum:llvm::SPCC::CondCodes
FCC_GE	Target/Sparc/Sparc.h	/^      FCC_GE  = 11+16,  \/\/ Greater or Equal$/;"	e	enum:llvm::SPCC::CondCodes
FCC_L	Target/Sparc/Sparc.h	/^      FCC_L   =  4+16,  \/\/ Less$/;"	e	enum:llvm::SPCC::CondCodes
FCC_LE	Target/Sparc/Sparc.h	/^      FCC_LE  = 13+16,  \/\/ Less or Equal$/;"	e	enum:llvm::SPCC::CondCodes
FCC_LG	Target/Sparc/Sparc.h	/^      FCC_LG  =  2+16,  \/\/ Less or Greater$/;"	e	enum:llvm::SPCC::CondCodes
FCC_NE	Target/Sparc/Sparc.h	/^      FCC_NE  =  1+16,  \/\/ Not Equal$/;"	e	enum:llvm::SPCC::CondCodes
FCC_O	Target/Sparc/Sparc.h	/^      FCC_O   = 15+16   \/\/ Ordered$/;"	e	enum:llvm::SPCC::CondCodes
FCC_U	Target/Sparc/Sparc.h	/^      FCC_U   =  7+16,  \/\/ Unordered$/;"	e	enum:llvm::SPCC::CondCodes
FCC_UE	Target/Sparc/Sparc.h	/^      FCC_UE  = 10+16,  \/\/ Unordered or Equal$/;"	e	enum:llvm::SPCC::CondCodes
FCC_UG	Target/Sparc/Sparc.h	/^      FCC_UG  =  5+16,  \/\/ Unordered or Greater$/;"	e	enum:llvm::SPCC::CondCodes
FCC_UGE	Target/Sparc/Sparc.h	/^      FCC_UGE = 12+16,  \/\/ Unordered or Greater or Equal$/;"	e	enum:llvm::SPCC::CondCodes
FCC_UL	Target/Sparc/Sparc.h	/^      FCC_UL  =  3+16,  \/\/ Unordered or Less$/;"	e	enum:llvm::SPCC::CondCodes
FCC_ULE	Target/Sparc/Sparc.h	/^      FCC_ULE = 14+16,  \/\/ Unordered or Less or Equal$/;"	e	enum:llvm::SPCC::CondCodes
FCFID	Target/PowerPC/PPCISelLowering.h	/^      FCFID,$/;"	e	enum:llvm::PPCISD::NodeType
FCOND_EQ	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_EQ,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_F	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_F,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_F	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_F,$/;"	e	enum:llvm::Mips::CondCode
FCOND_GE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_GE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_GE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_GE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_GL	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_GL,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_GL	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_GL,$/;"	e	enum:llvm::Mips::CondCode
FCOND_GLE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_GLE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_GLE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_GLE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_GT	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_GT,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_GT	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_GT$/;"	e	enum:llvm::Mips::CondCode
FCOND_LE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_LE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_LE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_LE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_LT	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_LT,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_LT	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_LT,$/;"	e	enum:llvm::Mips::CondCode
FCOND_NEQ	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_NEQ,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_NGE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_NGE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_NGE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_NGE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_NGL	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_NGL,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_NGL	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_NGL,$/;"	e	enum:llvm::Mips::CondCode
FCOND_NGLE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_NGLE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_NGLE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_NGLE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_NGT	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_NGT,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_NGT	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_NGT,$/;"	e	enum:llvm::Mips::CondCode
FCOND_NLE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_NLE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_NLE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_NLE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_NLT	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_NLT,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_NLT	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_NLT,$/;"	e	enum:llvm::Mips::CondCode
FCOND_OEQ	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_OEQ,$/;"	e	enum:llvm::Mips::CondCode
FCOND_OGE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_OGE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_OGE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_OGE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_OGL	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_OGL,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_OGT	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_OGT,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_OGT	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_OGT,$/;"	e	enum:llvm::Mips::CondCode
FCOND_OLE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_OLE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_OLE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_OLE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_OLT	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_OLT,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_OLT	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_OLT,$/;"	e	enum:llvm::Mips::CondCode
FCOND_ONE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_ONE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_OR	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_OR,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_OR	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_OR,$/;"	e	enum:llvm::Mips::CondCode
FCOND_SEQ	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_SEQ,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_SEQ	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_SEQ,$/;"	e	enum:llvm::Mips::CondCode
FCOND_SF	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_SF,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_SF	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_SF,$/;"	e	enum:llvm::Mips::CondCode
FCOND_SNE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_SNE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_SNE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_SNE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_ST	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_ST,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_ST	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_ST,$/;"	e	enum:llvm::Mips::CondCode
FCOND_T	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_T,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_T	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_T,$/;"	e	enum:llvm::Mips::CondCode
FCOND_UEQ	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_UEQ,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_UEQ	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_UEQ,$/;"	e	enum:llvm::Mips::CondCode
FCOND_UGE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_UGE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_UGE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_UGE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_UGT	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_UGT,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_UGT	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_UGT,$/;"	e	enum:llvm::Mips::CondCode
FCOND_ULE	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_ULE,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_ULE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_ULE,$/;"	e	enum:llvm::Mips::CondCode
FCOND_ULT	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_ULT,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_ULT	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_ULT,$/;"	e	enum:llvm::Mips::CondCode
FCOND_UN	Target/MBlaze/MBlazeInstrInfo.h	/^    FCOND_UN,$/;"	e	enum:llvm::MBlaze::CondCode
FCOND_UN	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_UN,$/;"	e	enum:llvm::Mips::CondCode
FCOND_UNE	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  FCOND_UNE,$/;"	e	enum:llvm::Mips::CondCode
FCONST32	Target/Hexagon/HexagonISelLowering.h	/^      FCONST32,$/;"	e	enum:llvm::HexagonISD::__anon404
FCR	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FCR,$/;"	e	enum:llvm::MBlazeII::__anon458
FCRCS	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FCRCS,$/;"	e	enum:llvm::MBlazeII::__anon458
FCRCX	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FCRCX,$/;"	e	enum:llvm::MBlazeII::__anon458
FCRI	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FCRI,$/;"	e	enum:llvm::MBlazeII::__anon458
FCRR	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FCRR,$/;"	e	enum:llvm::MBlazeII::__anon458
FCTIDZ	Target/PowerPC/PPCISelLowering.h	/^      FCTIDZ, FCTIWZ,$/;"	e	enum:llvm::PPCISD::NodeType
FCTIWZ	Target/PowerPC/PPCISelLowering.h	/^      FCTIDZ, FCTIWZ,$/;"	e	enum:llvm::PPCISD::NodeType
FCX	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FCX,$/;"	e	enum:llvm::MBlazeII::__anon458
FCycles	CodeGen/EarlyIfConversion.cpp	/^    int CondCycles, TCycles, FCycles;$/;"	m	struct:__anon91::SSAIfConv::PHIInfo	file:
FFS	Transforms/Scalar/SimplifyLibCalls.cpp	/^    FFSOpt FFS; AbsOpt Abs; IsDigitOpt IsDigit; IsAsciiOpt IsAscii;$/;"	m	class:__anon546::SimplifyLibCalls	file:
FFSOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct FFSOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
FGETSIGNx86	Target/X86/X86ISelLowering.h	/^      FGETSIGNx86,$/;"	e	enum:llvm::X86ISD::NodeType
FHADD	Target/X86/X86ISelLowering.h	/^      FHADD,$/;"	e	enum:llvm::X86ISD::NodeType
FHSUB	Target/X86/X86ISelLowering.h	/^      FHSUB,$/;"	e	enum:llvm::X86ISD::NodeType
FI	CodeGen/GCStrategy.cpp	/^    GCFunctionInfo *FI;$/;"	m	class:__anon145::GCMachineCodeAnalysis	file:
FI	CodeGen/MachineLICM.cpp	/^      int           FI;$/;"	m	struct:__anon156::MachineLICM::CandidateInfo	file:
FI	Target/ARM/ARMFastISel.cpp	/^      int FI;$/;"	m	union:__anon307::Address::__anon309	file:
FI	Target/MBlaze/MBlazeMachineFunction.h	/^    int FI;$/;"	m	struct:llvm::MBlazeFunctionInfo::MBlazeFIHolder
FILD	Target/X86/X86ISelLowering.h	/^      FILD,$/;"	e	enum:llvm::X86ISD::NodeType
FILD_FLAG	Target/X86/X86ISelLowering.h	/^      FILD_FLAG,$/;"	e	enum:llvm::X86ISD::NodeType
FIRST	Target/MBlaze/MBlazeISelLowering.h	/^      FIRST = 0,$/;"	e	enum:llvm::MBlazeCC::CC
FIRST_NUMBER	Target/ARM/ARMISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::ARMISD::NodeType
FIRST_NUMBER	Target/CellSPU/SPUISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::SPUISD::NodeType
FIRST_NUMBER	Target/Hexagon/HexagonISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::HexagonISD::__anon404
FIRST_NUMBER	Target/MBlaze/MBlazeISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::MBlazeISD::NodeType
FIRST_NUMBER	Target/MSP430/MSP430ISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::MSP430ISD::__anon397
FIRST_NUMBER	Target/Mips/MipsISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::MipsISD::NodeType
FIRST_NUMBER	Target/NVPTX/NVPTXISelLowering.h	/^  FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::NVPTXISD::NodeType
FIRST_NUMBER	Target/PowerPC/PPCISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::PPCISD::NodeType
FIRST_NUMBER	Target/Sparc/SparcISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::SPISD::__anon444
FIRST_NUMBER	Target/X86/X86ISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::X86ISD::NodeType
FIRST_NUMBER	Target/XCore/XCoreISelLowering.h	/^      FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::XCoreISD::NodeType
FIReplacements	Target/MBlaze/MBlazeMachineFunction.h	/^  DenseMap<int,int> FIReplacements;$/;"	m	class:llvm::MBlazeFunctionInfo
FItoStackOffset	Target/CellSPU/SPUFrameLowering.h	/^    static int FItoStackOffset(int frame_index) {$/;"	f	class:llvm::SPUFrameLowering
FLD	Target/X86/X86ISelLowering.h	/^      FLD,$/;"	e	enum:llvm::X86ISD::NodeType
FLUSHW	Target/Sparc/SparcISelLowering.h	/^      FLUSHW       \/\/ FLUSH register windows to stack$/;"	e	enum:llvm::SPISD::__anon444
FMADD	Target/X86/X86ISelLowering.h	/^      FMADD,$/;"	e	enum:llvm::X86ISD::NodeType
FMADDSUB	Target/X86/X86ISelLowering.h	/^      FMADDSUB,$/;"	e	enum:llvm::X86ISD::NodeType
FMAX	Target/ARM/ARMISelLowering.h	/^      FMAX,$/;"	e	enum:llvm::ARMISD::NodeType
FMAX	Target/X86/X86ISelLowering.h	/^      FMAX, FMIN,$/;"	e	enum:llvm::X86ISD::NodeType
FMAXC	Target/X86/X86ISelLowering.h	/^      FMAXC, FMINC,$/;"	e	enum:llvm::X86ISD::NodeType
FMIN	Target/ARM/ARMISelLowering.h	/^      FMIN,$/;"	e	enum:llvm::ARMISD::NodeType
FMIN	Target/X86/X86ISelLowering.h	/^      FMAX, FMIN,$/;"	e	enum:llvm::X86ISD::NodeType
FMINC	Target/X86/X86ISelLowering.h	/^      FMAXC, FMINC,$/;"	e	enum:llvm::X86ISD::NodeType
FMSTAT	Target/ARM/ARMISelLowering.h	/^      FMSTAT,       \/\/ ARM fmstat instruction.$/;"	e	enum:llvm::ARMISD::NodeType
FMSUB	Target/X86/X86ISelLowering.h	/^      FMSUB,$/;"	e	enum:llvm::X86ISD::NodeType
FMSUBADD	Target/X86/X86ISelLowering.h	/^      FMSUBADD,$/;"	e	enum:llvm::X86ISD::NodeType
FNMADD	Target/X86/X86ISelLowering.h	/^      FNMADD,$/;"	e	enum:llvm::X86ISD::NodeType
FNMSUB	Target/X86/X86ISelLowering.h	/^      FNMSUB,$/;"	e	enum:llvm::X86ISD::NodeType
FNSTCW16m	Target/X86/X86ISelLowering.h	/^      FNSTCW16m,$/;"	e	enum:llvm::X86ISD::NodeType
FNSTSW16r	Target/X86/X86ISelLowering.h	/^      FNSTSW16r,$/;"	e	enum:llvm::X86ISD::NodeType
FOR	Target/X86/X86ISelLowering.h	/^      FOR,$/;"	e	enum:llvm::X86ISD::NodeType
FP128Ty	VMCore/LLVMContextImpl.h	/^  Type X86_FP80Ty, FP128Ty, PPC_FP128Ty, X86_MMXTy;$/;"	m	class:llvm::LLVMContextImpl
FP80HexToIntPair	AsmParser/LLLexer.cpp	/^void LLLexer::FP80HexToIntPair(const char *Buffer, const char *End,$/;"	f	class:LLLexer
FPBranchCode	Target/MBlaze/MBlazeInstrInfo.h	/^  enum FPBranchCode {$/;"	g	namespace:llvm::MBlaze
FPBranchCode	Target/Mips/InstPrinter/MipsInstPrinter.h	/^enum FPBranchCode {$/;"	g	namespace:llvm::Mips
FPBrcond	Target/Mips/MipsISelLowering.h	/^      FPBrcond,$/;"	e	enum:llvm::MipsISD::NodeType
FPCCToARMCC	Target/ARM/ARMISelLowering.cpp	/^static void FPCCToARMCC(ISD::CondCode CC, ARMCC::CondCodes &CondCode,$/;"	f	file:
FPCmp	Target/Mips/MipsISelLowering.h	/^      FPCmp,$/;"	e	enum:llvm::MipsISD::NodeType
FPCondCCodeToFCC	Target/Mips/MipsISelLowering.cpp	/^static Mips::CondCode FPCondCCodeToFCC(ISD::CondCode CC) {$/;"	f	file:
FPCondCCodeToFCC	Target/Sparc/SparcISelLowering.cpp	/^static SPCC::CondCodes FPCondCCodeToFCC(ISD::CondCode CC) {$/;"	f	file:
FPConstants	VMCore/LLVMContextImpl.h	/^  FPMapTy FPConstants;$/;"	m	class:llvm::LLVMContextImpl
FPExtInst	VMCore/Instructions.cpp	/^FPExtInst::FPExtInst($/;"	f	class:FPExtInst
FPH_NONTAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t FPH_NONTAKEN_WEIGHT = 12;$/;"	v	file:
FPH_TAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t FPH_TAKEN_WEIGHT = 20;$/;"	v	file:
FPMapTy	VMCore/LLVMContextImpl.h	/^                         DenseMapAPFloatKeyInfo> FPMapTy;$/;"	t	class:llvm::LLVMContextImpl
FPMover	Target/Sparc/FPMover.cpp	/^    explicit FPMover(TargetMachine &tm) $/;"	f	struct:__anon442::FPMover
FPMover	Target/Sparc/FPMover.cpp	/^  struct FPMover : public MachineFunctionPass {$/;"	s	namespace:__anon442	file:
FPOnlySP	Target/ARM/ARMSubtarget.h	/^  bool FPOnlySP;$/;"	m	class:llvm::ARMSubtarget
FPRound	Target/Mips/MipsISelLowering.h	/^      FPRound,$/;"	e	enum:llvm::MipsISD::NodeType
FPS	Target/X86/X86FloatingPoint.cpp	/^    FPS() : MachineFunctionPass(ID) {$/;"	f	struct:__anon386::FPS
FPS	Target/X86/X86FloatingPoint.cpp	/^  struct FPS : public MachineFunctionPass {$/;"	s	namespace:__anon386	file:
FPSpillSlot	Target/XCore/XCoreMachineFunctionInfo.h	/^  int FPSpillSlot;$/;"	m	class:llvm::XCoreFunctionInfo
FPStackOffset	Target/MBlaze/MBlazeMachineFunction.h	/^  int FPStackOffset;$/;"	m	class:llvm::MBlazeFunctionInfo
FPToSIInst	VMCore/Instructions.cpp	/^FPToSIInst::FPToSIInst($/;"	f	class:FPToSIInst
FPToUIInst	VMCore/Instructions.cpp	/^FPToUIInst::FPToUIInst($/;"	f	class:FPToUIInst
FPTruncInst	VMCore/Instructions.cpp	/^FPTruncInst::FPTruncInst($/;"	f	class:FPTruncInst
FPTypeMask	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    FPTypeMask  = 7 << FPTypeShift,$/;"	e	enum:llvm::X86II::__anon350
FPTypeShift	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    FPTypeShift = ImmShift + 3,$/;"	e	enum:llvm::X86II::__anon350
FP_FORMAT_D	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    FP_FORMAT_D,$/;"	e	enum:__anon422::MipsAsmParser::FpFormatTy	file:
FP_FORMAT_L	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    FP_FORMAT_L,$/;"	e	enum:__anon422::MipsAsmParser::FpFormatTy	file:
FP_FORMAT_NONE	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    FP_FORMAT_NONE = -1,$/;"	e	enum:__anon422::MipsAsmParser::FpFormatTy	file:
FP_FORMAT_S	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    FP_FORMAT_S,$/;"	e	enum:__anon422::MipsAsmParser::FpFormatTy	file:
FP_FORMAT_W	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    FP_FORMAT_W$/;"	e	enum:__anon422::MipsAsmParser::FpFormatTy	file:
FP_TO_INT16_IN_MEM	Target/X86/X86ISelLowering.h	/^      FP_TO_INT16_IN_MEM,$/;"	e	enum:llvm::X86ISD::NodeType
FP_TO_INT32_IN_MEM	Target/X86/X86ISelLowering.h	/^      FP_TO_INT32_IN_MEM,$/;"	e	enum:llvm::X86ISD::NodeType
FP_TO_INT64_IN_MEM	Target/X86/X86ISelLowering.h	/^      FP_TO_INT64_IN_MEM,$/;"	e	enum:llvm::X86ISD::NodeType
FP_TO_INTHelper	Target/X86/X86ISelLowering.cpp	/^FP_TO_INTHelper(SDValue Op, SelectionDAG &DAG, bool IsSigned, bool IsReplace) const {$/;"	f	class:X86TargetLowering
FPrintF	Transforms/Scalar/SimplifyLibCalls.cpp	/^    FWriteOpt FWrite; FPutsOpt FPuts; FPrintFOpt FPrintF;$/;"	m	class:__anon546::SimplifyLibCalls	file:
FPrintFOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct FPrintFOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
FPseudo	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FPseudo = 0,$/;"	e	enum:llvm::MBlazeII::__anon458
FPuts	Transforms/Scalar/SimplifyLibCalls.cpp	/^    FWriteOpt FWrite; FPutsOpt FPuts; FPrintFOpt FPrintF;$/;"	m	class:__anon546::SimplifyLibCalls	file:
FPutsOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct FPutsOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
FRAMEIX	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^    FRAMEIX = 2             \/\/ value is contents of a stack location$/;"	e	enum:llvm::SDDbgValue::DbgValueKind
FRCI	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRCI,$/;"	e	enum:llvm::MBlazeII::__anon458
FRCP	Target/X86/X86ISelLowering.h	/^      FRSQRT, FRCP,$/;"	e	enum:llvm::X86ISD::NodeType
FRCR	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRCR,$/;"	e	enum:llvm::MBlazeII::__anon458
FRCS	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRCS,$/;"	e	enum:llvm::MBlazeII::__anon458
FRCX	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRCX,$/;"	e	enum:llvm::MBlazeII::__anon458
FRI	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRI,$/;"	e	enum:llvm::MBlazeII::__anon458
FRIR	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRIR,$/;"	e	enum:llvm::MBlazeII::__anon458
FRR	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRR,$/;"	e	enum:llvm::MBlazeII::__anon458
FRRC	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRRC,$/;"	e	enum:llvm::MBlazeII::__anon458
FRRCI	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRRCI,$/;"	e	enum:llvm::MBlazeII::__anon458
FRRI	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRRI,$/;"	e	enum:llvm::MBlazeII::__anon458
FRRR	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRRR,$/;"	e	enum:llvm::MBlazeII::__anon458
FRRRR	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FRRRR,$/;"	e	enum:llvm::MBlazeII::__anon458
FRSQRT	Target/X86/X86ISelLowering.h	/^      FRSQRT, FRCP,$/;"	e	enum:llvm::X86ISD::NodeType
FReg	CodeGen/EarlyIfConversion.cpp	/^    unsigned TReg, FReg;$/;"	m	struct:__anon91::SSAIfConv::PHIInfo	file:
FS	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    FS          = 1 << SegOvrShift,$/;"	e	enum:llvm::X86II::__anon350
FSEL	Target/PowerPC/PPCISelLowering.h	/^      FSEL,$/;"	e	enum:llvm::PPCISD::NodeType
FSETCCsd	Target/X86/X86ISelLowering.h	/^      FSETCCss, FSETCCsd,$/;"	e	enum:llvm::X86ISD::NodeType
FSETCCss	Target/X86/X86ISelLowering.h	/^      FSETCCss, FSETCCsd,$/;"	e	enum:llvm::X86ISD::NodeType
FSRL	Target/X86/X86ISelLowering.h	/^      FSRL,$/;"	e	enum:llvm::X86ISD::NodeType
FST	Target/X86/X86ISelLowering.h	/^      FST,$/;"	e	enum:llvm::X86ISD::NodeType
FSValues	CodeGen/PseudoSourceValue.cpp	/^  std::map<int, const PseudoSourceValue *> FSValues;$/;"	m	struct:__anon100::PSVGlobalsTy	file:
FTOI	Target/Hexagon/HexagonISelLowering.h	/^      FTOI,        \/\/ FP to Int within a FP register.$/;"	e	enum:llvm::HexagonISD::__anon404
FTOI	Target/Sparc/SparcISelLowering.h	/^      FTOI,        \/\/ FP to Int within a FP register.$/;"	e	enum:llvm::SPISD::__anon444
FTOSI	Target/ARM/ARMISelLowering.h	/^      FTOSI,        \/\/ FP to sint within a FP register.$/;"	e	enum:llvm::ARMISD::NodeType
FTOUI	Target/ARM/ARMISelLowering.h	/^      FTOUI,        \/\/ FP to uint within a FP register.$/;"	e	enum:llvm::ARMISD::NodeType
FUNCTION_INST_BINOP_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  FUNCTION_INST_BINOP_ABBREV,$/;"	e	enum:__anon57	file:
FUNCTION_INST_BINOP_FLAGS_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  FUNCTION_INST_BINOP_FLAGS_ABBREV,$/;"	e	enum:__anon57	file:
FUNCTION_INST_CAST_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  FUNCTION_INST_CAST_ABBREV,$/;"	e	enum:__anon57	file:
FUNCTION_INST_LOAD_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  FUNCTION_INST_LOAD_ABBREV = bitc::FIRST_APPLICATION_ABBREV,$/;"	e	enum:__anon57	file:
FUNCTION_INST_RET_VAL_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  FUNCTION_INST_RET_VAL_ABBREV,$/;"	e	enum:__anon57	file:
FUNCTION_INST_RET_VOID_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  FUNCTION_INST_RET_VOID_ABBREV,$/;"	e	enum:__anon57	file:
FUNCTION_INST_UNREACHABLE_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  FUNCTION_INST_UNREACHABLE_ABBREV,$/;"	e	enum:__anon57	file:
FUNC_Initialize	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^static TPInitialize FUNC_Initialize=NULL;$/;"	v	file:
FUNC_NotifyEvent	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^static TPNotify FUNC_NotifyEvent=NULL;$/;"	v	file:
FWD	Support/regexec.c	100;"	d	file:
FWD	Support/regexec.c	125;"	d	file:
FWD	Support/regexec.c	76;"	d	file:
FWrite	Transforms/Scalar/SimplifyLibCalls.cpp	/^    FWriteOpt FWrite; FPutsOpt FPuts; FPrintFOpt FPrintF;$/;"	m	class:__anon546::SimplifyLibCalls	file:
FWriteOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct FWriteOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
FXOR	Target/X86/X86ISelLowering.h	/^      FXOR,$/;"	e	enum:llvm::X86ISD::NodeType
Factor	Transforms/Scalar/Reassociate.cpp	/^    Factor(Value *Base, unsigned Power) : Base(Base), Power(Power) {}$/;"	f	struct:__anon548::Factor
Factor	Transforms/Scalar/Reassociate.cpp	/^  struct Factor {$/;"	s	namespace:__anon548	file:
FactorOne	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static const unsigned FactorOne = 2;$/;"	v	file:
FactorOne	Target/Hexagon/HexagonMachineScheduler.cpp	/^static const unsigned FactorOne = 2;$/;"	v	file:
FactorOutConstant	Analysis/ScalarEvolutionExpander.cpp	/^static bool FactorOutConstant(const SCEV *&S,$/;"	f	file:
FactorizeBinOp	Analysis/InstructionSimplify.cpp	/^static Value *FactorizeBinOp(unsigned Opcode, Value *LHS, Value *RHS,$/;"	f	file:
Factors	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallSetVector<int64_t, 8> Factors;$/;"	m	class:__anon518::LSRInstance	file:
FailIndex	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  unsigned FailIndex;$/;"	m	struct:__anon71::MatchScope	file:
Failed	Support/CrashRecoveryContext.cpp	/^  volatile unsigned Failed : 1;$/;"	m	struct:__anon255::CrashRecoveryContextImpl	file:
Failed	Support/YAMLParser.cpp	/^  bool Failed;$/;"	m	class:llvm::yaml::Scanner	file:
FailedTestsCache	Support/DAGDeltaAlgorithm.cpp	/^  mutable std::set<changeset_ty> FailedTestsCache;$/;"	m	class:__anon233::DAGDeltaAlgorithmImpl	file:
FalseBB	CodeGen/IfConversion.cpp	/^      MachineBasicBlock *FalseBB;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
FalseBB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *TrueBB, *FalseBB;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBlock
FalseWeight	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    uint32_t TrueWeight, FalseWeight;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBlock
FarUsers	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallPtrSet<Instruction*, 4> FarUsers;$/;"	m	struct:__anon518::ChainUsers	file:
FastEmitBranch	CodeGen/SelectionDAG/FastISel.cpp	/^FastISel::FastEmitBranch(MachineBasicBlock *MSucc, DebugLoc DL) {$/;"	f	class:FastISel
FastEmitInst_	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_(unsigned MachineInstOpcode,$/;"	f	class:ARMFastISel
FastEmitInst_extractsubreg	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_extractsubreg(MVT RetVT,$/;"	f	class:FastISel
FastEmitInst_extractsubreg	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_extractsubreg(MVT RetVT,$/;"	f	class:ARMFastISel
FastEmitInst_i	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_i(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_i	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_i(unsigned MachineInstOpcode,$/;"	f	class:ARMFastISel
FastEmitInst_ii	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_ii(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_ii	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_ii(unsigned MachineInstOpcode,$/;"	f	class:ARMFastISel
FastEmitInst_r	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_r(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_r	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_r(unsigned MachineInstOpcode,$/;"	f	class:ARMFastISel
FastEmitInst_rf	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_rf(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_rf	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_rf(unsigned MachineInstOpcode,$/;"	f	class:ARMFastISel
FastEmitInst_ri	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_ri(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_ri	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_ri(unsigned MachineInstOpcode,$/;"	f	class:ARMFastISel
FastEmitInst_rii	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_rii(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_rr	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_rr(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_rr	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_rr(unsigned MachineInstOpcode,$/;"	f	class:ARMFastISel
FastEmitInst_rri	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_rri(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_rri	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_rri(unsigned MachineInstOpcode,$/;"	f	class:ARMFastISel
FastEmitInst_rrii	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_rrii(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_rrr	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitInst_rrr(unsigned MachineInstOpcode,$/;"	f	class:FastISel
FastEmitInst_rrr	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::FastEmitInst_rrr(unsigned MachineInstOpcode,$/;"	f	class:ARMFastISel
FastEmitZExtFromI1	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmitZExtFromI1(MVT VT, unsigned Op0, bool Op0IsKill) {$/;"	f	class:FastISel
FastEmit_	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmit_(MVT, MVT,$/;"	f	class:FastISel
FastEmit_f	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmit_f(MVT, MVT,$/;"	f	class:FastISel
FastEmit_i	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmit_i(MVT, MVT, unsigned, uint64_t \/*Imm*\/) {$/;"	f	class:FastISel
FastEmit_r	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmit_r(MVT, MVT,$/;"	f	class:FastISel
FastEmit_rf	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmit_rf(MVT, MVT,$/;"	f	class:FastISel
FastEmit_ri	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmit_ri(MVT, MVT,$/;"	f	class:FastISel
FastEmit_ri_	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmit_ri_(MVT VT, unsigned Opcode,$/;"	f	class:FastISel
FastEmit_rr	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmit_rr(MVT, MVT,$/;"	f	class:FastISel
FastEmit_rri	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::FastEmit_rri(MVT, MVT,$/;"	f	class:FastISel
FastISel	CodeGen/SelectionDAG/FastISel.cpp	/^FastISel::FastISel(FunctionLoweringInfo &funcInfo,$/;"	f	class:FastISel
FastPriorityQueue	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  struct FastPriorityQueue {$/;"	s	namespace:__anon86	file:
FatalError	MC/MCContext.cpp	/^void MCContext::FatalError(SMLoc Loc, const Twine &Msg) {$/;"	f	class:MCContext
Fd	Support/DataStream.cpp	/^ int Fd;$/;"	m	class:__anon234::DataFileStreamer	file:
FeasibilityAnalysis	CodeGen/IfConversion.cpp	/^bool IfConverter::FeasibilityAnalysis(BBInfo &BBI,$/;"	f	class:IfConverter
FenceInst	VMCore/Instructions.cpp	/^FenceInst::FenceInst(LLVMContext &C, AtomicOrdering Ordering, $/;"	f	class:FenceInst
Field	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
FiftyPercentVectorBonus	Analysis/InlineCost.cpp	/^  int FiftyPercentVectorBonus, TenPercentVectorBonus;$/;"	m	class:__anon28::CallAnalyzer	file:
File	DebugInfo/DWARFDebugLine.h	/^    uint16_t File;$/;"	m	struct:llvm::DWARFDebugLine::Row
File	Target/ARM/ARMBuildAttrs.h	/^    File                      = 1,$/;"	e	enum:ARMBuildAttrs::AttrType
FileHandleTraits	Support/Windows/Windows.h	/^struct FileHandleTraits : CommonHandleTraits {};$/;"	s
FileNameEntry	DebugInfo/DWARFDebugLine.h	/^    FileNameEntry() : Name(0), DirIdx(0), ModTime(0), Length(0) {}$/;"	f	struct:llvm::DWARFDebugLine::FileNameEntry
FileNameEntry	DebugInfo/DWARFDebugLine.h	/^  struct FileNameEntry {$/;"	s	class:llvm::DWARFDebugLine
FileNames	DebugInfo/DWARFDebugLine.h	/^    std::vector<FileNameEntry> FileNames;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
FileOutputBuffer	Support/FileOutputBuffer.cpp	/^FileOutputBuffer::FileOutputBuffer(uint8_t *Start, uint8_t *End, $/;"	f	class:llvm::FileOutputBuffer
Filename	Analysis/ProfileDataLoaderPass.cpp	/^    std::string Filename;$/;"	m	class:__anon7::ProfileMetadataLoaderPass	file:
Filename	Analysis/ProfileInfoLoaderPass.cpp	/^    std::string Filename;$/;"	m	class:__anon52::LoaderPass	file:
Filename	Transforms/Instrumentation/GCOVProfiling.cpp	/^    StringRef Filename;$/;"	m	class:__anon490::GCOVLines	file:
FilenameCache	ExecutionEngine/EventListenerCommon.h	/^class FilenameCache {$/;"	c	namespace:llvm::jitprofiling
Filenames	ExecutionEngine/EventListenerCommon.h	/^  DenseMap<AssertingVH<MDNode>, std::string> Filenames;$/;"	m	class:llvm::jitprofiling::FilenameCache
Filenames	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^  FilenameCache Filenames;$/;"	m	class:__anon198::IntelJITEventListener	file:
Filler	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^    Filler(TargetMachine &tm)$/;"	f	struct:__anon462::Filler
Filler	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^  struct Filler : public MachineFunctionPass {$/;"	s	namespace:__anon462	file:
Filler	Target/Mips/MipsDelaySlotFiller.cpp	/^    Filler(TargetMachine &tm)$/;"	f	struct:__anon436::Filler
Filler	Target/Mips/MipsDelaySlotFiller.cpp	/^  struct Filler : public MachineFunctionPass {$/;"	s	namespace:__anon436	file:
Filler	Target/Sparc/DelaySlotFiller.cpp	/^    Filler(TargetMachine &tm) $/;"	f	struct:__anon439::Filler
Filler	Target/Sparc/DelaySlotFiller.cpp	/^  struct Filler : public MachineFunctionPass {$/;"	s	namespace:__anon439	file:
FilterOutUndesirableDedicatedRegisters	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::FilterOutUndesirableDedicatedRegisters() {$/;"	f	class:LSRInstance
FinalizeChain	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::FinalizeChain(IVChain &Chain) {$/;"	f	class:LSRInstance
FinalizeMachineBundles	CodeGen/MachineInstrBundle.cpp	/^    FinalizeMachineBundles() : MachineFunctionPass(ID) {$/;"	f	class:__anon112::FinalizeMachineBundles
FinalizeMachineBundles	CodeGen/MachineInstrBundle.cpp	/^  class FinalizeMachineBundles : public MachineFunctionPass {$/;"	c	namespace:__anon112	file:
FinalizeMachineBundlesID	CodeGen/MachineInstrBundle.cpp	/^char &llvm::FinalizeMachineBundlesID = FinalizeMachineBundles::ID;$/;"	m	class:llvm	file:
FinalizeProcess	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^ITT_EXTERN_C void JITAPI FinalizeProcess()$/;"	f
FinalizeProcessFunc	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  FinalizeProcessPtr FinalizeProcessFunc;$/;"	m	class:llvm::IntelJITEventsWrapper
FinalizeProcessPtr	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  typedef void (*FinalizeProcessPtr)(void);$/;"	t	class:llvm::IntelJITEventsWrapper
FinalizeTable	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::FinalizeTable(AsmPrinter *Asm, const char *Prefix) {$/;"	f	class:DwarfAccelTable
FinalizeThread	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^ITT_EXTERN_C void JITAPI FinalizeThread()$/;"	f
FinalizeThreadFunc	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  FinalizeThreadPtr FinalizeThreadFunc;$/;"	m	class:llvm::IntelJITEventsWrapper
FinalizeThreadPtr	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  typedef void (*FinalizeThreadPtr)(void);$/;"	t	class:llvm::IntelJITEventsWrapper
Find	MC/SubtargetFeature.cpp	/^static const SubtargetFeatureKV *Find(StringRef S, const SubtargetFeatureKV *A,$/;"	f	file:
FindAliasInfo	CodeGen/SelectionDAG/DAGCombiner.cpp	/^bool DAGCombiner::FindAliasInfo(SDNode *N,$/;"	f	class:DAGCombiner
FindAllMemoryUses	Transforms/Utils/AddrModeMatcher.cpp	/^static bool FindAllMemoryUses(Instruction *I,$/;"	f	file:
FindAllocaDbgDeclare	Transforms/Utils/Local.cpp	/^DbgDeclareInst *llvm::FindAllocaDbgDeclare(Value *V) {$/;"	f	class:llvm
FindAssociatedSection	MC/MCExpr.cpp	/^const MCSection *MCExpr::FindAssociatedSection() const {$/;"	f	class:MCExpr
FindAssociatedSection	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  const MCSection *FindAssociatedSection() const {$/;"	f	class:llvm::ARMMCExpr
FindAvailableLoadedValue	Analysis/Loads.cpp	/^Value *llvm::FindAvailableLoadedValue(Value *Ptr, BasicBlock *ScanBB,$/;"	f	class:llvm
FindBaseOffset	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static bool FindBaseOffset(SDValue Ptr, SDValue &Base, int64_t &Offset,$/;"	f	file:
FindBetterChain	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::FindBetterChain(SDNode *N, SDValue OldChain) {$/;"	f	class:DAGCombiner
FindBucketFor	Support/SmallPtrSet.cpp	/^const void * const *SmallPtrSetImpl::FindBucketFor(const void *Ptr) const {$/;"	f	class:SmallPtrSetImpl
FindBufferContainingLoc	Support/SourceMgr.cpp	/^int SourceMgr::FindBufferContainingLoc(SMLoc Loc) const {$/;"	f	class:SourceMgr
FindCXAAtExit	Transforms/IPO/GlobalOpt.cpp	/^static Function *FindCXAAtExit(Module &M, TargetLibraryInfo *TLI) {$/;"	f	file:
FindCallSeqStart	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^FindCallSeqStart(SDNode *N, unsigned &NestLevel, unsigned &MaxNest,$/;"	f	file:
FindDependencies	Transforms/Scalar/ObjCARC.cpp	/^FindDependencies(DependenceKind Flavor,$/;"	f	file:
FindDynamicInitializers	Transforms/Instrumentation/AddressSanitizer.cpp	/^void AddressSanitizer::FindDynamicInitializers(Module& M) {$/;"	f	class:AddressSanitizer
FindElementAndOffset	Transforms/Scalar/ScalarReplAggregates.cpp	/^uint64_t SROA::FindElementAndOffset(Type *&T, uint64_t &Offset,$/;"	f	class:SROA
FindElementAtOffset	Transforms/InstCombine/InstructionCombining.cpp	/^Type *InstCombiner::FindElementAtOffset(Type *Ty, int64_t Offset,$/;"	f	class:InstCombiner
FindExistingElement	VMCore/ConstantsContext.h	/^  typename MapTy::iterator FindExistingElement(ConstantClass *CP) {$/;"	f	class:llvm::ConstantUniqueMap
FindFirstNonCommonLetter	TableGen/StringMatcher.cpp	/^FindFirstNonCommonLetter(const std::vector<const$/;"	f	file:
FindFunctionBackedges	Transforms/Utils/BasicBlockUtils.cpp	/^void llvm::FindFunctionBackedges(const Function &F,$/;"	f	class:llvm
FindFunctionInStream	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::FindFunctionInStream(Function *F,$/;"	f	class:BitcodeReader
FindFunctionNamed	ExecutionEngine/ExecutionEngine.cpp	/^Function *ExecutionEngine::FindFunctionNamed(const char *FnName) {$/;"	f	class:ExecutionEngine
FindGlobalCtors	Transforms/IPO/GlobalOpt.cpp	/^GlobalVariable *GlobalOpt::FindGlobalCtors(Module &M) {$/;"	f	class:GlobalOpt
FindHandleTraits	Support/Windows/Windows.h	/^struct FindHandleTraits : CommonHandleTraits {$/;"	s
FindIVUserForCond	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool LSRInstance::FindIVUserForCond(ICmpInst *Cond, IVStrideUse *&CondUse) {$/;"	f	class:LSRInstance
FindInOperandList	Transforms/Scalar/Reassociate.cpp	/^static unsigned FindInOperandList(SmallVectorImpl<ValueEntry> &Ops, unsigned i,$/;"	f	file:
FindInitTrampoline	Transforms/InstCombine/InstCombineCalls.cpp	/^static IntrinsicInst *FindInitTrampoline(Value *Callee) {$/;"	f	file:
FindInitTrampolineFromAlloca	Transforms/InstCombine/InstCombineCalls.cpp	/^static IntrinsicInst *FindInitTrampolineFromAlloca(Value *TrampMem) {$/;"	f	file:
FindInitTrampolineFromBB	Transforms/InstCombine/InstCombineCalls.cpp	/^static IntrinsicInst *FindInitTrampolineFromBB(IntrinsicInst *AdjustTramp,$/;"	f	file:
FindInsertedValue	Analysis/ValueTracking.cpp	/^Value *llvm::FindInsertedValue(Value *V, ArrayRef<unsigned> idx_range,$/;"	f	class:llvm
FindKey	Support/StringMap.cpp	/^int StringMapImpl::FindKey(StringRef Key) const {$/;"	f	class:StringMapImpl
FindLIVLoopCondition	Transforms/Scalar/LoopUnswitch.cpp	/^static Value *FindLIVLoopCondition(Value *Cond, Loop *L, bool &Changed) {$/;"	f	file:
FindLastPartialDef	CodeGen/LiveVariables.cpp	/^MachineInstr *LiveVariables::FindLastPartialDef(unsigned Reg,$/;"	f	class:LiveVariables
FindLastRefOrPartRef	CodeGen/LiveVariables.cpp	/^MachineInstr *LiveVariables::FindLastRefOrPartRef(unsigned Reg) {$/;"	f	class:LiveVariables
FindLib	Linker/Linker.cpp	/^Linker::FindLib(StringRef Filename) {$/;"	f	class:Linker
FindLibrary	Support/Path.cpp	/^Path::FindLibrary(std::string& name) {$/;"	f	class:Path
FindLoopCounter	Transforms/Scalar/IndVarSimplify.cpp	/^FindLoopCounter(Loop *L, const SCEV *BECount,$/;"	f	file:
FindLoopHeaders	Transforms/Scalar/JumpThreading.cpp	/^void JumpThreading::FindLoopHeaders(Function &F) {$/;"	f	class:JumpThreading
FindMLxHazard	Target/ARM/MLxExpansionPass.cpp	/^bool MLxExpansion::FindMLxHazard(MachineInstr *MI) {$/;"	f	class:MLxExpansion
FindMemType	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^static EVT FindMemType(SelectionDAG& DAG, const TargetLowering &TLI,$/;"	f	file:
FindMergedConditions	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::FindMergedConditions(const Value *Cond,$/;"	f	class:SelectionDAGBuilder
FindModifiedNodeSlot	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDNode *SelectionDAG::FindModifiedNodeSlot(SDNode *N, SDValue Op,$/;"	f	class:SelectionDAG
FindModifiedNodeSlot	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDNode *SelectionDAG::FindModifiedNodeSlot(SDNode *N,$/;"	f	class:SelectionDAG
FindMostPopularDest	Transforms/Scalar/JumpThreading.cpp	/^FindMostPopularDest(BasicBlock *BB,$/;"	f	file:
FindNodeOrInsertPos	Support/FoldingSet.cpp	/^*FoldingSetImpl::FindNodeOrInsertPos(const FoldingSetNodeID &ID,$/;"	f	class:FoldingSetImpl
FindOptimalMemOpLowering	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static bool FindOptimalMemOpLowering(std::vector<EVT> &MemOps,$/;"	f	file:
FindPHIForConditionForwarding	Transforms/Utils/SimplifyCFG.cpp	/^static PHINode *FindPHIForConditionForwarding(ConstantInt *CaseValue,$/;"	f	file:
FindPHIToPartitionLoops	Transforms/Utils/LoopSimplify.cpp	/^static PHINode *FindPHIToPartitionLoops(Loop *L, DominatorTree *DT,$/;"	f	file:
FindPhiPredForUseInBlock	Transforms/Utils/CodeExtractor.cpp	/^static BasicBlock* FindPhiPredForUseInBlock(Value* Used, BasicBlock* BB) {$/;"	f	file:
FindPredecessorBlocks	CodeGen/MachineSSAUpdater.cpp	/^  static void FindPredecessorBlocks(MachineBasicBlock *BB,$/;"	f	class:llvm::SSAUpdaterTraits
FindPredecessorBlocks	Transforms/Utils/SSAUpdater.cpp	/^  static void FindPredecessorBlocks(BasicBlock *BB,$/;"	f	class:llvm::SSAUpdaterTraits
FindSafePoints	CodeGen/GCStrategy.cpp	/^void GCMachineCodeAnalysis::FindSafePoints(MachineFunction &MF) {$/;"	f	class:GCMachineCodeAnalysis
FindScalarElement	Transforms/InstCombine/InstCombineVectorOps.cpp	/^static Value *FindScalarElement(Value *V, unsigned EltNo) {$/;"	f	file:
FindSingleUseIdentifiedObject	Transforms/Scalar/ObjCARC.cpp	/^static const Value *FindSingleUseIdentifiedObject(const Value *Arg) {$/;"	f	file:
FindSingleUseMultiplyFactors	Transforms/Scalar/Reassociate.cpp	/^static void FindSingleUseMultiplyFactors(Value *V,$/;"	f	file:
FindStackOffsets	CodeGen/GCStrategy.cpp	/^void GCMachineCodeAnalysis::FindStackOffsets(MachineFunction &MF) {$/;"	f	class:GCMachineCodeAnalysis
FindSuccToSinkTo	CodeGen/MachineSink.cpp	/^MachineBasicBlock *MachineSinking::FindSuccToSinkTo(MachineInstr *MI,$/;"	f	class:MachineSinking
FindSuitableFreeRegisters	CodeGen/AggressiveAntiDepBreaker.cpp	/^bool AggressiveAntiDepBreaker::FindSuitableFreeRegisters($/;"	f	class:AggressiveAntiDepBreaker
FindTRECandidate	Transforms/Scalar/TailRecursionElimination.cpp	/^TailCallElim::FindTRECandidate(Instruction *TI,$/;"	f	class:TailCallElim
FindUnconditionalPreds	Transforms/Scalar/DeadStoreElimination.cpp	/^static void FindUnconditionalPreds(SmallVectorImpl<BasicBlock *> &Blocks,$/;"	f	file:
FindUnusedReg	CodeGen/RegisterScavenging.cpp	/^unsigned RegScavenger::FindUnusedReg(const TargetRegisterClass *RC) const {$/;"	f	class:RegScavenger
FindUseWithSimilarFormula	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::FindUseWithSimilarFormula(const Formula &OrigF,$/;"	f	class:LSRInstance
FindUsedValues	Transforms/IPO/ConstantMerge.cpp	/^static void FindUsedValues(GlobalVariable *LLVMUsed,$/;"	f	file:
Finder	Analysis/ModuleDebugInfoPrinter.cpp	/^    DebugInfoFinder Finder;$/;"	m	class:__anon46::ModuleDebugInfoPrinter	file:
Finish	MC/MCAssembler.cpp	/^void MCAssembler::Finish() {$/;"	f	class:MCAssembler
Finish	MC/MCStreamer.cpp	/^void MCStreamer::Finish() {$/;"	f	class:MCStreamer
Finish	Target/ARM/ARMAsmPrinter.cpp	/^    void Finish() { }$/;"	f	class:__anon313::AsmAttributeEmitter
Finish	Target/ARM/ARMAsmPrinter.cpp	/^    void Finish() {$/;"	f	class:__anon313::ObjectAttributeEmitter
FinishBasicBlock	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^SelectionDAGISel::FinishBasicBlock() {$/;"	f	class:SelectionDAGISel
FinishBlock	CodeGen/AggressiveAntiDepBreaker.cpp	/^void AggressiveAntiDepBreaker::FinishBlock() {$/;"	f	class:AggressiveAntiDepBreaker
FinishBlock	CodeGen/CriticalAntiDepBreaker.cpp	/^void CriticalAntiDepBreaker::FinishBlock() {$/;"	f	class:CriticalAntiDepBreaker
FinishCall	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::FinishCall(MVT RetVT, SmallVectorImpl<unsigned> &UsedRegs,$/;"	f	class:ARMFastISel
FinishCall	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::FinishCall(CallingConv::ID CallConv, DebugLoc dl,$/;"	f	class:PPCTargetLowering
FinishFunction	AsmParser/LLParser.cpp	/^bool LLParser::PerFunctionState::FinishFunction() {$/;"	f	class:LLParser::PerFunctionState
FinishImpl	MC/MCAsmStreamer.cpp	/^void MCAsmStreamer::FinishImpl() {$/;"	f	class:MCAsmStreamer
FinishImpl	MC/MCELFStreamer.cpp	/^void MCELFStreamer::FinishImpl() {$/;"	f	class:MCELFStreamer
FinishImpl	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::FinishImpl() {$/;"	f	class:MCMachOStreamer
FinishImpl	MC/MCNullStreamer.cpp	/^    virtual void FinishImpl() {}$/;"	f	class:__anon217::MCNullStreamer
FinishImpl	MC/MCObjectStreamer.cpp	/^void MCObjectStreamer::FinishImpl() {$/;"	f	class:MCObjectStreamer
FinishImpl	MC/MCPureStreamer.cpp	/^void MCPureStreamer::FinishImpl() {$/;"	f	class:MCPureStreamer
FinishImpl	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::FinishImpl() {$/;"	f	class:WinCOFFStreamer
First	CodeGen/InterferenceCache.h	/^    SlotIndex First;$/;"	m	struct:llvm::InterferenceCache::BlockInterference
First	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    APInt First;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestBlock
First	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    APInt First;$/;"	m	struct:llvm::SelectionDAGBuilder::JumpTableHeader
FirstCU	CodeGen/AsmPrinter/DwarfDebug.h	/^  CompileUnit *FirstCU;$/;"	m	class:llvm::DwarfDebug
FirstChar	Support/StreamableMemoryObject.cpp	/^  const uint8_t* const FirstChar;$/;"	m	class:__anon236::RawMemoryObject	file:
FirstCond	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    bool FirstCond;           \/\/ Explicit flag for when we're parsing the$/;"	m	struct:__anon259::ARMAsmParser::__anon260	file:
FirstDef	CodeGen/SplitKit.h	/^    SlotIndex FirstDef;   \/\/\/< First non-phi valno->def, or SlotIndex().$/;"	m	struct:llvm::SplitAnalysis::BlockInfo
FirstFuncConstantID	Bitcode/Writer/ValueEnumerator.h	/^  unsigned FirstFuncConstantID;$/;"	m	class:llvm::ValueEnumerator
FirstInLoop	CodeGen/MachineLICM.cpp	/^    bool         FirstInLoop;      \/\/ True if it's the first LICM in the loop.$/;"	m	class:__anon156::MachineLICM	file:
FirstInstID	Bitcode/Writer/ValueEnumerator.h	/^  unsigned FirstInstID;$/;"	m	class:llvm::ValueEnumerator
FirstInstr	CodeGen/SplitKit.h	/^    SlotIndex FirstInstr; \/\/\/< First instr accessing current reg.$/;"	m	struct:llvm::SplitAnalysis::BlockInfo
FirstNonDbg	Transforms/Scalar/TailRecursionElimination.cpp	/^static Instruction *FirstNonDbg(BasicBlock::iterator I) {$/;"	f	file:
FirstRowIndex	DebugInfo/DWARFDebugLine.h	/^    unsigned FirstRowIndex;$/;"	m	struct:llvm::DWARFDebugLine::Sequence
FirstTarget	Support/TargetRegistry.cpp	/^static Target *FirstTarget = 0;$/;"	v	file:
FirstTerminator	CodeGen/MachineVerifier.cpp	/^    const MachineInstr *FirstTerminator;$/;"	m	struct:__anon139::MachineVerifier	file:
FisVisited	Analysis/ProfileVerifierPass.cpp	/^    std::set<const FType*>   FisVisited;$/;"	m	class:__anon36::ProfileVerifierPassT	file:
FitWeights	Transforms/Utils/SimplifyCFG.cpp	/^static void FitWeights(MutableArrayRef<uint64_t> Weights) {$/;"	f	file:
FitsInFPType	Transforms/InstCombine/InstCombineCasts.cpp	/^static Constant *FitsInFPType(ConstantFP *CFP, const fltSemantics &Sem) {$/;"	f	file:
FixCount	Target/X86/X86FloatingPoint.cpp	/^      unsigned FixCount;$/;"	m	struct:__anon386::FPS::LiveBundle	file:
FixInvalidRegPairOp	Target/ARM/ARMLoadStoreOptimizer.cpp	/^bool ARMLoadStoreOpt::FixInvalidRegPairOp(MachineBasicBlock &MBB,$/;"	f	class:ARMLoadStoreOpt
FixStack	Target/X86/X86FloatingPoint.cpp	/^      unsigned char FixStack[8];$/;"	m	struct:__anon386::FPS::LiveBundle	file:
FixTail	CodeGen/BranchFolding.cpp	/^static void FixTail(MachineBasicBlock *CurMBB, MachineBasicBlock *SuccBB,$/;"	f	file:
Fixed	CodeGen/InterferenceCache.h	/^      LiveInterval *Fixed;$/;"	m	struct:llvm::InterferenceCache::Entry::RegUnitInfo
FixedBlockInfo	CodeGen/MachineTraceMetrics.h	/^    FixedBlockInfo() : InstrCount(~0u), HasCalls(false) {}$/;"	f	struct:llvm::MachineTraceMetrics::FixedBlockInfo
FixedBlockInfo	CodeGen/MachineTraceMetrics.h	/^  struct FixedBlockInfo {$/;"	s	class:llvm::MachineTraceMetrics
FixedI	CodeGen/InterferenceCache.h	/^      LiveInterval::iterator FixedI;$/;"	m	struct:llvm::InterferenceCache::Entry::RegUnitInfo
FixupKills	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::FixupKills(MachineBasicBlock *MBB) {$/;"	f	class:SchedulePostRATDList
Fixups	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^enum Fixups {$/;"	g	namespace:llvm::ARM
Fixups	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^  enum Fixups {$/;"	g	namespace:llvm::Mips
Fixups	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^enum Fixups {$/;"	g	namespace:llvm::PPC
Fixups	Target/X86/MCTargetDesc/X86FixupKinds.h	/^enum Fixups {$/;"	g	namespace:llvm::X86
Fixups	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallVector<LSRFixup, 16> Fixups;$/;"	m	class:__anon518::LSRInstance	file:
FlagMap	MC/MCAsmStreamer.cpp	/^  DenseMap<const MCSymbol*, unsigned> FlagMap;$/;"	m	class:__anon214::MCAsmStreamer	file:
Flags	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    char Flags; \/\/ Specific flags to output$/;"	m	struct:llvm::DwarfAccelTable::HashDataContents
Flags	CodeGen/StrongPHIElimination.cpp	/^      enum Flags {$/;"	g	struct:__anon154::StrongPHIElimination::Node	file:
Flags	Target/X86/X86InstrInfo.cpp	/^  uint16_t Flags;$/;"	m	struct:X86OpTblEntry	file:
Flipped	CodeGen/RegisterCoalescer.h	/^    bool Flipped;$/;"	m	class:llvm::CoalescerPair
Float	Target/NVPTX/NVPTX.h	/^  Float$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::FromType
FloatExpandSetCCOperands	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::FloatExpandSetCCOperands(SDValue &NewLHS,$/;"	f	class:DAGTypeLegalizer
FloatTy	VMCore/LLVMContextImpl.h	/^  Type VoidTy, LabelTy, HalfTy, FloatTy, DoubleTy, MetadataTy;$/;"	m	class:llvm::LLVMContextImpl
FlowLevel	Support/YAMLParser.cpp	/^  unsigned FlowLevel;$/;"	m	class:llvm::yaml::Scanner	file:
FlowLevel	Support/YAMLParser.cpp	/^  unsigned FlowLevel;$/;"	m	struct:__anon244::SimpleKey	file:
Fn	CodeGen/MachineModuleInfo.cpp	/^    Function *Fn;   \/\/ The containing function of the BasicBlock.$/;"	m	struct:llvm::MMIAddrLabelMap::AddrLabelSymEntry	file:
FnHasLiveInYmm	Target/X86/X86VZeroUpper.cpp	/^    bool FnHasLiveInYmm;$/;"	m	struct:__anon382::VZeroUpperInserter	file:
FnLoadArgs	Target/MBlaze/MBlazeMachineFunction.h	/^  SmallVector<MBlazeFIHolder, 16> FnLoadArgs;$/;"	m	class:llvm::MBlazeFunctionInfo
FnNum	CodeGen/IfConversion.cpp	/^    int FnNum;$/;"	m	class:__anon99::IfConverter	file:
FnSet	Transforms/IPO/MergeFunctions.cpp	/^  FnSetType FnSet;$/;"	m	class:__anon598::MergeFunctions	file:
FnSetType	Transforms/IPO/MergeFunctions.cpp	/^  typedef DenseSet<ComparableFunction> FnSetType;$/;"	t	class:__anon598::MergeFunctions	file:
FnStoreVarArgs	Target/MBlaze/MBlazeMachineFunction.h	/^  SmallVector<MBlazeFIHolder, 4> FnStoreVarArgs;$/;"	m	class:llvm::MBlazeFunctionInfo
Fold	TableGen/Record.cpp	/^Init *BinOpInit::Fold(Record *CurRec, MultiClass *CurMultiClass) const {$/;"	f	class:BinOpInit
Fold	TableGen/Record.cpp	/^Init *TernOpInit::Fold(Record *CurRec, MultiClass *CurMultiClass) const {$/;"	f	class:TernOpInit
Fold	TableGen/Record.cpp	/^Init *UnOpInit::Fold(Record *CurRec, MultiClass *CurMultiClass) const {$/;"	f	class:UnOpInit
FoldAndOfFCmps	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Value *InstCombiner::FoldAndOfFCmps(FCmpInst *LHS, FCmpInst *RHS) {$/;"	f	class:InstCombiner
FoldAndOfICmps	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Value *InstCombiner::FoldAndOfICmps(ICmpInst *LHS, ICmpInst *RHS) {$/;"	f	class:InstCombiner
FoldBitCast	Analysis/ConstantFolding.cpp	/^static Constant *FoldBitCast(Constant *C, Type *DestTy,$/;"	f	file:
FoldBitCast	VMCore/ConstantFold.cpp	/^static Constant *FoldBitCast(Constant *V, Type *DestTy) {$/;"	f	file:
FoldBlockIntoPredecessor	Transforms/Utils/LoopUnroll.cpp	/^static BasicBlock *FoldBlockIntoPredecessor(BasicBlock *BB, LoopInfo* LI,$/;"	f	file:
FoldBranchToCommonDest	Transforms/Utils/SimplifyCFG.cpp	/^bool llvm::FoldBranchToCommonDest(BranchInst *BI) {$/;"	f	class:llvm
FoldCmpLoadFromIndexedGlobal	Transforms/InstCombine/InstCombineCompares.cpp	/^FoldCmpLoadFromIndexedGlobal(GetElementPtrInst *GEP, GlobalVariable *GV,$/;"	f	class:InstCombiner
FoldCondBranchOnPHI	Transforms/Utils/SimplifyCFG.cpp	/^static bool FoldCondBranchOnPHI(BranchInst *BI, const DataLayout *TD) {$/;"	f	file:
FoldConstantArithmetic	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::FoldConstantArithmetic(unsigned Opcode,$/;"	f	class:SelectionDAG
FoldFCmp_IntToFP_Cst	Transforms/InstCombine/InstCombineCompares.cpp	/^Instruction *InstCombiner::FoldFCmp_IntToFP_Cst(FCmpInst &I,$/;"	f	class:InstCombiner
FoldGEPICmp	Transforms/InstCombine/InstCombineCompares.cpp	/^Instruction *InstCombiner::FoldGEPICmp(GEPOperator *GEPLHS, Value *RHS,$/;"	f	class:InstCombiner
FoldICmpAddOpCst	Transforms/InstCombine/InstCombineCompares.cpp	/^Instruction *InstCombiner::FoldICmpAddOpCst(ICmpInst &ICI,$/;"	f	class:InstCombiner
FoldICmpDivCst	Transforms/InstCombine/InstCombineCompares.cpp	/^Instruction *InstCombiner::FoldICmpDivCst(ICmpInst &ICI, BinaryOperator *DivI,$/;"	f	class:InstCombiner
FoldICmpShrCst	Transforms/InstCombine/InstCombineCompares.cpp	/^Instruction *InstCombiner::FoldICmpShrCst(ICmpInst &ICI, BinaryOperator *Shr,$/;"	f	class:InstCombiner
FoldImmediate	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::FoldImmediate(MachineInstr *UseMI,$/;"	f	class:ARMBaseInstrInfo
FoldLogicalPlusAnd	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Value *InstCombiner::FoldLogicalPlusAnd(Value *LHS, Value *RHS,$/;"	f	class:InstCombiner
FoldMaskAndShiftToExtract	Target/X86/X86ISelDAGToDAG.cpp	/^static bool FoldMaskAndShiftToExtract(SelectionDAG &DAG, SDValue N,$/;"	f	file:
FoldMaskAndShiftToScale	Target/X86/X86ISelDAGToDAG.cpp	/^static bool FoldMaskAndShiftToScale(SelectionDAG &DAG, SDValue N,$/;"	f	file:
FoldMaskedShiftToScaledMask	Target/X86/X86ISelDAGToDAG.cpp	/^static bool FoldMaskedShiftToScaledMask(SelectionDAG &DAG, SDValue N,$/;"	f	file:
FoldMskICmp_AMask_AllOnes	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_AMask_AllOnes           =     1,$/;"	e	enum:MaskedICmpType	file:
FoldMskICmp_AMask_Mixed	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_AMask_Mixed             =    64,$/;"	e	enum:MaskedICmpType	file:
FoldMskICmp_AMask_NotAllOnes	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_AMask_NotAllOnes        =     2,$/;"	e	enum:MaskedICmpType	file:
FoldMskICmp_AMask_NotMixed	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_AMask_NotMixed          =   128,$/;"	e	enum:MaskedICmpType	file:
FoldMskICmp_BMask_AllOnes	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_BMask_AllOnes           =     4,$/;"	e	enum:MaskedICmpType	file:
FoldMskICmp_BMask_Mixed	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_BMask_Mixed             =   256,$/;"	e	enum:MaskedICmpType	file:
FoldMskICmp_BMask_NotAllOnes	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_BMask_NotAllOnes        =     8,$/;"	e	enum:MaskedICmpType	file:
FoldMskICmp_BMask_NotMixed	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_BMask_NotMixed          =   512$/;"	e	enum:MaskedICmpType	file:
FoldMskICmp_Mask_AllZeroes	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_Mask_AllZeroes          =    16,$/;"	e	enum:MaskedICmpType	file:
FoldMskICmp_Mask_NotAllZeroes	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^  FoldMskICmp_Mask_NotAllZeroes       =    32,$/;"	e	enum:MaskedICmpType	file:
FoldOffsetIntoAddress	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::FoldOffsetIntoAddress(uint64_t Offset,$/;"	f	class:X86DAGToDAGISel
FoldOpIntoPhi	Transforms/InstCombine/InstructionCombining.cpp	/^Instruction *InstCombiner::FoldOpIntoPhi(Instruction &I) {$/;"	f	class:InstCombiner
FoldOpIntoSelect	Transforms/InstCombine/InstructionCombining.cpp	/^Instruction *InstCombiner::FoldOpIntoSelect(Instruction &Op, SelectInst *SI) {$/;"	f	class:InstCombiner
FoldOperationIntoSelectOperand	Transforms/InstCombine/InstructionCombining.cpp	/^static Value *FoldOperationIntoSelectOperand(Instruction &I, Value *SO,$/;"	f	file:
FoldOrOfFCmps	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Value *InstCombiner::FoldOrOfFCmps(FCmpInst *LHS, FCmpInst *RHS) {$/;"	f	class:InstCombiner
FoldOrOfICmps	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Value *InstCombiner::FoldOrOfICmps(ICmpInst *LHS, ICmpInst *RHS) {$/;"	f	class:InstCombiner
FoldOrWithConstants	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Instruction *InstCombiner::FoldOrWithConstants(BinaryOperator &I, Value *Op,$/;"	f	class:InstCombiner
FoldPHIArgBinOpIntoPHI	Transforms/InstCombine/InstCombinePHI.cpp	/^Instruction *InstCombiner::FoldPHIArgBinOpIntoPHI(PHINode &PN) {$/;"	f	class:InstCombiner
FoldPHIArgGEPIntoPHI	Transforms/InstCombine/InstCombinePHI.cpp	/^Instruction *InstCombiner::FoldPHIArgGEPIntoPHI(PHINode &PN) {$/;"	f	class:InstCombiner
FoldPHIArgLoadIntoPHI	Transforms/InstCombine/InstCombinePHI.cpp	/^Instruction *InstCombiner::FoldPHIArgLoadIntoPHI(PHINode &PN) {$/;"	f	class:InstCombiner
FoldPHIArgOpIntoPHI	Transforms/InstCombine/InstCombinePHI.cpp	/^Instruction *InstCombiner::FoldPHIArgOpIntoPHI(PHINode &PN) {$/;"	f	class:InstCombiner
FoldReinterpretLoadFromConstPtr	Analysis/ConstantFolding.cpp	/^static Constant *FoldReinterpretLoadFromConstPtr(Constant *C,$/;"	f	file:
FoldReturnAndProcessPred	Transforms/Scalar/TailRecursionElimination.cpp	/^bool TailCallElim::FoldReturnAndProcessPred(BasicBlock *BB,$/;"	f	class:TailCallElim
FoldReturnIntoUncondBranch	Transforms/Utils/BasicBlockUtils.cpp	/^ReturnInst *llvm::FoldReturnIntoUncondBranch(ReturnInst *RI, BasicBlock *BB,$/;"	f	class:llvm
FoldSPFofSPF	Transforms/InstCombine/InstCombineSelect.cpp	/^Instruction *InstCombiner::FoldSPFofSPF(Instruction *Inner,$/;"	f	class:InstCombiner
FoldSelectIntoOp	Transforms/InstCombine/InstCombineSelect.cpp	/^Instruction *InstCombiner::FoldSelectIntoOp(SelectInst &SI, Value *TrueVal,$/;"	f	class:InstCombiner
FoldSelectOpOp	Transforms/InstCombine/InstCombineSelect.cpp	/^Instruction *InstCombiner::FoldSelectOpOp(SelectInst &SI, Instruction *TI,$/;"	f	class:InstCombiner
FoldSetCC	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::FoldSetCC(EVT VT, SDValue N1,$/;"	f	class:SelectionDAG
FoldShiftByConstant	Transforms/InstCombine/InstCombineShifts.cpp	/^Instruction *InstCombiner::FoldShiftByConstant(Value *Op0, ConstantInt *Op1,$/;"	f	class:InstCombiner
FoldSingleEntryPHINodes	Transforms/Utils/BasicBlockUtils.cpp	/^void llvm::FoldSingleEntryPHINodes(BasicBlock *BB, Pass *P) {$/;"	f	class:llvm
FoldTwoEntryPHINode	Transforms/Utils/SimplifyCFG.cpp	/^static bool FoldTwoEntryPHINode(PHINode *PN, const DataLayout *TD) {$/;"	f	file:
FoldValueComparisonIntoPredecessors	Transforms/Utils/SimplifyCFG.cpp	/^bool SimplifyCFGOpt::FoldValueComparisonIntoPredecessors(TerminatorInst *TI,$/;"	f	class:SimplifyCFGOpt
FoldingSetBucketIteratorImpl	Support/FoldingSet.cpp	/^FoldingSetBucketIteratorImpl::FoldingSetBucketIteratorImpl(void **Bucket) {$/;"	f	class:FoldingSetBucketIteratorImpl
FoldingSetImpl	Support/FoldingSet.cpp	/^FoldingSetImpl::FoldingSetImpl(unsigned Log2InitSize) {$/;"	f	class:FoldingSetImpl
FoldingSetIteratorImpl	Support/FoldingSet.cpp	/^FoldingSetIteratorImpl::FoldingSetIteratorImpl(void **Bucket) {$/;"	f	class:FoldingSetIteratorImpl
FoldingSetTrait	VMCore/LLVMContextImpl.h	/^template<> struct FoldingSetTrait<MDNode> : DefaultFoldingSetTrait<MDNode> {$/;"	s	namespace:llvm
ForceExpAbs	MC/MCStreamer.cpp	/^const MCExpr *MCStreamer::ForceExpAbs(const MCExpr* Expr) {$/;"	f	class:MCStreamer
ForceFramePointer	Target/X86/X86MachineFunctionInfo.h	/^  bool ForceFramePointer;$/;"	m	class:llvm::X86MachineFunctionInfo
Foreach	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
ForeachHelper	TableGen/Record.cpp	/^static Init *ForeachHelper(Init *LHS, Init *MHS, Init *RHS, RecTy *Type,$/;"	f	file:
ForeachLoop	TableGen/TGParser.h	/^    ForeachLoop(VarInit *IVar, ListInit *LValue)$/;"	f	struct:llvm::ForeachLoop
ForeachLoop	TableGen/TGParser.h	/^  struct ForeachLoop {$/;"	s	namespace:llvm
ForgetNode	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  void ForgetNode(SDNode *N) {$/;"	f	class:__anon67::SelectionDAGLegalize	file:
ForgetSymbolicName	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::ForgetSymbolicName(Instruction *PN, const SCEV *SymName) {$/;"	f	class:ScalarEvolution
Form	CodeGen/AsmPrinter/DIE.h	/^    uint16_t Form;$/;"	m	class:llvm::DIEAbbrevData
Form	DebugInfo/DWARFAttribute.h	/^  uint16_t Form;$/;"	m	class:llvm::DWARFAttribute
Form	DebugInfo/DWARFFormValue.h	/^  uint16_t Form;   \/\/ Form for this value.$/;"	m	class:llvm::DWARFFormValue
FormEncodingString	Support/Dwarf.cpp	/^const char *llvm::dwarf::FormEncodingString(unsigned Encoding) {$/;"	f	class:llvm::dwarf
FormMask	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    FormMask      = 0x3f << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
FormMask	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^    FormMask = 63$/;"	e	enum:llvm::MBlazeII::__anon458
FormMask	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    FormMask = 15$/;"	e	enum:llvm::MipsII::__anon431
FormMask	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    FormMask       = 63,$/;"	e	enum:llvm::X86II::__anon350
FormShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    FormShift     = 7,$/;"	e	enum:llvm::ARMII::__anon288
Format_Version	Target/ARM/ARMBuildAttrs.h	/^    Format_Version  = 0x41$/;"	e	enum:ARMBuildAttrs::AttrMagic
Formula	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Formula() : ScaledReg(0), UnfoldedOffset(0) {}$/;"	f	struct:__anon514::Formula
Formula	Transforms/Scalar/LoopStrengthReduce.cpp	/^struct Formula {$/;"	s	namespace:__anon514	file:
Formulae	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallVector<Formula, 12> Formulae;$/;"	m	class:__anon517::LSRUse	file:
FortifiedLibCallOptimization	Transforms/Utils/SimplifyLibCalls.cpp	/^struct FortifiedLibCallOptimization : public LibCallOptimization {$/;"	s	namespace:__anon473	file:
ForwardRefBlockAddresses	AsmParser/LLParser.h	/^      ForwardRefBlockAddresses;$/;"	m	class:llvm::LLParser
ForwardRefInstMetadata	AsmParser/LLParser.h	/^    DenseMap<Instruction*, std::vector<MDRef> > ForwardRefInstMetadata;$/;"	m	class:llvm::LLParser
ForwardRefMDNodes	AsmParser/LLParser.h	/^    std::map<unsigned, std::pair<TrackingVH<MDNode>, LocTy> > ForwardRefMDNodes;$/;"	m	class:llvm::LLParser
ForwardRefMap	Target/CppBackend/CPPBackend.cpp	/^  typedef std::map<const Value*,std::string> ForwardRefMap;$/;"	t	namespace:__anon412	file:
ForwardRefValIDs	AsmParser/LLParser.h	/^      std::map<unsigned, std::pair<Value*, LocTy> > ForwardRefValIDs;$/;"	m	class:llvm::LLParser::PerFunctionState
ForwardRefValIDs	AsmParser/LLParser.h	/^    std::map<unsigned, std::pair<GlobalValue*, LocTy> > ForwardRefValIDs;$/;"	m	class:llvm::LLParser
ForwardRefVals	AsmParser/LLParser.h	/^      std::map<std::string, std::pair<Value*, LocTy> > ForwardRefVals;$/;"	m	class:llvm::LLParser::PerFunctionState
ForwardRefVals	AsmParser/LLParser.h	/^    std::map<std::string, std::pair<GlobalValue*, LocTy> > ForwardRefVals;$/;"	m	class:llvm::LLParser
ForwardRefs	Target/CppBackend/CPPBackend.cpp	/^    ForwardRefMap ForwardRefs;$/;"	m	class:__anon412::CppWriter	file:
ForwardST0Table	Target/X86/X86FloatingPoint.cpp	/^static const TableEntry ForwardST0Table[] = {$/;"	v	file:
ForwardSTiTable	Target/X86/X86FloatingPoint.cpp	/^static const TableEntry ForwardSTiTable[] = {$/;"	v	file:
ForwardSwitchConditionToPHI	Transforms/Utils/SimplifyCFG.cpp	/^static bool ForwardSwitchConditionToPHI(SwitchInst *SI) {$/;"	f	file:
FoundIB	Analysis/LoopInfo.cpp	/^  bool FoundIB;$/;"	m	class:__anon37::UnloopUpdater	file:
FoundSequentialDependence	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^    bool FoundSequentialDependence;$/;"	m	class:__anon403::HexagonPacketizerList	file:
FpFormat	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  } FpFormat;$/;"	m	class:__anon422::MipsAsmParser	typeref:enum:__anon422::MipsAsmParser::FpFormatTy	file:
FpFormatTy	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  enum FpFormatTy {$/;"	g	class:__anon422::MipsAsmParser	file:
FpMLxStalls	Target/ARM/ARMHazardRecognizer.h	/^  unsigned FpMLxStalls;$/;"	m	class:llvm::ARMHazardRecognizer
FrameAddrFn	CodeGen/SjLjEHPrepare.cpp	/^    Constant *FrameAddrFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
FrameEmitterImpl	MC/MCDwarf.cpp	/^    FrameEmitterImpl(bool usingCFI, bool isEH)$/;"	f	class:__anon223::FrameEmitterImpl
FrameEmitterImpl	MC/MCDwarf.cpp	/^  class FrameEmitterImpl {$/;"	c	namespace:__anon223	file:
FrameIdx	Target/PowerPC/PPCISelLowering.cpp	/^  int       FrameIdx;$/;"	m	struct:__anon328::TailCallArgumentInfo	file:
FrameIdxOp	Target/PowerPC/PPCISelLowering.cpp	/^  SDValue FrameIdxOp;$/;"	m	struct:__anon328::TailCallArgumentInfo	file:
FrameIndex	CodeGen/AsmPrinter/DwarfDebug.h	/^  int FrameIndex;$/;"	m	class:llvm::DbgVariable
FrameIndex	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^      int FrameIndex;$/;"	m	struct:__anon392::MSP430ISelAddressMode::__anon394	file:
FrameIndex	Target/X86/X86InstrBuilder.h	/^    int FrameIndex;$/;"	m	union:llvm::X86AddressMode::__anon385
FrameIndexBase	Target/ARM/ARMFastISel.cpp	/^      FrameIndexBase$/;"	e	enum:__anon307::Address::__anon308	file:
FrameIndexBase	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^      FrameIndexBase$/;"	e	enum:__anon392::MSP430ISelAddressMode::__anon393	file:
FrameIndexBase	Target/X86/X86ISelDAGToDAG.cpp	/^      FrameIndexBase$/;"	e	enum:__anon371::X86ISelAddressMode::__anon372	file:
FrameIndexBase	Target/X86/X86InstrBuilder.h	/^    FrameIndexBase$/;"	e	enum:llvm::X86AddressMode::__anon384
FrameIndexVirtualScavenging	CodeGen/PrologEpilogInserter.h	/^    bool FrameIndexVirtualScavenging;$/;"	m	class:llvm::PEI
FrameIx	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^    unsigned FrameIx;       \/\/ valid for stack objects$/;"	m	union:llvm::SDDbgValue::__anon89
FrameLowering	Target/ARM/ARMTargetMachine.h	/^  ARMFrameLowering    FrameLowering;$/;"	m	class:llvm::ARMTargetMachine
FrameLowering	Target/ARM/ARMTargetMachine.h	/^  OwningPtr<ARMFrameLowering> FrameLowering;$/;"	m	class:llvm::ThumbTargetMachine
FrameLowering	Target/CellSPU/SPUTargetMachine.h	/^  SPUFrameLowering    FrameLowering;$/;"	m	class:llvm::SPUTargetMachine
FrameLowering	Target/Hexagon/HexagonTargetMachine.h	/^  HexagonFrameLowering FrameLowering;$/;"	m	class:llvm::HexagonTargetMachine
FrameLowering	Target/MBlaze/MBlazeTargetMachine.h	/^    MBlazeFrameLowering    FrameLowering;$/;"	m	class:llvm::MBlazeTargetMachine
FrameLowering	Target/MSP430/MSP430TargetMachine.h	/^  MSP430FrameLowering    FrameLowering;$/;"	m	class:llvm::MSP430TargetMachine
FrameLowering	Target/Mips/MipsTargetMachine.h	/^  const MipsFrameLowering *FrameLowering;$/;"	m	class:llvm::MipsTargetMachine
FrameLowering	Target/NVPTX/NVPTXTargetMachine.h	/^  NVPTXFrameLowering       FrameLowering;$/;"	m	class:llvm::NVPTXTargetMachine
FrameLowering	Target/PowerPC/PPCTargetMachine.h	/^  PPCFrameLowering    FrameLowering;$/;"	m	class:llvm::PPCTargetMachine
FrameLowering	Target/Sparc/SparcTargetMachine.h	/^  SparcFrameLowering FrameLowering;$/;"	m	class:llvm::SparcTargetMachine
FrameLowering	Target/X86/X86TargetMachine.h	/^  X86FrameLowering   FrameLowering;$/;"	m	class:llvm::X86TargetMachine
FrameLowering	Target/XCore/XCoreTargetMachine.h	/^  XCoreFrameLowering FrameLowering;$/;"	m	class:llvm::XCoreTargetMachine
FrameMapTy	CodeGen/ShadowStackGC.cpp	/^    StructType *FrameMapTy;$/;"	m	class:__anon148::ShadowStackGC	file:
FramePointerSaveIndex	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int FramePointerSaveIndex;$/;"	m	class:llvm::PPCFunctionInfo
FramePtr	Target/ARM/ARMBaseRegisterInfo.h	/^  unsigned FramePtr;$/;"	m	class:llvm::ARMBaseRegisterInfo
FramePtr	Target/X86/X86RegisterInfo.h	/^  unsigned FramePtr;$/;"	m	class:llvm::X86RegisterInfo
FramePtrSpillOffset	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned FramePtrSpillOffset;$/;"	m	class:llvm::ARMFunctionInfo
FrameRef	CodeGen/LocalStackSlotAllocation.cpp	/^    FrameRef(MachineBasicBlock::iterator I, int64_t Offset) :$/;"	f	class:__anon136::FrameRef
FrameRef	CodeGen/LocalStackSlotAllocation.cpp	/^  class FrameRef {$/;"	c	namespace:__anon136	file:
FreeBlock	ExecutionEngine/JIT/JITMemoryManager.cpp	/^FreeRangeHeader *MemoryRangeHeader::FreeBlock(FreeRangeHeader *FreeList) {$/;"	f	class:MemoryRangeHeader
FreeMemoryList	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    FreeRangeHeader *FreeMemoryList;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
FreeRangeHeader	ExecutionEngine/JIT/JITMemoryManager.cpp	/^  struct FreeRangeHeader : public MemoryRangeHeader {$/;"	s	namespace:__anon189	file:
FreeState	Bitcode/Reader/BitcodeReader.cpp	/^void BitcodeReader::FreeState() {$/;"	f	class:BitcodeReader
FrmFI	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    FrmFI = 5,$/;"	e	enum:llvm::MipsII::__anon431
FrmFR	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    FrmFR = 4,$/;"	e	enum:llvm::MipsII::__anon431
FrmI	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    FrmI  = 2,$/;"	e	enum:llvm::MipsII::__anon431
FrmJ	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    FrmJ  = 3,$/;"	e	enum:llvm::MipsII::__anon431
FrmOther	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    FrmOther = 6,$/;"	e	enum:llvm::MipsII::__anon431
FrmR	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    FrmR  = 1,$/;"	e	enum:llvm::MipsII::__anon431
FromType	Target/NVPTX/NVPTX.h	/^enum FromType {$/;"	g	namespace:llvm::NVPTX::PTXLdStInstCode
Fsl	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    Fsl$/;"	e	enum:__anon446::MBlazeOperand::KindTy	file:
FslImm	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    } FslImm;$/;"	m	union:__anon446::MBlazeOperand::__anon447	typeref:struct:__anon446::MBlazeOperand::__anon447::__anon452	file:
FstParam	Analysis/MemoryBuiltins.cpp	/^  signed char FstParam, SndParam;$/;"	m	struct:AllocFnsTy	file:
FullDependence	Analysis/DependenceAnalysis.cpp	/^FullDependence::FullDependence(const Instruction *Source,$/;"	f	class:FullDependence
Func	Analysis/MemoryBuiltins.cpp	/^  LibFunc::Func Func;$/;"	m	struct:AllocFnsTy	file:
Func	Transforms/IPO/MergeFunctions.cpp	/^  AssertingVH<Function> Func;$/;"	m	class:__anon596::ComparableFunction	file:
FuncCtx	CodeGen/SjLjEHPrepare.cpp	/^    AllocaInst *FuncCtx;$/;"	m	class:__anon123::SjLjEHPrepare	file:
FuncCtxFn	CodeGen/SjLjEHPrepare.cpp	/^    Constant *FuncCtxFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
FuncInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  FunctionLoweringInfo &FuncInfo;$/;"	m	class:llvm::SelectionDAGBuilder
FuncIsMadeTailCallSafe	Target/X86/X86ISelLowering.cpp	/^static bool FuncIsMadeTailCallSafe(CallingConv::ID CC,$/;"	f	file:
FuncNames	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static std::map<std::string, ExFunc> FuncNames;$/;"	v	file:
Function	VMCore/Function.cpp	/^Function::Function(FunctionType *Ty, LinkageTypes Linkage,$/;"	f	class:Function
FunctionAttrs	Transforms/IPO/FunctionAttrs.cpp	/^    FunctionAttrs() : CallGraphSCCPass(ID), AA(0) {$/;"	f	struct:__anon578::FunctionAttrs
FunctionAttrs	Transforms/IPO/FunctionAttrs.cpp	/^  struct FunctionAttrs : public CallGraphSCCPass {$/;"	s	namespace:__anon578	file:
FunctionBBs	Bitcode/Reader/BitcodeReader.h	/^  std::vector<BasicBlock*> FunctionBBs;$/;"	m	class:llvm::BitcodeReader
FunctionBeginSym	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *FunctionBeginSym, *FunctionEndSym;$/;"	m	class:llvm::DwarfDebug
FunctionBlocks	CodeGen/MachineVerifier.cpp	/^    BlockSet FunctionBlocks;$/;"	m	struct:__anon139::MachineVerifier	file:
FunctionBody	ExecutionEngine/JIT/JITEmitter.cpp	/^      void *FunctionBody;  \/\/ Beginning of the function's allocation.$/;"	m	struct:__anon182::JITEmitter::EmittedCode	file:
FunctionComparator	Transforms/IPO/MergeFunctions.cpp	/^  FunctionComparator(const DataLayout *TD, const Function *F1,$/;"	f	class:__anon597::FunctionComparator
FunctionComparator	Transforms/IPO/MergeFunctions.cpp	/^class FunctionComparator {$/;"	c	namespace:__anon597	file:
FunctionContextTy	CodeGen/SjLjEHPrepare.cpp	/^    Type *FunctionContextTy;$/;"	m	class:__anon123::SjLjEHPrepare	file:
FunctionDIMap	Transforms/IPO/DeadArgumentElimination.cpp	/^    typedef DenseMap<Function*, DISubprogram> FunctionDIMap;$/;"	t	class:__anon600::DAE	file:
FunctionDIs	Transforms/IPO/DeadArgumentElimination.cpp	/^    FunctionDIMap FunctionDIs;$/;"	m	class:__anon600::DAE	file:
FunctionDebugFrameInfo	CodeGen/AsmPrinter/DwarfDebug.h	/^    FunctionDebugFrameInfo(unsigned Num, const std::vector<MachineMove> &M)$/;"	f	struct:llvm::DwarfDebug::FunctionDebugFrameInfo
FunctionDebugFrameInfo	CodeGen/AsmPrinter/DwarfDebug.h	/^  struct FunctionDebugFrameInfo {$/;"	s	class:llvm::DwarfDebug
FunctionDescToIntelJITFormat	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^static iJIT_Method_Load FunctionDescToIntelJITFormat($/;"	f	namespace:__anon198
FunctionEffect	Analysis/IPA/GlobalsModRef.cpp	/^    unsigned FunctionEffect;$/;"	m	struct:__anon1::FunctionRecord	file:
FunctionEndSym	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *FunctionBeginSym, *FunctionEndSym;$/;"	m	class:llvm::DwarfDebug
FunctionInfo	Analysis/IPA/GlobalsModRef.cpp	/^    std::map<const Function*, FunctionRecord> FunctionInfo;$/;"	m	class:__anon1::GlobalsModRef	file:
FunctionLocalMDs	Bitcode/Writer/ValueEnumerator.h	/^  SmallVector<const MDNode *, 8> FunctionLocalMDs;$/;"	m	class:llvm::ValueEnumerator
FunctionLoweringInfo	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^FunctionLoweringInfo::FunctionLoweringInfo(const TargetLowering &tli)$/;"	f	class:FunctionLoweringInfo
FunctionNumber	AsmParser/LLParser.h	/^      int FunctionNumber;$/;"	m	class:llvm::LLParser::PerFunctionState
FunctionPassManager	VMCore/PassManager.cpp	/^FunctionPassManager::FunctionPassManager(Module *m) : M(m) {$/;"	f	class:FunctionPassManager
FunctionPassManagerImpl	VMCore/PassManager.cpp	/^  explicit FunctionPassManagerImpl() :$/;"	f	class:llvm::FunctionPassManagerImpl
FunctionPassManagerImpl	VMCore/PassManager.cpp	/^class FunctionPassManagerImpl : public Pass,$/;"	c	namespace:llvm	file:
FunctionProcessed	VMCore/AsmWriter.cpp	/^  bool FunctionProcessed;$/;"	m	class:__anon612::SlotTracker	file:
FunctionRecord	Analysis/IPA/GlobalsModRef.cpp	/^    FunctionRecord() : MayReadAnyGlobal (false), FunctionEffect(0) {}$/;"	f	struct:__anon1::FunctionRecord
FunctionRecord	Analysis/IPA/GlobalsModRef.cpp	/^  struct FunctionRecord {$/;"	s	namespace:__anon1	file:
FunctionTag	Transforms/Instrumentation/GCOVProfiling.cpp	/^    static const char *FunctionTag;$/;"	m	class:__anon490::GCOVRecord	file:
FunctionTag	Transforms/Instrumentation/GCOVProfiling.cpp	/^  const char *GCOVRecord::FunctionTag = "\\0\\0\\0\\1";$/;"	m	class:__anon490::GCOVRecord	file:
FunctionToCallSitesMap	ExecutionEngine/JIT/JITEmitter.cpp	/^    FunctionToCallSitesMapTy FunctionToCallSitesMap;$/;"	m	class:__anon182::JITResolverState	file:
FunctionToCallSitesMapTy	ExecutionEngine/JIT/JITEmitter.cpp	/^                     CallSiteValueMapConfig> FunctionToCallSitesMapTy;$/;"	t	class:__anon182::JITResolverState	file:
FunctionToLazyStubMap	ExecutionEngine/JIT/JITEmitter.cpp	/^    FunctionToLazyStubMapTy FunctionToLazyStubMap;$/;"	m	class:__anon182::JITResolverState	file:
FunctionToLazyStubMapTy	ExecutionEngine/JIT/JITEmitter.cpp	/^      FunctionToLazyStubMapTy;$/;"	t	class:__anon182::JITResolverState	file:
FunctionToLazyStubMapTy	ExecutionEngine/JIT/JITEmitter.cpp	/^    typedef JITResolverState::FunctionToLazyStubMapTy FunctionToLazyStubMapTy;$/;"	t	class:__anon182::JITResolver	file:
FunctionType	VMCore/Type.cpp	/^FunctionType::FunctionType(Type *Result, ArrayRef<Type*> Params,$/;"	f	class:FunctionType
FunctionTypeKeyInfo	VMCore/LLVMContextImpl.h	/^struct FunctionTypeKeyInfo {$/;"	s	namespace:llvm
FunctionTypeMap	VMCore/LLVMContextImpl.h	/^  typedef DenseMap<FunctionType*, bool, FunctionTypeKeyInfo> FunctionTypeMap;$/;"	t	class:llvm::LLVMContextImpl
FunctionTypes	VMCore/LLVMContextImpl.h	/^  FunctionTypeMap FunctionTypes;$/;"	m	class:llvm::LLVMContextImpl
FunctionsLock	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static ManagedStatic<sys::Mutex> FunctionsLock;$/;"	v	file:
FunctionsWithBodies	Bitcode/Reader/BitcodeReader.h	/^  std::vector<Function*> FunctionsWithBodies;$/;"	m	class:llvm::BitcodeReader
FuseInst	Target/X86/X86InstrInfo.cpp	/^static MachineInstr *FuseInst(MachineFunction &MF,$/;"	f	file:
FuseTwoAddrInst	Target/X86/X86InstrInfo.cpp	/^static MachineInstr *FuseTwoAddrInst(MachineFunction &MF, unsigned Opcode,$/;"	f	file:
GCFunctionInfo	CodeGen/GCMetadata.cpp	/^GCFunctionInfo::GCFunctionInfo(const Function &F, GCStrategy &S)$/;"	f	class:GCFunctionInfo
GCLock	VMCore/Function.cpp	/^static ManagedStatic<sys::SmartRWMutex<true> > GCLock;$/;"	v	file:
GCMachineCodeAnalysis	CodeGen/GCStrategy.cpp	/^  class GCMachineCodeAnalysis : public MachineFunctionPass {$/;"	c	namespace:__anon145	file:
GCMachineCodeAnalysis	CodeGen/GCStrategy.cpp	/^GCMachineCodeAnalysis::GCMachineCodeAnalysis()$/;"	f	class:GCMachineCodeAnalysis
GCMachineCodeAnalysisID	CodeGen/GCStrategy.cpp	/^char &llvm::GCMachineCodeAnalysisID = GCMachineCodeAnalysis::ID;$/;"	m	class:llvm	file:
GCMetadataPrinter	CodeGen/GCMetadataPrinter.cpp	/^GCMetadataPrinter::GCMetadataPrinter() { }$/;"	f	class:GCMetadataPrinter
GCModuleInfo	CodeGen/GCMetadata.cpp	/^GCModuleInfo::GCModuleInfo()$/;"	f	class:GCModuleInfo
GCNamePool	VMCore/Function.cpp	/^static StringPool *GCNamePool;$/;"	v	file:
GCNames	VMCore/Function.cpp	/^static DenseMap<const Function*,PooledStringPtr> *GCNames;$/;"	v	file:
GCOVBlock	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVBlock(uint32_t Number, raw_ostream *os)$/;"	f	class:__anon490::GCOVBlock	file:
GCOVBlock	Transforms/Instrumentation/GCOVProfiling.cpp	/^  class GCOVBlock : public GCOVRecord {$/;"	c	namespace:__anon490	file:
GCOVFunction	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVFunction(DISubprogram SP, raw_ostream *os,$/;"	f	class:__anon490::GCOVFunction
GCOVFunction	Transforms/Instrumentation/GCOVProfiling.cpp	/^  class GCOVFunction : public GCOVRecord {$/;"	c	namespace:__anon490	file:
GCOVLines	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVLines(StringRef F, raw_ostream *os) $/;"	f	class:__anon490::GCOVLines
GCOVLines	Transforms/Instrumentation/GCOVProfiling.cpp	/^  class GCOVLines : public GCOVRecord {$/;"	c	namespace:__anon490	file:
GCOVProfiler	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVProfiler()$/;"	f	class:__anon489::GCOVProfiler
GCOVProfiler	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVProfiler(bool EmitNotes, bool EmitData, bool use402Format = false,$/;"	f	class:__anon489::GCOVProfiler
GCOVProfiler	Transforms/Instrumentation/GCOVProfiling.cpp	/^  class GCOVProfiler : public ModulePass {$/;"	c	namespace:__anon489	file:
GCOVRecord	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVRecord() {}$/;"	f	class:__anon490::GCOVRecord
GCOVRecord	Transforms/Instrumentation/GCOVProfiling.cpp	/^  class GCOVRecord {$/;"	c	namespace:__anon490	file:
GCStrategy	CodeGen/GCStrategy.cpp	/^GCStrategy::GCStrategy() :$/;"	f	class:GCStrategy
GDBJITRegistrar	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^  GDBJITRegistrar() : ObjectBufferMap() {}$/;"	f	class:__anon178::GDBJITRegistrar
GDBJITRegistrar	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^class GDBJITRegistrar : public JITRegistrar {$/;"	c	namespace:__anon178	file:
GE	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const Constant *GE;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseRec
GE	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    GE,            \/\/ Greater than or equal      Greater than or equal$/;"	e	enum:llvm::ARMCC::CondCodes
GE	Target/MBlaze/MBlazeISelLowering.h	/^      GE,$/;"	e	enum:llvm::MBlazeCC::CC
GE	Target/NVPTX/NVPTX.h	/^  GE$/;"	e	enum:llvm::NVPTXCC::CondCodes
GENERIC	Target/NVPTX/NVPTX.h	/^  GENERIC = 0,$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::AddressSpace
GENERIC_FIXUP_FUNC	Target/X86/Disassembler/X86DisassemblerDecoder.c	1198;"	d	file:
GENFILE	VMCore/Makefile	/^GENFILE:=$(PROJ_OBJ_ROOT)\/include\/llvm\/Intrinsics.gen$/;"	m
GEPIndices	Transforms/Scalar/SROA.cpp	/^    SmallVector<Value *, 4> GEPIndices;$/;"	m	class:__anon562::AggLoadStoreRewriter::OpSplitter	file:
GETASMPREFIX	Target/ARM/ARMJITInfo.cpp	42;"	d	file:
GETASMPREFIX	Target/Mips/MipsJITInfo.cpp	87;"	d	file:
GETASMPREFIX	Target/X86/X86JITInfo.cpp	57;"	d	file:
GETASMPREFIX2	Target/ARM/ARMJITInfo.cpp	41;"	d	file:
GETASMPREFIX2	Target/Mips/MipsJITInfo.cpp	86;"	d	file:
GETASMPREFIX2	Target/X86/X86JITInfo.cpp	56;"	d	file:
GETNEXT	Support/regcomp.c	125;"	d	file:
GET_ASSEMBLER_HEADER	Target/ARM/AsmParser/ARMAsmParser.cpp	147;"	d	file:
GET_ASSEMBLER_HEADER	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	55;"	d	file:
GET_ASSEMBLER_HEADER	Target/Mips/AsmParser/MipsAsmParser.cpp	67;"	d	file:
GET_ASSEMBLER_HEADER	Target/X86/AsmParser/X86AsmParser.cpp	92;"	d	file:
GET_FUNCTION_RECOGNIZER	Target/MBlaze/MBlazeIntrinsicInfo.cpp	65;"	d	file:
GET_FUNCTION_RECOGNIZER	Target/MBlaze/MBlazeIntrinsicInfo.cpp	67;"	d	file:
GET_FUNCTION_RECOGNIZER	VMCore/Function.cpp	337;"	d	file:
GET_FUNCTION_RECOGNIZER	VMCore/Function.cpp	339;"	d	file:
GET_INSTRINFO_CTOR	Target/ARM/ARMBaseInstrInfo.cpp	39;"	d	file:
GET_INSTRINFO_CTOR	Target/CellSPU/SPUInstrInfo.cpp	25;"	d	file:
GET_INSTRINFO_CTOR	Target/Hexagon/HexagonInstrInfo.cpp	27;"	d	file:
GET_INSTRINFO_CTOR	Target/MBlaze/MBlazeInstrInfo.cpp	25;"	d	file:
GET_INSTRINFO_CTOR	Target/MSP430/MSP430InstrInfo.cpp	25;"	d	file:
GET_INSTRINFO_CTOR	Target/Mips/MipsInstrInfo.cpp	25;"	d	file:
GET_INSTRINFO_CTOR	Target/NVPTX/NVPTXInstrInfo.cpp	17;"	d	file:
GET_INSTRINFO_CTOR	Target/PowerPC/PPCInstrInfo.cpp	33;"	d	file:
GET_INSTRINFO_CTOR	Target/Sparc/SparcInstrInfo.cpp	25;"	d	file:
GET_INSTRINFO_CTOR	Target/X86/X86InstrInfo.cpp	38;"	d	file:
GET_INSTRINFO_CTOR	Target/XCore/XCoreInstrInfo.cpp	25;"	d	file:
GET_INSTRINFO_ENUM	Target/ARM/MCTargetDesc/ARMMCTargetDesc.h	71;"	d
GET_INSTRINFO_ENUM	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.h	32;"	d
GET_INSTRINFO_ENUM	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.h	33;"	d
GET_INSTRINFO_ENUM	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.h	50;"	d
GET_INSTRINFO_ENUM	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.h	30;"	d
GET_INSTRINFO_ENUM	Target/Mips/MCTargetDesc/MipsMCTargetDesc.h	66;"	d
GET_INSTRINFO_ENUM	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.h	30;"	d
GET_INSTRINFO_ENUM	Target/NVPTX/NVPTX.h	134;"	d
GET_INSTRINFO_ENUM	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h	55;"	d
GET_INSTRINFO_ENUM	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.h	33;"	d
GET_INSTRINFO_ENUM	Target/X86/Disassembler/X86Disassembler.cpp	34;"	d	file:
GET_INSTRINFO_ENUM	Target/X86/MCTargetDesc/X86MCTargetDesc.h	107;"	d
GET_INSTRINFO_ENUM	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.h	32;"	d
GET_INSTRINFO_HEADER	Target/ARM/ARMBaseInstrInfo.h	23;"	d
GET_INSTRINFO_HEADER	Target/CellSPU/SPUInstrInfo.h	21;"	d
GET_INSTRINFO_HEADER	Target/Hexagon/HexagonInstrInfo.h	23;"	d
GET_INSTRINFO_HEADER	Target/MBlaze/MBlazeInstrInfo.h	22;"	d
GET_INSTRINFO_HEADER	Target/MSP430/MSP430InstrInfo.h	20;"	d
GET_INSTRINFO_HEADER	Target/Mips/MipsInstrInfo.h	23;"	d
GET_INSTRINFO_HEADER	Target/NVPTX/NVPTXInstrInfo.h	21;"	d
GET_INSTRINFO_HEADER	Target/PowerPC/PPCInstrInfo.h	21;"	d
GET_INSTRINFO_HEADER	Target/Sparc/SparcInstrInfo.h	20;"	d
GET_INSTRINFO_HEADER	Target/X86/X86InstrInfo.h	22;"	d
GET_INSTRINFO_HEADER	Target/XCore/XCoreInstrInfo.h	20;"	d
GET_INSTRINFO_MC_DESC	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	30;"	d	file:
GET_INSTRINFO_MC_DESC	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp	24;"	d	file:
GET_INSTRINFO_MC_DESC	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp	24;"	d	file:
GET_INSTRINFO_MC_DESC	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	25;"	d	file:
GET_INSTRINFO_MC_DESC	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp	23;"	d	file:
GET_INSTRINFO_MC_DESC	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	26;"	d	file:
GET_INSTRINFO_MC_DESC	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.cpp	22;"	d	file:
GET_INSTRINFO_MC_DESC	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	26;"	d	file:
GET_INSTRINFO_MC_DESC	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.cpp	23;"	d	file:
GET_INSTRINFO_MC_DESC	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	33;"	d	file:
GET_INSTRINFO_MC_DESC	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp	23;"	d	file:
GET_INSTRUCTION_NAME	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	28;"	d	file:
GET_INTRINSIC_ATTRIBUTES	Target/MBlaze/MBlazeIntrinsicInfo.cpp	87;"	d	file:
GET_INTRINSIC_ATTRIBUTES	Target/MBlaze/MBlazeIntrinsicInfo.cpp	89;"	d	file:
GET_INTRINSIC_ATTRIBUTES	VMCore/Function.cpp	607;"	d	file:
GET_INTRINSIC_ATTRIBUTES	VMCore/Function.cpp	609;"	d	file:
GET_INTRINSIC_ENUM_VALUES	Target/MBlaze/MBlazeIntrinsicInfo.cpp	30;"	d	file:
GET_INTRINSIC_ENUM_VALUES	Target/MBlaze/MBlazeIntrinsicInfo.cpp	32;"	d	file:
GET_INTRINSIC_GENERATOR	Target/MBlaze/MBlazeIntrinsicInfo.cpp	96;"	d	file:
GET_INTRINSIC_GENERATOR	Target/MBlaze/MBlazeIntrinsicInfo.cpp	98;"	d	file:
GET_INTRINSIC_GENERATOR_GLOBAL	VMCore/Function.cpp	504;"	d	file:
GET_INTRINSIC_GENERATOR_GLOBAL	VMCore/Function.cpp	506;"	d	file:
GET_INTRINSIC_MODREF_BEHAVIOR	Analysis/BasicAliasAnalysis.cpp	634;"	d	file:
GET_INTRINSIC_MODREF_BEHAVIOR	Analysis/BasicAliasAnalysis.cpp	636;"	d	file:
GET_INTRINSIC_NAME_TABLE	Target/MBlaze/MBlazeIntrinsicInfo.cpp	44;"	d	file:
GET_INTRINSIC_NAME_TABLE	Target/MBlaze/MBlazeIntrinsicInfo.cpp	46;"	d	file:
GET_INTRINSIC_NAME_TABLE	VMCore/Function.cpp	347;"	d	file:
GET_INTRINSIC_NAME_TABLE	VMCore/Function.cpp	349;"	d	file:
GET_INTRINSIC_OVERLOAD_TABLE	Target/MBlaze/MBlazeIntrinsicInfo.cpp	81;"	d	file:
GET_INTRINSIC_OVERLOAD_TABLE	Target/MBlaze/MBlazeIntrinsicInfo.cpp	83;"	d	file:
GET_INTRINSIC_OVERLOAD_TABLE	VMCore/Function.cpp	601;"	d	file:
GET_INTRINSIC_OVERLOAD_TABLE	VMCore/Function.cpp	603;"	d	file:
GET_LLVM_INTRINSIC_FOR_GCC_BUILTIN	Target/MBlaze/MBlazeIntrinsicInfo.cpp	36;"	d	file:
GET_LLVM_INTRINSIC_FOR_GCC_BUILTIN	Target/MBlaze/MBlazeIntrinsicInfo.cpp	38;"	d	file:
GET_LLVM_INTRINSIC_FOR_GCC_BUILTIN	VMCore/Function.cpp	620;"	d	file:
GET_LLVM_INTRINSIC_FOR_GCC_BUILTIN	VMCore/Function.cpp	622;"	d	file:
GET_MATCHER_IMPLEMENTATION	Target/ARM/AsmParser/ARMAsmParser.cpp	7798;"	d	file:
GET_MATCHER_IMPLEMENTATION	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	559;"	d	file:
GET_MATCHER_IMPLEMENTATION	Target/Mips/AsmParser/MipsAsmParser.cpp	1331;"	d	file:
GET_MATCHER_IMPLEMENTATION	Target/X86/AsmParser/X86AsmParser.cpp	1836;"	d	file:
GET_OPERAND_DIAGNOSTIC_TYPES	Target/ARM/AsmParser/ARMAsmParser.cpp	235;"	d	file:
GET_REGINFO_ENUM	Target/ARM/MCTargetDesc/ARMMCTargetDesc.h	66;"	d
GET_REGINFO_ENUM	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.h	27;"	d
GET_REGINFO_ENUM	Target/CellSPU/SPURegisterNames.h	16;"	d
GET_REGINFO_ENUM	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.h	28;"	d
GET_REGINFO_ENUM	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.h	46;"	d
GET_REGINFO_ENUM	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.h	26;"	d
GET_REGINFO_ENUM	Target/Mips/MCTargetDesc/MipsMCTargetDesc.h	62;"	d
GET_REGINFO_ENUM	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.h	26;"	d
GET_REGINFO_ENUM	Target/NVPTX/NVPTX.h	130;"	d
GET_REGINFO_ENUM	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h	50;"	d
GET_REGINFO_ENUM	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.h	28;"	d
GET_REGINFO_ENUM	Target/X86/Disassembler/X86Disassembler.cpp	32;"	d	file:
GET_REGINFO_ENUM	Target/X86/MCTargetDesc/X86MCTargetDesc.h	102;"	d
GET_REGINFO_ENUM	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.h	27;"	d
GET_REGINFO_HEADER	Target/ARM/ARMBaseRegisterInfo.h	20;"	d
GET_REGINFO_HEADER	Target/CellSPU/SPURegisterInfo.h	20;"	d
GET_REGINFO_HEADER	Target/Hexagon/HexagonRegisterInfo.h	21;"	d
GET_REGINFO_HEADER	Target/MBlaze/MBlazeRegisterInfo.h	21;"	d
GET_REGINFO_HEADER	Target/MSP430/MSP430RegisterInfo.h	19;"	d
GET_REGINFO_HEADER	Target/Mips/MipsRegisterInfo.h	20;"	d
GET_REGINFO_HEADER	Target/NVPTX/NVPTXRegisterInfo.h	21;"	d
GET_REGINFO_HEADER	Target/PowerPC/PPCRegisterInfo.h	21;"	d
GET_REGINFO_HEADER	Target/Sparc/SparcRegisterInfo.h	19;"	d
GET_REGINFO_HEADER	Target/X86/X86RegisterInfo.h	19;"	d
GET_REGINFO_HEADER	Target/XCore/XCoreRegisterInfo.h	19;"	d
GET_REGINFO_MC_DESC	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	27;"	d	file:
GET_REGINFO_MC_DESC	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp	30;"	d	file:
GET_REGINFO_MC_DESC	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp	30;"	d	file:
GET_REGINFO_MC_DESC	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	31;"	d	file:
GET_REGINFO_MC_DESC	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp	29;"	d	file:
GET_REGINFO_MC_DESC	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	32;"	d	file:
GET_REGINFO_MC_DESC	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.cpp	28;"	d	file:
GET_REGINFO_MC_DESC	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	32;"	d	file:
GET_REGINFO_MC_DESC	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.cpp	29;"	d	file:
GET_REGINFO_MC_DESC	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	30;"	d	file:
GET_REGINFO_MC_DESC	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp	29;"	d	file:
GET_REGINFO_TARGET_DESC	Target/ARM/ARMBaseRegisterInfo.cpp	41;"	d	file:
GET_REGINFO_TARGET_DESC	Target/CellSPU/SPURegisterInfo.cpp	44;"	d	file:
GET_REGINFO_TARGET_DESC	Target/Hexagon/HexagonRegisterInfo.cpp	373;"	d	file:
GET_REGINFO_TARGET_DESC	Target/MBlaze/MBlazeRegisterInfo.cpp	39;"	d	file:
GET_REGINFO_TARGET_DESC	Target/MSP430/MSP430RegisterInfo.cpp	29;"	d	file:
GET_REGINFO_TARGET_DESC	Target/Mips/MipsRegisterInfo.cpp	40;"	d	file:
GET_REGINFO_TARGET_DESC	Target/NVPTX/NVPTXRegisterInfo.cpp	256;"	d	file:
GET_REGINFO_TARGET_DESC	Target/PowerPC/PPCRegisterInfo.cpp	46;"	d	file:
GET_REGINFO_TARGET_DESC	Target/Sparc/SparcRegisterInfo.cpp	26;"	d	file:
GET_REGINFO_TARGET_DESC	Target/X86/X86RegisterInfo.cpp	42;"	d	file:
GET_REGINFO_TARGET_DESC	Target/XCore/XCoreRegisterInfo.cpp	35;"	d	file:
GET_REGISTER_MATCHER	Target/ARM/AsmParser/ARMAsmParser.cpp	7796;"	d	file:
GET_REGISTER_MATCHER	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	558;"	d	file:
GET_REGISTER_MATCHER	Target/Mips/AsmParser/MipsAsmParser.cpp	1330;"	d	file:
GET_REGISTER_MATCHER	Target/X86/AsmParser/X86AsmLexer.cpp	69;"	d	file:
GET_REGISTER_MATCHER	Target/X86/AsmParser/X86AsmParser.cpp	1835;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/ARM/ARMSubtarget.cpp	22;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/CellSPU/SPUSubtarget.cpp	20;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/Hexagon/HexagonSubtarget.cpp	21;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/MBlaze/MBlazeSubtarget.cpp	21;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/MSP430/MSP430Subtarget.cpp	19;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/Mips/MipsSubtarget.cpp	20;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/NVPTX/NVPTXSubtarget.cpp	17;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/PowerPC/PPCSubtarget.cpp	24;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/Sparc/SparcSubtarget.cpp	19;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/X86/X86Subtarget.cpp	26;"	d	file:
GET_SUBTARGETINFO_CTOR	Target/XCore/XCoreSubtarget.cpp	19;"	d	file:
GET_SUBTARGETINFO_ENUM	Target/ARM/MCTargetDesc/ARMMCTargetDesc.h	74;"	d
GET_SUBTARGETINFO_ENUM	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.h	35;"	d
GET_SUBTARGETINFO_ENUM	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.h	36;"	d
GET_SUBTARGETINFO_ENUM	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.h	53;"	d
GET_SUBTARGETINFO_ENUM	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.h	33;"	d
GET_SUBTARGETINFO_ENUM	Target/Mips/MCTargetDesc/MipsMCTargetDesc.h	69;"	d
GET_SUBTARGETINFO_ENUM	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.h	33;"	d
GET_SUBTARGETINFO_ENUM	Target/NVPTX/NVPTXSubtarget.cpp	15;"	d	file:
GET_SUBTARGETINFO_ENUM	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h	58;"	d
GET_SUBTARGETINFO_ENUM	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.h	36;"	d
GET_SUBTARGETINFO_ENUM	Target/X86/MCTargetDesc/X86MCTargetDesc.h	110;"	d
GET_SUBTARGETINFO_ENUM	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.h	35;"	d
GET_SUBTARGETINFO_HEADER	Target/ARM/ARMSubtarget.h	23;"	d
GET_SUBTARGETINFO_HEADER	Target/CellSPU/SPUSubtarget.h	21;"	d
GET_SUBTARGETINFO_HEADER	Target/Hexagon/HexagonSubtarget.h	21;"	d
GET_SUBTARGETINFO_HEADER	Target/MBlaze/MBlazeSubtarget.h	21;"	d
GET_SUBTARGETINFO_HEADER	Target/MSP430/MSP430Subtarget.h	20;"	d
GET_SUBTARGETINFO_HEADER	Target/Mips/MipsSubtarget.h	21;"	d
GET_SUBTARGETINFO_HEADER	Target/NVPTX/NVPTXSubtarget.h	20;"	d
GET_SUBTARGETINFO_HEADER	Target/PowerPC/PPCSubtarget.h	22;"	d
GET_SUBTARGETINFO_HEADER	Target/Sparc/SparcSubtarget.h	20;"	d
GET_SUBTARGETINFO_HEADER	Target/X86/X86Subtarget.h	22;"	d
GET_SUBTARGETINFO_HEADER	Target/XCore/XCoreSubtarget.h	21;"	d
GET_SUBTARGETINFO_MC_DESC	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	33;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp	27;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp	27;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	28;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp	26;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	29;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.cpp	25;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	29;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.cpp	26;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	36;"	d	file:
GET_SUBTARGETINFO_MC_DESC	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp	26;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/ARM/ARMSubtarget.cpp	21;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/CellSPU/SPUSubtarget.cpp	19;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/Hexagon/HexagonSubtarget.cpp	22;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/MBlaze/MBlazeSubtarget.cpp	20;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/MSP430/MSP430Subtarget.cpp	18;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/Mips/MipsSubtarget.cpp	19;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/NVPTX/NVPTXSubtarget.cpp	16;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/PowerPC/PPCSubtarget.cpp	23;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/Sparc/SparcSubtarget.cpp	18;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/X86/X86Subtarget.cpp	25;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	Target/XCore/XCoreSubtarget.cpp	18;"	d	file:
GET_SUBTARGET_FEATURE_NAME	Target/ARM/AsmParser/ARMAsmParser.cpp	7797;"	d	file:
GFI	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  GCFunctionInfo *GFI;$/;"	m	class:llvm::SelectionDAGBuilder
GID	Object/Archive.cpp	/^  char GID[6];$/;"	m	struct:__anon228::ArchiveMemberHeader	file:
GLOBAL	Target/NVPTX/NVPTX.h	/^  GLOBAL = 1,$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::AddressSpace
GLOBAL_BASE_REG	Target/Sparc/SparcISelLowering.h	/^      GLOBAL_BASE_REG, \/\/ Global base reg for PIC$/;"	e	enum:llvm::SPISD::__anon444
GNU_Ada_Personality	Transforms/InstCombine/InstructionCombining.cpp	/^  GNU_Ada_Personality,$/;"	e	enum:Personality_Type	file:
GNU_CXX_Personality	Transforms/InstCombine/InstructionCombining.cpp	/^  GNU_CXX_Personality,$/;"	e	enum:Personality_Type	file:
GNU_ObjC_Personality	Transforms/InstCombine/InstructionCombining.cpp	/^  GNU_ObjC_Personality$/;"	e	enum:Personality_Type	file:
GOODFLAGS	Support/regcomp.c	165;"	d	file:
GOODFLAGS	Support/regexec.c	146;"	d	file:
GOT	Target/ARM/ARMConstantPoolValue.h	/^    GOT,$/;"	e	enum:llvm::ARMCP::ARMCPModifier
GOT	Target/X86/X86Subtarget.h	/^  GOT,              \/\/ Used on many 32-bit unices in -fPIC mode.$/;"	e	enum:llvm::PICStyles::Style
GOTBase	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uint8_t *GOTBase;     \/\/ Target Specific reserved memory$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
GOTOFF	Target/ARM/ARMConstantPoolValue.h	/^    GOTOFF,$/;"	e	enum:llvm::ARMCP::ARMCPModifier
GOTTPOFF	Target/ARM/ARMConstantPoolValue.h	/^    GOTTPOFF,$/;"	e	enum:llvm::ARMCP::ARMCPModifier
GOT_None	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  GOT_None,$/;"	e	enum:GlobalOffsetTableExprKind	file:
GOT_Normal	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  GOT_Normal,$/;"	e	enum:GlobalOffsetTableExprKind	file:
GOT_SymDiff	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  GOT_SymDiff$/;"	e	enum:GlobalOffsetTableExprKind	file:
GPHolder	Target/MBlaze/MBlazeMachineFunction.h	/^  MBlazeFIHolder GPHolder;$/;"	m	class:llvm::MBlazeFunctionInfo
GPRArgRegs	Target/ARM/ARMISelLowering.cpp	/^static const uint16_t GPRArgRegs[] = {$/;"	v	file:
GPRCS1Frames	Target/ARM/ARMMachineFunctionInfo.h	/^  BitVector GPRCS1Frames;$/;"	m	class:llvm::ARMFunctionInfo
GPRCS1Offset	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned GPRCS1Offset;$/;"	m	class:llvm::ARMFunctionInfo
GPRCS1Size	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned GPRCS1Size;$/;"	m	class:llvm::ARMFunctionInfo
GPRCS2Frames	Target/ARM/ARMMachineFunctionInfo.h	/^  BitVector GPRCS2Frames;$/;"	m	class:llvm::ARMFunctionInfo
GPRCS2Offset	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned GPRCS2Offset;$/;"	m	class:llvm::ARMFunctionInfo
GPRCS2Size	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned GPRCS2Size;$/;"	m	class:llvm::ARMFunctionInfo
GPRDecoderTable	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static const uint16_t GPRDecoderTable[] = {$/;"	v	file:
GPRel	Target/MBlaze/MBlazeISelLowering.h	/^      GPRel,$/;"	e	enum:llvm::MBlazeISD::NodeType
GPRel	Target/Mips/MipsISelLowering.h	/^      GPRel,$/;"	e	enum:llvm::MipsISD::NodeType
GS	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    GS          = 2 << SegOvrShift,$/;"	e	enum:llvm::X86II::__anon350
GT	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    GT,            \/\/ Greater than               Greater than$/;"	e	enum:llvm::ARMCC::CondCodes
GT	Target/MBlaze/MBlazeISelLowering.h	/^      GT,$/;"	e	enum:llvm::MBlazeCC::CC
GT	Target/NVPTX/NVPTX.h	/^  GT,$/;"	e	enum:llvm::NVPTXCC::CondCodes
GV	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    const GlobalValue *GV;$/;"	m	struct:__anon392::MSP430ISelAddressMode	file:
GV	Target/X86/X86ISelDAGToDAG.cpp	/^    const GlobalValue *GV;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
GV	Target/X86/X86InstrBuilder.h	/^  const GlobalValue *GV;$/;"	m	struct:llvm::X86AddressMode
GVExtractorPass	Transforms/IPO/ExtractGV.cpp	/^    explicit GVExtractorPass(std::vector<GlobalValue*>& GVs, bool deleteS = true)$/;"	f	class:__anon584::GVExtractorPass
GVExtractorPass	Transforms/IPO/ExtractGV.cpp	/^  class GVExtractorPass : public ModulePass {$/;"	c	namespace:__anon584	file:
GVIsIndirectSymbol	Target/ARM/ARMSubtarget.cpp	/^ARMSubtarget::GVIsIndirectSymbol(const GlobalValue *GV,$/;"	f	class:ARMSubtarget
GVMemoryBlock	ExecutionEngine/ExecutionEngine.cpp	/^  GVMemoryBlock(const GlobalVariable *GV)$/;"	f	class:__anon199::GVMemoryBlock	file:
GVMemoryBlock	ExecutionEngine/ExecutionEngine.cpp	/^class GVMemoryBlock : public CallbackVH {$/;"	c	namespace:__anon199	file:
GVN	Transforms/Scalar/GVN.cpp	/^    explicit GVN(bool noloads = false)$/;"	f	class:__anon537::GVN
GVN	Transforms/Scalar/GVN.cpp	/^  class GVN : public FunctionPass {$/;"	c	namespace:__anon537	file:
GVOpFlags	Target/X86/X86InstrBuilder.h	/^  unsigned GVOpFlags;$/;"	m	struct:llvm::X86AddressMode
GatherAllAliases	CodeGen/SelectionDAG/DAGCombiner.cpp	/^void DAGCombiner::GatherAllAliases(SDNode *N, SDValue OriginalChain,$/;"	f	class:DAGCombiner
GatherConstantCompares	Transforms/Utils/SimplifyCFG.cpp	/^GatherConstantCompares(Value *V, std::vector<ConstantInt*> &Vals, Value *&Extra,$/;"	f	file:
GenContents	Target/CppBackend/CPPBackend.cpp	/^  GenContents,$/;"	e	enum:WhatToGenerate	file:
GenFunction	Target/CppBackend/CPPBackend.cpp	/^  GenFunction,$/;"	e	enum:WhatToGenerate	file:
GenFunctions	Target/CppBackend/CPPBackend.cpp	/^  GenFunctions,$/;"	e	enum:WhatToGenerate	file:
GenInline	Target/CppBackend/CPPBackend.cpp	/^  GenInline,$/;"	e	enum:WhatToGenerate	file:
GenModule	Target/CppBackend/CPPBackend.cpp	/^  GenModule,$/;"	e	enum:WhatToGenerate	file:
GenProgram	Target/CppBackend/CPPBackend.cpp	/^  GenProgram,$/;"	e	enum:WhatToGenerate	file:
GenType	Target/CppBackend/CPPBackend.cpp	/^  GenType$/;"	e	enum:WhatToGenerate	file:
GenVariable	Target/CppBackend/CPPBackend.cpp	/^  GenVariable,$/;"	e	enum:WhatToGenerate	file:
GenWidenVectorExtLoads	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^DAGTypeLegalizer::GenWidenVectorExtLoads(SmallVector<SDValue, 16>& LdChain,$/;"	f	class:DAGTypeLegalizer
GenWidenVectorLoads	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::GenWidenVectorLoads(SmallVector<SDValue, 16> &LdChain,$/;"	f	class:DAGTypeLegalizer
GenWidenVectorStores	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::GenWidenVectorStores(SmallVector<SDValue, 16>& StChain,$/;"	f	class:DAGTypeLegalizer
GenWidenVectorTruncStores	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^DAGTypeLegalizer::GenWidenVectorTruncStores(SmallVector<SDValue, 16>& StChain,$/;"	f	class:DAGTypeLegalizer
GenerateAllReuseFormulae	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::GenerateAllReuseFormulae() {$/;"	f	class:LSRInstance
GenerateCombinations	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::GenerateCombinations(LSRUse &LU, unsigned LUIdx,$/;"	f	class:LSRInstance
GenerateConstantOffsets	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::GenerateConstantOffsets(LSRUse &LU, unsigned LUIdx,$/;"	f	class:LSRInstance
GenerateCrossUseConstantOffsets	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::GenerateCrossUseConstantOffsets() {$/;"	f	class:LSRInstance
GenerateICmpZeroScales	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::GenerateICmpZeroScales(LSRUse &LU, unsigned LUIdx,$/;"	f	class:LSRInstance
GenerateIVChain	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::GenerateIVChain(const IVChain &Chain, SCEVExpander &Rewriter,$/;"	f	class:LSRInstance
GeneratePerfectShuffle	Target/ARM/ARMISelLowering.cpp	/^static SDValue GeneratePerfectShuffle(unsigned PFEntry, SDValue LHS,$/;"	f	file:
GeneratePerfectShuffle	Target/PowerPC/PPCISelLowering.cpp	/^static SDValue GeneratePerfectShuffle(unsigned PFEntry, SDValue LHS,$/;"	f	file:
GenerateReassociations	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::GenerateReassociations(LSRUse &LU, unsigned LUIdx,$/;"	f	class:LSRInstance
GenerateScales	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::GenerateScales(LSRUse &LU, unsigned LUIdx, Formula Base) {$/;"	f	class:LSRInstance
GenerateSymbolicOffsets	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::GenerateSymbolicOffsets(LSRUse &LU, unsigned LUIdx,$/;"	f	class:LSRInstance
GenerateTruncates	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::GenerateTruncates(LSRUse &LU, unsigned LUIdx, Formula Base) {$/;"	f	class:LSRInstance
GenericAsmLexer	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<llvm::AsmLexer> GenericAsmLexer;$/;"	m	struct:llvm::EDDisassembler
GenericAsmParser	MC/MCParser/AsmParser.cpp	/^  GenericAsmParser() {}$/;"	f	class:__anon211::GenericAsmParser
GenericAsmParser	MC/MCParser/AsmParser.cpp	/^class GenericAsmParser : public MCAsmParserExtension {$/;"	c	namespace:__anon211	file:
GenericParser	MC/MCParser/AsmParser.cpp	/^  MCAsmParserExtension *GenericParser;$/;"	m	class:__anon211::AsmParser	file:
GetARMGVSymbol	Target/ARM/ARMAsmPrinter.cpp	/^MCSymbol *ARMAsmPrinter::GetARMGVSymbol(const GlobalValue *GV) {$/;"	f	class:ARMAsmPrinter
GetARMJTIPICJumpTableLabel2	Target/ARM/ARMAsmPrinter.cpp	/^GetARMJTIPICJumpTableLabel2(unsigned uid, unsigned uid2) const {$/;"	f	class:ARMAsmPrinter
GetARMSJLJEHLabel	Target/ARM/ARMAsmPrinter.cpp	/^MCSymbol *ARMAsmPrinter::GetARMSJLJEHLabel(void) const {$/;"	f	class:ARMAsmPrinter
GetAlignedArgumentStackSize	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::GetAlignedArgumentStackSize(unsigned StackSize,$/;"	f	class:X86TargetLowering
GetAllPathCount	Transforms/Scalar/ObjCARC.cpp	/^    unsigned GetAllPathCount() const {$/;"	f	class:__anon507::BBState
GetAllUndefinedSymbols	Linker/LinkArchives.cpp	/^GetAllUndefinedSymbols(Module *M, std::set<std::string> &UndefinedSymbols) {$/;"	f	file:
GetAnalyzableBrOpc	Target/Mips/Mips16InstrInfo.cpp	/^unsigned Mips16InstrInfo::GetAnalyzableBrOpc(unsigned Opc) const {$/;"	f	class:Mips16InstrInfo
GetAnalyzableBrOpc	Target/Mips/MipsSEInstrInfo.cpp	/^unsigned MipsSEInstrInfo::GetAnalyzableBrOpc(unsigned Opc) const {$/;"	f	class:MipsSEInstrInfo
GetAnonSym	Target/PowerPC/PPCAsmPrinter.cpp	/^static MCSymbol *GetAnonSym(MCSymbol *Sym, MCContext &Ctx) {$/;"	f	file:
GetAutoSenseRadix	Support/StringRef.cpp	/^static unsigned GetAutoSenseRadix(StringRef &Str) {$/;"	f	file:
GetBB	AsmParser/LLParser.cpp	/^BasicBlock *LLParser::PerFunctionState::GetBB(const std::string &Name,$/;"	f	class:LLParser::PerFunctionState
GetBB	AsmParser/LLParser.cpp	/^BasicBlock *LLParser::PerFunctionState::GetBB(unsigned ID, LocTy Loc) {$/;"	f	class:LLParser::PerFunctionState
GetBaseValue	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^ScalarEvolutionAliasAnalysis::GetBaseValue(const SCEV *S) {$/;"	f	class:ScalarEvolutionAliasAnalysis
GetBasicInstructionClass	Transforms/Scalar/ObjCARC.cpp	/^static InstructionClass GetBasicInstructionClass(const Value *V) {$/;"	f	file:
GetBestDestForJumpOnUndef	Transforms/Scalar/JumpThreading.cpp	/^static unsigned GetBestDestForJumpOnUndef(BasicBlock *BB) {$/;"	f	file:
GetBinding	MC/MCELF.cpp	/^unsigned MCELF::GetBinding(const MCSymbolData &SD) {$/;"	f	class:llvm::MCELF
GetBitcodeSymbols	Archive/Archive.cpp	/^bool llvm::GetBitcodeSymbols(const sys::Path& fName,$/;"	f	class:llvm
GetBitcodeSymbols	Archive/Archive.cpp	/^llvm::GetBitcodeSymbols(const char *BufPtr, unsigned Length,$/;"	f	class:llvm
GetBlockAddressSymbol	CodeGen/AsmPrinter/AsmPrinter.cpp	/^MCSymbol *AsmPrinter::GetBlockAddressSymbol(const BasicBlock *BB) const {$/;"	f	class:AsmPrinter
GetBlockAddressSymbol	CodeGen/AsmPrinter/AsmPrinter.cpp	/^MCSymbol *AsmPrinter::GetBlockAddressSymbol(const BlockAddress *BA) const {$/;"	f	class:AsmPrinter
GetBlockAddressSymbol	Target/MBlaze/MBlazeMCInstLower.cpp	/^GetBlockAddressSymbol(const MachineOperand &MO) const {$/;"	f	class:MBlazeMCInstLower
GetBlockAddressSymbol	Target/MSP430/MSP430MCInstLower.cpp	/^GetBlockAddressSymbol(const MachineOperand &MO) const {$/;"	f	class:MSP430MCInstLower
GetBranchWeights	Transforms/Utils/SimplifyCFG.cpp	/^static void GetBranchWeights(TerminatorInst *TI,$/;"	f	file:
GetBucketFor	Support/FoldingSet.cpp	/^static void **GetBucketFor(unsigned Hash, void **Buckets, unsigned NumBuckets) {$/;"	f	file:
GetBucketPtr	Support/FoldingSet.cpp	/^static void **GetBucketPtr(void *NextInBucketPtr) {$/;"	f	file:
GetCFGOnlyPasses	VMCore/Pass.cpp	/^    GetCFGOnlyPasses(VectorType &L) : CFGOnlyList(L) {}$/;"	f	struct:__anon616::GetCFGOnlyPasses
GetCFGOnlyPasses	VMCore/Pass.cpp	/^  struct GetCFGOnlyPasses : public PassRegistrationListener {$/;"	s	namespace:__anon616	file:
GetCPISymbol	CodeGen/AsmPrinter/AsmPrinter.cpp	/^MCSymbol *AsmPrinter::GetCPISymbol(unsigned CPID) const {$/;"	f	class:AsmPrinter
GetCallSiteClass	Transforms/Scalar/ObjCARC.cpp	/^static InstructionClass GetCallSiteClass(ImmutableCallSite CS) {$/;"	f	file:
GetCaseResults	Transforms/Utils/SimplifyCFG.cpp	/^static bool GetCaseResults(SwitchInst *SI,$/;"	f	file:
GetCommentOS	MC/MCAsmStreamer.cpp	/^  virtual raw_ostream &GetCommentOS() {$/;"	f	class:__anon214::MCAsmStreamer
GetCommentOS	MC/MCStreamer.cpp	/^raw_ostream &MCStreamer::GetCommentOS() {$/;"	f	class:MCStreamer
GetCompareTy	Analysis/InstructionSimplify.cpp	/^static Type *GetCompareTy(Value *Op) {$/;"	f	file:
GetConcreteStackEntryType	CodeGen/ShadowStackGC.cpp	/^Type* ShadowStackGC::GetConcreteStackEntryType(Function &F) {$/;"	f	class:ShadowStackGC
GetCondBranchFromCond	Target/MBlaze/MBlazeInstrInfo.h	/^  inline static unsigned GetCondBranchFromCond(CondCode CC) {$/;"	f	namespace:llvm::MBlaze
GetCondBranchFromCond	Target/X86/X86InstrInfo.cpp	/^unsigned X86::GetCondBranchFromCond(X86::CondCode CC) {$/;"	f	class:X86
GetCondBranchFromCond	Target/XCore/XCoreInstrInfo.cpp	/^static inline unsigned GetCondBranchFromCond(XCore::CondCode CC) $/;"	f	file:
GetCondFromBranchOpc	Target/XCore/XCoreInstrInfo.cpp	/^static XCore::CondCode GetCondFromBranchOpc(unsigned BrOpc) $/;"	f	file:
GetConstantInt	Transforms/Utils/SimplifyCFG.cpp	/^static ConstantInt *GetConstantInt(Value *V, const DataLayout *TD) {$/;"	f	file:
GetConstantPoolIndexSymbol	Target/MBlaze/MBlazeMCInstLower.cpp	/^GetConstantPoolIndexSymbol(const MachineOperand &MO) const {$/;"	f	class:MBlazeMCInstLower
GetConstantPoolIndexSymbol	Target/MSP430/MSP430MCInstLower.cpp	/^GetConstantPoolIndexSymbol(const MachineOperand &MO) const {$/;"	f	class:MSP430MCInstLower
GetConstantPoolSizeInBytes	ExecutionEngine/JIT/JITEmitter.cpp	/^static unsigned GetConstantPoolSizeInBytes(MachineConstantPool *MCP,$/;"	f	file:
GetCostForDef	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static void GetCostForDef(const ScheduleDAGSDNodes::RegDefIter &RegDefPos,$/;"	f	file:
GetCpuIDAndInfo	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^bool X86_MC::GetCpuIDAndInfo(unsigned value, unsigned *rEAX,$/;"	f	class:X86_MC
GetCpuIDAndInfoEx	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^bool X86_MC::GetCpuIDAndInfoEx(unsigned value, unsigned subleaf, unsigned *rEAX,$/;"	f	class:X86_MC
GetCurrent	Support/CrashRecoveryContext.cpp	/^CrashRecoveryContext *CrashRecoveryContext::GetCurrent() {$/;"	f	class:CrashRecoveryContext
GetDLLSuffix	Support/Path.cpp	/^StringRef Path::GetDLLSuffix() {$/;"	f	class:Path
GetDSubRegs	Target/ARM/ARMExpandPseudoInsts.cpp	/^static void GetDSubRegs(unsigned Reg, NEONRegSpacing RegSpc,$/;"	f	file:
GetDecodedBinaryOpcode	Bitcode/Reader/BitcodeReader.cpp	/^static int GetDecodedBinaryOpcode(unsigned Val, Type *Ty) {$/;"	f	file:
GetDecodedCastOpcode	Bitcode/Reader/BitcodeReader.cpp	/^static int GetDecodedCastOpcode(unsigned Val) {$/;"	f	file:
GetDecodedLinkage	Bitcode/Reader/BitcodeReader.cpp	/^static GlobalValue::LinkageTypes GetDecodedLinkage(unsigned Val) {$/;"	f	file:
GetDecodedOrdering	Bitcode/Reader/BitcodeReader.cpp	/^static AtomicOrdering GetDecodedOrdering(unsigned Val) {$/;"	f	file:
GetDecodedRMWOperation	Bitcode/Reader/BitcodeReader.cpp	/^static AtomicRMWInst::BinOp GetDecodedRMWOperation(unsigned Val) {$/;"	f	file:
GetDecodedSynchScope	Bitcode/Reader/BitcodeReader.cpp	/^static SynchronizationScope GetDecodedSynchScope(unsigned Val) {$/;"	f	file:
GetDecodedThreadLocalMode	Bitcode/Reader/BitcodeReader.cpp	/^static GlobalVariable::ThreadLocalMode GetDecodedThreadLocalMode(unsigned Val) {$/;"	f	file:
GetDecodedVisibility	Bitcode/Reader/BitcodeReader.cpp	/^static GlobalValue::VisibilityTypes GetDecodedVisibility(unsigned Val) {$/;"	f	file:
GetDefIndices	CodeGen/AggressiveAntiDepBreaker.h	/^    std::vector<unsigned> &GetDefIndices() { return DefIndices; }$/;"	f	class:llvm::AggressiveAntiDepState
GetDefaultCodeSlabSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    size_t GetDefaultCodeSlabSize() { return DefaultCodeSlabSize; }$/;"	f	class:__anon190::DefaultJITMemoryManager
GetDefaultDataSlabSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    size_t GetDefaultDataSlabSize() { return DefaultSlabSize; }$/;"	f	class:__anon190::DefaultJITMemoryManager
GetDefaultStubSlabSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    size_t GetDefaultStubSlabSize() { return DefaultSlabSize; }$/;"	f	class:__anon190::DefaultJITMemoryManager
GetDemandedBits	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::GetDemandedBits(SDValue V, const APInt &Mask) {$/;"	f	class:DAGCombiner
GetDirectionalLocalSymbol	MC/MCContext.cpp	/^MCSymbol *MCContext::GetDirectionalLocalSymbol(int64_t LocalLabelVal,$/;"	f	class:MCContext
GetDotNewOp	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static int GetDotNewOp(const int opc) {$/;"	f	file:
GetDotNewPredOp	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static int GetDotNewPredOp(const int opc) {$/;"	f	file:
GetDotOldOp	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static int GetDotOldOp(const int opc) {$/;"	f	file:
GetDwarfFile	MC/MCContext.cpp	/^unsigned MCContext::GetDwarfFile(StringRef Directory, StringRef FileName,$/;"	f	class:MCContext
GetElementPtrConstantExpr	VMCore/Constants.cpp	/^GetElementPtrConstantExpr(Constant *C, ArrayRef<Constant*> IdxList,$/;"	f	class:GetElementPtrConstantExpr
GetElementPtrConstantExpr	VMCore/ConstantsContext.h	/^class GetElementPtrConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
GetElementPtrInst	VMCore/Instructions.cpp	/^GetElementPtrInst::GetElementPtrInst(const GetElementPtrInst &GEPI)$/;"	f	class:GetElementPtrInst
GetEncodedBinaryOpcode	Bitcode/Writer/BitcodeWriter.cpp	/^static unsigned GetEncodedBinaryOpcode(unsigned Opcode) {$/;"	f	file:
GetEncodedCastOpcode	Bitcode/Writer/BitcodeWriter.cpp	/^static unsigned GetEncodedCastOpcode(unsigned Opcode) {$/;"	f	file:
GetEncodedOrdering	Bitcode/Writer/BitcodeWriter.cpp	/^static unsigned GetEncodedOrdering(AtomicOrdering Ordering) {$/;"	f	file:
GetEncodedRMWOperation	Bitcode/Writer/BitcodeWriter.cpp	/^static unsigned GetEncodedRMWOperation(AtomicRMWInst::BinOp Op) {$/;"	f	file:
GetEncodedSynchScope	Bitcode/Writer/BitcodeWriter.cpp	/^static unsigned GetEncodedSynchScope(SynchronizationScope SynchScope) {$/;"	f	file:
GetExceptionObject	CodeGen/DwarfEHPrepare.cpp	/^Value *DwarfEHPrepare::GetExceptionObject(ResumeInst *RI) {$/;"	f	class:DwarfEHPrepare
GetExpandedFloat	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::GetExpandedFloat(SDValue Op, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
GetExpandedInteger	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::GetExpandedInteger(SDValue Op, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
GetExpandedOp	CodeGen/SelectionDAG/LegalizeTypes.h	/^  void GetExpandedOp(SDValue Op, SDValue &Lo, SDValue &Hi) {$/;"	f	class:llvm::DAGTypeLegalizer
GetExponent	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^GetExponent(SelectionDAG &DAG, SDValue Op, const TargetLowering &TLI,$/;"	f	file:
GetExtendedOperandRecurrence	Transforms/Scalar/IndVarSimplify.cpp	/^const SCEVAddRecExpr* WidenIV::GetExtendedOperandRecurrence(NarrowIVDefUse DU) {$/;"	f	class:WidenIV
GetExternalSymbolSymbol	CodeGen/AsmPrinter/AsmPrinter.cpp	/^MCSymbol *AsmPrinter::GetExternalSymbolSymbol(StringRef Sym) const {$/;"	f	class:AsmPrinter
GetExternalSymbolSymbol	Target/MBlaze/MBlazeMCInstLower.cpp	/^GetExternalSymbolSymbol(const MachineOperand &MO) const {$/;"	f	class:MBlazeMCInstLower
GetExternalSymbolSymbol	Target/MSP430/MSP430MCInstLower.cpp	/^GetExternalSymbolSymbol(const MachineOperand &MO) const {$/;"	f	class:MSP430MCInstLower
GetF64FormalArgument	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::GetF64FormalArgument(CCValAssign &VA, CCValAssign &NextVA,$/;"	f	class:ARMTargetLowering
GetFPBranchCodeFromCond	Target/Mips/MipsISelLowering.cpp	/^static Mips::FPBranchCode GetFPBranchCodeFromCond(Mips::CondCode CC) {$/;"	f	file:
GetFPLibCall	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^static RTLIB::Libcall GetFPLibCall(EVT VT,$/;"	f	file:
GetFPR	Target/PowerPC/PPCISelLowering.cpp	/^static const uint16_t *GetFPR() {$/;"	f	file:
GetFrameMap	CodeGen/ShadowStackGC.cpp	/^Constant *ShadowStackGC::GetFrameMap(Function &F) {$/;"	f	class:ShadowStackGC
GetFunctionClass	Transforms/Scalar/ObjCARC.cpp	/^static InstructionClass GetFunctionClass(const Function *F) {$/;"	f	file:
GetFunctionSizeInBytes	Target/ARM/ARMFrameLowering.cpp	/^static unsigned GetFunctionSizeInBytes(const MachineFunction &MF,$/;"	f	file:
GetGlobalAddressSymbol	Target/MBlaze/MBlazeMCInstLower.cpp	/^GetGlobalAddressSymbol(const MachineOperand &MO) const {$/;"	f	class:MBlazeMCInstLower
GetGlobalAddressSymbol	Target/MSP430/MSP430MCInstLower.cpp	/^GetGlobalAddressSymbol(const MachineOperand &MO) const {$/;"	f	class:MSP430MCInstLower
GetGlobalReg	Target/Mips/MipsISelLowering.cpp	/^static SDValue GetGlobalReg(SelectionDAG &DAG, EVT Ty) {$/;"	f	file:
GetGlobalVal	AsmParser/LLParser.cpp	/^GlobalValue *LLParser::GetGlobalVal(const std::string &Name, Type *Ty,$/;"	f	class:LLParser
GetGlobalVal	AsmParser/LLParser.cpp	/^GlobalValue *LLParser::GetGlobalVal(unsigned ID, Type *Ty, LocTy Loc) {$/;"	f	class:LLParser
GetGroup	CodeGen/AggressiveAntiDepBreaker.cpp	/^unsigned AggressiveAntiDepState::GetGroup(unsigned Reg) {$/;"	f	class:AggressiveAntiDepState
GetGroupRegs	CodeGen/AggressiveAntiDepBreaker.cpp	/^void AggressiveAntiDepState::GetGroupRegs($/;"	f	class:AggressiveAntiDepState
GetHeapSROAValue	Transforms/IPO/GlobalOpt.cpp	/^static Value *GetHeapSROAValue(Value *V, unsigned FieldNo,$/;"	f	file:
GetIdx	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^      unsigned GetIdx() const {$/;"	f	class:llvm::ScheduleDAGSDNodes::RegDefIter
GetIfCondition	Transforms/Utils/SimplifyCFG.cpp	/^static Value *GetIfCondition(BasicBlock *BB, BasicBlock *&IfTrue,$/;"	f	file:
GetIndexDifference	Analysis/BasicAliasAnalysis.cpp	/^static void GetIndexDifference(SmallVectorImpl<VariableGEPIndex> &Dest,$/;"	f	file:
GetInstSeqLs	Target/Mips/MipsAnalyzeImmediate.cpp	/^void MipsAnalyzeImmediate::GetInstSeqLs(uint64_t Imm, unsigned RemSize,$/;"	f	class:MipsAnalyzeImmediate
GetInstSeqLsADDiu	Target/Mips/MipsAnalyzeImmediate.cpp	/^void MipsAnalyzeImmediate::GetInstSeqLsADDiu(uint64_t Imm, unsigned RemSize,$/;"	f	class:MipsAnalyzeImmediate
GetInstSeqLsORi	Target/Mips/MipsAnalyzeImmediate.cpp	/^void MipsAnalyzeImmediate::GetInstSeqLsORi(uint64_t Imm, unsigned RemSize,$/;"	f	class:MipsAnalyzeImmediate
GetInstSeqLsSLL	Target/Mips/MipsAnalyzeImmediate.cpp	/^void MipsAnalyzeImmediate::GetInstSeqLsSLL(uint64_t Imm, unsigned RemSize,$/;"	f	class:MipsAnalyzeImmediate
GetInstSizeInBytes	Target/ARM/ARMBaseInstrInfo.cpp	/^unsigned ARMBaseInstrInfo::GetInstSizeInBytes(const MachineInstr *MI) const {$/;"	f	class:ARMBaseInstrInfo
GetInstSizeInBytes	Target/MSP430/MSP430InstrInfo.cpp	/^unsigned MSP430InstrInfo::GetInstSizeInBytes(const MachineInstr *MI) const {$/;"	f	class:MSP430InstrInfo
GetInstSizeInBytes	Target/Mips/MipsInstrInfo.cpp	/^unsigned MipsInstrInfo::GetInstSizeInBytes(const MachineInstr *MI) const {$/;"	f	class:MipsInstrInfo
GetInstSizeInBytes	Target/PowerPC/PPCInstrInfo.cpp	/^unsigned PPCInstrInfo::GetInstSizeInBytes(const MachineInstr *MI) const {$/;"	f	class:PPCInstrInfo
GetInstance	MC/MCContext.cpp	/^unsigned MCContext::GetInstance(int64_t LocalLabelVal) {$/;"	f	class:MCContext
GetInstrType	Target/PowerPC/PPCHazardRecognizers.cpp	/^PPCHazardRecognizer970::GetInstrType(unsigned Opcode,$/;"	f	class:PPCHazardRecognizer970
GetInstructionClass	Transforms/Scalar/ObjCARC.cpp	/^static InstructionClass GetInstructionClass(const Value *V) {$/;"	f	file:
GetInvalid	Support/Windows/Windows.h	/^  static handle_type GetInvalid() {$/;"	f	struct:CommonHandleTraits
GetInvalid	Support/Windows/Windows.h	/^  static handle_type GetInvalid() {$/;"	f	struct:CryptContextTraits
GetInvalid	Support/Windows/Windows.h	/^  static handle_type GetInvalid() {$/;"	f	struct:JobHandleTraits
GetJTISymbol	CodeGen/AsmPrinter/AsmPrinter.cpp	/^MCSymbol *AsmPrinter::GetJTISymbol(unsigned JTID, bool isLinkerPrivate) const {$/;"	f	class:AsmPrinter
GetJTSetSymbol	CodeGen/AsmPrinter/AsmPrinter.cpp	/^MCSymbol *AsmPrinter::GetJTSetSymbol(unsigned UID, unsigned MBBID) const {$/;"	f	class:AsmPrinter
GetJumpTableSymbol	Target/MBlaze/MBlazeMCInstLower.cpp	/^GetJumpTableSymbol(const MachineOperand &MO) const {$/;"	f	class:MBlazeMCInstLower
GetJumpTableSymbol	Target/MSP430/MSP430MCInstLower.cpp	/^GetJumpTableSymbol(const MachineOperand &MO) const {$/;"	f	class:MSP430MCInstLower
GetKillIndices	CodeGen/AggressiveAntiDepBreaker.h	/^    std::vector<unsigned> &GetKillIndices() { return KillIndices; }$/;"	f	class:llvm::AggressiveAntiDepState
GetLabelAccessInfo	Target/PowerPC/PPCISelLowering.cpp	/^static bool GetLabelAccessInfo(const TargetMachine &TM, unsigned &HiOpFlags,$/;"	f	file:
GetLazyPtr	Target/PowerPC/PPCAsmPrinter.cpp	/^static MCSymbol *GetLazyPtr(MCSymbol *Sym, MCContext &Ctx) {$/;"	f	file:
GetLinearExpression	Analysis/BasicAliasAnalysis.cpp	/^static Value *GetLinearExpression(Value *V, APInt &Scale, APInt &Offset,$/;"	f	file:
GetLiveOutRegInfo	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^FunctionLoweringInfo::GetLiveOutRegInfo(unsigned Reg, unsigned BitWidth) {$/;"	f	class:FunctionLoweringInfo
GetLoadValueForLoad	Transforms/Scalar/GVN.cpp	/^static Value *GetLoadValueForLoad(LoadInst *SrcVal, unsigned Offset,$/;"	f	file:
GetLocation	Analysis/MemoryDependenceAnalysis.cpp	/^AliasAnalysis::ModRefResult GetLocation(const Instruction *Inst,$/;"	f	file:
GetMBlazeRegNum	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  static unsigned GetMBlazeRegNum(const MCOperand &MO) {$/;"	f	class:__anon454::MBlazeMCCodeEmitter
GetMemInstValueForLoad	Transforms/Scalar/GVN.cpp	/^static Value *GetMemInstValueForLoad(MemIntrinsic *SrcInst, unsigned Offset,$/;"	f	file:
GetMemOperand	Target/Mips/MipsInstrInfo.cpp	/^MachineMemOperand *MipsInstrInfo::GetMemOperand(MachineBasicBlock &MBB, int FI,$/;"	f	class:MipsInstrInfo
GetMemRefInstrs	Analysis/LoopDependenceAnalysis.cpp	/^static void GetMemRefInstrs(const Loop *L,$/;"	f	file:
GetMessage	Support/SourceMgr.cpp	/^SMDiagnostic SourceMgr::GetMessage(SMLoc Loc, SourceMgr::DiagKind Kind,$/;"	f	class:SourceMgr
GetMinTrailingZeros	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::GetMinTrailingZeros(const SCEV *S) {$/;"	f	class:ScalarEvolution
GetNamedBuffer	Support/MemoryBuffer.cpp	/^static T *GetNamedBuffer(StringRef Buffer, StringRef Name,$/;"	f	file:
GetNegatedExpression	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static SDValue GetNegatedExpression(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
GetNewAnonymousName	TableGen/TGParser.cpp	/^static std::string GetNewAnonymousName() {$/;"	f	file:
GetNewMethodIDFunc	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  GetNewMethodIDPtr GetNewMethodIDFunc;$/;"	m	class:llvm::IntelJITEventsWrapper
GetNewMethodIDPtr	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  typedef unsigned int (*GetNewMethodIDPtr)(void);$/;"	t	class:llvm::IntelJITEventsWrapper
GetNextPtr	Support/FoldingSet.cpp	/^static FoldingSetImpl::Node *GetNextPtr(void *NextInBucketPtr) {$/;"	f	file:
GetNode	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^      const SDNode *GetNode() const {$/;"	f	class:llvm::ScheduleDAGSDNodes::RegDefIter
GetNonLocalInfoForBlock	Analysis/MemoryDependenceAnalysis.cpp	/^GetNonLocalInfoForBlock(const AliasAnalysis::Location &Loc,$/;"	f	class:MemoryDependenceAnalysis
GetNumCodeSlabs	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    unsigned GetNumCodeSlabs() { return CodeSlabs.size(); }$/;"	f	class:__anon190::DefaultJITMemoryManager
GetNumDataSlabs	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    unsigned GetNumDataSlabs() { return DataAllocator.GetNumSlabs(); }$/;"	f	class:__anon190::DefaultJITMemoryManager
GetNumSlabs	Support/Allocator.cpp	/^unsigned BumpPtrAllocator::GetNumSlabs() const {$/;"	f	class:llvm::BumpPtrAllocator
GetNumStubSlabs	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    unsigned GetNumStubSlabs() { return StubAllocator.GetNumSlabs(); }$/;"	f	class:__anon190::DefaultJITMemoryManager
GetObjCArg	Transforms/Scalar/ObjCARC.cpp	/^static Value *GetObjCArg(Value *Inst) {$/;"	f	file:
GetOffsetFromIndex	Transforms/Scalar/MemCpyOptimizer.cpp	/^static int64_t GetOffsetFromIndex(const GEPOperator *GEP, unsigned Idx,$/;"	f	file:
GetOpInfo	MC/MCDisassembler/Disassembler.h	/^  LLVMOpInfoCallback GetOpInfo;$/;"	m	class:llvm::LLVMDisasmContext
GetOppositeBranchCondition	Target/Sparc/SparcInstrInfo.cpp	/^static SPCC::CondCodes GetOppositeBranchCondition(SPCC::CondCodes CC)$/;"	f	file:
GetOppositeBranchCondition	Target/X86/X86InstrInfo.cpp	/^X86::CondCode X86::GetOppositeBranchCondition(X86::CondCode CC) {$/;"	f	class:X86
GetOppositeBranchCondition	Target/XCore/XCoreInstrInfo.cpp	/^static inline XCore::CondCode GetOppositeBranchCondition(XCore::CondCode CC)$/;"	f	file:
GetOppositeBranchOpc	Target/Mips/Mips16InstrInfo.cpp	/^unsigned Mips16InstrInfo::GetOppositeBranchOpc(unsigned Opc) const {$/;"	f	class:Mips16InstrInfo
GetOppositeBranchOpc	Target/Mips/MipsSEInstrInfo.cpp	/^unsigned MipsSEInstrInfo::GetOppositeBranchOpc(unsigned Opc) const {$/;"	f	class:MipsSEInstrInfo
GetOptimizationFlags	Bitcode/Writer/BitcodeWriter.cpp	/^static uint64_t GetOptimizationFlags(const Value *V) {$/;"	f	file:
GetOptionInfo	Support/CommandLine.cpp	/^static void GetOptionInfo(SmallVectorImpl<Option*> &PositionalOpts,$/;"	f	file:
GetOrCreateCOFFSymbol	MC/WinCOFFObjectWriter.cpp	/^COFFSymbol *WinCOFFObjectWriter::GetOrCreateCOFFSymbol(const MCSymbol * Symbol){$/;"	f	class:WinCOFFObjectWriter
GetOrCreateGCPrinter	CodeGen/AsmPrinter/AsmPrinter.cpp	/^GCMetadataPrinter *AsmPrinter::GetOrCreateGCPrinter(GCStrategy *S) {$/;"	f	class:AsmPrinter
GetOrCreateSourceID	CodeGen/AsmPrinter/DwarfDebug.cpp	/^unsigned DwarfDebug::GetOrCreateSourceID(StringRef FileName, $/;"	f	class:DwarfDebug
GetOrCreateSymbol	MC/MCContext.cpp	/^MCSymbol *MCContext::GetOrCreateSymbol(StringRef Name) {$/;"	f	class:MCContext
GetOrCreateSymbol	MC/MCContext.cpp	/^MCSymbol *MCContext::GetOrCreateSymbol(const Twine &Name) {$/;"	f	class:MCContext
GetOrInsertNode	Support/FoldingSet.cpp	/^FoldingSetImpl::Node *FoldingSetImpl::GetOrInsertNode(FoldingSetImpl::Node *N) {$/;"	f	class:FoldingSetImpl
GetOrdering	CodeGen/SelectionDAG/SelectionDAG.cpp	/^unsigned SelectionDAG::GetOrdering(const SDNode *SD) const {$/;"	f	class:SelectionDAG
GetPHIValue	CodeGen/MachineSSAUpdater.cpp	/^  static unsigned GetPHIValue(MachineInstr *PHI) {$/;"	f	class:llvm::SSAUpdaterTraits
GetPHIValue	Transforms/Utils/SSAUpdater.cpp	/^  static Value *GetPHIValue(PHINode *PHI) {$/;"	f	class:llvm::SSAUpdaterTraits
GetPairElements	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::GetPairElements(SDValue Pair,$/;"	f	class:DAGTypeLegalizer
GetPassthruRegs	CodeGen/AggressiveAntiDepBreaker.cpp	/^void AggressiveAntiDepBreaker::GetPassthruRegs(MachineInstr *MI,$/;"	f	class:AggressiveAntiDepBreaker
GetPath	Analysis/ProfileInfo.cpp	/^        GetPath(const BasicBlock *Src, const BasicBlock *Dest,$/;"	f	class:llvm::ProfileInfoT
GetPointerBaseAndOffset	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static std::pair<SDValue, int64_t> GetPointerBaseAndOffset(SDValue Ptr) {$/;"	f	file:
GetPointerBaseWithConstantOffset	Analysis/ValueTracking.cpp	/^Value *llvm::GetPointerBaseWithConstantOffset(Value *Ptr, int64_t &Offset,$/;"	f	class:llvm
GetPointerOperand	Analysis/LoopDependenceAnalysis.cpp	/^static Value *GetPointerOperand(Value *I) {$/;"	f	file:
GetPostIncrementOperand	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static MachineOperand& GetPostIncrementOperand(MachineInstr *MI,$/;"	f	file:
GetPredicateSense	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static bool GetPredicateSense(MachineInstr* MI,$/;"	f	file:
GetPromotedInteger	CodeGen/SelectionDAG/LegalizeTypes.h	/^  SDValue GetPromotedInteger(SDValue Op) {$/;"	f	class:llvm::DAGTypeLegalizer
GetRegRefs	CodeGen/AggressiveAntiDepBreaker.h	/^    std::multimap<unsigned, RegisterReference>& GetRegRefs() { return RegRefs; }$/;"	f	class:llvm::AggressiveAntiDepState
GetRegistersForValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static void GetRegistersForValue(SelectionDAG &DAG,$/;"	f	file:
GetRelocType	MC/ELFObjectWriter.cpp	/^    unsigned GetRelocType(const MCValue &Target, const MCFixup &Fixup,$/;"	f	class:__anon225::ELFObjectWriter
GetRelocType	Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp	/^unsigned ARMELFObjectWriter::GetRelocType(const MCValue &Target,$/;"	f	class:ARMELFObjectWriter
GetRelocType	Target/MBlaze/MCTargetDesc/MBlazeELFObjectWriter.cpp	/^unsigned MBlazeELFObjectWriter::GetRelocType(const MCValue &Target,$/;"	f	class:MBlazeELFObjectWriter
GetRelocType	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^unsigned MipsELFObjectWriter::GetRelocType(const MCValue &Target,$/;"	f	class:MipsELFObjectWriter
GetRelocType	Target/PowerPC/MCTargetDesc/PPCELFObjectWriter.cpp	/^unsigned PPCELFObjectWriter::GetRelocType(const MCValue &Target,$/;"	f	class:PPCELFObjectWriter
GetRelocType	Target/X86/MCTargetDesc/X86ELFObjectWriter.cpp	/^unsigned X86ELFObjectWriter::GetRelocType(const MCValue &Target,$/;"	f	class:X86ELFObjectWriter
GetRelocTypeInner	Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp	/^unsigned ARMELFObjectWriter::GetRelocTypeInner(const MCValue &Target,$/;"	f	class:ARMELFObjectWriter
GetRelocation	Target/PowerPC/PPCCodeEmitter.cpp	/^MachineRelocation PPCCodeEmitter::GetRelocation(const MachineOperand &MO, $/;"	f	class:PPCCodeEmitter
GetRenameRegisters	CodeGen/AggressiveAntiDepBreaker.cpp	/^BitVector AggressiveAntiDepBreaker::GetRenameRegisters(unsigned Reg) {$/;"	f	class:AggressiveAntiDepBreaker
GetReturnInfo	CodeGen/SelectionDAG/TargetLowering.cpp	/^void llvm::GetReturnInfo(Type* ReturnType, Attributes attr,$/;"	f	class:llvm
GetScalarizedVector	CodeGen/SelectionDAG/LegalizeTypes.h	/^  SDValue GetScalarizedVector(SDValue Op) {$/;"	f	class:llvm::DAGTypeLegalizer
GetScratchRegister	Target/X86/X86FrameLowering.cpp	/^GetScratchRegister(bool Is64Bit, const MachineFunction &MF, bool Primary) {$/;"	f	file:
GetSectionAddressSize	MC/ELFObjectWriter.cpp	/^uint64_t ELFObjectWriter::GetSectionAddressSize(const MCAsmLayout &Layout,$/;"	f	class:ELFObjectWriter
GetSectionFileSize	MC/ELFObjectWriter.cpp	/^uint64_t ELFObjectWriter::GetSectionFileSize(const MCAsmLayout &Layout,$/;"	f	class:ELFObjectWriter
GetSectionSuffix	MC/MCWin64EH.cpp	/^StringRef MCWin64EHUnwindEmitter::GetSectionSuffix(const MCSymbol *func) {$/;"	f	class:llvm::MCWin64EHUnwindEmitter
GetSelectFoldableConstant	Transforms/InstCombine/InstCombineSelect.cpp	/^static Constant *GetSelectFoldableConstant(Instruction *I) {$/;"	f	file:
GetSelectFoldableOperands	Transforms/InstCombine/InstCombineSelect.cpp	/^static unsigned GetSelectFoldableOperands(Instruction *I) {$/;"	f	file:
GetSeq	Transforms/Scalar/ObjCARC.cpp	/^    Sequence GetSeq() const {$/;"	f	class:__anon506::PtrState
GetShiftedValue	Transforms/InstCombine/InstCombineShifts.cpp	/^static Value *GetShiftedValue(Value *V, unsigned NumBits, bool isLeftShift,$/;"	f	file:
GetShortestSeq	Target/Mips/MipsAnalyzeImmediate.cpp	/^void MipsAnalyzeImmediate::GetShortestSeq(InstSeqLs &SeqLs, InstSeq &Insts) {$/;"	f	class:MipsAnalyzeImmediate
GetSignificand	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^GetSignificand(SelectionDAG &DAG, SDValue Op, DebugLoc dl) {$/;"	f	file:
GetSizeOfEncodedValue	CodeGen/AsmPrinter/AsmPrinterDwarf.cpp	/^unsigned AsmPrinter::GetSizeOfEncodedValue(unsigned Encoding) const {$/;"	f	class:AsmPrinter
GetSoftenedFloat	CodeGen/SelectionDAG/LegalizeTypes.h	/^  SDValue GetSoftenedFloat(SDValue Op) {$/;"	f	class:llvm::DAGTypeLegalizer
GetSortedStubs	CodeGen/MachineModuleInfoImpls.cpp	/^MachineModuleInfoImpl::GetSortedStubs(const DenseMap<MCSymbol*,$/;"	f	class:MachineModuleInfoImpl
GetSplitDestVTs	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::GetSplitDestVTs(EVT InVT, EVT &LoVT, EVT &HiVT) {$/;"	f	class:DAGTypeLegalizer
GetSplitOp	CodeGen/SelectionDAG/LegalizeTypes.h	/^  void GetSplitOp(SDValue Op, SDValue &Lo, SDValue &Hi) {$/;"	f	class:llvm::DAGTypeLegalizer
GetSplitVector	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::GetSplitVector(SDValue Op, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
GetStoreValueForLoad	Transforms/Scalar/GVN.cpp	/^static Value *GetStoreValueForLoad(Value *SrcVal, unsigned Offset,$/;"	f	file:
GetStoreValueOperand	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static MachineOperand& GetStoreValueOperand(MachineInstr *MI) {$/;"	f	file:
GetStringLength	Analysis/ValueTracking.cpp	/^uint64_t llvm::GetStringLength(Value *V) {$/;"	f	class:llvm
GetStringLengthH	Analysis/ValueTracking.cpp	/^static uint64_t GetStringLengthH(Value *V, SmallPtrSet<PHINode*, 32> &PHIs) {$/;"	f	file:
GetSuccessorNumber	Transforms/Utils/BasicBlockUtils.cpp	/^unsigned llvm::GetSuccessorNumber(BasicBlock *BB, BasicBlock *Succ) {$/;"	f	class:llvm
GetSymbolFromOperand	Target/PowerPC/PPCMCInstLower.cpp	/^static MCSymbol *GetSymbolFromOperand(const MachineOperand &MO, AsmPrinter &AP){$/;"	f	file:
GetSymbolFromOperand	Target/X86/X86MCInstLower.cpp	/^GetSymbolFromOperand(const MachineOperand &MO) const {$/;"	f	class:X86MCInstLower
GetSymbolRef	Target/ARM/ARMMCInstLower.cpp	/^MCOperand ARMAsmPrinter::GetSymbolRef(const MachineOperand &MO,$/;"	f	class:ARMAsmPrinter
GetSymbolRef	Target/Hexagon/HexagonMCInstLower.cpp	/^static MCOperand GetSymbolRef(const MachineOperand& MO, const MCSymbol* Symbol,$/;"	f	file:
GetSymbolRef	Target/PowerPC/PPCMCInstLower.cpp	/^static MCOperand GetSymbolRef(const MachineOperand &MO, const MCSymbol *Symbol,$/;"	f	file:
GetSymbolWithGlobalValueBase	CodeGen/AsmPrinter/AsmPrinter.cpp	/^MCSymbol *AsmPrinter::GetSymbolWithGlobalValueBase(const GlobalValue *GV,$/;"	f	class:AsmPrinter
GetTLSADDR	Target/X86/X86ISelLowering.cpp	/^GetTLSADDR(SelectionDAG &DAG, SDValue Chain, GlobalAddressSDNode *GA,$/;"	f	file:
GetTagConstant	VMCore/DIBuilder.cpp	/^static Constant *GetTagConstant(LLVMContext &VMContext, unsigned Tag) {$/;"	f	file:
GetTempSymbol	CodeGen/AsmPrinter/AsmPrinter.cpp	/^MCSymbol *AsmPrinter::GetTempSymbol(StringRef Name) const {$/;"	f	class:AsmPrinter
GetTempSymbol	CodeGen/AsmPrinter/AsmPrinter.cpp	/^MCSymbol *AsmPrinter::GetTempSymbol(StringRef Name, unsigned ID) const {$/;"	f	class:AsmPrinter
GetTestResult	Support/DAGDeltaAlgorithm.cpp	/^bool DAGDeltaAlgorithmImpl::GetTestResult(const changeset_ty &Changes,$/;"	f	class:DAGDeltaAlgorithmImpl
GetTestResult	Support/DeltaAlgorithm.cpp	/^bool DeltaAlgorithm::GetTestResult(const changeset_ty &Changes) {$/;"	f	class:DeltaAlgorithm
GetType	MC/MCELF.cpp	/^unsigned MCELF::GetType(const MCSymbolData &SD) {$/;"	f	class:llvm::MCELF
GetUndefVal	CodeGen/MachineSSAUpdater.cpp	/^  static unsigned GetUndefVal(MachineBasicBlock *BB,$/;"	f	class:llvm::SSAUpdaterTraits
GetUndefVal	Transforms/Utils/SSAUpdater.cpp	/^  static Value *GetUndefVal(BasicBlock *BB, SSAUpdater *Updater) {$/;"	f	class:llvm::SSAUpdaterTraits
GetUnderlyingObjCPtr	Transforms/Scalar/ObjCARC.cpp	/^static const Value *GetUnderlyingObjCPtr(const Value *V) {$/;"	f	file:
GetUnderlyingObject	Analysis/ValueTracking.cpp	/^llvm::GetUnderlyingObject(Value *V, const DataLayout *TD, unsigned MaxLookup) {$/;"	f	class:llvm
GetUnderlyingObjects	Analysis/ValueTracking.cpp	/^llvm::GetUnderlyingObjects(Value *V,$/;"	f	class:llvm
GetVBR	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^GetVBR(uint64_t Val, const unsigned char *MatcherTable, unsigned &Idx) {$/;"	f	file:
GetVLDSTAlign	Target/ARM/ARMISelDAGToDAG.cpp	/^SDValue ARMDAGToDAGISel::GetVLDSTAlign(SDValue Align, unsigned NumVecs,$/;"	f	class:ARMDAGToDAGISel
GetVal	AsmParser/LLParser.cpp	/^Value *LLParser::PerFunctionState::GetVal(const std::string &Name,$/;"	f	class:LLParser::PerFunctionState
GetVal	AsmParser/LLParser.cpp	/^Value *LLParser::PerFunctionState::GetVal(unsigned ID, Type *Ty,$/;"	f	class:LLParser::PerFunctionState
GetValue	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^      EVT GetValue() const {$/;"	f	class:llvm::ScheduleDAGSDNodes::RegDefIter
GetValueAtEndOfBlock	CodeGen/MachineSSAUpdater.cpp	/^unsigned MachineSSAUpdater::GetValueAtEndOfBlock(MachineBasicBlock *BB) {$/;"	f	class:MachineSSAUpdater
GetValueAtEndOfBlock	Transforms/Utils/SSAUpdater.cpp	/^Value *SSAUpdater::GetValueAtEndOfBlock(BasicBlock *BB) {$/;"	f	class:SSAUpdater
GetValueAtEndOfBlockInternal	CodeGen/MachineSSAUpdater.cpp	/^unsigned MachineSSAUpdater::GetValueAtEndOfBlockInternal(MachineBasicBlock *BB){$/;"	f	class:MachineSSAUpdater
GetValueAtEndOfBlockInternal	Transforms/Utils/SSAUpdater.cpp	/^Value *SSAUpdater::GetValueAtEndOfBlockInternal(BasicBlock *BB) {$/;"	f	class:SSAUpdater
GetValueEqualityComparisonCases	Transforms/Utils/SimplifyCFG.cpp	/^GetValueEqualityComparisonCases(TerminatorInst *TI,$/;"	f	class:SimplifyCFGOpt
GetValueInMiddleOfBlock	CodeGen/MachineSSAUpdater.cpp	/^unsigned MachineSSAUpdater::GetValueInMiddleOfBlock(MachineBasicBlock *BB) {$/;"	f	class:MachineSSAUpdater
GetValueInMiddleOfBlock	Transforms/Utils/SSAUpdater.cpp	/^Value *SSAUpdater::GetValueInMiddleOfBlock(BasicBlock *BB) {$/;"	f	class:SSAUpdater
GetVectorElementPointer	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDValue DAGTypeLegalizer::GetVectorElementPointer(SDValue VecPtr, EVT EltVT,$/;"	f	class:DAGTypeLegalizer
GetVisibility	MC/MCELF.cpp	/^unsigned MCELF::GetVisibility(MCSymbolData &SD) {$/;"	f	class:llvm::MCELF
GetWideRecurrence	Transforms/Scalar/IndVarSimplify.cpp	/^const SCEVAddRecExpr *WidenIV::GetWideRecurrence(Instruction *NarrowUse) {$/;"	f	class:WidenIV
GetWidenedVector	CodeGen/SelectionDAG/LegalizeTypes.h	/^  SDValue GetWidenedVector(SDValue Op) {$/;"	f	class:llvm::DAGTypeLegalizer
GetX86CpuIDAndInfo	Support/Host.cpp	/^static bool GetX86CpuIDAndInfo(unsigned value, unsigned *rEAX,$/;"	f	file:
GetX86RegNum	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  unsigned GetX86RegNum(const MCOperand &MO) const {$/;"	f	class:__anon353::X86MCCodeEmitter
GetZeroSCEV	Analysis/LoopDependenceAnalysis.cpp	/^static inline const SCEV *GetZeroSCEV(ScalarEvolution *SE) {$/;"	f	file:
GlobalAddressSDNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^GlobalAddressSDNode::GlobalAddressSDNode(unsigned Opc, DebugLoc DL,$/;"	f	class:GlobalAddressSDNode
GlobalAlias	VMCore/Globals.cpp	/^GlobalAlias::GlobalAlias(Type *Ty, LinkageTypes Link,$/;"	f	class:GlobalAlias
GlobalBaseReg	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned GlobalBaseReg;$/;"	m	class:llvm::ARMFunctionInfo
GlobalBaseReg	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    unsigned GlobalBaseReg;$/;"	m	class:__anon414::SPUDAGToDAGISel	file:
GlobalBaseReg	Target/MBlaze/MBlazeMachineFunction.h	/^  unsigned GlobalBaseReg;$/;"	m	class:llvm::MBlazeFunctionInfo
GlobalBaseReg	Target/Mips/MipsMachineFunction.h	/^  unsigned GlobalBaseReg;$/;"	m	class:llvm::MipsFunctionInfo
GlobalBaseReg	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    unsigned GlobalBaseReg;$/;"	m	class:__anon331::PPCDAGToDAGISel	file:
GlobalBaseReg	Target/PowerPC/PPCISelLowering.h	/^      GlobalBaseReg,$/;"	e	enum:llvm::PPCISD::NodeType
GlobalBaseReg	Target/Sparc/SparcMachineFunctionInfo.h	/^    unsigned GlobalBaseReg;$/;"	m	class:llvm::SparcMachineFunctionInfo
GlobalBaseReg	Target/X86/X86ISelLowering.h	/^      GlobalBaseReg,$/;"	e	enum:llvm::X86ISD::NodeType
GlobalBaseReg	Target/X86/X86MachineFunctionInfo.h	/^  unsigned GlobalBaseReg;$/;"	m	class:llvm::X86MachineFunctionInfo
GlobalBasicBlockIDs	Bitcode/Writer/ValueEnumerator.h	/^  mutable DenseMap<const BasicBlock*, unsigned> GlobalBasicBlockIDs;$/;"	m	class:llvm::ValueEnumerator
GlobalCand	CodeGen/RegAllocGreedy.cpp	/^  SmallVector<GlobalSplitCandidate, 32> GlobalCand;$/;"	m	class:__anon158::RAGreedy	file:
GlobalCleanup	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::GlobalCleanup() {$/;"	f	class:BitcodeReader
GlobalCmp	Transforms/Scalar/GlobalMerge.cpp	/^      GlobalCmp(const DataLayout *td) : TD(td) { }$/;"	f	struct:__anon567::GlobalMerge::GlobalCmp
GlobalCmp	Transforms/Scalar/GlobalMerge.cpp	/^    struct GlobalCmp {$/;"	s	class:__anon567::GlobalMerge	file:
GlobalContext	VMCore/LLVMContext.cpp	/^static ManagedStatic<LLVMContext> GlobalContext;$/;"	v	file:
GlobalDCE	Transforms/IPO/GlobalDCE.cpp	/^    GlobalDCE() : ModulePass(ID) {$/;"	f	struct:__anon588::GlobalDCE
GlobalDCE	Transforms/IPO/GlobalDCE.cpp	/^  struct GlobalDCE : public ModulePass {$/;"	s	namespace:__anon588	file:
GlobalExtensions	Transforms/IPO/PassManagerBuilder.cpp	/^   PassManagerBuilder::ExtensionFn>, 8> > GlobalExtensions;$/;"	v	file:
GlobalID	AsmParser/LLToken.h	/^    GlobalID,          \/\/ @42$/;"	e	enum:llvm::lltok::Kind
GlobalInfo	Analysis/IPA/GlobalsModRef.cpp	/^    std::map<const GlobalValue*, unsigned> GlobalInfo;$/;"	m	struct:__anon1::FunctionRecord	file:
GlobalInits	Bitcode/Reader/BitcodeReader.h	/^  std::vector<std::pair<GlobalVariable*, unsigned> > GlobalInits;$/;"	m	class:llvm::BitcodeReader
GlobalIsNeeded	Transforms/IPO/GlobalDCE.cpp	/^void GlobalDCE::GlobalIsNeeded(GlobalValue *G) {$/;"	f	class:GlobalDCE
GlobalMerge	Transforms/Scalar/GlobalMerge.cpp	/^    explicit GlobalMerge(const TargetLowering *tli = 0)$/;"	f	class:__anon567::GlobalMerge
GlobalMerge	Transforms/Scalar/GlobalMerge.cpp	/^  class GlobalMerge : public FunctionPass {$/;"	c	namespace:__anon567	file:
GlobalOffsetTableExprKind	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^enum GlobalOffsetTableExprKind {$/;"	g	file:
GlobalOpt	Transforms/IPO/GlobalOpt.cpp	/^    GlobalOpt() : ModulePass(ID) {$/;"	f	struct:__anon589::GlobalOpt
GlobalOpt	Transforms/IPO/GlobalOpt.cpp	/^  struct GlobalOpt : public ModulePass {$/;"	s	namespace:__anon589	file:
GlobalPrefix	VMCore/AsmWriter.cpp	/^  GlobalPrefix,$/;"	e	enum:PrefixType	file:
GlobalSplitCandidate	CodeGen/RegAllocGreedy.cpp	/^  struct GlobalSplitCandidate {$/;"	s	class:__anon158::RAGreedy	file:
GlobalStatus	Transforms/IPO/GlobalOpt.cpp	/^  GlobalStatus() : isCompared(false), isLoaded(false), StoredType(NotStored),$/;"	f	struct:__anon590::GlobalStatus
GlobalStatus	Transforms/IPO/GlobalOpt.cpp	/^struct GlobalStatus {$/;"	s	namespace:__anon590	file:
GlobalSymbolTable	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  SymbolTableMap GlobalSymbolTable;$/;"	m	class:llvm::RuntimeDyldImpl
GlobalToIndirectSymMap	ExecutionEngine/JIT/JITEmitter.cpp	/^    GlobalToIndirectSymMapTy GlobalToIndirectSymMap;$/;"	m	class:__anon182::JITResolverState	file:
GlobalToIndirectSymMapTy	ExecutionEngine/JIT/JITEmitter.cpp	/^    typedef JITResolverState::GlobalToIndirectSymMapTy GlobalToIndirectSymMapTy;$/;"	t	class:__anon182::JITResolver	file:
GlobalToIndirectSymMapTy	ExecutionEngine/JIT/JITEmitter.cpp	/^    typedef std::map<AssertingVH<GlobalValue>, void*> GlobalToIndirectSymMapTy;$/;"	t	class:__anon182::JITResolverState	file:
GlobalTypes	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  StringMap<DIE*> GlobalTypes;$/;"	m	class:llvm::CompileUnit
GlobalUsersSafeToSRA	Transforms/IPO/GlobalOpt.cpp	/^static bool GlobalUsersSafeToSRA(GlobalValue *GV) {$/;"	f	file:
GlobalVar	AsmParser/LLToken.h	/^    GlobalVar,         \/\/ @foo @"foo"$/;"	e	enum:llvm::lltok::Kind
GlobalVariable	VMCore/Globals.cpp	/^GlobalVariable::GlobalVariable(Module &M, Type *Ty, bool constant,$/;"	f	class:GlobalVariable
GlobalVariable	VMCore/Globals.cpp	/^GlobalVariable::GlobalVariable(Type *Ty, bool constant, LinkageTypes Link,$/;"	f	class:GlobalVariable
GlobalsModRef	Analysis/IPA/GlobalsModRef.cpp	/^    GlobalsModRef() : ModulePass(ID) {$/;"	f	class:__anon1::GlobalsModRef
GlobalsModRef	Analysis/IPA/GlobalsModRef.cpp	/^  class GlobalsModRef : public ModulePass, public AliasAnalysis {$/;"	c	namespace:__anon1	file:
GlueAllocframeStore	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^    bool GlueAllocframeStore;$/;"	m	class:__anon403::HexagonPacketizerList	file:
GlueToNewValueJump	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^    bool GlueToNewValueJump;$/;"	m	class:__anon403::HexagonPacketizerList	file:
GluedMap	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  DenseMap<SDNode*, SDNode*> GluedMap;  \/\/ Cache glue to its user$/;"	m	class:__anon87::ScheduleDAGLinearize	file:
GraphTraits	Transforms/IPO/FunctionAttrs.cpp	/^  template<> struct GraphTraits<ArgumentGraph*>$/;"	s	namespace:llvm	file:
GraphTraits	Transforms/IPO/FunctionAttrs.cpp	/^  template<> struct GraphTraits<ArgumentGraphNode*> {$/;"	s	namespace:llvm	file:
GreatestCommonDivisor	Support/APInt.cpp	/^APInt llvm::APIntOps::GreatestCommonDivisor(const APInt& API1,$/;"	f	class:llvm::APIntOps
GroupByComplexity	Analysis/ScalarEvolution.cpp	/^static void GroupByComplexity(SmallVectorImpl<const SCEV *> &Ops,$/;"	f	file:
GroupMapTy	MC/ELFObjectWriter.cpp	/^    typedef DenseMap<const MCSectionELF*, const MCSymbol*> GroupMapTy;$/;"	t	class:__anon225::ELFObjectWriter	file:
GroupNodeIndices	CodeGen/AggressiveAntiDepBreaker.h	/^    std::vector<unsigned> GroupNodeIndices;$/;"	m	class:llvm::AggressiveAntiDepState
GroupNodes	CodeGen/AggressiveAntiDepBreaker.h	/^    std::vector<unsigned> GroupNodes;$/;"	m	class:llvm::AggressiveAntiDepState
Grow	Support/SmallPtrSet.cpp	/^void SmallPtrSetImpl::Grow(unsigned NewSize) {$/;"	f	class:SmallPtrSetImpl
GrowBlock	ExecutionEngine/JIT/JITMemoryManager.cpp	/^void FreeRangeHeader::GrowBlock(uintptr_t NewSize) {$/;"	f	class:FreeRangeHeader
GrowHashTable	Support/FoldingSet.cpp	/^void FoldingSetImpl::GrowHashTable() {$/;"	f	class:FoldingSetImpl
H	ExecutionEngine/Interpreter/Interpreter.h	/^  AllocaHolder *H;$/;"	m	class:llvm::AllocaHolderHandle
HADD	Target/X86/X86ISelLowering.h	/^      HADD,$/;"	e	enum:llvm::X86ISD::NodeType
HANDLE_ATTR	Target/CppBackend/CPPBackend.cpp	481;"	d	file:
HANDLE_ATTR	Target/CppBackend/CPPBackend.cpp	510;"	d	file:
HANDLE_INST	Analysis/InstCount.cpp	30;"	d	file:
HANDLE_INST	Analysis/InstCount.cpp	43;"	d	file:
HANDLE_INST	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	968;"	d	file:
HANDLE_INST	VMCore/Core.cpp	715;"	d	file:
HANDLE_INST	VMCore/Core.cpp	717;"	d	file:
HANDLE_INST	VMCore/Core.cpp	724;"	d	file:
HANDLE_INST	VMCore/Core.cpp	726;"	d	file:
HASH_THRESHHOLD	Transforms/Instrumentation/PathProfiling.cpp	68;"	d	file:
HAVE_EHTABLE_SUPPORT	ExecutionEngine/JIT/JIT.cpp	73;"	d	file:
HAVE_EHTABLE_SUPPORT	ExecutionEngine/JIT/JIT.cpp	75;"	d	file:
HAVE___DSO_HANDLE	ExecutionEngine/JIT/JIT.cpp	50;"	d	file:
HERE	Support/regcomp.c	135;"	d	file:
HEXAGONASMPRINTER_H	Target/Hexagon/HexagonAsmPrinter.h	15;"	d
HEXAGONASMPRINTER_H	Target/Hexagon/HexagonMachineScheduler.h	15;"	d
HEXAGONBASEINFO_H	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	18;"	d
HEXAGONINSTPRINTER_H	Target/Hexagon/InstPrinter/HexagonInstPrinter.h	15;"	d
HEXAGONMCINST_H	Target/Hexagon/HexagonMCInst.h	15;"	d
HEXAGONMCTARGETDESC_H	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.h	15;"	d
HEXAGON_FRAMEINFO_H	Target/Hexagon/HexagonFrameLowering.h	11;"	d
HEXAGON_INSTR_SIZE	Target/Hexagon/Hexagon.h	72;"	d
HEXAGON_LRFP_SIZE	Target/Hexagon/Hexagon.h	69;"	d
HEXAGON_PACKET_SIZE	Target/Hexagon/Hexagon.h	75;"	d
HEXAGON_RESERVED_REG_1	Target/Hexagon/HexagonRegisterInfo.h	36;"	d
HEXAGON_RESERVED_REG_2	Target/Hexagon/HexagonRegisterInfo.h	37;"	d
HI	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    HI,            \/\/ Unsigned higher            Greater than, or unordered$/;"	e	enum:llvm::ARMCC::CondCodes
HMEditor	CodeGen/LiveIntervalAnalysis.cpp	/^  HMEditor(LiveIntervals& LIS, const MachineRegisterInfo& MRI,$/;"	f	class:LiveIntervals::HMEditor
HMEditor	CodeGen/LiveIntervalAnalysis.cpp	/^class LiveIntervals::HMEditor {$/;"	c	class:LiveIntervals	file:
HS	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    HS,            \/\/ Carry set                  >, ==, or unordered$/;"	e	enum:llvm::ARMCC::CondCodes
HSUB	Target/X86/X86ISelLowering.h	/^      HSUB,$/;"	e	enum:llvm::X86ISD::NodeType
HUerrBound	Support/APFloat.cpp	/^HUerrBound(bool inexactMultiply, unsigned int HUerr1, unsigned int HUerr2)$/;"	f	file:
HWMultIntr	Target/MSP430/MSP430ISelLowering.cpp	/^  HWMultIntr,$/;"	e	enum:__anon389	file:
HWMultNoIntr	Target/MSP430/MSP430ISelLowering.cpp	/^  HWMultNoIntr$/;"	e	enum:__anon389	file:
HWMultUseMode	Target/MSP430/MSP430ISelLowering.cpp	/^} HWMultUseMode;$/;"	t	typeref:enum:__anon389	file:
HadDynamicAccess	Transforms/Scalar/ScalarReplAggregates.cpp	/^  bool HadDynamicAccess;$/;"	m	class:__anon522::ConvertToScalarInfo	file:
HadNonMemTransferAccess	Transforms/Scalar/ScalarReplAggregates.cpp	/^  bool HadNonMemTransferAccess;$/;"	m	class:__anon522::ConvertToScalarInfo	file:
HalfTy	VMCore/LLVMContextImpl.h	/^  Type VoidTy, LabelTy, HalfTy, FloatTy, DoubleTy, MetadataTy;$/;"	m	class:llvm::LLVMContextImpl
Handle	Support/Windows/Windows.h	/^  handle_type Handle;$/;"	m	class:ScopedHandle
HandleByVal	CodeGen/CallingConvLower.cpp	/^void CCState::HandleByVal(unsigned ValNo, MVT ValVT,$/;"	f	class:CCState
HandleByVal	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::HandleByVal($/;"	f	class:ARMTargetLowering
HandleByVal	Target/Hexagon/HexagonCallingConvLower.cpp	/^void Hexagon_CCState::HandleByVal(unsigned ValNo, EVT ValVT,$/;"	f	class:Hexagon_CCState
HandleByValArgument	Transforms/Utils/InlineFunction.cpp	/^static Value *HandleByValArgument(Value *Arg, Instruction *TheCall,$/;"	f	file:
HandleCallsInBlockInlinedThroughInvoke	Transforms/Utils/InlineFunction.cpp	/^static bool HandleCallsInBlockInlinedThroughInvoke(BasicBlock *BB,$/;"	f	file:
HandleCrash	Support/CrashRecoveryContext.cpp	/^  void HandleCrash() {$/;"	f	struct:__anon255::CrashRecoveryContextImpl
HandleCrash	Support/CrashRecoveryContext.cpp	/^void CrashRecoveryContext::HandleCrash() {$/;"	f	class:CrashRecoveryContext
HandleFloatingPointIV	Transforms/Scalar/IndVarSimplify.cpp	/^void IndVarSimplify::HandleFloatingPointIV(Loop *L, PHINode *PN) {$/;"	f	class:IndVarSimplify
HandleFree	Transforms/Scalar/DeadStoreElimination.cpp	/^bool DSE::HandleFree(CallInst *F) {$/;"	f	class:DSE
HandleIfExpect	Transforms/Utils/LowerExpectIntrinsic.cpp	/^bool LowerExpectIntrinsic::HandleIfExpect(BranchInst *BI) {$/;"	f	class:LowerExpectIntrinsic
HandleInlinedInvoke	Transforms/Utils/InlineFunction.cpp	/^static void HandleInlinedInvoke(InvokeInst *II, BasicBlock *FirstNewBlock,$/;"	f	file:
HandleLastUse	CodeGen/AggressiveAntiDepBreaker.cpp	/^void AggressiveAntiDepBreaker::HandleLastUse(unsigned Reg, unsigned KillIdx,$/;"	f	class:AggressiveAntiDepBreaker
HandleMacroEntry	MC/MCParser/AsmParser.cpp	/^bool AsmParser::HandleMacroEntry(StringRef Name, SMLoc NameLoc,$/;"	f	class:AsmParser
HandleMacroExit	MC/MCParser/AsmParser.cpp	/^void AsmParser::HandleMacroExit() {$/;"	f	class:AsmParser
HandleMergeInputChains	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^HandleMergeInputChains(SmallVectorImpl<SDNode*> &ChainNodesMatched,$/;"	f	file:
HandlePHINodesInSuccessorBlocks	CodeGen/SelectionDAG/FastISel.cpp	/^bool FastISel::HandlePHINodesInSuccessorBlocks(const BasicBlock *LLVMBB) {$/;"	f	class:FastISel
HandlePHINodesInSuccessorBlocks	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::HandlePHINodesInSuccessorBlocks(const BasicBlock *LLVMBB) {$/;"	f	class:SelectionDAGBuilder
HandlePhysRegDef	CodeGen/LiveVariables.cpp	/^void LiveVariables::HandlePhysRegDef(unsigned Reg, MachineInstr *MI,$/;"	f	class:LiveVariables
HandlePhysRegKill	CodeGen/LiveVariables.cpp	/^bool LiveVariables::HandlePhysRegKill(unsigned Reg, MachineInstr *MI) {$/;"	f	class:LiveVariables
HandlePhysRegUse	CodeGen/LiveVariables.cpp	/^void LiveVariables::HandlePhysRegUse(unsigned Reg, MachineInstr *MI) {$/;"	f	class:LiveVariables
HandlePrefixedOrGroupedOption	Support/CommandLine.cpp	/^static Option *HandlePrefixedOrGroupedOption(StringRef &Arg, StringRef &Value,$/;"	f	file:
HandleRegMask	CodeGen/LiveVariables.cpp	/^void LiveVariables::HandleRegMask(const MachineOperand &MO) {$/;"	f	class:LiveVariables
HandleSwitchExpect	Transforms/Utils/LowerExpectIntrinsic.cpp	/^bool LowerExpectIntrinsic::HandleSwitchExpect(SwitchInst *SI) {$/;"	f	class:LowerExpectIntrinsic
HandleVRSaveUpdate	Target/PowerPC/PPCFrameLowering.cpp	/^static void HandleVRSaveUpdate(MachineInstr *MI, const TargetInstrInfo &TII) {$/;"	f	file:
HandleVirtRegDef	CodeGen/LiveVariables.cpp	/^void LiveVariables::HandleVirtRegDef(unsigned Reg, MachineInstr *MI) {$/;"	f	class:LiveVariables
HandleVirtRegUse	CodeGen/LiveVariables.cpp	/^void LiveVariables::HandleVirtRegUse(unsigned reg, MachineBasicBlock *MBB,$/;"	f	class:LiveVariables
Has3DNow0F0FOpcode	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Has3DNow0F0FOpcode = 1U << 7,$/;"	e	enum:llvm::X86II::__anon350
Has64BitSupport	Target/PowerPC/PPCSubtarget.h	/^  bool Has64BitSupport;$/;"	m	class:llvm::PPCSubtarget
HasAES	Target/X86/X86Subtarget.h	/^  bool HasAES;$/;"	m	class:llvm::X86Subtarget
HasAddOverflow	Transforms/InstCombine/InstCombineCompares.cpp	/^static bool HasAddOverflow(ConstantInt *Result,$/;"	f	file:
HasAltivec	Target/PowerPC/PPCSubtarget.h	/^  bool HasAltivec;$/;"	m	class:llvm::PPCSubtarget
HasAnalyzableTerminator	CodeGen/CodePlacementOpt.cpp	/^bool CodePlacementOpt::HasAnalyzableTerminator(MachineBasicBlock *MBB) {$/;"	f	class:CodePlacementOpt
HasBMI	Target/X86/X86Subtarget.h	/^  bool HasBMI;$/;"	m	class:llvm::X86Subtarget
HasBMI2	Target/X86/X86Subtarget.h	/^  bool HasBMI2;$/;"	m	class:llvm::X86Subtarget
HasBarrel	Target/MBlaze/MBlazeSubtarget.h	/^  bool HasBarrel;$/;"	m	class:llvm::MBlazeSubtarget
HasBitCount	Target/Mips/MipsSubtarget.h	/^  bool HasBitCount;$/;"	m	class:llvm::MipsSubtarget
HasBranchWeights	Transforms/Utils/SimplifyCFG.cpp	/^static inline bool HasBranchWeights(const Instruction* I) {$/;"	f	file:
HasCMov	Target/X86/X86Subtarget.h	/^  bool HasCMov;$/;"	m	class:llvm::X86Subtarget
HasCTRSet	Target/PowerPC/PPCHazardRecognizers.h	/^  bool HasCTRSet;$/;"	m	class:llvm::PPCHazardRecognizer970
HasCalls	CodeGen/MachineTraceMetrics.h	/^    bool HasCalls;$/;"	m	struct:llvm::MachineTraceMetrics::FixedBlockInfo
HasChainNodesMatched	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  bool HasChainNodesMatched, HasGlueResultNodesMatched;$/;"	m	struct:__anon71::MatchScope	file:
HasChildren	DebugInfo/DWARFAbbreviationDeclaration.h	/^  bool HasChildren;$/;"	m	class:llvm::DWARFAbbreviationDeclaration
HasClobberLR	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  bool HasClobberLR;$/;"	m	class:llvm::HexagonMachineFunctionInfo
HasCmpxchg16b	Target/X86/X86Subtarget.h	/^  bool HasCmpxchg16b;$/;"	m	class:llvm::X86Subtarget
HasCondMov	Target/Mips/MipsSubtarget.h	/^  bool HasCondMov;$/;"	m	class:llvm::MipsSubtarget
HasConditionalBranch	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^static bool HasConditionalBranch(const MCInst &MI) {$/;"	f	file:
HasD16	Target/ARM/ARMSubtarget.h	/^  bool HasD16;$/;"	m	class:llvm::ARMSubtarget
HasDSP	Target/Mips/MipsSubtarget.h	/^  bool HasDSP, HasDSPR2;$/;"	m	class:llvm::MipsSubtarget
HasDSPR2	Target/Mips/MipsSubtarget.h	/^  bool HasDSP, HasDSPR2;$/;"	m	class:llvm::MipsSubtarget
HasDataBarrier	Target/ARM/ARMSubtarget.h	/^  bool HasDataBarrier;$/;"	m	class:llvm::ARMSubtarget
HasDiv	Target/MBlaze/MBlazeSubtarget.h	/^  bool HasDiv;$/;"	m	class:llvm::MBlazeSubtarget
HasDivModLibcall	Target/TargetMachine.cpp	/^  bool HasDivModLibcall;$/;"	m	namespace:llvm	file:
HasDomTree	Transforms/Scalar/ScalarReplAggregates.cpp	/^    bool HasDomTree;$/;"	m	struct:__anon521::SROA	file:
HasDynamicAlloca	Analysis/InlineCost.cpp	/^  bool HasDynamicAlloca;$/;"	m	class:__anon28::CallAnalyzer	file:
HasDynamicInitializer	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::HasDynamicInitializer(GlobalVariable *G) {$/;"	f	class:AddressSanitizer
HasError	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  bool HasError;$/;"	m	class:llvm::RuntimeDyldImpl
HasF16C	Target/X86/X86Subtarget.h	/^  bool HasF16C;$/;"	m	class:llvm::X86Subtarget
HasFMA	Target/X86/X86Subtarget.h	/^  bool HasFMA;$/;"	m	class:llvm::X86Subtarget
HasFMA4	Target/X86/X86Subtarget.h	/^  bool HasFMA4;$/;"	m	class:llvm::X86Subtarget
HasFP16	Target/ARM/ARMSubtarget.h	/^  bool HasFP16;$/;"	m	class:llvm::ARMSubtarget
HasFPU	Target/MBlaze/MBlazeSubtarget.h	/^  bool HasFPU;$/;"	m	class:llvm::MBlazeSubtarget
HasFSGSBase	Target/X86/X86Subtarget.h	/^  bool HasFSGSBase;$/;"	m	class:llvm::X86Subtarget
HasFSQRT	Target/PowerPC/PPCSubtarget.h	/^  bool HasFSQRT;$/;"	m	class:llvm::PPCSubtarget
HasFallThrough	CodeGen/IfConversion.cpp	/^      bool HasFallThrough  : 1;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
HasFallthrough	CodeGen/CodePlacementOpt.cpp	/^bool CodePlacementOpt::HasFallthrough(MachineBasicBlock *MBB) {$/;"	f	class:CodePlacementOpt
HasFarJump	Target/ARM/ARMConstantIslandPass.cpp	/^    bool HasFarJump;$/;"	m	class:__anon310::ARMConstantIslands	file:
HasFastCall	Target/PowerPC/PPCMachineFunctionInfo.h	/^  bool HasFastCall;$/;"	m	class:llvm::PPCFunctionInfo
HasFastExitPath	CodeGen/PrologEpilogInserter.h	/^    bool HasFastExitPath;$/;"	m	class:llvm::PEI
HasFormulaWithSameRegs	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool LSRUse::HasFormulaWithSameRegs(const Formula &F) const {$/;"	f	class:LSRUse
HasGlobalAliases	Transforms/IPO/MergeFunctions.cpp	/^  bool HasGlobalAliases;$/;"	m	class:__anon598::MergeFunctions	file:
HasGlueResultNodesMatched	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  bool HasChainNodesMatched, HasGlueResultNodesMatched;$/;"	m	struct:__anon71::MatchScope	file:
HasHardwareDivide	Target/ARM/ARMSubtarget.h	/^  bool HasHardwareDivide;$/;"	m	class:llvm::ARMSubtarget
HasHardwareDivideInARM	Target/ARM/ARMSubtarget.h	/^  bool HasHardwareDivideInARM;$/;"	m	class:llvm::ARMSubtarget
HasHighOperandLatency	CodeGen/MachineLICM.cpp	/^bool MachineLICM::HasHighOperandLatency(MachineInstr &MI,$/;"	f	class:MachineLICM
HasISEL	Target/PowerPC/PPCSubtarget.h	/^  bool HasISEL;$/;"	m	class:llvm::PPCSubtarget
HasITBlocks	Target/ARM/ARMMachineFunctionInfo.h	/^  bool HasITBlocks;$/;"	m	class:llvm::ARMFunctionInfo
HasImplicitCPSRDef	Target/ARM/Thumb2SizeReduction.cpp	/^static bool HasImplicitCPSRDef(const MCInstrDesc &MCID) {$/;"	f	file:
HasItin	Target/MBlaze/MBlazeSubtarget.h	/^  bool HasItin;$/;"	m	class:llvm::MBlazeSubtarget
HasLZCNT	Target/X86/X86Subtarget.h	/^  bool HasLZCNT;$/;"	m	class:llvm::X86Subtarget
HasLane	Target/ARM/ARMBaseInstrInfo.cpp	/^  bool HasLane;        \/\/ True if instruction has an extra "lane" operand.$/;"	m	struct:ARM_MLxEntry	file:
HasLazyResolverStubs	Target/PowerPC/PPCSubtarget.h	/^  bool HasLazyResolverStubs;$/;"	m	class:llvm::PPCSubtarget
HasLoadArgs	Target/MBlaze/MBlazeMachineFunction.h	/^  bool HasLoadArgs;$/;"	m	class:llvm::MBlazeFunctionInfo
HasLongBranch	Target/Mips/MipsLongBranch.cpp	/^    bool HasLongBranch;$/;"	m	struct:__anon437::MBBInfo	file:
HasLoopPHIUse	CodeGen/MachineLICM.cpp	/^bool MachineLICM::HasLoopPHIUse(const MachineInstr *MI) const {$/;"	f	class:MachineLICM
HasMFOCRF	Target/PowerPC/PPCSubtarget.h	/^  bool HasMFOCRF;$/;"	m	class:llvm::PPCSubtarget
HasMOVBE	Target/X86/X86Subtarget.h	/^  bool HasMOVBE;$/;"	m	class:llvm::X86Subtarget
HasMPExtension	Target/ARM/ARMSubtarget.h	/^  bool HasMPExtension;$/;"	m	class:llvm::ARMSubtarget
HasMatchingLo	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^static bool HasMatchingLo(const MCAssembler &Asm, RelLsIter I, RelLsIter Last) {$/;"	f	file:
HasMinMax	Target/Mips/MipsSubtarget.h	/^  bool HasMinMax;$/;"	m	class:llvm::MipsSubtarget
HasMips64	Target/Mips/MipsISelLowering.h	/^    bool HasMips64, IsN64, IsO32;$/;"	m	class:llvm::MipsTargetLowering
HasMul	Target/MBlaze/MBlazeSubtarget.h	/^  bool HasMul;$/;"	m	class:llvm::MBlazeSubtarget
HasMul64	Target/MBlaze/MBlazeSubtarget.h	/^  bool HasMul64;$/;"	m	class:llvm::MBlazeSubtarget
HasMulDivAdd	Target/Mips/MipsSubtarget.h	/^  bool HasMulDivAdd;$/;"	m	class:llvm::MipsSubtarget
HasMultipleAccessingFunctions	Transforms/IPO/GlobalOpt.cpp	/^  bool HasMultipleAccessingFunctions;$/;"	m	struct:__anon590::GlobalStatus	file:
HasNEON	Target/ARM/ARMSubtarget.h	/^  bool HasNEON;$/;"	m	class:llvm::ARMSubtarget
HasNestArgument	Target/X86/X86FrameLowering.cpp	/^HasNestArgument(const MachineFunction *MF) {$/;"	f	file:
HasNoSignedComparisonUses	Target/X86/X86ISelDAGToDAG.cpp	/^static bool HasNoSignedComparisonUses(SDNode *N) {$/;"	f	file:
HasNonInstructionUser	Transforms/IPO/GlobalOpt.cpp	/^  bool HasNonInstructionUser;$/;"	m	struct:__anon590::GlobalStatus	file:
HasOtherRegSequenceUses	CodeGen/TwoAddressInstructionPass.cpp	/^static bool HasOtherRegSequenceUses(unsigned Reg, MachineInstr *RegSeq,$/;"	f	file:
HasPCLMUL	Target/X86/X86Subtarget.h	/^  bool HasPCLMUL;$/;"	m	class:llvm::X86Subtarget
HasPHIUser	Transforms/IPO/GlobalOpt.cpp	/^  bool HasPHIUser;$/;"	m	struct:__anon590::GlobalStatus	file:
HasPOPCNT	Target/X86/X86Subtarget.h	/^  bool HasPOPCNT;$/;"	m	class:llvm::X86Subtarget
HasPadding	Transforms/Scalar/ScalarReplAggregates.cpp	/^static bool HasPadding(Type *Ty, const DataLayout &TD) {$/;"	f	file:
HasPatCmp	Target/MBlaze/MBlazeSubtarget.h	/^  bool HasPatCmp;$/;"	m	class:llvm::MBlazeSubtarget
HasRAS	Target/ARM/ARMSubtarget.h	/^  bool HasRAS;$/;"	m	class:llvm::ARMSubtarget
HasRDRAND	Target/X86/X86Subtarget.h	/^  bool HasRDRAND;$/;"	m	class:llvm::X86Subtarget
HasReadyFilter	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^    HasReadyFilter = false$/;"	e	enum:__anon77::bu_ls_rr_sort::__anon78	file:
HasReadyFilter	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^    HasReadyFilter = false$/;"	e	enum:__anon77::hybrid_ls_rr_sort::__anon80	file:
HasReadyFilter	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^    HasReadyFilter = false$/;"	e	enum:__anon77::ilp_ls_rr_sort::__anon81	file:
HasReadyFilter	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^    HasReadyFilter = false$/;"	e	enum:__anon77::src_ls_rr_sort::__anon79	file:
HasSEInReg	Target/Mips/MipsSubtarget.h	/^  bool HasSEInReg;$/;"	m	class:llvm::MipsSubtarget
HasSSE4A	Target/X86/X86Subtarget.h	/^  bool HasSSE4A;$/;"	m	class:llvm::X86Subtarget
HasSTFIWX	Target/PowerPC/PPCSubtarget.h	/^  bool HasSTFIWX;$/;"	m	class:llvm::PPCSubtarget
HasSameSymbol	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^static bool HasSameSymbol(const RelEntry &R0, const RelEntry &R1) {$/;"	f	file:
HasSameValue	Analysis/ScalarEvolution.cpp	/^static bool HasSameValue(const SCEV *A, const SCEV *B) {$/;"	f	file:
HasSemantics	MC/MCDisassembler/EDDisassembler.h	/^  bool HasSemantics;$/;"	m	struct:llvm::EDDisassembler
HasSlowDivide	Target/X86/X86Subtarget.h	/^  bool HasSlowDivide;$/;"	m	class:llvm::X86Subtarget
HasSqrt	Target/MBlaze/MBlazeSubtarget.h	/^  bool HasSqrt;$/;"	m	class:llvm::MBlazeSubtarget
HasStackFrame	Target/ARM/ARMMachineFunctionInfo.h	/^  bool HasStackFrame;$/;"	m	class:llvm::ARMFunctionInfo
HasStoreVarArgs	Target/MBlaze/MBlazeMachineFunction.h	/^  bool HasStoreVarArgs;$/;"	m	class:llvm::MBlazeFunctionInfo
HasSubOverflow	Transforms/InstCombine/InstCombineCompares.cpp	/^static bool HasSubOverflow(ConstantInt *Result,$/;"	f	file:
HasSwap	Target/Mips/MipsSubtarget.h	/^  bool HasSwap;$/;"	m	class:llvm::MipsSubtarget
HasT2ExtractPack	Target/ARM/ARMSubtarget.h	/^  bool HasT2ExtractPack;$/;"	m	class:llvm::ARMSubtarget
HasTailCall	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  bool HasTailCall;$/;"	m	class:llvm::SelectionDAGBuilder
HasThumb2	Target/ARM/ARMSubtarget.h	/^  bool HasThumb2;$/;"	m	class:llvm::ARMSubtarget
HasV4TOps	Target/ARM/ARMSubtarget.h	/^  bool HasV4TOps;$/;"	m	class:llvm::ARMSubtarget
HasV5TEOps	Target/ARM/ARMSubtarget.h	/^  bool HasV5TEOps;$/;"	m	class:llvm::ARMSubtarget
HasV5TOps	Target/ARM/ARMSubtarget.h	/^  bool HasV5TOps;$/;"	m	class:llvm::ARMSubtarget
HasV6Ops	Target/ARM/ARMSubtarget.h	/^  bool HasV6Ops;$/;"	m	class:llvm::ARMSubtarget
HasV6T2Ops	Target/ARM/ARMSubtarget.h	/^  bool HasV6T2Ops;$/;"	m	class:llvm::ARMSubtarget
HasV7Ops	Target/ARM/ARMSubtarget.h	/^  bool HasV7Ops;$/;"	m	class:llvm::ARMSubtarget
HasVFPU	Target/Mips/MipsSubtarget.h	/^  bool HasVFPU;$/;"	m	class:llvm::MipsSubtarget
HasVFPv2	Target/ARM/ARMSubtarget.h	/^  bool HasVFPv2;$/;"	m	class:llvm::ARMSubtarget
HasVFPv3	Target/ARM/ARMSubtarget.h	/^  bool HasVFPv3;$/;"	m	class:llvm::ARMSubtarget
HasVFPv4	Target/ARM/ARMSubtarget.h	/^  bool HasVFPv4;$/;"	m	class:llvm::ARMSubtarget
HasVMLxForwarding	Target/ARM/ARMSubtarget.h	/^  bool HasVMLxForwarding;$/;"	m	class:llvm::ARMSubtarget
HasValidInstrDepths	CodeGen/MachineTraceMetrics.h	/^    bool HasValidInstrDepths;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
HasValidInstrHeights	CodeGen/MachineTraceMetrics.h	/^    bool HasValidInstrHeights;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
HasValueForBlock	CodeGen/MachineSSAUpdater.cpp	/^bool MachineSSAUpdater::HasValueForBlock(MachineBasicBlock *BB) const {$/;"	f	class:MachineSSAUpdater
HasValueForBlock	Transforms/Utils/SSAUpdater.cpp	/^bool SSAUpdater::HasValueForBlock(BasicBlock *BB) const {$/;"	f	class:SSAUpdater
HasVectorUAMem	Target/X86/X86Subtarget.h	/^  bool HasVectorUAMem;$/;"	m	class:llvm::X86Subtarget
HasX86_64	Target/X86/X86Subtarget.h	/^  bool HasX86_64;$/;"	m	class:llvm::X86Subtarget
HasXOP	Target/X86/X86Subtarget.h	/^  bool HasXOP;$/;"	m	class:llvm::X86Subtarget
Hash	CodeGen/BranchFolding.h	/^      unsigned Hash;$/;"	m	class:llvm::BranchFolder::MergePotentialsElt
Hash	Transforms/IPO/MergeFunctions.cpp	/^  unsigned Hash;$/;"	m	class:__anon596::ComparableFunction	file:
HashDJB	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  static uint32_t HashDJB (StringRef Str) {$/;"	f	class:llvm::DwarfAccelTable
HashData	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    HashData(StringRef S, ArrayRef<HashDataContents*> Data)$/;"	f	struct:llvm::DwarfAccelTable::HashData
HashData	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  struct HashData {$/;"	s	class:llvm::DwarfAccelTable
HashDataContents	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    HashDataContents(DIE *D, char Flags) :$/;"	f	struct:llvm::DwarfAccelTable::HashDataContents
HashDataContents	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  struct HashDataContents {$/;"	s	class:llvm::DwarfAccelTable
HashEndOfMBB	CodeGen/BranchFolding.cpp	/^static unsigned HashEndOfMBB(const MachineBasicBlock *MBB) {$/;"	f	file:
HashFunctionType	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  enum HashFunctionType {$/;"	g	class:llvm::DwarfAccelTable
HashList	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  typedef std::vector<HashData*> HashList;$/;"	t	class:llvm::DwarfAccelTable
HashMachineInstr	CodeGen/BranchFolding.cpp	/^static unsigned HashMachineInstr(const MachineInstr *MI) {$/;"	f	file:
HashValue	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    uint32_t HashValue;$/;"	m	struct:llvm::DwarfAccelTable::HashData
Hashes	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  HashList Hashes;$/;"	m	class:llvm::DwarfAccelTable
HazardRec	CodeGen/MachineScheduler.cpp	/^    ScheduleHazardRecognizer *HazardRec;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
HazardRec	CodeGen/PostRASchedulerList.cpp	/^    ScheduleHazardRecognizer *HazardRec;$/;"	m	class:__anon102::SchedulePostRATDList	file:
HazardRec	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  ScheduleHazardRecognizer *HazardRec;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
HazardRec	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^  ScheduleHazardRecognizer *HazardRec;$/;"	m	class:__anon84::ScheduleDAGVLIW	file:
HazardRec	Target/Hexagon/HexagonMachineScheduler.h	/^    ScheduleHazardRecognizer *HazardRec;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
Head	CodeGen/EarlyIfConversion.cpp	/^  MachineBasicBlock *Head;$/;"	m	class:__anon91::SSAIfConv	file:
Head	CodeGen/MachineTraceMetrics.h	/^    unsigned Head;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
Head	CodeGen/ShadowStackGC.cpp	/^    GlobalVariable *Head;$/;"	m	class:__anon148::ShadowStackGC	file:
Header	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  TableHeader Header;$/;"	m	class:llvm::DwarfAccelTable
Header	DebugInfo/DWARFDebugArangeSet.h	/^  Header Header;$/;"	m	class:llvm::DWARFDebugArangeSet
Header	DebugInfo/DWARFDebugArangeSet.h	/^  struct Header {$/;"	s	class:llvm::DWARFDebugArangeSet
Header	MC/WinCOFFObjectWriter.cpp	/^  COFF::header Header;$/;"	m	class:__anon222::WinCOFFObjectWriter	file:
Header	MC/WinCOFFObjectWriter.cpp	/^  COFF::section Header;$/;"	m	class:__anon222::COFFSection	file:
HeaderBB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *HeaderBB;$/;"	m	struct:llvm::SelectionDAGBuilder::JumpTableHeader
HeaderData	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  TableHeaderData HeaderData;$/;"	m	class:llvm::DwarfAccelTable
Height	CodeGen/MachineTraceMetrics.h	/^    unsigned Height;$/;"	m	struct:llvm::MachineTraceMetrics::InstrCycles
Height	CodeGen/MachineTraceMetrics.h	/^    unsigned Height;$/;"	m	struct:llvm::MachineTraceMetrics::LiveInReg
Hello	Transforms/Hello/Hello.cpp	/^    Hello() : FunctionPass(ID) {}$/;"	f	struct:__anon484::Hello
Hello	Transforms/Hello/Hello.cpp	/^  struct Hello : public FunctionPass {$/;"	s	namespace:__anon484	file:
Hello2	Transforms/Hello/Hello.cpp	/^    Hello2() : FunctionPass(ID) {}$/;"	f	struct:__anon485::Hello2
Hello2	Transforms/Hello/Hello.cpp	/^  struct Hello2 : public FunctionPass {$/;"	s	namespace:__anon485	file:
Help	MC/SubtargetFeature.cpp	/^static void Help(const SubtargetFeatureKV *CPUTable, size_t CPUTableSize,$/;"	f	file:
HelpPrinter	Support/CommandLine.cpp	/^  explicit HelpPrinter(bool showHidden) : ShowHidden(showHidden) {$/;"	f	class:__anon247::HelpPrinter
HelpPrinter	Support/CommandLine.cpp	/^class HelpPrinter {$/;"	c	namespace:__anon247	file:
HexDigit	Target/Mangler.cpp	/^static char HexDigit(int V) {$/;"	f	file:
HexIntToVal	AsmParser/LLLexer.cpp	/^uint64_t LLLexer::HexIntToVal(const char *Buffer, const char *End) {$/;"	f	class:LLLexer
HexToIntPair	AsmParser/LLLexer.cpp	/^void LLLexer::HexToIntPair(const char *Buffer, const char *End,$/;"	f	class:LLLexer
Hexagon	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  namespace Hexagon {$/;"	n	namespace:llvm
HexagonArchEnum	Target/Hexagon/HexagonSubtarget.h	/^  enum HexagonArchEnum {$/;"	g	class:llvm::HexagonSubtarget
HexagonArchVersion	Target/Hexagon/HexagonSubtarget.h	/^  HexagonArchEnum HexagonArchVersion;$/;"	m	class:llvm::HexagonSubtarget
HexagonAsmPrinter	Target/Hexagon/HexagonAsmPrinter.h	/^    explicit HexagonAsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:llvm::HexagonAsmPrinter
HexagonAsmPrinter	Target/Hexagon/HexagonAsmPrinter.h	/^  class HexagonAsmPrinter : public AsmPrinter {$/;"	c	namespace:llvm
HexagonCFGOptimizer	Target/Hexagon/HexagonCFGOptimizer.cpp	/^  HexagonCFGOptimizer(HexagonTargetMachine& TM) : MachineFunctionPass(ID),$/;"	f	class:__anon402::HexagonCFGOptimizer
HexagonCFGOptimizer	Target/Hexagon/HexagonCFGOptimizer.cpp	/^class HexagonCFGOptimizer : public MachineFunctionPass {$/;"	c	namespace:__anon402	file:
HexagonDAGToDAGISel	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^  explicit HexagonDAGToDAGISel(HexagonTargetMachine &targetmachine)$/;"	f	class:__anon400::HexagonDAGToDAGISel
HexagonDAGToDAGISel	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^class HexagonDAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon400	file:
HexagonExpandPredSpillCode	Target/Hexagon/HexagonExpandPredSpillCode.cpp	/^    HexagonExpandPredSpillCode(HexagonTargetMachine& TM) :$/;"	f	class:__anon401::HexagonExpandPredSpillCode
HexagonExpandPredSpillCode	Target/Hexagon/HexagonExpandPredSpillCode.cpp	/^class HexagonExpandPredSpillCode : public MachineFunctionPass {$/;"	c	namespace:__anon401	file:
HexagonFixupHwLoops	Target/Hexagon/HexagonHardwareLoops.cpp	/^    HexagonFixupHwLoops() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon408::HexagonFixupHwLoops
HexagonFixupHwLoops	Target/Hexagon/HexagonHardwareLoops.cpp	/^  struct HexagonFixupHwLoops : public MachineFunctionPass {$/;"	s	namespace:__anon408	file:
HexagonFrameLowering	Target/Hexagon/HexagonFrameLowering.h	/^  explicit HexagonFrameLowering(const HexagonSubtarget &sti)$/;"	f	class:llvm::HexagonFrameLowering
HexagonFrameLowering	Target/Hexagon/HexagonFrameLowering.h	/^class HexagonFrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
HexagonHardwareLoops	Target/Hexagon/HexagonHardwareLoops.cpp	/^    HexagonHardwareLoops() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon408::HexagonHardwareLoops
HexagonHardwareLoops	Target/Hexagon/HexagonHardwareLoops.cpp	/^  struct HexagonHardwareLoops : public MachineFunctionPass {$/;"	s	namespace:__anon408	file:
HexagonII	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^namespace HexagonII {$/;"	n	namespace:llvm
HexagonINSTRUCTIONINFO_H	Target/Hexagon/HexagonInstrInfo.h	15;"	d
HexagonISD	Target/Hexagon/HexagonISelLowering.h	/^  namespace HexagonISD {$/;"	n	namespace:llvm
HexagonInstPrinter	Target/Hexagon/InstPrinter/HexagonInstPrinter.h	/^    explicit HexagonInstPrinter(const MCAsmInfo &MAI,$/;"	f	class:llvm::HexagonInstPrinter
HexagonInstPrinter	Target/Hexagon/InstPrinter/HexagonInstPrinter.h	/^  class HexagonInstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
HexagonInstrInfo	Target/Hexagon/HexagonInstrInfo.cpp	/^HexagonInstrInfo::HexagonInstrInfo(HexagonSubtarget &ST)$/;"	f	class:HexagonInstrInfo
HexagonInstrInfo	Target/Hexagon/HexagonInstrInfo.h	/^class HexagonInstrInfo : public HexagonGenInstrInfo {$/;"	c	namespace:llvm
HexagonLowerToMC	Target/Hexagon/HexagonMCInstLower.cpp	/^void llvm::HexagonLowerToMC(const MachineInstr* MI, MCInst& MCI,$/;"	f	class:llvm
HexagonMACHINEFUNCTIONINFO_H	Target/Hexagon/HexagonMachineFunctionInfo.h	11;"	d
HexagonMCASMINFO_H	Target/Hexagon/MCTargetDesc/HexagonMCAsmInfo.h	15;"	d
HexagonMCAsmInfo	Target/Hexagon/MCTargetDesc/HexagonMCAsmInfo.cpp	/^HexagonMCAsmInfo::HexagonMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	class:HexagonMCAsmInfo
HexagonMCAsmInfo	Target/Hexagon/MCTargetDesc/HexagonMCAsmInfo.h	/^  class HexagonMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
HexagonMCInst	Target/Hexagon/HexagonMCInst.h	/^    explicit HexagonMCInst(): MCInst(),$/;"	f	class:llvm::HexagonMCInst
HexagonMCInst	Target/Hexagon/HexagonMCInst.h	/^  class HexagonMCInst: public MCInst {$/;"	c	namespace:llvm
HexagonMachineFunctionInfo	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  HexagonMachineFunctionInfo() : SRetReturnReg(0), HasClobberLR(0) {}$/;"	f	class:llvm::HexagonMachineFunctionInfo
HexagonMachineFunctionInfo	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  HexagonMachineFunctionInfo(MachineFunction &MF) : SRetReturnReg(0),$/;"	f	class:llvm::HexagonMachineFunctionInfo
HexagonMachineFunctionInfo	Target/Hexagon/HexagonMachineFunctionInfo.h	/^class HexagonMachineFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
HexagonNewValueJump	Target/Hexagon/HexagonNewValueJump.cpp	/^    HexagonNewValueJump() : MachineFunctionPass(ID) { }$/;"	f	struct:__anon410::HexagonNewValueJump
HexagonNewValueJump	Target/Hexagon/HexagonNewValueJump.cpp	/^  struct HexagonNewValueJump : public MachineFunctionPass {$/;"	s	namespace:__anon410	file:
HexagonPacketizer	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^    HexagonPacketizer() : MachineFunctionPass(ID) {}$/;"	f	class:__anon403::HexagonPacketizer
HexagonPacketizer	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^  class HexagonPacketizer : public MachineFunctionPass {$/;"	c	namespace:__anon403	file:
HexagonPacketizerList	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^  class HexagonPacketizerList : public VLIWPacketizerList {$/;"	c	namespace:__anon403	file:
HexagonPacketizerList	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^HexagonPacketizerList::HexagonPacketizerList($/;"	f	class:HexagonPacketizerList
HexagonPassConfig	Target/Hexagon/HexagonTargetMachine.cpp	/^  HexagonPassConfig(HexagonTargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon409::HexagonPassConfig
HexagonPassConfig	Target/Hexagon/HexagonTargetMachine.cpp	/^class HexagonPassConfig : public TargetPassConfig {$/;"	c	namespace:__anon409	file:
HexagonPeephole	Target/Hexagon/HexagonPeephole.cpp	/^    HexagonPeephole() : MachineFunctionPass(ID) { }$/;"	f	struct:__anon411::HexagonPeephole
HexagonPeephole	Target/Hexagon/HexagonPeephole.cpp	/^  struct HexagonPeephole : public MachineFunctionPass {$/;"	s	namespace:__anon411	file:
HexagonREGISTERINFO_H	Target/Hexagon/HexagonRegisterInfo.h	16;"	d
HexagonRegisterInfo	Target/Hexagon/HexagonRegisterInfo.cpp	/^HexagonRegisterInfo::HexagonRegisterInfo(HexagonSubtarget &st,$/;"	f	class:HexagonRegisterInfo
HexagonRegisterInfo	Target/Hexagon/HexagonRegisterInfo.h	/^struct HexagonRegisterInfo : public HexagonGenRegisterInfo {$/;"	s	namespace:llvm
HexagonRemoveExtendArgs	Target/Hexagon/HexagonRemoveSZExtArgs.cpp	/^    HexagonRemoveExtendArgs() : FunctionPass(ID) {}$/;"	f	struct:__anon406::HexagonRemoveExtendArgs
HexagonRemoveExtendArgs	Target/Hexagon/HexagonRemoveSZExtArgs.cpp	/^  struct HexagonRemoveExtendArgs : public FunctionPass {$/;"	s	namespace:__anon406	file:
HexagonSELECTIONDAGINFO_H	Target/Hexagon/HexagonSelectionDAGInfo.h	15;"	d
HexagonSelectionDAGInfo	Target/Hexagon/HexagonSelectionDAGInfo.cpp	/^HexagonSelectionDAGInfo::HexagonSelectionDAGInfo(const HexagonTargetMachine$/;"	f	class:HexagonSelectionDAGInfo
HexagonSelectionDAGInfo	Target/Hexagon/HexagonSelectionDAGInfo.h	/^class HexagonSelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
HexagonSplitTFRCondSets	Target/Hexagon/HexagonSplitTFRCondSets.cpp	/^    HexagonSplitTFRCondSets(HexagonTargetMachine& TM) :$/;"	f	class:__anon407::HexagonSplitTFRCondSets
HexagonSplitTFRCondSets	Target/Hexagon/HexagonSplitTFRCondSets.cpp	/^class HexagonSplitTFRCondSets : public MachineFunctionPass {$/;"	c	namespace:__anon407	file:
HexagonSubtarget	Target/Hexagon/HexagonSubtarget.cpp	/^HexagonSubtarget::HexagonSubtarget(StringRef TT, StringRef CPU, StringRef FS):$/;"	f	class:HexagonSubtarget
HexagonSubtarget	Target/Hexagon/HexagonSubtarget.h	/^class HexagonSubtarget : public HexagonGenSubtargetInfo {$/;"	c	namespace:llvm
HexagonTARGETMACHINE_H	Target/Hexagon/HexagonTargetMachine.h	15;"	d
HexagonTARGETOBJECTFILE_H	Target/Hexagon/HexagonTargetObjectFile.h	11;"	d
HexagonTargetLowering	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::HexagonTargetLowering(HexagonTargetMachine$/;"	f	class:HexagonTargetLowering
HexagonTargetLowering	Target/Hexagon/HexagonISelLowering.h	/^  class HexagonTargetLowering : public TargetLowering {$/;"	c	namespace:llvm
HexagonTargetMachine	Target/Hexagon/HexagonTargetMachine.cpp	/^HexagonTargetMachine::HexagonTargetMachine(const Target &T, StringRef TT,$/;"	f	class:HexagonTargetMachine
HexagonTargetMachine	Target/Hexagon/HexagonTargetMachine.h	/^class HexagonTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
HexagonTargetMachineModule	Target/Hexagon/HexagonTargetMachine.cpp	/^extern "C" int HexagonTargetMachineModule;$/;"	v
HexagonTargetMachineModule	Target/Hexagon/HexagonTargetMachine.cpp	/^int HexagonTargetMachineModule = 0;$/;"	v
HexagonTargetObjectFile	Target/Hexagon/HexagonTargetObjectFile.h	/^  class HexagonTargetObjectFile : public TargetLoweringObjectFileELF {$/;"	c	namespace:llvm
Hexagon_ADDI_OFFSET_MAX	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_ADDI_OFFSET_MAX = 32767;$/;"	v
Hexagon_ADDI_OFFSET_MIN	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_ADDI_OFFSET_MIN = -32768;$/;"	v
Hexagon_CCAssignFn	Target/Hexagon/HexagonCallingConvLower.h	/^typedef bool Hexagon_CCAssignFn(unsigned ValNo, EVT ValVT,$/;"	t	namespace:llvm
Hexagon_CCState	Target/Hexagon/HexagonCallingConvLower.cpp	/^Hexagon_CCState::Hexagon_CCState(CallingConv::ID CC, bool isVarArg,$/;"	f	class:Hexagon_CCState
Hexagon_CCState	Target/Hexagon/HexagonCallingConvLower.h	/^class Hexagon_CCState {$/;"	c	namespace:llvm
Hexagon_ISELLOWERING_H	Target/Hexagon/HexagonISelLowering.h	16;"	d
Hexagon_MAX_RET_SIZE	Target/Hexagon/HexagonISelLowering.cpp	/^const unsigned Hexagon_MAX_RET_SIZE = 64;$/;"	v
Hexagon_MEMB_AUTOINC_MAX	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMB_AUTOINC_MAX = 7;$/;"	v
Hexagon_MEMB_AUTOINC_MIN	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMB_AUTOINC_MIN = -8;$/;"	v
Hexagon_MEMB_OFFSET_MAX	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMB_OFFSET_MAX = 1023;$/;"	v
Hexagon_MEMB_OFFSET_MIN	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMB_OFFSET_MIN = -1024;$/;"	v
Hexagon_MEMD_AUTOINC_MAX	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMD_AUTOINC_MAX = 56;$/;"	v
Hexagon_MEMD_AUTOINC_MIN	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMD_AUTOINC_MIN = -64;$/;"	v
Hexagon_MEMD_OFFSET_MAX	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMD_OFFSET_MAX = 8191;$/;"	v
Hexagon_MEMD_OFFSET_MIN	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMD_OFFSET_MIN = -8192;$/;"	v
Hexagon_MEMH_AUTOINC_MAX	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMH_AUTOINC_MAX = 14;$/;"	v
Hexagon_MEMH_AUTOINC_MIN	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMH_AUTOINC_MIN = -16;$/;"	v
Hexagon_MEMH_OFFSET_MAX	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMH_OFFSET_MAX = 2047;$/;"	v
Hexagon_MEMH_OFFSET_MIN	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMH_OFFSET_MIN = -2048;$/;"	v
Hexagon_MEMW_AUTOINC_MAX	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMW_AUTOINC_MAX = 28;$/;"	v
Hexagon_MEMW_AUTOINC_MIN	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMW_AUTOINC_MIN = -32;$/;"	v
Hexagon_MEMW_OFFSET_MAX	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMW_OFFSET_MAX = 4095;$/;"	v
Hexagon_MEMW_OFFSET_MIN	Target/Hexagon/HexagonInstrInfo.cpp	/^const int Hexagon_MEMW_OFFSET_MIN = -4096;$/;"	v
Hexagon_POINTER_SIZE	Target/Hexagon/Hexagon.h	60;"	d
Hexagon_PointerSize	Target/Hexagon/Hexagon.h	62;"	d
Hexagon_PointerSize_Bits	Target/Hexagon/Hexagon.h	63;"	d
Hexagon_SLOTS	Target/Hexagon/HexagonSubtarget.h	25;"	d
Hexagon_SMALL_DATA_THRESHOLD	Target/Hexagon/HexagonSubtarget.h	24;"	d
Hexagon_SUBTARGET_H	Target/Hexagon/HexagonSubtarget.h	15;"	d
Hexagon_WordSize	Target/Hexagon/Hexagon.h	64;"	d
Hexagon_WordSize_Bits	Target/Hexagon/Hexagon.h	65;"	d
Hi	Target/CellSPU/SPUISelLowering.h	/^      Hi,                       \/\/\/< High address component (upper 16)$/;"	e	enum:llvm::SPUISD::NodeType
Hi	Target/Hexagon/HexagonISelLowering.h	/^      Hi, Lo,      \/\/ Hi\/Lo operations, typically on a global address.$/;"	e	enum:llvm::HexagonISD::__anon404
Hi	Target/Mips/MipsISelLowering.h	/^      Hi,$/;"	e	enum:llvm::MipsISD::NodeType
Hi	Target/PowerPC/PPCISelLowering.h	/^      Hi, Lo,$/;"	e	enum:llvm::PPCISD::NodeType
Hi	Target/Sparc/SparcISelLowering.h	/^      Hi, Lo,      \/\/ Hi\/Lo operations, typically on a global address.$/;"	e	enum:llvm::SPISD::__anon444
HiPC	DebugInfo/DWARFDebugAranges.h	/^    uint64_t HiPC() const {$/;"	f	struct:llvm::DWARFDebugAranges::Range
HiddenAttribute	Target/ARM/ARMAsmPrinter.cpp	/^        HiddenAttribute = 0,$/;"	e	enum:__anon313::ObjectAttributeEmitter::AttributeItemType::__anon314	file:
High	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const Constant *High;$/;"	m	struct:llvm::SelectionDAGBuilder::Case
High	Transforms/Utils/LowerSwitch.cpp	/^      Constant* High;$/;"	m	struct:__anon466::LowerSwitch::CaseRange	file:
HighPC	DebugInfo/DWARFDebugLine.h	/^    uint64_t HighPC;$/;"	m	struct:llvm::DWARFDebugLine::Sequence
HighRegPressure	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^bool RegReductionPQBase::HighRegPressure(const SUnit *SU) const {$/;"	f	class:RegReductionPQBase
HighWaterMark	Target/ARM/ARMConstantIslandPass.cpp	/^      MachineBasicBlock *HighWaterMark;$/;"	m	struct:__anon310::ARMConstantIslands::CPUser	file:
Hint	CodeGen/AllocationOrder.h	/^  unsigned Hint;$/;"	m	class:llvm::AllocationOrder
Hoist	CodeGen/MachineLICM.cpp	/^bool MachineLICM::Hoist(MachineInstr *MI, MachineBasicBlock *Preheader) {$/;"	f	class:MachineLICM
HoistCommonCode	CodeGen/BranchFolding.cpp	/^bool BranchFolder::HoistCommonCode(MachineFunction &MF) {$/;"	f	class:BranchFolder
HoistCommonCodeInSuccs	CodeGen/BranchFolding.cpp	/^bool BranchFolder::HoistCommonCodeInSuccs(MachineBasicBlock *MBB) {$/;"	f	class:BranchFolder
HoistInsertPosition	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::HoistInsertPosition(BasicBlock::iterator IP,$/;"	f	class:LSRInstance
HoistOutOfLoop	CodeGen/MachineLICM.cpp	/^void MachineLICM::HoistOutOfLoop(MachineDomTreeNode *HeaderN) {$/;"	f	class:MachineLICM
HoistPostRA	CodeGen/MachineLICM.cpp	/^void MachineLICM::HoistPostRA(MachineInstr *MI, unsigned Def) {$/;"	f	class:MachineLICM
HoistRegion	Transforms/Scalar/LICM.cpp	/^void LICM::HoistRegion(DomTreeNode *N) {$/;"	f	class:LICM
HoistRegionPostRA	CodeGen/MachineLICM.cpp	/^void MachineLICM::HoistRegionPostRA() {$/;"	f	class:MachineLICM
HoistThenElseCodeToIf	Transforms/Utils/SimplifyCFG.cpp	/^static bool HoistThenElseCodeToIf(BranchInst *BI) {$/;"	f	file:
HonorSignDependentRoundingFPMath	CodeGen/TargetOptionsImpl.cpp	/^bool TargetOptions::HonorSignDependentRoundingFPMath() const {$/;"	f	class:TargetOptions
HowFarToNonZero	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::HowFarToNonZero(const SCEV *V, const Loop *L) {$/;"	f	class:ScalarEvolution
HowFarToZero	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::HowFarToZero(const SCEV *V, const Loop *L) {$/;"	f	class:ScalarEvolution
HowManyLessThans	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::HowManyLessThans(const SCEV *LHS, const SCEV *RHS,$/;"	f	class:ScalarEvolution
HybridBURRPriorityQueue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^HybridBURRPriorityQueue;$/;"	t	namespace:__anon77	file:
Hysteresis	CodeGen/RegAllocGreedy.cpp	/^const float Hysteresis = 0.98f;$/;"	v
I	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    I = 2,$/;"	e	enum:llvm::ARM_PROC::IFlags
I16	Target/X86/X86ISelDAGToDAG.cpp	/^  I16,$/;"	e	enum:AtomicSz	file:
I32	Target/X86/X86ISelDAGToDAG.cpp	/^  I32,$/;"	e	enum:AtomicSz	file:
I64	Target/X86/X86ISelDAGToDAG.cpp	/^  I64,$/;"	e	enum:AtomicSz	file:
I8	Target/X86/X86ISelDAGToDAG.cpp	/^  I8,$/;"	e	enum:AtomicSz	file:
ICC_CC	Target/Sparc/Sparc.h	/^      ICC_CC  = 13   ,  \/\/ Carry Clear\/Great or Equal Unsigned$/;"	e	enum:llvm::SPCC::CondCodes
ICC_CS	Target/Sparc/Sparc.h	/^      ICC_CS  =  5   ,  \/\/ Carry Set\/Less Unsigned$/;"	e	enum:llvm::SPCC::CondCodes
ICC_E	Target/Sparc/Sparc.h	/^      ICC_E   =  1   ,  \/\/ Equal$/;"	e	enum:llvm::SPCC::CondCodes
ICC_G	Target/Sparc/Sparc.h	/^      ICC_G   = 10   ,  \/\/ Greater$/;"	e	enum:llvm::SPCC::CondCodes
ICC_GE	Target/Sparc/Sparc.h	/^      ICC_GE  = 11   ,  \/\/ Greater or Equal$/;"	e	enum:llvm::SPCC::CondCodes
ICC_GU	Target/Sparc/Sparc.h	/^      ICC_GU  = 12   ,  \/\/ Greater Unsigned$/;"	e	enum:llvm::SPCC::CondCodes
ICC_L	Target/Sparc/Sparc.h	/^      ICC_L   =  3   ,  \/\/ Less$/;"	e	enum:llvm::SPCC::CondCodes
ICC_LE	Target/Sparc/Sparc.h	/^      ICC_LE  =  2   ,  \/\/ Less or Equal$/;"	e	enum:llvm::SPCC::CondCodes
ICC_LEU	Target/Sparc/Sparc.h	/^      ICC_LEU =  4   ,  \/\/ Less or Equal Unsigned$/;"	e	enum:llvm::SPCC::CondCodes
ICC_NE	Target/Sparc/Sparc.h	/^      ICC_NE  =  9   ,  \/\/ Not Equal$/;"	e	enum:llvm::SPCC::CondCodes
ICC_NEG	Target/Sparc/Sparc.h	/^      ICC_NEG =  6   ,  \/\/ Negative$/;"	e	enum:llvm::SPCC::CondCodes
ICC_POS	Target/Sparc/Sparc.h	/^      ICC_POS = 14   ,  \/\/ Positive$/;"	e	enum:llvm::SPCC::CondCodes
ICC_VC	Target/Sparc/Sparc.h	/^      ICC_VC  = 15   ,  \/\/ Overflow Clear$/;"	e	enum:llvm::SPCC::CondCodes
ICC_VS	Target/Sparc/Sparc.h	/^      ICC_VS  =  7   ,  \/\/ Overflow Set$/;"	e	enum:llvm::SPCC::CondCodes
ICDiamond	CodeGen/IfConversion.cpp	/^      ICDiamond        \/\/ BB is entry of a diamond sub-CFG.$/;"	e	enum:__anon99::IfConverter::IfcvtKind	file:
ICNotClassfied	CodeGen/IfConversion.cpp	/^      ICNotClassfied,  \/\/ BB data valid, but not classified.$/;"	e	enum:__anon99::IfConverter::IfcvtKind	file:
ICSimple	CodeGen/IfConversion.cpp	/^      ICSimple,        \/\/ BB is entry of an one split, no rejoin sub-CFG.$/;"	e	enum:__anon99::IfConverter::IfcvtKind	file:
ICSimpleFalse	CodeGen/IfConversion.cpp	/^      ICSimpleFalse,   \/\/ Same as ICSimple, but on the false path.$/;"	e	enum:__anon99::IfConverter::IfcvtKind	file:
ICTriangle	CodeGen/IfConversion.cpp	/^      ICTriangle,      \/\/ BB is entry of a triangle sub-CFG.$/;"	e	enum:__anon99::IfConverter::IfcvtKind	file:
ICTriangleFRev	CodeGen/IfConversion.cpp	/^      ICTriangleFRev,  \/\/ Same as ICTriangleFalse, but false path rev condition.$/;"	e	enum:__anon99::IfConverter::IfcvtKind	file:
ICTriangleFalse	CodeGen/IfConversion.cpp	/^      ICTriangleFalse, \/\/ Same as ICTriangle, but on the false path.$/;"	e	enum:__anon99::IfConverter::IfcvtKind	file:
ICTriangleRev	CodeGen/IfConversion.cpp	/^      ICTriangleRev,   \/\/ Same as ICTriangle, but true path rev condition.$/;"	e	enum:__anon99::IfConverter::IfcvtKind	file:
IC_Autorelease	Transforms/Scalar/ObjCARC.cpp	/^    IC_Autorelease,         \/\/\/< objc_autorelease$/;"	e	enum:__anon499::InstructionClass	file:
IC_AutoreleaseRV	Transforms/Scalar/ObjCARC.cpp	/^    IC_AutoreleaseRV,       \/\/\/< objc_autoreleaseReturnValue$/;"	e	enum:__anon499::InstructionClass	file:
IC_AutoreleasepoolPop	Transforms/Scalar/ObjCARC.cpp	/^    IC_AutoreleasepoolPop,  \/\/\/< objc_autoreleasePoolPop$/;"	e	enum:__anon499::InstructionClass	file:
IC_AutoreleasepoolPush	Transforms/Scalar/ObjCARC.cpp	/^    IC_AutoreleasepoolPush, \/\/\/< objc_autoreleasePoolPush$/;"	e	enum:__anon499::InstructionClass	file:
IC_Call	Transforms/Scalar/ObjCARC.cpp	/^    IC_Call,                \/\/\/< could call objc_release$/;"	e	enum:__anon499::InstructionClass	file:
IC_CallOrUser	Transforms/Scalar/ObjCARC.cpp	/^    IC_CallOrUser,          \/\/\/< could call objc_release and\/or "use" pointers$/;"	e	enum:__anon499::InstructionClass	file:
IC_CopyWeak	Transforms/Scalar/ObjCARC.cpp	/^    IC_CopyWeak,            \/\/\/< objc_copyWeak (derived)$/;"	e	enum:__anon499::InstructionClass	file:
IC_DestroyWeak	Transforms/Scalar/ObjCARC.cpp	/^    IC_DestroyWeak,         \/\/\/< objc_destroyWeak (derived)$/;"	e	enum:__anon499::InstructionClass	file:
IC_FusedRetainAutorelease	Transforms/Scalar/ObjCARC.cpp	/^    IC_FusedRetainAutorelease, \/\/\/< objc_retainAutorelease$/;"	e	enum:__anon499::InstructionClass	file:
IC_FusedRetainAutoreleaseRV	Transforms/Scalar/ObjCARC.cpp	/^    IC_FusedRetainAutoreleaseRV, \/\/\/< objc_retainAutoreleaseReturnValue$/;"	e	enum:__anon499::InstructionClass	file:
IC_InitWeak	Transforms/Scalar/ObjCARC.cpp	/^    IC_InitWeak,            \/\/\/< objc_initWeak (derived)$/;"	e	enum:__anon499::InstructionClass	file:
IC_LoadWeak	Transforms/Scalar/ObjCARC.cpp	/^    IC_LoadWeak,            \/\/\/< objc_loadWeak (derived)$/;"	e	enum:__anon499::InstructionClass	file:
IC_LoadWeakRetained	Transforms/Scalar/ObjCARC.cpp	/^    IC_LoadWeakRetained,    \/\/\/< objc_loadWeakRetained (primitive)$/;"	e	enum:__anon499::InstructionClass	file:
IC_MoveWeak	Transforms/Scalar/ObjCARC.cpp	/^    IC_MoveWeak,            \/\/\/< objc_moveWeak (derived)$/;"	e	enum:__anon499::InstructionClass	file:
IC_None	Transforms/Scalar/ObjCARC.cpp	/^    IC_None                 \/\/\/< anything else$/;"	e	enum:__anon499::InstructionClass	file:
IC_NoopCast	Transforms/Scalar/ObjCARC.cpp	/^    IC_NoopCast,            \/\/\/< objc_retainedObject, etc.$/;"	e	enum:__anon499::InstructionClass	file:
IC_Release	Transforms/Scalar/ObjCARC.cpp	/^    IC_Release,             \/\/\/< objc_release$/;"	e	enum:__anon499::InstructionClass	file:
IC_Retain	Transforms/Scalar/ObjCARC.cpp	/^    IC_Retain,              \/\/\/< objc_retain$/;"	e	enum:__anon499::InstructionClass	file:
IC_RetainBlock	Transforms/Scalar/ObjCARC.cpp	/^    IC_RetainBlock,         \/\/\/< objc_retainBlock$/;"	e	enum:__anon499::InstructionClass	file:
IC_RetainRV	Transforms/Scalar/ObjCARC.cpp	/^    IC_RetainRV,            \/\/\/< objc_retainAutoreleasedReturnValue$/;"	e	enum:__anon499::InstructionClass	file:
IC_StoreStrong	Transforms/Scalar/ObjCARC.cpp	/^    IC_StoreStrong,         \/\/\/< objc_storeStrong (derived)$/;"	e	enum:__anon499::InstructionClass	file:
IC_StoreWeak	Transforms/Scalar/ObjCARC.cpp	/^    IC_StoreWeak,           \/\/\/< objc_storeWeak (primitive)$/;"	e	enum:__anon499::InstructionClass	file:
IC_User	Transforms/Scalar/ObjCARC.cpp	/^    IC_User,                \/\/\/< could "use" a pointer$/;"	e	enum:__anon499::InstructionClass	file:
IC_max	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  IC_max$/;"	e	enum:__anon363
ICmp	Target/MBlaze/MBlazeISelLowering.h	/^      ICmp,$/;"	e	enum:llvm::MBlazeISD::NodeType
ICmpZero	Transforms/Scalar/LoopStrengthReduce.cpp	/^    ICmpZero \/\/\/< An equality icmp with both operands folded into one.$/;"	e	enum:__anon517::LSRUse::KindType	file:
ID	Analysis/AliasAnalysis.cpp	/^char AliasAnalysis::ID = 0;$/;"	m	class:AliasAnalysis	file:
ID	Analysis/AliasAnalysisCounter.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon43::AliasAnalysisCounter	file:
ID	Analysis/AliasAnalysisCounter.cpp	/^char AliasAnalysisCounter::ID = 0;$/;"	m	class:AliasAnalysisCounter	file:
ID	Analysis/AliasAnalysisEvaluator.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon47::AAEval	file:
ID	Analysis/AliasAnalysisEvaluator.cpp	/^char AAEval::ID = 0;$/;"	m	class:AAEval	file:
ID	Analysis/AliasDebugger.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon44::AliasDebugger	file:
ID	Analysis/AliasDebugger.cpp	/^char AliasDebugger::ID = 0;$/;"	m	class:AliasDebugger	file:
ID	Analysis/AliasSetTracker.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon35::AliasSetPrinter	file:
ID	Analysis/AliasSetTracker.cpp	/^char AliasSetPrinter::ID = 0;$/;"	m	class:AliasSetPrinter	file:
ID	Analysis/BasicAliasAnalysis.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	struct:__anon15::BasicAliasAnalysis	file:
ID	Analysis/BasicAliasAnalysis.cpp	/^char BasicAliasAnalysis::ID = 0;$/;"	m	class:BasicAliasAnalysis	file:
ID	Analysis/BlockFrequencyInfo.cpp	/^char BlockFrequencyInfo::ID = 0;$/;"	m	class:BlockFrequencyInfo	file:
ID	Analysis/BranchProbabilityInfo.cpp	/^char BranchProbabilityInfo::ID = 0;$/;"	m	class:BranchProbabilityInfo	file:
ID	Analysis/CFGPrinter.cpp	/^    static char ID; \/\/ Pass identifcation, replacement for typeid$/;"	m	struct:__anon24::CFGViewer	file:
ID	Analysis/CFGPrinter.cpp	/^    static char ID; \/\/ Pass identifcation, replacement for typeid$/;"	m	struct:__anon25::CFGOnlyViewer	file:
ID	Analysis/CFGPrinter.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon26::CFGPrinter	file:
ID	Analysis/CFGPrinter.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon27::CFGOnlyPrinter	file:
ID	Analysis/CFGPrinter.cpp	/^char CFGOnlyPrinter::ID = 0;$/;"	m	class:CFGOnlyPrinter	file:
ID	Analysis/CFGPrinter.cpp	/^char CFGOnlyViewer::ID = 0;$/;"	m	class:CFGOnlyViewer	file:
ID	Analysis/CFGPrinter.cpp	/^char CFGPrinter::ID = 0;$/;"	m	class:CFGPrinter	file:
ID	Analysis/CFGPrinter.cpp	/^char CFGViewer::ID = 0;$/;"	m	class:CFGViewer	file:
ID	Analysis/DbgInfoPrinter.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon34::PrintDbgInfo	file:
ID	Analysis/DbgInfoPrinter.cpp	/^  char PrintDbgInfo::ID = 0;$/;"	m	class:__anon34::PrintDbgInfo	file:
ID	Analysis/DependenceAnalysis.cpp	/^char DependenceAnalysis::ID = 0;$/;"	m	class:DependenceAnalysis	file:
ID	Analysis/DomPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon49::DomOnlyViewer	file:
ID	Analysis/DomPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon49::DomViewer	file:
ID	Analysis/DomPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon49::PostDomOnlyViewer	file:
ID	Analysis/DomPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon49::PostDomViewer	file:
ID	Analysis/DomPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon50::DomOnlyPrinter	file:
ID	Analysis/DomPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon50::DomPrinter	file:
ID	Analysis/DomPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon50::PostDomOnlyPrinter	file:
ID	Analysis/DomPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon50::PostDomPrinter	file:
ID	Analysis/DomPrinter.cpp	/^char DomOnlyPrinter::ID = 0;$/;"	m	class:DomOnlyPrinter	file:
ID	Analysis/DomPrinter.cpp	/^char DomOnlyViewer::ID = 0;$/;"	m	class:DomOnlyViewer	file:
ID	Analysis/DomPrinter.cpp	/^char DomPrinter::ID = 0;$/;"	m	class:DomPrinter	file:
ID	Analysis/DomPrinter.cpp	/^char DomViewer::ID = 0;$/;"	m	class:DomViewer	file:
ID	Analysis/DomPrinter.cpp	/^char PostDomOnlyPrinter::ID = 0;$/;"	m	class:PostDomOnlyPrinter	file:
ID	Analysis/DomPrinter.cpp	/^char PostDomOnlyViewer::ID = 0;$/;"	m	class:PostDomOnlyViewer	file:
ID	Analysis/DomPrinter.cpp	/^char PostDomPrinter::ID = 0;$/;"	m	class:PostDomPrinter	file:
ID	Analysis/DomPrinter.cpp	/^char PostDomViewer::ID = 0;$/;"	m	class:PostDomViewer	file:
ID	Analysis/DominanceFrontier.cpp	/^char DominanceFrontier::ID = 0;$/;"	m	class:DominanceFrontier	file:
ID	Analysis/IPA/CallGraph.cpp	/^  static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon2::BasicCallGraph	file:
ID	Analysis/IPA/CallGraph.cpp	/^char BasicCallGraph::ID = 0;$/;"	m	class:BasicCallGraph	file:
ID	Analysis/IPA/CallGraph.cpp	/^char CallGraph::ID = 0;$/;"	m	class:CallGraph	file:
ID	Analysis/IPA/CallGraphSCCPass.cpp	/^    static char ID;$/;"	m	class:__anon4::PrintCallGraphPass	file:
ID	Analysis/IPA/CallGraphSCCPass.cpp	/^  static char ID;$/;"	m	class:__anon3::CGPassManager	file:
ID	Analysis/IPA/CallGraphSCCPass.cpp	/^char CGPassManager::ID = 0;$/;"	m	class:CGPassManager	file:
ID	Analysis/IPA/CallGraphSCCPass.cpp	/^char PrintCallGraphPass::ID = 0;$/;"	m	class:PrintCallGraphPass	file:
ID	Analysis/IPA/FindUsedTypes.cpp	/^char FindUsedTypes::ID = 0;$/;"	m	class:FindUsedTypes	file:
ID	Analysis/IPA/GlobalsModRef.cpp	/^    static char ID;$/;"	m	class:__anon1::GlobalsModRef	file:
ID	Analysis/IPA/GlobalsModRef.cpp	/^char GlobalsModRef::ID = 0;$/;"	m	class:GlobalsModRef	file:
ID	Analysis/IVUsers.cpp	/^char IVUsers::ID = 0;$/;"	m	class:IVUsers	file:
ID	Analysis/InstCount.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon17::InstCount	file:
ID	Analysis/InstCount.cpp	/^char InstCount::ID = 0;$/;"	m	class:InstCount	file:
ID	Analysis/IntervalPartition.cpp	/^char IntervalPartition::ID = 0;$/;"	m	class:IntervalPartition	file:
ID	Analysis/LazyValueInfo.cpp	/^char LazyValueInfo::ID = 0;$/;"	m	class:LazyValueInfo	file:
ID	Analysis/LibCallAliasAnalysis.cpp	/^char LibCallAliasAnalysis::ID = 0;$/;"	m	class:LibCallAliasAnalysis	file:
ID	Analysis/Lint.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon5::Lint	file:
ID	Analysis/Lint.cpp	/^char Lint::ID = 0;$/;"	m	class:Lint	file:
ID	Analysis/LoopDependenceAnalysis.cpp	/^char LoopDependenceAnalysis::ID = 0;$/;"	m	class:LoopDependenceAnalysis	file:
ID	Analysis/LoopInfo.cpp	/^char LoopInfo::ID = 0;$/;"	m	class:LoopInfo	file:
ID	Analysis/LoopPass.cpp	/^  static char ID;$/;"	m	class:__anon45::PrintLoopPass	file:
ID	Analysis/LoopPass.cpp	/^char LPPassManager::ID = 0;$/;"	m	class:LPPassManager	file:
ID	Analysis/LoopPass.cpp	/^char PrintLoopPass::ID = 0;$/;"	m	class:__anon45::PrintLoopPass	file:
ID	Analysis/MemDepPrinter.cpp	/^    static char ID; \/\/ Pass identifcation, replacement for typeid$/;"	m	struct:__anon33::MemDepPrinter	file:
ID	Analysis/MemDepPrinter.cpp	/^char MemDepPrinter::ID = 0;$/;"	m	class:MemDepPrinter	file:
ID	Analysis/MemoryDependenceAnalysis.cpp	/^char MemoryDependenceAnalysis::ID = 0;$/;"	m	class:MemoryDependenceAnalysis	file:
ID	Analysis/ModuleDebugInfoPrinter.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon46::ModuleDebugInfoPrinter	file:
ID	Analysis/ModuleDebugInfoPrinter.cpp	/^char ModuleDebugInfoPrinter::ID = 0;$/;"	m	class:ModuleDebugInfoPrinter	file:
ID	Analysis/NoAliasAnalysis.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	struct:__anon42::NoAA	file:
ID	Analysis/NoAliasAnalysis.cpp	/^char NoAA::ID = 0;$/;"	m	class:NoAA	file:
ID	Analysis/PathProfileInfo.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	struct:__anon41::NoPathProfileInfo	file:
ID	Analysis/PathProfileInfo.cpp	/^    static char ID;$/;"	m	class:__anon40::PathProfileLoaderPass	file:
ID	Analysis/PathProfileInfo.cpp	/^char NoPathProfileInfo::ID = 0;$/;"	m	class:NoPathProfileInfo	file:
ID	Analysis/PathProfileInfo.cpp	/^char PathProfileLoaderPass::ID = 0;$/;"	m	class:PathProfileLoaderPass	file:
ID	Analysis/PathProfileInfo.cpp	/^char llvm::PathProfileInfo::ID = 0;$/;"	m	class:llvm::PathProfileInfo	file:
ID	Analysis/PathProfileVerifier.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon29::PathProfileVerifier	file:
ID	Analysis/PathProfileVerifier.cpp	/^char PathProfileVerifier::ID = 0;$/;"	m	class:PathProfileVerifier	file:
ID	Analysis/PostDominators.cpp	/^char PostDominatorTree::ID = 0;$/;"	m	class:PostDominatorTree	file:
ID	Analysis/ProfileDataLoaderPass.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon7::ProfileMetadataLoaderPass	file:
ID	Analysis/ProfileDataLoaderPass.cpp	/^char ProfileMetadataLoaderPass::ID = 0;$/;"	m	class:ProfileMetadataLoaderPass	file:
ID	Analysis/ProfileEstimatorPass.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon9::ProfileEstimatorPass	file:
ID	Analysis/ProfileEstimatorPass.cpp	/^char ProfileEstimatorPass::ID = 0;$/;"	m	class:ProfileEstimatorPass	file:
ID	Analysis/ProfileInfo.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	struct:__anon16::NoProfileInfo	file:
ID	Analysis/ProfileInfo.cpp	/^  template<> char ProfileInfoT<Function,BasicBlock>::ID = 0;$/;"	m	class:llvm::ProfileInfoT	file:
ID	Analysis/ProfileInfo.cpp	/^char NoProfileInfo::ID = 0;$/;"	m	class:NoProfileInfo	file:
ID	Analysis/ProfileInfo.cpp	/^char ProfileInfoT<MachineFunction, MachineBasicBlock>::ID = 0;$/;"	m	class:llvm::ProfileInfoT	file:
ID	Analysis/ProfileInfoLoaderPass.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon52::LoaderPass	file:
ID	Analysis/ProfileInfoLoaderPass.cpp	/^char LoaderPass::ID = 0;$/;"	m	class:LoaderPass	file:
ID	Analysis/ProfileVerifierPass.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon36::ProfileVerifierPassT	file:
ID	Analysis/ProfileVerifierPass.cpp	/^  char ProfileVerifierPassT<FType, BType>::ID = 0;$/;"	m	class:__anon36::ProfileVerifierPassT	file:
ID	Analysis/RegionInfo.cpp	/^char RegionInfo::ID = 0;$/;"	m	class:RegionInfo	file:
ID	Analysis/RegionPass.cpp	/^  static char ID;$/;"	m	class:__anon8::PrintRegionPass	file:
ID	Analysis/RegionPass.cpp	/^char PrintRegionPass::ID = 0;$/;"	m	class:__anon8::PrintRegionPass	file:
ID	Analysis/RegionPass.cpp	/^char RGPassManager::ID = 0;$/;"	m	class:RGPassManager	file:
ID	Analysis/RegionPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon38::RegionOnlyViewer	file:
ID	Analysis/RegionPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon38::RegionPrinter	file:
ID	Analysis/RegionPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon38::RegionViewer	file:
ID	Analysis/RegionPrinter.cpp	/^  static char ID;$/;"	m	struct:__anon39::RegionOnlyPrinter	file:
ID	Analysis/RegionPrinter.cpp	/^char RegionOnlyPrinter::ID = 0;$/;"	m	class:RegionOnlyPrinter	file:
ID	Analysis/RegionPrinter.cpp	/^char RegionOnlyViewer::ID = 0;$/;"	m	class:__anon38::RegionOnlyViewer	file:
ID	Analysis/RegionPrinter.cpp	/^char RegionPrinter::ID = 0;$/;"	m	class:__anon38::RegionPrinter	file:
ID	Analysis/RegionPrinter.cpp	/^char RegionViewer::ID = 0;$/;"	m	class:__anon38::RegionViewer	file:
ID	Analysis/ScalarEvolution.cpp	/^char ScalarEvolution::ID = 0;$/;"	m	class:ScalarEvolution	file:
ID	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon51::ScalarEvolutionAliasAnalysis	file:
ID	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^char ScalarEvolutionAliasAnalysis::ID = 0;$/;"	m	class:ScalarEvolutionAliasAnalysis	file:
ID	Analysis/TypeBasedAliasAnalysis.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon13::TypeBasedAliasAnalysis	file:
ID	Analysis/TypeBasedAliasAnalysis.cpp	/^char TypeBasedAliasAnalysis::ID = 0;$/;"	m	class:TypeBasedAliasAnalysis	file:
ID	Bitcode/Writer/BitcodeWriterPass.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon59::WriteBitcodePass	file:
ID	Bitcode/Writer/BitcodeWriterPass.cpp	/^char WriteBitcodePass::ID = 0;$/;"	m	class:WriteBitcodePass	file:
ID	CodeGen/AsmPrinter/AsmPrinter.cpp	/^char AsmPrinter::ID = 0;$/;"	m	class:AsmPrinter	file:
ID	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  unsigned ID;$/;"	m	class:llvm::CompileUnit
ID	CodeGen/BranchFolding.cpp	/^    static char ID;$/;"	m	class:__anon98::BranchFolderPass	file:
ID	CodeGen/BranchFolding.cpp	/^char BranchFolderPass::ID = 0;$/;"	m	class:BranchFolderPass	file:
ID	CodeGen/CalcSpillWeights.cpp	/^char CalculateSpillWeights::ID = 0;$/;"	m	class:CalculateSpillWeights	file:
ID	CodeGen/CodePlacementOpt.cpp	/^    static char ID;$/;"	m	class:__anon150::CodePlacementOpt	file:
ID	CodeGen/CodePlacementOpt.cpp	/^  char CodePlacementOpt::ID = 0;$/;"	m	class:__anon150::CodePlacementOpt	file:
ID	CodeGen/DeadMachineInstructionElim.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon137::DeadMachineInstructionElim	file:
ID	CodeGen/DeadMachineInstructionElim.cpp	/^char DeadMachineInstructionElim::ID = 0;$/;"	m	class:DeadMachineInstructionElim	file:
ID	CodeGen/DwarfEHPrepare.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid.$/;"	m	class:__anon138::DwarfEHPrepare	file:
ID	CodeGen/DwarfEHPrepare.cpp	/^char DwarfEHPrepare::ID = 0;$/;"	m	class:DwarfEHPrepare	file:
ID	CodeGen/EarlyIfConversion.cpp	/^  static char ID;$/;"	m	class:__anon92::EarlyIfConverter	file:
ID	CodeGen/EarlyIfConversion.cpp	/^char EarlyIfConverter::ID = 0;$/;"	m	class:EarlyIfConverter	file:
ID	CodeGen/EdgeBundles.cpp	/^char EdgeBundles::ID = 0;$/;"	m	class:EdgeBundles	file:
ID	CodeGen/ExecutionDepsFix.cpp	/^  static char ID;$/;"	m	class:__anon120::ExeDepsFix	file:
ID	CodeGen/ExecutionDepsFix.cpp	/^char ExeDepsFix::ID = 0;$/;"	m	class:ExeDepsFix	file:
ID	CodeGen/ExpandISelPseudos.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon124::ExpandISelPseudos	file:
ID	CodeGen/ExpandISelPseudos.cpp	/^char ExpandISelPseudos::ID = 0;$/;"	m	class:ExpandISelPseudos	file:
ID	CodeGen/ExpandPostRAPseudos.cpp	/^  static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon165::ExpandPostRA	file:
ID	CodeGen/ExpandPostRAPseudos.cpp	/^char ExpandPostRA::ID = 0;$/;"	m	class:ExpandPostRA	file:
ID	CodeGen/GCMetadata.cpp	/^    static char ID;$/;"	m	class:__anon160::Deleter	file:
ID	CodeGen/GCMetadata.cpp	/^    static char ID;$/;"	m	class:__anon160::Printer	file:
ID	CodeGen/GCMetadata.cpp	/^char Deleter::ID = 0;$/;"	m	class:Deleter	file:
ID	CodeGen/GCMetadata.cpp	/^char GCModuleInfo::ID = 0;$/;"	m	class:GCModuleInfo	file:
ID	CodeGen/GCMetadata.cpp	/^char Printer::ID = 0;$/;"	m	class:Printer	file:
ID	CodeGen/GCStrategy.cpp	/^    static char ID;$/;"	m	class:__anon145::GCMachineCodeAnalysis	file:
ID	CodeGen/GCStrategy.cpp	/^    static char ID;$/;"	m	class:__anon145::LowerIntrinsics	file:
ID	CodeGen/GCStrategy.cpp	/^char GCMachineCodeAnalysis::ID = 0;$/;"	m	class:GCMachineCodeAnalysis	file:
ID	CodeGen/GCStrategy.cpp	/^char LowerIntrinsics::ID = 0;$/;"	m	class:LowerIntrinsics	file:
ID	CodeGen/IfConversion.cpp	/^    static char ID;$/;"	m	class:__anon99::IfConverter	file:
ID	CodeGen/IfConversion.cpp	/^  char IfConverter::ID = 0;$/;"	m	class:__anon99::IfConverter	file:
ID	CodeGen/LiveDebugVariables.cpp	/^char LiveDebugVariables::ID = 0;$/;"	m	class:LiveDebugVariables	file:
ID	CodeGen/LiveDebugVariables.h	/^  static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:llvm::LiveDebugVariables
ID	CodeGen/LiveIntervalAnalysis.cpp	/^char LiveIntervals::ID = 0;$/;"	m	class:LiveIntervals	file:
ID	CodeGen/LiveRegMatrix.cpp	/^char LiveRegMatrix::ID = 0;$/;"	m	class:LiveRegMatrix	file:
ID	CodeGen/LiveRegMatrix.h	/^  static char ID;$/;"	m	class:llvm::LiveRegMatrix
ID	CodeGen/LiveStackAnalysis.cpp	/^char LiveStacks::ID = 0;$/;"	m	class:LiveStacks	file:
ID	CodeGen/LiveVariables.cpp	/^char LiveVariables::ID = 0;$/;"	m	class:LiveVariables	file:
ID	CodeGen/LocalStackSlotAllocation.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon136::LocalStackSlotPass	file:
ID	CodeGen/LocalStackSlotAllocation.cpp	/^char LocalStackSlotPass::ID = 0;$/;"	m	class:LocalStackSlotPass	file:
ID	CodeGen/MachineBlockFrequencyInfo.cpp	/^char MachineBlockFrequencyInfo::ID = 0;$/;"	m	class:MachineBlockFrequencyInfo	file:
ID	CodeGen/MachineBlockPlacement.cpp	/^  static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon107::MachineBlockPlacement	file:
ID	CodeGen/MachineBlockPlacement.cpp	/^  static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon109::MachineBlockPlacementStats	file:
ID	CodeGen/MachineBlockPlacement.cpp	/^char MachineBlockPlacement::ID = 0;$/;"	m	class:MachineBlockPlacement	file:
ID	CodeGen/MachineBlockPlacement.cpp	/^char MachineBlockPlacementStats::ID = 0;$/;"	m	class:MachineBlockPlacementStats	file:
ID	CodeGen/MachineBranchProbabilityInfo.cpp	/^char MachineBranchProbabilityInfo::ID = 0;$/;"	m	class:MachineBranchProbabilityInfo	file:
ID	CodeGen/MachineCSE.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon161::MachineCSE	file:
ID	CodeGen/MachineCSE.cpp	/^char MachineCSE::ID = 0;$/;"	m	class:MachineCSE	file:
ID	CodeGen/MachineCopyPropagation.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon93::MachineCopyPropagation	file:
ID	CodeGen/MachineCopyPropagation.cpp	/^char MachineCopyPropagation::ID = 0;$/;"	m	class:MachineCopyPropagation	file:
ID	CodeGen/MachineDominators.cpp	/^char MachineDominatorTree::ID = 0;$/;"	m	class:MachineDominatorTree	file:
ID	CodeGen/MachineFunctionAnalysis.cpp	/^char MachineFunctionAnalysis::ID = 0;$/;"	m	class:MachineFunctionAnalysis	file:
ID	CodeGen/MachineFunctionPrinterPass.cpp	/^  static char ID;$/;"	m	struct:__anon96::MachineFunctionPrinterPass	file:
ID	CodeGen/MachineFunctionPrinterPass.cpp	/^char MachineFunctionPrinterPass::ID = 0;$/;"	m	class:__anon96::MachineFunctionPrinterPass	file:
ID	CodeGen/MachineInstrBundle.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon111::UnpackMachineBundles	file:
ID	CodeGen/MachineInstrBundle.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon112::FinalizeMachineBundles	file:
ID	CodeGen/MachineInstrBundle.cpp	/^char FinalizeMachineBundles::ID = 0;$/;"	m	class:FinalizeMachineBundles	file:
ID	CodeGen/MachineInstrBundle.cpp	/^char UnpackMachineBundles::ID = 0;$/;"	m	class:UnpackMachineBundles	file:
ID	CodeGen/MachineLICM.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon156::MachineLICM	file:
ID	CodeGen/MachineLICM.cpp	/^char MachineLICM::ID = 0;$/;"	m	class:MachineLICM	file:
ID	CodeGen/MachineLoopInfo.cpp	/^char MachineLoopInfo::ID = 0;$/;"	m	class:MachineLoopInfo	file:
ID	CodeGen/MachineLoopRanges.cpp	/^char MachineLoopRanges::ID = 0;$/;"	m	class:MachineLoopRanges	file:
ID	CodeGen/MachineModuleInfo.cpp	/^char MachineModuleInfo::ID = 0;$/;"	m	class:MachineModuleInfo	file:
ID	CodeGen/MachinePostDominators.cpp	/^char MachinePostDominatorTree::ID = 0;$/;"	m	class:MachinePostDominatorTree	file:
ID	CodeGen/MachineScheduler.cpp	/^  static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon125::MachineScheduler	file:
ID	CodeGen/MachineScheduler.cpp	/^char MachineScheduler::ID = 0;$/;"	m	class:MachineScheduler	file:
ID	CodeGen/MachineSink.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon101::MachineSinking	file:
ID	CodeGen/MachineSink.cpp	/^char MachineSinking::ID = 0;$/;"	m	class:MachineSinking	file:
ID	CodeGen/MachineTraceMetrics.cpp	/^char MachineTraceMetrics::ID = 0;$/;"	m	class:MachineTraceMetrics	file:
ID	CodeGen/MachineTraceMetrics.h	/^  static char ID;$/;"	m	class:llvm::MachineTraceMetrics
ID	CodeGen/MachineVerifier.cpp	/^    static char ID; \/\/ Pass ID, replacement for typeid$/;"	m	struct:__anon139::MachineVerifierPass	file:
ID	CodeGen/MachineVerifier.cpp	/^char MachineVerifierPass::ID = 0;$/;"	m	class:MachineVerifierPass	file:
ID	CodeGen/OptimizePHIs.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon146::OptimizePHIs	file:
ID	CodeGen/OptimizePHIs.cpp	/^char OptimizePHIs::ID = 0;$/;"	m	class:OptimizePHIs	file:
ID	CodeGen/PHIElimination.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon164::PHIElimination	file:
ID	CodeGen/PHIElimination.cpp	/^char PHIElimination::ID = 0;$/;"	m	class:PHIElimination	file:
ID	CodeGen/Passes.cpp	/^char TargetPassConfig::ID = 0;$/;"	m	class:TargetPassConfig	file:
ID	CodeGen/PeepholeOptimizer.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon163::PeepholeOptimizer	file:
ID	CodeGen/PeepholeOptimizer.cpp	/^char PeepholeOptimizer::ID = 0;$/;"	m	class:PeepholeOptimizer	file:
ID	CodeGen/PostRASchedulerList.cpp	/^    static char ID;$/;"	m	class:__anon102::PostRAScheduler	file:
ID	CodeGen/PostRASchedulerList.cpp	/^  char PostRAScheduler::ID = 0;$/;"	m	class:__anon102::PostRAScheduler	file:
ID	CodeGen/ProcessImplicitDefs.cpp	/^  static char ID;$/;"	m	class:__anon166::ProcessImplicitDefs	file:
ID	CodeGen/ProcessImplicitDefs.cpp	/^char ProcessImplicitDefs::ID = 0;$/;"	m	class:ProcessImplicitDefs	file:
ID	CodeGen/PrologEpilogInserter.cpp	/^char PEI::ID = 0;$/;"	m	class:PEI	file:
ID	CodeGen/PrologEpilogInserter.h	/^    static char ID;$/;"	m	class:llvm::PEI
ID	CodeGen/RegAllocBasic.cpp	/^  static char ID;$/;"	m	class:__anon122::RABasic	file:
ID	CodeGen/RegAllocBasic.cpp	/^char RABasic::ID = 0;$/;"	m	class:__anon122::RABasic	file:
ID	CodeGen/RegAllocFast.cpp	/^    static char ID;$/;"	m	class:__anon140::RAFast	file:
ID	CodeGen/RegAllocFast.cpp	/^  char RAFast::ID = 0;$/;"	m	class:__anon140::RAFast	file:
ID	CodeGen/RegAllocGreedy.cpp	/^  static char ID;$/;"	m	class:__anon158::RAGreedy	file:
ID	CodeGen/RegAllocGreedy.cpp	/^char RAGreedy::ID = 0;$/;"	m	class:RAGreedy	file:
ID	CodeGen/RegAllocPBQP.cpp	/^  static char ID;$/;"	m	class:__anon135::RegAllocPBQP	file:
ID	CodeGen/RegAllocPBQP.cpp	/^char RegAllocPBQP::ID = 0;$/;"	m	class:__anon135::RegAllocPBQP	file:
ID	CodeGen/RegisterCoalescer.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon114::RegisterCoalescer	file:
ID	CodeGen/RegisterCoalescer.cpp	/^char RegisterCoalescer::ID = 0;$/;"	m	class:RegisterCoalescer	file:
ID	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^char SelectionDAGISel::ID = 0;$/;"	m	class:SelectionDAGISel	file:
ID	CodeGen/SjLjEHPrepare.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon123::SjLjEHPrepare	file:
ID	CodeGen/SjLjEHPrepare.cpp	/^char SjLjEHPrepare::ID = 0;$/;"	m	class:SjLjEHPrepare	file:
ID	CodeGen/SlotIndexes.cpp	/^char SlotIndexes::ID = 0;$/;"	m	class:SlotIndexes	file:
ID	CodeGen/SpillPlacement.cpp	/^char SpillPlacement::ID = 0;$/;"	m	class:SpillPlacement	file:
ID	CodeGen/SpillPlacement.h	/^  static char ID; \/\/ Pass identification, replacement for typeid.$/;"	m	class:llvm::SpillPlacement
ID	CodeGen/StackColoring.cpp	/^  static char ID;$/;"	m	class:__anon113::StackColoring	file:
ID	CodeGen/StackColoring.cpp	/^char StackColoring::ID = 0;$/;"	m	class:StackColoring	file:
ID	CodeGen/StackProtector.cpp	/^    static char ID;             \/\/ Pass identification, replacement for typeid.$/;"	m	class:__anon130::StackProtector	file:
ID	CodeGen/StackProtector.cpp	/^char StackProtector::ID = 0;$/;"	m	class:StackProtector	file:
ID	CodeGen/StackSlotColoring.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon94::StackSlotColoring	file:
ID	CodeGen/StackSlotColoring.cpp	/^char StackSlotColoring::ID = 0;$/;"	m	class:StackSlotColoring	file:
ID	CodeGen/StrongPHIElimination.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon154::StrongPHIElimination	file:
ID	CodeGen/StrongPHIElimination.cpp	/^char StrongPHIElimination::ID = 0;$/;"	m	class:StrongPHIElimination	file:
ID	CodeGen/TailDuplication.cpp	/^    static char ID;$/;"	m	class:__anon167::TailDuplicatePass	file:
ID	CodeGen/TailDuplication.cpp	/^  char TailDuplicatePass::ID = 0;$/;"	m	class:__anon167::TailDuplicatePass	file:
ID	CodeGen/TwoAddressInstructionPass.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
ID	CodeGen/TwoAddressInstructionPass.cpp	/^char TwoAddressInstructionPass::ID = 0;$/;"	m	class:TwoAddressInstructionPass	file:
ID	CodeGen/UnreachableBlockElim.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon168::UnreachableBlockElim	file:
ID	CodeGen/UnreachableBlockElim.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon169::UnreachableMachineBlockElim	file:
ID	CodeGen/UnreachableBlockElim.cpp	/^char UnreachableBlockElim::ID = 0;$/;"	m	class:UnreachableBlockElim	file:
ID	CodeGen/UnreachableBlockElim.cpp	/^char UnreachableMachineBlockElim::ID = 0;$/;"	m	class:UnreachableMachineBlockElim	file:
ID	CodeGen/VirtRegMap.cpp	/^  static char ID;$/;"	m	class:__anon97::VirtRegRewriter	file:
ID	CodeGen/VirtRegMap.cpp	/^char VirtRegMap::ID = 0;$/;"	m	class:VirtRegMap	file:
ID	CodeGen/VirtRegMap.cpp	/^char VirtRegRewriter::ID = 0;$/;"	m	class:VirtRegRewriter	file:
ID	CodeGen/VirtRegMap.h	/^    static char ID;$/;"	m	class:llvm::VirtRegMap
ID	Target/ARM/ARMCodeEmitter.cpp	/^    static char ID;$/;"	m	class:__anon297::ARMCodeEmitter	file:
ID	Target/ARM/ARMCodeEmitter.cpp	/^char ARMCodeEmitter::ID = 0;$/;"	m	class:ARMCodeEmitter	file:
ID	Target/ARM/ARMConstantIslandPass.cpp	/^    static char ID;$/;"	m	class:__anon310::ARMConstantIslands	file:
ID	Target/ARM/ARMConstantIslandPass.cpp	/^  char ARMConstantIslands::ID = 0;$/;"	m	class:__anon310::ARMConstantIslands	file:
ID	Target/ARM/ARMExpandPseudoInsts.cpp	/^    static char ID;$/;"	m	class:__anon311::ARMExpandPseudo	file:
ID	Target/ARM/ARMExpandPseudoInsts.cpp	/^  char ARMExpandPseudo::ID = 0;$/;"	m	class:__anon311::ARMExpandPseudo	file:
ID	Target/ARM/ARMInstrInfo.cpp	/^    static char ID;$/;"	m	struct:__anon292::ARMCGBR	file:
ID	Target/ARM/ARMInstrInfo.cpp	/^char ARMCGBR::ID = 0;$/;"	m	class:ARMCGBR	file:
ID	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    static char ID;$/;"	m	struct:__anon303::ARMLoadStoreOpt	file:
ID	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    static char ID;$/;"	m	struct:__anon304::ARMPreAllocLoadStoreOpt	file:
ID	Target/ARM/ARMLoadStoreOptimizer.cpp	/^  char ARMLoadStoreOpt::ID = 0;$/;"	m	class:__anon303::ARMLoadStoreOpt	file:
ID	Target/ARM/ARMLoadStoreOptimizer.cpp	/^  char ARMPreAllocLoadStoreOpt::ID = 0;$/;"	m	class:__anon304::ARMPreAllocLoadStoreOpt	file:
ID	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ID = 3$/;"	e	enum:llvm::ARM_PROC::IMod
ID	Target/ARM/MLxExpansionPass.cpp	/^    static char ID;$/;"	m	struct:__anon301::MLxExpansion	file:
ID	Target/ARM/MLxExpansionPass.cpp	/^  char MLxExpansion::ID = 0;$/;"	m	class:__anon301::MLxExpansion	file:
ID	Target/ARM/Thumb2ITBlockPass.cpp	/^    static char ID;$/;"	m	class:__anon306::Thumb2ITBlockPass	file:
ID	Target/ARM/Thumb2ITBlockPass.cpp	/^  char Thumb2ITBlockPass::ID = 0;$/;"	m	class:__anon306::Thumb2ITBlockPass	file:
ID	Target/ARM/Thumb2SizeReduction.cpp	/^    static char ID;$/;"	m	class:__anon300::Thumb2SizeReduce	file:
ID	Target/ARM/Thumb2SizeReduction.cpp	/^  char Thumb2SizeReduce::ID = 0;$/;"	m	class:__anon300::Thumb2SizeReduce	file:
ID	Target/CellSPU/SPUNopFiller.cpp	/^    static char ID;$/;"	m	struct:__anon417::SPUNopFiller	file:
ID	Target/CellSPU/SPUNopFiller.cpp	/^  char SPUNopFiller::ID = 0;$/;"	m	class:__anon417::SPUNopFiller	file:
ID	Target/CppBackend/CPPBackend.cpp	/^    static char ID;$/;"	m	class:__anon412::CppWriter	file:
ID	Target/CppBackend/CPPBackend.cpp	/^char CppWriter::ID = 0;$/;"	m	class:CppWriter	file:
ID	Target/Hexagon/HexagonCFGOptimizer.cpp	/^  static char ID;$/;"	m	class:__anon402::HexagonCFGOptimizer	file:
ID	Target/Hexagon/HexagonCFGOptimizer.cpp	/^char HexagonCFGOptimizer::ID = 0;$/;"	m	class:__anon402::HexagonCFGOptimizer	file:
ID	Target/Hexagon/HexagonExpandPredSpillCode.cpp	/^    static char ID;$/;"	m	class:__anon401::HexagonExpandPredSpillCode	file:
ID	Target/Hexagon/HexagonExpandPredSpillCode.cpp	/^char HexagonExpandPredSpillCode::ID = 0;$/;"	m	class:__anon401::HexagonExpandPredSpillCode	file:
ID	Target/Hexagon/HexagonHardwareLoops.cpp	/^    static char ID;     \/\/ Pass identification, replacement for typeid.$/;"	m	struct:__anon408::HexagonFixupHwLoops	file:
ID	Target/Hexagon/HexagonHardwareLoops.cpp	/^    static char ID;   \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon408::HexagonHardwareLoops	file:
ID	Target/Hexagon/HexagonHardwareLoops.cpp	/^  char HexagonFixupHwLoops::ID = 0;$/;"	m	class:__anon408::HexagonFixupHwLoops	file:
ID	Target/Hexagon/HexagonHardwareLoops.cpp	/^  char HexagonHardwareLoops::ID = 0;$/;"	m	class:__anon408::HexagonHardwareLoops	file:
ID	Target/Hexagon/HexagonNewValueJump.cpp	/^    static char ID;$/;"	m	struct:__anon410::HexagonNewValueJump	file:
ID	Target/Hexagon/HexagonNewValueJump.cpp	/^char HexagonNewValueJump::ID = 0;$/;"	m	class:HexagonNewValueJump	file:
ID	Target/Hexagon/HexagonPeephole.cpp	/^    static char ID;$/;"	m	struct:__anon411::HexagonPeephole	file:
ID	Target/Hexagon/HexagonPeephole.cpp	/^char HexagonPeephole::ID = 0;$/;"	m	class:HexagonPeephole	file:
ID	Target/Hexagon/HexagonRemoveSZExtArgs.cpp	/^    static char ID;$/;"	m	struct:__anon406::HexagonRemoveExtendArgs	file:
ID	Target/Hexagon/HexagonRemoveSZExtArgs.cpp	/^char HexagonRemoveExtendArgs::ID = 0;$/;"	m	class:HexagonRemoveExtendArgs	file:
ID	Target/Hexagon/HexagonSplitTFRCondSets.cpp	/^    static char ID;$/;"	m	class:__anon407::HexagonSplitTFRCondSets	file:
ID	Target/Hexagon/HexagonSplitTFRCondSets.cpp	/^char HexagonSplitTFRCondSets::ID = 0;$/;"	m	class:__anon407::HexagonSplitTFRCondSets	file:
ID	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^    static char ID;$/;"	m	class:__anon403::HexagonPacketizer	file:
ID	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^  char HexagonPacketizer::ID = 0;$/;"	m	class:__anon403::HexagonPacketizer	file:
ID	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^    static char ID;$/;"	m	struct:__anon462::Filler	file:
ID	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^  char Filler::ID = 0;$/;"	m	class:__anon462::Filler	file:
ID	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^  enum ID {$/;"	g	namespace:mblazeIntrinsic	file:
ID	Target/MSP430/MSP430BranchSelector.cpp	/^    static char ID;$/;"	m	struct:__anon396::MSP430BSel	file:
ID	Target/MSP430/MSP430BranchSelector.cpp	/^  char MSP430BSel::ID = 0;$/;"	m	class:__anon396::MSP430BSel	file:
ID	Target/Mips/MipsCodeEmitter.cpp	/^  static char ID;$/;"	m	class:__anon438::MipsCodeEmitter	file:
ID	Target/Mips/MipsCodeEmitter.cpp	/^char MipsCodeEmitter::ID = 0;$/;"	m	class:MipsCodeEmitter	file:
ID	Target/Mips/MipsDelaySlotFiller.cpp	/^    static char ID;$/;"	m	struct:__anon436::Filler	file:
ID	Target/Mips/MipsDelaySlotFiller.cpp	/^  char Filler::ID = 0;$/;"	m	class:__anon436::Filler	file:
ID	Target/Mips/MipsLongBranch.cpp	/^    static char ID;$/;"	m	class:__anon437::MipsLongBranch	file:
ID	Target/Mips/MipsLongBranch.cpp	/^  char MipsLongBranch::ID = 0;$/;"	m	class:__anon437::MipsLongBranch	file:
ID	Target/NVPTX/NVPTXAllocaHoisting.cpp	/^char NVPTXAllocaHoisting::ID = 1;$/;"	m	class:llvm::NVPTXAllocaHoisting	file:
ID	Target/NVPTX/NVPTXAllocaHoisting.h	/^  static char ID; \/\/ Pass ID$/;"	m	class:llvm::NVPTXAllocaHoisting
ID	Target/NVPTX/NVPTXLowerAggrCopies.cpp	/^char NVPTXLowerAggrCopies::ID = 0;$/;"	m	class:NVPTXLowerAggrCopies	file:
ID	Target/NVPTX/NVPTXLowerAggrCopies.h	/^  static char ID;$/;"	m	struct:llvm::NVPTXLowerAggrCopies
ID	Target/NVPTX/NVPTXSplitBBatBar.cpp	/^char NVPTXSplitBBatBar::ID = 0;$/;"	m	class:NVPTXSplitBBatBar	file:
ID	Target/NVPTX/NVPTXSplitBBatBar.h	/^  static char ID;$/;"	m	struct:llvm::NVPTXSplitBBatBar
ID	Target/NVPTX/VectorElementize.cpp	/^  static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon316::VectorElementize	file:
ID	Target/NVPTX/VectorElementize.cpp	/^char VectorElementize::ID = 1;$/;"	m	class:__anon316::VectorElementize	file:
ID	Target/PowerPC/PPCBranchSelector.cpp	/^    static char ID;$/;"	m	struct:__anon323::PPCBSel	file:
ID	Target/PowerPC/PPCBranchSelector.cpp	/^  char PPCBSel::ID = 0;$/;"	m	class:__anon323::PPCBSel	file:
ID	Target/PowerPC/PPCCTRLoops.cpp	/^    static char ID;   \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon325::PPCCTRLoops	file:
ID	Target/PowerPC/PPCCTRLoops.cpp	/^  char PPCCTRLoops::ID = 0;$/;"	m	class:__anon325::PPCCTRLoops	file:
ID	Target/PowerPC/PPCCodeEmitter.cpp	/^    static char ID;$/;"	m	class:__anon324::PPCCodeEmitter	file:
ID	Target/PowerPC/PPCCodeEmitter.cpp	/^char PPCCodeEmitter::ID = 0;$/;"	m	class:PPCCodeEmitter	file:
ID	Target/Sparc/DelaySlotFiller.cpp	/^    static char ID;$/;"	m	struct:__anon439::Filler	file:
ID	Target/Sparc/DelaySlotFiller.cpp	/^  char Filler::ID = 0;$/;"	m	class:__anon439::Filler	file:
ID	Target/Sparc/FPMover.cpp	/^    static char ID;$/;"	m	struct:__anon442::FPMover	file:
ID	Target/Sparc/FPMover.cpp	/^  char FPMover::ID = 0;$/;"	m	class:__anon442::FPMover	file:
ID	Target/TargetLibraryInfo.cpp	/^char TargetLibraryInfo::ID = 0;$/;"	m	class:TargetLibraryInfo	file:
ID	Target/X86/X86CodeEmitter.cpp	/^    static char ID;$/;"	m	class:__anon379::Emitter	file:
ID	Target/X86/X86CodeEmitter.cpp	/^  char Emitter<CodeEmitter>::ID = 0;$/;"	m	class:__anon379::Emitter	file:
ID	Target/X86/X86FloatingPoint.cpp	/^    static char ID;$/;"	m	struct:__anon386::FPS	file:
ID	Target/X86/X86FloatingPoint.cpp	/^  char FPS::ID = 0;$/;"	m	class:__anon386::FPS	file:
ID	Target/X86/X86InstrInfo.cpp	/^    static char ID;$/;"	m	struct:__anon375::CGBR	file:
ID	Target/X86/X86InstrInfo.cpp	/^    static char ID;$/;"	m	struct:__anon376::LDTLSCleanup	file:
ID	Target/X86/X86InstrInfo.cpp	/^char CGBR::ID = 0;$/;"	m	class:CGBR	file:
ID	Target/X86/X86InstrInfo.cpp	/^char LDTLSCleanup::ID = 0;$/;"	m	class:LDTLSCleanup	file:
ID	Target/X86/X86RegisterInfo.cpp	/^    static char ID;$/;"	m	struct:__anon378::MSAH	file:
ID	Target/X86/X86RegisterInfo.cpp	/^  char MSAH::ID = 0;$/;"	m	class:__anon378::MSAH	file:
ID	Target/X86/X86VZeroUpper.cpp	/^    static char ID;$/;"	m	struct:__anon382::VZeroUpperInserter	file:
ID	Target/X86/X86VZeroUpper.cpp	/^  char VZeroUpperInserter::ID = 0;$/;"	m	class:__anon382::VZeroUpperInserter	file:
ID	Transforms/DDA/DDProfiling.cpp	/^    static char ID;$/;"	m	class:__anon606::DDInstrument	file:
ID	Transforms/DDA/DDProfiling.cpp	/^char DDInstrument::ID = 0;$/;"	m	class:DDInstrument	file:
ID	Transforms/Hello/Hello.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon484::Hello	file:
ID	Transforms/Hello/Hello.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon485::Hello2	file:
ID	Transforms/Hello/Hello.cpp	/^char Hello2::ID = 0;$/;"	m	class:Hello2	file:
ID	Transforms/Hello/Hello.cpp	/^char Hello::ID = 0;$/;"	m	class:Hello	file:
ID	Transforms/IPO/ArgumentPromotion.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon602::ArgPromotion	file:
ID	Transforms/IPO/ArgumentPromotion.cpp	/^char ArgPromotion::ID = 0;$/;"	m	class:ArgPromotion	file:
ID	Transforms/IPO/BarrierNoopPass.cpp	/^  static char ID; \/\/ Pass identification.$/;"	m	class:__anon585::BarrierNoop	file:
ID	Transforms/IPO/BarrierNoopPass.cpp	/^char BarrierNoop::ID = 0;$/;"	m	class:BarrierNoop	file:
ID	Transforms/IPO/ConstantMerge.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon586::ConstantMerge	file:
ID	Transforms/IPO/ConstantMerge.cpp	/^char ConstantMerge::ID = 0;$/;"	m	class:ConstantMerge	file:
ID	Transforms/IPO/DeadArgumentElimination.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon600::DAE	file:
ID	Transforms/IPO/DeadArgumentElimination.cpp	/^    static char ID;$/;"	m	struct:__anon601::DAH	file:
ID	Transforms/IPO/DeadArgumentElimination.cpp	/^char DAE::ID = 0;$/;"	m	class:DAE	file:
ID	Transforms/IPO/DeadArgumentElimination.cpp	/^char DAH::ID = 0;$/;"	m	class:DAH	file:
ID	Transforms/IPO/ExtractGV.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon584::GVExtractorPass	file:
ID	Transforms/IPO/ExtractGV.cpp	/^  char GVExtractorPass::ID = 0;$/;"	m	class:__anon584::GVExtractorPass	file:
ID	Transforms/IPO/FunctionAttrs.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon578::FunctionAttrs	file:
ID	Transforms/IPO/FunctionAttrs.cpp	/^char FunctionAttrs::ID = 0;$/;"	m	class:FunctionAttrs	file:
ID	Transforms/IPO/GlobalDCE.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon588::GlobalDCE	file:
ID	Transforms/IPO/GlobalDCE.cpp	/^char GlobalDCE::ID = 0;$/;"	m	class:GlobalDCE	file:
ID	Transforms/IPO/GlobalOpt.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon589::GlobalOpt	file:
ID	Transforms/IPO/GlobalOpt.cpp	/^char GlobalOpt::ID = 0;$/;"	m	class:GlobalOpt	file:
ID	Transforms/IPO/IPConstantPropagation.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon594::IPCP	file:
ID	Transforms/IPO/IPConstantPropagation.cpp	/^char IPCP::ID = 0;$/;"	m	class:IPCP	file:
ID	Transforms/IPO/InlineAlways.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon577::AlwaysInliner	file:
ID	Transforms/IPO/InlineAlways.cpp	/^char AlwaysInliner::ID = 0;$/;"	m	class:AlwaysInliner	file:
ID	Transforms/IPO/InlineSimple.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon595::SimpleInliner	file:
ID	Transforms/IPO/InlineSimple.cpp	/^char SimpleInliner::ID = 0;$/;"	m	class:SimpleInliner	file:
ID	Transforms/IPO/Internalize.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon593::InternalizePass	file:
ID	Transforms/IPO/Internalize.cpp	/^char InternalizePass::ID = 0;$/;"	m	class:InternalizePass	file:
ID	Transforms/IPO/LoopExtractor.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon582::BlockExtractorPass	file:
ID	Transforms/IPO/LoopExtractor.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon580::LoopExtractor	file:
ID	Transforms/IPO/LoopExtractor.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon581::SingleLoopExtractor	file:
ID	Transforms/IPO/LoopExtractor.cpp	/^char BlockExtractorPass::ID = 0;$/;"	m	class:BlockExtractorPass	file:
ID	Transforms/IPO/LoopExtractor.cpp	/^char LoopExtractor::ID = 0;$/;"	m	class:LoopExtractor	file:
ID	Transforms/IPO/LoopExtractor.cpp	/^char SingleLoopExtractor::ID = 0;$/;"	m	class:SingleLoopExtractor	file:
ID	Transforms/IPO/MergeFunctions.cpp	/^  static char ID;$/;"	m	class:__anon598::MergeFunctions	file:
ID	Transforms/IPO/MergeFunctions.cpp	/^char MergeFunctions::ID = 0;$/;"	m	class:MergeFunctions	file:
ID	Transforms/IPO/PartialInlining.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon592::PartialInliner	file:
ID	Transforms/IPO/PartialInlining.cpp	/^char PartialInliner::ID = 0;$/;"	m	class:PartialInliner	file:
ID	Transforms/IPO/PruneEH.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon583::PruneEH	file:
ID	Transforms/IPO/PruneEH.cpp	/^char PruneEH::ID = 0;$/;"	m	class:PruneEH	file:
ID	Transforms/IPO/StripDeadPrototypes.cpp	/^  static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon599::StripDeadPrototypesPass	file:
ID	Transforms/IPO/StripDeadPrototypes.cpp	/^char StripDeadPrototypesPass::ID = 0;$/;"	m	class:StripDeadPrototypesPass	file:
ID	Transforms/IPO/StripSymbols.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon587::StripDeadDebugInfo	file:
ID	Transforms/IPO/StripSymbols.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon587::StripDebugDeclare	file:
ID	Transforms/IPO/StripSymbols.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon587::StripNonDebugSymbols	file:
ID	Transforms/IPO/StripSymbols.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon587::StripSymbols	file:
ID	Transforms/IPO/StripSymbols.cpp	/^char StripDeadDebugInfo::ID = 0;$/;"	m	class:StripDeadDebugInfo	file:
ID	Transforms/IPO/StripSymbols.cpp	/^char StripDebugDeclare::ID = 0;$/;"	m	class:StripDebugDeclare	file:
ID	Transforms/IPO/StripSymbols.cpp	/^char StripNonDebugSymbols::ID = 0;$/;"	m	class:StripNonDebugSymbols	file:
ID	Transforms/IPO/StripSymbols.cpp	/^char StripSymbols::ID = 0;$/;"	m	class:StripSymbols	file:
ID	Transforms/InstCombine/InstCombine.h	/^  static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:llvm::InstCombiner
ID	Transforms/InstCombine/InstructionCombining.cpp	/^char InstCombiner::ID = 0;$/;"	m	class:InstCombiner	file:
ID	Transforms/Instrumentation/AddressSanitizer.cpp	/^  static char ID;  \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon491::AddressSanitizer	file:
ID	Transforms/Instrumentation/AddressSanitizer.cpp	/^char AddressSanitizer::ID = 0;$/;"	m	class:AddressSanitizer	file:
ID	Transforms/Instrumentation/BoundsChecking.cpp	/^    static char ID;$/;"	m	struct:__anon493::BoundsChecking	file:
ID	Transforms/Instrumentation/BoundsChecking.cpp	/^char BoundsChecking::ID = 0;$/;"	m	class:BoundsChecking	file:
ID	Transforms/Instrumentation/EdgeProfiling.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon492::EdgeProfiler	file:
ID	Transforms/Instrumentation/EdgeProfiling.cpp	/^char EdgeProfiler::ID = 0;$/;"	m	class:EdgeProfiler	file:
ID	Transforms/Instrumentation/GCOVProfiling.cpp	/^    static char ID;$/;"	m	class:__anon489::GCOVProfiler	file:
ID	Transforms/Instrumentation/GCOVProfiling.cpp	/^char GCOVProfiler::ID = 0;$/;"	m	class:GCOVProfiler	file:
ID	Transforms/Instrumentation/MaximumSpanningTree.h	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:llvm::MaximumSpanningTree
ID	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon487::OptimalEdgeProfiler	file:
ID	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	/^char OptimalEdgeProfiler::ID = 0;$/;"	m	class:OptimalEdgeProfiler	file:
ID	Transforms/Instrumentation/PathProfiling.cpp	/^  static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon488::PathProfiler	file:
ID	Transforms/Instrumentation/PathProfiling.cpp	/^char PathProfiler::ID = 0;$/;"	m	class:PathProfiler	file:
ID	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  static char ID;  \/\/ Pass identification, replacement for typeid.$/;"	m	struct:__anon486::ThreadSanitizer	file:
ID	Transforms/Instrumentation/ThreadSanitizer.cpp	/^char ThreadSanitizer::ID = 0;$/;"	m	class:ThreadSanitizer	file:
ID	Transforms/Scalar/ADCE.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon572::ADCE	file:
ID	Transforms/Scalar/ADCE.cpp	/^char ADCE::ID = 0;$/;"	m	class:ADCE	file:
ID	Transforms/Scalar/BasicBlockPlacement.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon528::BlockPlacement	file:
ID	Transforms/Scalar/BasicBlockPlacement.cpp	/^char BlockPlacement::ID = 0;$/;"	m	class:BlockPlacement	file:
ID	Transforms/Scalar/CodeGenPrepare.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon525::CodeGenPrepare	file:
ID	Transforms/Scalar/CodeGenPrepare.cpp	/^char CodeGenPrepare::ID = 0;$/;"	m	class:CodeGenPrepare	file:
ID	Transforms/Scalar/ConstantProp.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon535::ConstantPropagation	file:
ID	Transforms/Scalar/ConstantProp.cpp	/^char ConstantPropagation::ID = 0;$/;"	m	class:ConstantPropagation	file:
ID	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^    static char ID;$/;"	m	class:__anon529::CorrelatedValuePropagation	file:
ID	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^char CorrelatedValuePropagation::ID = 0;$/;"	m	class:CorrelatedValuePropagation	file:
ID	Transforms/Scalar/DCE.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon539::DeadInstElimination	file:
ID	Transforms/Scalar/DCE.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon540::DCE	file:
ID	Transforms/Scalar/DCE.cpp	/^char DCE::ID = 0;$/;"	m	class:DCE	file:
ID	Transforms/Scalar/DCE.cpp	/^char DeadInstElimination::ID = 0;$/;"	m	class:DeadInstElimination	file:
ID	Transforms/Scalar/DeadStoreElimination.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon552::DSE	file:
ID	Transforms/Scalar/DeadStoreElimination.cpp	/^char DSE::ID = 0;$/;"	m	class:DSE	file:
ID	Transforms/Scalar/EarlyCSE.cpp	/^  static char ID;$/;"	m	class:__anon566::EarlyCSE	file:
ID	Transforms/Scalar/EarlyCSE.cpp	/^char EarlyCSE::ID = 0;$/;"	m	class:EarlyCSE	file:
ID	Transforms/Scalar/GVN.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon537::GVN	file:
ID	Transforms/Scalar/GVN.cpp	/^  char GVN::ID = 0;$/;"	m	class:__anon537::GVN	file:
ID	Transforms/Scalar/GlobalMerge.cpp	/^    static char ID;             \/\/ Pass identification, replacement for typeid.$/;"	m	class:__anon567::GlobalMerge	file:
ID	Transforms/Scalar/GlobalMerge.cpp	/^char GlobalMerge::ID = 0;$/;"	m	class:GlobalMerge	file:
ID	Transforms/Scalar/IndVarSimplify.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon495::IndVarSimplify	file:
ID	Transforms/Scalar/IndVarSimplify.cpp	/^char IndVarSimplify::ID = 0;$/;"	m	class:IndVarSimplify	file:
ID	Transforms/Scalar/JumpThreading.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon542::JumpThreading	file:
ID	Transforms/Scalar/JumpThreading.cpp	/^char JumpThreading::ID = 0;$/;"	m	class:JumpThreading	file:
ID	Transforms/Scalar/LICM.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon568::LICM	file:
ID	Transforms/Scalar/LICM.cpp	/^char LICM::ID = 0;$/;"	m	class:LICM	file:
ID	Transforms/Scalar/LoopDeletion.cpp	/^    static char ID; \/\/ Pass ID, replacement for typeid$/;"	m	class:__anon576::LoopDeletion	file:
ID	Transforms/Scalar/LoopDeletion.cpp	/^char LoopDeletion::ID = 0;$/;"	m	class:LoopDeletion	file:
ID	Transforms/Scalar/LoopIdiomRecognize.cpp	/^    static char ID;$/;"	m	class:__anon543::LoopIdiomRecognize	file:
ID	Transforms/Scalar/LoopIdiomRecognize.cpp	/^char LoopIdiomRecognize::ID = 0;$/;"	m	class:LoopIdiomRecognize	file:
ID	Transforms/Scalar/LoopInstSimplify.cpp	/^    static char ID; \/\/ Pass ID, replacement for typeid$/;"	m	class:__anon527::LoopInstSimplify	file:
ID	Transforms/Scalar/LoopInstSimplify.cpp	/^char LoopInstSimplify::ID = 0;$/;"	m	class:LoopInstSimplify	file:
ID	Transforms/Scalar/LoopRotation.cpp	/^    static char ID; \/\/ Pass ID, replacement for typeid$/;"	m	class:__anon534::LoopRotate	file:
ID	Transforms/Scalar/LoopRotation.cpp	/^char LoopRotate::ID = 0;$/;"	m	class:LoopRotate	file:
ID	Transforms/Scalar/LoopStrengthReduce.cpp	/^  static char ID; \/\/ Pass ID, replacement for typeid$/;"	m	class:__anon520::LoopStrengthReduce	file:
ID	Transforms/Scalar/LoopStrengthReduce.cpp	/^char LoopStrengthReduce::ID = 0;$/;"	m	class:LoopStrengthReduce	file:
ID	Transforms/Scalar/LoopUnrollPass.cpp	/^    static char ID; \/\/ Pass ID, replacement for typeid$/;"	m	class:__anon571::LoopUnroll	file:
ID	Transforms/Scalar/LoopUnrollPass.cpp	/^char LoopUnroll::ID = 0;$/;"	m	class:LoopUnroll	file:
ID	Transforms/Scalar/LoopUnswitch.cpp	/^    static char ID; \/\/ Pass ID, replacement for typeid$/;"	m	class:__anon494::LoopUnswitch	file:
ID	Transforms/Scalar/LoopUnswitch.cpp	/^char LoopUnswitch::ID = 0;$/;"	m	class:LoopUnswitch	file:
ID	Transforms/Scalar/LowerAtomic.cpp	/^    static char ID;$/;"	m	struct:__anon570::LowerAtomic	file:
ID	Transforms/Scalar/LowerAtomic.cpp	/^char LowerAtomic::ID = 0;$/;"	m	class:LowerAtomic	file:
ID	Transforms/Scalar/MemCpyOptimizer.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon575::MemCpyOpt	file:
ID	Transforms/Scalar/MemCpyOptimizer.cpp	/^  char MemCpyOpt::ID = 0;$/;"	m	class:__anon575::MemCpyOpt	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon500::ObjCARCAliasAnalysis	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^    static char ID;$/;"	m	class:__anon501::ObjCARCExpand	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^    static char ID;$/;"	m	class:__anon502::ObjCARCAPElim	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^    static char ID;$/;"	m	class:__anon508::ObjCARCOpt	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^    static char ID;$/;"	m	class:__anon510::ObjCARCContract	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^char ObjCARCAPElim::ID = 0;$/;"	m	class:ObjCARCAPElim	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^char ObjCARCAliasAnalysis::ID = 0;$/;"	m	class:ObjCARCAliasAnalysis	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^char ObjCARCContract::ID = 0;$/;"	m	class:ObjCARCContract	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^char ObjCARCExpand::ID = 0;$/;"	m	class:ObjCARCExpand	file:
ID	Transforms/Scalar/ObjCARC.cpp	/^char ObjCARCOpt::ID = 0;$/;"	m	class:ObjCARCOpt	file:
ID	Transforms/Scalar/Reassociate.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon549::Reassociate	file:
ID	Transforms/Scalar/Reassociate.cpp	/^char Reassociate::ID = 0;$/;"	m	class:Reassociate	file:
ID	Transforms/Scalar/Reg2Mem.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon541::RegToMem	file:
ID	Transforms/Scalar/Reg2Mem.cpp	/^char RegToMem::ID = 0;$/;"	m	class:RegToMem	file:
ID	Transforms/Scalar/SCCP.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon532::SCCP	file:
ID	Transforms/Scalar/SCCP.cpp	/^    static char ID;$/;"	m	struct:__anon533::IPSCCP	file:
ID	Transforms/Scalar/SCCP.cpp	/^char IPSCCP::ID = 0;$/;"	m	class:IPSCCP	file:
ID	Transforms/Scalar/SCCP.cpp	/^char SCCP::ID = 0;$/;"	m	class:SCCP	file:
ID	Transforms/Scalar/SROA.cpp	/^  static char ID;$/;"	m	class:__anon559::SROA	file:
ID	Transforms/Scalar/SROA.cpp	/^char SROA::ID = 0;$/;"	m	class:SROA	file:
ID	Transforms/Scalar/ScalarReplAggregates.cpp	/^    static char ID;$/;"	m	struct:__anon521::SROA_DT	file:
ID	Transforms/Scalar/ScalarReplAggregates.cpp	/^    static char ID;$/;"	m	struct:__anon521::SROA_SSAUp	file:
ID	Transforms/Scalar/ScalarReplAggregates.cpp	/^char SROA_DT::ID = 0;$/;"	m	class:SROA_DT	file:
ID	Transforms/Scalar/ScalarReplAggregates.cpp	/^char SROA_SSAUp::ID = 0;$/;"	m	class:SROA_SSAUp	file:
ID	Transforms/Scalar/SimplifyCFGPass.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon551::CFGSimplifyPass	file:
ID	Transforms/Scalar/SimplifyCFGPass.cpp	/^char CFGSimplifyPass::ID = 0;$/;"	m	class:CFGSimplifyPass	file:
ID	Transforms/Scalar/SimplifyLibCalls.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon546::SimplifyLibCalls	file:
ID	Transforms/Scalar/SimplifyLibCalls.cpp	/^char SimplifyLibCalls::ID = 0;$/;"	m	class:SimplifyLibCalls	file:
ID	Transforms/Scalar/Sink.cpp	/^    static char ID; \/\/ Pass identification$/;"	m	class:__anon556::Sinking	file:
ID	Transforms/Scalar/Sink.cpp	/^char Sinking::ID = 0;$/;"	m	class:Sinking	file:
ID	Transforms/Scalar/TailRecursionElimination.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon511::TailCallElim	file:
ID	Transforms/Scalar/TailRecursionElimination.cpp	/^char TailCallElim::ID = 0;$/;"	m	class:TailCallElim	file:
ID	Transforms/Utils/BreakCriticalEdges.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon476::BreakCriticalEdges	file:
ID	Transforms/Utils/BreakCriticalEdges.cpp	/^char BreakCriticalEdges::ID = 0;$/;"	m	class:BreakCriticalEdges	file:
ID	Transforms/Utils/InstructionNamer.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon464::InstNamer	file:
ID	Transforms/Utils/InstructionNamer.cpp	/^  char InstNamer::ID = 0;$/;"	m	class:__anon464::InstNamer	file:
ID	Transforms/Utils/LCSSA.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon475::LCSSA	file:
ID	Transforms/Utils/LCSSA.cpp	/^char LCSSA::ID = 0;$/;"	m	class:LCSSA	file:
ID	Transforms/Utils/LoopSimplify.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon483::LoopSimplify	file:
ID	Transforms/Utils/LoopSimplify.cpp	/^char LoopSimplify::ID = 0;$/;"	m	class:LoopSimplify	file:
ID	Transforms/Utils/LowerExpectIntrinsic.cpp	/^    static char ID;$/;"	m	class:__anon482::LowerExpectIntrinsic	file:
ID	Transforms/Utils/LowerExpectIntrinsic.cpp	/^char LowerExpectIntrinsic::ID = 0;$/;"	m	class:LowerExpectIntrinsic	file:
ID	Transforms/Utils/LowerInvoke.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon474::LowerInvoke	file:
ID	Transforms/Utils/LowerInvoke.cpp	/^char LowerInvoke::ID = 0;$/;"	m	class:LowerInvoke	file:
ID	Transforms/Utils/LowerSwitch.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon466::LowerSwitch	file:
ID	Transforms/Utils/LowerSwitch.cpp	/^char LowerSwitch::ID = 0;$/;"	m	class:LowerSwitch	file:
ID	Transforms/Utils/Mem2Reg.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon471::PromotePass	file:
ID	Transforms/Utils/Mem2Reg.cpp	/^char PromotePass::ID = 0;$/;"	m	class:PromotePass	file:
ID	Transforms/Utils/MetaRenamer.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon472::MetaRenamer	file:
ID	Transforms/Utils/MetaRenamer.cpp	/^char MetaRenamer::ID = 0;$/;"	m	class:MetaRenamer	file:
ID	Transforms/Utils/SimplifyInstructions.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon467::InstSimplifier	file:
ID	Transforms/Utils/SimplifyInstructions.cpp	/^char InstSimplifier::ID = 0;$/;"	m	class:InstSimplifier	file:
ID	Transforms/Utils/UnifyFunctionExitNodes.cpp	/^char UnifyFunctionExitNodes::ID = 0;$/;"	m	class:UnifyFunctionExitNodes	file:
ID	Transforms/Vectorize/BBVectorize.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon604::BBVectorize	file:
ID	Transforms/Vectorize/BBVectorize.cpp	/^char BBVectorize::ID = 0;$/;"	m	class:BBVectorize	file:
ID	Transforms/Vectorize/LoopVectorize.cpp	/^  static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon605::LoopVectorize	file:
ID	Transforms/Vectorize/LoopVectorize.cpp	/^char LoopVectorize::ID = 0;$/;"	m	class:LoopVectorize	file:
ID	VMCore/DataLayout.cpp	/^char DataLayout::ID = 0;$/;"	m	class:DataLayout	file:
ID	VMCore/Dominators.cpp	/^char DominatorTree::ID = 0;$/;"	m	class:DominatorTree	file:
ID	VMCore/PassManager.cpp	/^  static char ID;$/;"	m	class:__anon614::BBPassManager	file:
ID	VMCore/PassManager.cpp	/^  static char ID;$/;"	m	class:llvm::FunctionPassManagerImpl	file:
ID	VMCore/PassManager.cpp	/^  static char ID;$/;"	m	class:llvm::MPPassManager	file:
ID	VMCore/PassManager.cpp	/^  static char ID;$/;"	m	class:llvm::PassManagerImpl	file:
ID	VMCore/PassManager.cpp	/^char BBPassManager::ID = 0;$/;"	m	class:__anon614::BBPassManager	file:
ID	VMCore/PassManager.cpp	/^char FPPassManager::ID = 0;$/;"	m	class:FPPassManager	file:
ID	VMCore/PassManager.cpp	/^char FunctionPassManagerImpl::ID = 0;$/;"	m	class:llvm::FunctionPassManagerImpl	file:
ID	VMCore/PassManager.cpp	/^char MPPassManager::ID = 0;$/;"	m	class:llvm::MPPassManager	file:
ID	VMCore/PassManager.cpp	/^char PassManagerImpl::ID = 0;$/;"	m	class:llvm::PassManagerImpl	file:
ID	VMCore/PrintModulePass.cpp	/^    static char ID;$/;"	m	class:__anon619::PrintFunctionPass	file:
ID	VMCore/PrintModulePass.cpp	/^    static char ID;$/;"	m	class:__anon619::PrintModulePass	file:
ID	VMCore/PrintModulePass.cpp	/^char PrintFunctionPass::ID = 0;$/;"	m	class:PrintFunctionPass	file:
ID	VMCore/PrintModulePass.cpp	/^char PrintModulePass::ID = 0;$/;"	m	class:PrintModulePass	file:
ID	VMCore/TargetTransformInfo.cpp	/^char TargetTransformInfo::ID = 0;$/;"	m	class:TargetTransformInfo	file:
ID	VMCore/Verifier.cpp	/^    static char ID; \/\/ Pass ID, replacement for typeid$/;"	m	struct:__anon609::PreVerifier	file:
ID	VMCore/Verifier.cpp	/^    static char ID; \/\/ Pass ID, replacement for typeid$/;"	m	struct:__anon610::Verifier	file:
ID	VMCore/Verifier.cpp	/^char PreVerifier::ID = 0;$/;"	m	class:PreVerifier	file:
ID	VMCore/Verifier.cpp	/^char Verifier::ID = 0;$/;"	m	class:Verifier	file:
IDParseMode	TableGen/TGParser.h	/^  enum IDParseMode {$/;"	g	class:llvm::TGParser
IE	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    IE = 2,$/;"	e	enum:llvm::ARM_PROC::IMod
IEEEdouble	Support/APFloat.cpp	/^  const fltSemantics APFloat::IEEEdouble = { 1023, -1022, 53, true };$/;"	m	class:llvm::APFloat	file:
IEEEhalf	Support/APFloat.cpp	/^  const fltSemantics APFloat::IEEEhalf = { 15, -14, 11, true };$/;"	m	class:llvm::APFloat	file:
IEEEquad	Support/APFloat.cpp	/^  const fltSemantics APFloat::IEEEquad = { 16383, -16382, 113, true };$/;"	m	class:llvm::APFloat	file:
IEEEsingle	Support/APFloat.cpp	/^  const fltSemantics APFloat::IEEEsingle = { 127, -126, 24, true };$/;"	m	class:llvm::APFloat	file:
IFlags	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } IFlags;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon268	file:
IFlags	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  enum IFlags {$/;"	g	namespace:llvm::ARM_PROC
IFlagsToString	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  inline static const char *IFlagsToString(unsigned val) {$/;"	f	namespace:llvm::ARM_PROC
IH_NONTAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t IH_NONTAKEN_WEIGHT = 1;$/;"	v	file:
IH_TAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t IH_TAKEN_WEIGHT = 1024 * 1024 - 1;$/;"	v	file:
II	Target/ARM/ARMCodeEmitter.cpp	/^    const ARMBaseInstrInfo    *II;$/;"	m	class:__anon297::ARMCodeEmitter	file:
II	Target/Mips/MipsCodeEmitter.cpp	/^  const MipsInstrInfo *II;$/;"	m	class:__anon438::MipsCodeEmitter	file:
II	Target/X86/X86CodeEmitter.cpp	/^    const X86InstrInfo  *II;$/;"	m	class:__anon379::Emitter	file:
IID	Target/CellSPU/SPUNopFiller.cpp	/^    const InstrItineraryData *IID;$/;"	m	struct:__anon417::SPUNopFiller	file:
IIT_ANYPTR	VMCore/Function.cpp	/^  IIT_ANYPTR = 24$/;"	e	enum:IIT_Info	file:
IIT_ARG	VMCore/Function.cpp	/^  IIT_ARG  = 15,$/;"	e	enum:IIT_Info	file:
IIT_Done	VMCore/Function.cpp	/^  IIT_Done = 0,$/;"	e	enum:IIT_Info	file:
IIT_EMPTYSTRUCT	VMCore/Function.cpp	/^  IIT_EMPTYSTRUCT = 17,$/;"	e	enum:IIT_Info	file:
IIT_EXTEND_VEC_ARG	VMCore/Function.cpp	/^  IIT_EXTEND_VEC_ARG = 22,$/;"	e	enum:IIT_Info	file:
IIT_F32	VMCore/Function.cpp	/^  IIT_F32  = 6,$/;"	e	enum:IIT_Info	file:
IIT_F64	VMCore/Function.cpp	/^  IIT_F64  = 7,$/;"	e	enum:IIT_Info	file:
IIT_I1	VMCore/Function.cpp	/^  IIT_I1   = 1,$/;"	e	enum:IIT_Info	file:
IIT_I16	VMCore/Function.cpp	/^  IIT_I16  = 3,$/;"	e	enum:IIT_Info	file:
IIT_I32	VMCore/Function.cpp	/^  IIT_I32  = 4,$/;"	e	enum:IIT_Info	file:
IIT_I64	VMCore/Function.cpp	/^  IIT_I64  = 5,$/;"	e	enum:IIT_Info	file:
IIT_I8	VMCore/Function.cpp	/^  IIT_I8   = 2,$/;"	e	enum:IIT_Info	file:
IIT_Info	VMCore/Function.cpp	/^enum IIT_Info {$/;"	g	file:
IIT_METADATA	VMCore/Function.cpp	/^  IIT_METADATA = 16,$/;"	e	enum:IIT_Info	file:
IIT_MMX	VMCore/Function.cpp	/^  IIT_MMX  = 13,$/;"	e	enum:IIT_Info	file:
IIT_PTR	VMCore/Function.cpp	/^  IIT_PTR  = 14,$/;"	e	enum:IIT_Info	file:
IIT_STRUCT2	VMCore/Function.cpp	/^  IIT_STRUCT2 = 18,$/;"	e	enum:IIT_Info	file:
IIT_STRUCT3	VMCore/Function.cpp	/^  IIT_STRUCT3 = 19,$/;"	e	enum:IIT_Info	file:
IIT_STRUCT4	VMCore/Function.cpp	/^  IIT_STRUCT4 = 20,$/;"	e	enum:IIT_Info	file:
IIT_STRUCT5	VMCore/Function.cpp	/^  IIT_STRUCT5 = 21,$/;"	e	enum:IIT_Info	file:
IIT_TRUNC_VEC_ARG	VMCore/Function.cpp	/^  IIT_TRUNC_VEC_ARG = 23,$/;"	e	enum:IIT_Info	file:
IIT_V16	VMCore/Function.cpp	/^  IIT_V16  = 11,$/;"	e	enum:IIT_Info	file:
IIT_V2	VMCore/Function.cpp	/^  IIT_V2   = 8,$/;"	e	enum:IIT_Info	file:
IIT_V32	VMCore/Function.cpp	/^  IIT_V32  = 12,$/;"	e	enum:IIT_Info	file:
IIT_V4	VMCore/Function.cpp	/^  IIT_V4   = 9,$/;"	e	enum:IIT_Info	file:
IIT_V8	VMCore/Function.cpp	/^  IIT_V8   = 10,$/;"	e	enum:IIT_Info	file:
IK_Free	CodeGen/LiveRegMatrix.h	/^    IK_Free = 0,$/;"	e	enum:llvm::LiveRegMatrix::InterferenceKind
IK_RegMask	CodeGen/LiveRegMatrix.h	/^    IK_RegMask$/;"	e	enum:llvm::LiveRegMatrix::InterferenceKind
IK_RegUnit	CodeGen/LiveRegMatrix.h	/^    IK_RegUnit,$/;"	e	enum:llvm::LiveRegMatrix::InterferenceKind
IK_VirtReg	CodeGen/LiveRegMatrix.h	/^    IK_VirtReg,$/;"	e	enum:llvm::LiveRegMatrix::InterferenceKind
IL	ExecutionEngine/Interpreter/Interpreter.h	/^  IntrinsicLowering *IL;$/;"	m	class:llvm::Interpreter
ILP	CodeGen/MachineScheduler.cpp	/^  ScheduleDAGILP *ILP;$/;"	m	struct:__anon128::ILPOrder	file:
ILP	CodeGen/MachineScheduler.cpp	/^  ScheduleDAGILP ILP;$/;"	m	class:__anon128::ILPScheduler	file:
ILPBURRPriorityQueue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^ILPBURRPriorityQueue;$/;"	t	namespace:__anon77	file:
ILPOrder	CodeGen/MachineScheduler.cpp	/^  ILPOrder(ScheduleDAGILP *ilp, bool MaxILP): ILP(ilp), MaximizeILP(MaxILP) {}$/;"	f	struct:__anon128::ILPOrder
ILPOrder	CodeGen/MachineScheduler.cpp	/^struct ILPOrder {$/;"	s	namespace:__anon128	file:
ILPScheduler	CodeGen/MachineScheduler.cpp	/^  ILPScheduler(bool MaximizeILP)$/;"	f	class:__anon128::ILPScheduler
ILPScheduler	CodeGen/MachineScheduler.cpp	/^class ILPScheduler : public MachineSchedStrategy {$/;"	c	namespace:__anon128	file:
IMPLEMENT_BINARY_OPERATOR	ExecutionEngine/Interpreter/Execution.cpp	48;"	d	file:
IMPLEMENT_FCMP	ExecutionEngine/Interpreter/Execution.cpp	283;"	d	file:
IMPLEMENT_INTEGER_ICMP	ExecutionEngine/Interpreter/Execution.cpp	112;"	d	file:
IMPLEMENT_POINTER_ICMP	ExecutionEngine/Interpreter/Execution.cpp	121;"	d	file:
IMPLEMENT_UNORDERED	ExecutionEngine/Interpreter/Execution.cpp	367;"	d	file:
IMPLEMENT_VAARG	ExecutionEngine/Interpreter/Execution.cpp	1159;"	d	file:
IMod	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  enum IMod {$/;"	g	namespace:llvm::ARM_PROC
IModToString	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  inline static const char *IModToString(unsigned val) {$/;"	f	namespace:llvm::ARM_PROC
INC	Support/regexec.c	121;"	d	file:
INC	Support/regexec.c	72;"	d	file:
INC	Support/regexec.c	98;"	d	file:
INC	Target/X86/X86ISelDAGToDAG.cpp	/^  INC,$/;"	e	enum:AtomicOpc	file:
INC	Target/X86/X86ISelLowering.h	/^      INC, DEC, OR, XOR, AND,$/;"	e	enum:llvm::X86ISD::NodeType
INF	Support/regcomp.c	954;"	d	file:
INFINITY	Support/regcomp.c	145;"	d	file:
INIT	Support/regexec.c	120;"	d	file:
INIT	Support/regexec.c	71;"	d	file:
INIT	Support/regexec.c	97;"	d	file:
INIT_TOP_Stack	ExecutionEngine/IntelJITEvents/jitprofiling.c	92;"	d	file:
INSERT	Support/regcomp.c	132;"	d	file:
INSERTPS	Target/X86/X86ISelLowering.h	/^      INSERTPS,$/;"	e	enum:llvm::X86ISD::NodeType
INSTCOMBINE_INSTCOMBINE_H	Transforms/InstCombine/InstCombine.h	11;"	d
INSTCOMBINE_WORKLIST_H	Transforms/InstCombine/InstCombineWorklist.h	11;"	d
INSTKEYWORD	AsmParser/LLLexer.cpp	598;"	d	file:
INSTKEYWORD	AsmParser/LLLexer.cpp	649;"	d	file:
INSTREMITTER_H	CodeGen/SelectionDAG/InstrEmitter.h	17;"	d
INSTRUCTIONS_STR	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	36;"	d
INSTRUCTIONS_SYM	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	27;"	d
INSTRUCTION_CONTEXTS	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  INSTRUCTION_CONTEXTS$/;"	e	enum:__anon363
INSTRUCTION_CONTEXTS	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	75;"	d
INSTRUCTION_IDS	Target/X86/Disassembler/X86Disassembler.h	80;"	d
INSTRUCTION_IDS	Target/X86/Disassembler/X86Disassembler.h	86;"	d
INSTRUCTION_IDS	Target/X86/Disassembler/X86DisassemblerDecoder.h	26;"	d
INSTRUCTION_IDS	Target/X86/Disassembler/X86DisassemblerDecoder.h	32;"	d
INSTRUCTION_SPECIFIER_FIELDS	Target/X86/Disassembler/X86Disassembler.h	77;"	d
INSTRUCTION_SPECIFIER_FIELDS	Target/X86/Disassembler/X86Disassembler.h	85;"	d
INSTRUCTION_SPECIFIER_FIELDS	Target/X86/Disassembler/X86DisassemblerDecoder.h	23;"	d
INSTRUCTION_SPECIFIER_FIELDS	Target/X86/Disassembler/X86DisassemblerDecoder.h	31;"	d
INTEL_JIT_EVENTS_WRAPPER_H	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	19;"	d
INTRINSICTD	VMCore/Makefile	/^INTRINSICTD  := $(PROJ_SRC_ROOT)\/include\/llvm\/Intrinsics.td$/;"	m
INTRINSICTDS	VMCore/Makefile	/^INTRINSICTDS := $(wildcard $(PROJ_SRC_ROOT)\/include\/llvm\/Intrinsics*.td)$/;"	m
IP	MC/MCDisassembler/Disassembler.h	/^  llvm::OwningPtr<llvm::MCInstPrinter> IP;$/;"	m	class:llvm::LLVMDisasmContext
IPCP	Transforms/IPO/IPConstantPropagation.cpp	/^    IPCP() : ModulePass(ID) {$/;"	f	struct:__anon594::IPCP
IPCP	Transforms/IPO/IPConstantPropagation.cpp	/^  struct IPCP : public ModulePass {$/;"	s	namespace:__anon594	file:
IPSCCP	Transforms/Scalar/SCCP.cpp	/^    IPSCCP() : ModulePass(ID) {$/;"	f	struct:__anon533::IPSCCP
IPSCCP	Transforms/Scalar/SCCP.cpp	/^  struct IPSCCP : public ModulePass {$/;"	s	namespace:__anon533	file:
IRB	Transforms/Scalar/SROA.cpp	/^    IRBuilder<> IRB;$/;"	m	class:__anon562::AggLoadStoreRewriter::OpSplitter	file:
IRet	Target/MBlaze/MBlazeISelLowering.h	/^      IRet$/;"	e	enum:llvm::MBlazeISD::NodeType
ISH	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ISH   = 11,$/;"	e	enum:llvm::ARM_MB::MemBOpt
ISHST	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ISHST = 10,$/;"	e	enum:llvm::ARM_MB::MemBOpt
ISSET	Support/regexec.c	110;"	d	file:
ISSET	Support/regexec.c	63;"	d	file:
ISSET	Support/regexec.c	89;"	d	file:
ISSETBACK	Support/regexec.c	102;"	d	file:
ISSETBACK	Support/regexec.c	127;"	d	file:
ISSETBACK	Support/regexec.c	78;"	d	file:
ISSTATEIN	Support/regexec.c	122;"	d	file:
ISSTATEIN	Support/regexec.c	73;"	d	file:
ISSTATEIN	Support/regexec.c	99;"	d	file:
ISVECBUILD	Target/NVPTX/VectorElementize.cpp	138;"	d	file:
ISVECDEST	Target/NVPTX/VectorElementize.cpp	142;"	d	file:
ISVECEXTRACT	Target/NVPTX/VectorElementize.cpp	140;"	d	file:
ISVECINSERT	Target/NVPTX/VectorElementize.cpp	141;"	d	file:
ISVECINST	Target/NVPTX/VectorElementize.cpp	135;"	d	file:
ISVECLOAD	Target/NVPTX/VectorElementize.cpp	136;"	d	file:
ISVECSHUFFLE	Target/NVPTX/VectorElementize.cpp	139;"	d	file:
ISVECSTORE	Target/NVPTX/VectorElementize.cpp	137;"	d	file:
ISWORD	Support/regex2.h	157;"	d
ISelPosition	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  SelectionDAG::allnodes_iterator &ISelPosition;$/;"	m	class:__anon70::ISelUpdater	file:
ISelUpdater	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  ISelUpdater(SelectionDAG &DAG, SelectionDAG::allnodes_iterator &isp)$/;"	f	class:__anon70::ISelUpdater
ISelUpdater	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^class ISelUpdater : public SelectionDAG::DAGUpdateListener {$/;"	c	namespace:__anon70	file:
ITBlock	Target/ARM/Disassembler/ARMDisassembler.cpp	/^  mutable ITStatus ITBlock;$/;"	m	class:__anon291::ThumbDisassembler	file:
ITMask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } ITMask;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon266	file:
ITOF	Target/Hexagon/HexagonISelLowering.h	/^      ITOF,        \/\/ Int to FP within a FP register.$/;"	e	enum:llvm::HexagonISD::__anon404
ITOF	Target/Sparc/SparcISelLowering.h	/^      ITOF,        \/\/ Int to FP within a FP register.$/;"	e	enum:llvm::SPISD::__anon444
ITState	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  } ITState;$/;"	m	class:__anon259::ARMAsmParser	typeref:struct:__anon259::ARMAsmParser::__anon260	file:
ITStates	Target/ARM/Disassembler/ARMDisassembler.cpp	/^      std::vector<unsigned char> ITStates;$/;"	m	class:__anon290::ITStatus	file:
ITStatus	Target/ARM/Disassembler/ARMDisassembler.cpp	/^  class ITStatus$/;"	c	namespace:__anon290	file:
ITTAPI	ExecutionEngine/IntelJITEvents/ittnotify_config.h	99;"	d
ITTAPI_CALL	ExecutionEngine/IntelJITEvents/ittnotify_config.h	103;"	d
ITT_ARCH	ExecutionEngine/IntelJITEvents/ittnotify_config.h	139;"	d
ITT_ARCH	ExecutionEngine/IntelJITEvents/ittnotify_config.h	141;"	d
ITT_ARCH	ExecutionEngine/IntelJITEvents/ittnotify_config.h	143;"	d
ITT_ARCH_IA32	ExecutionEngine/IntelJITEvents/ittnotify_config.h	126;"	d
ITT_ARCH_IA32E	ExecutionEngine/IntelJITEvents/ittnotify_config.h	130;"	d
ITT_ARCH_IA64	ExecutionEngine/IntelJITEvents/ittnotify_config.h	134;"	d
ITT_BUILD_ASSERT	ExecutionEngine/IntelJITEvents/ittnotify_config.h	161;"	d
ITT_EXTERN_C	ExecutionEngine/IntelJITEvents/ittnotify_config.h	148;"	d
ITT_EXTERN_C	ExecutionEngine/IntelJITEvents/ittnotify_config.h	150;"	d
ITT_GROUP_LIST	ExecutionEngine/IntelJITEvents/ittnotify_types.h	51;"	d
ITT_INLINE	ExecutionEngine/IntelJITEvents/ittnotify_config.h	108;"	d
ITT_INLINE	ExecutionEngine/IntelJITEvents/ittnotify_config.h	117;"	d
ITT_INLINE	ExecutionEngine/IntelJITEvents/ittnotify_config.h	119;"	d
ITT_INLINE_ATTRIBUTE	ExecutionEngine/IntelJITEvents/ittnotify_config.h	109;"	d
ITT_INLINE_ATTRIBUTE	ExecutionEngine/IntelJITEvents/ittnotify_config.h	121;"	d
ITT_MAGIC	ExecutionEngine/IntelJITEvents/ittnotify_config.h	163;"	d
ITT_OS	ExecutionEngine/IntelJITEvents/ittnotify_config.h	37;"	d
ITT_OS	ExecutionEngine/IntelJITEvents/ittnotify_config.h	39;"	d
ITT_OS	ExecutionEngine/IntelJITEvents/ittnotify_config.h	41;"	d
ITT_OS_LINUX	ExecutionEngine/IntelJITEvents/ittnotify_config.h	28;"	d
ITT_OS_MAC	ExecutionEngine/IntelJITEvents/ittnotify_config.h	32;"	d
ITT_OS_WIN	ExecutionEngine/IntelJITEvents/ittnotify_config.h	24;"	d
ITT_PLATFORM	ExecutionEngine/IntelJITEvents/ittnotify_config.h	55;"	d
ITT_PLATFORM	ExecutionEngine/IntelJITEvents/ittnotify_config.h	57;"	d
ITT_PLATFORM_POSIX	ExecutionEngine/IntelJITEvents/ittnotify_config.h	50;"	d
ITT_PLATFORM_WIN	ExecutionEngine/IntelJITEvents/ittnotify_config.h	46;"	d
ITT_TO_STR	ExecutionEngine/IntelJITEvents/ittnotify_config.h	154;"	d
ITT_TO_STR_AUX	ExecutionEngine/IntelJITEvents/ittnotify_config.h	153;"	d
IU	Transforms/Scalar/LoopStrengthReduce.cpp	/^  IVUsers &IU;$/;"	m	class:__anon518::LSRInstance	file:
IVChain	Transforms/Scalar/LoopStrengthReduce.cpp	/^  IVChain() : ExprBase(0) {}$/;"	f	struct:__anon518::IVChain
IVChain	Transforms/Scalar/LoopStrengthReduce.cpp	/^  IVChain(const IVInc &Head, const SCEV *Base)$/;"	f	struct:__anon518::IVChain
IVChain	Transforms/Scalar/LoopStrengthReduce.cpp	/^struct IVChain {$/;"	s	namespace:__anon518	file:
IVChainVec	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallVector<IVChain, MaxChains> IVChainVec;$/;"	m	class:__anon518::LSRInstance	file:
IVInc	Transforms/Scalar/LoopStrengthReduce.cpp	/^  IVInc(Instruction *U, Value *O, const SCEV *E):$/;"	f	struct:__anon518::IVInc
IVInc	Transforms/Scalar/LoopStrengthReduce.cpp	/^struct IVInc {$/;"	s	namespace:__anon518	file:
IVIncInsertPos	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Instruction *IVIncInsertPos;$/;"	m	class:__anon518::LSRInstance	file:
IVIncSet	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallPtrSet<Use*, MaxChains> IVIncSet;$/;"	m	class:__anon518::LSRInstance	file:
IVOperand	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Value* IVOperand;$/;"	m	struct:__anon518::IVInc	file:
IVUseShouldUsePostIncValue	Analysis/ScalarEvolutionNormalization.cpp	/^static bool IVUseShouldUsePostIncValue(Instruction *User, Value *Operand,$/;"	f	file:
IVUsers	Analysis/IVUsers.cpp	/^IVUsers::IVUsers()$/;"	f	class:IVUsers
I_BitShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    I_BitShift     = 25,$/;"	e	enum:llvm::ARMII::__anon288
Id	TableGen/TGLexer.h	/^    Id, StrVal, VarName, CodeFragment$/;"	e	enum:llvm::tgtok::TokKind
IdentifyFileType	Support/Path.cpp	/^sys::IdentifyFileType(const char *magic, unsigned length) {$/;"	f	class:sys
Idx	Transforms/IPO/DeadArgumentElimination.cpp	/^      unsigned Idx;$/;"	m	struct:__anon600::DAE::RetOrArg	file:
Idx	VMCore/LLVMContextImpl.h	/^  int Idx;$/;"	m	class:llvm::DebugRecVH
IdxCompare	VMCore/ConstantFold.cpp	/^static int IdxCompare(Constant *C1, Constant *C2, Type *ElTy) {$/;"	f	file:
IdxOffset	DebugInfo/DWARFDebugAbbrev.h	/^  uint32_t IdxOffset;$/;"	m	class:llvm::DWARFAbbreviationDeclarationSet
IfConv	CodeGen/EarlyIfConversion.cpp	/^  SSAIfConv IfConv;$/;"	m	class:__anon92::EarlyIfConverter	file:
IfConvertDiamond	CodeGen/IfConversion.cpp	/^bool IfConverter::IfConvertDiamond(BBInfo &BBI, IfcvtKind Kind,$/;"	f	class:IfConverter
IfConvertSimple	CodeGen/IfConversion.cpp	/^bool IfConverter::IfConvertSimple(BBInfo &BBI, IfcvtKind Kind) {$/;"	f	class:IfConverter
IfConvertTriangle	CodeGen/IfConversion.cpp	/^bool IfConverter::IfConvertTriangle(BBInfo &BBI, IfcvtKind Kind) {$/;"	f	class:IfConverter
IfConverter	CodeGen/IfConversion.cpp	/^    IfConverter() : MachineFunctionPass(ID), FnNum(-1) {$/;"	f	class:__anon99::IfConverter
IfConverter	CodeGen/IfConversion.cpp	/^  class IfConverter : public MachineFunctionPass {$/;"	c	namespace:__anon99	file:
IfConverterID	CodeGen/IfConversion.cpp	/^char &llvm::IfConverterID = IfConverter::ID;$/;"	m	class:llvm	file:
IfcvtKind	CodeGen/IfConversion.cpp	/^    enum IfcvtKind {$/;"	g	class:__anon99::IfConverter	file:
IfcvtToken	CodeGen/IfConversion.cpp	/^      IfcvtToken(BBInfo &b, IfcvtKind k, bool s, unsigned d, unsigned d2 = 0)$/;"	f	struct:__anon99::IfConverter::IfcvtToken
IfcvtToken	CodeGen/IfConversion.cpp	/^    struct IfcvtToken {$/;"	s	class:__anon99::IfConverter	file:
IfcvtTokenCmp	CodeGen/IfConversion.cpp	/^    static bool IfcvtTokenCmp(IfcvtToken *C1, IfcvtToken *C2) {$/;"	f	class:__anon99::IfConverter	file:
IgnoreNodeResults	CodeGen/SelectionDAG/LegalizeTypes.h	/^  bool IgnoreNodeResults(SDNode *N) const {$/;"	f	class:llvm::DAGTypeLegalizer
IgnoreStall	Target/ARM/MLxExpansionPass.cpp	/^    SmallPtrSet<MachineInstr*, 4> IgnoreStall;$/;"	m	struct:__anon301::MLxExpansion	file:
Imm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Imm;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon277	file:
Imm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Imm;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon280	file:
Imm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } Imm;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon274	file:
Imm	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    } Imm;$/;"	m	union:__anon446::MBlazeOperand::__anon447	typeref:struct:__anon446::MBlazeOperand::__anon447::__anon450	file:
Imm	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    } Imm;$/;"	m	union:__anon423::MipsOperand::__anon424	typeref:struct:__anon423::MipsOperand::__anon424::__anon427	file:
Imm	Target/X86/AsmParser/X86AsmParser.cpp	/^    } Imm;$/;"	m	union:__anon336::X86Operand::__anon337	typeref:struct:__anon336::X86Operand::__anon337::__anon340	file:
Imm	Transforms/Scalar/LoopStrengthReduce.cpp	/^  int64_t Imm;$/;"	m	struct:__anon519::WorkItem	file:
Imm16	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Imm16      = 3 << ImmShift,$/;"	e	enum:llvm::X86II::__anon350
Imm16PCRel	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Imm16PCRel = 4 << ImmShift,$/;"	e	enum:llvm::X86II::__anon350
Imm1Limit	Target/ARM/Thumb2SizeReduction.cpp	/^    uint8_t  Imm1Limit;    \/\/ Limit of immediate field (bits)$/;"	m	struct:__anon300::ReduceEntry	file:
Imm2Limit	Target/ARM/Thumb2SizeReduction.cpp	/^    uint8_t  Imm2Limit;    \/\/ Limit of immediate field when it's two-address$/;"	m	struct:__anon300::ReduceEntry	file:
Imm32	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Imm32      = 5 << ImmShift,$/;"	e	enum:llvm::X86II::__anon350
Imm32PCRel	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Imm32PCRel = 6 << ImmShift,$/;"	e	enum:llvm::X86II::__anon350
Imm64	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Imm64      = 7 << ImmShift,$/;"	e	enum:llvm::X86II::__anon350
Imm8	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Imm8       = 1 << ImmShift,$/;"	e	enum:llvm::X86II::__anon350
Imm8PCRel	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Imm8PCRel  = 2 << ImmShift,$/;"	e	enum:llvm::X86II::__anon350
ImmBranch	Target/ARM/ARMConstantIslandPass.cpp	/^      ImmBranch(MachineInstr *mi, unsigned maxdisp, bool cond, int ubr)$/;"	f	struct:__anon310::ARMConstantIslands::ImmBranch
ImmBranch	Target/ARM/ARMConstantIslandPass.cpp	/^    struct ImmBranch {$/;"	s	class:__anon310::ARMConstantIslands	file:
ImmBranches	Target/ARM/ARMConstantIslandPass.cpp	/^    std::vector<ImmBranch> ImmBranches;$/;"	m	class:__anon310::ARMConstantIslands	file:
ImmCost	Transforms/Scalar/LoopStrengthReduce.cpp	/^  unsigned ImmCost;$/;"	m	class:__anon515::Cost	file:
ImmHiShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ImmHiShift     = 8,$/;"	e	enum:llvm::ARMII::__anon288
ImmMask	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    ImmMask    = 7 << ImmShift,$/;"	e	enum:llvm::X86II::__anon350
ImmOpnd	Target/Mips/MipsAnalyzeImmediate.h	/^      unsigned Opc, ImmOpnd;$/;"	m	struct:llvm::MipsAnalyzeImmediate::Inst
ImmShift	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    ImmShift = REXShift + 1,$/;"	e	enum:llvm::X86II::__anon350
ImmToIdxMap	Target/PowerPC/PPCRegisterInfo.h	/^  std::map<unsigned, unsigned> ImmToIdxMap;$/;"	m	class:llvm::PPCRegisterInfo
ImmVal	Target/Hexagon/HexagonHardwareLoops.cpp	/^      int64_t ImmVal;$/;"	m	union:__anon408::CountValue::Values	file:
ImmVal	Target/PowerPC/PPCCTRLoops.cpp	/^      int64_t ImmVal;$/;"	m	union:__anon325::CountValue::Values	file:
Immediate	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    Immediate,$/;"	e	enum:__anon446::MBlazeOperand::KindTy	file:
Immediate	Target/X86/AsmParser/X86AsmParser.cpp	/^    Immediate,$/;"	e	enum:__anon336::X86Operand::KindTy	file:
ImpDefs	CodeGen/PHIElimination.cpp	/^    SmallPtrSet<MachineInstr*, 4> ImpDefs;$/;"	m	class:__anon164::PHIElimination	file:
ImplementSolution	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::ImplementSolution(const SmallVectorImpl<const Formula *> &Solution,$/;"	f	class:LSRInstance
Implementations	VMCore/PassRegistry.cpp	/^    SmallPtrSet<const PassInfo *, 8> Implementations;$/;"	m	struct:__anon607::PassRegistryImpl::AnalysisGroupInfo	file:
ImplicitVector	Transforms/Scalar/ScalarReplAggregates.cpp	/^    ImplicitVector,$/;"	e	enum:__anon522::ConvertToScalarInfo::__anon523	file:
ImpreciseReleaseMDKind	Transforms/Scalar/ObjCARC.cpp	/^    unsigned ImpreciseReleaseMDKind;$/;"	m	class:__anon508::ObjCARCOpt	file:
In	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
In64BitMode	Target/X86/X86Subtarget.h	/^  bool In64BitMode;$/;"	m	class:llvm::X86Subtarget
InArgFIRange	Target/Mips/MipsMachineFunction.h	/^  std::pair<int, int> InArgFIRange;$/;"	m	class:llvm::MipsFunctionInfo
InBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static bool InBlock(const Value *V, const BasicBlock *BB) {$/;"	f	file:
InConstantPool	Target/ARM/ARMAsmPrinter.h	/^  bool InConstantPool;$/;"	m	class:llvm::ARMAsmPrinter
InMips16Mode	Target/Mips/MipsSubtarget.h	/^  bool InMips16Mode;$/;"	m	class:llvm::MipsSubtarget
InThumbMode	Target/ARM/ARMSubtarget.h	/^  bool InThumbMode;$/;"	m	class:llvm::ARMSubtarget
IncExpr	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const SCEV *IncExpr;$/;"	m	struct:__anon518::IVInc	file:
IncludeDirectories	DebugInfo/DWARFDebugLine.h	/^    std::vector<const char*> IncludeDirectories;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
IncludeFile	Support/IncludeFile.cpp	/^IncludeFile::IncludeFile(const void*) {}$/;"	f	class:IncludeFile
IncorporateFunctionInfoGlobalBBIDs	Bitcode/Writer/ValueEnumerator.cpp	/^static void IncorporateFunctionInfoGlobalBBIDs(const Function *F,$/;"	f	file:
IncorporateType	Analysis/IPA/FindUsedTypes.cpp	/^void FindUsedTypes::IncorporateType(Type *Ty) {$/;"	f	class:FindUsedTypes
IncorporateValue	Analysis/IPA/FindUsedTypes.cpp	/^void FindUsedTypes::IncorporateValue(const Value *V) {$/;"	f	class:FindUsedTypes
IncorporateWeight	Transforms/Scalar/Reassociate.cpp	/^static void IncorporateWeight(APInt &LHS, const APInt &RHS, unsigned Opcode) {$/;"	f	file:
IncrementCounterInBlock	Transforms/Instrumentation/ProfilingUtils.cpp	/^void llvm::IncrementCounterInBlock(BasicBlock *BB, unsigned CounterNum,$/;"	f	class:llvm
Incs	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallVector<IVInc,1> Incs;$/;"	m	struct:__anon518::IVChain	file:
IndVarSimplify	Transforms/Scalar/IndVarSimplify.cpp	/^    IndVarSimplify() : LoopPass(ID), LI(0), SE(0), DT(0), TD(0),$/;"	f	class:__anon495::IndVarSimplify
IndVarSimplify	Transforms/Scalar/IndVarSimplify.cpp	/^  class IndVarSimplify : public LoopPass {$/;"	c	namespace:__anon495	file:
Indent	Support/YAMLParser.cpp	/^  int Indent;$/;"	m	class:llvm::yaml::Scanner	file:
IndentCount	CodeGen/AsmPrinter/DIE.h	/^    mutable unsigned IndentCount;$/;"	m	class:llvm::DIE
Indents	Support/YAMLParser.cpp	/^  SmallVector<int, 4> Indents;$/;"	m	class:llvm::yaml::Scanner	file:
Index	CodeGen/MachineModuleInfo.cpp	/^    unsigned Index; \/\/ The index in BBCallbacks for the BasicBlock.$/;"	m	struct:llvm::MMIAddrLabelMap::AddrLabelSymEntry	file:
Index	CodeGen/SelectionDAG/SelectionDAG.cpp	/^    unsigned Index;$/;"	m	struct:__anon74::UseMemo	file:
Index	MC/WinCOFFObjectWriter.cpp	/^  int              Index;$/;"	m	class:__anon222::COFFSymbol	file:
IndexMode	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  enum IndexMode {$/;"	g	namespace:llvm::ARMII
IndexModeMask	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    IndexModeMask  = 3 << IndexModeShift,$/;"	e	enum:llvm::ARMII::__anon288
IndexModeNone	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    IndexModeNone  = 0,$/;"	e	enum:llvm::ARMII::IndexMode
IndexModePost	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    IndexModePost  = 2,$/;"	e	enum:llvm::ARMII::IndexMode
IndexModePre	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    IndexModePre   = 1,$/;"	e	enum:llvm::ARMII::IndexMode
IndexModeShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    IndexModeShift = 5,$/;"	e	enum:llvm::ARMII::__anon288
IndexModeUpd	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    IndexModeUpd   = 3$/;"	e	enum:llvm::ARMII::IndexMode
IndexReg	Target/X86/AsmParser/X86AsmParser.cpp	/^      unsigned IndexReg;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon341	file:
IndexReg	Target/X86/X86ISelDAGToDAG.cpp	/^    SDValue IndexReg;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
IndexReg	Target/X86/X86InstrBuilder.h	/^  unsigned IndexReg;$/;"	m	struct:llvm::X86AddressMode
IndexTyDie	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DIE *IndexTyDie;$/;"	m	class:llvm::CompileUnit
IndexedLane	Target/ARM/AsmParser/ARMAsmParser.cpp	/^enum VectorLaneTy { NoLanes, AllLanes, IndexedLane };$/;"	e	enum:__anon259::VectorLaneTy	file:
Indexes	CodeGen/InterferenceCache.h	/^    SlotIndexes *Indexes;$/;"	m	class:llvm::InterferenceCache::Entry
Indexes	CodeGen/LiveRangeCalc.h	/^  SlotIndexes *Indexes;$/;"	m	class:llvm::LiveRangeCalc
Indexes	CodeGen/MachineVerifier.cpp	/^    SlotIndexes *Indexes;$/;"	m	struct:__anon139::MachineVerifier	file:
Indexes	CodeGen/RegAllocGreedy.cpp	/^  SlotIndexes *Indexes;$/;"	m	class:__anon158::RAGreedy	file:
Indexes	CodeGen/RegisterCoalescer.cpp	/^  SlotIndexes *Indexes;$/;"	m	class:__anon115::JoinVals	file:
Indexes	CodeGen/StackColoring.cpp	/^  SlotIndexes *Indexes;$/;"	m	class:__anon113::StackColoring	file:
Indexes	CodeGen/TwoAddressInstructionPass.cpp	/^    SlotIndexes *Indexes;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
Indexes	CodeGen/VirtRegMap.cpp	/^  SlotIndexes *Indexes;$/;"	m	class:__anon97::VirtRegRewriter	file:
Indices	Transforms/Scalar/SROA.cpp	/^    SmallVector<unsigned, 4> Indices;$/;"	m	class:__anon562::AggLoadStoreRewriter::OpSplitter	file:
Indices	VMCore/ConstantsContext.h	/^  const SmallVector<unsigned, 4> Indices;$/;"	m	class:llvm::ExtractValueConstantExpr
Indices	VMCore/ConstantsContext.h	/^  const SmallVector<unsigned, 4> Indices;$/;"	m	class:llvm::InsertValueConstantExpr
IndicesVector	Transforms/IPO/ArgumentPromotion.cpp	/^    typedef std::vector<uint64_t> IndicesVector;$/;"	t	struct:__anon602::ArgPromotion	file:
IndirectAddr	Target/CellSPU/SPUISelLowering.h	/^      IndirectAddr,             \/\/\/< D-Form "imm($r)" and X-form "$r($r)"$/;"	e	enum:llvm::SPUISD::NodeType
IndirectBrInst	VMCore/Instructions.cpp	/^IndirectBrInst::IndirectBrInst(Value *Address, unsigned NumCases,$/;"	f	class:IndirectBrInst
IndirectBrInst	VMCore/Instructions.cpp	/^IndirectBrInst::IndirectBrInst(const IndirectBrInst &IBI)$/;"	f	class:IndirectBrInst
IndirectGlobals	Analysis/IPA/GlobalsModRef.cpp	/^    std::set<const GlobalValue*> IndirectGlobals;$/;"	m	class:__anon1::GlobalsModRef	file:
Induction	Transforms/Vectorize/LoopVectorize.cpp	/^  PHINode *Induction;$/;"	m	class:__anon605::LoopVectorizationLegality	file:
Induction	Transforms/Vectorize/LoopVectorize.cpp	/^  PHINode *Induction;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
InferPointerInfo	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static MachinePointerInfo InferPointerInfo(SDValue Ptr, SDValue OffsetOp) {$/;"	f	file:
InferPointerInfo	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static MachinePointerInfo InferPointerInfo(SDValue Ptr, int64_t Offset = 0) {$/;"	f	file:
InferPtrAlignment	CodeGen/SelectionDAG/SelectionDAG.cpp	/^unsigned SelectionDAG::InferPtrAlignment(SDValue Ptr) const {$/;"	f	class:SelectionDAG
InflateRegs	CodeGen/RegisterCoalescer.cpp	/^    SmallVector<unsigned, 8> InflateRegs;$/;"	m	class:__anon114::RegisterCoalescer	file:
InfoSection	DebugInfo/DWARFContext.h	/^  StringRef InfoSection;$/;"	m	class:llvm::DWARFContextInMemory
Init	VMCore/Instructions.cpp	/^void AtomicCmpXchgInst::Init(Value *Ptr, Value *Cmp, Value *NewVal,$/;"	f	class:AtomicCmpXchgInst
Init	VMCore/Instructions.cpp	/^void AtomicRMWInst::Init(BinOp Operation, Value *Ptr, Value *Val,$/;"	f	class:AtomicRMWInst
InitAbbreviationsSetSize	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static const unsigned InitAbbreviationsSetSize = 9; \/\/ log2(512)$/;"	v	file:
InitCOFFMCObjectFileInfo	MC/MCObjectFileInfo.cpp	/^void MCObjectFileInfo::InitCOFFMCObjectFileInfo(Triple T) {$/;"	f	class:MCObjectFileInfo
InitCSEMap	CodeGen/MachineLICM.cpp	/^void MachineLICM::InitCSEMap(MachineBasicBlock *BB) {$/;"	f	class:MachineLICM
InitCmpLibcallCCs	CodeGen/SelectionDAG/TargetLowering.cpp	/^static void InitCmpLibcallCCs(ISD::CondCode *CCs) {$/;"	f	file:
InitDAGTopologicalSorting	CodeGen/ScheduleDAG.cpp	/^void ScheduleDAGTopologicalSort::InitDAGTopologicalSorting() {$/;"	f	class:ScheduleDAGTopologicalSort
InitEHFrameSection	MC/MCObjectFileInfo.cpp	/^void MCObjectFileInfo::InitEHFrameSection() {$/;"	f	class:MCObjectFileInfo
InitELFMCObjectFileInfo	MC/MCObjectFileInfo.cpp	/^void MCObjectFileInfo::InitELFMCObjectFileInfo(Triple T) {$/;"	f	class:MCObjectFileInfo
InitFromPred	Transforms/Scalar/ObjCARC.cpp	/^void BBState::InitFromPred(const BBState &Other) {$/;"	f	class:BBState
InitFromSucc	Transforms/Scalar/ObjCARC.cpp	/^void BBState::InitFromSucc(const BBState &Other) {$/;"	f	class:BBState
InitGlobalBaseReg	Target/Mips/MipsISelDAGToDAG.cpp	/^void MipsDAGToDAGISel::InitGlobalBaseReg(MachineFunction &MF) {$/;"	f	class:MipsDAGToDAGISel
InitLLVM2SEHRegisterMapping	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^void X86_MC::InitLLVM2SEHRegisterMapping(MCRegisterInfo *MRI) {$/;"	f	class:X86_MC
InitLazyStream	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::InitLazyStream() {$/;"	f	class:BitcodeReader
InitLibcallCallingConvs	CodeGen/SelectionDAG/TargetLowering.cpp	/^static void InitLibcallCallingConvs(CallingConv::ID *CCs) {$/;"	f	file:
InitLibcallNames	CodeGen/SelectionDAG/TargetLowering.cpp	/^static void InitLibcallNames(const char **Names) {$/;"	f	file:
InitMCCodeGenInfo	MC/MCCodeGenInfo.cpp	/^void MCCodeGenInfo::InitMCCodeGenInfo(Reloc::Model RM, CodeModel::Model CM,$/;"	f	class:MCCodeGenInfo
InitMCObjectFileInfo	MC/MCObjectFileInfo.cpp	/^void MCObjectFileInfo::InitMCObjectFileInfo(StringRef TT, Reloc::Model relocm,$/;"	f	class:MCObjectFileInfo
InitMCProcessorInfo	MC/MCSubtargetInfo.cpp	/^MCSubtargetInfo::InitMCProcessorInfo(StringRef CPU, StringRef FS) {$/;"	f	class:MCSubtargetInfo
InitMCSubtargetInfo	MC/MCSubtargetInfo.cpp	/^MCSubtargetInfo::InitMCSubtargetInfo(StringRef TT, StringRef CPU, StringRef FS,$/;"	f	class:MCSubtargetInfo
InitMachOMCObjectFileInfo	MC/MCObjectFileInfo.cpp	/^void MCObjectFileInfo::InitMachOMCObjectFileInfo(Triple T) {$/;"	f	class:MCObjectFileInfo
InitNodeNumDefs	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::RegDefIter::InitNodeNumDefs() {$/;"	f	class:ScheduleDAGSDNodes::RegDefIter
InitNotUnderValgrind	Support/Valgrind.cpp	/^static bool InitNotUnderValgrind() {$/;"	f	file:
InitNumRegDefsLeft	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::InitNumRegDefsLeft(SUnit *SU) {$/;"	f	class:ScheduleDAGSDNodes
InitOptimizations	Transforms/Scalar/SimplifyLibCalls.cpp	/^void SimplifyLibCalls::InitOptimizations() {$/;"	f	class:SimplifyLibCalls
InitPredRedefs	CodeGen/IfConversion.cpp	/^static void InitPredRedefs(MachineBasicBlock *BB, SmallSet<unsigned,4> &Redefs,$/;"	f	file:
InitRegPressure	CodeGen/MachineLICM.cpp	/^void MachineLICM::InitRegPressure(MachineBasicBlock *BB) {$/;"	f	class:MachineLICM
InitRegisterMap	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  void InitRegisterMap(const MCRegisterInfo *info) {$/;"	f	class:__anon258::ARMBaseAsmLexer
InitRegisterMap	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^    void InitRegisterMap(const MCRegisterInfo *info) {$/;"	f	class:__anon453::MBlazeBaseAsmLexer
InitSections	MC/MCAsmStreamer.cpp	/^  virtual void InitSections() {$/;"	f	class:__anon214::MCAsmStreamer
InitSections	MC/MCELFStreamer.cpp	/^void MCELFStreamer::InitSections() {$/;"	f	class:MCELFStreamer
InitSections	MC/MCMachOStreamer.cpp	/^void MCMachOStreamer::InitSections() {$/;"	f	class:MCMachOStreamer
InitSections	MC/MCNullStreamer.cpp	/^    virtual void InitSections() {$/;"	f	class:__anon217::MCNullStreamer
InitSections	MC/MCPureStreamer.cpp	/^void MCPureStreamer::InitSections() {$/;"	f	class:MCPureStreamer
InitSections	MC/WinCOFFStreamer.cpp	/^void WinCOFFStreamer::InitSections() {$/;"	f	class:WinCOFFStreamer
InitStream	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::InitStream() {$/;"	f	class:BitcodeReader
InitStreamFromBuffer	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::InitStreamFromBuffer() {$/;"	f	class:BitcodeReader
InitialMatch	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Formula::InitialMatch(const SCEV *S, Loop *L, ScalarEvolution &SE) {$/;"	f	class:Formula
Initialize	CodeGen/MachineSSAUpdater.cpp	/^void MachineSSAUpdater::Initialize(unsigned V) {$/;"	f	class:MachineSSAUpdater
Initialize	MC/MCParser/AsmParser.cpp	/^  virtual void Initialize(MCAsmParser &Parser) {$/;"	f	class:__anon211::GenericAsmParser
Initialize	MC/MCParser/COFFAsmParser.cpp	/^  virtual void Initialize(MCAsmParser &Parser) {$/;"	f	class:__anon210::COFFAsmParser	file:
Initialize	MC/MCParser/DarwinAsmParser.cpp	/^  virtual void Initialize(MCAsmParser &Parser) {$/;"	f	class:__anon208::DarwinAsmParser
Initialize	MC/MCParser/ELFAsmParser.cpp	/^  virtual void Initialize(MCAsmParser &Parser) {$/;"	f	class:__anon209::ELFAsmParser
Initialize	MC/MCParser/MCAsmParserExtension.cpp	/^void MCAsmParserExtension::Initialize(MCAsmParser &Parser) {$/;"	f	class:MCAsmParserExtension
Initialize	Target/ARM/ARMJITInfo.h	/^    void Initialize(const MachineFunction &MF, bool isPIC) {$/;"	f	class:llvm::ARMJITInfo
Initialize	Target/ARM/ARMTargetObjectFile.cpp	/^void ARMElfTargetObjectFile::Initialize(MCContext &Ctx,$/;"	f	class:ARMElfTargetObjectFile
Initialize	Target/Hexagon/HexagonTargetObjectFile.cpp	/^void HexagonTargetObjectFile::Initialize(MCContext &Ctx,$/;"	f	class:HexagonTargetObjectFile
Initialize	Target/MBlaze/MBlazeTargetObjectFile.cpp	/^Initialize(MCContext &Ctx, const TargetMachine &TM) {$/;"	f	class:MBlazeTargetObjectFile
Initialize	Target/Mips/MipsJITInfo.h	/^    void Initialize(const MachineFunction &MF, bool isPIC) {$/;"	f	class:llvm::MipsJITInfo
Initialize	Target/Mips/MipsMCInstLower.cpp	/^void MipsMCInstLower::Initialize(Mangler *M, MCContext *C) {$/;"	f	class:MipsMCInstLower
Initialize	Target/Mips/MipsTargetObjectFile.cpp	/^void MipsTargetObjectFile::Initialize(MCContext &Ctx, const TargetMachine &TM){$/;"	f	class:MipsTargetObjectFile
Initialize	Target/NVPTX/NVPTXTargetObjectFile.h	/^  virtual void Initialize(MCContext &ctx, const TargetMachine &TM) {$/;"	f	class:llvm::NVPTXTargetObjectFile
Initialize	Target/TargetLoweringObjectFile.cpp	/^void TargetLoweringObjectFile::Initialize(MCContext &ctx,$/;"	f	class:TargetLoweringObjectFile
Initialize	Target/X86/X86TargetObjectFile.cpp	/^X86LinuxTargetObjectFile::Initialize(MCContext &Ctx, const TargetMachine &TM) {$/;"	f	class:X86LinuxTargetObjectFile
Initialize	Target/XCore/XCoreTargetObjectFile.cpp	/^void XCoreTargetObjectFile::Initialize(MCContext &Ctx, const TargetMachine &TM){$/;"	f	class:XCoreTargetObjectFile
Initialize	Transforms/Utils/SSAUpdater.cpp	/^void SSAUpdater::Initialize(Type *Ty, StringRef Name) {$/;"	f	class:SSAUpdater
InitializeAliasAnalysis	Analysis/AliasAnalysis.cpp	/^void AliasAnalysis::InitializeAliasAnalysis(Pass *P) {$/;"	f	class:AliasAnalysis
InitializeELF	CodeGen/TargetLoweringObjectFileImpl.cpp	/^TargetLoweringObjectFileELF::InitializeELF(bool UseInitArray_) {$/;"	f	class:TargetLoweringObjectFileELF
InitializeMemory	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::InitializeMemory(const Constant *Init, void *Addr) {$/;"	f	class:ExecutionEngine
InitializeSlots	CodeGen/StackSlotColoring.cpp	/^void StackSlotColoring::InitializeSlots() {$/;"	f	class:StackSlotColoring
InlineAsm	VMCore/InlineAsm.cpp	/^InlineAsm::InlineAsm(PointerType *Ty, const std::string &asmString,$/;"	f	class:InlineAsm
InlineAsmDiagContext	VMCore/LLVMContextImpl.h	/^  void *InlineAsmDiagContext;$/;"	m	class:llvm::LLVMContextImpl
InlineAsmDiagHandler	VMCore/LLVMContextImpl.h	/^  LLVMContext::InlineAsmDiagHandlerTy InlineAsmDiagHandler;$/;"	m	class:llvm::LLVMContextImpl
InlineAsmKeyType	VMCore/ConstantsContext.h	/^  InlineAsmKeyType(StringRef AsmString,$/;"	f	struct:llvm::InlineAsmKeyType
InlineAsmKeyType	VMCore/ConstantsContext.h	/^struct InlineAsmKeyType {$/;"	s	namespace:llvm
InlineAsms	VMCore/LLVMContextImpl.h	/^                    InlineAsm> InlineAsms;$/;"	m	class:llvm::LLVMContextImpl
InlineCallIfPossible	Transforms/IPO/Inliner.cpp	/^static bool InlineCallIfPossible(CallSite CS, InlineFunctionInfo &IFI,$/;"	f	file:
InlineCodeString	Support/Dwarf.cpp	/^const char *llvm::dwarf::InlineCodeString(unsigned Code) {$/;"	f	class:llvm::dwarf
InlineFunction	Transforms/Utils/InlineFunction.cpp	/^bool llvm::InlineFunction(CallInst *CI, InlineFunctionInfo &IFI,$/;"	f	class:llvm
InlineFunction	Transforms/Utils/InlineFunction.cpp	/^bool llvm::InlineFunction(CallSite CS, InlineFunctionInfo &IFI,$/;"	f	class:llvm
InlineFunction	Transforms/Utils/InlineFunction.cpp	/^bool llvm::InlineFunction(InvokeInst *II, InlineFunctionInfo &IFI,$/;"	f	class:llvm
InlineHistoryIncludes	Transforms/IPO/Inliner.cpp	/^static bool InlineHistoryIncludes(Function *F, int InlineHistoryID,$/;"	f	file:
InlineInfo	CodeGen/AsmPrinter/DwarfDebug.h	/^  DenseMap<const MDNode *, SmallVector<InlineInfoLabels, 4> > InlineInfo;$/;"	m	class:llvm::DwarfDebug
InlineInfoLabels	CodeGen/AsmPrinter/DwarfDebug.h	/^  typedef std::pair<const MCSymbol *, DIE *> InlineInfoLabels;$/;"	t	class:llvm::DwarfDebug
InlineSpiller	CodeGen/InlineSpiller.cpp	/^  InlineSpiller(MachineFunctionPass &pass,$/;"	f	class:__anon155::InlineSpiller
InlineSpiller	CodeGen/InlineSpiller.cpp	/^class InlineSpiller : public Spiller {$/;"	c	namespace:__anon155	file:
InlinedArrayAllocasTy	Transforms/IPO/Inliner.cpp	/^InlinedArrayAllocasTy;$/;"	t	file:
InlinedChain	DebugInfo/DWARFDebugInfoEntry.h	/^  typedef SmallVector<DWARFDebugInfoEntryMinimal, 4> InlinedChain;$/;"	t	class:llvm::DWARFDebugInfoEntryMinimal
InlinedSPNodes	CodeGen/AsmPrinter/DwarfDebug.h	/^  SmallVector<const MDNode *, 4> InlinedSPNodes;$/;"	m	class:llvm::DwarfDebug
InlinedSubprogramDIEs	CodeGen/AsmPrinter/DwarfDebug.h	/^  SmallPtrSet<DIE *, 4> InlinedSubprogramDIEs;$/;"	m	class:llvm::DwarfDebug
Inliner	Transforms/IPO/Inliner.cpp	/^Inliner::Inliner(char &ID) $/;"	f	class:Inliner
Inliner	Transforms/IPO/Inliner.cpp	/^Inliner::Inliner(char &ID, int Threshold, bool InsertLifetime)$/;"	f	class:Inliner
InnerEHValuesPHI	Transforms/Utils/InlineFunction.cpp	/^    PHINode *InnerEHValuesPHI;   \/\/\/< PHI for EH values from landingpad insts.$/;"	m	class:__anon468::InvokeInliningInfo	file:
InnerResumeDest	Transforms/Utils/InlineFunction.cpp	/^    BasicBlock *InnerResumeDest; \/\/\/< Destination for the callee's resume.$/;"	m	class:__anon468::InvokeInliningInfo	file:
InputBuffer	Support/YAMLParser.cpp	/^  MemoryBuffer *InputBuffer;$/;"	m	class:llvm::yaml::Scanner	file:
InputChain	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  SDValue InputChain, InputGlue;$/;"	m	struct:__anon71::MatchScope	file:
InputGlue	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  SDValue InputChain, InputGlue;$/;"	m	struct:__anon71::MatchScope	file:
Ins	Target/Mips/MipsISelLowering.h	/^      Ins,$/;"	e	enum:llvm::MipsISD::NodeType
Insert128BitVector	Target/X86/X86ISelLowering.cpp	/^static SDValue Insert128BitVector(SDValue Result, SDValue Vec,$/;"	f	file:
InsertAfter	CodeGen/EarlyIfConversion.cpp	/^  SmallPtrSet<MachineInstr*, 8> InsertAfter;$/;"	m	class:__anon91::SSAIfConv	file:
InsertBinop	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::InsertBinop(Instruction::BinaryOps Opcode,$/;"	f	class:SCEVExpander
InsertBranch	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::InsertBranch(MachineBasicBlock &MBB, MachineBasicBlock *TBB,$/;"	f	class:ARMBaseInstrInfo
InsertBranch	Target/CellSPU/SPUInstrInfo.cpp	/^SPUInstrInfo::InsertBranch(MachineBasicBlock &MBB, MachineBasicBlock *TBB,$/;"	f	class:SPUInstrInfo
InsertBranch	Target/Hexagon/HexagonInstrInfo.cpp	/^HexagonInstrInfo::InsertBranch(MachineBasicBlock &MBB,MachineBasicBlock *TBB,$/;"	f	class:HexagonInstrInfo
InsertBranch	Target/MBlaze/MBlazeInstrInfo.cpp	/^InsertBranch(MachineBasicBlock &MBB, MachineBasicBlock *TBB,$/;"	f	class:MBlazeInstrInfo
InsertBranch	Target/MSP430/MSP430InstrInfo.cpp	/^MSP430InstrInfo::InsertBranch(MachineBasicBlock &MBB, MachineBasicBlock *TBB,$/;"	f	class:MSP430InstrInfo
InsertBranch	Target/Mips/MipsInstrInfo.cpp	/^InsertBranch(MachineBasicBlock &MBB, MachineBasicBlock *TBB,$/;"	f	class:MipsInstrInfo
InsertBranch	Target/NVPTX/NVPTXInstrInfo.cpp	/^NVPTXInstrInfo::InsertBranch(MachineBasicBlock &MBB, MachineBasicBlock *TBB,$/;"	f	class:NVPTXInstrInfo
InsertBranch	Target/PowerPC/PPCInstrInfo.cpp	/^PPCInstrInfo::InsertBranch(MachineBasicBlock &MBB, MachineBasicBlock *TBB,$/;"	f	class:PPCInstrInfo
InsertBranch	Target/Sparc/SparcInstrInfo.cpp	/^SparcInstrInfo::InsertBranch(MachineBasicBlock &MBB,MachineBasicBlock *TBB,$/;"	f	class:SparcInstrInfo
InsertBranch	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::InsertBranch(MachineBasicBlock &MBB, MachineBasicBlock *TBB,$/;"	f	class:X86InstrInfo
InsertBranch	Target/XCore/XCoreInstrInfo.cpp	/^XCoreInstrInfo::InsertBranch(MachineBasicBlock &MBB,MachineBasicBlock *TBB,$/;"	f	class:XCoreInstrInfo
InsertCopiesAndMoveSuccs	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^void ScheduleDAGFast::InsertCopiesAndMoveSuccs(SUnit *SU, unsigned Reg,$/;"	f	class:ScheduleDAGFast
InsertCopiesAndMoveSuccs	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::InsertCopiesAndMoveSuccs(SUnit *SU, unsigned Reg,$/;"	f	class:ScheduleDAGRRList
InsertCopiesForPHI	CodeGen/StrongPHIElimination.cpp	/^void StrongPHIElimination::InsertCopiesForPHI(MachineInstr *PHI,$/;"	f	class:StrongPHIElimination
InsertDAGNode	Target/X86/X86ISelDAGToDAG.cpp	/^static void InsertDAGNode(SelectionDAG &DAG, SDValue Pos, SDValue N) {$/;"	f	file:
InsertElementConstantExpr	VMCore/ConstantsContext.h	/^  InsertElementConstantExpr(Constant *C1, Constant *C2, Constant *C3)$/;"	f	class:llvm::InsertElementConstantExpr
InsertElementConstantExpr	VMCore/ConstantsContext.h	/^class InsertElementConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
InsertElementInst	VMCore/Instructions.cpp	/^InsertElementInst::InsertElementInst(Value *Vec, Value *Elt, Value *Index,$/;"	f	class:InsertElementInst
InsertFenceForAtomic	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static SDValue InsertFenceForAtomic(SDValue Chain, AtomicOrdering Order,$/;"	f	file:
InsertFormula	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool LSRInstance::InsertFormula(LSRUse &LU, unsigned LUIdx, const Formula &F) {$/;"	f	class:LSRInstance
InsertFormula	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool LSRUse::InsertFormula(const Formula &F) {$/;"	f	class:LSRUse
InsertHelper	Transforms/InstCombine/InstCombine.h	/^  void InsertHelper(Instruction *I, const Twine &Name,$/;"	f	class:llvm::InstCombineIRInserter
InsertITInstructions	Target/ARM/Thumb2ITBlockPass.cpp	/^bool Thumb2ITBlockPass::InsertITInstructions(MachineBasicBlock &MBB) {$/;"	f	class:Thumb2ITBlockPass
InsertInitialFormula	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::InsertInitialFormula(const SCEV *S, LSRUse &LU, size_t LUIdx) {$/;"	f	class:LSRInstance
InsertLDR_STR	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static void InsertLDR_STR(MachineBasicBlock &MBB,$/;"	f	file:
InsertLabel	CodeGen/GCStrategy.cpp	/^MCSymbol *GCMachineCodeAnalysis::InsertLabel(MachineBasicBlock &MBB,$/;"	f	class:GCMachineCodeAnalysis
InsertNewDef	CodeGen/MachineSSAUpdater.cpp	/^MachineInstr *InsertNewDef(unsigned Opcode,$/;"	f	file:
InsertNewInstBefore	Transforms/InstCombine/InstCombine.h	/^  Instruction *InsertNewInstBefore(Instruction *New, Instruction &Old) {$/;"	f	class:llvm::InstCombiner
InsertNewInstWith	Transforms/InstCombine/InstCombine.h	/^  Instruction *InsertNewInstWith(Instruction *New, Instruction &Old) {$/;"	f	class:llvm::InstCombiner
InsertNode	Support/FoldingSet.cpp	/^void FoldingSetImpl::InsertNode(Node *N, void *InsertPos) {$/;"	f	class:FoldingSetImpl
InsertNoopCastOfTo	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::InsertNoopCastOfTo(Value *V, Type *Ty) {$/;"	f	class:SCEVExpander
InsertOrGetItem	VMCore/ConstantsContext.h	/^  typename MapTy::iterator InsertOrGetItem(std::pair<MapKey, ConstantClass *>$/;"	f	class:llvm::ConstantUniqueMap
InsertPHITranslatedSubExpr	Analysis/PHITransAddr.cpp	/^InsertPHITranslatedSubExpr(Value *InVal, BasicBlock *CurBB,$/;"	f	class:PHITransAddr
InsertPos	CodeGen/SelectionDAG/InstrEmitter.h	/^  MachineBasicBlock::iterator InsertPos;$/;"	m	class:llvm::InstrEmitter
InsertPos	Transforms/Scalar/BasicBlockPlacement.cpp	/^    Function::iterator InsertPos;$/;"	m	struct:__anon528::BlockPlacement	file:
InsertPreheaderForLoop	Transforms/Utils/LoopSimplify.cpp	/^BasicBlock *LoopSimplify::InsertPreheaderForLoop(Loop *L) {$/;"	f	class:LoopSimplify
InsertProfilingInitCall	Transforms/Instrumentation/ProfilingUtils.cpp	/^void llvm::InsertProfilingInitCall(Function *MainFn, const char *FnName,$/;"	f	class:llvm
InsertProfilingShutdownCall	Transforms/Instrumentation/ProfilingUtils.cpp	/^void llvm::InsertProfilingShutdownCall(Function *Callee, Module *Mod) {$/;"	f	class:llvm
InsertRangeTest	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Value *InstCombiner::InsertRangeTest(Value *V, Constant *Lo, Constant *Hi,$/;"	f	class:InstCombiner
InsertRootInitializers	CodeGen/GCStrategy.cpp	/^bool LowerIntrinsics::InsertRootInitializers(Function &F, AllocaInst **Roots,$/;"	f	class:LowerIntrinsics
InsertStackProtectors	CodeGen/StackProtector.cpp	/^bool StackProtector::InsertStackProtectors() {$/;"	f	class:StackProtector
InsertSupplementalFormula	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::InsertSupplementalFormula(const SCEV *S,$/;"	f	class:LSRInstance
InsertUncondBranch	CodeGen/IfConversion.cpp	/^static void InsertUncondBranch(MachineBasicBlock *BB, MachineBasicBlock *ToBB,$/;"	f	file:
InsertUniqueBackedgeBlock	Transforms/Utils/LoopSimplify.cpp	/^LoopSimplify::InsertUniqueBackedgeBlock(Loop *L, BasicBlock *Preheader) {$/;"	f	class:LoopSimplify
InsertUnwindResumeCalls	CodeGen/DwarfEHPrepare.cpp	/^bool DwarfEHPrepare::InsertUnwindResumeCalls(Function &Fn) {$/;"	f	class:DwarfEHPrepare
InsertVRSaveCode	Target/PowerPC/PPCISelDAGToDAG.cpp	/^void PPCDAGToDAGISel::InsertVRSaveCode(MachineFunction &Fn) {$/;"	f	class:PPCDAGToDAGISel
InsertValueConstantExpr	VMCore/ConstantsContext.h	/^  InsertValueConstantExpr(Constant *Agg, Constant *Val,$/;"	f	class:llvm::InsertValueConstantExpr
InsertValueConstantExpr	VMCore/ConstantsContext.h	/^class InsertValueConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
InsertValueInst	VMCore/Instructions.cpp	/^InsertValueInst::InsertValueInst(const InsertValueInst &IVI)$/;"	f	class:InsertValueInst
InsertedDestCopies	CodeGen/StrongPHIElimination.cpp	/^    DestCopyMap InsertedDestCopies;$/;"	m	class:__anon154::StrongPHIElimination	file:
InsertedPasses	CodeGen/Passes.cpp	/^  SmallVector<std::pair<AnalysisID, AnalysisID>, 4> InsertedPasses;$/;"	m	class:llvm::PassConfigImpl	file:
InsertedSrcCopyMap	CodeGen/StrongPHIElimination.cpp	/^    SrcCopyMap InsertedSrcCopyMap;$/;"	m	class:__anon154::StrongPHIElimination	file:
InsertedSrcCopySet	CodeGen/StrongPHIElimination.cpp	/^    SrcCopySet InsertedSrcCopySet;$/;"	m	class:__anon154::StrongPHIElimination	file:
InsertionPoint	CodeGen/EarlyIfConversion.cpp	/^  MachineBasicBlock::iterator InsertionPoint;$/;"	m	class:__anon91::SSAIfConv	file:
Inst	MC/MCDisassembler/EDInst.h	/^  llvm::MCInst *Inst;$/;"	m	struct:llvm::EDInst
Inst	MC/MCDisassembler/EDOperand.h	/^  const EDInst &Inst;$/;"	m	struct:llvm::EDOperand
Inst	Target/Mips/MipsAnalyzeImmediate.cpp	/^MipsAnalyzeImmediate::Inst::Inst(unsigned O, unsigned I) : Opc(O), ImmOpnd(I) {}$/;"	f	class:MipsAnalyzeImmediate::Inst
Inst	Target/Mips/MipsAnalyzeImmediate.h	/^    struct Inst {$/;"	s	class:llvm::MipsAnalyzeImmediate
Inst	Transforms/InstCombine/InstCombinePHI.cpp	/^  Instruction *Inst;  \/\/ The trunc instruction.$/;"	m	struct:__anon603::PHIUsageRecord	file:
Inst	Transforms/Instrumentation/BoundsChecking.cpp	/^    Instruction *Inst;$/;"	m	struct:__anon493::BoundsChecking	file:
Inst	Transforms/Scalar/EarlyCSE.cpp	/^    Instruction *Inst;$/;"	m	struct:__anon564::SimpleValue	file:
Inst	Transforms/Scalar/EarlyCSE.cpp	/^    Instruction *Inst;$/;"	m	struct:__anon565::CallValue	file:
InstCombineIRInserter	Transforms/InstCombine/InstCombine.h	/^  InstCombineIRInserter(InstCombineWorklist &WL) : Worklist(WL) {}$/;"	f	class:llvm::InstCombineIRInserter
InstCombineIRInserter	Transforms/InstCombine/InstCombine.h	/^class LLVM_LIBRARY_VISIBILITY InstCombineIRInserter $/;"	c	namespace:llvm
InstCombineLoadCast	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^static Instruction *InstCombineLoadCast(InstCombiner &IC, LoadInst &LI,$/;"	f	file:
InstCombineStoreToCast	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^static Instruction *InstCombineStoreToCast(InstCombiner &IC, StoreInst &SI) {$/;"	f	file:
InstCombineWorklist	Transforms/InstCombine/InstCombineWorklist.h	/^  InstCombineWorklist() {}$/;"	f	class:llvm::InstCombineWorklist
InstCombineWorklist	Transforms/InstCombine/InstCombineWorklist.h	/^class LLVM_LIBRARY_VISIBILITY InstCombineWorklist {$/;"	c	namespace:llvm
InstCombiner	Transforms/InstCombine/InstCombine.h	/^  InstCombiner() : FunctionPass(ID), TD(0), Builder(0) {$/;"	f	class:llvm::InstCombiner
InstCombiner	Transforms/InstCombine/InstCombine.h	/^class LLVM_LIBRARY_VISIBILITY InstCombiner$/;"	c	namespace:llvm
InstCount	Analysis/InstCount.cpp	/^    InstCount() : FunctionPass(ID) {$/;"	f	class:__anon17::InstCount
InstCount	Analysis/InstCount.cpp	/^  class InstCount : public FunctionPass, public InstVisitor<InstCount> {$/;"	c	namespace:__anon17	file:
InstError	AsmParser/LLParser.h	/^    enum InstResult { InstNormal = 0, InstError = 1, InstExtraComma = 2 };$/;"	e	enum:llvm::LLParser::InstResult
InstExtraComma	AsmParser/LLParser.h	/^    enum InstResult { InstNormal = 0, InstError = 1, InstExtraComma = 2 };$/;"	e	enum:llvm::LLParser::InstResult
InstFortifiedLibCallOptimization	Transforms/Utils/SimplifyLibCalls.cpp	/^struct InstFortifiedLibCallOptimization : public FortifiedLibCallOptimization {$/;"	s	namespace:__anon473	file:
InstInfos	MC/MCDisassembler/EDDisassembler.h	/^  const llvm::EDInstInfo *InstInfos;$/;"	m	struct:llvm::EDDisassembler
InstNamer	Transforms/Utils/InstructionNamer.cpp	/^    InstNamer() : FunctionPass(ID) {$/;"	f	struct:__anon464::InstNamer
InstNamer	Transforms/Utils/InstructionNamer.cpp	/^  struct InstNamer : public FunctionPass {$/;"	s	namespace:__anon464	file:
InstNormal	AsmParser/LLParser.h	/^    enum InstResult { InstNormal = 0, InstError = 1, InstExtraComma = 2 };$/;"	e	enum:llvm::LLParser::InstResult
InstNumbers	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DenseMap<const Instruction *, unsigned> InstNumbers;$/;"	m	class:__anon469::LargeBlockInfo	file:
InstPrinter	MC/MCAsmStreamer.cpp	/^  OwningPtr<MCInstPrinter> InstPrinter;$/;"	m	class:__anon214::MCAsmStreamer	file:
InstPrinter	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<llvm::MCInstPrinter> InstPrinter;$/;"	m	struct:llvm::EDDisassembler
InstResult	AsmParser/LLParser.h	/^    enum InstResult { InstNormal = 0, InstError = 1, InstExtraComma = 2 };$/;"	g	class:llvm::LLParser
InstSeq	Target/Mips/MipsAnalyzeImmediate.h	/^    typedef SmallVector<Inst, 7 > InstSeq;$/;"	t	class:llvm::MipsAnalyzeImmediate
InstSeqLs	Target/Mips/MipsAnalyzeImmediate.h	/^    typedef SmallVector<InstSeq, 5> InstSeqLs;$/;"	t	class:llvm::MipsAnalyzeImmediate
InstSimplifier	Transforms/Utils/SimplifyInstructions.cpp	/^    InstSimplifier() : FunctionPass(ID) {$/;"	f	struct:__anon467::InstSimplifier
InstSimplifier	Transforms/Utils/SimplifyInstructions.cpp	/^  struct InstSimplifier : public FunctionPass {$/;"	s	namespace:__anon467	file:
InstStream	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<llvm::raw_string_ostream> InstStream;$/;"	m	struct:llvm::EDDisassembler
InstString	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<std::string> InstString;$/;"	m	struct:llvm::EDDisassembler
InstTypePair	Analysis/MemDepPrinter.cpp	/^    typedef PointerIntPair<const Instruction *, 2, DepType> InstTypePair;$/;"	t	struct:__anon33::MemDepPrinter	file:
InstWorkList	Transforms/Scalar/SCCP.cpp	/^  SmallVector<Value*, 64> InstWorkList;$/;"	m	class:__anon531::SCCPSolver	file:
InstallGlobalCtors	Transforms/IPO/GlobalOpt.cpp	/^static GlobalVariable *InstallGlobalCtors(GlobalVariable *GCL,$/;"	f	file:
InstantiateMacroLikeBody	MC/MCParser/AsmParser.cpp	/^void AsmParser::InstantiateMacroLikeBody(Macro *M, SMLoc DirectiveLoc,$/;"	f	class:AsmParser
InstantiateMulticlassDef	TableGen/TGParser.cpp	/^InstantiateMulticlassDef(MultiClass &MC,$/;"	f	class:TGParser
Instantiation	MC/MCParser/AsmParser.cpp	/^  MemoryBuffer *Instantiation;$/;"	m	struct:__anon211::MacroInstantiation	file:
InstantiationLoc	MC/MCParser/AsmParser.cpp	/^  SMLoc InstantiationLoc;$/;"	m	struct:__anon211::MacroInstantiation	file:
InstrCount	CodeGen/MachineTraceMetrics.h	/^    unsigned InstrCount;$/;"	m	struct:llvm::MachineTraceMetrics::FixedBlockInfo
InstrCycles	CodeGen/MachineTraceMetrics.h	/^  struct InstrCycles {$/;"	s	class:llvm::MachineTraceMetrics
InstrDepth	CodeGen/MachineTraceMetrics.h	/^    unsigned InstrDepth;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
InstrEmitter	CodeGen/SelectionDAG/InstrEmitter.cpp	/^InstrEmitter::InstrEmitter(MachineBasicBlock *mbb,$/;"	f	class:InstrEmitter
InstrEmitter	CodeGen/SelectionDAG/InstrEmitter.h	/^class InstrEmitter {$/;"	c	namespace:llvm
InstrHeight	CodeGen/MachineTraceMetrics.h	/^    unsigned InstrHeight;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
InstrInfo	Target/ARM/ARMTargetMachine.h	/^  ARMInstrInfo        InstrInfo;$/;"	m	class:llvm::ARMTargetMachine
InstrInfo	Target/ARM/ARMTargetMachine.h	/^  OwningPtr<ARMBaseInstrInfo> InstrInfo;$/;"	m	class:llvm::ThumbTargetMachine
InstrInfo	Target/CellSPU/SPUTargetMachine.h	/^  SPUInstrInfo        InstrInfo;$/;"	m	class:llvm::SPUTargetMachine
InstrInfo	Target/Hexagon/HexagonTargetMachine.h	/^  HexagonInstrInfo InstrInfo;$/;"	m	class:llvm::HexagonTargetMachine
InstrInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    MBlazeInstrInfo        InstrInfo;$/;"	m	class:llvm::MBlazeTargetMachine
InstrInfo	Target/MSP430/MSP430TargetMachine.h	/^  MSP430InstrInfo        InstrInfo;$/;"	m	class:llvm::MSP430TargetMachine
InstrInfo	Target/Mips/MipsTargetMachine.h	/^  const MipsInstrInfo *InstrInfo;$/;"	m	class:llvm::MipsTargetMachine
InstrInfo	Target/NVPTX/NVPTXTargetMachine.h	/^  NVPTXInstrInfo        InstrInfo;$/;"	m	class:llvm::NVPTXTargetMachine
InstrInfo	Target/NVPTX/VectorElementize.cpp	/^  const NVPTXInstrInfo *InstrInfo;$/;"	m	class:__anon316::VectorElementize	file:
InstrInfo	Target/PowerPC/PPCTargetMachine.h	/^  PPCInstrInfo        InstrInfo;$/;"	m	class:llvm::PPCTargetMachine
InstrInfo	Target/Sparc/SparcTargetMachine.h	/^  SparcInstrInfo InstrInfo;$/;"	m	class:llvm::SparcTargetMachine
InstrInfo	Target/X86/X86TargetMachine.h	/^  X86InstrInfo      InstrInfo;$/;"	m	class:llvm::X86_32TargetMachine
InstrInfo	Target/X86/X86TargetMachine.h	/^  X86InstrInfo      InstrInfo;$/;"	m	class:llvm::X86_64TargetMachine
InstrInfo	Target/XCore/XCoreTargetMachine.h	/^  XCoreInstrInfo InstrInfo;$/;"	m	class:llvm::XCoreTargetMachine
InstrIsPHI	CodeGen/MachineSSAUpdater.cpp	/^  static MachineInstr *InstrIsPHI(MachineInstr *I) {$/;"	f	class:llvm::SSAUpdaterTraits
InstrIsPHI	Transforms/Utils/SSAUpdater.cpp	/^  static PHINode *InstrIsPHI(Instruction *I) {$/;"	f	class:llvm::SSAUpdaterTraits
InstrIter	Target/Mips/MipsDelaySlotFiller.cpp	/^    typedef MachineBasicBlock::instr_iterator InstrIter;$/;"	t	struct:__anon436::Filler	file:
InstrItins	CodeGen/IfConversion.cpp	/^    const InstrItineraryData *InstrItins;$/;"	m	class:__anon99::IfConverter	file:
InstrItins	CodeGen/MachineLICM.cpp	/^    const InstrItineraryData *InstrItins;$/;"	m	class:__anon156::MachineLICM	file:
InstrItins	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^    const InstrItineraryData *InstrItins;$/;"	m	class:llvm::ScheduleDAGSDNodes
InstrItins	CodeGen/TwoAddressInstructionPass.cpp	/^    const InstrItineraryData *InstrItins;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
InstrItins	Target/ARM/ARMSubtarget.h	/^  InstrItineraryData InstrItins;$/;"	m	class:llvm::ARMSubtarget
InstrItins	Target/ARM/ARMTargetMachine.h	/^  InstrItineraryData  InstrItins;$/;"	m	class:llvm::ARMBaseTargetMachine
InstrItins	Target/CellSPU/SPUSubtarget.h	/^    InstrItineraryData InstrItins;$/;"	m	class:llvm::SPUSubtarget
InstrItins	Target/CellSPU/SPUTargetMachine.h	/^  InstrItineraryData  InstrItins;$/;"	m	class:llvm::SPUTargetMachine
InstrItins	Target/Hexagon/HexagonSubtarget.h	/^  InstrItineraryData InstrItins;$/;"	m	class:llvm::HexagonSubtarget
InstrItins	Target/Hexagon/HexagonTargetMachine.h	/^  const InstrItineraryData* InstrItins;$/;"	m	class:llvm::HexagonTargetMachine
InstrItins	Target/MBlaze/MBlazeSubtarget.h	/^  InstrItineraryData InstrItins;$/;"	m	class:llvm::MBlazeSubtarget
InstrItins	Target/MBlaze/MBlazeTargetMachine.h	/^    InstrItineraryData     InstrItins;$/;"	m	class:llvm::MBlazeTargetMachine
InstrItins	Target/Mips/MipsSubtarget.h	/^  InstrItineraryData InstrItins;$/;"	m	class:llvm::MipsSubtarget
InstrItins	Target/PowerPC/PPCSubtarget.h	/^  InstrItineraryData InstrItins;$/;"	m	class:llvm::PPCSubtarget
InstrItins	Target/PowerPC/PPCTargetMachine.h	/^  InstrItineraryData  InstrItins;$/;"	m	class:llvm::PPCTargetMachine
InstrItins	Target/X86/X86Subtarget.h	/^  InstrItineraryData InstrItins;$/;"	m	class:llvm::X86Subtarget
InstrItins	Target/X86/X86TargetMachine.h	/^  InstrItineraryData InstrItins;$/;"	m	class:llvm::X86TargetMachine
InstrSet	CodeGen/OptimizePHIs.cpp	/^    typedef SmallPtrSet<MachineInstr*, 16> InstrSet;$/;"	t	class:__anon146::OptimizePHIs	file:
InstrSetIterator	CodeGen/OptimizePHIs.cpp	/^    typedef SmallPtrSetIterator<MachineInstr*> InstrSetIterator;$/;"	t	class:__anon146::OptimizePHIs	file:
InstrUID	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^typedef uint16_t InstrUID;$/;"	t
Instrs	CodeGen/ExecutionDepsFix.cpp	/^  SmallVector<MachineInstr*, 8> Instrs;$/;"	m	struct:__anon118::DomainValue	file:
InstrsToErase	Transforms/Scalar/GVN.cpp	/^    SmallVector<Instruction*, 8> InstrsToErase;$/;"	m	class:__anon537::GVN	file:
Instruction	VMCore/Instruction.cpp	/^Instruction::Instruction(Type *ty, unsigned it, Use *Ops, unsigned NumOps,$/;"	f	class:Instruction
InstructionClass	Transforms/Scalar/ObjCARC.cpp	/^  enum InstructionClass {$/;"	g	namespace:__anon499	file:
InstructionContext	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^} InstructionContext;$/;"	t	typeref:enum:__anon363
InstructionCount	Bitcode/Writer/ValueEnumerator.h	/^  unsigned InstructionCount;$/;"	m	class:llvm::ValueEnumerator
InstructionDereferencesPointer	Analysis/LazyValueInfo.cpp	/^static bool InstructionDereferencesPointer(Instruction *I, Value *Ptr) {$/;"	f	file:
InstructionList	Bitcode/Reader/BitcodeReader.h	/^  SmallVector<Instruction *, 64> InstructionList;$/;"	m	class:llvm::BitcodeReader
InstructionMap	Bitcode/Writer/ValueEnumerator.h	/^  InstructionMapType InstructionMap;$/;"	m	class:llvm::ValueEnumerator
InstructionMapType	Bitcode/Writer/ValueEnumerator.h	/^  typedef DenseMap<const Instruction*, unsigned> InstructionMapType;$/;"	t	class:llvm::ValueEnumerator
InstructionNamerID	Transforms/Utils/InstructionNamer.cpp	/^char &llvm::InstructionNamerID = InstNamer::ID;$/;"	m	class:llvm	file:
InstructionShuffler	CodeGen/MachineScheduler.cpp	/^  InstructionShuffler(bool alternate, bool topdown)$/;"	f	class:__anon129::InstructionShuffler
InstructionShuffler	CodeGen/MachineScheduler.cpp	/^class InstructionShuffler : public MachineSchedStrategy {$/;"	c	namespace:__anon129	file:
InstructionSimplifierID	Transforms/Utils/SimplifyInstructions.cpp	/^char &llvm::InstructionSimplifierID = InstSimplifier::ID;$/;"	m	class:llvm	file:
InstructionSpecifier	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^struct InstructionSpecifier {$/;"	s
InstructionStoresToFI	CodeGen/MachineLICM.cpp	/^static bool InstructionStoresToFI(const MachineInstr *MI, int FI) {$/;"	f	file:
InstructionTypes	MC/MCDisassembler/EDInfo.h	/^enum InstructionTypes {$/;"	g
Insts	Target/Mips/MipsAnalyzeImmediate.h	/^    InstSeq Insts;$/;"	m	class:llvm::MipsAnalyzeImmediate
InstsInThisBlock	VMCore/Verifier.cpp	/^    SmallPtrSet<Instruction*, 16> InstsInThisBlock;$/;"	m	struct:__anon610::Verifier	file:
Int	CodeGen/AsmPrinter/DwarfDebug.h	/^    int64_t Int;$/;"	m	union:llvm::DotDebugLocEntry::__anon64
Int	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
Int16Ty	VMCore/LLVMContextImpl.h	/^  IntegerType Int1Ty, Int8Ty, Int16Ty, Int32Ty, Int64Ty;$/;"	m	class:llvm::LLVMContextImpl
Int1Ty	VMCore/LLVMContextImpl.h	/^  IntegerType Int1Ty, Int8Ty, Int16Ty, Int32Ty, Int64Ty;$/;"	m	class:llvm::LLVMContextImpl
Int32Ty	VMCore/LLVMContextImpl.h	/^  IntegerType Int1Ty, Int8Ty, Int16Ty, Int32Ty, Int64Ty;$/;"	m	class:llvm::LLVMContextImpl
Int64Ty	VMCore/LLVMContextImpl.h	/^  IntegerType Int1Ty, Int8Ty, Int16Ty, Int32Ty, Int64Ty;$/;"	m	class:llvm::LLVMContextImpl
Int8Ty	VMCore/LLVMContextImpl.h	/^  IntegerType Int1Ty, Int8Ty, Int16Ty, Int32Ty, Int64Ty;$/;"	m	class:llvm::LLVMContextImpl
IntCCToARMCC	Target/ARM/ARMISelLowering.cpp	/^static ARMCC::CondCodes IntCCToARMCC(ISD::CondCode CC) {$/;"	f	file:
IntCondCCodeToICC	Target/Sparc/SparcISelLowering.cpp	/^static SPCC::CondCodes IntCondCCodeToICC(ISD::CondCode CC) {$/;"	f	file:
IntConstants	VMCore/LLVMContextImpl.h	/^  IntMapTy IntConstants;$/;"	m	class:llvm::LLVMContextImpl
IntMapTy	VMCore/LLVMContextImpl.h	/^                         DenseMapAPIntKeyInfo> IntMapTy;$/;"	t	class:llvm::LLVMContextImpl
IntToPtrInst	VMCore/Instructions.cpp	/^IntToPtrInst::IntToPtrInst($/;"	f	class:IntToPtrInst
IntTy	Transforms/Scalar/SROA.cpp	/^  IntegerType *IntTy;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
IntVal	TableGen/TGLexer.h	/^    IntVal,$/;"	e	enum:llvm::tgtok::TokKind
IntValue	Target/ARM/ARMAsmPrinter.cpp	/^      unsigned IntValue;$/;"	m	struct:__anon313::ObjectAttributeEmitter::AttributeItemType	file:
Integer	CodeGen/AsmPrinter/DIE.h	/^    uint64_t Integer;$/;"	m	class:llvm::DIEInteger
Integer	Transforms/Scalar/ScalarReplAggregates.cpp	/^    Integer$/;"	e	enum:__anon522::ConvertToScalarInfo::__anon523	file:
IntegerAdd	Transforms/Vectorize/LoopVectorize.cpp	/^    IntegerAdd  = 0,  \/\/\/ Sum of numbers.$/;"	e	enum:__anon605::LoopVectorizationLegality::ReductionKind	file:
IntegerExpandSetCCOperands	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::IntegerExpandSetCCOperands(SDValue &NewLHS,$/;"	f	class:DAGTypeLegalizer
IntegerMult	Transforms/Vectorize/LoopVectorize.cpp	/^    IntegerMult = 1  \/\/\/ Product of numbers.$/;"	e	enum:__anon605::LoopVectorizationLegality::ReductionKind	file:
IntegerTypes	VMCore/LLVMContextImpl.h	/^  DenseMap<unsigned, IntegerType*> IntegerTypes;$/;"	m	class:llvm::LLVMContextImpl
Intel	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^  ATT = 0, Intel = 1$/;"	e	enum:AsmWriterFlavorTy	file:
IntelAtom	Target/X86/X86Subtarget.h	/^    Others, IntelAtom$/;"	e	enum:llvm::X86Subtarget::X86ProcFamilyEnum
IntelJITEventListener	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^  IntelJITEventListener(IntelJITEventsWrapper* libraryWrapper) {$/;"	f	class:__anon198::IntelJITEventListener
IntelJITEventListener	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^class IntelJITEventListener : public JITEventListener {$/;"	c	namespace:__anon198	file:
IntelJITEventsWrapper	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  IntelJITEventsWrapper()$/;"	f	class:llvm::IntelJITEventsWrapper
IntelJITEventsWrapper	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  IntelJITEventsWrapper(NotifyEventPtr NotifyEventImpl,$/;"	f	class:llvm::IntelJITEventsWrapper
IntelJITEventsWrapper	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^class IntelJITEventsWrapper {$/;"	c	namespace:llvm
InterferenceCache	CodeGen/InterferenceCache.h	/^  InterferenceCache() : TRI(0), LIUArray(0), MF(0), RoundRobin(0) {}$/;"	f	class:llvm::InterferenceCache
InterferenceCache	CodeGen/InterferenceCache.h	/^class InterferenceCache {$/;"	c	namespace:llvm
InterferenceKind	CodeGen/LiveRegMatrix.h	/^  enum InterferenceKind {$/;"	g	class:llvm::LiveRegMatrix
InterferingVRegs	CodeGen/LiveIntervalUnion.h	/^    SmallVector<LiveInterval*,4> InterferingVRegs;$/;"	m	class:llvm::LiveIntervalUnion::Query
InterleaveSrcInPtx	Target/NVPTX/NVPTXAsmPrinter.cpp	/^bool InterleaveSrcInPtx = false;$/;"	m	namespace:llvm	file:
Intern	Support/FoldingSet.cpp	/^FoldingSetNodeID::Intern(BumpPtrAllocator &Allocator) const {$/;"	f	class:FoldingSetNodeID
InternalInstruction	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^struct InternalInstruction {$/;"	s
InternalizePass	Transforms/IPO/Internalize.cpp	/^  class InternalizePass : public ModulePass {$/;"	c	namespace:__anon593	file:
InternalizePass	Transforms/IPO/Internalize.cpp	/^InternalizePass::InternalizePass(bool AllButMain)$/;"	f	class:InternalizePass
InternalizePass	Transforms/IPO/Internalize.cpp	/^InternalizePass::InternalizePass(const std::vector<const char *>&exportList)$/;"	f	class:InternalizePass
InterpCtor	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngine *(*ExecutionEngine::InterpCtor)(Module *M,$/;"	v
InterpRegistrator	ExecutionEngine/Interpreter/Interpreter.cpp	/^} InterpRegistrator;$/;"	m	namespace:__anon181	typeref:struct:__anon181::RegisterInterp	file:
Interpreter	ExecutionEngine/Interpreter/Interpreter.cpp	/^Interpreter::Interpreter(Module *M)$/;"	f	class:Interpreter
Interpreter	ExecutionEngine/Interpreter/Interpreter.h	/^class Interpreter : public ExecutionEngine, public InstVisitor<Interpreter> {$/;"	c	namespace:llvm
IntervalMapImpl	Support/IntervalMap.cpp	/^namespace IntervalMapImpl {$/;"	n	namespace:llvm	file:
IntervalPartition	Analysis/IntervalPartition.cpp	/^IntervalPartition::IntervalPartition(IntervalPartition &IP, bool)$/;"	f	class:IntervalPartition
IntervalSorter	CodeGen/StackSlotColoring.cpp	/^  struct IntervalSorter {$/;"	s	namespace:__anon95	file:
Intervals	CodeGen/StackColoring.cpp	/^  SmallVector<LiveInterval*, 16> Intervals;$/;"	m	class:__anon113::StackColoring	file:
Intf	CodeGen/RegAllocGreedy.cpp	/^    InterferenceCache::Cursor Intf;$/;"	m	struct:__anon158::RAGreedy::GlobalSplitCandidate	file:
IntfCache	CodeGen/RegAllocGreedy.cpp	/^  InterferenceCache IntfCache;$/;"	m	class:__anon158::RAGreedy	file:
IntptrPtrTy	Transforms/Instrumentation/AddressSanitizer.cpp	/^  Type *IntptrPtrTy;$/;"	m	struct:__anon491::AddressSanitizer	file:
IntptrTy	Transforms/Instrumentation/AddressSanitizer.cpp	/^  Type *IntptrTy;$/;"	m	struct:__anon491::AddressSanitizer	file:
IntrinsicInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    MBlazeIntrinsicInfo    IntrinsicInfo;$/;"	m	class:llvm::MBlazeTargetMachine
IntvIdx	CodeGen/RegAllocGreedy.cpp	/^    unsigned IntvIdx;$/;"	m	struct:__anon158::RAGreedy::GlobalSplitCandidate	file:
Invalid	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  bool Invalid;$/;"	m	class:llvm::SDDbgValue
Invalid	Support/DynamicLibrary.cpp	/^char llvm::sys::DynamicLibrary::Invalid = 0;$/;"	m	class:llvm::sys::DynamicLibrary	file:
InvalidAlignmentElem	VMCore/DataLayout.cpp	/^DataLayout::InvalidAlignmentElem =$/;"	m	class:DataLayout	file:
InvalidCode	DebugInfo/DWARFAbbreviationDeclaration.h	/^  enum { InvalidCode = 0 };$/;"	e	enum:llvm::DWARFAbbreviationDeclaration::__anon170
InvalidPointerElem	VMCore/DataLayout.cpp	/^DataLayout::InvalidPointerElem = PointerAlignElem::get(~0U, 0U, 0U, 0U);$/;"	m	class:DataLayout	file:
Invalidate	MC/MCAssembler.cpp	/^void MCAsmLayout::Invalidate(MCFragment *F) {$/;"	f	class:MCAsmLayout
InvalidatePreds	CodeGen/IfConversion.cpp	/^void IfConverter::InvalidatePreds(MachineBasicBlock *BB) {$/;"	f	class:IfConverter
Invariants	Transforms/IPO/GlobalOpt.cpp	/^  SmallPtrSet<GlobalVariable*, 8> Invariants;$/;"	m	class:__anon591::Evaluator	file:
InverseMap	VMCore/ConstantsContext.h	/^  InverseMapTy InverseMap;$/;"	m	class:llvm::ConstantUniqueMap
InverseMapTy	VMCore/ConstantsContext.h	/^  typedef std::map<ConstantClass *, typename MapTy::iterator> InverseMapTy;$/;"	t	class:llvm::ConstantUniqueMap
InvertAndChangeJumpTarget	Target/Hexagon/HexagonCFGOptimizer.cpp	/^HexagonCFGOptimizer::InvertAndChangeJumpTarget(MachineInstr* MI,$/;"	f	class:__anon402::HexagonCFGOptimizer
InvertFPCondCode	Target/Mips/MipsISelLowering.cpp	/^static bool InvertFPCondCode(Mips::CondCode CC) {$/;"	f	file:
InvertPredicate	Target/PowerPC/MCTargetDesc/PPCPredicates.cpp	/^PPC::Predicate PPC::InvertPredicate(PPC::Predicate Opcode) {$/;"	f	class:PPC
InvokeInliningInfo	Transforms/Utils/InlineFunction.cpp	/^    InvokeInliningInfo(InvokeInst *II)$/;"	f	class:__anon468::InvokeInliningInfo
InvokeInliningInfo	Transforms/Utils/InlineFunction.cpp	/^  class InvokeInliningInfo {$/;"	c	namespace:__anon468	file:
InvokeInst	VMCore/Instructions.cpp	/^InvokeInst::InvokeInst(const InvokeInst &II)$/;"	f	class:InvokeInst
Is16BitMemOperand	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^static bool Is16BitMemOperand(const MCInst &MI, unsigned Op) {$/;"	f	file:
Is16BitMemOperand	Target/X86/X86CodeEmitter.cpp	/^static bool Is16BitMemOperand(const MachineInstr &MI, unsigned Op) {$/;"	f	file:
Is32BitMemOperand	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^static bool Is32BitMemOperand(const MCInst &MI, unsigned Op) {$/;"	f	file:
Is32BitMemOperand	Target/X86/X86CodeEmitter.cpp	/^static bool Is32BitMemOperand(const MachineInstr &MI, unsigned Op) {$/;"	f	file:
Is64Bit	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  bool Is64Bit;  \/\/ 32 or 64 bit words$/;"	m	class:__anon429::MipsAsmBackend	file:
Is64Bit	Target/NVPTX/NVPTXRegisterInfo.h	/^  bool Is64Bit;$/;"	m	class:llvm::NVPTXRegisterInfo
Is64Bit	Target/NVPTX/NVPTXSubtarget.h	/^  bool Is64Bit;$/;"	m	class:llvm::NVPTXSubtarget
Is64Bit	Target/Sparc/SparcSubtarget.h	/^  bool Is64Bit;$/;"	m	class:llvm::SparcSubtarget
Is64Bit	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  bool Is64Bit;$/;"	m	class:__anon345::WindowsX86AsmBackend	file:
Is64Bit	Target/X86/MCTargetDesc/X86WinCOFFObjectWriter.cpp	/^    const bool Is64Bit;$/;"	m	class:__anon352::X86WinCOFFObjectWriter	file:
Is64Bit	Target/X86/X86RegisterInfo.h	/^  bool Is64Bit;$/;"	m	class:llvm::X86RegisterInfo
Is64BitMemOperand	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^static bool Is64BitMemOperand(const MCInst &MI, unsigned Op) {$/;"	f	file:
Is64BitMemOperand	Target/X86/X86CodeEmitter.cpp	/^static bool Is64BitMemOperand(const MachineInstr &MI, unsigned Op) {$/;"	f	file:
Is64BitMode	Target/X86/X86CodeEmitter.cpp	/^    bool Is64BitMode;$/;"	m	class:__anon379::Emitter	file:
IsAcceptableTarget	Transforms/Scalar/Sink.cpp	/^bool Sinking::IsAcceptableTarget(Instruction *Inst,$/;"	f	class:Sinking
IsAllocaInSet	Transforms/Scalar/SROA.cpp	/^    IsAllocaInSet(const SetType &Set) : Set(Set) {}$/;"	f	class:__anon563::IsAllocaInSet
IsAllocaInSet	Transforms/Scalar/SROA.cpp	/^  class IsAllocaInSet {$/;"	c	namespace:__anon563	file:
IsAlternating	CodeGen/MachineScheduler.cpp	/^  bool IsAlternating;$/;"	m	class:__anon129::InstructionShuffler	file:
IsAlwaysTail	Transforms/Scalar/ObjCARC.cpp	/^static bool IsAlwaysTail(InstructionClass Class) {$/;"	f	file:
IsAnalyzed	CodeGen/IfConversion.cpp	/^      bool IsAnalyzed      : 1;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
IsAndroid	Target/Mips/MipsSubtarget.h	/^  bool IsAndroid;$/;"	m	class:llvm::MipsSubtarget
IsArg	Transforms/IPO/DeadArgumentElimination.cpp	/^      bool IsArg;$/;"	m	struct:__anon600::DAE::RetOrArg	file:
IsAscii	Transforms/Scalar/SimplifyLibCalls.cpp	/^    FFSOpt FFS; AbsOpt Abs; IsDigitOpt IsDigit; IsAsciiOpt IsAscii;$/;"	m	class:__anon546::SimplifyLibCalls	file:
IsAsciiOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct IsAsciiOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
IsAutorelease	Transforms/Scalar/ObjCARC.cpp	/^static bool IsAutorelease(InstructionClass Class) {$/;"	f	file:
IsBRF	Target/XCore/XCoreInstrInfo.cpp	/^static inline bool IsBRF(unsigned BrOpc) {$/;"	f	file:
IsBRT	Target/XCore/XCoreInstrInfo.cpp	/^static inline bool IsBRT(unsigned BrOpc) {$/;"	f	file:
IsBRU	Target/XCore/XCoreInstrInfo.cpp	/^static inline bool IsBRU(unsigned BrOpc) {$/;"	f	file:
IsBR_JT	Target/XCore/XCoreInstrInfo.cpp	/^static inline bool IsBR_JT(unsigned BrOpc) {$/;"	f	file:
IsBTMemSlow	Target/X86/X86Subtarget.h	/^  bool IsBTMemSlow;$/;"	m	class:llvm::X86Subtarget
IsBeingAnalyzed	CodeGen/IfConversion.cpp	/^      bool IsBeingAnalyzed : 1;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
IsBetterCannonical	Transforms/IPO/ConstantMerge.cpp	/^static bool IsBetterCannonical(const GlobalVariable &A,$/;"	f	file:
IsBetterFallthrough	CodeGen/BranchFolding.cpp	/^static bool IsBetterFallthrough(MachineBasicBlock *MBB1,$/;"	f	file:
IsBlockPlaced	CodeGen/MachineBlockPlacement.cpp	/^  IsBlockPlaced(const BlockChain &PlacedChain,$/;"	f	class:__anon108::IsBlockPlaced
IsBlockPlaced	CodeGen/MachineBlockPlacement.cpp	/^class IsBlockPlaced {$/;"	c	namespace:__anon108	file:
IsBookE	Target/PowerPC/PPCSubtarget.h	/^  bool IsBookE;$/;"	m	class:llvm::PPCSubtarget
IsBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^    IsBottomUp = true,$/;"	e	enum:__anon77::bu_ls_rr_sort::__anon78	file:
IsBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^    IsBottomUp = true,$/;"	e	enum:__anon77::hybrid_ls_rr_sort::__anon80	file:
IsBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^    IsBottomUp = true,$/;"	e	enum:__anon77::ilp_ls_rr_sort::__anon81	file:
IsBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^    IsBottomUp = true,$/;"	e	enum:__anon77::src_ls_rr_sort::__anon79	file:
IsBrAnalyzable	CodeGen/IfConversion.cpp	/^      bool IsBrAnalyzable  : 1;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
IsBranchOnlyBlock	CodeGen/BranchFolding.cpp	/^static bool IsBranchOnlyBlock(MachineBasicBlock *MBB) {$/;"	f	file:
IsCallDependent	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::IsCallDependent(MachineInstr* MI,$/;"	f	class:HexagonPacketizerList
IsCallerRecursive	Analysis/InlineCost.cpp	/^  bool IsCallerRecursive;$/;"	m	class:__anon28::CallAnalyzer	file:
IsChainDependent	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool IsChainDependent(SDNode *Outer, SDNode *Inner,$/;"	f	file:
IsCheapInstruction	CodeGen/MachineLICM.cpp	/^bool MachineLICM::IsCheapInstruction(MachineInstr &MI) const {$/;"	f	class:MachineLICM
IsCondBranch	Target/XCore/XCoreInstrInfo.cpp	/^static inline bool IsCondBranch(unsigned BrOpc) {$/;"	f	file:
IsConditionalBranch	Target/Hexagon/HexagonCFGOptimizer.cpp	/^static bool IsConditionalBranch(int Opc) {$/;"	f	namespace:__anon402
IsConstantOffsetFromGlobal	Analysis/ConstantFolding.cpp	/^static bool IsConstantOffsetFromGlobal(Constant *C, GlobalValue *&GV,$/;"	f	file:
IsConstantOne	VMCore/Instructions.cpp	/^static bool IsConstantOne(Value *val) {$/;"	f	file:
IsControlFlow	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static bool IsControlFlow(MachineInstr* MI) {$/;"	f	file:
IsDarwin	MC/MCParser/AsmParser.cpp	/^  bool IsDarwin;$/;"	m	class:__anon211::AsmParser	file:
IsDeadPHICycle	CodeGen/OptimizePHIs.cpp	/^bool OptimizePHIs::IsDeadPHICycle(MachineInstr *MI, InstrSet &PHIsInCycle) {$/;"	f	class:OptimizePHIs
IsDesirableToPromoteOp	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::IsDesirableToPromoteOp(SDValue Op, EVT &PVT) const {$/;"	f	class:X86TargetLowering
IsDigit	Transforms/Scalar/SimplifyLibCalls.cpp	/^    FFSOpt FFS; AbsOpt Abs; IsDigitOpt IsDigit; IsAsciiOpt IsAscii;$/;"	m	class:__anon546::SimplifyLibCalls	file:
IsDigitOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct IsDigitOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
IsDirectJump	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static bool IsDirectJump(MachineInstr* MI) {$/;"	f	file:
IsDone	CodeGen/IfConversion.cpp	/^      bool IsDone          : 1;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
IsEH	MC/MCDwarf.cpp	/^    bool IsEH;$/;"	m	class:__anon223::FrameEmitterImpl	file:
IsELFMetaDataSection	MC/ELFObjectWriter.cpp	/^bool ELFObjectWriter::IsELFMetaDataSection(const MCSectionData &SD) {$/;"	f	class:ELFObjectWriter
IsEligibleForTailCallOptimization	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::IsEligibleForTailCallOptimization(SDValue Callee,$/;"	f	class:ARMTargetLowering
IsEligibleForTailCallOptimization	Target/Hexagon/HexagonISelLowering.cpp	/^bool HexagonTargetLowering::IsEligibleForTailCallOptimization($/;"	f	class:HexagonTargetLowering
IsEligibleForTailCallOptimization	Target/Mips/MipsISelLowering.cpp	/^IsEligibleForTailCallOptimization(CallingConv::ID CalleeCC,$/;"	f	class:MipsTargetLowering
IsEligibleForTailCallOptimization	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::IsEligibleForTailCallOptimization(SDValue Callee,$/;"	f	class:PPCTargetLowering
IsEligibleForTailCallOptimization	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::IsEligibleForTailCallOptimization(SDValue Callee,$/;"	f	class:X86TargetLowering
IsEmptyBlock	CodeGen/BranchFolding.cpp	/^static bool IsEmptyBlock(MachineBasicBlock *MBB) {$/;"	f	file:
IsEnqueued	CodeGen/IfConversion.cpp	/^      bool IsEnqueued      : 1;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
IsEquivalentPHI	Transforms/Utils/SSAUpdater.cpp	/^static bool IsEquivalentPHI(PHINode *PHI,$/;"	f	file:
IsFP64bit	Target/Mips/MipsSubtarget.h	/^  bool IsFP64bit;$/;"	m	class:llvm::MipsSubtarget
IsForwarding	Transforms/Scalar/ObjCARC.cpp	/^static bool IsForwarding(InstructionClass Class) {$/;"	f	file:
IsFound	Analysis/ScalarEvolution.cpp	/^  bool IsFound;$/;"	m	struct:__anon32::SCEVSearch	file:
IsFunctionMallocLike	Transforms/IPO/FunctionAttrs.cpp	/^bool FunctionAttrs::IsFunctionMallocLike(Function *F,$/;"	f	class:FunctionAttrs
IsGP64bit	Target/Mips/MipsSubtarget.h	/^  bool IsGP64bit;$/;"	m	class:llvm::MipsSubtarget
IsGlobalInSmallSection	Target/Hexagon/HexagonTargetObjectFile.cpp	/^IsGlobalInSmallSection(const GlobalValue *GV, const TargetMachine &TM,$/;"	f	class:HexagonTargetObjectFile
IsGlobalInSmallSection	Target/Hexagon/HexagonTargetObjectFile.cpp	/^bool HexagonTargetObjectFile::IsGlobalInSmallSection(const GlobalValue *GV,$/;"	f	class:HexagonTargetObjectFile
IsGlobalInSmallSection	Target/MBlaze/MBlazeTargetObjectFile.cpp	/^IsGlobalInSmallSection(const GlobalValue *GV, const TargetMachine &TM) const {$/;"	f	class:MBlazeTargetObjectFile
IsGlobalInSmallSection	Target/MBlaze/MBlazeTargetObjectFile.cpp	/^IsGlobalInSmallSection(const GlobalValue *GV, const TargetMachine &TM,$/;"	f	class:MBlazeTargetObjectFile
IsGlobalInSmallSection	Target/Mips/MipsTargetObjectFile.cpp	/^IsGlobalInSmallSection(const GlobalValue *GV, const TargetMachine &TM,$/;"	f	class:MipsTargetObjectFile
IsGlobalInSmallSection	Target/Mips/MipsTargetObjectFile.cpp	/^bool MipsTargetObjectFile::IsGlobalInSmallSection(const GlobalValue *GV,$/;"	f	class:MipsTargetObjectFile
IsGuaranteedToExecute	CodeGen/MachineLICM.cpp	/^bool MachineLICM::IsGuaranteedToExecute(MachineBasicBlock *BB) {$/;"	f	class:MachineLICM
IsIdentifierChar	MC/MCParser/AsmLexer.cpp	/^static bool IsIdentifierChar(char c) {$/;"	f	file:
IsImplicitDef	CodeGen/RegisterCoalescer.cpp	/^    bool IsImplicitDef;$/;"	m	struct:__anon115::JoinVals::Val	file:
IsImplicitDefUse	CodeGen/AggressiveAntiDepBreaker.cpp	/^bool AggressiveAntiDepBreaker::IsImplicitDefUse(MachineInstr *MI,$/;"	f	class:AggressiveAntiDepBreaker
IsInSmallSection	Target/Hexagon/HexagonTargetObjectFile.cpp	/^static bool IsInSmallSection(uint64_t Size) {$/;"	f	file:
IsInSmallSection	Target/MBlaze/MBlazeTargetObjectFile.cpp	/^static bool IsInSmallSection(uint64_t Size) {$/;"	f	file:
IsInSmallSection	Target/Mips/MipsTargetObjectFile.cpp	/^static bool IsInSmallSection(uint64_t Size) {$/;"	f	file:
IsIndirectCall	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static bool IsIndirectCall(MachineInstr* MI) {$/;"	f	file:
IsInf	Support/IsInf.cpp	/^int IsInf(double d) { return isinf(d); }$/;"	f	namespace:llvm
IsInf	Support/IsInf.cpp	/^int IsInf(float f)  { return isinf(f); }$/;"	f	namespace:llvm
IsIntegerCC	Target/Sparc/SparcInstrInfo.cpp	/^static bool IsIntegerCC(unsigned CC)$/;"	f	file:
IsJITCodeModel	Target/PowerPC/PPCSubtarget.h	/^  bool IsJITCodeModel;$/;"	m	class:llvm::PPCSubtarget
IsKnownIncremented	Transforms/Scalar/ObjCARC.cpp	/^    bool IsKnownIncremented() const {$/;"	f	class:__anon506::PtrState
IsLICMCandidate	CodeGen/MachineLICM.cpp	/^bool MachineLICM::IsLICMCandidate(MachineInstr &I) {$/;"	f	class:MachineLICM
IsLegalToCallImmediateAddr	Target/X86/X86Subtarget.cpp	/^bool X86Subtarget::IsLegalToCallImmediateAddr(const TargetMachine &TM) const {$/;"	f	class:X86Subtarget
IsLegalToFold	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^bool SelectionDAGISel::IsLegalToFold(SDValue N, SDNode *U, SDNode *Root,$/;"	f	class:SelectionDAGISel
IsLibrary	Linker/Linker.cpp	/^static inline sys::Path IsLibrary(StringRef Name,$/;"	f	file:
IsLinux	Target/Mips/MipsSubtarget.h	/^  bool IsLinux;$/;"	m	class:llvm::MipsSubtarget
IsLittle	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  bool IsLittle; \/\/ Big or little endian$/;"	m	class:__anon429::MipsAsmBackend	file:
IsLittle	Target/Mips/MipsSubtarget.h	/^  bool IsLittle;$/;"	m	class:llvm::MipsSubtarget
IsLittleEndian	DebugInfo/DWARFContext.h	/^  bool IsLittleEndian;$/;"	m	class:llvm::DWARFContext
IsLittleEndian	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^  bool IsLittleEndian;$/;"	m	class:__anon432::MipsMCCodeEmitter	file:
IsLive	CodeGen/AggressiveAntiDepBreaker.cpp	/^bool AggressiveAntiDepState::IsLive(unsigned Reg)$/;"	f	class:AggressiveAntiDepState
IsLoad	Target/ARM/ARMExpandPseudoInsts.cpp	/^    bool IsLoad;$/;"	m	struct:__anon312::NEONLdStTableEntry	file:
IsLoadOrStoreInst	Analysis/LoopDependenceAnalysis.cpp	/^static bool IsLoadOrStoreInst(Value *I) {$/;"	f	file:
IsLoopDead	Transforms/Scalar/LoopDeletion.cpp	/^bool LoopDeletion::IsLoopDead(Loop* L,$/;"	f	class:LoopDeletion
IsLoopInvariantInst	CodeGen/MachineLICM.cpp	/^bool MachineLICM::IsLoopInvariantInst(MachineInstr &I) {$/;"	f	class:MachineLICM
IsLoopN	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static bool IsLoopN(MachineInstr *MI) {$/;"	f	file:
IsMClass	Target/ARM/ARMSubtarget.h	/^  bool IsMClass;$/;"	m	class:llvm::ARMSubtarget
IsMemRefInstr	Analysis/LoopDependenceAnalysis.cpp	/^static inline bool IsMemRefInstr(const Value *V) {$/;"	f	file:
IsMemcpySmall	Target/X86/X86FastISel.cpp	/^bool X86FastISel::IsMemcpySmall(uint64_t Len) {$/;"	f	class:X86FastISel
IsN64	Target/Mips/MipsISelLowering.h	/^    bool HasMips64, IsN64, IsO32;$/;"	m	class:llvm::MipsTargetLowering
IsN64	Target/Mips/MipsSEInstrInfo.h	/^  bool IsN64;$/;"	m	class:llvm::MipsSEInstrInfo
IsNAN	Support/IsNAN.cpp	/^  int IsNAN(double d) { return isnan(d); }$/;"	f	namespace:llvm
IsNAN	Support/IsNAN.cpp	/^  int IsNAN(float f)  { return isnan(f); }$/;"	f	namespace:llvm
IsNewifyStore	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::IsNewifyStore (MachineInstr* MI) {$/;"	f	class:HexagonPacketizerList
IsNoThrow	Transforms/Scalar/ObjCARC.cpp	/^static bool IsNoThrow(InstructionClass Class) {$/;"	f	file:
IsNonLocalValue	Transforms/Scalar/CodeGenPrepare.cpp	/^static bool IsNonLocalValue(Value *V, BasicBlock *BB) {$/;"	f	file:
IsNoopOnNull	Transforms/Scalar/ObjCARC.cpp	/^static bool IsNoopOnNull(InstructionClass Class) {$/;"	f	file:
IsNotTrivial	Transforms/Scalar/ScalarReplAggregates.cpp	/^  bool IsNotTrivial;$/;"	m	class:__anon522::ConvertToScalarInfo	file:
IsNullTerminatedString	Target/TargetLoweringObjectFile.cpp	/^static bool IsNullTerminatedString(const Constant *C) {$/;"	f	file:
IsNullValue	CodeGen/ShadowStackGC.cpp	/^bool ShadowStackGC::IsNullValue(Value *V) {$/;"	f	class:ShadowStackGC
IsO32	Target/Mips/MipsISelLowering.h	/^    bool HasMips64, IsN64, IsO32;$/;"	m	class:llvm::MipsTargetLowering
IsObjCIdentifiedObject	Transforms/Scalar/ObjCARC.cpp	/^static bool IsObjCIdentifiedObject(const Value *V) {$/;"	f	file:
IsOnlyUsedInEqualityComparison	Transforms/Scalar/SimplifyLibCalls.cpp	/^static bool IsOnlyUsedInEqualityComparison(Value *V, Value *With) {$/;"	f	file:
IsOnlyUsedInZeroEqualityComparison	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static bool IsOnlyUsedInZeroEqualityComparison(const Value *V) {$/;"	f	file:
IsOnlyUsedInZeroEqualityComparison	Transforms/Scalar/SimplifyLibCalls.cpp	/^static bool IsOnlyUsedInZeroEqualityComparison(Value *V) {$/;"	f	file:
IsOperandAMemoryOperand	Transforms/Utils/AddrModeMatcher.cpp	/^static bool IsOperandAMemoryOperand(CallInst *CI, InlineAsm *IA, Value *OpVal,$/;"	f	file:
IsOperator	MC/MCParser/AsmParser.cpp	/^static bool IsOperator(AsmToken::TokenKind kind)$/;"	f	file:
IsPIC	Target/ARM/ARMCodeEmitter.cpp	/^    bool IsPIC;$/;"	m	class:__anon297::ARMCodeEmitter	file:
IsPIC	Target/ARM/ARMJITInfo.h	/^    bool IsPIC;$/;"	m	class:llvm::ARMJITInfo
IsPIC	Target/Mips/MipsCodeEmitter.cpp	/^  bool IsPIC;$/;"	m	class:__anon438::MipsCodeEmitter	file:
IsPIC	Target/Mips/MipsJITInfo.h	/^  bool IsPIC;$/;"	m	class:llvm::MipsJITInfo
IsPIC	Target/Mips/MipsLongBranch.cpp	/^    bool IsPIC;$/;"	m	class:__anon437::MipsLongBranch	file:
IsPIC	Target/X86/X86CodeEmitter.cpp	/^    bool IsPIC;$/;"	m	class:__anon379::Emitter	file:
IsPPC64	Target/PowerPC/PPCSubtarget.h	/^  bool IsPPC64;$/;"	m	class:llvm::PPCSubtarget
IsPhysicalSection	MC/WinCOFFObjectWriter.cpp	/^bool WinCOFFObjectWriter::IsPhysicalSection(COFFSection *S) {$/;"	f	class:WinCOFFObjectWriter
IsPointerOffset	Transforms/Scalar/MemCpyOptimizer.cpp	/^static bool IsPointerOffset(Value *Ptr1, Value *Ptr2, int64_t &Offset,$/;"	f	file:
IsPotentialUse	Transforms/Scalar/ObjCARC.cpp	/^static bool IsPotentialUse(const Value *Op) {$/;"	f	file:
IsPotentialUse	Transforms/Scalar/ObjCARC.cpp	/^static bool IsPotentialUse(const Value *Op, AliasAnalysis &AA) {$/;"	f	file:
IsPotentiallyPHITranslatable	Analysis/PHITransAddr.cpp	/^bool PHITransAddr::IsPotentiallyPHITranslatable() const {$/;"	f	class:PHITransAddr
IsPredicateKnownToFail	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^static unsigned IsPredicateKnownToFail(const unsigned char *Table,$/;"	f	file:
IsPrefix	Transforms/IPO/ArgumentPromotion.cpp	/^static bool IsPrefix(const ArgPromotion::IndicesVector &Prefix,$/;"	f	file:
IsProfilingActiveFunc	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  IsProfilingActivePtr IsProfilingActiveFunc;$/;"	m	class:llvm::IntelJITEventsWrapper
IsProfilingActivePtr	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  typedef iJIT_IsProfilingActiveFlags (*IsProfilingActivePtr)(void);$/;"	t	class:llvm::IntelJITEventsWrapper
IsProfitableToFold	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^bool SelectionDAGISel::IsProfitableToFold(SDValue N, SDNode *U,$/;"	f	class:SelectionDAGISel
IsProfitableToFold	Target/X86/X86ISelDAGToDAG.cpp	/^X86DAGToDAGISel::IsProfitableToFold(SDValue N, SDNode *U, SDNode *Root) const {$/;"	f	class:X86DAGToDAGISel
IsProfitableToFoldIntoAddressingMode	Transforms/Utils/AddrModeMatcher.cpp	/^IsProfitableToFoldIntoAddressingMode(Instruction *I, ExtAddrMode &AMBefore,$/;"	f	class:AddressingModeMatcher
IsProfitableToHoist	CodeGen/MachineLICM.cpp	/^bool MachineLICM::IsProfitableToHoist(MachineInstr &MI) {$/;"	f	class:MachineLICM
IsR9Reserved	Target/ARM/ARMSubtarget.h	/^  bool IsR9Reserved;$/;"	m	class:llvm::ARMSubtarget
IsReachable	CodeGen/ScheduleDAG.cpp	/^bool ScheduleDAGTopologicalSort::IsReachable(const SUnit *SU,$/;"	f	class:ScheduleDAGTopologicalSort
IsReachable	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool IsReachable(const SUnit *SU, const SUnit *TargetSU) {$/;"	f	class:__anon76::ScheduleDAGRRList
IsRecursiveCall	Analysis/InlineCost.cpp	/^  bool IsRecursiveCall;$/;"	m	class:__anon28::CallAnalyzer	file:
IsRegDependence	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static bool IsRegDependence(const SDep::Kind DepType) {$/;"	f	file:
IsRegInSet	Target/Mips/MipsDelaySlotFiller.cpp	/^bool Filler::IsRegInSet(SmallSet<unsigned, 32> &RegSet, unsigned Reg) {$/;"	f	class:Filler
IsRegInSet	Target/Sparc/DelaySlotFiller.cpp	/^bool Filler::IsRegInSet(SmallSet<unsigned, 32>& RegSet, unsigned Reg)$/;"	f	class:Filler
IsRequired	Support/YAMLParser.cpp	/^  bool IsRequired;$/;"	m	struct:__anon244::SimpleKey	file:
IsRetain	Transforms/Scalar/ObjCARC.cpp	/^static bool IsRetain(InstructionClass Class) {$/;"	f	file:
IsRetainBlock	Transforms/Scalar/ObjCARC.cpp	/^    bool IsRetainBlock;$/;"	m	struct:__anon505::RRInfo	file:
IsRetainBlockOptimizable	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCOpt::IsRetainBlockOptimizable(const Instruction *Inst) {$/;"	f	class:ObjCARCOpt
IsS11_0_Offset	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static bool IsS11_0_Offset(SDNode * S) {$/;"	f	file:
IsS11_1_Offset	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static bool IsS11_1_Offset(SDNode * S) {$/;"	f	file:
IsS11_2_Offset	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static bool IsS11_2_Offset(SDNode * S) {$/;"	f	file:
IsS11_3_Offset	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static bool IsS11_3_Offset(SDNode * S) {$/;"	f	file:
IsSafeAndProfitableToMove	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static bool IsSafeAndProfitableToMove(bool isLd, unsigned Base,$/;"	f	file:
IsSafeComputationToRemove	Transforms/IPO/GlobalOpt.cpp	/^static bool IsSafeComputationToRemove(Value *V, const TargetLibraryInfo *TLI) {$/;"	f	file:
IsSchedBarrier	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^static bool IsSchedBarrier(MachineInstr* MI) {$/;"	f	file:
IsShiftedMask	Target/Mips/MipsISelLowering.cpp	/^static bool IsShiftedMask(uint64_t I, uint64_t &Pos, uint64_t &Size) {$/;"	f	file:
IsSignalFrame	MC/MCDwarf.cpp	/^    bool IsSignalFrame;$/;"	m	struct:__anon224::CIEKey	file:
IsSigned	Transforms/Scalar/IndVarSimplify.cpp	/^    bool IsSigned;          \/\/ Was an sext user seen before a zext?$/;"	m	struct:__anon496::WideIVInfo	file:
IsSigned	Transforms/Scalar/IndVarSimplify.cpp	/^  bool IsSigned;$/;"	m	class:__anon497::WidenIV	file:
IsSimpleKeyAllowed	Support/YAMLParser.cpp	/^  bool IsSimpleKeyAllowed;$/;"	m	class:llvm::yaml::Scanner	file:
IsSingleFloat	Target/Mips/MipsSubtarget.h	/^  bool IsSingleFloat;$/;"	m	class:llvm::MipsSubtarget
IsSingleInstrConstant	Target/ARM/ARMISelLowering.cpp	/^static SDValue IsSingleInstrConstant(SDValue N, SelectionDAG &DAG,$/;"	f	file:
IsSingleValuePHICycle	CodeGen/OptimizePHIs.cpp	/^bool OptimizePHIs::IsSingleValuePHICycle(MachineInstr *MI,$/;"	f	class:OptimizePHIs
IsSoImm	Target/ARM/ARMConstantIslandPass.cpp	/^      bool IsSoImm;$/;"	m	struct:__anon310::ARMConstantIslands::CPUser	file:
IsSplittable	Transforms/Scalar/SROA.cpp	/^    bool IsSplittable;$/;"	m	struct:__anon557::AllocaPartitioning::MemTransferOffsets	file:
IsSplittable	Transforms/Scalar/SROA.cpp	/^    bool IsSplittable;$/;"	m	struct:__anon557::AllocaPartitioning::Partition	file:
IsStartOfStream	Support/YAMLParser.cpp	/^  bool IsStartOfStream;$/;"	m	class:llvm::yaml::Scanner	file:
IsStmt	DebugInfo/DWARFDebugLine.h	/^    uint8_t IsStmt:1,$/;"	m	struct:llvm::DWARFDebugLine::Row
IsSymbolRefDifferenceFullyResolved	MC/MCObjectWriter.cpp	/^MCObjectWriter::IsSymbolRefDifferenceFullyResolved(const MCAssembler &Asm,$/;"	f	class:MCObjectWriter
IsSymbolRefDifferenceFullyResolvedImpl	MC/ELFObjectWriter.cpp	/^ELFObjectWriter::IsSymbolRefDifferenceFullyResolvedImpl(const MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
IsSymbolRefDifferenceFullyResolvedImpl	MC/MCObjectWriter.cpp	/^MCObjectWriter::IsSymbolRefDifferenceFullyResolvedImpl(const MCAssembler &Asm,$/;"	f	class:MCObjectWriter
IsSymbolRefDifferenceFullyResolvedImpl	MC/MachObjectWriter.cpp	/^IsSymbolRefDifferenceFullyResolvedImpl(const MCAssembler &Asm,$/;"	f	class:MachObjectWriter
IsTailCallConvention	Target/X86/X86ISelLowering.cpp	/^static bool IsTailCallConvention(CallingConv::ID CC) {$/;"	f	file:
IsTailCallRelease	Transforms/Scalar/ObjCARC.cpp	/^    bool IsTailCallRelease;$/;"	m	struct:__anon505::RRInfo	file:
IsThumb	Target/ARM/ARMCodeEmitter.cpp	/^    bool IsThumb;$/;"	m	class:__anon297::ARMCodeEmitter	file:
IsTopDown	CodeGen/MachineScheduler.cpp	/^  bool IsTopDown;$/;"	m	class:__anon129::InstructionShuffler	file:
IsTrivialUnswitchCondition	Transforms/Scalar/LoopUnswitch.cpp	/^bool LoopUnswitch::IsTrivialUnswitchCondition(Value *Cond, Constant **Val,$/;"	f	class:LoopUnswitch
IsU6_0_Offset	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static bool IsU6_0_Offset(SDNode * S) {$/;"	f	file:
IsU6_1_Offset	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static bool IsU6_1_Offset(SDNode * S) {$/;"	f	file:
IsU6_2_Offset	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static bool IsU6_2_Offset(SDNode * S) {$/;"	f	file:
IsUAMemFast	Target/X86/X86Subtarget.h	/^  bool IsUAMemFast;$/;"	m	class:llvm::X86Subtarget
IsUnconditionalJump	Target/Hexagon/HexagonCFGOptimizer.cpp	/^static bool IsUnconditionalJump(int Opc) {$/;"	f	namespace:__anon402
IsUnpredicable	CodeGen/IfConversion.cpp	/^      bool IsUnpredicable  : 1;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
IsUnsafe	Analysis/ScalarEvolutionExpander.cpp	/^  bool IsUnsafe;$/;"	m	struct:__anon23::SCEVFindUnsafe	file:
IsUsedIn	MC/MCParser/AsmParser.cpp	/^static bool IsUsedIn(const MCSymbol *Sym, const MCExpr *Value) {$/;"	f	file:
IsUserOfGlobalSafeForSRA	Transforms/IPO/GlobalOpt.cpp	/^static bool IsUserOfGlobalSafeForSRA(User *U, GlobalValue *GV) {$/;"	f	file:
IsV9	Target/Sparc/SparcSubtarget.h	/^  bool IsV9;$/;"	m	class:llvm::SparcSubtarget
IsVIS	Target/Sparc/SparcSubtarget.h	/^  bool IsVIS;$/;"	m	class:llvm::SparcSubtarget
IsValid	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^      bool IsValid() const { return Node != NULL; }$/;"	f	class:llvm::ScheduleDAGSDNodes::RegDefIter
IsValid	Support/Windows/Windows.h	/^  static bool IsValid(handle_type h) {$/;"	f	struct:CommonHandleTraits
IsValid	Support/Windows/Windows.h	/^  static bool IsValid(handle_type h) {$/;"	f	struct:CryptContextTraits
IsValueFullyAvailableInBlock	Transforms/Scalar/GVN.cpp	/^static bool IsValueFullyAvailableInBlock(BasicBlock *BB,$/;"	f	file:
IsValueInMap	Transforms/Scalar/Reassociate.cpp	/^    IsValueInMap(const DenseMap<Value *, unsigned> &Map) : Map(Map) {}$/;"	f	struct:__anon550::IsValueInMap
IsValueInMap	Transforms/Scalar/Reassociate.cpp	/^  struct IsValueInMap {$/;"	s	namespace:__anon550	file:
IsVarArg	Target/Hexagon/HexagonCallingConvLower.h	/^  bool IsVarArg;$/;"	m	class:llvm::Hexagon_CCState
IsWin64	Target/X86/X86RegisterInfo.h	/^  bool IsWin64;$/;"	m	class:llvm::X86RegisterInfo
IsWordAlignedBasePlusConstantOffset	Target/XCore/XCoreISelLowering.cpp	/^IsWordAlignedBasePlusConstantOffset(SDValue Addr, SDValue &AlignedBase,$/;"	f	file:
Is_PostInc_S4_Offset	Target/Hexagon/HexagonISelLowering.cpp	/^static bool Is_PostInc_S4_Offset(SDNode * S, int ShiftAmount) {$/;"	f	file:
Isa	DebugInfo/DWARFDebugLine.h	/^    uint8_t Isa;$/;"	m	struct:llvm::DWARFDebugLine::Row
IssueCount	CodeGen/MachineScheduler.cpp	/^    unsigned IssueCount;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
IssueCount	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  unsigned IssueCount;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
IssueCount	Target/Hexagon/HexagonMachineScheduler.h	/^    unsigned IssueCount;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
Iter	Target/Mips/MipsLongBranch.cpp	/^  typedef MachineBasicBlock::iterator Iter;$/;"	t	namespace:__anon437	file:
IterRecord	TableGen/TGParser.h	/^    IterRecord(VarInit *Var, Init *Val) : IterVar(Var), IterValue(Val) {}$/;"	f	struct:llvm::TGParser::IterRecord
IterRecord	TableGen/TGParser.h	/^  struct IterRecord {$/;"	s	class:llvm::TGParser
IterSet	TableGen/TGParser.h	/^  typedef std::vector<IterRecord> IterSet;$/;"	t	class:llvm::TGParser
IterValue	TableGen/TGParser.h	/^    Init *IterValue;$/;"	m	struct:llvm::TGParser::IterRecord
IterVar	TableGen/TGParser.h	/^    VarInit *IterVar;$/;"	m	struct:llvm::ForeachLoop
IterVar	TableGen/TGParser.h	/^    VarInit *IterVar;$/;"	m	struct:llvm::TGParser::IterRecord
Iterations	CodeGen/ShrinkWrapping.cpp	/^  None, BasicInfo, Iterations, Details$/;"	e	enum:ShrinkWrapDebugLevel	file:
Itins	Target/ARM/ARMISelLowering.h	/^    const InstrItineraryData *Itins;$/;"	m	class:llvm::ARMTargetLowering
JBLinkTy	Transforms/Utils/LowerInvoke.cpp	/^    StructType *JBLinkTy;$/;"	m	class:__anon474::LowerInvoke	file:
JBListHead	Transforms/Utils/LowerInvoke.cpp	/^    GlobalVariable *JBListHead;$/;"	m	class:__anon474::LowerInvoke	file:
JCE	ExecutionEngine/JIT/JIT.h	/^  JITCodeEmitter *JCE;     \/\/ JCE object$/;"	m	class:llvm::JIT
JCE	ExecutionEngine/JIT/JITDwarfEmitter.h	/^  JITCodeEmitter* JCE;$/;"	m	class:llvm::JITDwarfEmitter
JE	ExecutionEngine/JIT/JITEmitter.cpp	/^    JITEmitter &JE;$/;"	m	class:__anon182::JITResolver	file:
JIT	ExecutionEngine/JIT/JIT.cpp	/^JIT::JIT(Module *M, TargetMachine &tm, TargetJITInfo &tji,$/;"	f	class:JIT
JIT	ExecutionEngine/JIT/JIT.h	/^class JIT : public ExecutionEngine {$/;"	c	namespace:llvm
JITAPI	ExecutionEngine/IntelJITEvents/jitprofiling.h	236;"	d
JITCompilerFn	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITResolver::JITCompilerFn(void *Stub) {$/;"	f	class:JITResolver
JITCompilerFunction	Target/ARM/ARMJITInfo.cpp	/^static TargetJITInfo::JITCompilerFn JITCompilerFunction;$/;"	v	file:
JITCompilerFunction	Target/Mips/MipsJITInfo.cpp	/^static TargetJITInfo::JITCompilerFn JITCompilerFunction;$/;"	v	file:
JITCompilerFunction	Target/PowerPC/PPCJITInfo.cpp	/^static TargetJITInfo::JITCompilerFn JITCompilerFunction;$/;"	v	file:
JITCompilerFunction	Target/X86/X86JITInfo.cpp	/^static TargetJITInfo::JITCompilerFn JITCompilerFunction;$/;"	v	file:
JITCtor	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngine *(*ExecutionEngine::JITCtor)($/;"	v
JITDebugLock	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^llvm::sys::Mutex JITDebugLock;$/;"	m	namespace:__anon178	file:
JITDwarfEmitter	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^JITDwarfEmitter::JITDwarfEmitter(JIT& theJit) : MMI(0), Jit(theJit) {}$/;"	f	class:JITDwarfEmitter
JITDwarfEmitter	ExecutionEngine/JIT/JITDwarfEmitter.h	/^class JITDwarfEmitter {$/;"	c	namespace:llvm
JITEmitter	ExecutionEngine/JIT/JITEmitter.cpp	/^    JITEmitter(JIT &jit, JITMemoryManager *JMM, TargetMachine &TM)$/;"	f	class:__anon182::JITEmitter
JITEmitter	ExecutionEngine/JIT/JITEmitter.cpp	/^  class JITEmitter : public JITCodeEmitter {$/;"	c	namespace:__anon182	file:
JITExceptionHandling	ExecutionEngine/JIT/JITEmitter.cpp	/^    bool JITExceptionHandling;$/;"	m	class:__anon182::JITEmitter	file:
JITInfo	Target/ARM/ARMTargetMachine.h	/^  ARMJITInfo          JITInfo;$/;"	m	class:llvm::ARMBaseTargetMachine
JITInfo	Target/Mips/MipsTargetMachine.h	/^  MipsJITInfo JITInfo;$/;"	m	class:llvm::MipsTargetMachine
JITInfo	Target/PowerPC/PPCTargetMachine.h	/^  PPCJITInfo          JITInfo;$/;"	m	class:llvm::PPCTargetMachine
JITInfo	Target/X86/X86TargetMachine.h	/^  X86JITInfo        JITInfo;$/;"	m	class:llvm::X86_32TargetMachine
JITInfo	Target/X86/X86TargetMachine.h	/^  X86JITInfo        JITInfo;$/;"	m	class:llvm::X86_64TargetMachine
JITRegistrar	ExecutionEngine/RuntimeDyld/JITRegistrar.h	/^  JITRegistrar() {}$/;"	f	class:llvm::JITRegistrar
JITRegistrar	ExecutionEngine/RuntimeDyld/JITRegistrar.h	/^class JITRegistrar {$/;"	c	namespace:llvm
JITRegistrator	ExecutionEngine/JIT/JIT.cpp	/^} JITRegistrator;$/;"	m	namespace:__anon184	typeref:struct:__anon184::RegisterJIT	file:
JITRegistrator	ExecutionEngine/MCJIT/MCJIT.cpp	/^} JITRegistrator;$/;"	m	namespace:__anon192	typeref:struct:__anon192::RegisterJIT	file:
JITResolver	ExecutionEngine/JIT/JITEmitter.cpp	/^    explicit JITResolver(JIT &jit, JITEmitter &je)$/;"	f	class:__anon182::JITResolver
JITResolver	ExecutionEngine/JIT/JITEmitter.cpp	/^  class JITResolver {$/;"	c	namespace:__anon182	file:
JITResolverState	ExecutionEngine/JIT/JITEmitter.cpp	/^    JITResolverState(JIT *jit) : FunctionToLazyStubMap(this),$/;"	f	class:__anon182::JITResolverState
JITResolverState	ExecutionEngine/JIT/JITEmitter.cpp	/^  class JITResolverState {$/;"	c	namespace:__anon182	file:
JITSlabAllocator	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    JITSlabAllocator(DefaultJITMemoryManager &jmm) : JMM(jmm) { }$/;"	f	class:__anon190::JITSlabAllocator
JITSlabAllocator	ExecutionEngine/JIT/JITMemoryManager.cpp	/^  class JITSlabAllocator : public SlabAllocator {$/;"	c	namespace:__anon190	file:
JITState	ExecutionEngine/JIT/JIT.h	/^  explicit JITState(Module *M) : PM(M), M(M) {}$/;"	f	class:llvm::JITState
JITState	ExecutionEngine/JIT/JIT.h	/^class JITState {$/;"	c	namespace:llvm
JIT_H	ExecutionEngine/JIT/JIT.h	15;"	d
JIT_NOACTION	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    JIT_NOACTION = 0,$/;"	e	enum:__anon177	file:
JIT_REGISTER_FN	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    JIT_REGISTER_FN,$/;"	e	enum:__anon177	file:
JIT_UNREGISTER_FN	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    JIT_UNREGISTER_FN$/;"	e	enum:__anon177	file:
JITs	ExecutionEngine/JIT/JIT.cpp	/^  SmallPtrSet<JIT*, 1> JITs;  \/\/ Optimize for process containing just 1 JIT.$/;"	m	class:__anon188::JitPool	file:
JMM	ExecutionEngine/JIT/JIT.h	/^  JITMemoryManager *JMM;$/;"	m	class:llvm::JIT
JMM	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    DefaultJITMemoryManager &JMM;$/;"	m	class:__anon190::JITSlabAllocator	file:
JMM	ExecutionEngine/MCJIT/MCJITMemoryManager.h	/^  OwningPtr<JITMemoryManager> JMM;$/;"	m	class:llvm::MCJITMemoryManager
JT	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    int JT;$/;"	m	struct:__anon392::MSP430ISelAddressMode	file:
JT	Target/X86/X86ISelDAGToDAG.cpp	/^    int JT;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
JTCases	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  std::vector<JumpTableBlock> JTCases;$/;"	m	class:llvm::SelectionDAGBuilder
JTI	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    unsigned JTI;$/;"	m	struct:llvm::SelectionDAGBuilder::JumpTable
JTI	Target/ARM/ARMCodeEmitter.cpp	/^    ARMJITInfo                *JTI;$/;"	m	class:__anon297::ARMCodeEmitter	file:
JTI	Target/Mips/MipsCodeEmitter.cpp	/^  MipsJITInfo *JTI;$/;"	m	class:__anon438::MipsCodeEmitter	file:
Jit	ExecutionEngine/JIT/JITDwarfEmitter.h	/^  JIT& Jit;$/;"	m	class:llvm::JITDwarfEmitter
JitPool	ExecutionEngine/JIT/JIT.cpp	/^class JitPool {$/;"	c	namespace:__anon188	file:
JmpLink	Target/MBlaze/MBlazeISelLowering.h	/^      JmpLink,$/;"	e	enum:llvm::MBlazeISD::NodeType
JmpLink	Target/Mips/MipsISelLowering.h	/^      JmpLink,$/;"	e	enum:llvm::MipsISD::NodeType
JobHandleTraits	Support/Windows/Windows.h	/^struct JobHandleTraits : CommonHandleTraits {$/;"	s
Join	MC/SubtargetFeature.cpp	/^static std::string Join(const std::vector<std::string> &V) {$/;"	f	file:
JoinIntegers	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDValue DAGTypeLegalizer::JoinIntegers(SDValue Lo, SDValue Hi) {$/;"	f	class:DAGTypeLegalizer
JoinVals	CodeGen/RegisterCoalescer.cpp	/^  JoinVals(LiveInterval &li, unsigned subIdx,$/;"	f	class:__anon115::JoinVals
JoinVals	CodeGen/RegisterCoalescer.cpp	/^class JoinVals {$/;"	c	namespace:__anon115	file:
JumpBuffer	Support/CrashRecoveryContext.cpp	/^  ::jmp_buf JumpBuffer;$/;"	m	struct:__anon255::CrashRecoveryContextImpl	file:
JumpTable	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    JumpTable(unsigned R, unsigned J, MachineBasicBlock *M,$/;"	f	struct:llvm::SelectionDAGBuilder::JumpTable
JumpTable	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  struct JumpTable {$/;"	s	class:llvm::SelectionDAGBuilder
JumpTable	ExecutionEngine/JIT/JITEmitter.cpp	/^    MachineJumpTableInfo *JumpTable;$/;"	m	class:__anon182::JITEmitter	file:
JumpTableBase	ExecutionEngine/JIT/JITEmitter.cpp	/^    void *JumpTableBase;$/;"	m	class:__anon182::JITEmitter	file:
JumpTableBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  typedef std::pair<JumpTableHeader, JumpTable> JumpTableBlock;$/;"	t	class:llvm::SelectionDAGBuilder
JumpTableHeader	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    JumpTableHeader(APInt F, APInt L, const Value *SV, MachineBasicBlock *H,$/;"	f	struct:llvm::SelectionDAGBuilder::JumpTableHeader
JumpTableHeader	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  struct JumpTableHeader {$/;"	s	class:llvm::SelectionDAGBuilder
JumpTableId2AddrMap	Target/ARM/ARMJITInfo.h	/^    SmallVector<intptr_t, 16> JumpTableId2AddrMap;$/;"	m	class:llvm::ARMJITInfo
JumpTableUId	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned JumpTableUId;$/;"	m	class:llvm::ARMFunctionInfo
JumpThreading	Transforms/Scalar/JumpThreading.cpp	/^    JumpThreading() : FunctionPass(ID) {$/;"	f	class:__anon542::JumpThreading
JumpThreading	Transforms/Scalar/JumpThreading.cpp	/^  class JumpThreading : public FunctionPass {$/;"	c	namespace:__anon542	file:
JumpToLoc	MC/MCParser/AsmParser.cpp	/^void AsmParser::JumpToLoc(SMLoc Loc) {$/;"	f	class:AsmParser
JustMod	Analysis/AliasAnalysisCounter.cpp	/^    unsigned NoMR, JustRef, JustMod, MR;$/;"	m	class:__anon43::AliasAnalysisCounter	file:
JustRef	Analysis/AliasAnalysisCounter.cpp	/^    unsigned NoMR, JustRef, JustMod, MR;$/;"	m	class:__anon43::AliasAnalysisCounter	file:
KEYMGR_GCC3_DW2_OBJ_LIST	ExecutionEngine/JIT/JIT.cpp	144;"	d	file:
KEYWORD	AsmParser/LLLexer.cpp	448;"	d	file:
KEYWORD	AsmParser/LLLexer.cpp	579;"	d	file:
KeepRegs	CodeGen/CriticalAntiDepBreaker.h	/^    BitVector KeepRegs;$/;"	m	class:llvm::CriticalAntiDepBreaker
Key	MC/MCDisassembler/EDDisassembler.h	/^  CPUKey Key;$/;"	m	struct:llvm::EDDisassembler
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const APFloat& V) : val(V){}$/;"	f	struct:llvm::DenseMapAPFloatKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const APInt& V, Type* Ty) : val(V), type(Ty) {}$/;"	f	struct:llvm::DenseMapAPIntKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const ArrayRef<Type*>& E, bool P) :$/;"	f	struct:llvm::AnonStructTypeKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const FunctionType* FT) :$/;"	f	struct:llvm::FunctionTypeKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const KeyTy& that) : val(that.val) {}$/;"	f	struct:llvm::DenseMapAPFloatKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const KeyTy& that) : val(that.val), type(that.type) {}$/;"	f	struct:llvm::DenseMapAPIntKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const KeyTy& that) :$/;"	f	struct:llvm::AnonStructTypeKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const KeyTy& that) :$/;"	f	struct:llvm::FunctionTypeKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const StructType* ST) :$/;"	f	struct:llvm::AnonStructTypeKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^    KeyTy(const Type* R, const ArrayRef<Type*>& P, bool V) :$/;"	f	struct:llvm::FunctionTypeKeyInfo::KeyTy
KeyTy	VMCore/LLVMContextImpl.h	/^  struct KeyTy {$/;"	s	struct:llvm::AnonStructTypeKeyInfo
KeyTy	VMCore/LLVMContextImpl.h	/^  struct KeyTy {$/;"	s	struct:llvm::DenseMapAPFloatKeyInfo
KeyTy	VMCore/LLVMContextImpl.h	/^  struct KeyTy {$/;"	s	struct:llvm::DenseMapAPIntKeyInfo
KeyTy	VMCore/LLVMContextImpl.h	/^  struct KeyTy {$/;"	s	struct:llvm::FunctionTypeKeyInfo
Kill	CodeGen/LiveRangeCalc.h	/^    SlotIndex Kill;$/;"	m	struct:llvm::LiveRangeCalc::LiveInBlock
KillIndices	CodeGen/AggressiveAntiDepBreaker.h	/^    std::vector<unsigned> KillIndices;$/;"	m	class:llvm::AggressiveAntiDepState
KillIndices	CodeGen/CriticalAntiDepBreaker.h	/^    std::vector<unsigned> KillIndices;$/;"	m	class:llvm::CriticalAntiDepBreaker
KillsSource	CodeGen/InlineSpiller.cpp	/^    bool KillsSource;$/;"	m	struct:__anon155::InlineSpiller::SibValueInfo	file:
Kind	Analysis/ScalarEvolutionNormalization.cpp	/^  TransformKind Kind;$/;"	m	class:__anon48::PostIncTransform	file:
Kind	AsmParser/LLParser.h	/^    } Kind;$/;"	m	struct:llvm::ValID	typeref:enum:llvm::ValID::__anon53
Kind	AsmParser/LLToken.h	/^  enum Kind {$/;"	g	namespace:llvm::lltok
Kind	CodeGen/IfConversion.cpp	/^      IfcvtKind Kind;$/;"	m	struct:__anon99::IfConverter::IfcvtToken	file:
Kind	MC/MCParser/AsmParser.cpp	/^  AsmRewriteKind Kind;$/;"	m	struct:__anon213::AsmRewrite	file:
Kind	Support/YAMLParser.cpp	/^  } Kind;$/;"	m	struct:llvm::yaml::Token	typeref:enum:llvm::yaml::Token::TokenKind	file:
Kind	Target/ARM/ARMConstantPoolValue.h	/^  ARMCP::ARMCPKind Kind;   \/\/ Kind of constant.$/;"	m	class:llvm::ARMConstantPoolValue
Kind	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  } Kind;$/;"	m	class:__anon261::ARMOperand	typeref:enum:__anon261::ARMOperand::KindTy	file:
Kind	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  const VariantKind Kind;$/;"	m	class:llvm::ARMMCExpr
Kind	Target/Hexagon/HexagonHardwareLoops.cpp	/^    CountValueType Kind;$/;"	m	class:__anon408::CountValue	file:
Kind	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  } Kind;$/;"	m	struct:__anon446::MBlazeOperand	typeref:enum:__anon446::MBlazeOperand::KindTy	file:
Kind	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  } Kind;$/;"	m	class:__anon423::MipsOperand	typeref:enum:__anon423::MipsOperand::KindTy	file:
Kind	Target/PowerPC/PPCCTRLoops.cpp	/^    CountValueType Kind;$/;"	m	class:__anon325::CountValue	file:
Kind	Target/X86/AsmParser/X86AsmParser.cpp	/^  } Kind;$/;"	m	struct:__anon336::X86Operand	typeref:enum:__anon336::X86Operand::KindTy	file:
Kind	Transforms/Scalar/LoopStrengthReduce.cpp	/^  KindType Kind;$/;"	m	class:__anon517::LSRUse	file:
Kind	Transforms/Utils/SimplifyCFG.cpp	/^    } Kind;$/;"	m	class:__anon480::SwitchLookupTable	typeref:enum:__anon480::SwitchLookupTable::__anon481	file:
Kind	Transforms/Vectorize/LoopVectorize.cpp	/^    ReductionKind Kind;$/;"	m	struct:__anon605::LoopVectorizationLegality::ReductionDescriptor	file:
KindTy	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  enum KindTy {$/;"	g	class:__anon261::ARMOperand	file:
KindTy	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  enum KindTy {$/;"	g	struct:__anon446::MBlazeOperand	file:
KindTy	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  enum KindTy {$/;"	g	class:__anon423::MipsOperand	file:
KindTy	Target/X86/AsmParser/X86AsmParser.cpp	/^  enum KindTy {$/;"	g	struct:__anon336::X86Operand	file:
KindType	Transforms/Scalar/LoopStrengthReduce.cpp	/^  enum KindType {$/;"	g	class:__anon517::LSRUse	file:
KnownAlignment	Target/ARM/ARMConstantIslandPass.cpp	/^      bool KnownAlignment;$/;"	m	struct:__anon310::ARMConstantIslands::CPUser	file:
KnownBits	Target/ARM/ARMConstantIslandPass.cpp	/^      uint8_t KnownBits;$/;"	m	struct:__anon310::ARMConstantIslands::BasicBlockInfo	file:
KnownFeasibleEdges	Transforms/Scalar/SCCP.cpp	/^  DenseSet<Edge> KnownFeasibleEdges;$/;"	m	class:__anon531::SCCPSolver	file:
KnownPositiveRefCount	Transforms/Scalar/ObjCARC.cpp	/^    bool KnownPositiveRefCount;$/;"	m	class:__anon506::PtrState	file:
KnownSafe	Transforms/Scalar/ObjCARC.cpp	/^    bool KnownSafe;$/;"	m	struct:__anon505::RRInfo	file:
KnuthDiv	Support/APInt.cpp	/^static void KnuthDiv(unsigned *u, unsigned *v, unsigned *q, unsigned* r,$/;"	f	file:
L	Transforms/Scalar/IndVarSimplify.cpp	/^  Loop            *L;$/;"	m	class:__anon497::WidenIV	file:
L	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Loop *const L;$/;"	m	class:__anon518::LSRInstance	file:
L	Transforms/Utils/LCSSA.cpp	/^    Loop *L;$/;"	m	struct:__anon475::LCSSA	file:
L	Transforms/Utils/LoopSimplify.cpp	/^    Loop *L;$/;"	m	struct:__anon483::LoopSimplify	file:
L	Transforms/Utils/SimplifyIndVar.cpp	/^    Loop             *L;$/;"	m	class:__anon463::SimplifyIndvar	file:
LADD	Target/XCore/XCoreISelLowering.h	/^      LADD,$/;"	e	enum:llvm::XCoreISD::NodeType
LARX	Target/PowerPC/PPCISelLowering.h	/^      LARX,$/;"	e	enum:llvm::PPCISD::NodeType
LAST_SPUISD	Target/CellSPU/SPUISelLowering.h	/^      LAST_SPUISD               \/\/\/< Last user-defined instruction$/;"	e	enum:llvm::SPUISD::NodeType
LB	CodeGen/MachineTraceMetrics.cpp	/^  LoopBounds &LB;$/;"	m	class:llvm::po_iterator_storage	file:
LBH_NONTAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t LBH_NONTAKEN_WEIGHT = 4;$/;"	v	file:
LBH_TAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t LBH_TAKEN_WEIGHT = 124;$/;"	v	file:
LBRX	Target/PowerPC/PPCISelLowering.h	/^      LBRX$/;"	e	enum:llvm::PPCISD::NodeType
LBlocks	CodeGen/LiveDebugVariables.cpp	/^  SmallPtrSet<const MachineBasicBlock *, 4> LBlocks;$/;"	m	class:__anon151::UserValueScopes	file:
LCMPXCHG16_DAG	Target/X86/X86ISelLowering.h	/^      LCMPXCHG16_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
LCMPXCHG8_DAG	Target/X86/X86ISelLowering.h	/^      LCMPXCHG8_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
LCMPXCHG_DAG	Target/X86/X86ISelLowering.h	/^      LCMPXCHG_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
LCSSA	Transforms/Utils/LCSSA.cpp	/^    LCSSA() : LoopPass(ID) {$/;"	f	struct:__anon475::LCSSA
LCSSA	Transforms/Utils/LCSSA.cpp	/^  struct LCSSA : public LoopPass {$/;"	s	namespace:__anon475	file:
LCSSAID	Transforms/Utils/LCSSA.cpp	/^char &llvm::LCSSAID = LCSSA::ID;$/;"	m	class:llvm	file:
LDL	Target/Mips/MipsISelLowering.h	/^      LDL,$/;"	e	enum:llvm::MipsISD::NodeType
LDR	Target/Mips/MipsISelLowering.h	/^      LDR,$/;"	e	enum:llvm::MipsISD::NodeType
LDRESULT	Target/CellSPU/SPUISelLowering.h	/^      LDRESULT,                 \/\/\/< Load result (value, chain)$/;"	e	enum:llvm::SPUISD::NodeType
LDTLSCleanup	Target/X86/X86InstrInfo.cpp	/^    LDTLSCleanup() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon376::LDTLSCleanup
LDTLSCleanup	Target/X86/X86InstrInfo.cpp	/^  struct LDTLSCleanup : public MachineFunctionPass {$/;"	s	namespace:__anon376	file:
LDV	CodeGen/RegisterCoalescer.cpp	/^    LiveDebugVariables *LDV;$/;"	m	class:__anon114::RegisterCoalescer	file:
LDVImpl	CodeGen/LiveDebugVariables.cpp	/^  LDVImpl(LiveDebugVariables *ps) : pass(*ps) {}$/;"	f	class:__anon153::LDVImpl
LDVImpl	CodeGen/LiveDebugVariables.cpp	/^class LDVImpl {$/;"	c	namespace:__anon153	file:
LE	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    LE,            \/\/ Less than or equal         <, ==, or unordered$/;"	e	enum:llvm::ARMCC::CondCodes
LE	Target/MBlaze/MBlazeISelLowering.h	/^      LE$/;"	e	enum:llvm::MBlazeCC::CC
LE	Target/NVPTX/NVPTX.h	/^  LE,$/;"	e	enum:llvm::NVPTXCC::CondCodes
LEVEL	Analysis/IPA/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Analysis/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	Archive/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	AsmParser/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	Bitcode/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	Bitcode/Reader/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Bitcode/Writer/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	CodeGen/AsmPrinter/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	CodeGen/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	CodeGen/SelectionDAG/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	DebugInfo/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	ExecutionEngine/IntelJITEvents/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	ExecutionEngine/Interpreter/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	ExecutionEngine/JIT/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	ExecutionEngine/MCJIT/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	ExecutionEngine/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	ExecutionEngine/OProfileJIT/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	ExecutionEngine/RuntimeDyld/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Linker/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	MC/MCDisassembler/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	MC/MCParser/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	MC/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	Makefile	/^LEVEL = ..$/;"	m
LEVEL	Object/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	Support/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	TableGen/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	Target/ARM/AsmParser/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/ARM/Disassembler/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/ARM/InstPrinter/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/ARM/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/ARM/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/ARM/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/CellSPU/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/CellSPU/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/CellSPU/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/CppBackend/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/CppBackend/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Hexagon/InstPrinter/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Hexagon/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Hexagon/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/Hexagon/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/MBlaze/AsmParser/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/MBlaze/Disassembler/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/MBlaze/InstPrinter/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/MBlaze/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/MBlaze/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/MBlaze/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/MSP430/InstPrinter/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/MSP430/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/MSP430/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/MSP430/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	Target/Mips/AsmParser/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Mips/Disassembler/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Mips/InstPrinter/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Mips/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Mips/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/Mips/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/NVPTX/InstPrinter/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/NVPTX/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/NVPTX/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/NVPTX/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/PowerPC/InstPrinter/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/PowerPC/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/PowerPC/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/PowerPC/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Sparc/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/Sparc/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/Sparc/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/X86/AsmParser/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/X86/Disassembler/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/X86/InstPrinter/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/X86/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/X86/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/X86/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/X86/Utils/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/XCore/MCTargetDesc/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Target/XCore/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Target/XCore/TargetInfo/Makefile	/^LEVEL = ..\/..\/..\/..$/;"	m
LEVEL	Transforms/DDA/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Transforms/Hello/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Transforms/IPO/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Transforms/InstCombine/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Transforms/Instrumentation/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Transforms/Makefile	/^LEVEL = ..\/..$/;"	m
LEVEL	Transforms/Scalar/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Transforms/Utils/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	Transforms/Vectorize/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	VMCore/Makefile	/^LEVEL = ..\/..$/;"	m
LFENCE	Target/X86/X86ISelLowering.h	/^      LFENCE,$/;"	e	enum:llvm::X86ISD::NodeType
LI	Analysis/LoopInfo.cpp	/^  LoopInfo *LI;$/;"	m	class:__anon37::UnloopUpdater	file:
LI	Analysis/ProfileEstimatorPass.cpp	/^    LoopInfo *LI;$/;"	m	class:__anon9::ProfileEstimatorPass	file:
LI	Analysis/ScalarEvolution.cpp	/^    const LoopInfo *const LI;$/;"	m	class:__anon30::SCEVComplexityCompare	file:
LI	CodeGen/LiveRangeCalc.h	/^    LiveInterval *LI;$/;"	m	struct:llvm::LiveRangeCalc::LiveInBlock
LI	CodeGen/MachineSink.cpp	/^    MachineLoopInfo *LI;$/;"	m	class:__anon101::MachineSinking	file:
LI	CodeGen/MachineSink.cpp	/^    MachineLoopInfo *LI;$/;"	m	struct:__anon101::SuccessorSorter	file:
LI	CodeGen/RegisterCoalescer.cpp	/^  LiveInterval &LI;$/;"	m	class:__anon115::JoinVals	file:
LI	CodeGen/StrongPHIElimination.cpp	/^    LiveIntervals *LI;$/;"	m	class:__anon154::StrongPHIElimination	file:
LI	CodeGen/StrongPHIElimination.cpp	/^    LiveIntervals *LI;$/;"	m	struct:__anon154::MIIndexCompare	file:
LI	Transforms/Scalar/IndVarSimplify.cpp	/^    LoopInfo        *LI;$/;"	m	class:__anon495::IndVarSimplify	file:
LI	Transforms/Scalar/IndVarSimplify.cpp	/^  LoopInfo        *LI;$/;"	m	class:__anon497::WidenIV	file:
LI	Transforms/Scalar/LICM.cpp	/^    LoopInfo      *LI;       \/\/ Current LoopInfo$/;"	m	struct:__anon568::LICM	file:
LI	Transforms/Scalar/LoopRotation.cpp	/^    LoopInfo *LI;$/;"	m	class:__anon534::LoopRotate	file:
LI	Transforms/Scalar/LoopStrengthReduce.cpp	/^  LoopInfo &LI;$/;"	m	class:__anon518::LSRInstance	file:
LI	Transforms/Scalar/LoopUnswitch.cpp	/^    LoopInfo *LI;  \/\/ Loop information$/;"	m	class:__anon494::LoopUnswitch	file:
LI	Transforms/Scalar/Sink.cpp	/^    LoopInfo *LI;$/;"	m	class:__anon556::Sinking	file:
LI	Transforms/Utils/LoopSimplify.cpp	/^    LoopInfo *LI;$/;"	m	struct:__anon483::LoopSimplify	file:
LI	Transforms/Utils/SimplifyIndVar.cpp	/^    LoopInfo         *LI;$/;"	m	class:__anon463::SimplifyIndvar	file:
LI	Transforms/Vectorize/LoopVectorize.cpp	/^  LoopInfo *LI;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
LI	Transforms/Vectorize/LoopVectorize.cpp	/^  LoopInfo *LI;$/;"	m	struct:__anon605::LoopVectorize	file:
LI2NodeMap	CodeGen/RegAllocPBQP.cpp	/^  typedef std::map<const LiveInterval*, unsigned> LI2NodeMap;$/;"	t	class:__anon135::RegAllocPBQP	file:
LIBITTAPI	ExecutionEngine/IntelJITEvents/ittnotify_config.h	100;"	d
LIBITTAPI_CALL	ExecutionEngine/IntelJITEvents/ittnotify_config.h	104;"	d
LIBRARYNAME	Analysis/IPA/Makefile	/^LIBRARYNAME = LLVMipa$/;"	m
LIBRARYNAME	Analysis/Makefile	/^LIBRARYNAME = LLVMAnalysis$/;"	m
LIBRARYNAME	Archive/Makefile	/^LIBRARYNAME = LLVMArchive$/;"	m
LIBRARYNAME	AsmParser/Makefile	/^LIBRARYNAME := LLVMAsmParser$/;"	m
LIBRARYNAME	Bitcode/Reader/Makefile	/^LIBRARYNAME = LLVMBitReader$/;"	m
LIBRARYNAME	Bitcode/Writer/Makefile	/^LIBRARYNAME = LLVMBitWriter$/;"	m
LIBRARYNAME	CodeGen/AsmPrinter/Makefile	/^LIBRARYNAME = LLVMAsmPrinter$/;"	m
LIBRARYNAME	CodeGen/Makefile	/^LIBRARYNAME = LLVMCodeGen$/;"	m
LIBRARYNAME	CodeGen/SelectionDAG/Makefile	/^LIBRARYNAME = LLVMSelectionDAG$/;"	m
LIBRARYNAME	DebugInfo/Makefile	/^LIBRARYNAME = LLVMDebugInfo$/;"	m
LIBRARYNAME	ExecutionEngine/IntelJITEvents/Makefile	/^LIBRARYNAME = LLVMIntelJITEvents$/;"	m
LIBRARYNAME	ExecutionEngine/Interpreter/Makefile	/^LIBRARYNAME = LLVMInterpreter$/;"	m
LIBRARYNAME	ExecutionEngine/JIT/Makefile	/^LIBRARYNAME = LLVMJIT$/;"	m
LIBRARYNAME	ExecutionEngine/MCJIT/Makefile	/^LIBRARYNAME = LLVMMCJIT$/;"	m
LIBRARYNAME	ExecutionEngine/Makefile	/^LIBRARYNAME = LLVMExecutionEngine$/;"	m
LIBRARYNAME	ExecutionEngine/OProfileJIT/Makefile	/^LIBRARYNAME = LLVMOProfileJIT$/;"	m
LIBRARYNAME	ExecutionEngine/RuntimeDyld/Makefile	/^LIBRARYNAME = LLVMRuntimeDyld$/;"	m
LIBRARYNAME	Linker/Makefile	/^LIBRARYNAME = LLVMLinker$/;"	m
LIBRARYNAME	MC/MCDisassembler/Makefile	/^LIBRARYNAME = LLVMMCDisassembler$/;"	m
LIBRARYNAME	MC/MCParser/Makefile	/^LIBRARYNAME = LLVMMCParser$/;"	m
LIBRARYNAME	MC/Makefile	/^LIBRARYNAME = LLVMMC$/;"	m
LIBRARYNAME	Object/Makefile	/^LIBRARYNAME = LLVMObject$/;"	m
LIBRARYNAME	Support/Makefile	/^LIBRARYNAME = LLVMSupport$/;"	m
LIBRARYNAME	TableGen/Makefile	/^LIBRARYNAME = LLVMTableGen$/;"	m
LIBRARYNAME	Target/ARM/AsmParser/Makefile	/^LIBRARYNAME = LLVMARMAsmParser$/;"	m
LIBRARYNAME	Target/ARM/Disassembler/Makefile	/^LIBRARYNAME = LLVMARMDisassembler$/;"	m
LIBRARYNAME	Target/ARM/InstPrinter/Makefile	/^LIBRARYNAME = LLVMARMAsmPrinter$/;"	m
LIBRARYNAME	Target/ARM/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMARMDesc$/;"	m
LIBRARYNAME	Target/ARM/Makefile	/^LIBRARYNAME = LLVMARMCodeGen$/;"	m
LIBRARYNAME	Target/ARM/TargetInfo/Makefile	/^LIBRARYNAME = LLVMARMInfo$/;"	m
LIBRARYNAME	Target/CellSPU/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMCellSPUDesc$/;"	m
LIBRARYNAME	Target/CellSPU/Makefile	/^LIBRARYNAME = LLVMCellSPUCodeGen$/;"	m
LIBRARYNAME	Target/CellSPU/TargetInfo/Makefile	/^LIBRARYNAME = LLVMCellSPUInfo$/;"	m
LIBRARYNAME	Target/CppBackend/Makefile	/^LIBRARYNAME = LLVMCppBackendCodeGen$/;"	m
LIBRARYNAME	Target/CppBackend/TargetInfo/Makefile	/^LIBRARYNAME = LLVMCppBackendInfo$/;"	m
LIBRARYNAME	Target/Hexagon/InstPrinter/Makefile	/^LIBRARYNAME = LLVMHexagonAsmPrinter$/;"	m
LIBRARYNAME	Target/Hexagon/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMHexagonDesc$/;"	m
LIBRARYNAME	Target/Hexagon/Makefile	/^LIBRARYNAME = LLVMHexagonCodeGen$/;"	m
LIBRARYNAME	Target/Hexagon/TargetInfo/Makefile	/^LIBRARYNAME = LLVMHexagonInfo$/;"	m
LIBRARYNAME	Target/MBlaze/AsmParser/Makefile	/^LIBRARYNAME = LLVMMBlazeAsmParser$/;"	m
LIBRARYNAME	Target/MBlaze/Disassembler/Makefile	/^LIBRARYNAME = LLVMMBlazeDisassembler$/;"	m
LIBRARYNAME	Target/MBlaze/InstPrinter/Makefile	/^LIBRARYNAME = LLVMMBlazeAsmPrinter$/;"	m
LIBRARYNAME	Target/MBlaze/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMMBlazeDesc$/;"	m
LIBRARYNAME	Target/MBlaze/Makefile	/^LIBRARYNAME = LLVMMBlazeCodeGen$/;"	m
LIBRARYNAME	Target/MBlaze/TargetInfo/Makefile	/^LIBRARYNAME = LLVMMBlazeInfo$/;"	m
LIBRARYNAME	Target/MSP430/InstPrinter/Makefile	/^LIBRARYNAME = LLVMMSP430AsmPrinter$/;"	m
LIBRARYNAME	Target/MSP430/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMMSP430Desc$/;"	m
LIBRARYNAME	Target/MSP430/Makefile	/^LIBRARYNAME = LLVMMSP430CodeGen$/;"	m
LIBRARYNAME	Target/MSP430/TargetInfo/Makefile	/^LIBRARYNAME = LLVMMSP430Info$/;"	m
LIBRARYNAME	Target/Makefile	/^LIBRARYNAME = LLVMTarget$/;"	m
LIBRARYNAME	Target/Mips/AsmParser/Makefile	/^LIBRARYNAME = LLVMMipsAsmParser$/;"	m
LIBRARYNAME	Target/Mips/Disassembler/Makefile	/^LIBRARYNAME = LLVMMipsDisassembler$/;"	m
LIBRARYNAME	Target/Mips/InstPrinter/Makefile	/^LIBRARYNAME = LLVMMipsAsmPrinter$/;"	m
LIBRARYNAME	Target/Mips/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMMipsDesc$/;"	m
LIBRARYNAME	Target/Mips/Makefile	/^LIBRARYNAME = LLVMMipsCodeGen$/;"	m
LIBRARYNAME	Target/Mips/TargetInfo/Makefile	/^LIBRARYNAME = LLVMMipsInfo$/;"	m
LIBRARYNAME	Target/NVPTX/InstPrinter/Makefile	/^LIBRARYNAME = LLVMNVPTXAsmPrinter$/;"	m
LIBRARYNAME	Target/NVPTX/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMNVPTXDesc$/;"	m
LIBRARYNAME	Target/NVPTX/Makefile	/^LIBRARYNAME = LLVMNVPTXCodeGen$/;"	m
LIBRARYNAME	Target/NVPTX/TargetInfo/Makefile	/^LIBRARYNAME = LLVMNVPTXInfo$/;"	m
LIBRARYNAME	Target/PowerPC/InstPrinter/Makefile	/^LIBRARYNAME = LLVMPowerPCAsmPrinter$/;"	m
LIBRARYNAME	Target/PowerPC/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMPowerPCDesc$/;"	m
LIBRARYNAME	Target/PowerPC/Makefile	/^LIBRARYNAME = LLVMPowerPCCodeGen$/;"	m
LIBRARYNAME	Target/PowerPC/TargetInfo/Makefile	/^LIBRARYNAME = LLVMPowerPCInfo$/;"	m
LIBRARYNAME	Target/Sparc/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMSparcDesc$/;"	m
LIBRARYNAME	Target/Sparc/Makefile	/^LIBRARYNAME = LLVMSparcCodeGen$/;"	m
LIBRARYNAME	Target/Sparc/TargetInfo/Makefile	/^LIBRARYNAME = LLVMSparcInfo$/;"	m
LIBRARYNAME	Target/X86/AsmParser/Makefile	/^LIBRARYNAME = LLVMX86AsmParser$/;"	m
LIBRARYNAME	Target/X86/Disassembler/Makefile	/^LIBRARYNAME = LLVMX86Disassembler$/;"	m
LIBRARYNAME	Target/X86/InstPrinter/Makefile	/^LIBRARYNAME = LLVMX86AsmPrinter$/;"	m
LIBRARYNAME	Target/X86/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMX86Desc$/;"	m
LIBRARYNAME	Target/X86/Makefile	/^LIBRARYNAME = LLVMX86CodeGen$/;"	m
LIBRARYNAME	Target/X86/TargetInfo/Makefile	/^LIBRARYNAME = LLVMX86Info$/;"	m
LIBRARYNAME	Target/X86/Utils/Makefile	/^LIBRARYNAME = LLVMX86Utils$/;"	m
LIBRARYNAME	Target/XCore/MCTargetDesc/Makefile	/^LIBRARYNAME = LLVMXCoreDesc$/;"	m
LIBRARYNAME	Target/XCore/Makefile	/^LIBRARYNAME = LLVMXCoreCodeGen$/;"	m
LIBRARYNAME	Target/XCore/TargetInfo/Makefile	/^LIBRARYNAME = LLVMXCoreInfo$/;"	m
LIBRARYNAME	Transforms/DDA/Makefile	/^LIBRARYNAME = LLVMDDProfiling$/;"	m
LIBRARYNAME	Transforms/Hello/Makefile	/^LIBRARYNAME = LLVMHello$/;"	m
LIBRARYNAME	Transforms/IPO/Makefile	/^LIBRARYNAME = LLVMipo$/;"	m
LIBRARYNAME	Transforms/InstCombine/Makefile	/^LIBRARYNAME = LLVMInstCombine$/;"	m
LIBRARYNAME	Transforms/Instrumentation/Makefile	/^LIBRARYNAME = LLVMInstrumentation$/;"	m
LIBRARYNAME	Transforms/Scalar/Makefile	/^LIBRARYNAME = LLVMScalarOpts$/;"	m
LIBRARYNAME	Transforms/Utils/Makefile	/^LIBRARYNAME = LLVMTransformUtils$/;"	m
LIBRARYNAME	Transforms/Vectorize/Makefile	/^LIBRARYNAME = LLVMVectorize$/;"	m
LIBRARYNAME	VMCore/Makefile	/^LIBRARYNAME = LLVMCore$/;"	m
LIBS_ASMPARSER_LLTOKEN_H	AsmParser/LLToken.h	15;"	d
LIB_ARCHIVE_ARCHIVEINTERNALS_H	Archive/ArchiveInternals.h	15;"	d
LIB_ASMPARSER_LLLEXER_H	AsmParser/LLLexer.h	15;"	d
LICM	Transforms/Scalar/LICM.cpp	/^    LICM() : LoopPass(ID) {$/;"	f	struct:__anon568::LICM
LICM	Transforms/Scalar/LICM.cpp	/^  struct LICM : public LoopPass {$/;"	s	namespace:__anon568	file:
LIS	CodeGen/InlineSpiller.cpp	/^  LiveIntervals &LIS;$/;"	m	class:__anon155::InlineSpiller	file:
LIS	CodeGen/InterferenceCache.h	/^    LiveIntervals *LIS;$/;"	m	class:llvm::InterferenceCache::Entry
LIS	CodeGen/LiveDebugVariables.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon153::LDVImpl	file:
LIS	CodeGen/LiveIntervalAnalysis.cpp	/^  LiveIntervals& LIS;$/;"	m	class:LiveIntervals::HMEditor	file:
LIS	CodeGen/LiveRegMatrix.h	/^  LiveIntervals *LIS;$/;"	m	class:llvm::LiveRegMatrix
LIS	CodeGen/RegAllocBase.h	/^  LiveIntervals *LIS;$/;"	m	class:llvm::RegAllocBase
LIS	CodeGen/RegisterCoalescer.cpp	/^    LiveIntervals *LIS;$/;"	m	class:__anon114::RegisterCoalescer	file:
LIS	CodeGen/RegisterCoalescer.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon115::JoinVals	file:
LIS	CodeGen/SplitKit.h	/^  LiveIntervals &LIS;$/;"	m	class:llvm::SplitEditor
LIS	CodeGen/SplitKit.h	/^  const LiveIntervals &LIS;$/;"	m	class:llvm::SplitAnalysis
LIS	CodeGen/TwoAddressInstructionPass.cpp	/^    LiveIntervals *LIS;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
LIS	CodeGen/VirtRegMap.cpp	/^  LiveIntervals *LIS;$/;"	m	class:__anon97::VirtRegRewriter	file:
LIUAlloc	CodeGen/LiveRegMatrix.h	/^  LiveIntervalUnion::Allocator LIUAlloc;$/;"	m	class:llvm::LiveRegMatrix
LIUArray	CodeGen/InterferenceCache.h	/^  LiveIntervalUnion *LIUArray;$/;"	m	class:llvm::InterferenceCache
LIUs	CodeGen/LiveIntervalUnion.h	/^    LiveIntervalUnion *LIUs;$/;"	m	class:llvm::LiveIntervalUnion::Array
LLI_INTERPRETER_H	ExecutionEngine/Interpreter/Interpreter.h	15;"	d
LLLexer	AsmParser/LLLexer.cpp	/^LLLexer::LLLexer(MemoryBuffer *StartBuf, SourceMgr &sm, SMDiagnostic &Err,$/;"	f	class:LLLexer
LLLexer	AsmParser/LLLexer.h	/^  class LLLexer {$/;"	c	namespace:llvm
LLParser	AsmParser/LLParser.h	/^    LLParser(MemoryBuffer *F, SourceMgr &SM, SMDiagnostic &Err, Module *m) : $/;"	f	class:llvm::LLParser
LLParser	AsmParser/LLParser.h	/^  class LLParser {$/;"	c	namespace:llvm
LLVMABIAlignmentOfType	Target/Target.cpp	/^unsigned LLVMABIAlignmentOfType(LLVMTargetDataRef TD, LLVMTypeRef Ty) {$/;"	f
LLVMABISizeOfType	Target/Target.cpp	/^unsigned long long LLVMABISizeOfType(LLVMTargetDataRef TD, LLVMTypeRef Ty) {$/;"	f
LLVMAddAggressiveDCEPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddAggressiveDCEPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddAlias	VMCore/Core.cpp	/^LLVMValueRef LLVMAddAlias(LLVMModuleRef M, LLVMTypeRef Ty, LLVMValueRef Aliasee,$/;"	f
LLVMAddAlwaysInlinerPass	Transforms/IPO/IPO.cpp	/^void LLVMAddAlwaysInlinerPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddArgumentPromotionPass	Transforms/IPO/IPO.cpp	/^void LLVMAddArgumentPromotionPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddAttribute	VMCore/Core.cpp	/^void LLVMAddAttribute(LLVMValueRef Arg, LLVMAttribute PA) {$/;"	f
LLVMAddBBVectorizePass	Transforms/Vectorize/Vectorize.cpp	/^void LLVMAddBBVectorizePass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddBasicAliasAnalysisPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddBasicAliasAnalysisPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddCFGSimplificationPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddCFGSimplificationPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddCase	VMCore/Core.cpp	/^void LLVMAddCase(LLVMValueRef Switch, LLVMValueRef OnVal,$/;"	f
LLVMAddClause	VMCore/Core.cpp	/^void LLVMAddClause(LLVMValueRef LandingPad, LLVMValueRef ClauseVal) {$/;"	f
LLVMAddConstantMergePass	Transforms/IPO/IPO.cpp	/^void LLVMAddConstantMergePass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddConstantPropagationPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddConstantPropagationPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddCorrelatedValuePropagationPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddCorrelatedValuePropagationPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddDeadArgEliminationPass	Transforms/IPO/IPO.cpp	/^void LLVMAddDeadArgEliminationPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddDeadStoreEliminationPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddDeadStoreEliminationPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddDemoteMemoryToRegisterPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddDemoteMemoryToRegisterPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddDestination	VMCore/Core.cpp	/^void LLVMAddDestination(LLVMValueRef IndirectBr, LLVMBasicBlockRef Dest) {$/;"	f
LLVMAddEarlyCSEPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddEarlyCSEPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddFunction	VMCore/Core.cpp	/^LLVMValueRef LLVMAddFunction(LLVMModuleRef M, const char *Name,$/;"	f
LLVMAddFunctionAttr	VMCore/Core.cpp	/^void LLVMAddFunctionAttr(LLVMValueRef Fn, LLVMAttribute PA) {$/;"	f
LLVMAddFunctionAttrsPass	Transforms/IPO/IPO.cpp	/^void LLVMAddFunctionAttrsPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddFunctionInliningPass	Transforms/IPO/IPO.cpp	/^void LLVMAddFunctionInliningPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddGVNPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddGVNPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddGlobal	VMCore/Core.cpp	/^LLVMValueRef LLVMAddGlobal(LLVMModuleRef M, LLVMTypeRef Ty, const char *Name) {$/;"	f
LLVMAddGlobalDCEPass	Transforms/IPO/IPO.cpp	/^void LLVMAddGlobalDCEPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddGlobalInAddressSpace	VMCore/Core.cpp	/^LLVMValueRef LLVMAddGlobalInAddressSpace(LLVMModuleRef M, LLVMTypeRef Ty,$/;"	f
LLVMAddGlobalMapping	ExecutionEngine/ExecutionEngineBindings.cpp	/^void LLVMAddGlobalMapping(LLVMExecutionEngineRef EE, LLVMValueRef Global,$/;"	f
LLVMAddGlobalOptimizerPass	Transforms/IPO/IPO.cpp	/^void LLVMAddGlobalOptimizerPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddIPConstantPropagationPass	Transforms/IPO/IPO.cpp	/^void LLVMAddIPConstantPropagationPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddIPSCCPPass	Transforms/IPO/IPO.cpp	/^void LLVMAddIPSCCPPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddIncoming	VMCore/Core.cpp	/^void LLVMAddIncoming(LLVMValueRef PhiNode, LLVMValueRef *IncomingValues,$/;"	f
LLVMAddIndVarSimplifyPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddIndVarSimplifyPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddInstrAttribute	VMCore/Core.cpp	/^void LLVMAddInstrAttribute(LLVMValueRef Instr, unsigned index, $/;"	f
LLVMAddInstructionCombiningPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddInstructionCombiningPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddInternalizePass	Transforms/IPO/IPO.cpp	/^void LLVMAddInternalizePass(LLVMPassManagerRef PM, unsigned AllButMain) {$/;"	f
LLVMAddJumpThreadingPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddJumpThreadingPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddLICMPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddLICMPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddLoopDeletionPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddLoopDeletionPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddLoopIdiomPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddLoopIdiomPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddLoopRotatePass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddLoopRotatePass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddLoopUnrollPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddLoopUnrollPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddLoopUnswitchPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddLoopUnswitchPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddLoopVectorizePass	Transforms/Vectorize/Vectorize.cpp	/^void LLVMAddLoopVectorizePass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddLowerExpectIntrinsicPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddLowerExpectIntrinsicPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddMemCpyOptPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddMemCpyOptPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddModule	ExecutionEngine/ExecutionEngineBindings.cpp	/^void LLVMAddModule(LLVMExecutionEngineRef EE, LLVMModuleRef M){$/;"	f
LLVMAddModuleProvider	ExecutionEngine/ExecutionEngineBindings.cpp	/^void LLVMAddModuleProvider(LLVMExecutionEngineRef EE, LLVMModuleProviderRef MP){$/;"	f
LLVMAddNamedMetadataOperand	VMCore/Core.cpp	/^void LLVMAddNamedMetadataOperand(LLVMModuleRef M, const char* name,$/;"	f
LLVMAddPromoteMemoryToRegisterPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddPromoteMemoryToRegisterPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddPruneEHPass	Transforms/IPO/IPO.cpp	/^void LLVMAddPruneEHPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddReassociatePass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddReassociatePass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddSCCPPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddSCCPPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddScalarReplAggregatesPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddScalarReplAggregatesPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddScalarReplAggregatesPassSSA	Transforms/Scalar/Scalar.cpp	/^void LLVMAddScalarReplAggregatesPassSSA(LLVMPassManagerRef PM) {$/;"	f
LLVMAddScalarReplAggregatesPassWithThreshold	Transforms/Scalar/Scalar.cpp	/^void LLVMAddScalarReplAggregatesPassWithThreshold(LLVMPassManagerRef PM,$/;"	f
LLVMAddSimplifyLibCallsPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddSimplifyLibCallsPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddStripDeadPrototypesPass	Transforms/IPO/IPO.cpp	/^void LLVMAddStripDeadPrototypesPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddStripSymbolsPass	Transforms/IPO/IPO.cpp	/^void LLVMAddStripSymbolsPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddTailCallEliminationPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddTailCallEliminationPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddTargetData	Target/Target.cpp	/^void LLVMAddTargetData(LLVMTargetDataRef TD, LLVMPassManagerRef PM) {$/;"	f
LLVMAddTargetLibraryInfo	Target/Target.cpp	/^void LLVMAddTargetLibraryInfo(LLVMTargetLibraryInfoRef TLI,$/;"	f
LLVMAddTypeBasedAliasAnalysisPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddTypeBasedAliasAnalysisPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAddVerifierPass	Transforms/Scalar/Scalar.cpp	/^void LLVMAddVerifierPass(LLVMPassManagerRef PM) {$/;"	f
LLVMAlignOf	VMCore/Core.cpp	/^LLVMValueRef LLVMAlignOf(LLVMTypeRef Ty) {$/;"	f
LLVMAppendBasicBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMAppendBasicBlock(LLVMValueRef FnRef, const char *Name) {$/;"	f
LLVMAppendBasicBlockInContext	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMAppendBasicBlockInContext(LLVMContextRef C,$/;"	f
LLVMArrayType	VMCore/Core.cpp	/^LLVMTypeRef LLVMArrayType(LLVMTypeRef ElementType, unsigned ElementCount) {$/;"	f
LLVMBasicBlockAsValue	VMCore/Core.cpp	/^LLVMValueRef LLVMBasicBlockAsValue(LLVMBasicBlockRef BB) {$/;"	f
LLVMBlockAddress	VMCore/Core.cpp	/^LLVMValueRef LLVMBlockAddress(LLVMValueRef F, LLVMBasicBlockRef BB) {$/;"	f
LLVMBuildAShr	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildAShr(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildAdd	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildAdd(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildAggregateRet	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildAggregateRet(LLVMBuilderRef B, LLVMValueRef *RetVals,$/;"	f
LLVMBuildAlloca	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildAlloca(LLVMBuilderRef B, LLVMTypeRef Ty,$/;"	f
LLVMBuildAnd	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildAnd(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildArrayAlloca	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildArrayAlloca(LLVMBuilderRef B, LLVMTypeRef Ty,$/;"	f
LLVMBuildArrayMalloc	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildArrayMalloc(LLVMBuilderRef B, LLVMTypeRef Ty,$/;"	f
LLVMBuildBinOp	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildBinOp(LLVMBuilderRef B, LLVMOpcode Op,$/;"	f
LLVMBuildBitCast	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildBitCast(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildBr	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildBr(LLVMBuilderRef B, LLVMBasicBlockRef Dest) {$/;"	f
LLVMBuildCall	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildCall(LLVMBuilderRef B, LLVMValueRef Fn,$/;"	f
LLVMBuildCast	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildCast(LLVMBuilderRef B, LLVMOpcode Op, LLVMValueRef Val,$/;"	f
LLVMBuildCondBr	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildCondBr(LLVMBuilderRef B, LLVMValueRef If,$/;"	f
LLVMBuildExactSDiv	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildExactSDiv(LLVMBuilderRef B, LLVMValueRef LHS,$/;"	f
LLVMBuildExtractElement	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildExtractElement(LLVMBuilderRef B, LLVMValueRef VecVal,$/;"	f
LLVMBuildExtractValue	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildExtractValue(LLVMBuilderRef B, LLVMValueRef AggVal,$/;"	f
LLVMBuildFAdd	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFAdd(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildFCmp	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFCmp(LLVMBuilderRef B, LLVMRealPredicate Op,$/;"	f
LLVMBuildFDiv	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFDiv(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildFMul	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFMul(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildFNeg	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFNeg(LLVMBuilderRef B, LLVMValueRef V, const char *Name) {$/;"	f
LLVMBuildFPCast	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFPCast(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildFPExt	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFPExt(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildFPToSI	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFPToSI(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildFPToUI	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFPToUI(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildFPTrunc	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFPTrunc(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildFRem	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFRem(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildFSub	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFSub(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildFree	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildFree(LLVMBuilderRef B, LLVMValueRef PointerVal) {$/;"	f
LLVMBuildGEP	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildGEP(LLVMBuilderRef B, LLVMValueRef Pointer,$/;"	f
LLVMBuildGlobalString	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildGlobalString(LLVMBuilderRef B, const char *Str,$/;"	f
LLVMBuildGlobalStringPtr	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildGlobalStringPtr(LLVMBuilderRef B, const char *Str,$/;"	f
LLVMBuildICmp	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildICmp(LLVMBuilderRef B, LLVMIntPredicate Op,$/;"	f
LLVMBuildInBoundsGEP	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildInBoundsGEP(LLVMBuilderRef B, LLVMValueRef Pointer,$/;"	f
LLVMBuildIndirectBr	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildIndirectBr(LLVMBuilderRef B, LLVMValueRef Addr,$/;"	f
LLVMBuildInsertElement	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildInsertElement(LLVMBuilderRef B, LLVMValueRef VecVal,$/;"	f
LLVMBuildInsertValue	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildInsertValue(LLVMBuilderRef B, LLVMValueRef AggVal,$/;"	f
LLVMBuildIntCast	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildIntCast(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildIntToPtr	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildIntToPtr(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildInvoke	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildInvoke(LLVMBuilderRef B, LLVMValueRef Fn,$/;"	f
LLVMBuildIsNotNull	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildIsNotNull(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildIsNull	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildIsNull(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildLShr	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildLShr(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildLandingPad	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildLandingPad(LLVMBuilderRef B, LLVMTypeRef Ty,$/;"	f
LLVMBuildLoad	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildLoad(LLVMBuilderRef B, LLVMValueRef PointerVal,$/;"	f
LLVMBuildMalloc	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildMalloc(LLVMBuilderRef B, LLVMTypeRef Ty,$/;"	f
LLVMBuildMul	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildMul(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildNSWAdd	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNSWAdd(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildNSWMul	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNSWMul(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildNSWNeg	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNSWNeg(LLVMBuilderRef B, LLVMValueRef V,$/;"	f
LLVMBuildNSWSub	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNSWSub(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildNUWAdd	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNUWAdd(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildNUWMul	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNUWMul(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildNUWNeg	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNUWNeg(LLVMBuilderRef B, LLVMValueRef V,$/;"	f
LLVMBuildNUWSub	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNUWSub(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildNeg	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNeg(LLVMBuilderRef B, LLVMValueRef V, const char *Name) {$/;"	f
LLVMBuildNot	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildNot(LLVMBuilderRef B, LLVMValueRef V, const char *Name) {$/;"	f
LLVMBuildOr	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildOr(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildPhi	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildPhi(LLVMBuilderRef B, LLVMTypeRef Ty, const char *Name) {$/;"	f
LLVMBuildPointerCast	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildPointerCast(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildPtrDiff	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildPtrDiff(LLVMBuilderRef B, LLVMValueRef LHS,$/;"	f
LLVMBuildPtrToInt	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildPtrToInt(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildResume	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildResume(LLVMBuilderRef B, LLVMValueRef Exn) {$/;"	f
LLVMBuildRet	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildRet(LLVMBuilderRef B, LLVMValueRef V) {$/;"	f
LLVMBuildRetVoid	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildRetVoid(LLVMBuilderRef B) {$/;"	f
LLVMBuildSDiv	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildSDiv(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildSExt	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildSExt(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildSExtOrBitCast	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildSExtOrBitCast(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildSIToFP	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildSIToFP(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildSRem	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildSRem(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildSelect	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildSelect(LLVMBuilderRef B, LLVMValueRef If,$/;"	f
LLVMBuildShl	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildShl(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildShuffleVector	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildShuffleVector(LLVMBuilderRef B, LLVMValueRef V1,$/;"	f
LLVMBuildStore	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildStore(LLVMBuilderRef B, LLVMValueRef Val, $/;"	f
LLVMBuildStructGEP	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildStructGEP(LLVMBuilderRef B, LLVMValueRef Pointer,$/;"	f
LLVMBuildSub	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildSub(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildSwitch	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildSwitch(LLVMBuilderRef B, LLVMValueRef V,$/;"	f
LLVMBuildTrunc	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildTrunc(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildTruncOrBitCast	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildTruncOrBitCast(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildUDiv	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildUDiv(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildUIToFP	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildUIToFP(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildURem	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildURem(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildUnreachable	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildUnreachable(LLVMBuilderRef B) {$/;"	f
LLVMBuildVAArg	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildVAArg(LLVMBuilderRef B, LLVMValueRef List,$/;"	f
LLVMBuildXor	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildXor(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS,$/;"	f
LLVMBuildZExt	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildZExt(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMBuildZExtOrBitCast	VMCore/Core.cpp	/^LLVMValueRef LLVMBuildZExtOrBitCast(LLVMBuilderRef B, LLVMValueRef Val,$/;"	f
LLVMByteOrder	Target/Target.cpp	/^LLVMByteOrdering LLVMByteOrder(LLVMTargetDataRef TD) {$/;"	f
LLVMCallFrameAlignmentOfType	Target/Target.cpp	/^unsigned LLVMCallFrameAlignmentOfType(LLVMTargetDataRef TD, LLVMTypeRef Ty) {$/;"	f
LLVMClearInsertionPosition	VMCore/Core.cpp	/^void LLVMClearInsertionPosition(LLVMBuilderRef Builder) {$/;"	f
LLVMConstAShr	VMCore/Core.cpp	/^LLVMValueRef LLVMConstAShr(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstAdd	VMCore/Core.cpp	/^LLVMValueRef LLVMConstAdd(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstAllOnes	VMCore/Core.cpp	/^LLVMValueRef LLVMConstAllOnes(LLVMTypeRef Ty) {$/;"	f
LLVMConstAnd	VMCore/Core.cpp	/^LLVMValueRef LLVMConstAnd(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstArray	VMCore/Core.cpp	/^LLVMValueRef LLVMConstArray(LLVMTypeRef ElementTy,$/;"	f
LLVMConstBitCast	VMCore/Core.cpp	/^LLVMValueRef LLVMConstBitCast(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstExactSDiv	VMCore/Core.cpp	/^LLVMValueRef LLVMConstExactSDiv(LLVMValueRef LHSConstant,$/;"	f
LLVMConstExtractElement	VMCore/Core.cpp	/^LLVMValueRef LLVMConstExtractElement(LLVMValueRef VectorConstant,$/;"	f
LLVMConstExtractValue	VMCore/Core.cpp	/^LLVMValueRef LLVMConstExtractValue(LLVMValueRef AggConstant, unsigned *IdxList,$/;"	f
LLVMConstFAdd	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFAdd(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstFCmp	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFCmp(LLVMRealPredicate Predicate,$/;"	f
LLVMConstFDiv	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFDiv(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstFMul	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFMul(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstFNeg	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFNeg(LLVMValueRef ConstantVal) {$/;"	f
LLVMConstFPCast	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFPCast(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstFPExt	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFPExt(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstFPToSI	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFPToSI(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstFPToUI	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFPToUI(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstFPTrunc	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFPTrunc(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstFRem	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFRem(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstFSub	VMCore/Core.cpp	/^LLVMValueRef LLVMConstFSub(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstGEP	VMCore/Core.cpp	/^LLVMValueRef LLVMConstGEP(LLVMValueRef ConstantVal,$/;"	f
LLVMConstICmp	VMCore/Core.cpp	/^LLVMValueRef LLVMConstICmp(LLVMIntPredicate Predicate,$/;"	f
LLVMConstInBoundsGEP	VMCore/Core.cpp	/^LLVMValueRef LLVMConstInBoundsGEP(LLVMValueRef ConstantVal,$/;"	f
LLVMConstInlineAsm	VMCore/Core.cpp	/^LLVMValueRef LLVMConstInlineAsm(LLVMTypeRef Ty, const char *AsmString,$/;"	f
LLVMConstInsertElement	VMCore/Core.cpp	/^LLVMValueRef LLVMConstInsertElement(LLVMValueRef VectorConstant,$/;"	f
LLVMConstInsertValue	VMCore/Core.cpp	/^LLVMValueRef LLVMConstInsertValue(LLVMValueRef AggConstant,$/;"	f
LLVMConstInt	VMCore/Core.cpp	/^LLVMValueRef LLVMConstInt(LLVMTypeRef IntTy, unsigned long long N,$/;"	f
LLVMConstIntCast	VMCore/Core.cpp	/^LLVMValueRef LLVMConstIntCast(LLVMValueRef ConstantVal, LLVMTypeRef ToType,$/;"	f
LLVMConstIntGetSExtValue	VMCore/Core.cpp	/^long long LLVMConstIntGetSExtValue(LLVMValueRef ConstantVal) {$/;"	f
LLVMConstIntGetZExtValue	VMCore/Core.cpp	/^unsigned long long LLVMConstIntGetZExtValue(LLVMValueRef ConstantVal) {$/;"	f
LLVMConstIntOfArbitraryPrecision	VMCore/Core.cpp	/^LLVMValueRef LLVMConstIntOfArbitraryPrecision(LLVMTypeRef IntTy,$/;"	f
LLVMConstIntOfString	VMCore/Core.cpp	/^LLVMValueRef LLVMConstIntOfString(LLVMTypeRef IntTy, const char Str[],$/;"	f
LLVMConstIntOfStringAndSize	VMCore/Core.cpp	/^LLVMValueRef LLVMConstIntOfStringAndSize(LLVMTypeRef IntTy, const char Str[],$/;"	f
LLVMConstIntToPtr	VMCore/Core.cpp	/^LLVMValueRef LLVMConstIntToPtr(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstLShr	VMCore/Core.cpp	/^LLVMValueRef LLVMConstLShr(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstMul	VMCore/Core.cpp	/^LLVMValueRef LLVMConstMul(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstNSWAdd	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNSWAdd(LLVMValueRef LHSConstant,$/;"	f
LLVMConstNSWMul	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNSWMul(LLVMValueRef LHSConstant,$/;"	f
LLVMConstNSWNeg	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNSWNeg(LLVMValueRef ConstantVal) {$/;"	f
LLVMConstNSWSub	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNSWSub(LLVMValueRef LHSConstant,$/;"	f
LLVMConstNUWAdd	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNUWAdd(LLVMValueRef LHSConstant,$/;"	f
LLVMConstNUWMul	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNUWMul(LLVMValueRef LHSConstant,$/;"	f
LLVMConstNUWNeg	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNUWNeg(LLVMValueRef ConstantVal) {$/;"	f
LLVMConstNUWSub	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNUWSub(LLVMValueRef LHSConstant,$/;"	f
LLVMConstNamedStruct	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNamedStruct(LLVMTypeRef StructTy,$/;"	f
LLVMConstNeg	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNeg(LLVMValueRef ConstantVal) {$/;"	f
LLVMConstNot	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNot(LLVMValueRef ConstantVal) {$/;"	f
LLVMConstNull	VMCore/Core.cpp	/^LLVMValueRef LLVMConstNull(LLVMTypeRef Ty) {$/;"	f
LLVMConstOr	VMCore/Core.cpp	/^LLVMValueRef LLVMConstOr(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstPointerCast	VMCore/Core.cpp	/^LLVMValueRef LLVMConstPointerCast(LLVMValueRef ConstantVal,$/;"	f
LLVMConstPointerNull	VMCore/Core.cpp	/^LLVMValueRef LLVMConstPointerNull(LLVMTypeRef Ty) {$/;"	f
LLVMConstPtrToInt	VMCore/Core.cpp	/^LLVMValueRef LLVMConstPtrToInt(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstReal	VMCore/Core.cpp	/^LLVMValueRef LLVMConstReal(LLVMTypeRef RealTy, double N) {$/;"	f
LLVMConstRealOfString	VMCore/Core.cpp	/^LLVMValueRef LLVMConstRealOfString(LLVMTypeRef RealTy, const char *Text) {$/;"	f
LLVMConstRealOfStringAndSize	VMCore/Core.cpp	/^LLVMValueRef LLVMConstRealOfStringAndSize(LLVMTypeRef RealTy, const char Str[],$/;"	f
LLVMConstSDiv	VMCore/Core.cpp	/^LLVMValueRef LLVMConstSDiv(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstSExt	VMCore/Core.cpp	/^LLVMValueRef LLVMConstSExt(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstSExtOrBitCast	VMCore/Core.cpp	/^LLVMValueRef LLVMConstSExtOrBitCast(LLVMValueRef ConstantVal,$/;"	f
LLVMConstSIToFP	VMCore/Core.cpp	/^LLVMValueRef LLVMConstSIToFP(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstSRem	VMCore/Core.cpp	/^LLVMValueRef LLVMConstSRem(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstSelect	VMCore/Core.cpp	/^LLVMValueRef LLVMConstSelect(LLVMValueRef ConstantCondition,$/;"	f
LLVMConstShl	VMCore/Core.cpp	/^LLVMValueRef LLVMConstShl(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstShuffleVector	VMCore/Core.cpp	/^LLVMValueRef LLVMConstShuffleVector(LLVMValueRef VectorAConstant,$/;"	f
LLVMConstString	VMCore/Core.cpp	/^LLVMValueRef LLVMConstString(const char *Str, unsigned Length,$/;"	f
LLVMConstStringInContext	VMCore/Core.cpp	/^LLVMValueRef LLVMConstStringInContext(LLVMContextRef C, const char *Str,$/;"	f
LLVMConstStruct	VMCore/Core.cpp	/^LLVMValueRef LLVMConstStruct(LLVMValueRef *ConstantVals, unsigned Count,$/;"	f
LLVMConstStructInContext	VMCore/Core.cpp	/^LLVMValueRef LLVMConstStructInContext(LLVMContextRef C, $/;"	f
LLVMConstSub	VMCore/Core.cpp	/^LLVMValueRef LLVMConstSub(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstTrunc	VMCore/Core.cpp	/^LLVMValueRef LLVMConstTrunc(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstTruncOrBitCast	VMCore/Core.cpp	/^LLVMValueRef LLVMConstTruncOrBitCast(LLVMValueRef ConstantVal,$/;"	f
LLVMConstUDiv	VMCore/Core.cpp	/^LLVMValueRef LLVMConstUDiv(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstUIToFP	VMCore/Core.cpp	/^LLVMValueRef LLVMConstUIToFP(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstURem	VMCore/Core.cpp	/^LLVMValueRef LLVMConstURem(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstVector	VMCore/Core.cpp	/^LLVMValueRef LLVMConstVector(LLVMValueRef *ScalarConstantVals, unsigned Size) {$/;"	f
LLVMConstXor	VMCore/Core.cpp	/^LLVMValueRef LLVMConstXor(LLVMValueRef LHSConstant, LLVMValueRef RHSConstant) {$/;"	f
LLVMConstZExt	VMCore/Core.cpp	/^LLVMValueRef LLVMConstZExt(LLVMValueRef ConstantVal, LLVMTypeRef ToType) {$/;"	f
LLVMConstZExtOrBitCast	VMCore/Core.cpp	/^LLVMValueRef LLVMConstZExtOrBitCast(LLVMValueRef ConstantVal,$/;"	f
LLVMContext	VMCore/LLVMContext.cpp	/^LLVMContext::LLVMContext() : pImpl(new LLVMContextImpl(*this)) {$/;"	f	class:LLVMContext
LLVMContextCreate	VMCore/Core.cpp	/^LLVMContextRef LLVMContextCreate() {$/;"	f
LLVMContextDispose	VMCore/Core.cpp	/^void LLVMContextDispose(LLVMContextRef C) {$/;"	f
LLVMContextImpl	VMCore/LLVMContextImpl.cpp	/^LLVMContextImpl::LLVMContextImpl(LLVMContext &C)$/;"	f	class:LLVMContextImpl
LLVMContextImpl	VMCore/LLVMContextImpl.h	/^class LLVMContextImpl {$/;"	c	namespace:llvm
LLVMCopyStringRepOfTargetData	Target/Target.cpp	/^char *LLVMCopyStringRepOfTargetData(LLVMTargetDataRef TD) {$/;"	f
LLVMCountBasicBlocks	VMCore/Core.cpp	/^unsigned LLVMCountBasicBlocks(LLVMValueRef FnRef) {$/;"	f
LLVMCountIncoming	VMCore/Core.cpp	/^unsigned LLVMCountIncoming(LLVMValueRef PhiNode) {$/;"	f
LLVMCountParamTypes	VMCore/Core.cpp	/^unsigned LLVMCountParamTypes(LLVMTypeRef FunctionTy) {$/;"	f
LLVMCountParams	VMCore/Core.cpp	/^unsigned LLVMCountParams(LLVMValueRef FnRef) {$/;"	f
LLVMCountStructElementTypes	VMCore/Core.cpp	/^unsigned LLVMCountStructElementTypes(LLVMTypeRef StructTy) {$/;"	f
LLVMCreateBuilder	VMCore/Core.cpp	/^LLVMBuilderRef LLVMCreateBuilder(void) {$/;"	f
LLVMCreateBuilderInContext	VMCore/Core.cpp	/^LLVMBuilderRef LLVMCreateBuilderInContext(LLVMContextRef C) {$/;"	f
LLVMCreateDisasm	MC/MCDisassembler/Disassembler.cpp	/^LLVMDisasmContextRef LLVMCreateDisasm(const char *TripleName, void *DisInfo,$/;"	f
LLVMCreateExecutionEngine	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMBool LLVMCreateExecutionEngine(LLVMExecutionEngineRef *OutEE,$/;"	f
LLVMCreateExecutionEngineForModule	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMBool LLVMCreateExecutionEngineForModule(LLVMExecutionEngineRef *OutEE,$/;"	f
LLVMCreateFunctionPassManager	VMCore/Core.cpp	/^LLVMPassManagerRef LLVMCreateFunctionPassManager(LLVMModuleProviderRef P) {$/;"	f
LLVMCreateFunctionPassManagerForModule	VMCore/Core.cpp	/^LLVMPassManagerRef LLVMCreateFunctionPassManagerForModule(LLVMModuleRef M) {$/;"	f
LLVMCreateGenericValueOfFloat	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMGenericValueRef LLVMCreateGenericValueOfFloat(LLVMTypeRef TyRef, double N) {$/;"	f
LLVMCreateGenericValueOfInt	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMGenericValueRef LLVMCreateGenericValueOfInt(LLVMTypeRef Ty,$/;"	f
LLVMCreateGenericValueOfPointer	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMGenericValueRef LLVMCreateGenericValueOfPointer(void *P) {$/;"	f
LLVMCreateInterpreter	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMBool LLVMCreateInterpreter(LLVMExecutionEngineRef *OutInterp,$/;"	f
LLVMCreateInterpreterForModule	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMBool LLVMCreateInterpreterForModule(LLVMExecutionEngineRef *OutInterp,$/;"	f
LLVMCreateJITCompiler	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMBool LLVMCreateJITCompiler(LLVMExecutionEngineRef *OutJIT,$/;"	f
LLVMCreateJITCompilerForModule	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMBool LLVMCreateJITCompilerForModule(LLVMExecutionEngineRef *OutJIT,$/;"	f
LLVMCreateMemoryBufferWithContentsOfFile	VMCore/Core.cpp	/^LLVMBool LLVMCreateMemoryBufferWithContentsOfFile($/;"	f
LLVMCreateMemoryBufferWithSTDIN	VMCore/Core.cpp	/^LLVMBool LLVMCreateMemoryBufferWithSTDIN(LLVMMemoryBufferRef *OutMemBuf,$/;"	f
LLVMCreateModuleProviderForExistingModule	VMCore/Core.cpp	/^LLVMCreateModuleProviderForExistingModule(LLVMModuleRef M) {$/;"	f
LLVMCreateObjectFile	Object/Object.cpp	/^LLVMObjectFileRef LLVMCreateObjectFile(LLVMMemoryBufferRef MemBuf) {$/;"	f
LLVMCreatePassManager	VMCore/Core.cpp	/^LLVMPassManagerRef LLVMCreatePassManager() {$/;"	f
LLVMCreateTargetData	Target/Target.cpp	/^LLVMTargetDataRef LLVMCreateTargetData(const char *StringRep) {$/;"	f
LLVMCreateTargetMachine	Target/TargetMachineC.cpp	/^LLVMTargetMachineRef LLVMCreateTargetMachine(LLVMTargetRef T, char* Triple,$/;"	f
LLVMDeleteBasicBlock	VMCore/Core.cpp	/^void LLVMDeleteBasicBlock(LLVMBasicBlockRef BBRef) {$/;"	f
LLVMDeleteFunction	VMCore/Core.cpp	/^void LLVMDeleteFunction(LLVMValueRef Fn) {$/;"	f
LLVMDeleteGlobal	VMCore/Core.cpp	/^void LLVMDeleteGlobal(LLVMValueRef GlobalVar) {$/;"	f
LLVMDisasmContext	MC/MCDisassembler/Disassembler.h	/^  LLVMDisasmContext(std::string tripleName, void *disInfo, int tagType,$/;"	f	class:llvm::LLVMDisasmContext
LLVMDisasmContext	MC/MCDisassembler/Disassembler.h	/^class LLVMDisasmContext {$/;"	c	namespace:llvm
LLVMDisasmDispose	MC/MCDisassembler/Disassembler.cpp	/^void LLVMDisasmDispose(LLVMDisasmContextRef DCR){$/;"	f
LLVMDisasmInstruction	MC/MCDisassembler/Disassembler.cpp	/^size_t LLVMDisasmInstruction(LLVMDisasmContextRef DCR, uint8_t *Bytes,$/;"	f
LLVMDisposeBuilder	VMCore/Core.cpp	/^void LLVMDisposeBuilder(LLVMBuilderRef Builder) {$/;"	f
LLVMDisposeExecutionEngine	ExecutionEngine/ExecutionEngineBindings.cpp	/^void LLVMDisposeExecutionEngine(LLVMExecutionEngineRef EE) {$/;"	f
LLVMDisposeGenericValue	ExecutionEngine/ExecutionEngineBindings.cpp	/^void LLVMDisposeGenericValue(LLVMGenericValueRef GenVal) {$/;"	f
LLVMDisposeMemoryBuffer	VMCore/Core.cpp	/^void LLVMDisposeMemoryBuffer(LLVMMemoryBufferRef MemBuf) {$/;"	f
LLVMDisposeMessage	VMCore/Core.cpp	/^void LLVMDisposeMessage(char *Message) {$/;"	f
LLVMDisposeModule	VMCore/Core.cpp	/^void LLVMDisposeModule(LLVMModuleRef M) {$/;"	f
LLVMDisposeModuleProvider	VMCore/Core.cpp	/^void LLVMDisposeModuleProvider(LLVMModuleProviderRef MP) {$/;"	f
LLVMDisposeObjectFile	Object/Object.cpp	/^void LLVMDisposeObjectFile(LLVMObjectFileRef ObjectFile) {$/;"	f
LLVMDisposePassManager	VMCore/Core.cpp	/^void LLVMDisposePassManager(LLVMPassManagerRef PM) {$/;"	f
LLVMDisposeRelocationIterator	Object/Object.cpp	/^void LLVMDisposeRelocationIterator(LLVMRelocationIteratorRef SI) {$/;"	f
LLVMDisposeSectionIterator	Object/Object.cpp	/^void LLVMDisposeSectionIterator(LLVMSectionIteratorRef SI) {$/;"	f
LLVMDisposeSymbolIterator	Object/Object.cpp	/^void LLVMDisposeSymbolIterator(LLVMSymbolIteratorRef SI) {$/;"	f
LLVMDisposeTargetData	Target/Target.cpp	/^void LLVMDisposeTargetData(LLVMTargetDataRef TD) {$/;"	f
LLVMDisposeTargetMachine	Target/TargetMachineC.cpp	/^void LLVMDisposeTargetMachine(LLVMTargetMachineRef T) {$/;"	f
LLVMDoubleType	VMCore/Core.cpp	/^LLVMTypeRef LLVMDoubleType(void) {$/;"	f
LLVMDoubleTypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMDoubleTypeInContext(LLVMContextRef C) {$/;"	f
LLVMDumpModule	VMCore/Core.cpp	/^void LLVMDumpModule(LLVMModuleRef M) {$/;"	f
LLVMDumpValue	VMCore/Core.cpp	/^void LLVMDumpValue(LLVMValueRef Val) {$/;"	f
LLVMElementAtOffset	Target/Target.cpp	/^unsigned LLVMElementAtOffset(LLVMTargetDataRef TD, LLVMTypeRef StructTy,$/;"	f
LLVMFP128Type	VMCore/Core.cpp	/^LLVMTypeRef LLVMFP128Type(void) {$/;"	f
LLVMFP128TypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMFP128TypeInContext(LLVMContextRef C) {$/;"	f
LLVMFinalizeFunctionPassManager	VMCore/Core.cpp	/^LLVMBool LLVMFinalizeFunctionPassManager(LLVMPassManagerRef FPM) {$/;"	f
LLVMFindFunction	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMBool LLVMFindFunction(LLVMExecutionEngineRef EE, const char *Name,$/;"	f
LLVMFloatType	VMCore/Core.cpp	/^LLVMTypeRef LLVMFloatType(void) {$/;"	f
LLVMFloatTypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMFloatTypeInContext(LLVMContextRef C) {$/;"	f
LLVMFreeMachineCodeForFunction	ExecutionEngine/ExecutionEngineBindings.cpp	/^void LLVMFreeMachineCodeForFunction(LLVMExecutionEngineRef EE, LLVMValueRef F) {$/;"	f
LLVMFunctionType	VMCore/Core.cpp	/^LLVMTypeRef LLVMFunctionType(LLVMTypeRef ReturnType,$/;"	f
LLVMGenericValueIntWidth	ExecutionEngine/ExecutionEngineBindings.cpp	/^unsigned LLVMGenericValueIntWidth(LLVMGenericValueRef GenValRef) {$/;"	f
LLVMGenericValueToFloat	ExecutionEngine/ExecutionEngineBindings.cpp	/^double LLVMGenericValueToFloat(LLVMTypeRef TyRef, LLVMGenericValueRef GenVal) {$/;"	f
LLVMGenericValueToInt	ExecutionEngine/ExecutionEngineBindings.cpp	/^unsigned long long LLVMGenericValueToInt(LLVMGenericValueRef GenValRef,$/;"	f
LLVMGenericValueToPointer	ExecutionEngine/ExecutionEngineBindings.cpp	/^void *LLVMGenericValueToPointer(LLVMGenericValueRef GenVal) {$/;"	f
LLVMGetAlignment	VMCore/Core.cpp	/^unsigned LLVMGetAlignment(LLVMValueRef Global) {$/;"	f
LLVMGetArrayLength	VMCore/Core.cpp	/^unsigned LLVMGetArrayLength(LLVMTypeRef ArrayTy) {$/;"	f
LLVMGetAttribute	VMCore/Core.cpp	/^LLVMAttribute LLVMGetAttribute(LLVMValueRef Arg) {$/;"	f
LLVMGetBasicBlockParent	VMCore/Core.cpp	/^LLVMValueRef LLVMGetBasicBlockParent(LLVMBasicBlockRef BB) {$/;"	f
LLVMGetBasicBlockTerminator	VMCore/Core.cpp	/^LLVMValueRef LLVMGetBasicBlockTerminator(LLVMBasicBlockRef BB) {$/;"	f
LLVMGetBasicBlocks	VMCore/Core.cpp	/^void LLVMGetBasicBlocks(LLVMValueRef FnRef, LLVMBasicBlockRef *BasicBlocksRefs){$/;"	f
LLVMGetBitcodeModule	Bitcode/Reader/BitReader.cpp	/^LLVMBool LLVMGetBitcodeModule(LLVMMemoryBufferRef MemBuf, LLVMModuleRef *OutM,$/;"	f
LLVMGetBitcodeModuleInContext	Bitcode/Reader/BitReader.cpp	/^LLVMBool LLVMGetBitcodeModuleInContext(LLVMContextRef ContextRef,$/;"	f
LLVMGetBitcodeModuleProvider	Bitcode/Reader/BitReader.cpp	/^LLVMBool LLVMGetBitcodeModuleProvider(LLVMMemoryBufferRef MemBuf,$/;"	f
LLVMGetBitcodeModuleProviderInContext	Bitcode/Reader/BitReader.cpp	/^LLVMBool LLVMGetBitcodeModuleProviderInContext(LLVMContextRef ContextRef,$/;"	f
LLVMGetConstOpcode	VMCore/Core.cpp	/^LLVMOpcode LLVMGetConstOpcode(LLVMValueRef ConstantVal) {$/;"	f
LLVMGetCurrentDebugLocation	VMCore/Core.cpp	/^LLVMValueRef LLVMGetCurrentDebugLocation(LLVMBuilderRef Builder) {$/;"	f
LLVMGetDataLayout	VMCore/Core.cpp	/^const char * LLVMGetDataLayout(LLVMModuleRef M) {$/;"	f
LLVMGetElementType	VMCore/Core.cpp	/^LLVMTypeRef LLVMGetElementType(LLVMTypeRef Ty) {$/;"	f
LLVMGetEntryBasicBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMGetEntryBasicBlock(LLVMValueRef Fn) {$/;"	f
LLVMGetExecutionEngineTargetData	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMTargetDataRef LLVMGetExecutionEngineTargetData(LLVMExecutionEngineRef EE) {$/;"	f
LLVMGetFirstBasicBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMGetFirstBasicBlock(LLVMValueRef Fn) {$/;"	f
LLVMGetFirstFunction	VMCore/Core.cpp	/^LLVMValueRef LLVMGetFirstFunction(LLVMModuleRef M) {$/;"	f
LLVMGetFirstGlobal	VMCore/Core.cpp	/^LLVMValueRef LLVMGetFirstGlobal(LLVMModuleRef M) {$/;"	f
LLVMGetFirstInstruction	VMCore/Core.cpp	/^LLVMValueRef LLVMGetFirstInstruction(LLVMBasicBlockRef BB) {$/;"	f
LLVMGetFirstParam	VMCore/Core.cpp	/^LLVMValueRef LLVMGetFirstParam(LLVMValueRef Fn) {$/;"	f
LLVMGetFirstTarget	Target/TargetMachineC.cpp	/^LLVMTargetRef LLVMGetFirstTarget() {$/;"	f
LLVMGetFirstUse	VMCore/Core.cpp	/^LLVMUseRef LLVMGetFirstUse(LLVMValueRef Val) {$/;"	f
LLVMGetFunctionAttr	VMCore/Core.cpp	/^LLVMAttribute LLVMGetFunctionAttr(LLVMValueRef Fn) {$/;"	f
LLVMGetFunctionCallConv	VMCore/Core.cpp	/^unsigned LLVMGetFunctionCallConv(LLVMValueRef Fn) {$/;"	f
LLVMGetGC	VMCore/Core.cpp	/^const char *LLVMGetGC(LLVMValueRef Fn) {$/;"	f
LLVMGetGlobalContext	VMCore/Core.cpp	/^LLVMContextRef LLVMGetGlobalContext() {$/;"	f
LLVMGetGlobalParent	VMCore/Core.cpp	/^LLVMModuleRef LLVMGetGlobalParent(LLVMValueRef Global) {$/;"	f
LLVMGetGlobalPassRegistry	VMCore/Core.cpp	/^LLVMPassRegistryRef LLVMGetGlobalPassRegistry(void) {$/;"	f
LLVMGetICmpPredicate	VMCore/Core.cpp	/^LLVMIntPredicate LLVMGetICmpPredicate(LLVMValueRef Inst) {$/;"	f
LLVMGetIncomingBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMGetIncomingBlock(LLVMValueRef PhiNode, unsigned Index) {$/;"	f
LLVMGetIncomingValue	VMCore/Core.cpp	/^LLVMValueRef LLVMGetIncomingValue(LLVMValueRef PhiNode, unsigned Index) {$/;"	f
LLVMGetInitializer	VMCore/Core.cpp	/^LLVMValueRef LLVMGetInitializer(LLVMValueRef GlobalVar) {$/;"	f
LLVMGetInsertBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMGetInsertBlock(LLVMBuilderRef Builder) {$/;"	f
LLVMGetInstructionCallConv	VMCore/Core.cpp	/^unsigned LLVMGetInstructionCallConv(LLVMValueRef Instr) {$/;"	f
LLVMGetInstructionOpcode	VMCore/Core.cpp	/^LLVMOpcode LLVMGetInstructionOpcode(LLVMValueRef Inst) {$/;"	f
LLVMGetInstructionParent	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMGetInstructionParent(LLVMValueRef Inst) {$/;"	f
LLVMGetIntTypeWidth	VMCore/Core.cpp	/^unsigned LLVMGetIntTypeWidth(LLVMTypeRef IntegerTy) {$/;"	f
LLVMGetIntrinsicID	VMCore/Core.cpp	/^unsigned LLVMGetIntrinsicID(LLVMValueRef Fn) {$/;"	f
LLVMGetLastBasicBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMGetLastBasicBlock(LLVMValueRef Fn) {$/;"	f
LLVMGetLastFunction	VMCore/Core.cpp	/^LLVMValueRef LLVMGetLastFunction(LLVMModuleRef M) {$/;"	f
LLVMGetLastGlobal	VMCore/Core.cpp	/^LLVMValueRef LLVMGetLastGlobal(LLVMModuleRef M) {$/;"	f
LLVMGetLastInstruction	VMCore/Core.cpp	/^LLVMValueRef LLVMGetLastInstruction(LLVMBasicBlockRef BB) {$/;"	f
LLVMGetLastParam	VMCore/Core.cpp	/^LLVMValueRef LLVMGetLastParam(LLVMValueRef Fn) {$/;"	f
LLVMGetLinkage	VMCore/Core.cpp	/^LLVMLinkage LLVMGetLinkage(LLVMValueRef Global) {$/;"	f
LLVMGetMDKindID	VMCore/Core.cpp	/^unsigned LLVMGetMDKindID(const char* Name, unsigned SLen) {$/;"	f
LLVMGetMDKindIDInContext	VMCore/Core.cpp	/^unsigned LLVMGetMDKindIDInContext(LLVMContextRef C, const char* Name,$/;"	f
LLVMGetMDNodeNumOperands	VMCore/Core.cpp	/^unsigned LLVMGetMDNodeNumOperands(LLVMValueRef V)$/;"	f
LLVMGetMDNodeOperands	VMCore/Core.cpp	/^void LLVMGetMDNodeOperands(LLVMValueRef V, LLVMValueRef *Dest)$/;"	f
LLVMGetMDString	VMCore/Core.cpp	/^const char *LLVMGetMDString(LLVMValueRef V, unsigned* Len) {$/;"	f
LLVMGetMetadata	VMCore/Core.cpp	/^LLVMValueRef LLVMGetMetadata(LLVMValueRef Inst, unsigned KindID) {$/;"	f
LLVMGetModuleContext	VMCore/Core.cpp	/^LLVMContextRef LLVMGetModuleContext(LLVMModuleRef M) {$/;"	f
LLVMGetNamedFunction	VMCore/Core.cpp	/^LLVMValueRef LLVMGetNamedFunction(LLVMModuleRef M, const char *Name) {$/;"	f
LLVMGetNamedGlobal	VMCore/Core.cpp	/^LLVMValueRef LLVMGetNamedGlobal(LLVMModuleRef M, const char *Name) {$/;"	f
LLVMGetNamedMetadataNumOperands	VMCore/Core.cpp	/^unsigned LLVMGetNamedMetadataNumOperands(LLVMModuleRef M, const char* name)$/;"	f
LLVMGetNamedMetadataOperands	VMCore/Core.cpp	/^void LLVMGetNamedMetadataOperands(LLVMModuleRef M, const char* name, LLVMValueRef *Dest)$/;"	f
LLVMGetNextBasicBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMGetNextBasicBlock(LLVMBasicBlockRef BB) {$/;"	f
LLVMGetNextFunction	VMCore/Core.cpp	/^LLVMValueRef LLVMGetNextFunction(LLVMValueRef Fn) {$/;"	f
LLVMGetNextGlobal	VMCore/Core.cpp	/^LLVMValueRef LLVMGetNextGlobal(LLVMValueRef GlobalVar) {$/;"	f
LLVMGetNextInstruction	VMCore/Core.cpp	/^LLVMValueRef LLVMGetNextInstruction(LLVMValueRef Inst) {$/;"	f
LLVMGetNextParam	VMCore/Core.cpp	/^LLVMValueRef LLVMGetNextParam(LLVMValueRef Arg) {$/;"	f
LLVMGetNextTarget	Target/TargetMachineC.cpp	/^LLVMTargetRef LLVMGetNextTarget(LLVMTargetRef T) {$/;"	f
LLVMGetNextUse	VMCore/Core.cpp	/^LLVMUseRef LLVMGetNextUse(LLVMUseRef U) {$/;"	f
LLVMGetNumOperands	VMCore/Core.cpp	/^int LLVMGetNumOperands(LLVMValueRef Val) {$/;"	f
LLVMGetOperand	VMCore/Core.cpp	/^LLVMValueRef LLVMGetOperand(LLVMValueRef Val, unsigned Index) {$/;"	f
LLVMGetParam	VMCore/Core.cpp	/^LLVMValueRef LLVMGetParam(LLVMValueRef FnRef, unsigned index) {$/;"	f
LLVMGetParamParent	VMCore/Core.cpp	/^LLVMValueRef LLVMGetParamParent(LLVMValueRef V) {$/;"	f
LLVMGetParamTypes	VMCore/Core.cpp	/^void LLVMGetParamTypes(LLVMTypeRef FunctionTy, LLVMTypeRef *Dest) {$/;"	f
LLVMGetParams	VMCore/Core.cpp	/^void LLVMGetParams(LLVMValueRef FnRef, LLVMValueRef *ParamRefs) {$/;"	f
LLVMGetPointerAddressSpace	VMCore/Core.cpp	/^unsigned LLVMGetPointerAddressSpace(LLVMTypeRef PointerTy) {$/;"	f
LLVMGetPointerToGlobal	ExecutionEngine/ExecutionEngineBindings.cpp	/^void *LLVMGetPointerToGlobal(LLVMExecutionEngineRef EE, LLVMValueRef Global) {$/;"	f
LLVMGetPreviousBasicBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMGetPreviousBasicBlock(LLVMBasicBlockRef BB) {$/;"	f
LLVMGetPreviousFunction	VMCore/Core.cpp	/^LLVMValueRef LLVMGetPreviousFunction(LLVMValueRef Fn) {$/;"	f
LLVMGetPreviousGlobal	VMCore/Core.cpp	/^LLVMValueRef LLVMGetPreviousGlobal(LLVMValueRef GlobalVar) {$/;"	f
LLVMGetPreviousInstruction	VMCore/Core.cpp	/^LLVMValueRef LLVMGetPreviousInstruction(LLVMValueRef Inst) {$/;"	f
LLVMGetPreviousParam	VMCore/Core.cpp	/^LLVMValueRef LLVMGetPreviousParam(LLVMValueRef Arg) {$/;"	f
LLVMGetRelocationAddress	Object/Object.cpp	/^uint64_t LLVMGetRelocationAddress(LLVMRelocationIteratorRef RI) {$/;"	f
LLVMGetRelocationOffset	Object/Object.cpp	/^uint64_t LLVMGetRelocationOffset(LLVMRelocationIteratorRef RI) {$/;"	f
LLVMGetRelocationSymbol	Object/Object.cpp	/^LLVMSymbolIteratorRef LLVMGetRelocationSymbol(LLVMRelocationIteratorRef RI) {$/;"	f
LLVMGetRelocationType	Object/Object.cpp	/^uint64_t LLVMGetRelocationType(LLVMRelocationIteratorRef RI) {$/;"	f
LLVMGetRelocationTypeName	Object/Object.cpp	/^const char *LLVMGetRelocationTypeName(LLVMRelocationIteratorRef RI) {$/;"	f
LLVMGetRelocationValueString	Object/Object.cpp	/^const char *LLVMGetRelocationValueString(LLVMRelocationIteratorRef RI) {$/;"	f
LLVMGetRelocations	Object/Object.cpp	/^LLVMRelocationIteratorRef LLVMGetRelocations(LLVMSectionIteratorRef Section) {$/;"	f
LLVMGetReturnType	VMCore/Core.cpp	/^LLVMTypeRef LLVMGetReturnType(LLVMTypeRef FunctionTy) {$/;"	f
LLVMGetSection	VMCore/Core.cpp	/^const char *LLVMGetSection(LLVMValueRef Global) {$/;"	f
LLVMGetSectionAddress	Object/Object.cpp	/^uint64_t LLVMGetSectionAddress(LLVMSectionIteratorRef SI) {$/;"	f
LLVMGetSectionContainsSymbol	Object/Object.cpp	/^LLVMBool LLVMGetSectionContainsSymbol(LLVMSectionIteratorRef SI,$/;"	f
LLVMGetSectionContents	Object/Object.cpp	/^const char *LLVMGetSectionContents(LLVMSectionIteratorRef SI) {$/;"	f
LLVMGetSectionName	Object/Object.cpp	/^const char *LLVMGetSectionName(LLVMSectionIteratorRef SI) {$/;"	f
LLVMGetSectionSize	Object/Object.cpp	/^uint64_t LLVMGetSectionSize(LLVMSectionIteratorRef SI) {$/;"	f
LLVMGetSections	Object/Object.cpp	/^LLVMSectionIteratorRef LLVMGetSections(LLVMObjectFileRef ObjectFile) {$/;"	f
LLVMGetStructElementTypes	VMCore/Core.cpp	/^void LLVMGetStructElementTypes(LLVMTypeRef StructTy, LLVMTypeRef *Dest) {$/;"	f
LLVMGetStructName	VMCore/Core.cpp	/^const char *LLVMGetStructName(LLVMTypeRef Ty)$/;"	f
LLVMGetSwitchDefaultDest	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMGetSwitchDefaultDest(LLVMValueRef Switch) {$/;"	f
LLVMGetSymbolAddress	Object/Object.cpp	/^uint64_t LLVMGetSymbolAddress(LLVMSymbolIteratorRef SI) {$/;"	f
LLVMGetSymbolFileOffset	Object/Object.cpp	/^uint64_t LLVMGetSymbolFileOffset(LLVMSymbolIteratorRef SI) {$/;"	f
LLVMGetSymbolName	Object/Object.cpp	/^const char *LLVMGetSymbolName(LLVMSymbolIteratorRef SI) {$/;"	f
LLVMGetSymbolSize	Object/Object.cpp	/^uint64_t LLVMGetSymbolSize(LLVMSymbolIteratorRef SI) {$/;"	f
LLVMGetSymbols	Object/Object.cpp	/^LLVMSymbolIteratorRef LLVMGetSymbols(LLVMObjectFileRef ObjectFile) {$/;"	f
LLVMGetTarget	VMCore/Core.cpp	/^const char * LLVMGetTarget(LLVMModuleRef M) {$/;"	f
LLVMGetTargetDescription	Target/TargetMachineC.cpp	/^const char * LLVMGetTargetDescription(LLVMTargetRef T) {$/;"	f
LLVMGetTargetMachineCPU	Target/TargetMachineC.cpp	/^char* LLVMGetTargetMachineCPU(LLVMTargetMachineRef T) {$/;"	f
LLVMGetTargetMachineData	Target/TargetMachineC.cpp	/^LLVMTargetDataRef LLVMGetTargetMachineData(LLVMTargetMachineRef T) {$/;"	f
LLVMGetTargetMachineFeatureString	Target/TargetMachineC.cpp	/^char* LLVMGetTargetMachineFeatureString(LLVMTargetMachineRef T) {$/;"	f
LLVMGetTargetMachineTarget	Target/TargetMachineC.cpp	/^LLVMTargetRef LLVMGetTargetMachineTarget(LLVMTargetMachineRef T) {$/;"	f
LLVMGetTargetMachineTriple	Target/TargetMachineC.cpp	/^char* LLVMGetTargetMachineTriple(LLVMTargetMachineRef T) {$/;"	f
LLVMGetTargetName	Target/TargetMachineC.cpp	/^const char * LLVMGetTargetName(LLVMTargetRef T) {$/;"	f
LLVMGetTypeByName	VMCore/Core.cpp	/^LLVMTypeRef LLVMGetTypeByName(LLVMModuleRef M, const char *Name) {$/;"	f
LLVMGetTypeContext	VMCore/Core.cpp	/^LLVMContextRef LLVMGetTypeContext(LLVMTypeRef Ty) {$/;"	f
LLVMGetTypeKind	VMCore/Core.cpp	/^LLVMTypeKind LLVMGetTypeKind(LLVMTypeRef Ty) {$/;"	f
LLVMGetUndef	VMCore/Core.cpp	/^LLVMValueRef LLVMGetUndef(LLVMTypeRef Ty) {$/;"	f
LLVMGetUsedValue	VMCore/Core.cpp	/^LLVMValueRef LLVMGetUsedValue(LLVMUseRef U) {$/;"	f
LLVMGetUser	VMCore/Core.cpp	/^LLVMValueRef LLVMGetUser(LLVMUseRef U) {$/;"	f
LLVMGetValueName	VMCore/Core.cpp	/^const char *LLVMGetValueName(LLVMValueRef Val) {$/;"	f
LLVMGetVectorSize	VMCore/Core.cpp	/^unsigned LLVMGetVectorSize(LLVMTypeRef VectorTy) {$/;"	f
LLVMGetVisibility	VMCore/Core.cpp	/^LLVMVisibility LLVMGetVisibility(LLVMValueRef Global) {$/;"	f
LLVMGetVolatile	VMCore/Core.cpp	/^LLVMBool LLVMGetVolatile(LLVMValueRef MemAccessInst) {$/;"	f
LLVMHalfType	VMCore/Core.cpp	/^LLVMTypeRef LLVMHalfType(void) {$/;"	f
LLVMHalfTypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMHalfTypeInContext(LLVMContextRef C) {$/;"	f
LLVMHasMetadata	VMCore/Core.cpp	/^int LLVMHasMetadata(LLVMValueRef Inst) {$/;"	f
LLVMInitializeARMAsmLexer	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^extern "C" void LLVMInitializeARMAsmLexer() {$/;"	f
LLVMInitializeARMAsmParser	Target/ARM/AsmParser/ARMAsmParser.cpp	/^extern "C" void LLVMInitializeARMAsmParser() {$/;"	f
LLVMInitializeARMAsmPrinter	Target/ARM/ARMAsmPrinter.cpp	/^extern "C" void LLVMInitializeARMAsmPrinter() {$/;"	f
LLVMInitializeARMDisassembler	Target/ARM/Disassembler/ARMDisassembler.cpp	/^extern "C" void LLVMInitializeARMDisassembler() {$/;"	f
LLVMInitializeARMTarget	Target/ARM/ARMTargetMachine.cpp	/^extern "C" void LLVMInitializeARMTarget() {$/;"	f
LLVMInitializeARMTargetInfo	Target/ARM/TargetInfo/ARMTargetInfo.cpp	/^extern "C" void LLVMInitializeARMTargetInfo() { $/;"	f
LLVMInitializeARMTargetMC	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^extern "C" void LLVMInitializeARMTargetMC() {$/;"	f
LLVMInitializeAnalysis	Analysis/Analysis.cpp	/^void LLVMInitializeAnalysis(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeCellSPUAsmPrinter	Target/CellSPU/SPUAsmPrinter.cpp	/^extern "C" void LLVMInitializeCellSPUAsmPrinter() { $/;"	f
LLVMInitializeCellSPUTarget	Target/CellSPU/SPUTargetMachine.cpp	/^extern "C" void LLVMInitializeCellSPUTarget() {$/;"	f
LLVMInitializeCellSPUTargetInfo	Target/CellSPU/TargetInfo/CellSPUTargetInfo.cpp	/^extern "C" void LLVMInitializeCellSPUTargetInfo() { $/;"	f
LLVMInitializeCellSPUTargetMC	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp	/^extern "C" void LLVMInitializeCellSPUTargetMC() {$/;"	f
LLVMInitializeCodeGen	CodeGen/CodeGen.cpp	/^void LLVMInitializeCodeGen(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeCore	VMCore/Core.cpp	/^void LLVMInitializeCore(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeCppBackendTarget	Target/CppBackend/CPPBackend.cpp	/^extern "C" void LLVMInitializeCppBackendTarget() {$/;"	f
LLVMInitializeCppBackendTargetInfo	Target/CppBackend/TargetInfo/CppBackendTargetInfo.cpp	/^extern "C" void LLVMInitializeCppBackendTargetInfo() { $/;"	f
LLVMInitializeCppBackendTargetMC	Target/CppBackend/TargetInfo/CppBackendTargetInfo.cpp	/^extern "C" void LLVMInitializeCppBackendTargetMC() {}$/;"	f
LLVMInitializeFunctionPassManager	VMCore/Core.cpp	/^LLVMBool LLVMInitializeFunctionPassManager(LLVMPassManagerRef FPM) {$/;"	f
LLVMInitializeHexagonAsmPrinter	Target/Hexagon/HexagonAsmPrinter.cpp	/^extern "C" void LLVMInitializeHexagonAsmPrinter() {$/;"	f
LLVMInitializeHexagonTarget	Target/Hexagon/HexagonTargetMachine.cpp	/^extern "C" void LLVMInitializeHexagonTarget() {$/;"	f
LLVMInitializeHexagonTargetInfo	Target/Hexagon/TargetInfo/HexagonTargetInfo.cpp	/^extern "C" void LLVMInitializeHexagonTargetInfo() {$/;"	f
LLVMInitializeHexagonTargetMC	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp	/^extern "C" void LLVMInitializeHexagonTargetMC() {$/;"	f
LLVMInitializeIPA	Analysis/IPA/IPA.cpp	/^void LLVMInitializeIPA(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeIPO	Transforms/IPO/IPO.cpp	/^void LLVMInitializeIPO(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeInstCombine	Transforms/InstCombine/InstructionCombining.cpp	/^void LLVMInitializeInstCombine(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeInstrumentation	Transforms/Instrumentation/Instrumentation.cpp	/^void LLVMInitializeInstrumentation(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeMBlazeAsmLexer	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^extern "C" void LLVMInitializeMBlazeAsmLexer() {$/;"	f
LLVMInitializeMBlazeAsmParser	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^extern "C" void LLVMInitializeMBlazeAsmParser() {$/;"	f
LLVMInitializeMBlazeAsmPrinter	Target/MBlaze/MBlazeAsmPrinter.cpp	/^extern "C" void LLVMInitializeMBlazeAsmPrinter() {$/;"	f
LLVMInitializeMBlazeDisassembler	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^extern "C" void LLVMInitializeMBlazeDisassembler() {$/;"	f
LLVMInitializeMBlazeTarget	Target/MBlaze/MBlazeTargetMachine.cpp	/^extern "C" void LLVMInitializeMBlazeTarget() {$/;"	f
LLVMInitializeMBlazeTargetInfo	Target/MBlaze/TargetInfo/MBlazeTargetInfo.cpp	/^extern "C" void LLVMInitializeMBlazeTargetInfo() {$/;"	f
LLVMInitializeMBlazeTargetMC	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	/^extern "C" void LLVMInitializeMBlazeTargetMC() {$/;"	f
LLVMInitializeMSP430AsmPrinter	Target/MSP430/MSP430AsmPrinter.cpp	/^extern "C" void LLVMInitializeMSP430AsmPrinter() {$/;"	f
LLVMInitializeMSP430Target	Target/MSP430/MSP430TargetMachine.cpp	/^extern "C" void LLVMInitializeMSP430Target() {$/;"	f
LLVMInitializeMSP430TargetInfo	Target/MSP430/TargetInfo/MSP430TargetInfo.cpp	/^extern "C" void LLVMInitializeMSP430TargetInfo() { $/;"	f
LLVMInitializeMSP430TargetMC	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp	/^extern "C" void LLVMInitializeMSP430TargetMC() {$/;"	f
LLVMInitializeMipsAsmParser	Target/Mips/AsmParser/MipsAsmParser.cpp	/^extern "C" void LLVMInitializeMipsAsmParser() {$/;"	f
LLVMInitializeMipsAsmPrinter	Target/Mips/MipsAsmPrinter.cpp	/^extern "C" void LLVMInitializeMipsAsmPrinter() {$/;"	f
LLVMInitializeMipsDisassembler	Target/Mips/Disassembler/MipsDisassembler.cpp	/^extern "C" void LLVMInitializeMipsDisassembler() {$/;"	f
LLVMInitializeMipsTarget	Target/Mips/MipsTargetMachine.cpp	/^extern "C" void LLVMInitializeMipsTarget() {$/;"	f
LLVMInitializeMipsTargetInfo	Target/Mips/TargetInfo/MipsTargetInfo.cpp	/^extern "C" void LLVMInitializeMipsTargetInfo() {$/;"	f
LLVMInitializeMipsTargetMC	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	/^extern "C" void LLVMInitializeMipsTargetMC() {$/;"	f
LLVMInitializeNVPTXAsmPrinter	Target/NVPTX/NVPTXAsmPrinter.cpp	/^extern "C" void LLVMInitializeNVPTXAsmPrinter() {$/;"	f
LLVMInitializeNVPTXBackendAsmPrinter	Target/NVPTX/NVPTXAsmPrinter.cpp	/^extern "C" void LLVMInitializeNVPTXBackendAsmPrinter() {$/;"	f
LLVMInitializeNVPTXTarget	Target/NVPTX/NVPTXTargetMachine.cpp	/^extern "C" void LLVMInitializeNVPTXTarget() {$/;"	f
LLVMInitializeNVPTXTargetInfo	Target/NVPTX/TargetInfo/NVPTXTargetInfo.cpp	/^extern "C" void LLVMInitializeNVPTXTargetInfo() {$/;"	f
LLVMInitializeNVPTXTargetMC	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.cpp	/^extern "C" void LLVMInitializeNVPTXTargetMC() {$/;"	f
LLVMInitializePowerPCAsmPrinter	Target/PowerPC/PPCAsmPrinter.cpp	/^extern "C" void LLVMInitializePowerPCAsmPrinter() { $/;"	f
LLVMInitializePowerPCTarget	Target/PowerPC/PPCTargetMachine.cpp	/^extern "C" void LLVMInitializePowerPCTarget() {$/;"	f
LLVMInitializePowerPCTargetInfo	Target/PowerPC/TargetInfo/PowerPCTargetInfo.cpp	/^extern "C" void LLVMInitializePowerPCTargetInfo() { $/;"	f
LLVMInitializePowerPCTargetMC	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	/^extern "C" void LLVMInitializePowerPCTargetMC() {$/;"	f
LLVMInitializeScalarOpts	Transforms/Scalar/Scalar.cpp	/^void LLVMInitializeScalarOpts(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeSparcAsmPrinter	Target/Sparc/SparcAsmPrinter.cpp	/^extern "C" void LLVMInitializeSparcAsmPrinter() { $/;"	f
LLVMInitializeSparcTarget	Target/Sparc/SparcTargetMachine.cpp	/^extern "C" void LLVMInitializeSparcTarget() {$/;"	f
LLVMInitializeSparcTargetInfo	Target/Sparc/TargetInfo/SparcTargetInfo.cpp	/^extern "C" void LLVMInitializeSparcTargetInfo() { $/;"	f
LLVMInitializeSparcTargetMC	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.cpp	/^extern "C" void LLVMInitializeSparcTargetMC() {$/;"	f
LLVMInitializeTarget	Target/Target.cpp	/^void LLVMInitializeTarget(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeTransformUtils	Transforms/Utils/Utils.cpp	/^void LLVMInitializeTransformUtils(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeVectorization	Transforms/Vectorize/Vectorize.cpp	/^void LLVMInitializeVectorization(LLVMPassRegistryRef R) {$/;"	f
LLVMInitializeX86AsmLexer	Target/X86/AsmParser/X86AsmLexer.cpp	/^extern "C" void LLVMInitializeX86AsmLexer() {$/;"	f
LLVMInitializeX86AsmParser	Target/X86/AsmParser/X86AsmParser.cpp	/^extern "C" void LLVMInitializeX86AsmParser() {$/;"	f
LLVMInitializeX86AsmPrinter	Target/X86/X86AsmPrinter.cpp	/^extern "C" void LLVMInitializeX86AsmPrinter() {$/;"	f
LLVMInitializeX86Disassembler	Target/X86/Disassembler/X86Disassembler.cpp	/^extern "C" void LLVMInitializeX86Disassembler() { $/;"	f
LLVMInitializeX86Target	Target/X86/X86TargetMachine.cpp	/^extern "C" void LLVMInitializeX86Target() {$/;"	f
LLVMInitializeX86TargetInfo	Target/X86/TargetInfo/X86TargetInfo.cpp	/^extern "C" void LLVMInitializeX86TargetInfo() { $/;"	f
LLVMInitializeX86TargetMC	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^extern "C" void LLVMInitializeX86TargetMC() {$/;"	f
LLVMInitializeXCoreAsmPrinter	Target/XCore/XCoreAsmPrinter.cpp	/^extern "C" void LLVMInitializeXCoreAsmPrinter() { $/;"	f
LLVMInitializeXCoreTarget	Target/XCore/XCoreTargetMachine.cpp	/^extern "C" void LLVMInitializeXCoreTarget() {$/;"	f
LLVMInitializeXCoreTargetInfo	Target/XCore/TargetInfo/XCoreTargetInfo.cpp	/^extern "C" void LLVMInitializeXCoreTargetInfo() { $/;"	f
LLVMInitializeXCoreTargetMC	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp	/^extern "C" void LLVMInitializeXCoreTargetMC() {$/;"	f
LLVMInsertBasicBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMInsertBasicBlock(LLVMBasicBlockRef BBRef,$/;"	f
LLVMInsertBasicBlockInContext	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMInsertBasicBlockInContext(LLVMContextRef C,$/;"	f
LLVMInsertIntoBuilder	VMCore/Core.cpp	/^void LLVMInsertIntoBuilder(LLVMBuilderRef Builder, LLVMValueRef Instr) {$/;"	f
LLVMInsertIntoBuilderWithName	VMCore/Core.cpp	/^void LLVMInsertIntoBuilderWithName(LLVMBuilderRef Builder, LLVMValueRef Instr,$/;"	f
LLVMInstructionEraseFromParent	VMCore/Core.cpp	/^void LLVMInstructionEraseFromParent(LLVMValueRef Inst) {$/;"	f
LLVMInt16Type	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt16Type(void) {$/;"	f
LLVMInt16TypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt16TypeInContext(LLVMContextRef C) {$/;"	f
LLVMInt1Type	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt1Type(void)  {$/;"	f
LLVMInt1TypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt1TypeInContext(LLVMContextRef C)  {$/;"	f
LLVMInt32Type	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt32Type(void) {$/;"	f
LLVMInt32TypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt32TypeInContext(LLVMContextRef C) {$/;"	f
LLVMInt64Type	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt64Type(void) {$/;"	f
LLVMInt64TypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt64TypeInContext(LLVMContextRef C) {$/;"	f
LLVMInt8Type	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt8Type(void)  {$/;"	f
LLVMInt8TypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMInt8TypeInContext(LLVMContextRef C)  {$/;"	f
LLVMIntPtrType	Target/Target.cpp	/^LLVMTypeRef LLVMIntPtrType(LLVMTargetDataRef TD) {$/;"	f
LLVMIntPtrTypeForAS	Target/Target.cpp	/^LLVMTypeRef LLVMIntPtrTypeForAS(LLVMTargetDataRef TD, unsigned AS) {$/;"	f
LLVMIntType	VMCore/Core.cpp	/^LLVMTypeRef LLVMIntType(unsigned NumBits) {$/;"	f
LLVMIntTypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMIntTypeInContext(LLVMContextRef C, unsigned NumBits) {$/;"	f
LLVMIsConstant	VMCore/Core.cpp	/^LLVMBool LLVMIsConstant(LLVMValueRef Ty) {$/;"	f
LLVMIsDeclaration	VMCore/Core.cpp	/^LLVMBool LLVMIsDeclaration(LLVMValueRef Global) {$/;"	f
LLVMIsFunctionVarArg	VMCore/Core.cpp	/^LLVMBool LLVMIsFunctionVarArg(LLVMTypeRef FunctionTy) {$/;"	f
LLVMIsGlobalConstant	VMCore/Core.cpp	/^LLVMBool LLVMIsGlobalConstant(LLVMValueRef GlobalVar) {$/;"	f
LLVMIsNull	VMCore/Core.cpp	/^LLVMBool LLVMIsNull(LLVMValueRef Val) {$/;"	f
LLVMIsOpaqueStruct	VMCore/Core.cpp	/^LLVMBool LLVMIsOpaqueStruct(LLVMTypeRef StructTy) {$/;"	f
LLVMIsPackedStruct	VMCore/Core.cpp	/^LLVMBool LLVMIsPackedStruct(LLVMTypeRef StructTy) {$/;"	f
LLVMIsRelocationIteratorAtEnd	Object/Object.cpp	/^LLVMBool LLVMIsRelocationIteratorAtEnd(LLVMSectionIteratorRef Section,$/;"	f
LLVMIsSectionIteratorAtEnd	Object/Object.cpp	/^LLVMBool LLVMIsSectionIteratorAtEnd(LLVMObjectFileRef ObjectFile,$/;"	f
LLVMIsSymbolIteratorAtEnd	Object/Object.cpp	/^LLVMBool LLVMIsSymbolIteratorAtEnd(LLVMObjectFileRef ObjectFile,$/;"	f
LLVMIsTailCall	VMCore/Core.cpp	/^LLVMBool LLVMIsTailCall(LLVMValueRef Call) {$/;"	f
LLVMIsThreadLocal	VMCore/Core.cpp	/^LLVMBool LLVMIsThreadLocal(LLVMValueRef GlobalVar) {$/;"	f
LLVMIsUndef	VMCore/Core.cpp	/^LLVMBool LLVMIsUndef(LLVMValueRef Val) {$/;"	f
LLVMLabelType	VMCore/Core.cpp	/^LLVMTypeRef LLVMLabelType(void) {$/;"	f
LLVMLabelTypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMLabelTypeInContext(LLVMContextRef C) {$/;"	f
LLVMLinkInInterpreter	ExecutionEngine/Interpreter/Interpreter.cpp	/^extern "C" void LLVMLinkInInterpreter() { }$/;"	f
LLVMLinkInJIT	ExecutionEngine/JIT/JIT.cpp	/^extern "C" void LLVMLinkInJIT() {$/;"	f
LLVMLinkInMCJIT	ExecutionEngine/MCJIT/MCJIT.cpp	/^extern "C" void LLVMLinkInMCJIT() {$/;"	f
LLVMLinkModules	Linker/LinkModules.cpp	/^LLVMBool LLVMLinkModules(LLVMModuleRef Dest, LLVMModuleRef Src,$/;"	f
LLVMMDNode	VMCore/Core.cpp	/^LLVMValueRef LLVMMDNode(LLVMValueRef *Vals, unsigned Count) {$/;"	f
LLVMMDNodeInContext	VMCore/Core.cpp	/^LLVMValueRef LLVMMDNodeInContext(LLVMContextRef C, LLVMValueRef *Vals,$/;"	f
LLVMMDString	VMCore/Core.cpp	/^LLVMValueRef LLVMMDString(const char *Str, unsigned SLen) {$/;"	f
LLVMMDStringInContext	VMCore/Core.cpp	/^LLVMValueRef LLVMMDStringInContext(LLVMContextRef C, const char *Str,$/;"	f
LLVMModuleCreateWithName	VMCore/Core.cpp	/^LLVMModuleRef LLVMModuleCreateWithName(const char *ModuleID) {$/;"	f
LLVMModuleCreateWithNameInContext	VMCore/Core.cpp	/^LLVMModuleRef LLVMModuleCreateWithNameInContext(const char *ModuleID, $/;"	f
LLVMMoveBasicBlockAfter	VMCore/Core.cpp	/^void LLVMMoveBasicBlockAfter(LLVMBasicBlockRef BB, LLVMBasicBlockRef MovePos) {$/;"	f
LLVMMoveBasicBlockBefore	VMCore/Core.cpp	/^void LLVMMoveBasicBlockBefore(LLVMBasicBlockRef BB, LLVMBasicBlockRef MovePos) {$/;"	f
LLVMMoveToContainingSection	Object/Object.cpp	/^void LLVMMoveToContainingSection(LLVMSectionIteratorRef Sect,$/;"	f
LLVMMoveToNextRelocation	Object/Object.cpp	/^void LLVMMoveToNextRelocation(LLVMRelocationIteratorRef SI) {$/;"	f
LLVMMoveToNextSection	Object/Object.cpp	/^void LLVMMoveToNextSection(LLVMSectionIteratorRef SI) {$/;"	f
LLVMMoveToNextSymbol	Object/Object.cpp	/^void LLVMMoveToNextSymbol(LLVMSymbolIteratorRef SI) {$/;"	f
LLVMObjects	VMCore/LLVMContextImpl.h	/^  LeakDetectorImpl<Value> LLVMObjects;$/;"	m	class:llvm::LLVMContextImpl
LLVMOffsetOfElement	Target/Target.cpp	/^unsigned long long LLVMOffsetOfElement(LLVMTargetDataRef TD, LLVMTypeRef StructTy,$/;"	f
LLVMPPCFP128Type	VMCore/Core.cpp	/^LLVMTypeRef LLVMPPCFP128Type(void) {$/;"	f
LLVMPPCFP128TypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMPPCFP128TypeInContext(LLVMContextRef C) {$/;"	f
LLVMParseBitcode	Bitcode/Reader/BitReader.cpp	/^LLVMBool LLVMParseBitcode(LLVMMemoryBufferRef MemBuf,$/;"	f
LLVMParseBitcodeInContext	Bitcode/Reader/BitReader.cpp	/^LLVMBool LLVMParseBitcodeInContext(LLVMContextRef ContextRef,$/;"	f
LLVMPassManagerBuilderCreate	Transforms/IPO/PassManagerBuilder.cpp	/^LLVMPassManagerBuilderRef LLVMPassManagerBuilderCreate(void) {$/;"	f
LLVMPassManagerBuilderDispose	Transforms/IPO/PassManagerBuilder.cpp	/^void LLVMPassManagerBuilderDispose(LLVMPassManagerBuilderRef PMB) {$/;"	f
LLVMPassManagerBuilderPopulateFunctionPassManager	Transforms/IPO/PassManagerBuilder.cpp	/^LLVMPassManagerBuilderPopulateFunctionPassManager(LLVMPassManagerBuilderRef PMB,$/;"	f
LLVMPassManagerBuilderPopulateLTOPassManager	Transforms/IPO/PassManagerBuilder.cpp	/^void LLVMPassManagerBuilderPopulateLTOPassManager(LLVMPassManagerBuilderRef PMB,$/;"	f
LLVMPassManagerBuilderPopulateModulePassManager	Transforms/IPO/PassManagerBuilder.cpp	/^LLVMPassManagerBuilderPopulateModulePassManager(LLVMPassManagerBuilderRef PMB,$/;"	f
LLVMPassManagerBuilderSetDisableSimplifyLibCalls	Transforms/IPO/PassManagerBuilder.cpp	/^LLVMPassManagerBuilderSetDisableSimplifyLibCalls(LLVMPassManagerBuilderRef PMB,$/;"	f
LLVMPassManagerBuilderSetDisableUnitAtATime	Transforms/IPO/PassManagerBuilder.cpp	/^LLVMPassManagerBuilderSetDisableUnitAtATime(LLVMPassManagerBuilderRef PMB,$/;"	f
LLVMPassManagerBuilderSetDisableUnrollLoops	Transforms/IPO/PassManagerBuilder.cpp	/^LLVMPassManagerBuilderSetDisableUnrollLoops(LLVMPassManagerBuilderRef PMB,$/;"	f
LLVMPassManagerBuilderSetOptLevel	Transforms/IPO/PassManagerBuilder.cpp	/^LLVMPassManagerBuilderSetOptLevel(LLVMPassManagerBuilderRef PMB,$/;"	f
LLVMPassManagerBuilderSetSizeLevel	Transforms/IPO/PassManagerBuilder.cpp	/^LLVMPassManagerBuilderSetSizeLevel(LLVMPassManagerBuilderRef PMB,$/;"	f
LLVMPassManagerBuilderUseInlinerWithThreshold	Transforms/IPO/PassManagerBuilder.cpp	/^LLVMPassManagerBuilderUseInlinerWithThreshold(LLVMPassManagerBuilderRef PMB,$/;"	f
LLVMPointerSize	Target/Target.cpp	/^unsigned LLVMPointerSize(LLVMTargetDataRef TD) {$/;"	f
LLVMPointerSizeForAS	Target/Target.cpp	/^unsigned LLVMPointerSizeForAS(LLVMTargetDataRef TD, unsigned AS) {$/;"	f
LLVMPointerType	VMCore/Core.cpp	/^LLVMTypeRef LLVMPointerType(LLVMTypeRef ElementType, unsigned AddressSpace) {$/;"	f
LLVMPositionBuilder	VMCore/Core.cpp	/^void LLVMPositionBuilder(LLVMBuilderRef Builder, LLVMBasicBlockRef Block,$/;"	f
LLVMPositionBuilderAtEnd	VMCore/Core.cpp	/^void LLVMPositionBuilderAtEnd(LLVMBuilderRef Builder, LLVMBasicBlockRef Block) {$/;"	f
LLVMPositionBuilderBefore	VMCore/Core.cpp	/^void LLVMPositionBuilderBefore(LLVMBuilderRef Builder, LLVMValueRef Instr) {$/;"	f
LLVMPreferredAlignmentOfGlobal	Target/Target.cpp	/^unsigned LLVMPreferredAlignmentOfGlobal(LLVMTargetDataRef TD,$/;"	f
LLVMPreferredAlignmentOfType	Target/Target.cpp	/^unsigned LLVMPreferredAlignmentOfType(LLVMTargetDataRef TD, LLVMTypeRef Ty) {$/;"	f
LLVMPrintModuleToFile	VMCore/Core.cpp	/^LLVMBool LLVMPrintModuleToFile(LLVMModuleRef M, const char *Filename,$/;"	f
LLVMRecompileAndRelinkFunction	ExecutionEngine/ExecutionEngineBindings.cpp	/^void *LLVMRecompileAndRelinkFunction(LLVMExecutionEngineRef EE, LLVMValueRef Fn) {$/;"	f
LLVMRemoveAttribute	VMCore/Core.cpp	/^void LLVMRemoveAttribute(LLVMValueRef Arg, LLVMAttribute PA) {$/;"	f
LLVMRemoveBasicBlockFromParent	VMCore/Core.cpp	/^void LLVMRemoveBasicBlockFromParent(LLVMBasicBlockRef BBRef) {$/;"	f
LLVMRemoveFunctionAttr	VMCore/Core.cpp	/^void LLVMRemoveFunctionAttr(LLVMValueRef Fn, LLVMAttribute PA) {$/;"	f
LLVMRemoveInstrAttribute	VMCore/Core.cpp	/^void LLVMRemoveInstrAttribute(LLVMValueRef Instr, unsigned index, $/;"	f
LLVMRemoveModule	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMBool LLVMRemoveModule(LLVMExecutionEngineRef EE, LLVMModuleRef M,$/;"	f
LLVMRemoveModuleProvider	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMBool LLVMRemoveModuleProvider(LLVMExecutionEngineRef EE,$/;"	f
LLVMReplaceAllUsesWith	VMCore/Core.cpp	/^void LLVMReplaceAllUsesWith(LLVMValueRef OldVal, LLVMValueRef NewVal) {$/;"	f
LLVMRunFunction	ExecutionEngine/ExecutionEngineBindings.cpp	/^LLVMGenericValueRef LLVMRunFunction(LLVMExecutionEngineRef EE, LLVMValueRef F,$/;"	f
LLVMRunFunctionAsMain	ExecutionEngine/ExecutionEngineBindings.cpp	/^int LLVMRunFunctionAsMain(LLVMExecutionEngineRef EE, LLVMValueRef F,$/;"	f
LLVMRunFunctionPassManager	VMCore/Core.cpp	/^LLVMBool LLVMRunFunctionPassManager(LLVMPassManagerRef FPM, LLVMValueRef F) {$/;"	f
LLVMRunPassManager	VMCore/Core.cpp	/^LLVMBool LLVMRunPassManager(LLVMPassManagerRef PM, LLVMModuleRef M) {$/;"	f
LLVMRunStaticConstructors	ExecutionEngine/ExecutionEngineBindings.cpp	/^void LLVMRunStaticConstructors(LLVMExecutionEngineRef EE) {$/;"	f
LLVMRunStaticDestructors	ExecutionEngine/ExecutionEngineBindings.cpp	/^void LLVMRunStaticDestructors(LLVMExecutionEngineRef EE) {$/;"	f
LLVMSetAlignment	VMCore/Core.cpp	/^void LLVMSetAlignment(LLVMValueRef Global, unsigned Bytes) {$/;"	f
LLVMSetCleanup	VMCore/Core.cpp	/^void LLVMSetCleanup(LLVMValueRef LandingPad, LLVMBool Val) {$/;"	f
LLVMSetCurrentDebugLocation	VMCore/Core.cpp	/^void LLVMSetCurrentDebugLocation(LLVMBuilderRef Builder, LLVMValueRef L) {$/;"	f
LLVMSetDataLayout	VMCore/Core.cpp	/^void LLVMSetDataLayout(LLVMModuleRef M, const char *Triple) {$/;"	f
LLVMSetFunctionCallConv	VMCore/Core.cpp	/^void LLVMSetFunctionCallConv(LLVMValueRef Fn, unsigned CC) {$/;"	f
LLVMSetGC	VMCore/Core.cpp	/^void LLVMSetGC(LLVMValueRef Fn, const char *GC) {$/;"	f
LLVMSetGlobalConstant	VMCore/Core.cpp	/^void LLVMSetGlobalConstant(LLVMValueRef GlobalVar, LLVMBool IsConstant) {$/;"	f
LLVMSetInitializer	VMCore/Core.cpp	/^void LLVMSetInitializer(LLVMValueRef GlobalVar, LLVMValueRef ConstantVal) {$/;"	f
LLVMSetInstDebugLocation	VMCore/Core.cpp	/^void LLVMSetInstDebugLocation(LLVMBuilderRef Builder, LLVMValueRef Inst) {$/;"	f
LLVMSetInstrParamAlignment	VMCore/Core.cpp	/^void LLVMSetInstrParamAlignment(LLVMValueRef Instr, unsigned index, $/;"	f
LLVMSetInstructionCallConv	VMCore/Core.cpp	/^void LLVMSetInstructionCallConv(LLVMValueRef Instr, unsigned CC) {$/;"	f
LLVMSetLinkage	VMCore/Core.cpp	/^void LLVMSetLinkage(LLVMValueRef Global, LLVMLinkage Linkage) {$/;"	f
LLVMSetMetadata	VMCore/Core.cpp	/^void LLVMSetMetadata(LLVMValueRef Inst, unsigned KindID, LLVMValueRef MD) {$/;"	f
LLVMSetModuleInlineAsm	VMCore/Core.cpp	/^void LLVMSetModuleInlineAsm(LLVMModuleRef M, const char *Asm) {$/;"	f
LLVMSetOperand	VMCore/Core.cpp	/^void LLVMSetOperand(LLVMValueRef Val, unsigned Index, LLVMValueRef Op) {$/;"	f
LLVMSetParamAlignment	VMCore/Core.cpp	/^void LLVMSetParamAlignment(LLVMValueRef Arg, unsigned align) {$/;"	f
LLVMSetSection	VMCore/Core.cpp	/^void LLVMSetSection(LLVMValueRef Global, const char *Section) {$/;"	f
LLVMSetTailCall	VMCore/Core.cpp	/^void LLVMSetTailCall(LLVMValueRef Call, LLVMBool isTailCall) {$/;"	f
LLVMSetTarget	VMCore/Core.cpp	/^void LLVMSetTarget(LLVMModuleRef M, const char *Triple) {$/;"	f
LLVMSetThreadLocal	VMCore/Core.cpp	/^void LLVMSetThreadLocal(LLVMValueRef GlobalVar, LLVMBool IsThreadLocal) {$/;"	f
LLVMSetValueName	VMCore/Core.cpp	/^void LLVMSetValueName(LLVMValueRef Val, const char *Name) {$/;"	f
LLVMSetVisibility	VMCore/Core.cpp	/^void LLVMSetVisibility(LLVMValueRef Global, LLVMVisibility Viz) {$/;"	f
LLVMSetVolatile	VMCore/Core.cpp	/^void LLVMSetVolatile(LLVMValueRef MemAccessInst, LLVMBool isVolatile) {$/;"	f
LLVMSizeOf	VMCore/Core.cpp	/^LLVMValueRef LLVMSizeOf(LLVMTypeRef Ty) {$/;"	f
LLVMSizeOfTypeInBits	Target/Target.cpp	/^unsigned long long LLVMSizeOfTypeInBits(LLVMTargetDataRef TD, LLVMTypeRef Ty) {$/;"	f
LLVMStoreSizeOfType	Target/Target.cpp	/^unsigned long long LLVMStoreSizeOfType(LLVMTargetDataRef TD, LLVMTypeRef Ty) {$/;"	f
LLVMStructCreateNamed	VMCore/Core.cpp	/^LLVMTypeRef LLVMStructCreateNamed(LLVMContextRef C, const char *Name)$/;"	f
LLVMStructSetBody	VMCore/Core.cpp	/^void LLVMStructSetBody(LLVMTypeRef StructTy, LLVMTypeRef *ElementTypes,$/;"	f
LLVMStructType	VMCore/Core.cpp	/^LLVMTypeRef LLVMStructType(LLVMTypeRef *ElementTypes,$/;"	f
LLVMStructTypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMStructTypeInContext(LLVMContextRef C, LLVMTypeRef *ElementTypes,$/;"	f
LLVMSyntaxVariant	MC/MCDisassembler/EDDisassembler.h	/^  int LLVMSyntaxVariant;$/;"	m	struct:llvm::EDDisassembler
LLVMTargetHasAsmBackend	Target/TargetMachineC.cpp	/^LLVMBool LLVMTargetHasAsmBackend(LLVMTargetRef T) {$/;"	f
LLVMTargetHasJIT	Target/TargetMachineC.cpp	/^LLVMBool LLVMTargetHasJIT(LLVMTargetRef T) {$/;"	f
LLVMTargetHasTargetMachine	Target/TargetMachineC.cpp	/^LLVMBool LLVMTargetHasTargetMachine(LLVMTargetRef T) {$/;"	f
LLVMTargetMachine	CodeGen/LLVMTargetMachine.cpp	/^LLVMTargetMachine::LLVMTargetMachine(const Target &T, StringRef Triple,$/;"	f	class:LLVMTargetMachine
LLVMTargetMachineEmitToFile	Target/TargetMachineC.cpp	/^LLVMBool LLVMTargetMachineEmitToFile(LLVMTargetMachineRef T, LLVMModuleRef M,$/;"	f
LLVMTypeIsSized	VMCore/Core.cpp	/^LLVMBool LLVMTypeIsSized(LLVMTypeRef Ty)$/;"	f
LLVMTypeOf	VMCore/Core.cpp	/^LLVMTypeRef LLVMTypeOf(LLVMValueRef Val) {$/;"	f
LLVMValueAsBasicBlock	VMCore/Core.cpp	/^LLVMBasicBlockRef LLVMValueAsBasicBlock(LLVMValueRef Val) {$/;"	f
LLVMValueIsBasicBlock	VMCore/Core.cpp	/^LLVMBool LLVMValueIsBasicBlock(LLVMValueRef Val) {$/;"	f
LLVMVectorType	VMCore/Core.cpp	/^LLVMTypeRef LLVMVectorType(LLVMTypeRef ElementType, unsigned ElementCount) {$/;"	f
LLVMVerifyFunction	Analysis/Analysis.cpp	/^LLVMBool LLVMVerifyFunction(LLVMValueRef Fn, LLVMVerifierFailureAction Action) {$/;"	f
LLVMVerifyModule	Analysis/Analysis.cpp	/^LLVMBool LLVMVerifyModule(LLVMModuleRef M, LLVMVerifierFailureAction Action,$/;"	f
LLVMViewFunctionCFG	Analysis/Analysis.cpp	/^void LLVMViewFunctionCFG(LLVMValueRef Fn) {$/;"	f
LLVMViewFunctionCFGOnly	Analysis/Analysis.cpp	/^void LLVMViewFunctionCFGOnly(LLVMValueRef Fn) {$/;"	f
LLVMVoidType	VMCore/Core.cpp	/^LLVMTypeRef LLVMVoidType(void)  {$/;"	f
LLVMVoidTypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMVoidTypeInContext(LLVMContextRef C)  {$/;"	f
LLVMWriteBitcodeToFD	Bitcode/Writer/BitWriter.cpp	/^int LLVMWriteBitcodeToFD(LLVMModuleRef M, int FD, int ShouldClose,$/;"	f
LLVMWriteBitcodeToFile	Bitcode/Writer/BitWriter.cpp	/^int LLVMWriteBitcodeToFile(LLVMModuleRef M, const char *Path) {$/;"	f
LLVMWriteBitcodeToFileHandle	Bitcode/Writer/BitWriter.cpp	/^int LLVMWriteBitcodeToFileHandle(LLVMModuleRef M, int FileHandle) {$/;"	f
LLVMX86FP80Type	VMCore/Core.cpp	/^LLVMTypeRef LLVMX86FP80Type(void) {$/;"	f
LLVMX86FP80TypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMX86FP80TypeInContext(LLVMContextRef C) {$/;"	f
LLVMX86MMXType	VMCore/Core.cpp	/^LLVMTypeRef LLVMX86MMXType(void) {$/;"	f
LLVMX86MMXTypeInContext	VMCore/Core.cpp	/^LLVMTypeRef LLVMX86MMXTypeInContext(LLVMContextRef C) {$/;"	f
LLVM_ANALYSIS_MAXIMUMSPANNINGTREE_H	Transforms/Instrumentation/MaximumSpanningTree.h	16;"	d
LLVM_ARMTARGETASMINFO_H	Target/ARM/MCTargetDesc/ARMMCAsmInfo.h	15;"	d
LLVM_ARM_ARMFIXUPKINDS_H	Target/ARM/MCTargetDesc/ARMFixupKinds.h	11;"	d
LLVM_ASMPARSER_LLPARSER_H	AsmParser/LLParser.h	15;"	d
LLVM_ATTRIBUTESIMPL_H	VMCore/AttributesImpl.h	16;"	d
LLVM_ATTRIBUTE_USED	Analysis/LazyValueInfo.cpp	/^    LLVM_ATTRIBUTE_USED;$/;"	m	namespace:llvm	file:
LLVM_ATTRIBUTE_USED	Transforms/Instrumentation/PathProfiling.cpp	/^      LLVM_ATTRIBUTE_USED;$/;"	m	namespace:llvm	file:
LLVM_CODEGEN_AGGRESSIVEANTIDEPBREAKER_H	CodeGen/AggressiveAntiDepBreaker.h	18;"	d
LLVM_CODEGEN_ALLOCATIONORDER_H	CodeGen/AllocationOrder.h	18;"	d
LLVM_CODEGEN_ANTIDEPBREAKER_H	CodeGen/AntiDepBreaker.h	16;"	d
LLVM_CODEGEN_ASMPRINTER_DWARFEXCEPTION_H	CodeGen/AsmPrinter/DwarfException.h	15;"	d
LLVM_CODEGEN_BRANCHFOLDING_HPP	CodeGen/BranchFolding.h	11;"	d
LLVM_CODEGEN_CRITICALANTIDEPBREAKER_H	CodeGen/CriticalAntiDepBreaker.h	17;"	d
LLVM_CODEGEN_INTERFERENCECACHE	CodeGen/InterferenceCache.h	16;"	d
LLVM_CODEGEN_LIVEDEBUGVARIABLES_H	CodeGen/LiveDebugVariables.h	22;"	d
LLVM_CODEGEN_LIVEINTERVALUNION	CodeGen/LiveIntervalUnion.h	18;"	d
LLVM_CODEGEN_LIVERANGECALC_H	CodeGen/LiveRangeCalc.h	23;"	d
LLVM_CODEGEN_LIVEREGMATRIX_H	CodeGen/LiveRegMatrix.h	25;"	d
LLVM_CODEGEN_MACHINE_TRACE_METRICS_H	CodeGen/MachineTraceMetrics.h	48;"	d
LLVM_CODEGEN_PEI_H	CodeGen/PrologEpilogInserter.h	23;"	d
LLVM_CODEGEN_PHIELIMINATIONUTILS_H	CodeGen/PHIEliminationUtils.h	11;"	d
LLVM_CODEGEN_REGALLOCBASE	CodeGen/RegAllocBase.h	38;"	d
LLVM_CODEGEN_REGISTER_COALESCER_H	CodeGen/RegisterCoalescer.h	16;"	d
LLVM_CODEGEN_SDNODEDBGVALUE_H	CodeGen/SelectionDAG/SDNodeDbgValue.h	15;"	d
LLVM_CODEGEN_SDNODEORDERING_H	CodeGen/SelectionDAG/SDNodeOrdering.h	15;"	d
LLVM_CODEGEN_SPILLER_H	CodeGen/Spiller.h	11;"	d
LLVM_CODEGEN_SPILLPLACEMENT_H	CodeGen/SpillPlacement.h	28;"	d
LLVM_CODEGEN_SPLITKIT_H	CodeGen/SplitKit.h	16;"	d
LLVM_CODEGEN_VIRTREGMAP_H	CodeGen/VirtRegMap.h	18;"	d
LLVM_COFF_SWITCH_RELOC_TYPE_NAME	Object/COFFObjectFile.cpp	740;"	d	file:
LLVM_COFF_SWITCH_RELOC_TYPE_NAME	Object/COFFObjectFile.cpp	795;"	d	file:
LLVM_CONSTANTSCONTEXT_H	VMCore/ConstantsContext.h	16;"	d
LLVM_DEBUGINFO_DWARFABBREVIATIONDECLARATION_H	DebugInfo/DWARFAbbreviationDeclaration.h	11;"	d
LLVM_DEBUGINFO_DWARFATTRIBUTE_H	DebugInfo/DWARFAttribute.h	11;"	d
LLVM_DEBUGINFO_DWARFCOMPILEUNIT_H	DebugInfo/DWARFCompileUnit.h	11;"	d
LLVM_DEBUGINFO_DWARFCONTEXT_H	DebugInfo/DWARFContext.h	11;"	d
LLVM_DEBUGINFO_DWARFDEBUGABBREV_H	DebugInfo/DWARFDebugAbbrev.h	11;"	d
LLVM_DEBUGINFO_DWARFDEBUGARANGESET_H	DebugInfo/DWARFDebugArangeSet.h	11;"	d
LLVM_DEBUGINFO_DWARFDEBUGARANGES_H	DebugInfo/DWARFDebugAranges.h	11;"	d
LLVM_DEBUGINFO_DWARFDEBUGINFOENTRY_H	DebugInfo/DWARFDebugInfoEntry.h	11;"	d
LLVM_DEBUGINFO_DWARFDEBUGLINE_H	DebugInfo/DWARFDebugLine.h	11;"	d
LLVM_DEBUGINFO_DWARFDEBUGRANGELIST_H	DebugInfo/DWARFDebugRangeList.h	11;"	d
LLVM_DEBUGINFO_DWARFFORMVALUE_H	DebugInfo/DWARFFormValue.h	11;"	d
LLVM_DEFINE_VALUE_CAST	VMCore/Core.cpp	458;"	d	file:
LLVM_DELETED_FUNCTION	Bitcode/Reader/BitcodeReader.cpp	/^    void operator=(const ConstantPlaceHolder &) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::__anon55::ConstantPlaceHolder	file:
LLVM_DELETED_FUNCTION	Bitcode/Writer/ValueEnumerator.h	/^  ValueEnumerator(const ValueEnumerator &) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::ValueEnumerator
LLVM_DELETED_FUNCTION	Bitcode/Writer/ValueEnumerator.h	/^  void operator=(const ValueEnumerator &) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::ValueEnumerator
LLVM_DELETED_FUNCTION	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  DwarfAccelTable(const DwarfAccelTable&) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::DwarfAccelTable
LLVM_DELETED_FUNCTION	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  void operator=(const DwarfAccelTable&) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::DwarfAccelTable
LLVM_DELETED_FUNCTION	CodeGen/LiveIntervalUnion.h	/^    Query(const Query&) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::LiveIntervalUnion::Query
LLVM_DELETED_FUNCTION	CodeGen/LiveIntervalUnion.h	/^    void operator=(const Query&) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::LiveIntervalUnion::Query
LLVM_DELETED_FUNCTION	CodeGen/SelectionDAG/SDNodeOrdering.h	/^  SDNodeOrdering(const SDNodeOrdering&) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::SDNodeOrdering
LLVM_DELETED_FUNCTION	CodeGen/SelectionDAG/SDNodeOrdering.h	/^  void operator=(const SDNodeOrdering&) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::SDNodeOrdering
LLVM_DELETED_FUNCTION	CodeGen/VirtRegMap.h	/^    VirtRegMap(const VirtRegMap&) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::VirtRegMap
LLVM_DELETED_FUNCTION	CodeGen/VirtRegMap.h	/^    void operator=(const VirtRegMap&) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::VirtRegMap
LLVM_DELETED_FUNCTION	DebugInfo/DWARFContext.h	/^  DWARFContext &operator=(DWARFContext &) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::DWARFContext
LLVM_DELETED_FUNCTION	DebugInfo/DWARFContext.h	/^  DWARFContext(DWARFContext &) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::DWARFContext
LLVM_DELETED_FUNCTION	MC/MCParser/AsmParser.cpp	/^  AsmParser(const AsmParser &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon211::AsmParser	file:
LLVM_DELETED_FUNCTION	MC/MCParser/AsmParser.cpp	/^  void operator=(const AsmParser &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon211::AsmParser	file:
LLVM_DELETED_FUNCTION	Support/StreamableMemoryObject.cpp	/^  RawMemoryObject(const RawMemoryObject&) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon236::RawMemoryObject	file:
LLVM_DELETED_FUNCTION	Support/StreamableMemoryObject.cpp	/^  void operator=(const RawMemoryObject&) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon236::RawMemoryObject	file:
LLVM_DELETED_FUNCTION	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  ARMMCCodeEmitter(const ARMMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon283::ARMMCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  void operator=(const ARMMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon283::ARMMCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  MBlazeMCCodeEmitter(const MBlazeMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon454::MBlazeMCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  void operator=(const MBlazeMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon454::MBlazeMCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^  MipsMCCodeEmitter(const MipsMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon432::MipsMCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^  void operator=(const MipsMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon432::MipsMCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^  PPCMCCodeEmitter(const PPCMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon319::PPCMCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^  void operator=(const PPCMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon319::PPCMCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  X86MCCodeEmitter(const X86MCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon353::X86MCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  void operator=(const X86MCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon353::X86MCCodeEmitter	file:
LLVM_DELETED_FUNCTION	Transforms/InstCombine/InstCombineWorklist.h	/^  InstCombineWorklist(const InstCombineWorklist&) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::InstCombineWorklist
LLVM_DELETED_FUNCTION	Transforms/InstCombine/InstCombineWorklist.h	/^  void operator=(const InstCombineWorklist&RHS) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::InstCombineWorklist
LLVM_DELETED_FUNCTION	Transforms/Scalar/EarlyCSE.cpp	/^    NodeScope(const NodeScope&) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon566::EarlyCSE::NodeScope	file:
LLVM_DELETED_FUNCTION	Transforms/Scalar/EarlyCSE.cpp	/^    StackNode(const StackNode&) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon566::EarlyCSE::StackNode	file:
LLVM_DELETED_FUNCTION	Transforms/Scalar/EarlyCSE.cpp	/^    void operator=(const NodeScope&) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon566::EarlyCSE::NodeScope	file:
LLVM_DELETED_FUNCTION	Transforms/Scalar/EarlyCSE.cpp	/^    void operator=(const StackNode&) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon566::EarlyCSE::StackNode	file:
LLVM_DELETED_FUNCTION	Transforms/Scalar/ObjCARC.cpp	/^    ProvenanceAnalysis(const ProvenanceAnalysis &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon503::ProvenanceAnalysis	file:
LLVM_DELETED_FUNCTION	Transforms/Scalar/ObjCARC.cpp	/^    void operator=(const ProvenanceAnalysis &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon503::ProvenanceAnalysis	file:
LLVM_DELETED_FUNCTION	VMCore/AsmWriter.cpp	/^  SlotTracker(const SlotTracker &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon612::SlotTracker	file:
LLVM_DELETED_FUNCTION	VMCore/AsmWriter.cpp	/^  TypePrinting(const TypePrinting &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon611::TypePrinting	file:
LLVM_DELETED_FUNCTION	VMCore/AsmWriter.cpp	/^  void operator=(const SlotTracker &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon612::SlotTracker	file:
LLVM_DELETED_FUNCTION	VMCore/AsmWriter.cpp	/^  void operator=(const TypePrinting&) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon611::TypePrinting	file:
LLVM_DELETED_FUNCTION	VMCore/Attributes.cpp	/^  AttributeListImpl(const AttributeListImpl &) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::AttributeListImpl	file:
LLVM_DELETED_FUNCTION	VMCore/Attributes.cpp	/^  void operator=(const AttributeListImpl &) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::AttributeListImpl	file:
LLVM_DELETED_FUNCTION	VMCore/ConstantsContext.h	/^  void *operator new(size_t, unsigned) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::BinaryConstantExpr
LLVM_DELETED_FUNCTION	VMCore/ConstantsContext.h	/^  void *operator new(size_t, unsigned) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::CompareConstantExpr
LLVM_DELETED_FUNCTION	VMCore/ConstantsContext.h	/^  void *operator new(size_t, unsigned) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::ExtractElementConstantExpr
LLVM_DELETED_FUNCTION	VMCore/ConstantsContext.h	/^  void *operator new(size_t, unsigned) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::ExtractValueConstantExpr
LLVM_DELETED_FUNCTION	VMCore/ConstantsContext.h	/^  void *operator new(size_t, unsigned) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::InsertElementConstantExpr
LLVM_DELETED_FUNCTION	VMCore/ConstantsContext.h	/^  void *operator new(size_t, unsigned) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::InsertValueConstantExpr
LLVM_DELETED_FUNCTION	VMCore/ConstantsContext.h	/^  void *operator new(size_t, unsigned) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::SelectConstantExpr
LLVM_DELETED_FUNCTION	VMCore/ConstantsContext.h	/^  void *operator new(size_t, unsigned) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::ShuffleVectorConstantExpr
LLVM_DELETED_FUNCTION	VMCore/ConstantsContext.h	/^  void *operator new(size_t, unsigned) LLVM_DELETED_FUNCTION;$/;"	m	class:llvm::UnaryConstantExpr
LLVM_EDDISASSEMBLER_H	MC/MCDisassembler/EDDisassembler.h	17;"	d
LLVM_EDINFO_H	MC/MCDisassembler/EDInfo.h	11;"	d
LLVM_EDINST_H	MC/MCDisassembler/EDInst.h	17;"	d
LLVM_EDOPERAND_H	MC/MCDisassembler/EDOperand.h	17;"	d
LLVM_EDTOKEN_H	MC/MCDisassembler/EDToken.h	17;"	d
LLVM_EXECUTION_ENGINE_JIT_DWARFEMITTER_H	ExecutionEngine/JIT/JITDwarfEmitter.h	16;"	d
LLVM_EXECUTION_ENGINE_JIT_REGISTRAR_H	ExecutionEngine/RuntimeDyld/JITRegistrar.h	11;"	d
LLVM_Hexagon_CODEGEN_CALLINGCONVLOWER_H	Target/Hexagon/HexagonCallingConvLower.h	17;"	d
LLVM_LIB_EXECUTIONENGINE_MCJITMEMORYMANAGER_H	ExecutionEngine/MCJIT/MCJITMemoryManager.h	11;"	d
LLVM_LIB_EXECUTIONENGINE_MCJIT_H	ExecutionEngine/MCJIT/MCJIT.h	11;"	d
LLVM_LLVMCONTEXT_IMPL_H	VMCore/LLVMContextImpl.h	16;"	d
LLVM_MC_DISASSEMBLER_H	MC/MCDisassembler/Disassembler.h	18;"	d
LLVM_MC_MCELF_H	MC/MCELF.h	16;"	d
LLVM_MIPS_MIPSFIXUPKINDS_H	Target/Mips/MCTargetDesc/MipsFixupKinds.h	11;"	d
LLVM_NVPTXSECTION_H	Target/NVPTX/NVPTXSection.h	15;"	d
LLVM_OVERRIDE	Support/StreamableMemoryObject.cpp	/^                                    uint64_t size) const LLVM_OVERRIDE;$/;"	m	class:__anon236::RawMemoryObject	file:
LLVM_OVERRIDE	Support/StreamableMemoryObject.cpp	/^                        uint64_t* copied) const LLVM_OVERRIDE;$/;"	m	class:__anon236::RawMemoryObject	file:
LLVM_OVERRIDE	Support/StreamableMemoryObject.cpp	/^  virtual int readByte(uint64_t address, uint8_t* ptr) const LLVM_OVERRIDE;$/;"	m	class:__anon236::RawMemoryObject	file:
LLVM_OVERRIDE	Support/system_error.cpp	/^  virtual const char* name() const LLVM_OVERRIDE;$/;"	m	class:llvm::_generic_error_category	file:
LLVM_OVERRIDE	Support/system_error.cpp	/^  virtual const char* name() const LLVM_OVERRIDE;$/;"	m	class:llvm::_system_error_category	file:
LLVM_OVERRIDE	Support/system_error.cpp	/^  virtual error_condition default_error_condition(int ev) const LLVM_OVERRIDE;$/;"	m	class:llvm::_system_error_category	file:
LLVM_OVERRIDE	Support/system_error.cpp	/^  virtual std::string message(int ev) const LLVM_OVERRIDE;$/;"	m	class:llvm::_generic_error_category	file:
LLVM_OVERRIDE	Support/system_error.cpp	/^  virtual std::string message(int ev) const LLVM_OVERRIDE;$/;"	m	class:llvm::_system_error_category	file:
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^                                     raw_ostream &O) LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^                               raw_ostream &O) LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^    EmitMachineConstantPoolValue(MachineConstantPoolValue *MCPV) LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^    getDebugValueLocation(const MachineInstr *MI) const LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^  virtual bool runOnMachineFunction(MachineFunction &F) LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^  virtual void EmitDwarfRegOp(const MachineLocation &MLoc) const LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^  virtual void EmitEndOfAsmFile(Module &M) LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^  virtual void EmitFunctionBodyEnd() LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^  virtual void EmitFunctionEntryLabel() LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^  virtual void EmitInstruction(const MachineInstr *MI) LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^  virtual void EmitStartOfAsmFile(Module &M) LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/ARM/ARMAsmPrinter.h	/^  virtual void EmitXXStructor(const Constant *CV) LLVM_OVERRIDE;$/;"	m	class:llvm::ARMAsmPrinter
LLVM_OVERRIDE	Target/X86/X86AsmPrinter.h	/^                                     raw_ostream &OS) LLVM_OVERRIDE;$/;"	m	class:llvm::X86AsmPrinter
LLVM_OVERRIDE	Target/X86/X86AsmPrinter.h	/^                               raw_ostream &OS) LLVM_OVERRIDE;$/;"	m	class:llvm::X86AsmPrinter
LLVM_OVERRIDE	Target/X86/X86AsmPrinter.h	/^    getDebugValueLocation(const MachineInstr *MI) const LLVM_OVERRIDE;$/;"	m	class:llvm::X86AsmPrinter
LLVM_OVERRIDE	Target/X86/X86AsmPrinter.h	/^  virtual bool runOnMachineFunction(MachineFunction &F) LLVM_OVERRIDE;$/;"	m	class:llvm::X86AsmPrinter
LLVM_OVERRIDE	Target/X86/X86AsmPrinter.h	/^  virtual void EmitEndOfAsmFile(Module &M) LLVM_OVERRIDE;$/;"	m	class:llvm::X86AsmPrinter
LLVM_OVERRIDE	Target/X86/X86AsmPrinter.h	/^  virtual void EmitInstruction(const MachineInstr *MI) LLVM_OVERRIDE;$/;"	m	class:llvm::X86AsmPrinter
LLVM_OVERRIDE	Target/X86/X86AsmPrinter.h	/^  virtual void EmitStartOfAsmFile(Module &M) LLVM_OVERRIDE;$/;"	m	class:llvm::X86AsmPrinter
LLVM_PPC_PPCFIXUPKINDS_H	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	11;"	d
LLVM_RUNTIMEDYLD_OBJECTIMAGECOMMON_H	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	15;"	d
LLVM_RUNTIME_DYLD_ELF_H	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.h	15;"	d
LLVM_RUNTIME_DYLD_IMPL_H	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	15;"	d
LLVM_RUNTIME_DYLD_MACHO_H	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.h	15;"	d
LLVM_SUPPORT_MANAGED_STRING_H	Target/NVPTX/ManagedStringPool.h	17;"	d
LLVM_SYMBOLTABLELISTTRAITS_IMPL_H	VMCore/SymbolTableListTraitsImpl.h	17;"	d
LLVM_SYSTEM_UNIX_UNIX_H	Support/Unix/Unix.h	15;"	d
LLVM_TARGET_ARM_ARMADDRESSINGMODES_H	Target/ARM/MCTargetDesc/ARMAddressingModes.h	15;"	d
LLVM_TARGET_ARM_CONSTANTPOOLVALUE_H	Target/ARM/ARMConstantPoolValue.h	15;"	d
LLVM_TARGET_ARM_TARGETOBJECTFILE_H	Target/ARM/ARMTargetObjectFile.h	11;"	d
LLVM_TARGET_IBMCELLSPU_H	Target/CellSPU/SPU.h	16;"	d
LLVM_TARGET_MBLAZE_TARGETOBJECTFILE_H	Target/MBlaze/MBlazeTargetObjectFile.h	11;"	d
LLVM_TARGET_MIPS_TARGETOBJECTFILE_H	Target/Mips/MipsTargetObjectFile.h	11;"	d
LLVM_TARGET_MSP430INSTRINFO_H	Target/MSP430/MSP430InstrInfo.h	15;"	d
LLVM_TARGET_MSP430REGISTERINFO_H	Target/MSP430/MSP430RegisterInfo.h	15;"	d
LLVM_TARGET_MSP430_H	Target/MSP430/MSP430.h	16;"	d
LLVM_TARGET_MSP430_ISELLOWERING_H	Target/MSP430/MSP430ISelLowering.h	16;"	d
LLVM_TARGET_MSP430_SUBTARGET_H	Target/MSP430/MSP430Subtarget.h	15;"	d
LLVM_TARGET_MSP430_TARGETMACHINE_H	Target/MSP430/MSP430TargetMachine.h	16;"	d
LLVM_TARGET_NVPTX_H	Target/NVPTX/NVPTX.h	16;"	d
LLVM_TARGET_NVPTX_TARGETOBJECTFILE_H	Target/NVPTX/NVPTXTargetObjectFile.h	11;"	d
LLVM_TARGET_NVPTX_UTIL_H	Target/NVPTX/NVPTXutil.h	15;"	d
LLVM_TARGET_POWERPC_H	Target/PowerPC/PPC.h	16;"	d
LLVM_TARGET_POWERPC_PPC32ISELLOWERING_H	Target/PowerPC/PPCISelLowering.h	16;"	d
LLVM_TARGET_POWERPC_PPCPREDICATES_H	Target/PowerPC/MCTargetDesc/PPCPredicates.h	15;"	d
LLVM_TARGET_X86_TARGETOBJECTFILE_H	Target/X86/X86TargetObjectFile.h	11;"	d
LLVM_TARGET_XCORE_TARGETOBJECTFILE_H	Target/XCore/XCoreTargetObjectFile.h	11;"	d
LLVM_X86_X86FIXUPKINDS_H	Target/X86/MCTargetDesc/X86FixupKinds.h	11;"	d
LMUL	Target/XCore/XCoreISelLowering.h	/^      LMUL,$/;"	e	enum:llvm::XCoreISD::NodeType
LNAMES	Support/regexec.c	129;"	d	file:
LNExtendedString	Support/Dwarf.cpp	/^const char *llvm::dwarf::LNExtendedString(unsigned Encoding) {$/;"	f	class:llvm::dwarf
LNStandardString	Support/Dwarf.cpp	/^const char *llvm::dwarf::LNStandardString(unsigned Standard) {$/;"	f	class:llvm::dwarf
LO	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    LO,            \/\/ Carry clear                Less than$/;"	e	enum:llvm::ARMCC::CondCodes
LOAD	Target/PowerPC/PPCISelLowering.h	/^      LOAD,$/;"	e	enum:llvm::PPCISD::NodeType
LOADABLE_MODULE	Transforms/DDA/Makefile	/^LOADABLE_MODULE = 1$/;"	m
LOADABLE_MODULE	Transforms/Hello/Makefile	/^LOADABLE_MODULE = 1$/;"	m
LOAD_PARAM	Target/NVPTX/NVPTXISelLowering.h	/^  LOAD_PARAM,$/;"	e	enum:llvm::NVPTXISD::NodeType
LOAD_TOC	Target/PowerPC/PPCISelLowering.h	/^      LOAD_TOC,$/;"	e	enum:llvm::PPCISD::NodeType
LOCAL	Target/NVPTX/NVPTX.h	/^  LOCAL = 5$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::AddressSpace
LOCK	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    LOCK = 1 << LOCKShift,$/;"	e	enum:llvm::X86II::__anon350
LOCKShift	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    LOCKShift = FPTypeShift + 3,$/;"	e	enum:llvm::X86II::__anon350
LPM	Transforms/Scalar/LoopUnswitch.cpp	/^    LPPassManager *LPM;$/;"	m	class:__anon494::LoopUnswitch	file:
LPM	Transforms/Vectorize/LoopVectorize.cpp	/^  LPPassManager *LPM;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
LPPassManager	Analysis/LoopPass.cpp	/^LPPassManager::LPPassManager()$/;"	f	class:LPPassManager
LPadToCallSiteMap	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  DenseMap<MachineBasicBlock*, SmallVector<unsigned, 4> > LPadToCallSiteMap;$/;"	m	class:llvm::SelectionDAGBuilder
LR	Target/CellSPU/SPUFrameLowering.h	/^    std::pair<unsigned, int> LR[1];$/;"	m	class:llvm::SPUFrameLowering
LRCalc	CodeGen/SplitKit.h	/^  LiveRangeCalc LRCalc[2];$/;"	m	class:llvm::SplitEditor
LRE_CanEraseVirtReg	CodeGen/RegAllocGreedy.cpp	/^bool RAGreedy::LRE_CanEraseVirtReg(unsigned VirtReg) {$/;"	f	class:RAGreedy
LRE_DidCloneVirtReg	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::LRE_DidCloneVirtReg(unsigned New, unsigned Old) {$/;"	f	class:RAGreedy
LRE_WillEraseInstruction	CodeGen/RegisterCoalescer.cpp	/^void RegisterCoalescer::LRE_WillEraseInstruction(MachineInstr *MI) {$/;"	f	class:RegisterCoalescer
LRE_WillShrinkVirtReg	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::LRE_WillShrinkVirtReg(unsigned VirtReg) {$/;"	f	class:RAGreedy
LRSpillSlot	Target/XCore/XCoreMachineFunctionInfo.h	/^  int LRSpillSlot;$/;"	m	class:llvm::XCoreFunctionInfo
LRSpilledForFarJump	Target/ARM/ARMMachineFunctionInfo.h	/^  bool LRSpilledForFarJump;$/;"	m	class:llvm::ARMFunctionInfo
LRStoreRequired	Target/PowerPC/PPCMachineFunctionInfo.h	/^  bool LRStoreRequired;$/;"	m	class:llvm::PPCFunctionInfo
LS	CodeGen/LiveDebugVariables.cpp	/^  LexicalScopes &LS;$/;"	m	class:__anon151::UserValueScopes	file:
LS	CodeGen/LiveDebugVariables.cpp	/^  LexicalScopes LS;$/;"	m	class:__anon153::LDVImpl	file:
LS	CodeGen/StackSlotColoring.cpp	/^    LiveStacks* LS;$/;"	m	class:__anon94::StackSlotColoring	file:
LS	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    LS,            \/\/ Unsigned lower or same     Less than or equal$/;"	e	enum:llvm::ARMCC::CondCodes
LSB	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned LSB;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon281	file:
LSDAAddrFn	CodeGen/SjLjEHPrepare.cpp	/^    Constant *LSDAAddrFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
LSRFixup	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRFixup::LSRFixup()$/;"	f	class:LSRFixup
LSRFixup	Transforms/Scalar/LoopStrengthReduce.cpp	/^struct LSRFixup {$/;"	s	namespace:__anon516	file:
LSRInstance	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::LSRInstance(const TargetLowering *tli, Loop *l, Pass *P)$/;"	f	class:LSRInstance
LSRInstance	Transforms/Scalar/LoopStrengthReduce.cpp	/^class LSRInstance {$/;"	c	namespace:__anon518	file:
LSRUse	Transforms/Scalar/LoopStrengthReduce.cpp	/^  LSRUse(KindType K, Type *T) : Kind(K), AccessTy(T),$/;"	f	class:__anon517::LSRUse
LSRUse	Transforms/Scalar/LoopStrengthReduce.cpp	/^class LSRUse {$/;"	c	namespace:__anon517	file:
LSS	CodeGen/InlineSpiller.cpp	/^  LiveStacks &LSS;$/;"	m	class:__anon155::InlineSpiller	file:
LSUB	Target/XCore/XCoreISelLowering.h	/^      LSUB,$/;"	e	enum:llvm::XCoreISD::NodeType
LScopes	CodeGen/AsmPrinter/DwarfDebug.h	/^  LexicalScopes LScopes;$/;"	m	class:llvm::DwarfDebug
LT	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const Constant *LT;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseRec
LT	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    LT,            \/\/ Less than                  Less than, or unordered$/;"	e	enum:llvm::ARMCC::CondCodes
LT	Target/MBlaze/MBlazeISelLowering.h	/^      LT,$/;"	e	enum:llvm::MBlazeCC::CC
LT	Target/NVPTX/NVPTX.h	/^  LT,$/;"	e	enum:llvm::NVPTXCC::CondCodes
LUAnalysisCache	Transforms/Scalar/LoopUnswitch.cpp	/^      LUAnalysisCache() :$/;"	f	class:__anon494::LUAnalysisCache
LUAnalysisCache	Transforms/Scalar/LoopUnswitch.cpp	/^  class LUAnalysisCache {$/;"	c	namespace:__anon494	file:
LUIdx	Transforms/Scalar/LoopStrengthReduce.cpp	/^  size_t LUIdx;$/;"	m	struct:__anon516::LSRFixup	file:
LUIdx	Transforms/Scalar/LoopStrengthReduce.cpp	/^  size_t LUIdx;$/;"	m	struct:__anon519::WorkItem	file:
LUi	Target/Mips/MipsAnalyzeImmediate.h	/^    unsigned ADDiu, ORi, SLL, LUi;$/;"	m	class:llvm::MipsAnalyzeImmediate
LV	CodeGen/TwoAddressInstructionPass.cpp	/^    LiveVariables *LV;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
LVI	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^    LazyValueInfo *LVI;$/;"	m	class:__anon529::CorrelatedValuePropagation	file:
LVI	Transforms/Scalar/JumpThreading.cpp	/^    LazyValueInfo *LVI;$/;"	m	class:__anon542::JumpThreading	file:
LVILatticeVal	Analysis/LazyValueInfo.cpp	/^  LVILatticeVal() : Tag(undefined), Val(0), Range(1, true) {}$/;"	f	class:__anon18::LVILatticeVal
LVILatticeVal	Analysis/LazyValueInfo.cpp	/^class LVILatticeVal {$/;"	c	namespace:__anon18	file:
LVIValueHandle	Analysis/LazyValueInfo.cpp	/^    LVIValueHandle(Value *V, LazyValueInfoCache *P)$/;"	f	struct:__anon19::LVIValueHandle
LVIValueHandle	Analysis/LazyValueInfo.cpp	/^  struct LVIValueHandle : public CallbackVH {$/;"	s	namespace:__anon19	file:
LV_NAME	Transforms/Vectorize/LoopVectorize.cpp	37;"	d	file:
LWL	Target/Mips/MipsISelLowering.h	/^      LWL = ISD::FIRST_TARGET_MEMORY_OPCODE,$/;"	e	enum:llvm::MipsISD::NodeType
LWR	Target/Mips/MipsISelLowering.h	/^      LWR,$/;"	e	enum:llvm::MipsISD::NodeType
Label	CodeGen/AsmPrinter/DIE.h	/^    const MCSymbol *Label;$/;"	m	class:llvm::DIELabel
Label	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *Label;                   \/\/ Label in code ID number.$/;"	m	class:llvm::SrcLineInfo
LabelHi	CodeGen/AsmPrinter/DIE.h	/^    const MCSymbol *LabelHi;$/;"	m	class:llvm::DIEDelta
LabelId	Target/ARM/ARMConstantPoolValue.h	/^  unsigned LabelId;        \/\/ Label id of the load.$/;"	m	class:llvm::ARMConstantPoolValue
LabelLo	CodeGen/AsmPrinter/DIE.h	/^    const MCSymbol *LabelLo;$/;"	m	class:llvm::DIEDelta
LabelLocations	ExecutionEngine/JIT/JITEmitter.cpp	/^    DenseMap<MCSymbol*, uintptr_t> LabelLocations;$/;"	m	class:__anon182::JITEmitter	file:
LabelPrefix	VMCore/AsmWriter.cpp	/^  LabelPrefix,$/;"	e	enum:PrefixType	file:
LabelStr	AsmParser/LLToken.h	/^    LabelStr,          \/\/ foo:$/;"	e	enum:llvm::lltok::Kind
LabelTy	VMCore/LLVMContextImpl.h	/^  Type VoidTy, LabelTy, HalfTy, FloatTy, DoubleTy, MetadataTy;$/;"	m	class:llvm::LLVMContextImpl
LabelsAfterInsn	CodeGen/AsmPrinter/DwarfDebug.h	/^  DenseMap<const MachineInstr *, MCSymbol *> LabelsAfterInsn;$/;"	m	class:llvm::DwarfDebug
LabelsBeforeInsn	CodeGen/AsmPrinter/DwarfDebug.h	/^  DenseMap<const MachineInstr *, MCSymbol *> LabelsBeforeInsn;$/;"	m	class:llvm::DwarfDebug
LandingPadInst	VMCore/Instructions.cpp	/^LandingPadInst::LandingPadInst(Type *RetTy, Value *PersonalityFn,$/;"	f	class:LandingPadInst
LandingPadInst	VMCore/Instructions.cpp	/^LandingPadInst::LandingPadInst(const LandingPadInst &LP)$/;"	f	class:LandingPadInst
LaneIndex	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned LaneIndex;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon272	file:
Language	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  unsigned Language;$/;"	m	class:llvm::CompileUnit
LanguageString	Support/Dwarf.cpp	/^const char *llvm::dwarf::LanguageString(unsigned Language) {$/;"	f	class:llvm::dwarf
LargeBlockInfo	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  class LargeBlockInfo {$/;"	c	namespace:__anon469	file:
Last	CodeGen/InterferenceCache.h	/^    SlotIndex Last;$/;"	m	struct:llvm::InterferenceCache::BlockInterference
Last	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    APInt Last;$/;"	m	struct:llvm::SelectionDAGBuilder::JumpTableHeader
LastCallArg	Target/NVPTX/NVPTXISelLowering.h	/^  LastCallArg,$/;"	e	enum:llvm::NVPTXISD::NodeType
LastChar	Support/StreamableMemoryObject.cpp	/^  const uint8_t* const LastChar;$/;"	m	class:__anon236::RawMemoryObject	file:
LastFiller	Target/Mips/MipsDelaySlotFiller.cpp	/^    InstrIter LastFiller;$/;"	m	struct:__anon436::Filler	file:
LastID	TableGen/Record.cpp	/^unsigned Record::LastID = 0;$/;"	m	class:Record	file:
LastInstr	CodeGen/SplitKit.h	/^    SlotIndex LastInstr;  \/\/\/< Last instr accessing current reg.$/;"	m	struct:llvm::SplitAnalysis::BlockInfo
LastLocalSymbolIndex	MC/ELFObjectWriter.cpp	/^    unsigned LastLocalSymbolIndex;$/;"	m	class:__anon225::ELFObjectWriter	file:
LastMI	Target/ARM/ARMHazardRecognizer.h	/^  MachineInstr *LastMI;$/;"	m	class:llvm::ARMHazardRecognizer
LastMIs	Target/ARM/MLxExpansionPass.cpp	/^    MachineInstr* LastMIs[4];$/;"	m	struct:__anon301::MLxExpansion	file:
LastModified	Object/Archive.cpp	/^  char LastModified[12];$/;"	m	struct:__anon228::ArchiveMemberHeader	file:
LastOpNum	CodeGen/RegAllocFast.cpp	/^      unsigned short LastOpNum; \/\/ OpNum on LastUse.$/;"	m	struct:__anon140::RAFast::LiveReg	file:
LastQuery	Support/SourceMgr.cpp	/^    const char *LastQuery;$/;"	m	struct:__anon239::LineNoCacheTy	file:
LastQueryBufferID	Support/SourceMgr.cpp	/^    int LastQueryBufferID;$/;"	m	struct:__anon239::LineNoCacheTy	file:
LastRowIndex	DebugInfo/DWARFDebugLine.h	/^    unsigned LastRowIndex;$/;"	m	struct:llvm::DWARFDebugLine::Sequence
LastSlab	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    sys::MemoryBlock LastSlab;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
LastSplitPoint	CodeGen/SplitKit.h	/^  SmallVector<std::pair<SlotIndex, SlotIndex>, 8> LastSplitPoint;$/;"	m	class:llvm::SplitAnalysis
LastTargetFixupKind	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  LastTargetFixupKind,$/;"	e	enum:llvm::ARM::Fixups
LastTargetFixupKind	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    LastTargetFixupKind,$/;"	e	enum:llvm::Mips::Fixups
LastTargetFixupKind	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^  LastTargetFixupKind,$/;"	e	enum:llvm::PPC::Fixups
LastTargetFixupKind	Target/X86/MCTargetDesc/X86FixupKinds.h	/^  LastTargetFixupKind,$/;"	e	enum:llvm::X86::Fixups
LastUse	CodeGen/RegAllocFast.cpp	/^      MachineInstr *LastUse;    \/\/ Last instr to use reg.$/;"	m	struct:__anon140::RAFast::LiveReg	file:
LatticeVal	Transforms/Scalar/SCCP.cpp	/^  LatticeVal() : Val(0, undefined) {}$/;"	f	class:__anon530::LatticeVal
LatticeVal	Transforms/Scalar/SCCP.cpp	/^class LatticeVal {$/;"	c	namespace:__anon530	file:
LatticeValueTy	Analysis/LazyValueInfo.cpp	/^  enum LatticeValueTy {$/;"	g	class:__anon18::LVILatticeVal	file:
LatticeValueTy	Transforms/Scalar/SCCP.cpp	/^  enum LatticeValueTy {$/;"	g	class:__anon530::LatticeVal	file:
LayoutFragment	MC/MCAssembler.cpp	/^void MCAsmLayout::LayoutFragment(MCFragment *F) {$/;"	f	class:MCAsmLayout
LayoutInfo	VMCore/DataLayout.cpp	/^  LayoutInfoTy LayoutInfo;$/;"	m	class:__anon617::StructLayoutMap	file:
LayoutInfoTy	VMCore/DataLayout.cpp	/^  typedef DenseMap<StructType*, StructLayout*> LayoutInfoTy;$/;"	t	class:__anon617::StructLayoutMap	file:
LazilyLinkFunctions	Linker/LinkModules.cpp	/^    std::vector<Function*> LazilyLinkFunctions;$/;"	m	class:__anon202::ModuleLinker	file:
LazyResolverFn	ExecutionEngine/JIT/JITEmitter.cpp	/^    TargetJITInfo::LazyResolverFn LazyResolverFn;$/;"	m	class:__anon182::JITResolver	file:
LazyStreamer	Bitcode/Reader/BitcodeReader.h	/^  DataStreamer *LazyStreamer;$/;"	m	class:llvm::BitcodeReader
LazyValueInfoCache	Analysis/LazyValueInfo.cpp	/^  class LazyValueInfoCache {$/;"	c	namespace:__anon20	file:
LdFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    LdFrm         = 6  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
LdMiscFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    LdMiscFrm     = 8  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
LdStExFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    LdStExFrm     = 11 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
LdStMulFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    LdStMulFrm    = 10 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
LeaderTable	Transforms/Scalar/GVN.cpp	/^    DenseMap<uint32_t, LeaderTableEntry> LeaderTable;$/;"	m	class:__anon537::GVN	file:
LeaderTableEntry	Transforms/Scalar/GVN.cpp	/^    struct LeaderTableEntry {$/;"	s	class:__anon537::GVN	file:
LeakDetectorImpl	VMCore/LeaksContext.h	/^  explicit LeakDetectorImpl(const char* const name = "") : $/;"	f	struct:llvm::LeakDetectorImpl
LeakDetectorImpl	VMCore/LeaksContext.h	/^struct LeakDetectorImpl {$/;"	s	namespace:llvm
LeaveGroup	CodeGen/AggressiveAntiDepBreaker.cpp	/^unsigned AggressiveAntiDepState::LeaveGroup(unsigned Reg)$/;"	f	class:AggressiveAntiDepState
LeftDistributesOverRight	Transforms/InstCombine/InstructionCombining.cpp	/^static bool LeftDistributesOverRight(Instruction::BinaryOps LOp,$/;"	f	file:
LegalFPImmediates	Target/X86/X86ISelLowering.h	/^    std::vector<APFloat> LegalFPImmediates;$/;"	m	class:llvm::X86TargetLowering
LegalOperations	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    bool LegalOperations;$/;"	m	class:__anon68::DAGCombiner	file:
LegalTypes	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    bool LegalTypes;$/;"	m	class:__anon68::DAGCombiner	file:
Legalize	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^void SelectionDAG::Legalize() {$/;"	f	class:SelectionDAG
LegalizeDAG	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^void SelectionDAGLegalize::LegalizeDAG() {$/;"	f	class:SelectionDAGLegalize
LegalizeLoadOps	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^void SelectionDAGLegalize::LegalizeLoadOps(SDNode *Node) {$/;"	f	class:SelectionDAGLegalize
LegalizeOp	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^void SelectionDAGLegalize::LegalizeOp(SDNode *Node) {$/;"	f	class:SelectionDAGLegalize
LegalizeOp	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::LegalizeOp(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
LegalizePosition	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  SelectionDAG::allnodes_iterator LegalizePosition;$/;"	m	class:__anon67::SelectionDAGLegalize	file:
LegalizeSetCCCondCode	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^void SelectionDAGLegalize::LegalizeSetCCCondCode(EVT VT,$/;"	f	class:SelectionDAGLegalize
LegalizeStoreOps	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^void SelectionDAGLegalize::LegalizeStoreOps(SDNode *Node) {$/;"	f	class:SelectionDAGLegalize
LegalizeTypes	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^bool SelectionDAG::LegalizeTypes() {$/;"	f	class:SelectionDAG
LegalizeVectors	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^bool SelectionDAG::LegalizeVectors() {$/;"	f	class:SelectionDAG
LegalizedNodes	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  SmallPtrSet<SDNode *, 16> LegalizedNodes;$/;"	m	class:__anon67::SelectionDAGLegalize	file:
LegalizedNodes	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^  DenseMap<SDValue, SDValue> LegalizedNodes;$/;"	m	class:__anon72::VectorLegalizer	file:
Len	MC/MCParser/AsmParser.cpp	/^  unsigned Len;$/;"	m	struct:__anon213::AsmRewrite	file:
Length	DebugInfo/DWARFCompileUnit.h	/^  uint32_t Length;$/;"	m	class:llvm::DWARFCompileUnit
Length	DebugInfo/DWARFDebugArangeSet.h	/^    uint32_t Length;$/;"	m	struct:llvm::DWARFDebugArangeSet::Header
Length	DebugInfo/DWARFDebugArangeSet.h	/^    uint64_t Length;$/;"	m	struct:llvm::DWARFDebugArangeSet::Descriptor
Length	DebugInfo/DWARFDebugAranges.h	/^    uint32_t Length; \/\/ End of address range (not including this address)$/;"	m	struct:llvm::DWARFDebugAranges::Range
Length	DebugInfo/DWARFDebugLine.h	/^    uint64_t Length;$/;"	m	struct:llvm::DWARFDebugLine::FileNameEntry
Length	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Length;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon270	file:
Length	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^      unsigned Length;$/;"	m	struct:__anon446::MBlazeOperand::__anon447::__anon448	file:
Length	Target/Mips/AsmParser/MipsAsmParser.cpp	/^      unsigned Length;$/;"	m	struct:__anon423::MipsOperand::__anon424::__anon425	file:
Length	Target/X86/AsmParser/X86AsmParser.cpp	/^      unsigned Length;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon338	file:
LessPreciseFPMAD	CodeGen/TargetOptionsImpl.cpp	/^bool TargetOptions::LessPreciseFPMAD() const {$/;"	f	class:TargetOptions
Let	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
LetRecord	TableGen/TGParser.h	/^    LetRecord(const std::string &N, const std::vector<unsigned> &B, Init *V,$/;"	f	struct:llvm::LetRecord
LetRecord	TableGen/TGParser.h	/^  struct LetRecord {$/;"	s	namespace:llvm
LetStack	TableGen/TGParser.h	/^  std::vector<std::vector<LetRecord> > LetStack;$/;"	m	class:llvm::TGParser
Level	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    CombineLevel Level;$/;"	m	class:__anon68::DAGCombiner	file:
Lex	AsmParser/LLLexer.h	/^    lltok::Kind Lex() {$/;"	f	class:llvm::LLLexer
Lex	AsmParser/LLParser.h	/^    LLLexer Lex;$/;"	m	class:llvm::LLParser
Lex	MC/MCParser/AsmParser.cpp	/^const AsmToken &AsmParser::Lex() {$/;"	f	class:AsmParser
Lex	TableGen/TGLexer.h	/^  tgtok::TokKind Lex() {$/;"	f	class:llvm::TGLexer
Lex	TableGen/TGParser.h	/^  TGLexer Lex;$/;"	m	class:llvm::TGParser
Lex0x	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::Lex0x() {$/;"	f	class:LLLexer
LexAt	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::LexAt() {$/;"	f	class:LLLexer
LexBracket	TableGen/TGLexer.cpp	/^tgtok::TokKind TGLexer::LexBracket() {$/;"	f	class:TGLexer
LexDigit	MC/MCParser/AsmLexer.cpp	/^AsmToken AsmLexer::LexDigit() {$/;"	f	class:AsmLexer
LexDigitOrNegative	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::LexDigitOrNegative() {$/;"	f	class:LLLexer
LexExclaim	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::LexExclaim() {$/;"	f	class:LLLexer
LexExclaim	TableGen/TGLexer.cpp	/^tgtok::TokKind TGLexer::LexExclaim() {$/;"	f	class:TGLexer
LexFloatLiteral	MC/MCParser/AsmLexer.cpp	/^AsmToken AsmLexer::LexFloatLiteral() {$/;"	f	class:AsmLexer
LexIdentifier	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::LexIdentifier() {$/;"	f	class:LLLexer
LexIdentifier	MC/MCParser/AsmLexer.cpp	/^AsmToken AsmLexer::LexIdentifier() {$/;"	f	class:AsmLexer
LexIdentifier	TableGen/TGLexer.cpp	/^tgtok::TokKind TGLexer::LexIdentifier() {$/;"	f	class:TGLexer
LexInclude	TableGen/TGLexer.cpp	/^bool TGLexer::LexInclude() {$/;"	f	class:TGLexer
LexLineComment	MC/MCParser/AsmLexer.cpp	/^AsmToken AsmLexer::LexLineComment() {$/;"	f	class:AsmLexer
LexNumber	TableGen/TGLexer.cpp	/^tgtok::TokKind TGLexer::LexNumber() {$/;"	f	class:TGLexer
LexPercent	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::LexPercent() {$/;"	f	class:LLLexer
LexPositive	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::LexPositive() {$/;"	f	class:LLLexer
LexQuote	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::LexQuote() {$/;"	f	class:LLLexer
LexQuote	MC/MCParser/AsmLexer.cpp	/^AsmToken AsmLexer::LexQuote() {$/;"	f	class:AsmLexer
LexSingleQuote	MC/MCParser/AsmLexer.cpp	/^AsmToken AsmLexer::LexSingleQuote() {$/;"	f	class:AsmLexer
LexSlash	MC/MCParser/AsmLexer.cpp	/^AsmToken AsmLexer::LexSlash() {$/;"	f	class:AsmLexer
LexString	TableGen/TGLexer.cpp	/^tgtok::TokKind TGLexer::LexString() {$/;"	f	class:TGLexer
LexToken	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::LexToken() {$/;"	f	class:LLLexer
LexToken	MC/MCParser/AsmLexer.cpp	/^AsmToken AsmLexer::LexToken() {$/;"	f	class:AsmLexer
LexToken	TableGen/TGLexer.cpp	/^tgtok::TokKind TGLexer::LexToken() {$/;"	f	class:TGLexer
LexToken	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  AsmToken LexToken() {$/;"	f	class:__anon258::ARMBaseAsmLexer
LexToken	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^    AsmToken LexToken() {$/;"	f	class:__anon453::MBlazeBaseAsmLexer
LexToken	Target/X86/AsmParser/X86AsmLexer.cpp	/^  AsmToken LexToken() {$/;"	f	class:__anon342::X86AsmLexer
LexTokenATT	Target/X86/AsmParser/X86AsmLexer.cpp	/^AsmToken X86AsmLexer::LexTokenATT() {$/;"	f	class:X86AsmLexer
LexTokenIntel	Target/X86/AsmParser/X86AsmLexer.cpp	/^AsmToken X86AsmLexer::LexTokenIntel() {$/;"	f	class:X86AsmLexer
LexTokenUAL	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^AsmToken ARMBaseAsmLexer::LexTokenUAL() {$/;"	f	class:ARMBaseAsmLexer
LexTokenUAL	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^AsmToken MBlazeBaseAsmLexer::LexTokenUAL() {$/;"	f	class:MBlazeBaseAsmLexer
LexUntilEndOfLine	MC/MCParser/AsmLexer.cpp	/^StringRef AsmLexer::LexUntilEndOfLine() {$/;"	f	class:AsmLexer
LexUntilEndOfStatement	MC/MCParser/AsmLexer.cpp	/^StringRef AsmLexer::LexUntilEndOfStatement() {$/;"	f	class:AsmLexer
LexVarName	TableGen/TGLexer.cpp	/^tgtok::TokKind TGLexer::LexVarName() {$/;"	f	class:TGLexer
Lexer	MC/MCParser/AsmParser.cpp	/^  AsmLexer Lexer;$/;"	m	class:__anon211::AsmParser	file:
LibCallOptimization	Transforms/Scalar/SimplifyLibCalls.cpp	/^  LibCallOptimization() { }$/;"	f	class:__anon544::LibCallOptimization
LibCallOptimization	Transforms/Scalar/SimplifyLibCalls.cpp	/^class LibCallOptimization {$/;"	c	namespace:__anon544	file:
LibCallOptimization	Transforms/Utils/SimplifyLibCalls.cpp	/^  LibCallOptimization() { }$/;"	f	class:__anon473::LibCallOptimization
LibCallOptimization	Transforms/Utils/SimplifyLibCalls.cpp	/^class LibCallOptimization {$/;"	c	namespace:__anon473	file:
LibCallSimplifier	Transforms/Utils/SimplifyLibCalls.cpp	/^LibCallSimplifier::LibCallSimplifier(const DataLayout *TD,$/;"	f	class:llvm::LibCallSimplifier
LibCallSimplifierImpl	Transforms/Utils/SimplifyLibCalls.cpp	/^  LibCallSimplifierImpl(const DataLayout *TD, const TargetLibraryInfo *TLI) {$/;"	f	class:llvm::LibCallSimplifierImpl
LibCallSimplifierImpl	Transforms/Utils/SimplifyLibCalls.cpp	/^class LibCallSimplifierImpl {$/;"	c	namespace:llvm	file:
LibCallify	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDValue DAGTypeLegalizer::LibCallify(RTLIB::Libcall LC, SDNode *N,$/;"	f	class:DAGTypeLegalizer
LibInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  const TargetLibraryInfo *LibInfo;$/;"	m	class:llvm::SelectionDAGBuilder
LibSupportInfoOutputFilename	Support/Timer.cpp	/^static ManagedStatic<std::string> LibSupportInfoOutputFilename;$/;"	v	file:
LibgccObject	ExecutionEngine/JIT/JIT.cpp	/^struct LibgccObject {$/;"	s	namespace:__anon185	file:
LibgccObjectInfo	ExecutionEngine/JIT/JIT.cpp	/^struct LibgccObjectInfo {$/;"	s	namespace:__anon185	file:
LimitFloatPrecision	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static unsigned LimitFloatPrecision;$/;"	v	file:
Line	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned Line;                     \/\/ Source line number.$/;"	m	class:llvm::SrcLineInfo
Line	DebugInfo/DWARFContext.h	/^  OwningPtr<DWARFDebugLine> Line;$/;"	m	class:llvm::DWARFContext
Line	DebugInfo/DWARFDebugLine.h	/^    uint32_t Line;$/;"	m	struct:llvm::DWARFDebugLine::Row
Line	Support/YAMLParser.cpp	/^  unsigned Line;$/;"	m	class:llvm::yaml::Scanner	file:
Line	Support/YAMLParser.cpp	/^  unsigned Line;$/;"	m	struct:__anon244::SimpleKey	file:
LineBase	DebugInfo/DWARFDebugLine.h	/^    int8_t LineBase;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
LineNoCacheTy	Support/SourceMgr.cpp	/^  struct LineNoCacheTy {$/;"	s	namespace:__anon239	file:
LineNoOfQuery	Support/SourceMgr.cpp	/^    unsigned LineNoOfQuery;$/;"	m	struct:__anon239::LineNoCacheTy	file:
LineNumber	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int        LineNumber;             $/;"	m	struct:_LineNumberInfo
LineNumberInfo	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} *pLineNumberInfo, LineNumberInfo;$/;"	t	typeref:struct:_LineNumberInfo
LineRange	DebugInfo/DWARFDebugLine.h	/^    uint8_t LineRange;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
LineReader	Target/NVPTX/NVPTXAsmPrinter.h	/^  LineReader(std::string filename) {$/;"	f	class:llvm::LineReader
LineReader	Target/NVPTX/NVPTXAsmPrinter.h	/^class LineReader {$/;"	c	namespace:llvm
LineSection	DebugInfo/DWARFContext.h	/^  StringRef LineSection;$/;"	m	class:llvm::DWARFContextInMemory
LineStartToIntelJITFormat	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^static LineNumberInfo LineStartToIntelJITFormat($/;"	f	namespace:__anon198
LineStartToOProfileFormat	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^static debug_line_info LineStartToOProfileFormat($/;"	f	namespace:__anon193
LineTable	DebugInfo/DWARFDebugLine.h	/^  struct LineTable {$/;"	s	class:llvm::DWARFDebugLine
LineTableConstIter	DebugInfo/DWARFDebugLine.h	/^  typedef LineTableMapTy::const_iterator LineTableConstIter;$/;"	t	class:llvm::DWARFDebugLine
LineTableIter	DebugInfo/DWARFDebugLine.h	/^  typedef LineTableMapTy::iterator LineTableIter;$/;"	t	class:llvm::DWARFDebugLine
LineTableMap	DebugInfo/DWARFDebugLine.h	/^  LineTableMapTy LineTableMap;$/;"	m	class:llvm::DWARFDebugLine
LineTableMapTy	DebugInfo/DWARFDebugLine.h	/^  typedef std::map<uint32_t, LineTable> LineTableMapTy;$/;"	t	class:llvm::DWARFDebugLine
LinearFunctionTestReplace	Transforms/Scalar/IndVarSimplify.cpp	/^LinearFunctionTestReplace(Loop *L,$/;"	f	class:IndVarSimplify
LinearizeExprTree	Transforms/Scalar/Reassociate.cpp	/^static bool LinearizeExprTree(BinaryOperator *I,$/;"	f	file:
Lines	Transforms/Instrumentation/GCOVProfiling.cpp	/^    SmallVector<uint32_t, 32> Lines;$/;"	m	class:__anon490::GCOVLines	file:
LinesByFile	Transforms/Instrumentation/GCOVProfiling.cpp	/^    StringMap<GCOVLines *> LinesByFile;$/;"	m	class:__anon490::GCOVBlock	file:
LinesTag	Transforms/Instrumentation/GCOVProfiling.cpp	/^    static const char *LinesTag;$/;"	m	class:__anon490::GCOVRecord	file:
LinesTag	Transforms/Instrumentation/GCOVProfiling.cpp	/^  const char *GCOVRecord::LinesTag = "\\0\\0\\x45\\x01";$/;"	m	class:__anon490::GCOVRecord	file:
LinkInArchive	Linker/LinkArchives.cpp	/^Linker::LinkInArchive(const sys::Path &Filename, bool &is_native) {$/;"	f	class:Linker
LinkInFile	Linker/LinkItems.cpp	/^bool Linker::LinkInFile(const sys::Path &File, bool &is_native) {$/;"	f	class:Linker
LinkInFiles	Linker/LinkItems.cpp	/^bool Linker::LinkInFiles(const std::vector<sys::Path> &Files) {$/;"	f	class:Linker
LinkInItems	Linker/LinkItems.cpp	/^Linker::LinkInItems(const ItemList& Items, ItemList& NativeItems) {$/;"	f	class:Linker
LinkInLibraries	Linker/LinkItems.cpp	/^bool Linker::LinkInLibraries(const std::vector<std::string> &Libraries) {$/;"	f	class:Linker
LinkInLibrary	Linker/LinkItems.cpp	/^bool Linker::LinkInLibrary(StringRef Lib, bool& is_native) {$/;"	f	class:Linker
LinkModules	Linker/LinkModules.cpp	/^bool Linker::LinkModules(Module *Dest, Module *Src, unsigned Mode, $/;"	f	class:Linker
LinkVector	CodeGen/SpillPlacement.cpp	/^  typedef SmallVector<std::pair<float, unsigned>, 4> LinkVector;$/;"	t	struct:SpillPlacement::Node	file:
Linked	CodeGen/SpillPlacement.h	/^  SmallVector<unsigned, 8> Linked;$/;"	m	class:llvm::SpillPlacement
Linker	Linker/Linker.cpp	/^Linker::Linker(StringRef progname, Module* aModule, unsigned flags) :$/;"	f	class:Linker
Linker	Linker/Linker.cpp	/^Linker::Linker(StringRef progname, StringRef modname,$/;"	f	class:Linker
Links	CodeGen/SpillPlacement.cpp	/^  LinkVector Links;$/;"	m	struct:SpillPlacement::Node	file:
Lint	Analysis/Lint.cpp	/^    Lint() : FunctionPass(ID), MessagesStr(Messages) {$/;"	f	class:__anon5::Lint
Lint	Analysis/Lint.cpp	/^  class Lint : public FunctionPass, public InstVisitor<Lint> {$/;"	c	namespace:__anon5	file:
List	TableGen/TGLexer.h	/^    Bit, Bits, Class, Code, Dag, Def, Foreach, Defm, Field, In, Int, Let, List,$/;"	e	enum:llvm::tgtok::TokKind
ListScheduleBottomUp	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^void ScheduleDAGFast::ListScheduleBottomUp() {$/;"	f	class:ScheduleDAGFast
ListScheduleBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::ListScheduleBottomUp() {$/;"	f	class:ScheduleDAGRRList
ListScheduleTopDown	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::ListScheduleTopDown() {$/;"	f	class:SchedulePostRATDList
ListValue	TableGen/TGParser.h	/^    ListInit *ListValue;$/;"	m	struct:llvm::ForeachLoop
Listeners	VMCore/PassRegistry.cpp	/^  std::vector<PassRegistrationListener*> Listeners;$/;"	m	struct:__anon607::PassRegistryImpl	file:
LiteralAbsoluteValue	MC/MCDisassembler/EDToken.h	/^  uint64_t LiteralAbsoluteValue;$/;"	m	struct:llvm::EDToken
LiteralSign	MC/MCDisassembler/EDToken.h	/^  bool LiteralSign;$/;"	m	struct:llvm::EDToken
Live	Transforms/IPO/DeadArgumentElimination.cpp	/^    enum Liveness { Live, MaybeLive };$/;"	e	enum:__anon600::DAE::Liveness	file:
LiveBundle	Target/X86/X86FloatingPoint.cpp	/^      LiveBundle() : Mask(0), FixCount(0) {}$/;"	f	struct:__anon386::FPS::LiveBundle
LiveBundle	Target/X86/X86FloatingPoint.cpp	/^    struct LiveBundle {$/;"	s	struct:__anon386::FPS	file:
LiveBundles	CodeGen/RegAllocGreedy.cpp	/^    BitVector LiveBundles;$/;"	m	struct:__anon158::RAGreedy::GlobalSplitCandidate	file:
LiveBundles	Target/X86/X86FloatingPoint.cpp	/^    SmallVector<LiveBundle, 8> LiveBundles;$/;"	m	struct:__anon386::FPS	file:
LiveDbgValueMap	CodeGen/RegAllocFast.cpp	/^    DenseMap<unsigned, SmallVector<MachineInstr *, 4> > LiveDbgValueMap;$/;"	m	class:__anon140::RAFast	file:
LiveDebugVariables	CodeGen/LiveDebugVariables.cpp	/^LiveDebugVariables::LiveDebugVariables() : MachineFunctionPass(ID), pImpl(0) {$/;"	f	class:LiveDebugVariables
LiveDebugVariables	CodeGen/LiveDebugVariables.h	/^class LiveDebugVariables : public MachineFunctionPass {$/;"	c	namespace:llvm
LiveFuncSet	Transforms/IPO/DeadArgumentElimination.cpp	/^    typedef std::set<const Function*> LiveFuncSet;$/;"	t	class:__anon600::DAE	file:
LiveFunctions	Transforms/IPO/DeadArgumentElimination.cpp	/^    LiveFuncSet LiveFunctions;$/;"	m	class:__anon600::DAE	file:
LiveIn	CodeGen/LiveRangeCalc.h	/^  SmallVector<LiveInBlock, 16> LiveIn;$/;"	m	class:llvm::LiveRangeCalc
LiveIn	CodeGen/SplitKit.h	/^    bool LiveIn;          \/\/\/< Current reg is live in.$/;"	m	struct:llvm::SplitAnalysis::BlockInfo
LiveIn	CodeGen/StackColoring.cpp	/^    BitVector LiveIn;$/;"	m	struct:__anon113::StackColoring::BlockLifetimeInfo	file:
LiveInBlock	CodeGen/LiveRangeCalc.h	/^    LiveInBlock(LiveInterval *li, MachineDomTreeNode *node, SlotIndex kill)$/;"	f	struct:llvm::LiveRangeCalc::LiveInBlock
LiveInBlock	CodeGen/LiveRangeCalc.h	/^  struct LiveInBlock {$/;"	s	class:llvm::LiveRangeCalc
LiveInFI	Target/MBlaze/MBlazeMachineFunction.h	/^  SmallVector<int, 16> LiveInFI;$/;"	m	class:llvm::MBlazeFunctionInfo
LiveInReg	CodeGen/MachineTraceMetrics.h	/^    LiveInReg(unsigned Reg, unsigned Height = 0) : Reg(Reg), Height(Height) {}$/;"	f	struct:llvm::MachineTraceMetrics::LiveInReg
LiveInReg	CodeGen/MachineTraceMetrics.h	/^  struct LiveInReg {$/;"	s	class:llvm::MachineTraceMetrics
LiveIns	CodeGen/MachineTraceMetrics.h	/^    SmallVector<LiveInReg, 4> LiveIns;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
LiveIntervalUnion	CodeGen/LiveIntervalUnion.h	/^  explicit LiveIntervalUnion(Allocator &a) : Tag(0), Segments(a) {}$/;"	f	class:llvm::LiveIntervalUnion
LiveIntervalUnion	CodeGen/LiveIntervalUnion.h	/^class LiveIntervalUnion {$/;"	c	namespace:llvm
LiveIntervals	CodeGen/LiveIntervalAnalysis.cpp	/^LiveIntervals::LiveIntervals() : MachineFunctionPass(ID),$/;"	f	class:LiveIntervals
LiveIntervalsID	CodeGen/LiveIntervalAnalysis.cpp	/^char &llvm::LiveIntervalsID = LiveIntervals::ID;$/;"	m	class:llvm	file:
LiveInts	CodeGen/MachineVerifier.cpp	/^    LiveIntervals *LiveInts;$/;"	m	struct:__anon139::MachineVerifier	file:
LiveOut	CodeGen/LiveRangeCalc.h	/^  LiveOutMap LiveOut;$/;"	m	class:llvm::LiveRangeCalc
LiveOut	CodeGen/SplitKit.h	/^    bool LiveOut;         \/\/\/< Current reg is live out.$/;"	m	struct:llvm::SplitAnalysis::BlockInfo
LiveOut	CodeGen/StackColoring.cpp	/^    BitVector LiveOut;$/;"	m	struct:__anon113::StackColoring::BlockLifetimeInfo	file:
LiveOutMap	CodeGen/ExecutionDepsFix.cpp	/^  typedef DenseMap<MachineBasicBlock*, LiveReg*> LiveOutMap;$/;"	t	class:__anon120::ExeDepsFix	file:
LiveOutMap	CodeGen/LiveRangeCalc.h	/^  typedef IndexedMap<LiveOutPair, MBB2NumberFunctor> LiveOutMap;$/;"	t	class:llvm::LiveRangeCalc
LiveOutPair	CodeGen/LiveRangeCalc.h	/^  typedef std::pair<VNInfo*, MachineDomTreeNode*> LiveOutPair;$/;"	t	class:llvm::LiveRangeCalc
LiveOuts	CodeGen/ExecutionDepsFix.cpp	/^  LiveOutMap LiveOuts;$/;"	m	class:__anon120::ExeDepsFix	file:
LivePhysRegs	CodeGen/DeadMachineInstructionElim.cpp	/^    BitVector LivePhysRegs;$/;"	m	class:__anon137::DeadMachineInstructionElim	file:
LiveRangeCalc	CodeGen/LiveRangeCalc.h	/^  LiveRangeCalc() : MRI(0), Indexes(0), DomTree(0), Alloc(0) {}$/;"	f	class:llvm::LiveRangeCalc
LiveRangeCalc	CodeGen/LiveRangeCalc.h	/^class LiveRangeCalc {$/;"	c	namespace:llvm
LiveRangeStage	CodeGen/RegAllocGreedy.cpp	/^  enum LiveRangeStage {$/;"	g	class:__anon158::RAGreedy	file:
LiveReg	CodeGen/ExecutionDepsFix.cpp	/^struct LiveReg {$/;"	s	namespace:__anon119	file:
LiveReg	CodeGen/RegAllocFast.cpp	/^      explicit LiveReg(unsigned v)$/;"	f	struct:__anon140::RAFast::LiveReg
LiveReg	CodeGen/RegAllocFast.cpp	/^    struct LiveReg {$/;"	s	class:__anon140::RAFast	file:
LiveRegCycles	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  std::vector<unsigned> LiveRegCycles;$/;"	m	class:__anon86::ScheduleDAGFast	file:
LiveRegDefs	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  std::vector<SUnit*> LiveRegDefs;$/;"	m	class:__anon86::ScheduleDAGFast	file:
LiveRegDefs	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  std::vector<SUnit*> LiveRegDefs;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
LiveRegGens	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  std::vector<SUnit*> LiveRegGens;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
LiveRegMap	CodeGen/RegAllocFast.cpp	/^    typedef SparseSet<LiveReg> LiveRegMap;$/;"	t	class:__anon140::RAFast	file:
LiveRegMatrix	CodeGen/LiveRegMatrix.cpp	/^LiveRegMatrix::LiveRegMatrix() : MachineFunctionPass(ID),$/;"	f	class:LiveRegMatrix
LiveRegMatrix	CodeGen/LiveRegMatrix.h	/^class LiveRegMatrix : public MachineFunctionPass {$/;"	c	namespace:llvm
LiveRegUnit	CodeGen/MachineTraceMetrics.cpp	/^  LiveRegUnit(unsigned RU) : RegUnit(RU), Cycle(0), MI(0), Op(0) {}$/;"	f	struct:__anon134::LiveRegUnit
LiveRegUnit	CodeGen/MachineTraceMetrics.cpp	/^struct LiveRegUnit {$/;"	s	namespace:__anon134	file:
LiveRegUnits	CodeGen/EarlyIfConversion.cpp	/^  SparseSet<unsigned> LiveRegUnits;$/;"	m	class:__anon91::SSAIfConv	file:
LiveRegs	CodeGen/ExecutionDepsFix.cpp	/^  LiveReg *LiveRegs;$/;"	m	class:__anon120::ExeDepsFix	file:
LiveRegs	CodeGen/PostRASchedulerList.cpp	/^    BitVector LiveRegs;$/;"	m	class:__anon102::SchedulePostRATDList	file:
LiveSegments	CodeGen/LiveIntervalUnion.h	/^  typedef IntervalMap<SlotIndex, LiveInterval*> LiveSegments;$/;"	t	class:llvm::LiveIntervalUnion
LiveSet	Transforms/IPO/DeadArgumentElimination.cpp	/^    typedef std::set<RetOrArg> LiveSet;$/;"	t	class:__anon600::DAE	file:
LiveStacksID	CodeGen/LiveStackAnalysis.cpp	/^char &llvm::LiveStacksID = LiveStacks::ID;$/;"	m	class:llvm	file:
LiveStks	CodeGen/MachineVerifier.cpp	/^    LiveStacks *LiveStks;$/;"	m	struct:__anon139::MachineVerifier	file:
LiveUnion	CodeGen/LiveIntervalUnion.h	/^    LiveIntervalUnion *LiveUnion;$/;"	m	class:llvm::LiveIntervalUnion::Query
LiveUnionI	CodeGen/LiveIntervalUnion.h	/^    SegmentIter LiveUnionI;          \/\/ current position in LiveUnion$/;"	m	class:llvm::LiveIntervalUnion::Query
LiveValues	Transforms/IPO/DeadArgumentElimination.cpp	/^    LiveSet LiveValues;$/;"	m	class:__anon600::DAE	file:
LiveVariablesID	CodeGen/LiveVariables.cpp	/^char &llvm::LiveVariablesID = LiveVariables::ID;$/;"	m	class:llvm	file:
LiveVars	CodeGen/MachineVerifier.cpp	/^    LiveVariables *LiveVars;$/;"	m	struct:__anon139::MachineVerifier	file:
LiveVirtRegBitSet	CodeGen/LiveIntervalUnion.h	/^typedef SparseBitVector<128> LiveVirtRegBitSet;$/;"	t	namespace:llvm
LiveVirtRegs	CodeGen/RegAllocFast.cpp	/^    LiveRegMap LiveVirtRegs;$/;"	m	class:__anon140::RAFast	file:
Liveness	Transforms/IPO/DeadArgumentElimination.cpp	/^    enum Liveness { Live, MaybeLive };$/;"	g	class:__anon600::DAE	file:
Lo	Target/CellSPU/SPUISelLowering.h	/^      Lo,                       \/\/\/< Low address component (lower 16)$/;"	e	enum:llvm::SPUISD::NodeType
Lo	Target/Hexagon/HexagonISelLowering.h	/^      Hi, Lo,      \/\/ Hi\/Lo operations, typically on a global address.$/;"	e	enum:llvm::HexagonISD::__anon404
Lo	Target/Mips/MipsISelLowering.h	/^      Lo,$/;"	e	enum:llvm::MipsISD::NodeType
Lo	Target/PowerPC/PPCISelLowering.h	/^      Hi, Lo,$/;"	e	enum:llvm::PPCISD::NodeType
Lo	Target/Sparc/SparcISelLowering.h	/^      Hi, Lo,      \/\/ Hi\/Lo operations, typically on a global address.$/;"	e	enum:llvm::SPISD::__anon444
LoPC	DebugInfo/DWARFDebugAranges.h	/^    uint64_t LoPC; \/\/ Start of address range$/;"	m	struct:llvm::DWARFDebugAranges::Range
Load	Target/Sparc/SparcInstrInfo.h	/^    Load = (1<<1),$/;"	e	enum:llvm::SPII::__anon445
LoadAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uint64_t LoadAddress;$/;"	m	class:llvm::SectionEntry
LoadAndStorePromoter	Transforms/Utils/SSAUpdater.cpp	/^LoadAndStorePromoter(const SmallVectorImpl<Instruction*> &Insts,$/;"	f	class:LoadAndStorePromoter
LoadFile	Transforms/IPO/Internalize.cpp	/^void InternalizePass::LoadFile(const char *Filename) {$/;"	f	class:InternalizePass
LoadFile	Transforms/IPO/LoopExtractor.cpp	/^void BlockExtractorPass::LoadFile(const char *Filename) {$/;"	f	class:BlockExtractorPass
LoadFromBuffer	Object/MachOObject.cpp	/^MachOObject *MachOObject::LoadFromBuffer(MemoryBuffer *Buffer,$/;"	f	class:MachOObject
LoadHTType	Transforms/Scalar/EarlyCSE.cpp	/^                          DenseMapInfo<Value*>, LoadMapAllocator> LoadHTType;$/;"	t	class:__anon566::EarlyCSE	file:
LoadInst	VMCore/Instructions.cpp	/^LoadInst::LoadInst(Value *Ptr, const Twine &Name, BasicBlock *InsertAE)$/;"	f	class:LoadInst
LoadInst	VMCore/Instructions.cpp	/^LoadInst::LoadInst(Value *Ptr, const Twine &Name, Instruction *InsertBef)$/;"	f	class:LoadInst
LoadInst	VMCore/Instructions.cpp	/^LoadInst::LoadInst(Value *Ptr, const Twine &Name, bool isVolatile, $/;"	f	class:LoadInst
LoadInst	VMCore/Instructions.cpp	/^LoadInst::LoadInst(Value *Ptr, const Twine &Name, bool isVolatile,$/;"	f	class:LoadInst
LoadInst	VMCore/Instructions.cpp	/^LoadInst::LoadInst(Value *Ptr, const char *Name, BasicBlock *InsertAE)$/;"	f	class:LoadInst
LoadInst	VMCore/Instructions.cpp	/^LoadInst::LoadInst(Value *Ptr, const char *Name, Instruction *InsertBef)$/;"	f	class:LoadInst
LoadInst	VMCore/Instructions.cpp	/^LoadInst::LoadInst(Value *Ptr, const char *Name, bool isVolatile,$/;"	f	class:LoadInst
LoadIntFromMemory	ExecutionEngine/ExecutionEngine.cpp	/^static void LoadIntFromMemory(APInt &IntVal, uint8_t *Src, unsigned LoadBytes) {$/;"	f	file:
LoadMapAllocator	Transforms/Scalar/EarlyCSE.cpp	/^    ScopedHashTableVal<Value*, std::pair<Value*, unsigned> > > LoadMapAllocator;$/;"	t	class:__anon566::EarlyCSE	file:
LoadObject	Linker/Linker.cpp	/^Linker::LoadObject(const sys::Path &FN) {$/;"	f	class:Linker
LoadOpSplitter	Transforms/Scalar/SROA.cpp	/^    LoadOpSplitter(Instruction *InsertionPoint, Value *Ptr)$/;"	f	struct:__anon562::AggLoadStoreRewriter::LoadOpSplitter
LoadOpSplitter	Transforms/Scalar/SROA.cpp	/^  struct LoadOpSplitter : public OpSplitter<LoadOpSplitter> {$/;"	s	class:__anon562::AggLoadStoreRewriter	file:
LoadParam	Target/NVPTX/NVPTXISelLowering.h	/^  LoadParam,$/;"	e	enum:llvm::NVPTXISD::NodeType
LoadRegFromStackSlot	Target/PowerPC/PPCInstrInfo.cpp	/^PPCInstrInfo::LoadRegFromStackSlot(MachineFunction &MF, DebugLoc DL,$/;"	f	class:PPCInstrInfo
LoadScope	Transforms/Scalar/EarlyCSE.cpp	/^    LoadHTType::ScopeTy LoadScope;$/;"	m	class:__anon566::EarlyCSE::NodeScope	file:
LoadStore	Target/NVPTX/NVPTX.h	/^enum LoadStore {$/;"	g	namespace:llvm::NVPTX
LoadStoreMultipleOpti	Target/ARM/ARMLoadStoreOptimizer.cpp	/^bool ARMLoadStoreOpt::LoadStoreMultipleOpti(MachineBasicBlock &MBB) {$/;"	f	class:ARMLoadStoreOpt
LoadUsesSimpleEnoughForHeapSRA	Transforms/IPO/GlobalOpt.cpp	/^static bool LoadUsesSimpleEnoughForHeapSRA(const Value *V,$/;"	f	file:
LoadVal	Transforms/Scalar/GVN.cpp	/^    LoadVal,    \/\/ A value produced by a load.$/;"	e	enum:__anon538::AvailableValueInBlock::ValType	file:
LoadValueFromMemory	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::LoadValueFromMemory(GenericValue &Result,$/;"	f	class:ExecutionEngine
LoadedLoc	Transforms/Scalar/DeadStoreElimination.cpp	/^    const AliasAnalysis::Location &LoadedLoc;$/;"	m	struct:__anon555::CouldAlias	file:
LoadedObject	ExecutionEngine/MCJIT/MCJIT.h	/^  OwningPtr<ObjectImage> LoadedObject;$/;"	m	class:llvm::MCJIT
LoaderPass	Analysis/ProfileInfoLoaderPass.cpp	/^    explicit LoaderPass(const std::string &filename = "")$/;"	f	class:__anon52::LoaderPass
LoaderPass	Analysis/ProfileInfoLoaderPass.cpp	/^  class LoaderPass : public ModulePass, public ProfileInfo {$/;"	c	namespace:__anon52	file:
Loc	AsmParser/LLParser.h	/^      LocTy Loc;$/;"	m	struct:llvm::LLParser::ArgInfo
Loc	AsmParser/LLParser.h	/^      LocTy Loc;$/;"	m	struct:llvm::LLParser::ParamInfo
Loc	AsmParser/LLParser.h	/^      SMLoc Loc;$/;"	m	struct:llvm::LLParser::MDRef
Loc	AsmParser/LLParser.h	/^    LLLexer::LocTy Loc;$/;"	m	struct:llvm::ValID
Loc	CodeGen/AsmPrinter/DwarfDebug.h	/^  MachineLocation Loc;$/;"	m	struct:llvm::DotDebugLocEntry
Loc	MC/MCParser/AsmParser.cpp	/^  SMLoc Loc;$/;"	m	struct:__anon213::AsmRewrite	file:
Loc	TableGen/TGParser.h	/^    SMLoc Loc;$/;"	m	struct:llvm::LetRecord
LocInfo	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^    const MDNode *LocInfo;$/;"	m	struct:__anon66::SrcMgrDiagInfo	file:
LocMap	CodeGen/LiveDebugVariables.cpp	/^typedef IntervalMap<SlotIndex, unsigned, 4> LocMap;$/;"	t	file:
LocPair	Analysis/BasicAliasAnalysis.cpp	/^    typedef std::pair<Location, Location> LocPair;$/;"	t	struct:__anon15::BasicAliasAnalysis	file:
LocTy	AsmParser/LLLexer.h	/^    typedef SMLoc LocTy;$/;"	t	class:llvm::LLLexer
LocTy	AsmParser/LLParser.h	/^    typedef LLLexer::LocTy LocTy;$/;"	t	class:llvm::LLParser
LocalCommon	MC/MCELFStreamer.cpp	/^  struct LocalCommon {$/;"	s	class:__anon215::MCELFStreamer	file:
LocalCommons	MC/MCELFStreamer.cpp	/^  std::vector<LocalCommon> LocalCommons;$/;"	m	class:__anon215::MCELFStreamer	file:
LocalOffset	CodeGen/LocalStackSlotAllocation.cpp	/^    int64_t LocalOffset;            \/\/ Local offset of the frame idx referenced$/;"	m	class:__anon136::FrameRef	file:
LocalOffsets	CodeGen/LocalStackSlotAllocation.cpp	/^    SmallVector<int64_t,16> LocalOffsets;$/;"	m	class:__anon136::LocalStackSlotPass	file:
LocalPrefix	VMCore/AsmWriter.cpp	/^  LocalPrefix,$/;"	e	enum:PrefixType	file:
LocalStackSlotAllocationID	CodeGen/LocalStackSlotAllocation.cpp	/^char &llvm::LocalStackSlotAllocationID = LocalStackSlotPass::ID;$/;"	m	class:llvm	file:
LocalStackSlotPass	CodeGen/LocalStackSlotAllocation.cpp	/^    explicit LocalStackSlotPass() : MachineFunctionPass(ID) { }$/;"	f	class:__anon136::LocalStackSlotPass
LocalStackSlotPass	CodeGen/LocalStackSlotAllocation.cpp	/^  class LocalStackSlotPass: public MachineFunctionPass {$/;"	c	namespace:__anon136	file:
LocalSymbolData	MC/ELFObjectWriter.cpp	/^    std::vector<ELFSymbolData> LocalSymbolData;$/;"	m	class:__anon225::ELFObjectWriter	file:
LocalType	MC/MCDisassembler/EDToken.h	/^  uint64_t LocalType;$/;"	m	struct:llvm::EDToken
LocalVar	AsmParser/LLToken.h	/^    LocalVar,          \/\/ %foo %"foo"$/;"	e	enum:llvm::lltok::Kind
LocalVarID	AsmParser/LLToken.h	/^    LocalVarID,        \/\/ %42$/;"	e	enum:llvm::lltok::Kind
Lock	CodeGen/PseudoSourceValue.cpp	/^  sys::Mutex Lock;  \/\/ Guards FSValues, but not the values inside it.$/;"	m	struct:__anon100::PSVGlobalsTy	file:
Lock	ExecutionEngine/JIT/JIT.cpp	/^  mutable sys::Mutex Lock;$/;"	m	class:__anon188::JitPool	file:
Lock	ExecutionEngine/JIT/JITEmitter.cpp	/^    mutable sys::Mutex Lock;$/;"	m	class:__anon182::StubToResolverMapTy	file:
Lock	VMCore/PassRegistry.cpp	/^static ManagedStatic<sys::SmartMutex<true> > Lock;$/;"	v	file:
LockFileManager	Support/LockFileManager.cpp	/^LockFileManager::LockFileManager(StringRef FileName)$/;"	f	class:LockFileManager
Locs	Target/Hexagon/HexagonCallingConvLower.h	/^  SmallVector<CCValAssign, 16> &Locs;$/;"	m	class:llvm::Hexagon_CCState
LogMaxQID	CodeGen/MachineScheduler.cpp	/^    LogMaxQID = 2$/;"	e	enum:__anon126::ConvergingScheduler::__anon127	file:
LogMaxQID	Target/Hexagon/HexagonMachineScheduler.h	/^    LogMaxQID = 2$/;"	e	enum:llvm::ConvergingVLIWScheduler::__anon405
LongBranchSeqSize	Target/Mips/MipsLongBranch.cpp	/^    unsigned LongBranchSeqSize;$/;"	m	class:__anon437::MipsLongBranch	file:
LongJmpFn	Transforms/Utils/LowerInvoke.cpp	/^    Constant *SetJmpFn, *LongJmpFn, *StackSaveFn, *StackRestoreFn;$/;"	m	class:__anon474::LowerInvoke	file:
LongSize	Transforms/Instrumentation/AddressSanitizer.cpp	/^  int LongSize;$/;"	m	struct:__anon491::AddressSanitizer	file:
LookAheadLimit	CodeGen/MachineCSE.cpp	/^    const unsigned LookAheadLimit;$/;"	m	class:__anon161::MachineCSE	file:
LookForDuplicate	CodeGen/MachineLICM.cpp	/^MachineLICM::LookForDuplicate(const MachineInstr *MI,$/;"	f	class:MachineLICM
LookForIdenticalPHI	CodeGen/MachineSSAUpdater.cpp	/^unsigned LookForIdenticalPHI(MachineBasicBlock *BB,$/;"	f	file:
LookThroughFPExtensions	Transforms/InstCombine/InstCombineCasts.cpp	/^static Value *LookThroughFPExtensions(Value *V) {$/;"	f	file:
LookThroughSetCC	Target/Sparc/SparcISelLowering.cpp	/^static void LookThroughSetCC(SDValue &LHS, SDValue &RHS,$/;"	f	file:
LooksLikeCodeInBug11395	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::LooksLikeCodeInBug11395(Instruction *I) {$/;"	f	class:AddressSanitizer
Lookup	Target/X86/X86FloatingPoint.cpp	/^static int Lookup(const TableEntry *Table, unsigned N, unsigned Opcode) {$/;"	f	file:
LookupBucketFor	Support/StringMap.cpp	/^unsigned StringMapImpl::LookupBucketFor(StringRef Name) {$/;"	f	class:StringMapImpl
LookupFunctionFromCallSite	ExecutionEngine/JIT/JITEmitter.cpp	/^    std::pair<void *, Function *> LookupFunctionFromCallSite($/;"	f	class:__anon182::JITResolverState
LookupKey	VMCore/ConstantsContext.h	/^  typedef std::pair<TypeClass*, Operands> LookupKey;$/;"	t	class:llvm::ConstantAggrUniqueMap
LookupNEONLdSt	Target/ARM/ARMExpandPseudoInsts.cpp	/^static const NEONLdStTableEntry *LookupNEONLdSt(unsigned Opcode) {$/;"	f	file:
LookupNearestOption	Support/CommandLine.cpp	/^static Option *LookupNearestOption(StringRef Arg,$/;"	f	file:
LookupOnly	Transforms/IPO/MergeFunctions.cpp	/^  static DataLayout * const LookupOnly;$/;"	m	class:__anon596::ComparableFunction	file:
LookupOnly	Transforms/IPO/MergeFunctions.cpp	/^DataLayout *const ComparableFunction::LookupOnly = (DataLayout*)(-1);$/;"	m	class:__anon596::ComparableFunction	file:
LookupOption	Support/CommandLine.cpp	/^static Option *LookupOption(StringRef &Arg, StringRef &Value,$/;"	f	file:
LookupSymbol	MC/MCContext.cpp	/^MCSymbol *MCContext::LookupSymbol(StringRef Name) const {$/;"	f	class:MCContext
LookupSymbol	MC/MCContext.cpp	/^MCSymbol *MCContext::LookupSymbol(const Twine &Name) const {$/;"	f	class:MCContext
LoopBase	Analysis/LoopInfo.cpp	/^template class llvm::LoopBase<BasicBlock, Loop>;$/;"	m	class:llvm	typeref:class:llvm::	file:
LoopBase	CodeGen/MachineLoopInfo.cpp	/^template class llvm::LoopBase<MachineBasicBlock, MachineLoop>;$/;"	m	class:llvm	typeref:class:llvm::	file:
LoopBlocks	Transforms/Scalar/LoopUnswitch.cpp	/^    std::vector<BasicBlock*> LoopBlocks;$/;"	m	class:__anon494::LoopUnswitch	file:
LoopBlocks	Transforms/Utils/LCSSA.cpp	/^    std::vector<BasicBlock*> LoopBlocks;$/;"	m	struct:__anon475::LCSSA	file:
LoopBounds	CodeGen/MachineTraceMetrics.cpp	/^  LoopBounds(MutableArrayRef<MachineTraceMetrics::TraceBlockInfo> blocks,$/;"	f	struct:__anon132::LoopBounds
LoopBounds	CodeGen/MachineTraceMetrics.cpp	/^struct LoopBounds {$/;"	s	namespace:__anon132	file:
LoopBypassBlock	Transforms/Vectorize/LoopVectorize.cpp	/^  BasicBlock *LoopBypassBlock;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
LoopCompare	Analysis/ScalarEvolutionExpander.cpp	/^  explicit LoopCompare(DominatorTree &dt) : DT(dt) {}$/;"	f	class:__anon22::LoopCompare
LoopCompare	Analysis/ScalarEvolutionExpander.cpp	/^class LoopCompare {$/;"	c	namespace:__anon22	file:
LoopDeletion	Transforms/Scalar/LoopDeletion.cpp	/^    LoopDeletion() : LoopPass(ID) {$/;"	f	class:__anon576::LoopDeletion
LoopDeletion	Transforms/Scalar/LoopDeletion.cpp	/^  class LoopDeletion : public LoopPass {$/;"	c	namespace:__anon576	file:
LoopExitBlock	Transforms/Vectorize/LoopVectorize.cpp	/^  BasicBlock *LoopExitBlock;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
LoopExitBlocks	Transforms/Scalar/LICM.cpp	/^    SmallVectorImpl<BasicBlock*> &LoopExitBlocks;$/;"	m	class:__anon569::LoopPromoter	file:
LoopExitInstr	Transforms/Vectorize/LoopVectorize.cpp	/^    Instruction *LoopExitInstr;$/;"	m	struct:__anon605::LoopVectorizationLegality::ReductionDescriptor	file:
LoopExitWeights	Analysis/ProfileEstimatorPass.cpp	/^    std::map<Loop*,double> LoopExitWeights;$/;"	m	class:__anon9::ProfileEstimatorPass	file:
LoopExtractor	Transforms/IPO/LoopExtractor.cpp	/^    explicit LoopExtractor(unsigned numLoops = ~0) $/;"	f	struct:__anon580::LoopExtractor
LoopExtractor	Transforms/IPO/LoopExtractor.cpp	/^  struct LoopExtractor : public LoopPass {$/;"	s	namespace:__anon580	file:
LoopHeaders	Transforms/Scalar/JumpThreading.cpp	/^    SmallPtrSet<BasicBlock*, 16> LoopHeaders;$/;"	m	class:__anon542::JumpThreading	file:
LoopHeaders	Transforms/Scalar/JumpThreading.cpp	/^    SmallSet<AssertingVH<BasicBlock>, 16> LoopHeaders;$/;"	m	class:__anon542::JumpThreading	file:
LoopIdiomRecognize	Transforms/Scalar/LoopIdiomRecognize.cpp	/^    explicit LoopIdiomRecognize() : LoopPass(ID) {$/;"	f	class:__anon543::LoopIdiomRecognize
LoopIdiomRecognize	Transforms/Scalar/LoopIdiomRecognize.cpp	/^  class LoopIdiomRecognize : public LoopPass {$/;"	c	namespace:__anon543	file:
LoopInfoBase	Analysis/LoopInfo.cpp	/^template class llvm::LoopInfoBase<BasicBlock, Loop>;$/;"	m	class:llvm	typeref:class:llvm::	file:
LoopInfoBase	CodeGen/MachineLoopInfo.cpp	/^template class llvm::LoopInfoBase<MachineBasicBlock, MachineLoop>;$/;"	m	class:llvm	typeref:class:llvm::	file:
LoopInsertPts	Transforms/Scalar/LICM.cpp	/^    SmallVectorImpl<Instruction*> &LoopInsertPts;$/;"	m	class:__anon569::LoopPromoter	file:
LoopInstSimplify	Transforms/Scalar/LoopInstSimplify.cpp	/^    LoopInstSimplify() : LoopPass(ID) {$/;"	f	class:__anon527::LoopInstSimplify
LoopInstSimplify	Transforms/Scalar/LoopInstSimplify.cpp	/^  class LoopInstSimplify : public LoopPass {$/;"	c	namespace:__anon527	file:
LoopIsOuterMostWithPredecessor	CodeGen/MachineLICM.cpp	/^static bool LoopIsOuterMostWithPredecessor(MachineLoop *CurLoop) {$/;"	f	file:
LoopMiddleBlock	Transforms/Vectorize/LoopVectorize.cpp	/^  BasicBlock *LoopMiddleBlock;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
LoopPredecessors	CodeGen/MachineBlockPlacement.cpp	/^  unsigned LoopPredecessors;$/;"	m	class:__anon106::BlockChain	file:
LoopPreds	Analysis/ScalarEvolution.cpp	/^  DenseSet<Value*> &LoopPreds;$/;"	m	struct:MarkPendingLoopPredicate	file:
LoopProcessWorklist	Transforms/Scalar/LoopUnswitch.cpp	/^    std::vector<Loop*> LoopProcessWorklist;$/;"	m	class:__anon494::LoopUnswitch	file:
LoopPromoter	Transforms/Scalar/LICM.cpp	/^    LoopPromoter(Value *SP,$/;"	f	class:__anon569::LoopPromoter
LoopPromoter	Transforms/Scalar/LICM.cpp	/^  class LoopPromoter : public LoadAndStorePromoter {$/;"	c	namespace:__anon569	file:
LoopProperties	Transforms/Scalar/LoopUnswitch.cpp	/^    struct LoopProperties {$/;"	s	class:__anon494::LUAnalysisCache	file:
LoopPropsMap	Transforms/Scalar/LoopUnswitch.cpp	/^    typedef std::map<const Loop*, LoopProperties> LoopPropsMap;$/;"	t	class:__anon494::LUAnalysisCache	file:
LoopPropsMapIt	Transforms/Scalar/LoopUnswitch.cpp	/^    typedef LoopPropsMap::iterator LoopPropsMapIt;$/;"	t	class:__anon494::LUAnalysisCache	file:
LoopRotate	Transforms/Scalar/LoopRotation.cpp	/^    LoopRotate() : LoopPass(ID) {$/;"	f	class:__anon534::LoopRotate
LoopRotate	Transforms/Scalar/LoopRotation.cpp	/^  class LoopRotate : public LoopPass {$/;"	c	namespace:__anon534	file:
LoopScalarBody	Transforms/Vectorize/LoopVectorize.cpp	/^  BasicBlock *LoopScalarBody;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
LoopSimplify	Transforms/Utils/LoopSimplify.cpp	/^    LoopSimplify() : LoopPass(ID) {$/;"	f	struct:__anon483::LoopSimplify
LoopSimplify	Transforms/Utils/LoopSimplify.cpp	/^  struct LoopSimplify : public LoopPass {$/;"	s	namespace:__anon483	file:
LoopSimplifyID	Transforms/Utils/LoopSimplify.cpp	/^char &llvm::LoopSimplifyID = LoopSimplify::ID;$/;"	m	class:llvm	file:
LoopStrengthReduce	Transforms/Scalar/LoopStrengthReduce.cpp	/^LoopStrengthReduce::LoopStrengthReduce(const TargetLowering *tli)$/;"	f	class:LoopStrengthReduce
LoopStrengthReduce	Transforms/Scalar/LoopStrengthReduce.cpp	/^class LoopStrengthReduce : public LoopPass {$/;"	c	namespace:__anon520	file:
LoopToAliasSetMap	Transforms/Scalar/LICM.cpp	/^    DenseMap<Loop*, AliasSetTracker*> LoopToAliasSetMap;$/;"	m	struct:__anon568::LICM	file:
LoopUnroll	Transforms/Scalar/LoopUnrollPass.cpp	/^    LoopUnroll(int T = -1, int C = -1,  int P = -1) : LoopPass(ID) {$/;"	f	class:__anon571::LoopUnroll
LoopUnroll	Transforms/Scalar/LoopUnrollPass.cpp	/^  class LoopUnroll : public LoopPass {$/;"	c	namespace:__anon571	file:
LoopUnswitch	Transforms/Scalar/LoopUnswitch.cpp	/^    explicit LoopUnswitch(bool Os = false) :$/;"	f	class:__anon494::LoopUnswitch
LoopUnswitch	Transforms/Scalar/LoopUnswitch.cpp	/^  class LoopUnswitch : public LoopPass {$/;"	c	namespace:__anon494	file:
LoopVector	TableGen/TGParser.h	/^  typedef std::vector<ForeachLoop> LoopVector;$/;"	t	class:llvm::TGParser
LoopVectorBody	Transforms/Vectorize/LoopVectorize.cpp	/^  BasicBlock *LoopVectorBody;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
LoopVectorizationLegality	Transforms/Vectorize/LoopVectorize.cpp	/^  LoopVectorizationLegality(Loop *Lp, ScalarEvolution *Se, DataLayout *Dl):$/;"	f	class:__anon605::LoopVectorizationLegality
LoopVectorizationLegality	Transforms/Vectorize/LoopVectorize.cpp	/^class LoopVectorizationLegality {$/;"	c	namespace:__anon605	file:
LoopVectorize	Transforms/Vectorize/LoopVectorize.cpp	/^  LoopVectorize() : LoopPass(ID) {$/;"	f	struct:__anon605::LoopVectorize
LoopVectorize	Transforms/Vectorize/LoopVectorize.cpp	/^struct LoopVectorize : public LoopPass {$/;"	s	namespace:__anon605	file:
Loops	Analysis/ScalarEvolutionNormalization.cpp	/^  PostIncLoopSet &Loops;$/;"	m	class:__anon48::PostIncTransform	file:
Loops	CodeGen/EarlyIfConversion.cpp	/^  MachineLoopInfo *Loops;$/;"	m	class:__anon92::EarlyIfConverter	file:
Loops	CodeGen/InlineSpiller.cpp	/^  MachineLoopInfo &Loops;$/;"	m	class:__anon155::InlineSpiller	file:
Loops	CodeGen/MachineTraceMetrics.cpp	/^  const MachineLoopInfo *Loops;$/;"	m	struct:__anon132::LoopBounds	file:
Loops	CodeGen/MachineTraceMetrics.h	/^  const MachineLoopInfo *Loops;$/;"	m	class:llvm::MachineTraceMetrics
Loops	CodeGen/RegAllocGreedy.cpp	/^  MachineLoopInfo *Loops;$/;"	m	class:__anon158::RAGreedy	file:
Loops	CodeGen/RegisterCoalescer.cpp	/^    const MachineLoopInfo* Loops;$/;"	m	class:__anon114::RegisterCoalescer	file:
Loops	CodeGen/SplitKit.h	/^  const MachineLoopInfo &Loops;$/;"	m	class:llvm::SplitAnalysis
Loops	TableGen/TGParser.h	/^  LoopVector Loops;$/;"	m	class:llvm::TGParser
LoopsProperties	Transforms/Scalar/LoopUnswitch.cpp	/^    LoopPropsMap LoopsProperties;$/;"	m	class:__anon494::LUAnalysisCache	file:
Loose	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Cost::Loose() {$/;"	f	class:Cost
Low	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const Constant *Low;$/;"	m	struct:llvm::SelectionDAGBuilder::Case
Low	Transforms/Utils/LowerSwitch.cpp	/^      Constant* Low;$/;"	m	struct:__anon466::LowerSwitch::CaseRange	file:
LowPC	DebugInfo/DWARFDebugLine.h	/^    uint64_t LowPC;$/;"	m	struct:llvm::DWARFDebugLine::Sequence
LowRegs1	Target/ARM/Thumb2SizeReduction.cpp	/^    unsigned LowRegs1 : 1; \/\/ Only possible if low-registers are used$/;"	m	struct:__anon300::ReduceEntry	file:
LowRegs2	Target/ARM/Thumb2SizeReduction.cpp	/^    unsigned LowRegs2 : 1; \/\/ Only possible if low-registers are used (2addr)$/;"	m	struct:__anon300::ReduceEntry	file:
Lower	Target/MBlaze/MBlazeMCInstLower.cpp	/^void MBlazeMCInstLower::Lower(const MachineInstr *MI, MCInst &OutMI) const {$/;"	f	class:MBlazeMCInstLower
Lower	Target/MSP430/MSP430MCInstLower.cpp	/^void MSP430MCInstLower::Lower(const MachineInstr *MI, MCInst &OutMI) const {$/;"	f	class:MSP430MCInstLower
Lower	Target/Mips/MipsMCInstLower.cpp	/^void MipsMCInstLower::Lower(const MachineInstr *MI, MCInst &OutMI) const {$/;"	f	class:MipsMCInstLower
Lower	Target/X86/X86MCInstLower.cpp	/^void X86MCInstLower::Lower(const MachineInstr *MI, MCInst &OutMI) const {$/;"	f	class:X86MCInstLower
Lower256IntArith	Target/X86/X86ISelLowering.cpp	/^static SDValue Lower256IntArith(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
Lower256IntVSETCC	Target/X86/X86ISelLowering.cpp	/^static SDValue Lower256IntVSETCC(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerADD	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerADD(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerADDC_ADDE_SUBC_SUBE	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerADDC_ADDE_SUBC_SUBE(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerADDC_ADDE_SUBC_SUBE	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerADDC_ADDE_SUBC_SUBE(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerADJUST_TRAMPOLINE	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerADJUST_TRAMPOLINE(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerADJUST_TRAMPOLINE	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerADJUST_TRAMPOLINE(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerADJUST_TRAMPOLINE	Target/XCore/XCoreISelLowering.cpp	/^LowerADJUST_TRAMPOLINE(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:XCoreTargetLowering
LowerARMMachineInstrToMCInst	Target/ARM/ARMMCInstLower.cpp	/^void llvm::LowerARMMachineInstrToMCInst(const MachineInstr *MI, MCInst &OutMI,$/;"	f	class:llvm
LowerATOMIC_FENCE	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerATOMIC_FENCE(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
LowerATOMIC_FENCE	Target/Hexagon/HexagonISelLowering.cpp	/^SDValue HexagonTargetLowering::LowerATOMIC_FENCE(SDValue Op,$/;"	f	class:HexagonTargetLowering
LowerATOMIC_FENCE	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerATOMIC_FENCE(SDValue Op,$/;"	f	class:MipsTargetLowering
LowerATOMIC_FENCE	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerATOMIC_FENCE(SDValue Op, const X86Subtarget *Subtarget,$/;"	f	file:
LowerATOMIC_STORE	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerATOMIC_STORE(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerAVXCONCAT_VECTORS	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerAVXCONCAT_VECTORS(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerArguments	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGISel::LowerArguments(const BasicBlock *LLVMBB) {$/;"	f	class:SelectionDAGISel
LowerAsSplatVectorLoad	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerAsSplatVectorLoad(SDValue SrcOp, EVT VT, DebugLoc dl,$/;"	f	class:X86TargetLowering
LowerAsmOperandForConstraint	CodeGen/SelectionDAG/TargetLowering.cpp	/^void TargetLowering::LowerAsmOperandForConstraint(SDValue Op,$/;"	f	class:TargetLowering
LowerAsmOperandForConstraint	Target/ARM/ARMISelLowering.cpp	/^void ARMTargetLowering::LowerAsmOperandForConstraint(SDValue Op,$/;"	f	class:ARMTargetLowering
LowerAsmOperandForConstraint	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::LowerAsmOperandForConstraint(SDValue Op,$/;"	f	class:SPUTargetLowering
LowerAsmOperandForConstraint	Target/Mips/MipsISelLowering.cpp	/^void MipsTargetLowering::LowerAsmOperandForConstraint(SDValue Op,$/;"	f	class:MipsTargetLowering
LowerAsmOperandForConstraint	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::LowerAsmOperandForConstraint(SDValue Op,$/;"	f	class:NVPTXTargetLowering
LowerAsmOperandForConstraint	Target/PowerPC/PPCISelLowering.cpp	/^void PPCTargetLowering::LowerAsmOperandForConstraint(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerAsmOperandForConstraint	Target/X86/X86ISelLowering.cpp	/^void X86TargetLowering::LowerAsmOperandForConstraint(SDValue Op,$/;"	f	class:X86TargetLowering
LowerAtomic	Transforms/Scalar/LowerAtomic.cpp	/^    LowerAtomic() : BasicBlockPass(ID) {$/;"	f	struct:__anon570::LowerAtomic
LowerAtomic	Transforms/Scalar/LowerAtomic.cpp	/^  struct LowerAtomic : public BasicBlockPass {$/;"	s	namespace:__anon570	file:
LowerAtomicCmpXchgInst	Transforms/Scalar/LowerAtomic.cpp	/^static bool LowerAtomicCmpXchgInst(AtomicCmpXchgInst *CXI) {$/;"	f	file:
LowerAtomicLoadStore	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerAtomicLoadStore(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerAtomicPHINode	CodeGen/PHIElimination.cpp	/^void PHIElimination::LowerAtomicPHINode($/;"	f	class:PHIElimination
LowerAtomicRMWInst	Transforms/Scalar/LowerAtomic.cpp	/^static bool LowerAtomicRMWInst(AtomicRMWInst *RMWI) {$/;"	f	file:
LowerBITCAST	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerBITCAST(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerBRCOND	Target/Mips/MipsISelLowering.cpp	/^LowerBRCOND(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:MipsTargetLowering
LowerBRCOND	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerBRCOND(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerBR_CC	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerBR_CC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerBR_CC	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerBR_CC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MSP430TargetLowering
LowerBR_CC	Target/Sparc/SparcISelLowering.cpp	/^static SDValue LowerBR_CC(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerBR_JT	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerBR_JT(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerBR_JT	Target/Hexagon/HexagonISelLowering.cpp	/^LowerBR_JT(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:HexagonTargetLowering
LowerBR_JT	Target/XCore/XCoreISelLowering.cpp	/^LowerBR_JT(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerBSWAP	CodeGen/IntrinsicLowering.cpp	/^static Value *LowerBSWAP(LLVMContext &Context, Value *V, Instruction *IP) {$/;"	f	file:
LowerBUILD_VECTOR	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerBUILD_VECTOR(SDValue Op, SelectionDAG &DAG,$/;"	f	class:ARMTargetLowering
LowerBUILD_VECTOR	Target/CellSPU/SPUISelLowering.cpp	/^LowerBUILD_VECTOR(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerBUILD_VECTOR	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerBUILD_VECTOR(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerBUILD_VECTOR	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerBUILD_VECTOR(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerBlockAddress	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerBlockAddress(SDValue Op,$/;"	f	class:ARMTargetLowering
LowerBlockAddress	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerBlockAddress(SDValue Op,$/;"	f	class:MSP430TargetLowering
LowerBlockAddress	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerBlockAddress(SDValue Op,$/;"	f	class:MipsTargetLowering
LowerBlockAddress	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerBlockAddress(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerBlockAddress	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerBlockAddress(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerBlockAddress	Target/XCore/XCoreISelLowering.cpp	/^LowerBlockAddress(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerBuildVectorv16i8	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerBuildVectorv16i8(SDValue Op, unsigned NonZeros,$/;"	f	file:
LowerBuildVectorv8i16	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerBuildVectorv8i16(SDValue Op, unsigned NonZeros,$/;"	f	file:
LowerByteImmed	Target/CellSPU/SPUISelLowering.cpp	/^LowerByteImmed(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerCCCArguments	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::LowerCCCArguments(SDValue Chain,$/;"	f	class:MSP430TargetLowering
LowerCCCArguments	Target/XCore/XCoreISelLowering.cpp	/^XCoreTargetLowering::LowerCCCArguments(SDValue Chain,$/;"	f	class:XCoreTargetLowering
LowerCCCCallTo	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::LowerCCCCallTo(SDValue Chain, SDValue Callee,$/;"	f	class:MSP430TargetLowering
LowerCCCCallTo	Target/XCore/XCoreISelLowering.cpp	/^XCoreTargetLowering::LowerCCCCallTo(SDValue Chain, SDValue Callee,$/;"	f	class:XCoreTargetLowering
LowerCMP_SWAP	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerCMP_SWAP(SDValue Op, const X86Subtarget *Subtarget,$/;"	f	file:
LowerCONCAT_VECTORS	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerCONCAT_VECTORS(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerCONCAT_VECTORS	Target/NVPTX/NVPTXISelLowering.cpp	/^LowerCONCAT_VECTORS(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:NVPTXTargetLowering
LowerCONCAT_VECTORS	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerCONCAT_VECTORS(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerCTLZ	CodeGen/IntrinsicLowering.cpp	/^static Value *LowerCTLZ(LLVMContext &Context, Value *V, Instruction *IP) {$/;"	f	file:
LowerCTLZ	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerCTLZ(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerCTLZ_ZERO_UNDEF	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerCTLZ_ZERO_UNDEF(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerCTPOP	CodeGen/IntrinsicLowering.cpp	/^static Value *LowerCTPOP(LLVMContext &Context, Value *V, Instruction *IP) {$/;"	f	file:
LowerCTPOP	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerCTPOP(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerCTTZ	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerCTTZ(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
LowerCTTZ	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerCTTZ(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerCall	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:ARMTargetLowering
LowerCall	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:SPUTargetLowering
LowerCall	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:HexagonTargetLowering
LowerCall	Target/MBlaze/MBlazeISelLowering.cpp	/^LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:MBlazeTargetLowering
LowerCall	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:MSP430TargetLowering
LowerCall	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:MipsTargetLowering
LowerCall	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:NVPTXTargetLowering
LowerCall	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:PPCTargetLowering
LowerCall	Target/Sparc/SparcISelLowering.cpp	/^SparcTargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:SparcTargetLowering
LowerCall	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:X86TargetLowering
LowerCall	Target/XCore/XCoreISelLowering.cpp	/^XCoreTargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:XCoreTargetLowering
LowerCallResult	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerCallResult(SDValue Chain, SDValue InFlag,$/;"	f	class:ARMTargetLowering
LowerCallResult	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerCallResult(SDValue Chain, SDValue InFlag,$/;"	f	class:HexagonTargetLowering
LowerCallResult	Target/MBlaze/MBlazeISelLowering.cpp	/^LowerCallResult(SDValue Chain, SDValue InFlag, CallingConv::ID CallConv,$/;"	f	class:MBlazeTargetLowering
LowerCallResult	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::LowerCallResult(SDValue Chain, SDValue InFlag,$/;"	f	class:MSP430TargetLowering
LowerCallResult	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::LowerCallResult(SDValue Chain, SDValue InFlag,$/;"	f	class:MipsTargetLowering
LowerCallResult	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::LowerCallResult(SDValue Chain, SDValue InFlag,$/;"	f	class:PPCTargetLowering
LowerCallResult	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerCallResult(SDValue Chain, SDValue InFlag,$/;"	f	class:X86TargetLowering
LowerCallResult	Target/XCore/XCoreISelLowering.cpp	/^XCoreTargetLowering::LowerCallResult(SDValue Chain, SDValue InFlag,$/;"	f	class:XCoreTargetLowering
LowerCallTo	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^TargetLowering::LowerCallTo(TargetLowering::CallLoweringInfo &CLI) const {$/;"	f	class:TargetLowering
LowerCallTo	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::LowerCallTo(ImmutableCallSite CS, SDValue Callee,$/;"	f	class:SelectionDAGBuilder
LowerCall_32SVR4	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::LowerCall_32SVR4(SDValue Chain, SDValue Callee,$/;"	f	class:PPCTargetLowering
LowerCall_Darwin_Or_64SVR4	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::LowerCall_Darwin_Or_64SVR4(SDValue Chain, SDValue Callee,$/;"	f	class:PPCTargetLowering
LowerConstant	Target/NVPTX/NVPTXAsmPrinter.cpp	/^const MCExpr *nvptx::LowerConstant(const Constant *CV, AsmPrinter &AP) {$/;"	f	class:nvptx
LowerConstantFP	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerConstantFP(SDValue Op, SelectionDAG &DAG,$/;"	f	class:ARMTargetLowering
LowerConstantFP	Target/CellSPU/SPUISelLowering.cpp	/^LowerConstantFP(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerConstantPool	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerConstantPool(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerConstantPool	Target/CellSPU/SPUISelLowering.cpp	/^LowerConstantPool(SDValue Op, SelectionDAG &DAG, const SPUSubtarget *ST) {$/;"	f	file:
LowerConstantPool	Target/CellSPU/SPUISelLowering.cpp	/^SPU::LowerConstantPool(SDValue Op, SelectionDAG &DAG, const SPUTargetMachine &TM) {$/;"	f	class:SPU
LowerConstantPool	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerConstantPool(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:HexagonTargetLowering
LowerConstantPool	Target/MBlaze/MBlazeISelLowering.cpp	/^LowerConstantPool(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MBlazeTargetLowering
LowerConstantPool	Target/Mips/MipsISelLowering.cpp	/^LowerConstantPool(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:MipsTargetLowering
LowerConstantPool	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerConstantPool(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerConstantPool	Target/Sparc/SparcISelLowering.cpp	/^SDValue SparcTargetLowering::LowerConstantPool(SDValue Op,$/;"	f	class:SparcTargetLowering
LowerConstantPool	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerConstantPool(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerConstantPool	Target/XCore/XCoreISelLowering.cpp	/^LowerConstantPool(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerCopy	CodeGen/ExpandPostRAPseudos.cpp	/^bool ExpandPostRA::LowerCopy(MachineInstr *MI) {$/;"	f	class:ExpandPostRA
LowerCustomJumpTableEntry	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerCustomJumpTableEntry(const MachineJumpTableInfo *MJTI,$/;"	f	class:X86TargetLowering
LowerDSPIntr	Target/Mips/MipsISelLowering.cpp	/^static SDValue LowerDSPIntr(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
LowerDYNAMIC_STACKALLOC	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerDYNAMIC_STACKALLOC(SDValue Op,$/;"	f	class:HexagonTargetLowering
LowerDYNAMIC_STACKALLOC	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerDYNAMIC_STACKALLOC(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerDYNAMIC_STACKALLOC	Target/Sparc/SparcISelLowering.cpp	/^static SDValue LowerDYNAMIC_STACKALLOC(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerDYNAMIC_STACKALLOC	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerDYNAMIC_STACKALLOC(SDValue Op,$/;"	f	class:X86TargetLowering
LowerDbgDeclare	Transforms/Utils/Local.cpp	/^bool llvm::LowerDbgDeclare(Function &F) {$/;"	f	class:llvm
LowerDextDins	Target/Mips/MCTargetDesc/MipsDirectObjLower.cpp	/^void Mips::LowerDextDins(MCInst& InstIn) {$/;"	f	class:Mips
LowerEH_RETURN	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerEH_RETURN(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerEH_SJLJ_LONGJMP	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerEH_SJLJ_LONGJMP(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerEH_SJLJ_SETJMP	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerEH_SJLJ_SETJMP(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerEXTRACT_SUBVECTOR	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerEXTRACT_SUBVECTOR(SDValue Op, const X86Subtarget *Subtarget,$/;"	f	file:
LowerEXTRACT_VECTOR_ELT	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerEXTRACT_VECTOR_ELT(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerEXTRACT_VECTOR_ELT	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerEXTRACT_VECTOR_ELT(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerEXTRACT_VECTOR_ELT	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerEXTRACT_VECTOR_ELT(SDValue Op,$/;"	f	class:X86TargetLowering
LowerEXTRACT_VECTOR_ELT_SSE4	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerEXTRACT_VECTOR_ELT_SSE4(SDValue Op,$/;"	f	class:X86TargetLowering
LowerExpectIntrinsic	Transforms/Utils/LowerExpectIntrinsic.cpp	/^    LowerExpectIntrinsic() : FunctionPass(ID) {$/;"	f	class:__anon482::LowerExpectIntrinsic
LowerExpectIntrinsic	Transforms/Utils/LowerExpectIntrinsic.cpp	/^  class LowerExpectIntrinsic : public FunctionPass {$/;"	c	namespace:__anon482	file:
LowerExternalSymbol	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerExternalSymbol(SDValue Op,$/;"	f	class:MSP430TargetLowering
LowerExternalSymbol	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerExternalSymbol(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerFABS	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::LowerFABS(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MipsTargetLowering
LowerFABS	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerFABS(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerFABS32	Target/Mips/MipsISelLowering.cpp	/^static SDValue LowerFABS32(SDValue Op, SelectionDAG &DAG, bool HasR2) {$/;"	f	file:
LowerFABS64	Target/Mips/MipsISelLowering.cpp	/^static SDValue LowerFABS64(SDValue Op, SelectionDAG &DAG, bool HasR2) {$/;"	f	file:
LowerFCOPYSIGN	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerFCOPYSIGN(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerFCOPYSIGN	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::LowerFCOPYSIGN(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MipsTargetLowering
LowerFCOPYSIGN	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerFCOPYSIGN(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerFCOPYSIGN32	Target/Mips/MipsISelLowering.cpp	/^static SDValue LowerFCOPYSIGN32(SDValue Op, SelectionDAG &DAG, bool HasR2) {$/;"	f	file:
LowerFCOPYSIGN64	Target/Mips/MipsISelLowering.cpp	/^static SDValue LowerFCOPYSIGN64(SDValue Op, SelectionDAG &DAG, bool HasR2) {$/;"	f	file:
LowerFGETSIGN	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerFGETSIGN(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerFLT_ROUNDS_	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerFLT_ROUNDS_(SDValue Op,$/;"	f	class:ARMTargetLowering
LowerFLT_ROUNDS_	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerFLT_ROUNDS_(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerFLT_ROUNDS_	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerFLT_ROUNDS_(SDValue Op,$/;"	f	class:X86TargetLowering
LowerFNEG	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerFNEG(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerFP_TO_INT	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerFP_TO_INT(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerFP_TO_INT	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerFP_TO_INT(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
LowerFP_TO_INT	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerFP_TO_INT(SDValue Op, SelectionDAG &DAG,$/;"	f	class:PPCTargetLowering
LowerFP_TO_SINT	Target/Sparc/SparcISelLowering.cpp	/^static SDValue LowerFP_TO_SINT(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerFP_TO_SINT	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerFP_TO_SINT(SDValue Op,$/;"	f	class:X86TargetLowering
LowerFP_TO_UINT	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerFP_TO_UINT(SDValue Op,$/;"	f	class:X86TargetLowering
LowerFRAMEADDR	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerFRAMEADDR(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerFRAMEADDR	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerFRAMEADDR(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:HexagonTargetLowering
LowerFRAMEADDR	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerFRAMEADDR(SDValue Op,$/;"	f	class:MSP430TargetLowering
LowerFRAMEADDR	Target/Mips/MipsISelLowering.cpp	/^LowerFRAMEADDR(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MipsTargetLowering
LowerFRAMEADDR	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerFRAMEADDR(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerFRAMEADDR	Target/Sparc/SparcISelLowering.cpp	/^static SDValue LowerFRAMEADDR(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerFRAMEADDR	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerFRAMEADDR(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerFRAMEADDR	Target/XCore/XCoreISelLowering.cpp	/^SDValue XCoreTargetLowering::LowerFRAMEADDR(SDValue Op,$/;"	f	class:XCoreTargetLowering
LowerFRAME_TO_ARGS_OFFSET	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerFRAME_TO_ARGS_OFFSET(SDValue Op,$/;"	f	class:X86TargetLowering
LowerFenceInst	Transforms/Scalar/LowerAtomic.cpp	/^static bool LowerFenceInst(FenceInst *FI) {$/;"	f	file:
LowerFormalArguments	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:ARMTargetLowering
LowerFormalArguments	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:SPUTargetLowering
LowerFormalArguments	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:HexagonTargetLowering
LowerFormalArguments	Target/MBlaze/MBlazeISelLowering.cpp	/^LowerFormalArguments(SDValue Chain, CallingConv::ID CallConv, bool isVarArg,$/;"	f	class:MBlazeTargetLowering
LowerFormalArguments	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:MSP430TargetLowering
LowerFormalArguments	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:MipsTargetLowering
LowerFormalArguments	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:NVPTXTargetLowering
LowerFormalArguments	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:PPCTargetLowering
LowerFormalArguments	Target/Sparc/SparcISelLowering.cpp	/^SparcTargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:SparcTargetLowering
LowerFormalArguments	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:X86TargetLowering
LowerFormalArguments	Target/XCore/XCoreISelLowering.cpp	/^XCoreTargetLowering::LowerFormalArguments(SDValue Chain,$/;"	f	class:XCoreTargetLowering
LowerFormalArguments_32SVR4	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::LowerFormalArguments_32SVR4($/;"	f	class:PPCTargetLowering
LowerFormalArguments_64SVR4	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::LowerFormalArguments_64SVR4($/;"	f	class:PPCTargetLowering
LowerFormalArguments_Darwin	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::LowerFormalArguments_Darwin($/;"	f	class:PPCTargetLowering
LowerGLOBALADDRESS	Target/Hexagon/HexagonISelLowering.cpp	/^SDValue HexagonTargetLowering::LowerGLOBALADDRESS(SDValue Op,$/;"	f	class:HexagonTargetLowering
LowerGLOBAL_OFFSET_TABLE	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerGLOBAL_OFFSET_TABLE(SDValue Op,$/;"	f	class:ARMTargetLowering
LowerGlobalAddress	Target/CellSPU/SPUISelLowering.cpp	/^LowerGlobalAddress(SDValue Op, SelectionDAG &DAG, const SPUSubtarget *ST) {$/;"	f	file:
LowerGlobalAddress	Target/MBlaze/MBlazeISelLowering.cpp	/^LowerGlobalAddress(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MBlazeTargetLowering
LowerGlobalAddress	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerGlobalAddress(SDValue Op,$/;"	f	class:MSP430TargetLowering
LowerGlobalAddress	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerGlobalAddress(SDValue Op,$/;"	f	class:MipsTargetLowering
LowerGlobalAddress	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::LowerGlobalAddress(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:NVPTXTargetLowering
LowerGlobalAddress	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerGlobalAddress(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerGlobalAddress	Target/Sparc/SparcISelLowering.cpp	/^SDValue SparcTargetLowering::LowerGlobalAddress(SDValue Op,$/;"	f	class:SparcTargetLowering
LowerGlobalAddress	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerGlobalAddress(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerGlobalAddress	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerGlobalAddress(const GlobalValue *GV, DebugLoc dl,$/;"	f	class:X86TargetLowering
LowerGlobalAddress	Target/XCore/XCoreISelLowering.cpp	/^LowerGlobalAddress(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerGlobalAddressDarwin	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerGlobalAddressDarwin(SDValue Op,$/;"	f	class:ARMTargetLowering
LowerGlobalAddressELF	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerGlobalAddressELF(SDValue Op,$/;"	f	class:ARMTargetLowering
LowerGlobalTLSAddress	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerGlobalTLSAddress(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerGlobalTLSAddress	Target/MBlaze/MBlazeISelLowering.cpp	/^LowerGlobalTLSAddress(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MBlazeTargetLowering
LowerGlobalTLSAddress	Target/Mips/MipsISelLowering.cpp	/^LowerGlobalTLSAddress(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:MipsTargetLowering
LowerGlobalTLSAddress	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerGlobalTLSAddress(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerGlobalTLSAddress	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerGlobalTLSAddress(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerGlobalTLSAddress	Target/XCore/XCoreISelLowering.cpp	/^LowerGlobalTLSAddress(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerI8Math	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerI8Math(SDValue Op, SelectionDAG &DAG, unsigned Opc,$/;"	f	file:
LowerINIT_TRAMPOLINE	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerINIT_TRAMPOLINE(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerINIT_TRAMPOLINE	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerINIT_TRAMPOLINE(SDValue Op,$/;"	f	class:X86TargetLowering
LowerINIT_TRAMPOLINE	Target/XCore/XCoreISelLowering.cpp	/^LowerINIT_TRAMPOLINE(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:XCoreTargetLowering
LowerINLINEASM	Target/Hexagon/HexagonISelLowering.cpp	/^SDValue HexagonTargetLowering::LowerINLINEASM(SDValue Op,$/;"	f	class:HexagonTargetLowering
LowerINSERT_SUBVECTOR	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerINSERT_SUBVECTOR(SDValue Op, const X86Subtarget *Subtarget,$/;"	f	file:
LowerINSERT_VECTOR_ELT	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerINSERT_VECTOR_ELT(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerINSERT_VECTOR_ELT	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerINSERT_VECTOR_ELT(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerINSERT_VECTOR_ELT	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerINSERT_VECTOR_ELT(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerINSERT_VECTOR_ELT_SSE4	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerINSERT_VECTOR_ELT_SSE4(SDValue Op,$/;"	f	class:X86TargetLowering
LowerINTRINSIC_WO_CHAIN	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerINTRINSIC_WO_CHAIN(SDValue Op, SelectionDAG &DAG,$/;"	f	class:ARMTargetLowering
LowerINTRINSIC_WO_CHAIN	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerINTRINSIC_WO_CHAIN(SDValue Op, SelectionDAG &DAG)$/;"	f	class:HexagonTargetLowering
LowerINTRINSIC_WO_CHAIN	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerINTRINSIC_WO_CHAIN(SDValue Op,$/;"	f	class:MipsTargetLowering
LowerINTRINSIC_WO_CHAIN	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerINTRINSIC_WO_CHAIN(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerINTRINSIC_WO_CHAIN	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerINTRINSIC_WO_CHAIN(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerINTRINSIC_W_CHAIN	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerINTRINSIC_W_CHAIN(SDValue Op,$/;"	f	class:MipsTargetLowering
LowerINTRINSIC_W_CHAIN	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerINTRINSIC_W_CHAIN(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerINT_TO_FP	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerINT_TO_FP(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerINT_TO_FP	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerINT_TO_FP(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
LowerIntrinsicCall	CodeGen/IntrinsicLowering.cpp	/^void IntrinsicLowering::LowerIntrinsicCall(CallInst *CI) {$/;"	f	class:IntrinsicLowering
LowerIntrinsics	CodeGen/GCStrategy.cpp	/^  class LowerIntrinsics : public FunctionPass {$/;"	c	namespace:__anon145	file:
LowerIntrinsics	CodeGen/GCStrategy.cpp	/^LowerIntrinsics::LowerIntrinsics()$/;"	f	class:LowerIntrinsics
LowerInvoke	Transforms/Utils/LowerInvoke.cpp	/^    explicit LowerInvoke(const TargetLowering *tli = NULL,$/;"	f	class:__anon474::LowerInvoke
LowerInvoke	Transforms/Utils/LowerInvoke.cpp	/^  class LowerInvoke : public FunctionPass {$/;"	c	namespace:__anon474	file:
LowerInvokePassID	Transforms/Utils/LowerInvoke.cpp	/^char &llvm::LowerInvokePassID = LowerInvoke::ID;$/;"	m	class:llvm	file:
LowerJumpTable	Target/CellSPU/SPUISelLowering.cpp	/^LowerJumpTable(SDValue Op, SelectionDAG &DAG, const SPUSubtarget *ST) {$/;"	f	file:
LowerJumpTable	Target/MBlaze/MBlazeISelLowering.cpp	/^LowerJumpTable(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MBlazeTargetLowering
LowerJumpTable	Target/Mips/MipsISelLowering.cpp	/^LowerJumpTable(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:MipsTargetLowering
LowerJumpTable	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerJumpTable(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:PPCTargetLowering
LowerJumpTable	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerJumpTable(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerLOAD	Target/CellSPU/SPUISelLowering.cpp	/^LowerLOAD(SDValue Op, SelectionDAG &DAG, const SPUSubtarget *ST) {$/;"	f	file:
LowerLOAD	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerLOAD(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MipsTargetLowering
LowerLOAD	Target/XCore/XCoreISelLowering.cpp	/^LowerLOAD(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:XCoreTargetLowering
LowerLOAD_SUB	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerLOAD_SUB(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerLabelRef	Target/PowerPC/PPCISelLowering.cpp	/^static SDValue LowerLabelRef(SDValue HiPart, SDValue LoPart, bool isPIC,$/;"	f	file:
LowerLargeShift	Target/Mips/MCTargetDesc/MipsDirectObjLower.cpp	/^void Mips::LowerLargeShift(MCInst& Inst) {$/;"	f	class:Mips
LowerLoadInst	Transforms/Scalar/LowerAtomic.cpp	/^static bool LowerLoadInst(LoadInst *LI) {$/;"	f	file:
LowerMEMBARRIER	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerMEMBARRIER(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
LowerMEMBARRIER	Target/Hexagon/HexagonISelLowering.cpp	/^SDValue HexagonTargetLowering::LowerMEMBARRIER(SDValue Op,$/;"	f	class:HexagonTargetLowering
LowerMEMBARRIER	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::LowerMEMBARRIER(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MipsTargetLowering
LowerMEMBARRIER	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerMEMBARRIER(SDValue Op, const X86Subtarget *Subtarget,$/;"	f	file:
LowerMUL	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerMUL(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerMUL	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerMUL(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:PPCTargetLowering
LowerMUL	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerMUL(SDValue Op, const X86Subtarget *Subtarget,$/;"	f	file:
LowerMemArgument	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerMemArgument(SDValue Chain,$/;"	f	class:X86TargetLowering
LowerMemOpCallTo	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerMemOpCallTo(SDValue Chain,$/;"	f	class:ARMTargetLowering
LowerMemOpCallTo	Target/PowerPC/PPCISelLowering.cpp	/^LowerMemOpCallTo(SelectionDAG &DAG, MachineFunction &MF, SDValue Chain,$/;"	f	file:
LowerMemOpCallTo	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerMemOpCallTo(SDValue Chain,$/;"	f	class:X86TargetLowering
LowerNegateToMultiply	Transforms/Scalar/Reassociate.cpp	/^static BinaryOperator *LowerNegateToMultiply(Instruction *Neg) {$/;"	f	file:
LowerOperand	Target/Mips/MipsMCInstLower.cpp	/^MCOperand MipsMCInstLower::LowerOperand(const MachineOperand &MO,$/;"	f	class:MipsMCInstLower
LowerOperation	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SDValue TargetLowering::LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:TargetLowering
LowerOperation	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerOperation	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::LowerOperation(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:SPUTargetLowering
LowerOperation	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:HexagonTargetLowering
LowerOperation	Target/MBlaze/MBlazeISelLowering.cpp	/^SDValue MBlazeTargetLowering::LowerOperation(SDValue Op,$/;"	f	class:MBlazeTargetLowering
LowerOperation	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerOperation(SDValue Op,$/;"	f	class:MSP430TargetLowering
LowerOperation	Target/Mips/MipsISelLowering.cpp	/^LowerOperation(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:MipsTargetLowering
LowerOperation	Target/NVPTX/NVPTXISelLowering.cpp	/^LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:NVPTXTargetLowering
LowerOperation	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:PPCTargetLowering
LowerOperation	Target/Sparc/SparcISelLowering.cpp	/^LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:SparcTargetLowering
LowerOperation	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerOperation	Target/XCore/XCoreISelLowering.cpp	/^LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:XCoreTargetLowering
LowerOperationWrapper	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void TargetLowering::LowerOperationWrapper(SDNode *N,$/;"	f	class:TargetLowering
LowerOperationWrapper	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::LowerOperationWrapper(SDNode *N,$/;"	f	class:MipsTargetLowering
LowerPPCMachineInstrToMCInst	Target/PowerPC/PPCMCInstLower.cpp	/^void llvm::LowerPPCMachineInstrToMCInst(const MachineInstr *MI, MCInst &OutMI,$/;"	f	class:llvm
LowerPREFETCH	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerPREFETCH(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
LowerREADCYCLECOUNTER	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerREADCYCLECOUNTER(SDValue Op, const X86Subtarget *Subtarget,$/;"	f	file:
LowerRETURNADDR	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerRETURNADDR(SDValue Op, SelectionDAG &DAG) const{$/;"	f	class:ARMTargetLowering
LowerRETURNADDR	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerRETURNADDR(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:HexagonTargetLowering
LowerRETURNADDR	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerRETURNADDR(SDValue Op,$/;"	f	class:MSP430TargetLowering
LowerRETURNADDR	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerRETURNADDR(SDValue Op,$/;"	f	class:MipsTargetLowering
LowerRETURNADDR	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerRETURNADDR(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerRETURNADDR	Target/Sparc/SparcISelLowering.cpp	/^static SDValue LowerRETURNADDR(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerRETURNADDR	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerRETURNADDR(SDValue Op,$/;"	f	class:X86TargetLowering
LowerReturn	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerReturn(SDValue Chain,$/;"	f	class:ARMTargetLowering
LowerReturn	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::LowerReturn(SDValue Chain,$/;"	f	class:SPUTargetLowering
LowerReturn	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerReturn(SDValue Chain,$/;"	f	class:HexagonTargetLowering
LowerReturn	Target/MBlaze/MBlazeISelLowering.cpp	/^LowerReturn(SDValue Chain, CallingConv::ID CallConv, bool isVarArg,$/;"	f	class:MBlazeTargetLowering
LowerReturn	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::LowerReturn(SDValue Chain,$/;"	f	class:MSP430TargetLowering
LowerReturn	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::LowerReturn(SDValue Chain,$/;"	f	class:MipsTargetLowering
LowerReturn	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::LowerReturn(SDValue Chain, CallingConv::ID CallConv,$/;"	f	class:NVPTXTargetLowering
LowerReturn	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::LowerReturn(SDValue Chain,$/;"	f	class:PPCTargetLowering
LowerReturn	Target/Sparc/SparcISelLowering.cpp	/^SparcTargetLowering::LowerReturn(SDValue Chain,$/;"	f	class:SparcTargetLowering
LowerReturn	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerReturn(SDValue Chain,$/;"	f	class:X86TargetLowering
LowerReturn	Target/XCore/XCoreISelLowering.cpp	/^XCoreTargetLowering::LowerReturn(SDValue Chain,$/;"	f	class:XCoreTargetLowering
LowerSCALAR_TO_VECTOR	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerSCALAR_TO_VECTOR(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerSCALAR_TO_VECTOR	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerSCALAR_TO_VECTOR(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerSCALAR_TO_VECTOR	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerSCALAR_TO_VECTOR(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerSDIV	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerSDIV(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerSDIV_v4i16	Target/ARM/ARMISelLowering.cpp	/^LowerSDIV_v4i16(SDValue N0, SDValue N1, DebugLoc dl, SelectionDAG &DAG) {$/;"	f	file:
LowerSDIV_v4i8	Target/ARM/ARMISelLowering.cpp	/^LowerSDIV_v4i8(SDValue X, SDValue Y, DebugLoc dl, SelectionDAG &DAG) {$/;"	f	file:
LowerSELECT	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerSELECT(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerSELECT	Target/Mips/MipsISelLowering.cpp	/^LowerSELECT(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:MipsTargetLowering
LowerSELECT	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerSELECT(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerSELECT_CC	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerSELECT_CC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
LowerSELECT_CC	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerSELECT_CC(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
LowerSELECT_CC	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerSELECT_CC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:HexagonTargetLowering
LowerSELECT_CC	Target/MBlaze/MBlazeISelLowering.cpp	/^SDValue MBlazeTargetLowering::LowerSELECT_CC(SDValue Op,$/;"	f	class:MBlazeTargetLowering
LowerSELECT_CC	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerSELECT_CC(SDValue Op,$/;"	f	class:MSP430TargetLowering
LowerSELECT_CC	Target/Mips/MipsISelLowering.cpp	/^LowerSELECT_CC(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:MipsTargetLowering
LowerSELECT_CC	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerSELECT_CC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:PPCTargetLowering
LowerSELECT_CC	Target/Sparc/SparcISelLowering.cpp	/^static SDValue LowerSELECT_CC(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerSELECT_CC	Target/XCore/XCoreISelLowering.cpp	/^LowerSELECT_CC(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerSETCC	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerSETCC(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
LowerSETCC	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerSETCC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MSP430TargetLowering
LowerSETCC	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerSETCC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MipsTargetLowering
LowerSETCC	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerSETCC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:PPCTargetLowering
LowerSETCC	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerSETCC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerSHL_PARTS	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerSHL_PARTS(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:PPCTargetLowering
LowerSIGN_EXTEND	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerSIGN_EXTEND(SDValue Op, SelectionDAG &DAG)$/;"	f	file:
LowerSIGN_EXTEND	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerSIGN_EXTEND(SDValue Op,$/;"	f	class:MSP430TargetLowering
LowerSIGN_EXTEND_INREG	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerSIGN_EXTEND_INREG(SDValue Op,$/;"	f	class:X86TargetLowering
LowerSINT_TO_FP	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerSINT_TO_FP(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerSINT_TO_FP	Target/Sparc/SparcISelLowering.cpp	/^static SDValue LowerSINT_TO_FP(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerSINT_TO_FP	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerSINT_TO_FP(SDValue Op,$/;"	f	class:X86TargetLowering
LowerSMUL_LOHI	Target/XCore/XCoreISelLowering.cpp	/^LowerSMUL_LOHI(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerSRA_PARTS	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerSRA_PARTS(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:PPCTargetLowering
LowerSRL_PARTS	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerSRL_PARTS(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:PPCTargetLowering
LowerSTACKRESTORE	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerSTACKRESTORE(SDValue Op, SelectionDAG &DAG,$/;"	f	class:PPCTargetLowering
LowerSTORE	Target/CellSPU/SPUISelLowering.cpp	/^LowerSTORE(SDValue Op, SelectionDAG &DAG, const SPUSubtarget *ST) {$/;"	f	file:
LowerSTORE	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerSTORE(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MipsTargetLowering
LowerSTORE	Target/XCore/XCoreISelLowering.cpp	/^LowerSTORE(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerSUB	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerSUB(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerShift	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerShift(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
LowerShift	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerShift(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerShiftLeftParts	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerShiftLeftParts(SDValue Op,$/;"	f	class:ARMTargetLowering
LowerShiftLeftParts	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerShiftLeftParts(SDValue Op,$/;"	f	class:MipsTargetLowering
LowerShiftParts	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerShiftParts(SDValue Op, SelectionDAG &DAG) const{$/;"	f	class:X86TargetLowering
LowerShiftRightParts	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::LowerShiftRightParts(SDValue Op,$/;"	f	class:ARMTargetLowering
LowerShiftRightParts	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerShiftRightParts(SDValue Op, SelectionDAG &DAG,$/;"	f	class:MipsTargetLowering
LowerShifts	Target/MSP430/MSP430ISelLowering.cpp	/^SDValue MSP430TargetLowering::LowerShifts(SDValue Op,$/;"	f	class:MSP430TargetLowering
LowerStoreInst	Transforms/Scalar/LowerAtomic.cpp	/^static bool LowerStoreInst(StoreInst *SI) {$/;"	f	file:
LowerSubReg32_Op0	Target/X86/X86MCInstLower.cpp	/^static void LowerSubReg32_Op0(MCInst &OutMI, unsigned NewOpc) {$/;"	f	file:
LowerSubregToReg	CodeGen/ExpandPostRAPseudos.cpp	/^bool ExpandPostRA::LowerSubregToReg(MachineInstr *MI) {$/;"	f	class:ExpandPostRA
LowerSwitch	Transforms/Utils/LowerSwitch.cpp	/^    LowerSwitch() : FunctionPass(ID) {$/;"	f	class:__anon466::LowerSwitch
LowerSwitch	Transforms/Utils/LowerSwitch.cpp	/^  class LowerSwitch : public FunctionPass {$/;"	c	namespace:__anon466	file:
LowerSwitchID	Transforms/Utils/LowerSwitch.cpp	/^char &llvm::LowerSwitchID = LowerSwitch::ID;$/;"	m	class:llvm	file:
LowerSymbolOperand	Target/MBlaze/MBlazeMCInstLower.cpp	/^LowerSymbolOperand(const MachineOperand &MO, MCSymbol *Sym) const {$/;"	f	class:MBlazeMCInstLower
LowerSymbolOperand	Target/MSP430/MSP430MCInstLower.cpp	/^LowerSymbolOperand(const MachineOperand &MO, MCSymbol *Sym) const {$/;"	f	class:MSP430MCInstLower
LowerSymbolOperand	Target/Mips/MipsMCInstLower.cpp	/^MCOperand MipsMCInstLower::LowerSymbolOperand(const MachineOperand &MO,$/;"	f	class:MipsMCInstLower
LowerSymbolOperand	Target/X86/X86MCInstLower.cpp	/^MCOperand X86MCInstLower::LowerSymbolOperand(const MachineOperand &MO,$/;"	f	class:X86MCInstLower
LowerTRUNCATE	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerTRUNCATE(SDValue Op, SelectionDAG &DAG)$/;"	f	file:
LowerTlsAddr	Target/X86/X86MCInstLower.cpp	/^static void LowerTlsAddr(MCStreamer &OutStreamer,$/;"	f	file:
LowerToBT	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerToBT(SDValue And, ISD::CondCode CC,$/;"	f	class:X86TargetLowering
LowerToByteSwap	CodeGen/IntrinsicLowering.cpp	/^bool IntrinsicLowering::LowerToByteSwap(CallInst *CI) {$/;"	f	class:IntrinsicLowering
LowerToTLSExecModel	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerToTLSExecModel(GlobalAddressSDNode *GA, SelectionDAG &DAG,$/;"	f	file:
LowerToTLSExecModels	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerToTLSExecModels(GlobalAddressSDNode *GA,$/;"	f	class:ARMTargetLowering
LowerToTLSGeneralDynamicModel	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::LowerToTLSGeneralDynamicModel(GlobalAddressSDNode *GA,$/;"	f	class:ARMTargetLowering
LowerToTLSGeneralDynamicModel32	Target/X86/X86ISelLowering.cpp	/^LowerToTLSGeneralDynamicModel32(GlobalAddressSDNode *GA, SelectionDAG &DAG,$/;"	f	file:
LowerToTLSGeneralDynamicModel64	Target/X86/X86ISelLowering.cpp	/^LowerToTLSGeneralDynamicModel64(GlobalAddressSDNode *GA, SelectionDAG &DAG,$/;"	f	file:
LowerToTLSLocalDynamicModel	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerToTLSLocalDynamicModel(GlobalAddressSDNode *GA,$/;"	f	file:
LowerUDIV	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerUDIV(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerUINT_TO_FP	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerUINT_TO_FP(SDValue Op,$/;"	f	class:X86TargetLowering
LowerUINT_TO_FP_i32	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerUINT_TO_FP_i32(SDValue Op,$/;"	f	class:X86TargetLowering
LowerUINT_TO_FP_i64	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerUINT_TO_FP_i64(SDValue Op,$/;"	f	class:X86TargetLowering
LowerUMUL_LOHI	Target/XCore/XCoreISelLowering.cpp	/^LowerUMUL_LOHI(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerUnaryToTwoAddr	Target/X86/X86MCInstLower.cpp	/^static void LowerUnaryToTwoAddr(MCInst &OutMI, unsigned NewOpc) {$/;"	f	file:
LowerV2I64Splat	Target/CellSPU/SPUISelLowering.cpp	/^SPU::LowerV2I64Splat(EVT OpVT, SelectionDAG& DAG, uint64_t SplatVal,$/;"	f	class:SPU
LowerVAARG	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerVAARG(SDValue Op, SelectionDAG &DAG,$/;"	f	class:PPCTargetLowering
LowerVAARG	Target/Sparc/SparcISelLowering.cpp	/^static SDValue LowerVAARG(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerVAARG	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerVAARG(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerVAARG	Target/XCore/XCoreISelLowering.cpp	/^LowerVAARG(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerVACOPY	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerVACOPY(SDValue Op, const X86Subtarget *Subtarget,$/;"	f	file:
LowerVASTART	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerVASTART(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerVASTART	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::LowerVASTART(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:HexagonTargetLowering
LowerVASTART	Target/MBlaze/MBlazeISelLowering.cpp	/^SDValue MBlazeTargetLowering::LowerVASTART(SDValue Op,$/;"	f	class:MBlazeTargetLowering
LowerVASTART	Target/Mips/MipsISelLowering.cpp	/^SDValue MipsTargetLowering::LowerVASTART(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:MipsTargetLowering
LowerVASTART	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerVASTART(SDValue Op, SelectionDAG &DAG,$/;"	f	class:PPCTargetLowering
LowerVASTART	Target/Sparc/SparcISelLowering.cpp	/^static SDValue LowerVASTART(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
LowerVASTART	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerVASTART(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerVASTART	Target/XCore/XCoreISelLowering.cpp	/^LowerVASTART(SDValue Op, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
LowerVECTOR_SHUFFLE	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerVECTOR_SHUFFLE(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerVECTOR_SHUFFLE	Target/CellSPU/SPUISelLowering.cpp	/^static SDValue LowerVECTOR_SHUFFLE(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerVECTOR_SHUFFLE	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::LowerVECTOR_SHUFFLE(SDValue Op,$/;"	f	class:PPCTargetLowering
LowerVECTOR_SHUFFLE	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerVECTOR_SHUFFLE(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerVECTOR_SHUFFLE_128v4	Target/X86/X86ISelLowering.cpp	/^LowerVECTOR_SHUFFLE_128v4(ShuffleVectorSDNode *SVOp, SelectionDAG &DAG) {$/;"	f	file:
LowerVECTOR_SHUFFLE_256	Target/X86/X86ISelLowering.cpp	/^LowerVECTOR_SHUFFLE_256(ShuffleVectorSDNode *SVOp, SelectionDAG &DAG) {$/;"	f	file:
LowerVECTOR_SHUFFLEtoBlend	Target/X86/X86ISelLowering.cpp	/^LowerVECTOR_SHUFFLEtoBlend(ShuffleVectorSDNode *SVOp,$/;"	f	file:
LowerVECTOR_SHUFFLEv16i8	Target/X86/X86ISelLowering.cpp	/^SDValue LowerVECTOR_SHUFFLEv16i8(ShuffleVectorSDNode *SVOp,$/;"	f	file:
LowerVECTOR_SHUFFLEv32i8	Target/X86/X86ISelLowering.cpp	/^SDValue LowerVECTOR_SHUFFLEv32i8(ShuffleVectorSDNode *SVOp,$/;"	f	file:
LowerVECTOR_SHUFFLEv8i16	Target/X86/X86ISelLowering.cpp	/^LowerVECTOR_SHUFFLEv8i16(SDValue Op, const X86Subtarget *Subtarget,$/;"	f	file:
LowerVECTOR_SHUFFLEv8i8	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerVECTOR_SHUFFLEv8i8(SDValue Op,$/;"	f	file:
LowerVSETCC	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerVSETCC(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerVSETCC	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerVSETCC(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerVectorAllZeroTest	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::LowerVectorAllZeroTest(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerVectorBroadcast	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::LowerVectorBroadcast(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
LowerVectorFP_TO_INT	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerVectorFP_TO_INT(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerVectorINT_TO_FP	Target/ARM/ARMISelLowering.cpp	/^static SDValue LowerVectorINT_TO_FP(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerXALUO	Target/X86/X86ISelLowering.cpp	/^static SDValue LowerXALUO(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
LowerXConstraint	CodeGen/SelectionDAG/TargetLowering.cpp	/^const char *TargetLowering::LowerXConstraint(EVT ConstraintVT) const{$/;"	f	class:TargetLowering
LowerXConstraint	Target/X86/X86ISelLowering.cpp	/^LowerXConstraint(EVT ConstraintVT) const {$/;"	f	class:X86TargetLowering
LoweredPHIMap	CodeGen/PHIElimination.cpp	/^                     MachineInstrExpressionTrait> LoweredPHIMap;$/;"	t	class:__anon164::PHIElimination	file:
LoweredPHIRecord	Transforms/InstCombine/InstCombinePHI.cpp	/^  LoweredPHIRecord(PHINode *pn, unsigned Sh)$/;"	f	struct:__anon603::LoweredPHIRecord
LoweredPHIRecord	Transforms/InstCombine/InstCombinePHI.cpp	/^  LoweredPHIRecord(PHINode *pn, unsigned Sh, Type *Ty)$/;"	f	struct:__anon603::LoweredPHIRecord
LoweredPHIRecord	Transforms/InstCombine/InstCombinePHI.cpp	/^struct LoweredPHIRecord {$/;"	s	namespace:__anon603	file:
LoweredPHIs	CodeGen/PHIElimination.cpp	/^    LoweredPHIMap LoweredPHIs;$/;"	m	class:__anon164::PHIElimination	file:
Lowering	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    const MSP430TargetLowering &Lowering;$/;"	m	class:__anon395::MSP430DAGToDAGISel	file:
Lowering	Target/XCore/XCoreISelDAGToDAG.cpp	/^    const XCoreTargetLowering &Lowering;$/;"	m	class:__anon334::XCoreDAGToDAGISel	file:
LsdaEncoding	MC/MCDwarf.cpp	/^    unsigned LsdaEncoding;$/;"	m	struct:__anon224::CIEKey	file:
M	Analysis/AliasAnalysisCounter.cpp	/^    Module *M;$/;"	m	class:__anon43::AliasAnalysisCounter	file:
M	AsmParser/LLParser.h	/^    Module *M;$/;"	m	class:llvm::LLParser
M	CodeGen/StackProtector.cpp	/^    Module *M;$/;"	m	class:__anon130::StackProtector	file:
M	ExecutionEngine/JIT/JIT.h	/^  Module *M;               \/\/ Module used to create the PM$/;"	m	class:llvm::JITState
M	ExecutionEngine/MCJIT/MCJIT.h	/^  Module *M;$/;"	m	class:llvm::MCJIT
M	Transforms/Instrumentation/GCOVProfiling.cpp	/^    Module *M;$/;"	m	class:__anon489::GCOVProfiler	file:
MACCS	Target/XCore/XCoreISelLowering.h	/^      MACCS,$/;"	e	enum:llvm::XCoreISD::NodeType
MACCU	Target/XCore/XCoreISelLowering.h	/^      MACCU,$/;"	e	enum:llvm::XCoreISD::NodeType
MADDU_DSP	Target/Mips/MipsISelLowering.h	/^      MADDU_DSP,$/;"	e	enum:llvm::MipsISD::NodeType
MADD_DSP	Target/Mips/MipsISelLowering.h	/^      MADD_DSP,$/;"	e	enum:llvm::MipsISD::NodeType
MAGIC1	Support/regex2.h	41;"	d
MAGIC2	Support/regex2.h	128;"	d
MAI	ExecutionEngine/JIT/JITDwarfEmitter.h	/^  const MCAsmInfo *MAI;$/;"	m	class:llvm::JITDwarfEmitter
MAI	MC/MCAsmStreamer.cpp	/^  const MCAsmInfo &MAI;$/;"	m	class:__anon214::MCAsmStreamer	file:
MAI	MC/MCDisassembler/Disassembler.h	/^  llvm::OwningPtr<const llvm::MCAsmInfo> MAI;$/;"	m	class:llvm::LLVMDisasmContext
MAI	MC/MCParser/AsmParser.cpp	/^  const MCAsmInfo &MAI;$/;"	m	class:__anon211::AsmParser	file:
MAI	Target/X86/X86MCInstLower.cpp	/^  const MCAsmInfo &MAI;$/;"	m	class:__anon380::X86MCInstLower	file:
MAP	Support/regcomp.c	956;"	d	file:
MAQ_SA_W_PHL	Target/Mips/MipsISelLowering.h	/^      MAQ_SA_W_PHL,$/;"	e	enum:llvm::MipsISD::NodeType
MAQ_SA_W_PHR	Target/Mips/MipsISelLowering.h	/^      MAQ_SA_W_PHR,$/;"	e	enum:llvm::MipsISD::NodeType
MAQ_S_W_PHL	Target/Mips/MipsISelLowering.h	/^      MAQ_S_W_PHL,$/;"	e	enum:llvm::MipsISD::NodeType
MAQ_S_W_PHR	Target/Mips/MipsISelLowering.h	/^      MAQ_S_W_PHR,$/;"	e	enum:llvm::MipsISD::NodeType
MAX_HEADER_SIZE	Transforms/Scalar/LoopRotation.cpp	32;"	d	file:
MAX_LOOP_DISTANCE	Target/Hexagon/HexagonHardwareLoops.cpp	/^    static const unsigned MAX_LOOP_DISTANCE = 200;$/;"	m	struct:__anon408::HexagonFixupHwLoops	file:
MAX_SPECIAL_ADDR_DELTA	MC/MCDwarf.cpp	36;"	d	file:
MAX_STACK_SLOT	CodeGen/VirtRegMap.h	/^      MAX_STACK_SLOT = (1L << 18)-1$/;"	e	enum:llvm::VirtRegMap::__anon147
MAdd	Target/Mips/MipsISelLowering.h	/^      MAdd,$/;"	e	enum:llvm::MipsISD::NodeType
MAddu	Target/Mips/MipsISelLowering.h	/^      MAddu,$/;"	e	enum:llvm::MipsISD::NodeType
MAttributes	Bitcode/Reader/BitcodeReader.h	/^  std::vector<AttrListPtr> MAttributes;$/;"	m	class:llvm::BitcodeReader
MBB	CodeGen/RegAllocFast.cpp	/^    MachineBasicBlock *MBB;$/;"	m	class:__anon140::RAFast	file:
MBB	CodeGen/SelectionDAG/InstrEmitter.h	/^  MachineBasicBlock *MBB;$/;"	m	class:llvm::InstrEmitter
MBB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *MBB;$/;"	m	struct:llvm::SelectionDAGBuilder::JumpTable
MBB	CodeGen/SplitKit.h	/^    MachineBasicBlock *MBB;$/;"	m	struct:llvm::SplitAnalysis::BlockInfo
MBB	Target/ARM/ARMConstantPoolValue.h	/^  const MachineBasicBlock *MBB; \/\/ Machine basic block.$/;"	m	class:llvm::ARMConstantPoolMBB
MBB	Target/X86/X86FloatingPoint.cpp	/^    MachineBasicBlock *MBB;     \/\/ Current basic block$/;"	m	struct:__anon386::FPS	file:
MBBI	Target/ARM/ARMLoadStoreOptimizer.cpp	/^      MachineBasicBlock::iterator MBBI;$/;"	m	struct:__anon303::ARMLoadStoreOpt::MemOpQueueEntry	file:
MBBInfo	Target/Mips/MipsLongBranch.cpp	/^    MBBInfo() : Size(0), HasLongBranch(false), Br(0) {}$/;"	f	struct:__anon437::MBBInfo
MBBInfo	Target/Mips/MipsLongBranch.cpp	/^  struct MBBInfo {$/;"	s	namespace:__anon437	file:
MBBInfoMap	CodeGen/MachineVerifier.cpp	/^    DenseMap<const MachineBasicBlock*, BBInfo> MBBInfoMap;$/;"	m	struct:__anon139::MachineVerifier	file:
MBBInfos	Target/Mips/MipsLongBranch.cpp	/^    SmallVector<MBBInfo, 16> MBBInfos;$/;"	m	class:__anon437::MipsLongBranch	file:
MBBLocations	ExecutionEngine/JIT/JITEmitter.cpp	/^    std::vector<uintptr_t> MBBLocations;$/;"	m	class:__anon182::JITEmitter	file:
MBFI	CodeGen/MachineBlockPlacement.cpp	/^  const MachineBlockFrequencyInfo *MBFI;$/;"	m	class:__anon107::MachineBlockPlacement	file:
MBFI	CodeGen/MachineBlockPlacement.cpp	/^  const MachineBlockFrequencyInfo *MBFI;$/;"	m	class:__anon109::MachineBlockPlacementStats	file:
MBLAZEDISASSEMBLER_H	Target/MBlaze/Disassembler/MBlazeDisassembler.h	16;"	d
MBLAZEINSTPRINTER_H	Target/MBlaze/InstPrinter/MBlazeInstPrinter.h	15;"	d
MBLAZEINSTRUCTIONINFO_H	Target/MBlaze/MBlazeInstrInfo.h	15;"	d
MBLAZEINTRINSICS_H	Target/MBlaze/MBlazeIntrinsicInfo.h	14;"	d
MBLAZEMCTARGETDESC_H	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.h	15;"	d
MBLAZEREGISTERINFO_H	Target/MBlaze/MBlazeRegisterInfo.h	16;"	d
MBLAZERELOCATIONS_H	Target/MBlaze/MBlazeRelocations.h	15;"	d
MBLAZESELECTIONDAGINFO_H	Target/MBlaze/MBlazeSelectionDAGInfo.h	15;"	d
MBLAZESUBTARGET_H	Target/MBlaze/MBlazeSubtarget.h	15;"	d
MBLAZETARGETASMINFO_H	Target/MBlaze/MCTargetDesc/MBlazeMCAsmInfo.h	15;"	d
MBLAZE_ELF_WRITER_INFO_H	Target/MBlaze/MBlazeELFWriterInfo.h	15;"	d
MBLAZE_FRAMEINFO_H	Target/MBlaze/MBlazeFrameLowering.h	15;"	d
MBLAZE_MACHINE_FUNCTION_INFO_H	Target/MBlaze/MBlazeMachineFunction.h	15;"	d
MBLAZE_MCINSTLOWER_H	Target/MBlaze/MBlazeMCInstLower.h	11;"	d
MBLAZE_TARGETMACHINE_H	Target/MBlaze/MBlazeTargetMachine.h	15;"	d
MBOpt	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } MBOpt;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon267	file:
MBPI	CodeGen/IfConversion.cpp	/^    const MachineBranchProbabilityInfo *MBPI;$/;"	m	class:__anon99::IfConverter	file:
MBPI	CodeGen/MachineBlockPlacement.cpp	/^  const MachineBranchProbabilityInfo *MBPI;$/;"	m	class:__anon107::MachineBlockPlacement	file:
MBPI	CodeGen/MachineBlockPlacement.cpp	/^  const MachineBranchProbabilityInfo *MBPI;$/;"	m	class:__anon109::MachineBlockPlacementStats	file:
MBlaze	Target/MBlaze/MBlazeInstrInfo.h	/^namespace MBlaze {$/;"	n	namespace:llvm
MBlaze	Target/MBlaze/MBlazeRegisterInfo.h	/^namespace MBlaze {$/;"	n	namespace:llvm
MBlaze	Target/MBlaze/MBlazeRelocations.h	/^  namespace MBlaze {$/;"	n	namespace:llvm
MBlazeAsmBackend	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^  MBlazeAsmBackend(const Target &T)$/;"	f	class:__anon455::MBlazeAsmBackend
MBlazeAsmBackend	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^class MBlazeAsmBackend : public MCAsmBackend {$/;"	c	namespace:__anon455	file:
MBlazeAsmLexer	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^    MBlazeAsmLexer(const Target &T, const MCRegisterInfo &MRI,$/;"	f	class:__anon453::MBlazeAsmLexer
MBlazeAsmLexer	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^  class MBlazeAsmLexer : public MBlazeBaseAsmLexer {$/;"	c	namespace:__anon453	file:
MBlazeAsmParser	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  MBlazeAsmParser(MCSubtargetInfo &_STI, MCAsmParser &_Parser)$/;"	f	class:__anon446::MBlazeAsmParser
MBlazeAsmParser	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^class MBlazeAsmParser : public MCTargetAsmParser {$/;"	c	namespace:__anon446	file:
MBlazeAsmPrinter	Target/MBlaze/MBlazeAsmPrinter.cpp	/^    explicit MBlazeAsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:__anon460::MBlazeAsmPrinter
MBlazeAsmPrinter	Target/MBlaze/MBlazeAsmPrinter.cpp	/^  class MBlazeAsmPrinter : public AsmPrinter {$/;"	c	namespace:__anon460	file:
MBlazeBASEINFO_H	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	18;"	d
MBlazeBaseAsmLexer	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^    MBlazeBaseAsmLexer(const Target &T, const MCAsmInfo &MAI)$/;"	f	class:__anon453::MBlazeBaseAsmLexer
MBlazeBaseAsmLexer	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^  class MBlazeBaseAsmLexer : public MCTargetAsmLexer {$/;"	c	namespace:__anon453	file:
MBlazeCC	Target/MBlaze/MBlazeISelLowering.h	/^  namespace MBlazeCC {$/;"	n	namespace:llvm
MBlazeCCToString	Target/MBlaze/MBlazeISelLowering.h	/^    inline static const char *MBlazeCCToString(CC cc) {$/;"	f	namespace:llvm::MBlazeCC
MBlazeCodeEmitter	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	218;"	d	file:
MBlazeCodeEmitter	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	221;"	d	file:
MBlazeDAGToDAGISel	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^  explicit MBlazeDAGToDAGISel(MBlazeTargetMachine &tm) :$/;"	f	class:__anon461::MBlazeDAGToDAGISel
MBlazeDAGToDAGISel	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^class MBlazeDAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon461	file:
MBlazeDisassembler	Target/MBlaze/Disassembler/MBlazeDisassembler.h	/^  MBlazeDisassembler(const MCSubtargetInfo &STI) :$/;"	f	class:llvm::MBlazeDisassembler
MBlazeDisassembler	Target/MBlaze/Disassembler/MBlazeDisassembler.h	/^class MBlazeDisassembler : public MCDisassembler {$/;"	c	namespace:llvm
MBlazeELFObjectWriter	Target/MBlaze/MCTargetDesc/MBlazeELFObjectWriter.cpp	/^  class MBlazeELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anon457	file:
MBlazeELFObjectWriter	Target/MBlaze/MCTargetDesc/MBlazeELFObjectWriter.cpp	/^MBlazeELFObjectWriter::MBlazeELFObjectWriter(uint8_t OSABI)$/;"	f	class:MBlazeELFObjectWriter
MBlazeELFWriterInfo	Target/MBlaze/MBlazeELFWriterInfo.cpp	/^MBlazeELFWriterInfo::MBlazeELFWriterInfo(TargetMachine &TM)$/;"	f	class:MBlazeELFWriterInfo
MBlazeELFWriterInfo	Target/MBlaze/MBlazeELFWriterInfo.h	/^  class MBlazeELFWriterInfo : public TargetELFWriterInfo {$/;"	c	namespace:llvm
MBlazeFCCToString	Target/MBlaze/MBlazeInstrInfo.h	/^  inline static const char *MBlazeFCCToString(MBlaze::CondCode CC) {$/;"	f	namespace:llvm::MBlaze
MBlazeFIHolder	Target/MBlaze/MBlazeMachineFunction.h	/^    MBlazeFIHolder(int FrameIndex, int StackPointerOffset)$/;"	f	struct:llvm::MBlazeFunctionInfo::MBlazeFIHolder
MBlazeFIHolder	Target/MBlaze/MBlazeMachineFunction.h	/^  struct MBlazeFIHolder {$/;"	s	class:llvm::MBlazeFunctionInfo
MBlazeFrameLowering	Target/MBlaze/MBlazeFrameLowering.h	/^  explicit MBlazeFrameLowering(const MBlazeSubtarget &sti)$/;"	f	class:llvm::MBlazeFrameLowering
MBlazeFrameLowering	Target/MBlaze/MBlazeFrameLowering.h	/^class MBlazeFrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
MBlazeFunctionInfo	Target/MBlaze/MBlazeMachineFunction.h	/^  MBlazeFunctionInfo(MachineFunction& MF)$/;"	f	class:llvm::MBlazeFunctionInfo
MBlazeFunctionInfo	Target/MBlaze/MBlazeMachineFunction.h	/^class MBlazeFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
MBlazeII	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^namespace MBlazeII {$/;"	n	namespace:llvm
MBlazeISD	Target/MBlaze/MBlazeISelLowering.h	/^  namespace MBlazeISD {$/;"	n	namespace:llvm
MBlazeISELLOWERING_H	Target/MBlaze/MBlazeISelLowering.h	16;"	d
MBlazeInstPrinter	Target/MBlaze/InstPrinter/MBlazeInstPrinter.h	/^    MBlazeInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,$/;"	f	class:llvm::MBlazeInstPrinter
MBlazeInstPrinter	Target/MBlaze/InstPrinter/MBlazeInstPrinter.h	/^  class MBlazeInstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
MBlazeInstrInfo	Target/MBlaze/MBlazeInstrInfo.cpp	/^MBlazeInstrInfo::MBlazeInstrInfo(MBlazeTargetMachine &tm)$/;"	f	class:MBlazeInstrInfo
MBlazeInstrInfo	Target/MBlaze/MBlazeInstrInfo.h	/^class MBlazeInstrInfo : public MBlazeGenInstrInfo {$/;"	c	namespace:llvm
MBlazeIntrinsicInfo	Target/MBlaze/MBlazeIntrinsicInfo.h	/^  class MBlazeIntrinsicInfo : public TargetIntrinsicInfo {$/;"	c	namespace:llvm
MBlazeMCAsmInfo	Target/MBlaze/MCTargetDesc/MBlazeMCAsmInfo.cpp	/^MBlazeMCAsmInfo::MBlazeMCAsmInfo() {$/;"	f	class:MBlazeMCAsmInfo
MBlazeMCAsmInfo	Target/MBlaze/MCTargetDesc/MBlazeMCAsmInfo.h	/^  class MBlazeMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
MBlazeMCCodeEmitter	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  MBlazeMCCodeEmitter(const MCInstrInfo &mcii, const MCSubtargetInfo &sti,$/;"	f	class:__anon454::MBlazeMCCodeEmitter
MBlazeMCCodeEmitter	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^class MBlazeMCCodeEmitter : public MCCodeEmitter {$/;"	c	namespace:__anon454	file:
MBlazeMCInstLower	Target/MBlaze/MBlazeMCInstLower.h	/^  MBlazeMCInstLower(MCContext &ctx, AsmPrinter &printer)$/;"	f	class:llvm::MBlazeMCInstLower
MBlazeMCInstLower	Target/MBlaze/MBlazeMCInstLower.h	/^class LLVM_LIBRARY_VISIBILITY MBlazeMCInstLower {$/;"	c	namespace:llvm
MBlazeOperand	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  MBlazeOperand(KindTy K) : MCParsedAsmOperand(), Kind(K) {}$/;"	f	struct:__anon446::MBlazeOperand
MBlazeOperand	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  MBlazeOperand(const MBlazeOperand &o) : MCParsedAsmOperand() {$/;"	f	struct:__anon446::MBlazeOperand
MBlazeOperand	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^struct MBlazeOperand : public MCParsedAsmOperand {$/;"	s	namespace:__anon446	file:
MBlazePassConfig	Target/MBlaze/MBlazeTargetMachine.cpp	/^  MBlazePassConfig(MBlazeTargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon459::MBlazePassConfig
MBlazePassConfig	Target/MBlaze/MBlazeTargetMachine.cpp	/^class MBlazePassConfig : public TargetPassConfig {$/;"	c	namespace:__anon459	file:
MBlazeRegisterInfo	Target/MBlaze/MBlazeRegisterInfo.cpp	/^MBlazeRegisterInfo(const MBlazeSubtarget &ST, const TargetInstrInfo &tii)$/;"	f	class:MBlazeRegisterInfo
MBlazeRegisterInfo	Target/MBlaze/MBlazeRegisterInfo.h	/^struct MBlazeRegisterInfo : public MBlazeGenRegisterInfo {$/;"	s	namespace:llvm
MBlazeSelectionDAGInfo	Target/MBlaze/MBlazeSelectionDAGInfo.cpp	/^MBlazeSelectionDAGInfo::MBlazeSelectionDAGInfo(const MBlazeTargetMachine &TM)$/;"	f	class:MBlazeSelectionDAGInfo
MBlazeSelectionDAGInfo	Target/MBlaze/MBlazeSelectionDAGInfo.h	/^class MBlazeSelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
MBlazeSubtarget	Target/MBlaze/MBlazeSubtarget.cpp	/^MBlazeSubtarget::MBlazeSubtarget(const std::string &TT,$/;"	f	class:MBlazeSubtarget
MBlazeSubtarget	Target/MBlaze/MBlazeSubtarget.h	/^class MBlazeSubtarget : public MBlazeGenSubtargetInfo {$/;"	c	namespace:llvm
MBlazeTargetLowering	Target/MBlaze/MBlazeISelLowering.cpp	/^MBlazeTargetLowering::MBlazeTargetLowering(MBlazeTargetMachine &TM)$/;"	f	class:MBlazeTargetLowering
MBlazeTargetLowering	Target/MBlaze/MBlazeISelLowering.h	/^  class MBlazeTargetLowering : public TargetLowering  {$/;"	c	namespace:llvm
MBlazeTargetMachine	Target/MBlaze/MBlazeTargetMachine.cpp	/^MBlazeTargetMachine(const Target &T, StringRef TT,$/;"	f	class:MBlazeTargetMachine
MBlazeTargetMachine	Target/MBlaze/MBlazeTargetMachine.h	/^  class MBlazeTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
MBlazeTargetObjectFile	Target/MBlaze/MBlazeTargetObjectFile.h	/^  class MBlazeTargetObjectFile : public TargetLoweringObjectFileELF {$/;"	c	namespace:llvm
MC	TableGen/TGParser.cpp	/^  MultiClass *MC;$/;"	m	struct:llvm::SubMultiClassReference	file:
MCAsmBackend	MC/MCAsmBackend.cpp	/^MCAsmBackend::MCAsmBackend()$/;"	f	class:MCAsmBackend
MCAsmInfo	MC/MCAsmInfo.cpp	/^MCAsmInfo::MCAsmInfo() {$/;"	f	class:MCAsmInfo
MCAsmInfoCOFF	MC/MCAsmInfoCOFF.cpp	/^MCAsmInfoCOFF::MCAsmInfoCOFF() {$/;"	f	class:MCAsmInfoCOFF
MCAsmInfoDarwin	MC/MCAsmInfoDarwin.cpp	/^MCAsmInfoDarwin::MCAsmInfoDarwin() {$/;"	f	class:MCAsmInfoDarwin
MCAsmInfoGNUCOFF	MC/MCAsmInfoCOFF.cpp	/^MCAsmInfoGNUCOFF::MCAsmInfoGNUCOFF() {$/;"	f	class:MCAsmInfoGNUCOFF
MCAsmInfoMicrosoft	MC/MCAsmInfoCOFF.cpp	/^MCAsmInfoMicrosoft::MCAsmInfoMicrosoft() {$/;"	f	class:MCAsmInfoMicrosoft
MCAsmLayout	MC/MCAssembler.cpp	/^MCAsmLayout::MCAsmLayout(MCAssembler &Asm)$/;"	f	class:MCAsmLayout
MCAsmLexer	MC/MCParser/MCAsmLexer.cpp	/^MCAsmLexer::MCAsmLexer() : CurTok(AsmToken::Error, StringRef()),$/;"	f	class:MCAsmLexer
MCAsmParser	MC/MCParser/MCAsmParser.cpp	/^MCAsmParser::MCAsmParser() : TargetParser(0), ShowParsedOperands(0) {$/;"	f	class:MCAsmParser
MCAsmParserExtension	MC/MCParser/MCAsmParserExtension.cpp	/^MCAsmParserExtension::MCAsmParserExtension() :$/;"	f	class:MCAsmParserExtension
MCAsmStreamer	MC/MCAsmStreamer.cpp	/^  MCAsmStreamer(MCContext &Context, formatted_raw_ostream &os,$/;"	f	class:__anon214::MCAsmStreamer
MCAsmStreamer	MC/MCAsmStreamer.cpp	/^class MCAsmStreamer : public MCStreamer {$/;"	c	namespace:__anon214	file:
MCAssembler	MC/MCAssembler.cpp	/^MCAssembler::MCAssembler(MCContext &Context_, MCAsmBackend &Backend_,$/;"	f	class:MCAssembler
MCCodeEmitter	MC/MCCodeEmitter.cpp	/^MCCodeEmitter::MCCodeEmitter() {$/;"	f	class:MCCodeEmitter
MCContext	MC/MCContext.cpp	/^MCContext::MCContext(const MCAsmInfo &mai, const MCRegisterInfo &mri,$/;"	f	class:MCContext
MCData	MC/WinCOFFObjectWriter.cpp	/^  MCSectionData const *MCData;$/;"	m	class:__anon222::COFFSection	file:
MCData	MC/WinCOFFObjectWriter.cpp	/^  MCSymbolData const *MCData;$/;"	m	class:__anon222::COFFSymbol	file:
MCE	Target/ARM/ARMCodeEmitter.cpp	/^    JITCodeEmitter            &MCE;$/;"	m	class:__anon297::ARMCodeEmitter	file:
MCE	Target/Mips/MipsCodeEmitter.cpp	/^  JITCodeEmitter &MCE;$/;"	m	class:__anon438::MipsCodeEmitter	file:
MCE	Target/PowerPC/PPCCodeEmitter.cpp	/^    JITCodeEmitter &MCE;$/;"	m	class:__anon324::PPCCodeEmitter	file:
MCE	Target/X86/X86CodeEmitter.cpp	/^    CodeEmitter         &MCE;$/;"	m	class:__anon379::Emitter	file:
MCELF	MC/MCELF.h	/^class MCELF {$/;"	c	namespace:llvm
MCELFObjectTargetWriter	MC/MCELFObjectTargetWriter.cpp	/^MCELFObjectTargetWriter::MCELFObjectTargetWriter(bool Is64Bit_,$/;"	f	class:MCELFObjectTargetWriter
MCELFStreamer	MC/MCELFStreamer.cpp	/^  MCELFStreamer(MCContext &Context, MCAsmBackend &TAB,$/;"	f	class:__anon215::MCELFStreamer
MCELFStreamer	MC/MCELFStreamer.cpp	/^class MCELFStreamer : public MCObjectStreamer {$/;"	c	namespace:__anon215	file:
MCFragment	MC/MCAssembler.cpp	/^MCFragment::MCFragment() : Kind(FragmentType(~0)) {$/;"	f	class:MCFragment
MCFragment	MC/MCAssembler.cpp	/^MCFragment::MCFragment(FragmentType _Kind, MCSectionData *_Parent)$/;"	f	class:MCFragment
MCII	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  const MCInstrInfo &MCII;$/;"	m	class:__anon283::ARMMCCodeEmitter	file:
MCII	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  const MCInstrInfo &MCII;$/;"	m	class:__anon454::MBlazeMCCodeEmitter	file:
MCII	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^  const MCInstrInfo &MCII;$/;"	m	class:__anon432::MipsMCCodeEmitter	file:
MCII	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  const MCInstrInfo &MCII;$/;"	m	class:__anon353::X86MCCodeEmitter	file:
MCInstLowering	Target/Mips/MipsAsmPrinter.h	/^  MipsMCInstLower MCInstLowering;$/;"	m	class:llvm::MipsAsmPrinter
MCJIT	ExecutionEngine/MCJIT/MCJIT.cpp	/^MCJIT::MCJIT(Module *m, TargetMachine *tm, RTDyldMemoryManager *MM,$/;"	f	class:MCJIT
MCJIT	ExecutionEngine/MCJIT/MCJIT.h	/^class MCJIT : public ExecutionEngine {$/;"	c	namespace:llvm
MCJITCtor	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngine *(*ExecutionEngine::MCJITCtor)($/;"	v
MCJITMemoryManager	ExecutionEngine/MCJIT/MCJITMemoryManager.h	/^  MCJITMemoryManager(JITMemoryManager *jmm) :$/;"	f	class:llvm::MCJITMemoryManager
MCJITMemoryManager	ExecutionEngine/MCJIT/MCJITMemoryManager.h	/^class MCJITMemoryManager : public RTDyldMemoryManager {$/;"	c	namespace:llvm
MCMachOStreamer	MC/MCMachOStreamer.cpp	/^  MCMachOStreamer(MCContext &Context, MCAsmBackend &MAB,$/;"	f	class:__anon221::MCMachOStreamer
MCMachOStreamer	MC/MCMachOStreamer.cpp	/^class MCMachOStreamer : public MCObjectStreamer {$/;"	c	namespace:__anon221	file:
MCMachObjectTargetWriter	MC/MCMachObjectTargetWriter.cpp	/^MCMachObjectTargetWriter::MCMachObjectTargetWriter($/;"	f	class:MCMachObjectTargetWriter
MCNullStreamer	MC/MCNullStreamer.cpp	/^    MCNullStreamer(MCContext &Context) : MCStreamer(Context) {}$/;"	f	class:__anon217::MCNullStreamer
MCNullStreamer	MC/MCNullStreamer.cpp	/^  class MCNullStreamer : public MCStreamer {$/;"	c	namespace:__anon217	file:
MCObjectStreamer	MC/MCObjectStreamer.cpp	/^MCObjectStreamer::MCObjectStreamer(MCContext &Context, MCAsmBackend &TAB,$/;"	f	class:MCObjectStreamer
MCOpIndex	MC/MCDisassembler/EDOperand.h	/^  unsigned int MCOpIndex;$/;"	m	struct:llvm::EDOperand
MCP	Target/ARM/ARMAsmPrinter.h	/^  const MachineConstantPool *MCP;$/;"	m	class:llvm::ARMAsmPrinter
MCP	Target/ARM/ARMConstantIslandPass.cpp	/^    MachineConstantPool *MCP;$/;"	m	class:__anon310::ARMConstantIslands	file:
MCPEs	Target/ARM/ARMCodeEmitter.cpp	/^    const std::vector<MachineConstantPoolEntry> *MCPEs;$/;"	m	class:__anon297::ARMCodeEmitter	file:
MCPEs	Target/Mips/MipsCodeEmitter.cpp	/^  const std::vector<MachineConstantPoolEntry> *MCPEs;$/;"	m	class:__anon438::MipsCodeEmitter	file:
MCPureStreamer	MC/MCPureStreamer.cpp	/^  MCPureStreamer(MCContext &Context, MCAsmBackend &TAB,$/;"	f	class:__anon219::MCPureStreamer
MCPureStreamer	MC/MCPureStreamer.cpp	/^class MCPureStreamer : public MCObjectStreamer {$/;"	c	namespace:__anon219	file:
MCSectionData	MC/MCAssembler.cpp	/^MCSectionData::MCSectionData() : Section(0) {}$/;"	f	class:MCSectionData
MCSectionData	MC/MCAssembler.cpp	/^MCSectionData::MCSectionData(const MCSection &_Section, MCAssembler *A)$/;"	f	class:MCSectionData
MCSectionMachO	MC/MCSectionMachO.cpp	/^MCSectionMachO::MCSectionMachO(StringRef Segment, StringRef Section,$/;"	f	class:MCSectionMachO
MCStreamer	MC/MCStreamer.cpp	/^MCStreamer::MCStreamer(MCContext &Ctx)$/;"	f	class:MCStreamer
MCSymbolData	MC/MCAssembler.cpp	/^MCSymbolData::MCSymbolData() : Symbol(0) {}$/;"	f	class:MCSymbolData
MCSymbolData	MC/MCAssembler.cpp	/^MCSymbolData::MCSymbolData(const MCSymbol &_Symbol, MCFragment *_Fragment,$/;"	f	class:MCSymbolData
MCTargetAsmLexer	MC/MCTargetAsmLexer.cpp	/^MCTargetAsmLexer::MCTargetAsmLexer(const Target &T)$/;"	f	class:MCTargetAsmLexer
MCTargetAsmParser	MC/MCParser/MCTargetAsmParser.cpp	/^MCTargetAsmParser::MCTargetAsmParser()$/;"	f	class:MCTargetAsmParser
MCWinCOFFObjectTargetWriter	MC/WinCOFFObjectWriter.cpp	/^MCWinCOFFObjectTargetWriter::MCWinCOFFObjectTargetWriter(unsigned Machine_) :$/;"	f	class:MCWinCOFFObjectTargetWriter
MCadd	Support/regex2.h	116;"	d
MCin	Support/regex2.h	118;"	d
MCsub	Support/regex2.h	117;"	d
MD	Transforms/Scalar/DeadStoreElimination.cpp	/^    MemoryDependenceAnalysis *MD;$/;"	m	struct:__anon552::DSE	file:
MD	Transforms/Scalar/GVN.cpp	/^    MemoryDependenceAnalysis *MD;$/;"	m	class:__anon536::ValueTable	file:
MD	Transforms/Scalar/GVN.cpp	/^    MemoryDependenceAnalysis *MD;$/;"	m	class:__anon537::GVN	file:
MD	Transforms/Scalar/MemCpyOptimizer.cpp	/^    MemoryDependenceAnalysis *MD;$/;"	m	class:__anon575::MemCpyOpt	file:
MDKind	AsmParser/LLParser.h	/^      unsigned MDKind, MDSlot;$/;"	m	struct:llvm::LLParser::MDRef
MDKindMap	Bitcode/Reader/BitcodeReader.h	/^  DenseMap<unsigned, unsigned> MDKindMap;$/;"	m	class:llvm::BitcodeReader
MDMapTy	VMCore/LLVMContextImpl.h	/^  typedef SmallVector<MDPairTy, 2> MDMapTy;$/;"	t	class:llvm::LLVMContextImpl
MDNode	VMCore/Metadata.cpp	/^MDNode::MDNode(LLVMContext &C, ArrayRef<Value*> Vals, bool isFunctionLocal)$/;"	f	class:MDNode
MDNodeOperand	VMCore/Metadata.cpp	/^  MDNodeOperand(Value *V) : CallbackVH(V) {}$/;"	f	class:llvm::MDNodeOperand
MDNodeOperand	VMCore/Metadata.cpp	/^class MDNodeOperand : public CallbackVH {$/;"	c	namespace:llvm	file:
MDNodeSet	VMCore/LLVMContextImpl.h	/^  FoldingSet<MDNode> MDNodeSet;$/;"	m	class:llvm::LLVMContextImpl
MDNodeToDIEEntryMap	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DenseMap<const MDNode *, DIEEntry *> MDNodeToDIEEntryMap;$/;"	m	class:llvm::CompileUnit
MDNodeToDieMap	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DenseMap<const MDNode *, DIE *> MDNodeToDieMap;$/;"	m	class:llvm::CompileUnit
MDNodeVal	AsmParser/LLParser.h	/^    MDNode *MDNodeVal;$/;"	m	struct:llvm::ValID
MDNodes	VMCore/Verifier.cpp	/^    SmallPtrSet<MDNode *, 32> MDNodes;$/;"	m	struct:__anon610::Verifier	file:
MDPairTy	VMCore/LLVMContextImpl.h	/^  typedef std::pair<unsigned, TrackingVH<MDNode> > MDPairTy;$/;"	t	class:llvm::LLVMContextImpl
MDRef	AsmParser/LLParser.h	/^    struct MDRef {$/;"	s	class:llvm::LLParser
MDSlot	AsmParser/LLParser.h	/^      unsigned MDKind, MDSlot;$/;"	m	struct:llvm::LLParser::MDRef
MDString	VMCore/Metadata.cpp	/^MDString::MDString(LLVMContext &C)$/;"	f	class:MDString
MDStringCache	VMCore/LLVMContextImpl.h	/^  StringMap<Value*> MDStringCache;$/;"	m	class:llvm::LLVMContextImpl
MDStringVal	AsmParser/LLParser.h	/^    MDString *MDStringVal;$/;"	m	struct:llvm::ValID
MDT	CodeGen/InlineSpiller.cpp	/^  MachineDominatorTree &MDT;$/;"	m	class:__anon155::InlineSpiller	file:
MDT	CodeGen/LiveDebugVariables.cpp	/^  MachineDominatorTree *MDT;$/;"	m	class:__anon153::LDVImpl	file:
MDT	CodeGen/SplitKit.h	/^  MachineDominatorTree &MDT;$/;"	m	class:llvm::SplitEditor
MDValueList	Bitcode/Reader/BitcodeReader.h	/^  BitcodeReaderMDValueList MDValueList;$/;"	m	class:llvm::BitcodeReader
MDValueMap	Bitcode/Writer/ValueEnumerator.h	/^  ValueMapType MDValueMap;$/;"	m	class:llvm::ValueEnumerator
MDValuePtrs	Bitcode/Reader/BitcodeReader.h	/^  std::vector<WeakVH> MDValuePtrs;$/;"	m	class:llvm::BitcodeReaderMDValueList
MDValues	Bitcode/Writer/ValueEnumerator.h	/^  ValueList MDValues;$/;"	m	class:llvm::ValueEnumerator
MEMBARRIER	Target/ARM/ARMISelLowering.h	/^      MEMBARRIER,   \/\/ Memory barrier (DMB)$/;"	e	enum:llvm::ARMISD::NodeType
MEMBARRIER	Target/X86/X86ISelLowering.h	/^      MEMBARRIER,$/;"	e	enum:llvm::X86ISD::NodeType
MEMBARRIER_MCR	Target/ARM/ARMISelLowering.h	/^      MEMBARRIER_MCR, \/\/ Memory barrier (MCR)$/;"	e	enum:llvm::ARMISD::NodeType
MF	CodeGen/AggressiveAntiDepBreaker.h	/^    MachineFunction& MF;$/;"	m	class:llvm::AggressiveAntiDepBreaker
MF	CodeGen/CriticalAntiDepBreaker.h	/^    MachineFunction& MF;$/;"	m	class:llvm::CriticalAntiDepBreaker
MF	CodeGen/ExecutionDepsFix.cpp	/^  MachineFunction *MF;$/;"	m	class:__anon120::ExeDepsFix	file:
MF	CodeGen/InlineSpiller.cpp	/^  MachineFunction &MF;$/;"	m	class:__anon155::InlineSpiller	file:
MF	CodeGen/InterferenceCache.h	/^    MachineFunction *MF;$/;"	m	class:llvm::InterferenceCache::Entry
MF	CodeGen/InterferenceCache.h	/^  MachineFunction *MF;$/;"	m	class:llvm::InterferenceCache
MF	CodeGen/LiveDebugVariables.cpp	/^  MachineFunction *MF;$/;"	m	class:__anon153::LDVImpl	file:
MF	CodeGen/MachineTraceMetrics.h	/^  const MachineFunction *MF;$/;"	m	class:llvm::MachineTraceMetrics
MF	CodeGen/MachineVerifier.cpp	/^    const MachineFunction *MF;$/;"	m	struct:__anon139::MachineVerifier	file:
MF	CodeGen/PrologEpilogInserter.h	/^    MachineFunction* MF;$/;"	m	class:llvm::PEI
MF	CodeGen/RegAllocBasic.cpp	/^  MachineFunction *MF;$/;"	m	class:__anon122::RABasic	file:
MF	CodeGen/RegAllocFast.cpp	/^    MachineFunction *MF;$/;"	m	class:__anon140::RAFast	file:
MF	CodeGen/RegAllocGreedy.cpp	/^  MachineFunction *MF;$/;"	m	class:__anon158::RAGreedy	file:
MF	CodeGen/RegisterCoalescer.cpp	/^    MachineFunction* MF;$/;"	m	class:__anon114::RegisterCoalescer	file:
MF	CodeGen/SelectionDAG/InstrEmitter.h	/^  MachineFunction *MF;$/;"	m	class:llvm::InstrEmitter
MF	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  MachineFunction &MF;$/;"	m	class:__anon77::RegReductionPQBase	file:
MF	CodeGen/SpillPlacement.h	/^  const MachineFunction *MF;$/;"	m	class:llvm::SpillPlacement
MF	CodeGen/SplitKit.h	/^  const MachineFunction &MF;$/;"	m	class:llvm::SplitAnalysis
MF	CodeGen/StackColoring.cpp	/^  MachineFunction *MF;$/;"	m	class:__anon113::StackColoring	file:
MF	CodeGen/TwoAddressInstructionPass.cpp	/^    MachineFunction *MF;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
MF	CodeGen/VirtRegMap.cpp	/^  MachineFunction *MF;$/;"	m	class:__anon97::VirtRegRewriter	file:
MF	CodeGen/VirtRegMap.h	/^    MachineFunction *MF;$/;"	m	class:llvm::VirtRegMap
MF	Target/ARM/ARMConstantIslandPass.cpp	/^    MachineFunction *MF;$/;"	m	class:__anon310::ARMConstantIslands	file:
MF	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    MachineFunction *MF;$/;"	m	struct:__anon304::ARMPreAllocLoadStoreOpt	file:
MF	Target/Mips/MipsLongBranch.cpp	/^    MachineFunction *MF;$/;"	m	class:__anon437::MipsLongBranch	file:
MF	Target/Mips/MipsMachineFunction.h	/^  MachineFunction& MF;$/;"	m	class:llvm::MipsFunctionInfo
MF	Target/X86/X86MCInstLower.cpp	/^  const MachineFunction &MF;$/;"	m	class:__anon380::X86MCInstLower	file:
MFCR	Target/PowerPC/PPCISelLowering.h	/^      MFCR,$/;"	e	enum:llvm::PPCISD::NodeType
MFENCE	Target/X86/X86ISelLowering.h	/^      MFENCE,$/;"	e	enum:llvm::X86ISD::NodeType
MFFS	Target/PowerPC/PPCISelLowering.h	/^      MFFS,$/;"	e	enum:llvm::PPCISD::NodeType
MFI	CodeGen/InlineSpiller.cpp	/^  MachineFrameInfo &MFI;$/;"	m	class:__anon155::InlineSpiller	file:
MFI	CodeGen/MachineLICM.cpp	/^    const MachineFrameInfo *MFI;$/;"	m	class:__anon156::MachineLICM	file:
MFI	CodeGen/StackColoring.cpp	/^    MachineFrameInfo *MFI;$/;"	m	struct:__anon113::StackColoring::SlotSizeSorter	file:
MFI	CodeGen/StackColoring.cpp	/^  MachineFrameInfo *MFI;$/;"	m	class:__anon113::StackColoring	file:
MFI	CodeGen/StackSlotColoring.cpp	/^    MachineFrameInfo *MFI;$/;"	m	class:__anon94::StackSlotColoring	file:
MI	CodeGen/LocalStackSlotAllocation.cpp	/^    MachineBasicBlock::iterator MI; \/\/ Instr referencing the frame$/;"	m	class:__anon136::FrameRef	file:
MI	CodeGen/MachineLICM.cpp	/^      MachineInstr *MI;$/;"	m	struct:__anon156::MachineLICM::CandidateInfo	file:
MI	CodeGen/MachineTraceMetrics.cpp	/^  const MachineInstr *MI;$/;"	m	struct:__anon134::LiveRegUnit	file:
MI	Target/ARM/ARMConstantIslandPass.cpp	/^      MachineInstr *MI;$/;"	m	struct:__anon310::ARMConstantIslands::CPUser	file:
MI	Target/ARM/ARMConstantIslandPass.cpp	/^      MachineInstr *MI;$/;"	m	struct:__anon310::ARMConstantIslands::ImmBranch	file:
MI	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MI,            \/\/ Minus, negative            Less than$/;"	e	enum:llvm::ARMCC::CondCodes
MIHeightMap	CodeGen/MachineTraceMetrics.cpp	/^typedef DenseMap<const MachineInstr *, unsigned> MIHeightMap;$/;"	t	file:
MII	MC/MCDisassembler/Disassembler.h	/^  llvm::OwningPtr<const llvm::MCInstrInfo> MII;$/;"	m	class:llvm::LLVMDisasmContext
MII	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<const llvm::MCInstrInfo> MII;$/;"	m	struct:llvm::EDDisassembler
MII	Target/X86/Disassembler/X86Disassembler.h	/^  const MCInstrInfo *MII;$/;"	m	class:llvm::X86Disassembler::X86GenericDisassembler
MIIdx	Target/ARM/MLxExpansionPass.cpp	/^    unsigned MIIdx;$/;"	m	struct:__anon301::MLxExpansion	file:
MIIndexCompare	CodeGen/StrongPHIElimination.cpp	/^    MIIndexCompare(LiveIntervals *LiveIntervals) : LI(LiveIntervals) { }$/;"	f	struct:__anon154::MIIndexCompare
MIIndexCompare	CodeGen/StrongPHIElimination.cpp	/^  struct MIIndexCompare {$/;"	s	namespace:__anon154	file:
MIN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t MIN_WEIGHT = 1;$/;"	v	file:
MIPS16INSTRUCTIONINFO_H	Target/Mips/Mips16InstrInfo.h	15;"	d
MIPS16REGISTERINFO_H	Target/Mips/Mips16RegisterInfo.h	15;"	d
MIPS16_FRAMEINFO_H	Target/Mips/Mips16FrameLowering.h	15;"	d
MIPSASMPRINTER_H	Target/Mips/MipsAsmPrinter.h	15;"	d
MIPSBASEINFO_H	Target/Mips/MCTargetDesc/MipsBaseInfo.h	15;"	d
MIPSDIRECTOBJLOWER_H	Target/Mips/MCTargetDesc/MipsDirectObjLower.h	11;"	d
MIPSINSTPRINTER_H	Target/Mips/InstPrinter/MipsInstPrinter.h	15;"	d
MIPSINSTRUCTIONINFO_H	Target/Mips/MipsInstrInfo.h	15;"	d
MIPSJITINFO_H	Target/Mips/MipsJITInfo.h	15;"	d
MIPSMCINSTLOWER_H	Target/Mips/MipsMCInstLower.h	11;"	d
MIPSMCTARGETDESC_H	Target/Mips/MCTargetDesc/MipsMCTargetDesc.h	15;"	d
MIPSREGISTERINFO_H	Target/Mips/MipsRegisterInfo.h	15;"	d
MIPSRELOCATIONS_H_	Target/Mips/MipsRelocations.h	16;"	d
MIPSSEINSTRUCTIONINFO_H	Target/Mips/MipsSEInstrInfo.h	15;"	d
MIPSSELECTIONDAGINFO_H	Target/Mips/MipsSelectionDAGInfo.h	15;"	d
MIPSSEREGISTERINFO_H	Target/Mips/MipsSERegisterInfo.h	16;"	d
MIPSSE_FRAMEINFO_H	Target/Mips/MipsSEFrameLowering.h	15;"	d
MIPSSUBTARGET_H	Target/Mips/MipsSubtarget.h	15;"	d
MIPSTARGETASMINFO_H	Target/Mips/MCTargetDesc/MipsMCAsmInfo.h	15;"	d
MIPSTARGETMACHINE_H	Target/Mips/MipsTargetMachine.h	15;"	d
MIPS_ANALYZE_IMMEDIATE_H	Target/Mips/MipsAnalyzeImmediate.h	10;"	d
MIPS_ELF_WRITER_INFO_H	Target/Mips/MipsELFWriterInfo.h	15;"	d
MIPS_FRAMEINFO_H	Target/Mips/MipsFrameLowering.h	15;"	d
MIPS_MACHINE_FUNCTION_INFO_H	Target/Mips/MipsMachineFunction.h	15;"	d
MInsn	CodeGen/AsmPrinter/DwarfDebug.h	/^  const MachineInstr *MInsn;         \/\/ DBG_VALUE instruction of the variable.$/;"	m	class:llvm::DbgVariable
MIsNeedChainEdge	CodeGen/ScheduleDAGInstrs.cpp	/^static bool MIsNeedChainEdge(AliasAnalysis *AA, const MachineFrameInfo *MFI,$/;"	f	file:
MJTEs	Target/ARM/ARMCodeEmitter.cpp	/^    const std::vector<MachineJumpTableEntry> *MJTEs;$/;"	m	class:__anon297::ARMCodeEmitter	file:
MJTEs	Target/Mips/MipsCodeEmitter.cpp	/^  const std::vector<MachineJumpTableEntry> *MJTEs;$/;"	m	class:__anon438::MipsCodeEmitter	file:
MLI	CodeGen/CodePlacementOpt.cpp	/^    const MachineLoopInfo *MLI;$/;"	m	class:__anon150::CodePlacementOpt	file:
MLI	CodeGen/MachineBlockPlacement.cpp	/^  const MachineLoopInfo *MLI;$/;"	m	class:__anon107::MachineBlockPlacement	file:
MLI	CodeGen/MachineLICM.cpp	/^    MachineLoopInfo      *MLI;     \/\/ Current MachineLoopInfo$/;"	m	class:__anon156::MachineLICM	file:
MLI	Target/Hexagon/HexagonHardwareLoops.cpp	/^    MachineLoopInfo       *MLI;$/;"	m	struct:__anon408::HexagonHardwareLoops	file:
MLI	Target/PowerPC/PPCCTRLoops.cpp	/^    MachineLoopInfo       *MLI;$/;"	m	struct:__anon325::PPCCTRLoops	file:
MLxEntryMap	Target/ARM/ARMBaseInstrInfo.h	/^  DenseMap<unsigned, unsigned> MLxEntryMap;$/;"	m	class:llvm::ARMBaseInstrInfo
MLxExpansion	Target/ARM/MLxExpansionPass.cpp	/^    MLxExpansion() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon301::MLxExpansion
MLxExpansion	Target/ARM/MLxExpansionPass.cpp	/^  struct MLxExpansion : public MachineFunctionPass {$/;"	s	namespace:__anon301	file:
MLxHazardOpcodes	Target/ARM/ARMBaseInstrInfo.h	/^  SmallSet<unsigned, 16> MLxHazardOpcodes;$/;"	m	class:llvm::ARMBaseInstrInfo
MLxOpc	Target/ARM/ARMBaseInstrInfo.cpp	/^  uint16_t MLxOpc;     \/\/ MLA \/ MLS opcode$/;"	m	struct:ARM_MLxEntry	file:
MMI	CodeGen/AsmPrinter/DwarfDebug.h	/^  MachineModuleInfo *MMI;$/;"	m	class:llvm::DwarfDebug
MMI	CodeGen/AsmPrinter/DwarfException.h	/^  MachineModuleInfo *MMI;$/;"	m	class:llvm::DwarfException
MMI	CodeGen/BranchFolding.h	/^    MachineModuleInfo *MMI;$/;"	m	class:llvm::BranchFolder
MMI	CodeGen/GCStrategy.cpp	/^    MachineModuleInfo *MMI;$/;"	m	class:__anon145::GCMachineCodeAnalysis	file:
MMI	CodeGen/TailDuplication.cpp	/^    MachineModuleInfo *MMI;$/;"	m	class:__anon167::TailDuplicatePass	file:
MMI	CodeGen/UnreachableBlockElim.cpp	/^    MachineModuleInfo *MMI;$/;"	m	class:__anon169::UnreachableMachineBlockElim	file:
MMI	ExecutionEngine/JIT/JITDwarfEmitter.h	/^  MachineModuleInfo* MMI;$/;"	m	class:llvm::JITDwarfEmitter
MMI	ExecutionEngine/JIT/JITEmitter.cpp	/^    MachineModuleInfo* MMI;$/;"	m	class:__anon182::JITEmitter	file:
MMI	Target/ARM/ARMCodeEmitter.cpp	/^    MachineModuleInfo *MMI;$/;"	m	class:__anon297::ARMCodeEmitter	file:
MMI	Target/PowerPC/PPCCodeEmitter.cpp	/^    MachineModuleInfo *MMI;$/;"	m	class:__anon324::PPCCodeEmitter	file:
MMI	Target/X86/X86CodeEmitter.cpp	/^    MachineModuleInfo   *MMI;$/;"	m	class:__anon379::Emitter	file:
MMIAddrLabelMap	CodeGen/MachineModuleInfo.cpp	/^  MMIAddrLabelMap(MCContext &context) : Context(context) {}$/;"	f	class:llvm::MMIAddrLabelMap
MMIAddrLabelMap	CodeGen/MachineModuleInfo.cpp	/^class MMIAddrLabelMap {$/;"	c	namespace:llvm	file:
MMIAddrLabelMapCallbackPtr	CodeGen/MachineModuleInfo.cpp	/^  MMIAddrLabelMapCallbackPtr() : Map(0) {}$/;"	f	class:llvm::MMIAddrLabelMapCallbackPtr
MMIAddrLabelMapCallbackPtr	CodeGen/MachineModuleInfo.cpp	/^  MMIAddrLabelMapCallbackPtr(Value *V) : CallbackVH(V), Map(0) {}$/;"	f	class:llvm::MMIAddrLabelMapCallbackPtr
MMIAddrLabelMapCallbackPtr	CodeGen/MachineModuleInfo.cpp	/^class MMIAddrLabelMapCallbackPtr : CallbackVH {$/;"	c	namespace:llvm	file:
MMX	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
MMX_PINSRW	Target/X86/X86ISelLowering.h	/^      PINSRW, MMX_PINSRW,$/;"	e	enum:llvm::X86ISD::NodeType
MMask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } MMask;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon269	file:
MODE_16BIT	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  MODE_16BIT,$/;"	e	enum:__anon369
MODE_32BIT	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  MODE_32BIT,$/;"	e	enum:__anon369
MODE_64BIT	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  MODE_64BIT$/;"	e	enum:__anon369
MODIFIER_TYPES	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  MODIFIER_TYPES$/;"	e	enum:__anon368
MODIFIER_TYPES	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	361;"	d
MODIFIER_max	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  MODIFIER_max$/;"	e	enum:__anon368
MODRMTYPES	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  MODRMTYPES$/;"	e	enum:__anon365
MODRMTYPES	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	173;"	d
MODRM_REG_max	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  MODRM_REG_max$/;"	e	enum:__anon358
MODRM_max	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  MODRM_max$/;"	e	enum:__anon365
MORE	Support/regcomp.c	116;"	d	file:
MORE2	Support/regcomp.c	117;"	d	file:
MORE_BYTES	Target/NVPTX/NVPTXutil.cpp	35;"	d	file:
MORE_BYTES	Target/NVPTX/NVPTXutil.cpp	62;"	d	file:
MOVDDUP	Target/X86/X86ISelLowering.h	/^      MOVDDUP,$/;"	e	enum:llvm::X86ISD::NodeType
MOVDQ2Q	Target/X86/X86ISelLowering.h	/^      MOVDQ2Q,$/;"	e	enum:llvm::X86ISD::NodeType
MOVHLPS	Target/X86/X86ISelLowering.h	/^      MOVHLPS,$/;"	e	enum:llvm::X86ISD::NodeType
MOVLHPD	Target/X86/X86ISelLowering.h	/^      MOVLHPD,$/;"	e	enum:llvm::X86ISD::NodeType
MOVLHPS	Target/X86/X86ISelLowering.h	/^      MOVLHPS,$/;"	e	enum:llvm::X86ISD::NodeType
MOVLPD	Target/X86/X86ISelLowering.h	/^      MOVLPD,$/;"	e	enum:llvm::X86ISD::NodeType
MOVLPS	Target/X86/X86ISelLowering.h	/^      MOVLPS,$/;"	e	enum:llvm::X86ISD::NodeType
MOVSD	Target/X86/X86ISelLowering.h	/^      MOVSD,$/;"	e	enum:llvm::X86ISD::NodeType
MOVSHDUP	Target/X86/X86ISelLowering.h	/^      MOVSHDUP,$/;"	e	enum:llvm::X86ISD::NodeType
MOVSLDUP	Target/X86/X86ISelLowering.h	/^      MOVSLDUP,$/;"	e	enum:llvm::X86ISD::NodeType
MOVSS	Target/X86/X86ISelLowering.h	/^      MOVSS,$/;"	e	enum:llvm::X86ISD::NodeType
MO_ABS_HI	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_ABS_HI,$/;"	e	enum:llvm::MipsII::TOF
MO_ABS_LO	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_ABS_LO,$/;"	e	enum:llvm::MipsII::TOF
MO_ACCESS_MASK	Target/PowerPC/PPC.h	/^    MO_ACCESS_MASK = 224,$/;"	e	enum:llvm::PPCII::TOF
MO_DARWIN_HIDDEN_NONLAZY_PIC_BASE	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_DARWIN_HIDDEN_NONLAZY_PIC_BASE,$/;"	e	enum:llvm::X86II::TOF
MO_DARWIN_NONLAZY	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_DARWIN_NONLAZY,$/;"	e	enum:llvm::X86II::TOF
MO_DARWIN_NONLAZY_PIC_BASE	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_DARWIN_NONLAZY_PIC_BASE,$/;"	e	enum:llvm::X86II::TOF
MO_DARWIN_STUB	Target/PowerPC/PPC.h	/^    MO_DARWIN_STUB = 1,$/;"	e	enum:llvm::PPCII::TOF
MO_DARWIN_STUB	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_DARWIN_STUB,$/;"	e	enum:llvm::X86II::TOF
MO_DLLIMPORT	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_DLLIMPORT,$/;"	e	enum:llvm::X86II::TOF
MO_DTPOFF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_DTPOFF,$/;"	e	enum:llvm::X86II::TOF
MO_DTPREL_HI	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_DTPREL_HI,$/;"	e	enum:llvm::MipsII::TOF
MO_DTPREL_LO	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_DTPREL_LO,$/;"	e	enum:llvm::MipsII::TOF
MO_GOT	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GOT,$/;"	e	enum:llvm::MipsII::TOF
MO_GOT	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_GOT,$/;"	e	enum:llvm::X86II::TOF
MO_GOT16	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GOT16,$/;"	e	enum:llvm::MipsII::TOF
MO_GOTNTPOFF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_GOTNTPOFF,$/;"	e	enum:llvm::X86II::TOF
MO_GOTOFF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_GOTOFF,$/;"	e	enum:llvm::X86II::TOF
MO_GOTPCREL	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_GOTPCREL,$/;"	e	enum:llvm::X86II::TOF
MO_GOTTPOFF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_GOTTPOFF,$/;"	e	enum:llvm::X86II::TOF
MO_GOTTPREL	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GOTTPREL,$/;"	e	enum:llvm::MipsII::TOF
MO_GOT_ABSOLUTE_ADDRESS	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_GOT_ABSOLUTE_ADDRESS,$/;"	e	enum:llvm::X86II::TOF
MO_GOT_CALL	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GOT_CALL,$/;"	e	enum:llvm::MipsII::TOF
MO_GOT_DISP	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GOT_DISP,$/;"	e	enum:llvm::MipsII::TOF
MO_GOT_OFST	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GOT_OFST,$/;"	e	enum:llvm::MipsII::TOF
MO_GOT_PAGE	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GOT_PAGE,$/;"	e	enum:llvm::MipsII::TOF
MO_GPOFF_HI	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GPOFF_HI,$/;"	e	enum:llvm::MipsII::TOF
MO_GPOFF_LO	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GPOFF_LO,$/;"	e	enum:llvm::MipsII::TOF
MO_GPREL	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_GPREL,$/;"	e	enum:llvm::MipsII::TOF
MO_HA16	Target/PowerPC/PPC.h	/^    MO_LO16 = 32, MO_HA16 = 64,$/;"	e	enum:llvm::PPCII::TOF
MO_HI16	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MO_HI16,$/;"	e	enum:llvm::ARMII::TOF
MO_HI16_NONLAZY	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MO_HI16_NONLAZY,$/;"	e	enum:llvm::ARMII::TOF
MO_HI16_NONLAZY_PIC	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MO_HI16_NONLAZY_PIC,$/;"	e	enum:llvm::ARMII::TOF
MO_HIGHER	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_HIGHER,$/;"	e	enum:llvm::MipsII::TOF
MO_HIGHEST	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_HIGHEST$/;"	e	enum:llvm::MipsII::TOF
MO_INDNTPOFF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_INDNTPOFF,$/;"	e	enum:llvm::X86II::TOF
MO_LO16	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MO_LO16,$/;"	e	enum:llvm::ARMII::TOF
MO_LO16	Target/PowerPC/PPC.h	/^    MO_LO16 = 32, MO_HA16 = 64,$/;"	e	enum:llvm::PPCII::TOF
MO_LO16_NONLAZY	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MO_LO16_NONLAZY,$/;"	e	enum:llvm::ARMII::TOF
MO_LO16_NONLAZY_PIC	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MO_LO16_NONLAZY_PIC,$/;"	e	enum:llvm::ARMII::TOF
MO_NLP_FLAG	Target/PowerPC/PPC.h	/^    MO_NLP_FLAG = 8,$/;"	e	enum:llvm::PPCII::TOF
MO_NLP_HIDDEN_FLAG	Target/PowerPC/PPC.h	/^    MO_NLP_HIDDEN_FLAG = 16,$/;"	e	enum:llvm::PPCII::TOF
MO_NO_FLAG	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MO_NO_FLAG,$/;"	e	enum:llvm::ARMII::TOF
MO_NO_FLAG	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_NO_FLAG,$/;"	e	enum:llvm::MipsII::TOF
MO_NO_FLAG	Target/PowerPC/PPC.h	/^    MO_NO_FLAG,$/;"	e	enum:llvm::PPCII::TOF
MO_NO_FLAG	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_NO_FLAG,$/;"	e	enum:llvm::X86II::TOF
MO_NTPOFF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_NTPOFF,$/;"	e	enum:llvm::X86II::TOF
MO_PIC_BASE_OFFSET	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_PIC_BASE_OFFSET,$/;"	e	enum:llvm::X86II::TOF
MO_PIC_FLAG	Target/PowerPC/PPC.h	/^    MO_PIC_FLAG = 4,$/;"	e	enum:llvm::PPCII::TOF
MO_PLT	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MO_PLT$/;"	e	enum:llvm::ARMII::TOF
MO_PLT	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_PLT,$/;"	e	enum:llvm::X86II::TOF
MO_SECREL	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_SECREL$/;"	e	enum:llvm::X86II::TOF
MO_TLSGD	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_TLSGD,$/;"	e	enum:llvm::MipsII::TOF
MO_TLSGD	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_TLSGD,$/;"	e	enum:llvm::X86II::TOF
MO_TLSLD	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_TLSLD,$/;"	e	enum:llvm::X86II::TOF
MO_TLSLDM	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_TLSLDM,$/;"	e	enum:llvm::MipsII::TOF
MO_TLSLDM	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_TLSLDM,$/;"	e	enum:llvm::X86II::TOF
MO_TLVP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_TLVP,$/;"	e	enum:llvm::X86II::TOF
MO_TLVP_PIC_BASE	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_TLVP_PIC_BASE,$/;"	e	enum:llvm::X86II::TOF
MO_TPOFF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MO_TPOFF,$/;"	e	enum:llvm::X86II::TOF
MO_TPREL16_HA	Target/PowerPC/PPC.h	/^    MO_TPREL16_HA = 96,$/;"	e	enum:llvm::PPCII::TOF
MO_TPREL16_LO	Target/PowerPC/PPC.h	/^    MO_TPREL16_LO = 128$/;"	e	enum:llvm::PPCII::TOF
MO_TPREL_HI	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_TPREL_HI,$/;"	e	enum:llvm::MipsII::TOF
MO_TPREL_LO	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    MO_TPREL_LO,$/;"	e	enum:llvm::MipsII::TOF
MPIter	CodeGen/BranchFolding.h	/^      MPIterator MPIter;$/;"	m	class:llvm::BranchFolder::SameTailElt
MPIterator	CodeGen/BranchFolding.h	/^    typedef std::vector<MergePotentialsElt>::iterator MPIterator;$/;"	t	class:llvm::BranchFolder
MPPassManager	VMCore/PassManager.cpp	/^  explicit MPPassManager() :$/;"	f	class:llvm::MPPassManager
MPPassManager	VMCore/PassManager.cpp	/^class MPPassManager : public Pass, public PMDataManager {$/;"	c	namespace:llvm	file:
MPextension_use	Target/ARM/ARMBuildAttrs.h	/^    MPextension_use           = 42, \/\/ was 70, 2.08 ABI$/;"	e	enum:ARMBuildAttrs::AttrType
MPextension_use_old	Target/ARM/ARMBuildAttrs.h	/^    MPextension_use_old       = 70$/;"	e	enum:ARMBuildAttrs::AttrType
MR	Analysis/AliasAnalysisCounter.cpp	/^    unsigned NoMR, JustRef, JustMod, MR;$/;"	m	class:__anon43::AliasAnalysisCounter	file:
MRI	CodeGen/AggressiveAntiDepBreaker.h	/^    MachineRegisterInfo &MRI;$/;"	m	class:llvm::AggressiveAntiDepBreaker
MRI	CodeGen/CriticalAntiDepBreaker.h	/^    MachineRegisterInfo &MRI;$/;"	m	class:llvm::CriticalAntiDepBreaker
MRI	CodeGen/DeadMachineInstructionElim.cpp	/^    const MachineRegisterInfo *MRI;$/;"	m	class:__anon137::DeadMachineInstructionElim	file:
MRI	CodeGen/EarlyIfConversion.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon91::SSAIfConv	file:
MRI	CodeGen/EarlyIfConversion.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon92::EarlyIfConverter	file:
MRI	CodeGen/IfConversion.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	class:__anon99::IfConverter	file:
MRI	CodeGen/InlineSpiller.cpp	/^  MachineRegisterInfo &MRI;$/;"	m	class:__anon155::InlineSpiller	file:
MRI	CodeGen/LiveIntervalAnalysis.cpp	/^  const MachineRegisterInfo& MRI;$/;"	m	class:LiveIntervals::HMEditor	file:
MRI	CodeGen/LiveRangeCalc.h	/^  const MachineRegisterInfo *MRI;$/;"	m	class:llvm::LiveRangeCalc
MRI	CodeGen/LiveRegMatrix.h	/^  MachineRegisterInfo *MRI;$/;"	m	class:llvm::LiveRegMatrix
MRI	CodeGen/MachineCSE.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	class:__anon161::MachineCSE	file:
MRI	CodeGen/MachineCopyPropagation.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	class:__anon93::MachineCopyPropagation	file:
MRI	CodeGen/MachineLICM.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	class:__anon156::MachineLICM	file:
MRI	CodeGen/MachineSink.cpp	/^    MachineRegisterInfo  *MRI;  \/\/ Machine register information$/;"	m	class:__anon101::MachineSinking	file:
MRI	CodeGen/MachineTraceMetrics.h	/^  const MachineRegisterInfo *MRI;$/;"	m	class:llvm::MachineTraceMetrics
MRI	CodeGen/MachineVerifier.cpp	/^    const MachineRegisterInfo *MRI;$/;"	m	struct:__anon139::MachineVerifier	file:
MRI	CodeGen/OptimizePHIs.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	class:__anon146::OptimizePHIs	file:
MRI	CodeGen/PHIElimination.cpp	/^    MachineRegisterInfo *MRI; \/\/ Machine register information$/;"	m	class:__anon164::PHIElimination	file:
MRI	CodeGen/PeepholeOptimizer.cpp	/^    MachineRegisterInfo   *MRI;$/;"	m	class:__anon163::PeepholeOptimizer	file:
MRI	CodeGen/ProcessImplicitDefs.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon166::ProcessImplicitDefs	file:
MRI	CodeGen/RegAllocBase.h	/^  MachineRegisterInfo *MRI;$/;"	m	class:llvm::RegAllocBase
MRI	CodeGen/RegAllocFast.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	class:__anon140::RAFast	file:
MRI	CodeGen/RegisterCoalescer.cpp	/^    MachineRegisterInfo* MRI;$/;"	m	class:__anon114::RegisterCoalescer	file:
MRI	CodeGen/SelectionDAG/InstrEmitter.h	/^  MachineRegisterInfo *MRI;$/;"	m	class:llvm::InstrEmitter
MRI	CodeGen/SplitKit.h	/^  MachineRegisterInfo &MRI;$/;"	m	class:llvm::SplitEditor
MRI	CodeGen/StrongPHIElimination.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	class:__anon154::StrongPHIElimination	file:
MRI	CodeGen/TailDuplication.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	class:__anon167::TailDuplicatePass	file:
MRI	CodeGen/TwoAddressInstructionPass.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
MRI	CodeGen/VirtRegMap.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon97::VirtRegRewriter	file:
MRI	CodeGen/VirtRegMap.h	/^    MachineRegisterInfo *MRI;$/;"	m	class:llvm::VirtRegMap
MRI	MC/MCDisassembler/Disassembler.h	/^  llvm::OwningPtr<const llvm::MCRegisterInfo> MRI;$/;"	m	class:llvm::LLVMDisasmContext
MRI	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<const llvm::MCRegisterInfo> MRI;$/;"	m	struct:llvm::EDDisassembler
MRI	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	struct:__anon304::ARMPreAllocLoadStoreOpt	file:
MRI	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  const MCRegisterInfo *MRI;$/;"	m	class:__anon259::ARMAsmParser	file:
MRI	Target/ARM/MLxExpansionPass.cpp	/^    MachineRegisterInfo *MRI;$/;"	m	struct:__anon301::MLxExpansion	file:
MRI	Target/Hexagon/HexagonHardwareLoops.cpp	/^    MachineRegisterInfo   *MRI;$/;"	m	struct:__anon408::HexagonHardwareLoops	file:
MRI	Target/Hexagon/HexagonPeephole.cpp	/^    const MachineRegisterInfo *MRI;$/;"	m	struct:__anon411::HexagonPeephole	file:
MRI	Target/NVPTX/NVPTXAsmPrinter.h	/^  const MachineRegisterInfo *MRI;$/;"	m	class:llvm::NVPTXAsmPrinter
MRI	Target/NVPTX/VectorElementize.cpp	/^  MachineRegisterInfo *MRI;$/;"	m	class:__anon316::VectorElementize	file:
MRI	Target/PowerPC/PPCCTRLoops.cpp	/^    MachineRegisterInfo   *MRI;$/;"	m	struct:__anon325::PPCCTRLoops	file:
MRM0m	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM0m = 24,  MRM1m = 25,  MRM2m = 26,  MRM3m = 27, \/\/ Format \/0 \/1 \/2 \/3$/;"	e	enum:llvm::X86II::__anon350
MRM0r	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM0r = 16,  MRM1r = 17,  MRM2r = 18,  MRM3r = 19, \/\/ Format \/0 \/1 \/2 \/3$/;"	e	enum:llvm::X86II::__anon350
MRM1m	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM0m = 24,  MRM1m = 25,  MRM2m = 26,  MRM3m = 27, \/\/ Format \/0 \/1 \/2 \/3$/;"	e	enum:llvm::X86II::__anon350
MRM1r	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM0r = 16,  MRM1r = 17,  MRM2r = 18,  MRM3r = 19, \/\/ Format \/0 \/1 \/2 \/3$/;"	e	enum:llvm::X86II::__anon350
MRM2m	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM0m = 24,  MRM1m = 25,  MRM2m = 26,  MRM3m = 27, \/\/ Format \/0 \/1 \/2 \/3$/;"	e	enum:llvm::X86II::__anon350
MRM2r	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM0r = 16,  MRM1r = 17,  MRM2r = 18,  MRM3r = 19, \/\/ Format \/0 \/1 \/2 \/3$/;"	e	enum:llvm::X86II::__anon350
MRM3m	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM0m = 24,  MRM1m = 25,  MRM2m = 26,  MRM3m = 27, \/\/ Format \/0 \/1 \/2 \/3$/;"	e	enum:llvm::X86II::__anon350
MRM3r	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM0r = 16,  MRM1r = 17,  MRM2r = 18,  MRM3r = 19, \/\/ Format \/0 \/1 \/2 \/3$/;"	e	enum:llvm::X86II::__anon350
MRM4m	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM4m = 28,  MRM5m = 29,  MRM6m = 30,  MRM7m = 31, \/\/ Format \/4 \/5 \/6 \/7$/;"	e	enum:llvm::X86II::__anon350
MRM4r	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM4r = 20,  MRM5r = 21,  MRM6r = 22,  MRM7r = 23, \/\/ Format \/4 \/5 \/6 \/7$/;"	e	enum:llvm::X86II::__anon350
MRM5m	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM4m = 28,  MRM5m = 29,  MRM6m = 30,  MRM7m = 31, \/\/ Format \/4 \/5 \/6 \/7$/;"	e	enum:llvm::X86II::__anon350
MRM5r	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM4r = 20,  MRM5r = 21,  MRM6r = 22,  MRM7r = 23, \/\/ Format \/4 \/5 \/6 \/7$/;"	e	enum:llvm::X86II::__anon350
MRM6m	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM4m = 28,  MRM5m = 29,  MRM6m = 30,  MRM7m = 31, \/\/ Format \/4 \/5 \/6 \/7$/;"	e	enum:llvm::X86II::__anon350
MRM6r	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM4r = 20,  MRM5r = 21,  MRM6r = 22,  MRM7r = 23, \/\/ Format \/4 \/5 \/6 \/7$/;"	e	enum:llvm::X86II::__anon350
MRM7m	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM4m = 28,  MRM5m = 29,  MRM6m = 30,  MRM7m = 31, \/\/ Format \/4 \/5 \/6 \/7$/;"	e	enum:llvm::X86II::__anon350
MRM7r	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM4r = 20,  MRM5r = 21,  MRM6r = 22,  MRM7r = 23, \/\/ Format \/4 \/5 \/6 \/7$/;"	e	enum:llvm::X86II::__anon350
MRMDestMem	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRMDestMem     = 4,$/;"	e	enum:llvm::X86II::__anon350
MRMDestReg	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRMDestReg     = 3,$/;"	e	enum:llvm::X86II::__anon350
MRMInitReg	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRMInitReg = 32,$/;"	e	enum:llvm::X86II::__anon350
MRMSrcMem	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRMSrcMem      = 6,$/;"	e	enum:llvm::X86II::__anon350
MRMSrcReg	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRMSrcReg      = 5,$/;"	e	enum:llvm::X86II::__anon350
MRM_C1	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_C1 = 33, MRM_C2 = 34, MRM_C3 = 35, MRM_C4 = 36,$/;"	e	enum:llvm::X86II::__anon350
MRM_C2	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_C1 = 33, MRM_C2 = 34, MRM_C3 = 35, MRM_C4 = 36,$/;"	e	enum:llvm::X86II::__anon350
MRM_C3	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_C1 = 33, MRM_C2 = 34, MRM_C3 = 35, MRM_C4 = 36,$/;"	e	enum:llvm::X86II::__anon350
MRM_C4	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_C1 = 33, MRM_C2 = 34, MRM_C3 = 35, MRM_C4 = 36,$/;"	e	enum:llvm::X86II::__anon350
MRM_C8	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_C8 = 37, MRM_C9 = 38, MRM_E8 = 39, MRM_F0 = 40,$/;"	e	enum:llvm::X86II::__anon350
MRM_C9	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_C8 = 37, MRM_C9 = 38, MRM_E8 = 39, MRM_F0 = 40,$/;"	e	enum:llvm::X86II::__anon350
MRM_D0	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_F8 = 41, MRM_F9 = 42, MRM_D0 = 45, MRM_D1 = 46,$/;"	e	enum:llvm::X86II::__anon350
MRM_D1	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_F8 = 41, MRM_F9 = 42, MRM_D0 = 45, MRM_D1 = 46,$/;"	e	enum:llvm::X86II::__anon350
MRM_D4	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_D4 = 47, MRM_D8 = 48, MRM_D9 = 49, MRM_DA = 50,$/;"	e	enum:llvm::X86II::__anon350
MRM_D8	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_D4 = 47, MRM_D8 = 48, MRM_D9 = 49, MRM_DA = 50,$/;"	e	enum:llvm::X86II::__anon350
MRM_D9	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_D4 = 47, MRM_D8 = 48, MRM_D9 = 49, MRM_DA = 50,$/;"	e	enum:llvm::X86II::__anon350
MRM_DA	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_D4 = 47, MRM_D8 = 48, MRM_D9 = 49, MRM_DA = 50,$/;"	e	enum:llvm::X86II::__anon350
MRM_DB	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_DB = 51, MRM_DC = 52, MRM_DD = 53, MRM_DE = 54,$/;"	e	enum:llvm::X86II::__anon350
MRM_DC	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_DB = 51, MRM_DC = 52, MRM_DD = 53, MRM_DE = 54,$/;"	e	enum:llvm::X86II::__anon350
MRM_DD	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_DB = 51, MRM_DC = 52, MRM_DD = 53, MRM_DE = 54,$/;"	e	enum:llvm::X86II::__anon350
MRM_DE	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_DB = 51, MRM_DC = 52, MRM_DD = 53, MRM_DE = 54,$/;"	e	enum:llvm::X86II::__anon350
MRM_DF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_DF = 55,$/;"	e	enum:llvm::X86II::__anon350
MRM_E8	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_C8 = 37, MRM_C9 = 38, MRM_E8 = 39, MRM_F0 = 40,$/;"	e	enum:llvm::X86II::__anon350
MRM_F0	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_C8 = 37, MRM_C9 = 38, MRM_E8 = 39, MRM_F0 = 40,$/;"	e	enum:llvm::X86II::__anon350
MRM_F8	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_F8 = 41, MRM_F9 = 42, MRM_D0 = 45, MRM_D1 = 46,$/;"	e	enum:llvm::X86II::__anon350
MRM_F9	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MRM_F8 = 41, MRM_F9 = 42, MRM_D0 = 45, MRM_D1 = 46,$/;"	e	enum:llvm::X86II::__anon350
MRVFunctionsTracked	Transforms/Scalar/SCCP.cpp	/^  SmallPtrSet<Function*, 16> MRVFunctionsTracked;$/;"	m	class:__anon531::SCCPSolver	file:
MSAH	Target/X86/X86RegisterInfo.cpp	/^    MSAH() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon378::MSAH
MSAH	Target/X86/X86RegisterInfo.cpp	/^  struct MSAH : public MachineFunctionPass {$/;"	s	namespace:__anon378	file:
MSI	MC/MCDisassembler/Disassembler.h	/^  llvm::OwningPtr<const llvm::MCSubtargetInfo> MSI;$/;"	m	class:llvm::LLVMDisasmContext
MSP430AsmPrinter	Target/MSP430/MSP430AsmPrinter.cpp	/^    MSP430AsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:__anon391::MSP430AsmPrinter
MSP430AsmPrinter	Target/MSP430/MSP430AsmPrinter.cpp	/^  class MSP430AsmPrinter : public AsmPrinter {$/;"	c	namespace:__anon391	file:
MSP430BSel	Target/MSP430/MSP430BranchSelector.cpp	/^    MSP430BSel() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon396::MSP430BSel
MSP430BSel	Target/MSP430/MSP430BranchSelector.cpp	/^  struct MSP430BSel : public MachineFunctionPass {$/;"	s	namespace:__anon396	file:
MSP430CC	Target/MSP430/MSP430.h	/^namespace MSP430CC {$/;"	n
MSP430DAGToDAGISel	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    MSP430DAGToDAGISel(MSP430TargetMachine &TM, CodeGenOpt::Level OptLevel)$/;"	f	class:__anon395::MSP430DAGToDAGISel
MSP430DAGToDAGISel	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^  class MSP430DAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon395	file:
MSP430FrameLowering	Target/MSP430/MSP430FrameLowering.h	/^  explicit MSP430FrameLowering(const MSP430Subtarget &sti)$/;"	f	class:llvm::MSP430FrameLowering
MSP430FrameLowering	Target/MSP430/MSP430FrameLowering.h	/^class MSP430FrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
MSP430II	Target/MSP430/MSP430InstrInfo.h	/^namespace MSP430II {$/;"	n	namespace:llvm
MSP430INSTPRINTER_H	Target/MSP430/InstPrinter/MSP430InstPrinter.h	15;"	d
MSP430ISD	Target/MSP430/MSP430ISelLowering.h	/^  namespace MSP430ISD {$/;"	n	namespace:llvm
MSP430ISelAddressMode	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    MSP430ISelAddressMode()$/;"	f	struct:__anon392::MSP430ISelAddressMode
MSP430ISelAddressMode	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^  struct MSP430ISelAddressMode {$/;"	s	namespace:__anon392	file:
MSP430InstPrinter	Target/MSP430/InstPrinter/MSP430InstPrinter.h	/^    MSP430InstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,$/;"	f	class:llvm::MSP430InstPrinter
MSP430InstPrinter	Target/MSP430/InstPrinter/MSP430InstPrinter.h	/^  class MSP430InstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
MSP430InstrInfo	Target/MSP430/MSP430InstrInfo.cpp	/^MSP430InstrInfo::MSP430InstrInfo(MSP430TargetMachine &tm)$/;"	f	class:MSP430InstrInfo
MSP430InstrInfo	Target/MSP430/MSP430InstrInfo.h	/^class MSP430InstrInfo : public MSP430GenInstrInfo {$/;"	c	namespace:llvm
MSP430MACHINEFUNCTIONINFO_H	Target/MSP430/MSP430MachineFunctionInfo.h	15;"	d
MSP430MCAsmInfo	Target/MSP430/MCTargetDesc/MSP430MCAsmInfo.cpp	/^MSP430MCAsmInfo::MSP430MCAsmInfo(const Target &T, StringRef TT) {$/;"	f	class:MSP430MCAsmInfo
MSP430MCAsmInfo	Target/MSP430/MCTargetDesc/MSP430MCAsmInfo.h	/^  class MSP430MCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
MSP430MCInstLower	Target/MSP430/MSP430MCInstLower.h	/^  MSP430MCInstLower(MCContext &ctx, AsmPrinter &printer)$/;"	f	class:llvm::MSP430MCInstLower
MSP430MCInstLower	Target/MSP430/MSP430MCInstLower.h	/^class LLVM_LIBRARY_VISIBILITY MSP430MCInstLower {$/;"	c	namespace:llvm
MSP430MCTARGETDESC_H	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.h	15;"	d
MSP430MachineFunctionInfo	Target/MSP430/MSP430MachineFunctionInfo.h	/^  MSP430MachineFunctionInfo() : CalleeSavedFrameSize(0) {}$/;"	f	class:llvm::MSP430MachineFunctionInfo
MSP430MachineFunctionInfo	Target/MSP430/MSP430MachineFunctionInfo.h	/^  explicit MSP430MachineFunctionInfo(MachineFunction &MF)$/;"	f	class:llvm::MSP430MachineFunctionInfo
MSP430MachineFunctionInfo	Target/MSP430/MSP430MachineFunctionInfo.h	/^class MSP430MachineFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
MSP430PassConfig	Target/MSP430/MSP430TargetMachine.cpp	/^  MSP430PassConfig(MSP430TargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon390::MSP430PassConfig
MSP430PassConfig	Target/MSP430/MSP430TargetMachine.cpp	/^class MSP430PassConfig : public TargetPassConfig {$/;"	c	namespace:__anon390	file:
MSP430RegisterInfo	Target/MSP430/MSP430RegisterInfo.cpp	/^MSP430RegisterInfo::MSP430RegisterInfo(MSP430TargetMachine &tm,$/;"	f	class:MSP430RegisterInfo
MSP430RegisterInfo	Target/MSP430/MSP430RegisterInfo.h	/^struct MSP430RegisterInfo : public MSP430GenRegisterInfo {$/;"	s	namespace:llvm
MSP430SELECTIONDAGINFO_H	Target/MSP430/MSP430SelectionDAGInfo.h	15;"	d
MSP430SelectionDAGInfo	Target/MSP430/MSP430SelectionDAGInfo.cpp	/^MSP430SelectionDAGInfo::MSP430SelectionDAGInfo(const MSP430TargetMachine &TM)$/;"	f	class:MSP430SelectionDAGInfo
MSP430SelectionDAGInfo	Target/MSP430/MSP430SelectionDAGInfo.h	/^class MSP430SelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
MSP430Subtarget	Target/MSP430/MSP430Subtarget.cpp	/^MSP430Subtarget::MSP430Subtarget(const std::string &TT,$/;"	f	class:MSP430Subtarget
MSP430Subtarget	Target/MSP430/MSP430Subtarget.h	/^class MSP430Subtarget : public MSP430GenSubtargetInfo {$/;"	c	namespace:llvm
MSP430TARGETASMINFO_H	Target/MSP430/MCTargetDesc/MSP430MCAsmInfo.h	15;"	d
MSP430TargetLowering	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::MSP430TargetLowering(MSP430TargetMachine &tm) :$/;"	f	class:MSP430TargetLowering
MSP430TargetLowering	Target/MSP430/MSP430ISelLowering.h	/^  class MSP430TargetLowering : public TargetLowering {$/;"	c	namespace:llvm
MSP430TargetMachine	Target/MSP430/MSP430TargetMachine.cpp	/^MSP430TargetMachine::MSP430TargetMachine(const Target &T,$/;"	f	class:MSP430TargetMachine
MSP430TargetMachine	Target/MSP430/MSP430TargetMachine.h	/^class MSP430TargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
MSP430_FRAMEINFO_H	Target/MSP430/MSP430FrameLowering.h	15;"	d
MSP430_MCINSTLOWER_H	Target/MSP430/MSP430MCInstLower.h	11;"	d
MST	Transforms/Instrumentation/MaximumSpanningTree.h	/^    MaxSpanTree MST;$/;"	m	class:llvm::MaximumSpanningTree
MSUBU_DSP	Target/Mips/MipsISelLowering.h	/^      MSUBU_DSP,$/;"	e	enum:llvm::MipsISD::NodeType
MSUB_DSP	Target/Mips/MipsISelLowering.h	/^      MSUB_DSP,$/;"	e	enum:llvm::MipsISD::NodeType
MSub	Target/Mips/MipsISelLowering.h	/^      MSub,$/;"	e	enum:llvm::MipsISD::NodeType
MSubu	Target/Mips/MipsISelLowering.h	/^      MSubu,$/;"	e	enum:llvm::MipsISD::NodeType
MTCTR	Target/PowerPC/PPCISelLowering.h	/^      MTCTR,$/;"	e	enum:llvm::PPCISD::NodeType
MTFSB0	Target/PowerPC/PPCISelLowering.h	/^      MTFSB0,$/;"	e	enum:llvm::PPCISD::NodeType
MTFSB1	Target/PowerPC/PPCISelLowering.h	/^      MTFSB1,$/;"	e	enum:llvm::PPCISD::NodeType
MTFSF	Target/PowerPC/PPCISelLowering.h	/^      MTFSF,$/;"	e	enum:llvm::PPCISD::NodeType
MTHLIP	Target/Mips/MipsISelLowering.h	/^      MTHLIP,$/;"	e	enum:llvm::MipsISD::NodeType
MTM	CodeGen/MachineTraceMetrics.h	/^    MachineTraceMetrics &MTM;$/;"	m	class:llvm::MachineTraceMetrics::Ensemble
MUL64_MARKER	Target/CellSPU/SPUISelLowering.h	/^      MUL64_MARKER,             \/\/\/< i64 multiply marker$/;"	e	enum:llvm::SPUISD::NodeType
MULSAQ_S_W_PH	Target/Mips/MipsISelLowering.h	/^      MULSAQ_S_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
MULSA_W_PH	Target/Mips/MipsISelLowering.h	/^      MULSA_W_PH,$/;"	e	enum:llvm::MipsISD::NodeType
MULT	Target/Mips/MipsISelLowering.h	/^      MULT,$/;"	e	enum:llvm::MipsISD::NodeType
MULTU	Target/Mips/MipsISelLowering.h	/^      MULTU,$/;"	e	enum:llvm::MipsISD::NodeType
MUL_IMM	Target/X86/X86ISelLowering.h	/^      MUL_IMM,$/;"	e	enum:llvm::X86ISD::NodeType
MUSTEAT	Support/regcomp.c	129;"	d	file:
MUSTNOTSEE	Support/regcomp.c	130;"	d	file:
MUSTSEE	Support/regcomp.c	128;"	d	file:
MUTEX_INITIALIZER	ExecutionEngine/IntelJITEvents/ittnotify_config.h	181;"	d
MUTEX_INITIALIZER	ExecutionEngine/IntelJITEvents/ittnotify_config.h	195;"	d
M_BitShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    M_BitShift     = 5,$/;"	e	enum:llvm::ARMII::__anon288
MachOObject	Object/MachOObject.cpp	/^MachOObject::MachOObject(MemoryBuffer *Buffer_, bool IsLittleEndian_,$/;"	f	class:MachOObject
MachOObjectFile	Object/MachOObjectFile.cpp	/^MachOObjectFile::MachOObjectFile(MemoryBuffer *Object, MachOObject *MOO,$/;"	f	class:llvm::object::MachOObjectFile
MachOUniqueMapTy	MC/MCContext.cpp	/^typedef StringMap<const MCSectionMachO*> MachOUniqueMapTy;$/;"	t	file:
Machine	VMCore/AsmWriter.cpp	/^  SlotTracker &Machine;$/;"	m	class:__anon613::AssemblyWriter	file:
MachineBasicBlock	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::MachineBasicBlock(MachineFunction &mf, const BasicBlock *bb)$/;"	f	class:MachineBasicBlock
MachineBlockFrequencyInfo	CodeGen/MachineBlockFrequencyInfo.cpp	/^MachineBlockFrequencyInfo::MachineBlockFrequencyInfo() : MachineFunctionPass(ID) {$/;"	f	class:MachineBlockFrequencyInfo
MachineBlockPlacement	CodeGen/MachineBlockPlacement.cpp	/^  MachineBlockPlacement() : MachineFunctionPass(ID) {$/;"	f	class:__anon107::MachineBlockPlacement
MachineBlockPlacement	CodeGen/MachineBlockPlacement.cpp	/^class MachineBlockPlacement : public MachineFunctionPass {$/;"	c	namespace:__anon107	file:
MachineBlockPlacementID	CodeGen/MachineBlockPlacement.cpp	/^char &llvm::MachineBlockPlacementID = MachineBlockPlacement::ID;$/;"	m	class:llvm	file:
MachineBlockPlacementStats	CodeGen/MachineBlockPlacement.cpp	/^  MachineBlockPlacementStats() : MachineFunctionPass(ID) {$/;"	f	class:__anon109::MachineBlockPlacementStats
MachineBlockPlacementStats	CodeGen/MachineBlockPlacement.cpp	/^class MachineBlockPlacementStats : public MachineFunctionPass {$/;"	c	namespace:__anon109	file:
MachineBlockPlacementStatsID	CodeGen/MachineBlockPlacement.cpp	/^char &llvm::MachineBlockPlacementStatsID = MachineBlockPlacementStats::ID;$/;"	m	class:llvm	file:
MachineCSE	CodeGen/MachineCSE.cpp	/^    MachineCSE() : MachineFunctionPass(ID), LookAheadLimit(5), CurrVN(0) {$/;"	f	class:__anon161::MachineCSE
MachineCSE	CodeGen/MachineCSE.cpp	/^  class MachineCSE : public MachineFunctionPass {$/;"	c	namespace:__anon161	file:
MachineCSEID	CodeGen/MachineCSE.cpp	/^char &llvm::MachineCSEID = MachineCSE::ID;$/;"	m	class:llvm	file:
MachineCopyPropagation	CodeGen/MachineCopyPropagation.cpp	/^    MachineCopyPropagation() : MachineFunctionPass(ID) {$/;"	f	class:__anon93::MachineCopyPropagation
MachineCopyPropagation	CodeGen/MachineCopyPropagation.cpp	/^  class MachineCopyPropagation : public MachineFunctionPass {$/;"	c	namespace:__anon93	file:
MachineCopyPropagationID	CodeGen/MachineCopyPropagation.cpp	/^char &llvm::MachineCopyPropagationID = MachineCopyPropagation::ID;$/;"	m	class:llvm	file:
MachineDomTreeNode	CodeGen/LiveRangeCalc.h	/^typedef DomTreeNodeBase<MachineBasicBlock> MachineDomTreeNode;$/;"	t	namespace:llvm
MachineDominatorTree	CodeGen/MachineDominators.cpp	/^MachineDominatorTree::MachineDominatorTree()$/;"	f	class:MachineDominatorTree
MachineDominatorsID	CodeGen/MachineDominators.cpp	/^char &llvm::MachineDominatorsID = MachineDominatorTree::ID;$/;"	m	class:llvm	file:
MachineFunction	CodeGen/MachineFunction.cpp	/^MachineFunction::MachineFunction(const Function *F, const TargetMachine &TM,$/;"	f	class:MachineFunction
MachineFunctionAnalysis	CodeGen/MachineFunctionAnalysis.cpp	/^MachineFunctionAnalysis::MachineFunctionAnalysis(const TargetMachine &tm) :$/;"	f	class:MachineFunctionAnalysis
MachineFunctionPrinterPass	CodeGen/MachineFunctionPrinterPass.cpp	/^  MachineFunctionPrinterPass() : MachineFunctionPass(ID), OS(dbgs()) { }$/;"	f	struct:__anon96::MachineFunctionPrinterPass
MachineFunctionPrinterPass	CodeGen/MachineFunctionPrinterPass.cpp	/^  MachineFunctionPrinterPass(raw_ostream &os, const std::string &banner) $/;"	f	struct:__anon96::MachineFunctionPrinterPass
MachineFunctionPrinterPass	CodeGen/MachineFunctionPrinterPass.cpp	/^struct MachineFunctionPrinterPass : public MachineFunctionPass {$/;"	s	namespace:__anon96	file:
MachineFunctionPrinterPassID	CodeGen/MachineFunctionPrinterPass.cpp	/^char &llvm::MachineFunctionPrinterPassID = MachineFunctionPrinterPass::ID;$/;"	m	class:llvm	file:
MachineI	Target/Hexagon/HexagonMCInst.h	/^    const MachineInstr *MachineI;$/;"	m	class:llvm::HexagonMCInst
MachineInstr	CodeGen/MachineInstr.cpp	/^MachineInstr::MachineInstr()$/;"	f	class:MachineInstr
MachineInstr	CodeGen/MachineInstr.cpp	/^MachineInstr::MachineInstr(MachineBasicBlock *MBB, const DebugLoc dl,$/;"	f	class:MachineInstr
MachineInstr	CodeGen/MachineInstr.cpp	/^MachineInstr::MachineInstr(MachineFunction &MF, const MachineInstr &MI)$/;"	f	class:MachineInstr
MachineInstr	CodeGen/MachineInstr.cpp	/^MachineInstr::MachineInstr(const MCInstrDesc &tid, const DebugLoc dl,$/;"	f	class:MachineInstr
MachineInstr	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	219;"	d	file:
MachineInstr	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	222;"	d	file:
MachineLICM	CodeGen/MachineLICM.cpp	/^    MachineLICM() :$/;"	f	class:__anon156::MachineLICM
MachineLICM	CodeGen/MachineLICM.cpp	/^    explicit MachineLICM(bool PreRA) :$/;"	f	class:__anon156::MachineLICM
MachineLICM	CodeGen/MachineLICM.cpp	/^  class MachineLICM : public MachineFunctionPass {$/;"	c	namespace:__anon156	file:
MachineLICMID	CodeGen/MachineLICM.cpp	/^char &llvm::MachineLICMID = MachineLICM::ID;$/;"	m	class:llvm	file:
MachineLoopInfoID	CodeGen/MachineLoopInfo.cpp	/^char &llvm::MachineLoopInfoID = MachineLoopInfo::ID;$/;"	m	class:llvm	file:
MachineLoopRange	CodeGen/MachineLoopRanges.cpp	/^MachineLoopRange::MachineLoopRange(const MachineLoop *loop,$/;"	f	class:MachineLoopRange
MachineLoopRangesID	CodeGen/MachineLoopRanges.cpp	/^char &llvm::MachineLoopRangesID = MachineLoopRanges::ID;$/;"	m	class:llvm	file:
MachineMemOperand	CodeGen/MachineInstr.cpp	/^MachineMemOperand::MachineMemOperand(MachinePointerInfo ptrinfo, unsigned f,$/;"	f	class:MachineMemOperand
MachineModuleInfo	CodeGen/MachineModuleInfo.cpp	/^MachineModuleInfo::MachineModuleInfo()$/;"	f	class:MachineModuleInfo
MachineModuleInfo	CodeGen/MachineModuleInfo.cpp	/^MachineModuleInfo::MachineModuleInfo(const MCAsmInfo &MAI,$/;"	f	class:MachineModuleInfo
MachineOpc	Target/ARM/ARMBaseInstrInfo.cpp	/^  uint16_t MachineOpc;$/;"	m	struct:AddSubFlagsOpcodePair	file:
MachineOperandType	Target/Mips/MipsMCInstLower.h	/^  typedef MachineOperand::MachineOperandType MachineOperandType;$/;"	t	class:llvm::MipsMCInstLower
MachinePostDominatorTree	CodeGen/MachinePostDominators.cpp	/^MachinePostDominatorTree::MachinePostDominatorTree() : MachineFunctionPass(ID) {$/;"	f	class:MachinePostDominatorTree
MachineRegisterInfo	CodeGen/MachineRegisterInfo.cpp	/^MachineRegisterInfo::MachineRegisterInfo(const TargetRegisterInfo &TRI)$/;"	f	class:MachineRegisterInfo
MachineSSAUpdater	CodeGen/MachineSSAUpdater.cpp	/^MachineSSAUpdater::MachineSSAUpdater(MachineFunction &MF,$/;"	f	class:MachineSSAUpdater
MachineSchedContext	CodeGen/MachineScheduler.cpp	/^MachineSchedContext::MachineSchedContext():$/;"	f	class:MachineSchedContext
MachineScheduler	CodeGen/MachineScheduler.cpp	/^MachineScheduler::MachineScheduler()$/;"	f	class:MachineScheduler
MachineScheduler	CodeGen/MachineScheduler.cpp	/^class MachineScheduler : public MachineSchedContext,$/;"	c	namespace:__anon125	file:
MachineSchedulerID	CodeGen/MachineScheduler.cpp	/^char &llvm::MachineSchedulerID = MachineScheduler::ID;$/;"	m	class:llvm	file:
MachineSinking	CodeGen/MachineSink.cpp	/^    MachineSinking() : MachineFunctionPass(ID) {$/;"	f	class:__anon101::MachineSinking
MachineSinking	CodeGen/MachineSink.cpp	/^  class MachineSinking : public MachineFunctionPass {$/;"	c	namespace:__anon101	file:
MachineSinkingID	CodeGen/MachineSink.cpp	/^char &llvm::MachineSinkingID = MachineSinking::ID;$/;"	m	class:llvm	file:
MachineTraceMetrics	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::MachineTraceMetrics()$/;"	f	class:MachineTraceMetrics
MachineTraceMetrics	CodeGen/MachineTraceMetrics.h	/^class MachineTraceMetrics : public MachineFunctionPass {$/;"	c	namespace:llvm
MachineTraceMetricsID	CodeGen/MachineTraceMetrics.cpp	/^char &llvm::MachineTraceMetricsID = MachineTraceMetrics::ID;$/;"	m	class:llvm	file:
MachineVerifier	CodeGen/MachineVerifier.cpp	/^    MachineVerifier(Pass *pass, const char *b) :$/;"	f	struct:__anon139::MachineVerifier
MachineVerifier	CodeGen/MachineVerifier.cpp	/^  struct MachineVerifier {$/;"	s	namespace:__anon139	file:
MachineVerifierPass	CodeGen/MachineVerifier.cpp	/^    MachineVerifierPass(const char *b = 0)$/;"	f	struct:__anon139::MachineVerifierPass
MachineVerifierPass	CodeGen/MachineVerifier.cpp	/^  struct MachineVerifierPass : public MachineFunctionPass {$/;"	s	namespace:__anon139	file:
MacinfoString	Support/Dwarf.cpp	/^const char *llvm::dwarf::MacinfoString(unsigned Encoding) {$/;"	f	class:llvm::dwarf
Macro	MC/MCParser/AsmParser.cpp	/^  Macro(StringRef N, StringRef B, const MacroParameters &P) :$/;"	f	struct:__anon211::Macro
Macro	MC/MCParser/AsmParser.cpp	/^struct Macro {$/;"	s	namespace:__anon211	file:
MacroArgument	MC/MCParser/AsmParser.cpp	/^typedef std::vector<AsmToken> MacroArgument;$/;"	t	namespace:__anon211	file:
MacroArguments	MC/MCParser/AsmParser.cpp	/^typedef std::vector<MacroArgument> MacroArguments;$/;"	t	namespace:__anon211	file:
MacroInstantiation	MC/MCParser/AsmParser.cpp	/^MacroInstantiation::MacroInstantiation(const Macro *M, SMLoc IL, SMLoc EL,$/;"	f	class:MacroInstantiation
MacroInstantiation	MC/MCParser/AsmParser.cpp	/^struct MacroInstantiation {$/;"	s	namespace:__anon211	file:
MacroMap	MC/MCParser/AsmParser.cpp	/^  StringMap<Macro*> MacroMap;$/;"	m	class:__anon211::AsmParser	file:
MacroParameter	MC/MCParser/AsmParser.cpp	/^typedef std::pair<StringRef, MacroArgument> MacroParameter;$/;"	t	namespace:__anon211	file:
MacroParameters	MC/MCParser/AsmParser.cpp	/^typedef std::vector<MacroParameter> MacroParameters;$/;"	t	namespace:__anon211	file:
MadeChange	CodeGen/IfConversion.cpp	/^    bool MadeChange;$/;"	m	class:__anon99::IfConverter	file:
MadeChange	Transforms/Scalar/Reassociate.cpp	/^    bool MadeChange;$/;"	m	class:__anon549::Reassociate	file:
MadeIRChange	Transforms/InstCombine/InstCombine.h	/^  bool MadeIRChange;$/;"	m	class:llvm::InstCombiner
Magic	Object/Archive.cpp	/^static const char *Magic = "!<arch>\\n";$/;"	v	file:
MagicHash	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    static const uint32_t MagicHash = 0x48415348;$/;"	m	struct:llvm::DwarfAccelTable::TableHeader
MaintainLiveIns	CodeGen/BranchFolding.cpp	/^void BranchFolder::MaintainLiveIns(MachineBasicBlock *CurMBB,$/;"	f	class:BranchFolder
MaintainNoSignedWrap	Transforms/InstCombine/InstructionCombining.cpp	/^static bool MaintainNoSignedWrap(BinaryOperator &I, Value *B, Value *C) {$/;"	f	file:
Make	MC/MCDwarf.cpp	/^void MCGenDwarfLabelEntry::Make(MCSymbol *Symbol, MCStreamer *MCOS,$/;"	f	class:MCGenDwarfLabelEntry
Make	MC/MCDwarf.cpp	/^void MCLineEntry::Make(MCStreamer *MCOS, const MCSection *Section) {$/;"	f	class:MCLineEntry
MakeErrMsg	Support/Unix/Unix.h	/^static inline bool MakeErrMsg($/;"	f
MakeErrMsg	Support/Windows/Windows.h	/^inline bool MakeErrMsg(std::string* ErrMsg, const std::string& prefix) {$/;"	f
MakeLibCall	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDValue DAGTypeLegalizer::MakeLibCall(RTLIB::Libcall LC, EVT RetVT,$/;"	f	class:DAGTypeLegalizer
MakeM0Inst	Target/X86/X86InstrInfo.cpp	/^static MachineInstr *MakeM0Inst(const TargetInstrInfo &TII, unsigned Opcode,$/;"	f	file:
MakeSectionReal	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::MakeSectionReal(COFFSection &S, size_t Number) {$/;"	f	class:WinCOFFObjectWriter
MakeStartMinusEndExpr	MC/MCDwarf.cpp	/^static inline const MCExpr *MakeStartMinusEndExpr(const MCStreamer &MCOS,$/;"	f	file:
MakeSymbolReal	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::MakeSymbolReal(COFFSymbol &S, size_t Index) {$/;"	f	class:WinCOFFObjectWriter
MallocLike	Analysis/MemoryBuiltins.cpp	/^  MallocLike         = 1<<0, \/\/ allocates$/;"	e	enum:AllocType	file:
ManagedStrPool	Target/NVPTX/NVPTXRegisterInfo.h	/^  ManagedStringPool     ManagedStrPool;$/;"	m	class:llvm::NVPTXRegisterInfo
ManagedStrPool	Target/NVPTX/NVPTXTargetMachine.h	/^  ManagedStringPool     ManagedStrPool;$/;"	m	class:llvm::NVPTXTargetMachine
ManagedStringPool	Target/NVPTX/ManagedStringPool.h	/^  ManagedStringPool() {}$/;"	f	class:llvm::ManagedStringPool
ManagedStringPool	Target/NVPTX/ManagedStringPool.h	/^class ManagedStringPool {$/;"	c	namespace:llvm
Mang	Target/Mips/MipsMCInstLower.h	/^  Mangler *Mang;$/;"	m	class:llvm::MipsMCInstLower
Mang	Target/X86/X86MCInstLower.cpp	/^  Mangler *Mang;$/;"	m	class:__anon380::X86MCInstLower	file:
MangleLetter	Target/Mangler.cpp	/^static void MangleLetter(SmallVectorImpl<char> &OutName, unsigned char C) {$/;"	f	file:
Map	CodeGen/LiveIntervalUnion.h	/^  typedef LiveSegments Map;$/;"	t	class:llvm::LiveIntervalUnion
Map	CodeGen/MachineModuleInfo.cpp	/^  MMIAddrLabelMap *Map;$/;"	m	class:llvm::MMIAddrLabelMapCallbackPtr	file:
Map	ExecutionEngine/JIT/JITEmitter.cpp	/^    std::map<void*, JITResolver*> Map;$/;"	m	class:__anon182::StubToResolverMapTy	file:
Map	MC/WinCOFFObjectWriter.cpp	/^  map Map;$/;"	m	class:__anon222::StringTable	file:
Map	Support/Timer.cpp	/^  StringMap<std::pair<TimerGroup*, Name2TimerMap> > Map;$/;"	m	class:__anon246::Name2PairMap	file:
Map	Transforms/Scalar/ObjCARC.cpp	/^    MapTy Map;$/;"	m	class:__anon498::MapVector	file:
Map	Transforms/Scalar/Reassociate.cpp	/^    const DenseMap<Value *, unsigned> &Map;$/;"	m	struct:__anon550::IsValueInMap	file:
Map	VMCore/ConstantsContext.h	/^  MapTy Map;$/;"	m	class:llvm::ConstantAggrUniqueMap
Map	VMCore/ConstantsContext.h	/^  MapTy Map;$/;"	m	class:llvm::ConstantUniqueMap
MapInfo	VMCore/ConstantsContext.h	/^  struct MapInfo {$/;"	s	class:llvm::ConstantAggrUniqueMap
MapKey	VMCore/ConstantsContext.h	/^  typedef std::pair<TypeClass*, ValType> MapKey;$/;"	t	class:llvm::ConstantUniqueMap
MapTy	Transforms/Scalar/ObjCARC.cpp	/^    typedef DenseMap<KeyT, size_t> MapTy;$/;"	t	class:__anon498::MapVector	file:
MapTy	Transforms/Scalar/ObjCARC.cpp	/^    typedef MapVector<const Value *, PtrState> MapTy;$/;"	t	class:__anon507::BBState	file:
MapTy	VMCore/ConstantsContext.h	/^  typedef DenseMap<ConstantClass *, char, MapInfo> MapTy;$/;"	t	class:llvm::ConstantAggrUniqueMap
MapTy	VMCore/ConstantsContext.h	/^  typedef std::map<MapKey, ConstantClass *> MapTy;$/;"	t	class:llvm::ConstantUniqueMap
MapType	VMCore/PassRegistry.cpp	/^  typedef DenseMap<const void*, const PassInfo*> MapType;$/;"	t	struct:__anon607::PassRegistryImpl	file:
MapValue	Transforms/Utils/ValueMapper.cpp	/^Value *llvm::MapValue(const Value *V, ValueToValueMapTy &VM, RemapFlags Flags,$/;"	f	class:llvm
MapVector	Transforms/Scalar/ObjCARC.cpp	/^  class MapVector {$/;"	c	namespace:__anon498	file:
MappedTypes	Linker/LinkModules.cpp	/^  DenseMap<Type*, Type*> MappedTypes;$/;"	m	class:__anon201::TypeMapTy	file:
MappingOffset	Transforms/Instrumentation/AddressSanitizer.cpp	/^  uint64_t MappingOffset;$/;"	m	struct:__anon491::AddressSanitizer	file:
MappingScale	Transforms/Instrumentation/AddressSanitizer.cpp	/^  int MappingScale;$/;"	m	struct:__anon491::AddressSanitizer	file:
MarkAllocated	CodeGen/CallingConvLower.cpp	/^void CCState::MarkAllocated(unsigned Reg) {$/;"	f	class:CCState
MarkAllocated	Target/Hexagon/HexagonCallingConvLower.cpp	/^void Hexagon_CCState::MarkAllocated(unsigned Reg) {$/;"	f	class:Hexagon_CCState
MarkBlockExecutable	Analysis/SparsePropagation.cpp	/^void SparseSolver::MarkBlockExecutable(BasicBlock *BB) {$/;"	f	class:SparseSolver
MarkBlockExecutable	Transforms/Scalar/SCCP.cpp	/^  bool MarkBlockExecutable(BasicBlock *BB) {$/;"	f	class:__anon531::SCCPSolver
MarkBlocksLiveIn	CodeGen/SjLjEHPrepare.cpp	/^static void MarkBlocksLiveIn(BasicBlock *BB,$/;"	f	file:
MarkBlocksLiveIn	Transforms/Utils/LowerInvoke.cpp	/^static void MarkBlocksLiveIn(BasicBlock *BB, std::set<BasicBlock*> &LiveBBs) {$/;"	f	file:
MarkIfNotLive	Transforms/IPO/DeadArgumentElimination.cpp	/^DAE::Liveness DAE::MarkIfNotLive(RetOrArg Use, UseVector &MaybeLiveUses) {$/;"	f	class:DAE
MarkIndicesSafe	Transforms/IPO/ArgumentPromotion.cpp	/^static void MarkIndicesSafe(const ArgPromotion::IndicesVector &ToMark,$/;"	f	file:
MarkLive	Transforms/IPO/DeadArgumentElimination.cpp	/^void DAE::MarkLive(const Function &F) {$/;"	f	class:DAE
MarkLive	Transforms/IPO/DeadArgumentElimination.cpp	/^void DAE::MarkLive(const RetOrArg &RA) {$/;"	f	class:DAE
MarkOptionsChanged	Support/CommandLine.cpp	/^void cl::MarkOptionsChanged() {$/;"	f	class:cl
MarkPendingLoopPredicate	Analysis/ScalarEvolution.cpp	/^  MarkPendingLoopPredicate(Value *C, DenseSet<Value*> &LP)$/;"	f	struct:MarkPendingLoopPredicate
MarkPendingLoopPredicate	Analysis/ScalarEvolution.cpp	/^struct MarkPendingLoopPredicate {$/;"	s	file:
MarkUnsafe	Transforms/Scalar/ScalarReplAggregates.cpp	/^    void MarkUnsafe(AllocaInfo &I, Instruction *User) {$/;"	f	struct:__anon521::SROA	file:
MarkUsedGlobalsAsNeeded	Transforms/IPO/GlobalDCE.cpp	/^void GlobalDCE::MarkUsedGlobalsAsNeeded(Constant *C) {$/;"	f	class:GlobalDCE
MarkValue	Transforms/IPO/DeadArgumentElimination.cpp	/^void DAE::MarkValue(const RetOrArg &RA, Liveness L,$/;"	f	class:DAE
MarkVirtRegAliveInBlock	CodeGen/LiveVariables.cpp	/^void LiveVariables::MarkVirtRegAliveInBlock(VarInfo &VRInfo,$/;"	f	class:LiveVariables
MarkVirtRegAliveInBlock	CodeGen/LiveVariables.cpp	/^void LiveVariables::MarkVirtRegAliveInBlock(VarInfo& VRInfo,$/;"	f	class:LiveVariables
Markers	CodeGen/StackColoring.cpp	/^  SmallVector<MachineInstr*, 8> Markers;$/;"	m	class:__anon113::StackColoring	file:
Mask	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    uint64_t Mask;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestCase
Mask	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    uint64_t Mask;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBits
Mask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Mask:4;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon266	file:
Mask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    unsigned Mask:4;          \/\/ Condition mask for instructions.$/;"	m	struct:__anon259::ARMAsmParser::__anon260	file:
Mask	Target/X86/X86FloatingPoint.cpp	/^      unsigned Mask;$/;"	m	struct:__anon386::FPS::LiveBundle	file:
MaskedICmpType	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^enum MaskedICmpType {$/;"	g	file:
MaskedValueIsZero	Analysis/ValueTracking.cpp	/^bool llvm::MaskedValueIsZero(Value *V, const APInt &Mask,$/;"	f	class:llvm
MaskedValueIsZero	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SelectionDAG::MaskedValueIsZero(SDValue Op, const APInt &Mask,$/;"	f	class:SelectionDAG
MaskedValueIsZero	Transforms/InstCombine/InstCombine.h	/^  bool MaskedValueIsZero(Value *V, const APInt &Mask, $/;"	f	class:llvm::InstCombiner
MatchAddr	Transforms/Utils/AddrModeMatcher.cpp	/^bool AddressingModeMatcher::MatchAddr(Value *Addr, unsigned Depth) {$/;"	f	class:AddressingModeMatcher
MatchAddress	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^bool MSP430DAGToDAGISel::MatchAddress(SDValue N, MSP430ISelAddressMode &AM) {$/;"	f	class:MSP430DAGToDAGISel
MatchAddress	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::MatchAddress(SDValue N, X86ISelAddressMode &AM) {$/;"	f	class:X86DAGToDAGISel
MatchAddressBase	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^bool MSP430DAGToDAGISel::MatchAddressBase(SDValue N, MSP430ISelAddressMode &AM) {$/;"	f	class:MSP430DAGToDAGISel
MatchAddressBase	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::MatchAddressBase(SDValue N, X86ISelAddressMode &AM) {$/;"	f	class:X86DAGToDAGISel
MatchAddressRecursively	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::MatchAddressRecursively(SDValue N, X86ISelAddressMode &AM,$/;"	f	class:X86DAGToDAGISel
MatchAndEmitInstruction	Target/ARM/AsmParser/ARMAsmParser.cpp	/^MatchAndEmitInstruction(SMLoc IDLoc, unsigned &Opcode,$/;"	f	class:ARMAsmParser
MatchAndEmitInstruction	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^MatchAndEmitInstruction(SMLoc IDLoc, unsigned &Opcode,$/;"	f	class:MBlazeAsmParser
MatchAndEmitInstruction	Target/Mips/AsmParser/MipsAsmParser.cpp	/^MatchAndEmitInstruction(SMLoc IDLoc, unsigned &Opcode,$/;"	f	class:MipsAsmParser
MatchAndEmitInstruction	Target/X86/AsmParser/X86AsmParser.cpp	/^MatchAndEmitInstruction(SMLoc IDLoc, unsigned &Opcode,$/;"	f	class:X86AsmParser
MatchBSwap	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Instruction *InstCombiner::MatchBSwap(BinaryOperator &I) {$/;"	f	class:InstCombiner
MatchBSwapHWord	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::MatchBSwapHWord(SDNode *N, SDValue N0, SDValue N1) {$/;"	f	class:DAGCombiner
MatchBSwapHWordLow	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::MatchBSwapHWordLow(SDNode *N, SDValue N0, SDValue N1,$/;"	f	class:DAGCombiner
MatchCoprocessorOperandName	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static int MatchCoprocessorOperandName(StringRef Name, char CoprocOp) {$/;"	f	file:
MatchFslRegister	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^static unsigned MatchFslRegister(StringRef String) {$/;"	f	file:
MatchLoadInAddress	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::MatchLoadInAddress(LoadSDNode *N, X86ISelAddressMode &AM){$/;"	f	class:X86DAGToDAGISel
MatchOperationAddr	Transforms/Utils/AddrModeMatcher.cpp	/^bool AddressingModeMatcher::MatchOperationAddr(User *AddrInst, unsigned Opcode,$/;"	f	class:AddressingModeMatcher
MatchRegisterName	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  unsigned MatchRegisterName(StringRef Name) {$/;"	f	class:__anon258::ARMBaseAsmLexer
MatchRegisterName	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^    unsigned MatchRegisterName(StringRef Name) {$/;"	f	class:__anon453::MBlazeBaseAsmLexer
MatchRotate	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDNode *DAGCombiner::MatchRotate(SDValue LHS, SDValue RHS, DebugLoc DL) {$/;"	f	class:DAGCombiner
MatchRotateHalf	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static bool MatchRotateHalf(SDValue Op, SDValue &Shift, SDValue &Mask) {$/;"	f	file:
MatchScaledValue	Transforms/Utils/AddrModeMatcher.cpp	/^bool AddressingModeMatcher::MatchScaledValue(Value *ScaleReg, int64_t Scale,$/;"	f	class:AddressingModeMatcher
MatchScope	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^struct MatchScope {$/;"	s	namespace:__anon71	file:
MatchSelectFromAndOr	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static Instruction *MatchSelectFromAndOr(Value *A, Value *B,$/;"	f	file:
MatchSelectPattern	Transforms/InstCombine/InstCombineSelect.cpp	/^MatchSelectPattern(Value *V, Value *&LHS, Value *&RHS) {$/;"	f	file:
MatchWrapper	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^bool MSP430DAGToDAGISel::MatchWrapper(SDValue N, MSP430ISelAddressMode &AM) {$/;"	f	class:MSP430DAGToDAGISel
MatchWrapper	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::MatchWrapper(SDValue N, X86ISelAddressMode &AM) {$/;"	f	class:X86DAGToDAGISel
Match_RequiresITBlock	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    Match_RequiresITBlock = FIRST_TARGET_MATCH_RESULT_TY,$/;"	e	enum:__anon259::ARMAsmParser::ARMMatchResultTy	file:
Match_RequiresNotITBlock	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    Match_RequiresNotITBlock,$/;"	e	enum:__anon259::ARMAsmParser::ARMMatchResultTy	file:
Match_RequiresThumb2	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    Match_RequiresThumb2,$/;"	e	enum:__anon259::ARMAsmParser::ARMMatchResultTy	file:
Match_RequiresV6	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    Match_RequiresV6,$/;"	e	enum:__anon259::ARMAsmParser::ARMMatchResultTy	file:
MatchingStackOffset	Target/ARM/ARMISelLowering.cpp	/^bool MatchingStackOffset(SDValue Arg, unsigned Offset, ISD::ArgFlagsTy Flags,$/;"	f	file:
MatchingStackOffset	Target/X86/X86ISelLowering.cpp	/^bool MatchingStackOffset(SDValue Arg, unsigned Offset, ISD::ArgFlagsTy Flags,$/;"	f	file:
Materialize	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::Materialize(GlobalValue *GV, std::string *ErrInfo) {$/;"	f	class:BitcodeReader
Materialize	VMCore/Globals.cpp	/^bool GlobalValue::Materialize(std::string *ErrInfo) {$/;"	f	class:GlobalValue
Materialize	VMCore/Module.cpp	/^bool Module::Materialize(GlobalValue *GV, std::string *ErrInfo) {$/;"	f	class:Module
MaterializeAdjustedValue	Transforms/Scalar/GVN.cpp	/^  Value *MaterializeAdjustedValue(Type *LoadTy, GVN &gvn) const {$/;"	f	struct:__anon538::AvailableValueInBlock
MaterializeAll	VMCore/Module.cpp	/^bool Module::MaterializeAll(std::string *ErrInfo) {$/;"	f	class:Module
MaterializeAllPermanently	VMCore/Module.cpp	/^bool Module::MaterializeAllPermanently(std::string *ErrInfo) {$/;"	f	class:Module
MaterializeModule	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::MaterializeModule(Module *M, std::string *ErrInfo) {$/;"	f	class:BitcodeReader
Matrix	CodeGen/LiveRegMatrix.h	/^  LiveIntervalUnion::Array Matrix;$/;"	m	class:llvm::LiveRegMatrix
Matrix	CodeGen/RegAllocBase.h	/^  LiveRegMatrix *Matrix;$/;"	m	class:llvm::RegAllocBase
MaxAggrCopySize	Target/NVPTX/NVPTXLowerAggrCopies.h	/^  static const unsigned MaxAggrCopySize = 128;$/;"	m	struct:llvm::NVPTXLowerAggrCopies
MaxArgLen	Support/CommandLine.cpp	/^  size_t MaxArgLen;$/;"	m	class:__anon247::HelpPrinter	file:
MaxCSFrameIndex	CodeGen/PrologEpilogInserter.h	/^    unsigned MinCSFrameIndex, MaxCSFrameIndex;$/;"	m	class:llvm::PEI
MaxChains	Transforms/Scalar/LoopStrengthReduce.cpp	/^  static const unsigned MaxChains = 8;$/;"	m	class:__anon518::LSRInstance	file:
MaxCount	Analysis/ProfileDataLoader.cpp	/^const unsigned ProfileDataLoader::MaxCount = ~0U - 1U;$/;"	m	class:ProfileDataLoader	file:
MaxDepth	Analysis/ValueTracking.cpp	/^const unsigned MaxDepth = 6;$/;"	v
MaxDisp	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned MaxDisp : 31;$/;"	m	struct:__anon310::ARMConstantIslands::ImmBranch	file:
MaxDisp	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned MaxDisp;$/;"	m	struct:__anon310::ARMConstantIslands::CPUser	file:
MaxIVUsers	Transforms/Scalar/LoopStrengthReduce.cpp	/^static const unsigned MaxIVUsers = 200;$/;"	v	file:
MaxInlineSizeThreshold	Target/X86/X86Subtarget.h	/^  unsigned MaxInlineSizeThreshold;$/;"	m	class:llvm::X86Subtarget
MaxMinLatency	CodeGen/MachineScheduler.cpp	/^    unsigned MaxMinLatency;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
MaxMinLatency	Target/Hexagon/HexagonMachineScheduler.h	/^    unsigned MaxMinLatency;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
MaxOffset	Transforms/Scalar/LoopStrengthReduce.cpp	/^  int64_t MaxOffset;$/;"	m	class:__anon517::LSRUse	file:
MaxOptWidth	Support/CommandLine.cpp	/^static const size_t MaxOptWidth = 8; \/\/ arbitrary spacing for printOptionDiff$/;"	v	file:
MaxParallelChains	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static const unsigned MaxParallelChains = 64;$/;"	v	file:
MaxSize	Transforms/Scalar/LoopUnswitch.cpp	/^    unsigned MaxSize;$/;"	m	class:__anon494::LUAnalysisCache	file:
MaxSpanTree	Transforms/Instrumentation/MaximumSpanningTree.h	/^    typedef std::vector<Edge> MaxSpanTree;$/;"	t	class:llvm::MaximumSpanningTree
MaxTime	Support/TimeValue.cpp	/^const TimeValue TimeValue::MaxTime       = TimeValue ( INT64_MAX,0 );$/;"	m	class:llvm::TimeValue	file:
MaxWeight	CodeGen/RegAllocGreedy.cpp	/^    float MaxWeight;      \/\/\/< Maximum spill weight evicted.$/;"	m	struct:__anon158::RAGreedy::EvictionCost	file:
MaximizeILP	CodeGen/MachineScheduler.cpp	/^  bool MaximizeILP;$/;"	m	struct:__anon128::ILPOrder	file:
MaximumSpanningTree	Transforms/Instrumentation/MaximumSpanningTree.h	/^    MaximumSpanningTree(EdgeWeights &EdgeVector) {$/;"	f	class:llvm::MaximumSpanningTree
MaximumSpanningTree	Transforms/Instrumentation/MaximumSpanningTree.h	/^  class MaximumSpanningTree {$/;"	c	namespace:llvm
May	Analysis/AliasAnalysisCounter.cpp	/^    unsigned No, May, Partial, Must;$/;"	m	class:__anon43::AliasAnalysisCounter	file:
MayAlias	Analysis/AliasAnalysisEvaluator.cpp	/^    unsigned NoAlias, MayAlias, PartialAlias, MustAlias;$/;"	m	class:__anon47::AAEval	file:
MayAutorelease	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCAPElim::MayAutorelease(ImmutableCallSite CS, unsigned Depth) {$/;"	f	class:ObjCARCAPElim
MayCSE	CodeGen/MachineLICM.cpp	/^bool MachineLICM::MayCSE(MachineInstr *MI) {$/;"	f	class:MachineLICM
MayFoldIntoStore	Target/X86/X86ISelLowering.cpp	/^static bool MayFoldIntoStore(SDValue Op) {$/;"	f	file:
MayFoldLoad	Target/X86/X86ISelLowering.cpp	/^static bool MayFoldLoad(SDValue Op) {$/;"	f	file:
MayFoldVectorLoad	Target/X86/X86ISelLowering.cpp	/^static bool MayFoldVectorLoad(SDValue V) {$/;"	f	file:
MayReadAnyGlobal	Analysis/IPA/GlobalsModRef.cpp	/^    bool MayReadAnyGlobal;$/;"	m	struct:__anon1::FunctionRecord	file:
MayReduceRegPressure	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^bool RegReductionPQBase::MayReduceRegPressure(SUnit *SU) const {$/;"	f	class:RegReductionPQBase
MaySpeculate	CodeGen/IfConversion.cpp	/^static bool MaySpeculate(const MachineInstr *MI,$/;"	f	file:
MayThrow	Transforms/Scalar/LICM.cpp	/^    bool MayThrow;           \/\/ The current loop contains an instruction which$/;"	m	struct:__anon568::LICM	file:
MaybeLive	Transforms/IPO/DeadArgumentElimination.cpp	/^    enum Liveness { Live, MaybeLive };$/;"	e	enum:__anon600::DAE::Liveness	file:
MaybeSwitchVendor	Target/ARM/ARMAsmPrinter.cpp	/^    void MaybeSwitchVendor(StringRef Vendor) { }$/;"	f	class:__anon313::AsmAttributeEmitter
MaybeSwitchVendor	Target/ARM/ARMAsmPrinter.cpp	/^    void MaybeSwitchVendor(StringRef Vendor) {$/;"	f	class:__anon313::ObjectAttributeEmitter
MeetIfcvtSizeLimit	CodeGen/IfConversion.cpp	/^    bool MeetIfcvtSizeLimit(MachineBasicBlock &BB,$/;"	f	class:__anon99::IfConverter	file:
MeetIfcvtSizeLimit	CodeGen/IfConversion.cpp	/^    bool MeetIfcvtSizeLimit(MachineBasicBlock &TBB,$/;"	f	class:__anon99::IfConverter	file:
Mem	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    } Mem;$/;"	m	union:__anon446::MBlazeOperand::__anon447	typeref:struct:__anon446::MBlazeOperand::__anon447::__anon451	file:
Mem	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    } Mem;$/;"	m	union:__anon423::MipsOperand::__anon424	typeref:struct:__anon423::MipsOperand::__anon424::__anon428	file:
Mem	Target/X86/AsmParser/X86AsmParser.cpp	/^    } Mem;$/;"	m	union:__anon336::X86Operand::__anon337	typeref:struct:__anon336::X86Operand::__anon337::__anon341	file:
MemBOpt	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  enum MemBOpt {$/;"	g	namespace:llvm::ARM_MB
MemBOptToString	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  inline static const char *MemBOptToString(unsigned val) {$/;"	f	namespace:llvm::ARM_MB
MemCmp	Transforms/Scalar/SimplifyLibCalls.cpp	/^    MemCmpOpt MemCmp; MemCpyOpt MemCpy; MemMoveOpt MemMove; MemSetOpt MemSet;$/;"	m	class:__anon546::SimplifyLibCalls	file:
MemCmpOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct MemCmpOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
MemCpy	Transforms/Scalar/SimplifyLibCalls.cpp	/^    MemCmpOpt MemCmp; MemCpyOpt MemCpy; MemMoveOpt MemMove; MemSetOpt MemSet;$/;"	m	class:__anon546::SimplifyLibCalls	file:
MemCpyChk	Transforms/Utils/SimplifyLibCalls.cpp	/^  MemCpyChkOpt MemCpyChk;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
MemCpyChkOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct MemCpyChkOpt : public InstFortifiedLibCallOptimization {$/;"	s	namespace:__anon473	file:
MemCpyOpt	Transforms/Scalar/MemCpyOptimizer.cpp	/^    MemCpyOpt() : FunctionPass(ID) {$/;"	f	class:__anon575::MemCpyOpt
MemCpyOpt	Transforms/Scalar/MemCpyOptimizer.cpp	/^  class MemCpyOpt : public FunctionPass {$/;"	c	namespace:__anon575	file:
MemCpyOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct MemCpyOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
MemDepPrinter	Analysis/MemDepPrinter.cpp	/^    MemDepPrinter() : FunctionPass(ID) {$/;"	f	struct:__anon33::MemDepPrinter
MemDepPrinter	Analysis/MemDepPrinter.cpp	/^  struct MemDepPrinter : public FunctionPass {$/;"	s	namespace:__anon33	file:
MemIntrin	Transforms/Scalar/GVN.cpp	/^    MemIntrin   \/\/ A memory intrinsic which is loaded from.$/;"	e	enum:__anon538::AvailableValueInBlock::ValType	file:
MemMgr	ExecutionEngine/JIT/JITEmitter.cpp	/^    JITMemoryManager *MemMgr;$/;"	m	class:__anon182::JITEmitter	file:
MemMgr	ExecutionEngine/MCJIT/MCJIT.h	/^  RTDyldMemoryManager *MemMgr;$/;"	m	class:llvm::MCJIT
MemMgr	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  RTDyldMemoryManager *MemMgr;$/;"	m	class:llvm::RuntimeDyldImpl
MemMove	Transforms/Scalar/SimplifyLibCalls.cpp	/^    MemCmpOpt MemCmp; MemCpyOpt MemCpy; MemMoveOpt MemMove; MemSetOpt MemSet;$/;"	m	class:__anon546::SimplifyLibCalls	file:
MemMoveChk	Transforms/Utils/SimplifyLibCalls.cpp	/^  MemMoveChkOpt MemMoveChk;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
MemMoveChkOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct MemMoveChkOpt : public InstFortifiedLibCallOptimization {$/;"	s	namespace:__anon473	file:
MemMoveOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct MemMoveOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
MemNode	CodeGen/SelectionDAG/DAGCombiner.cpp	/^  LSBaseSDNode *MemNode;$/;"	m	struct:MemOpLink	file:
MemOp	Target/X86/X86InstrInfo.cpp	/^  uint16_t MemOp;$/;"	m	struct:X86OpTblEntry	file:
MemOp2RegOpTable	Target/X86/X86InstrInfo.h	/^  MemOp2RegOpTableType MemOp2RegOpTable;$/;"	m	class:llvm::X86InstrInfo
MemOp2RegOpTableType	Target/X86/X86InstrInfo.h	/^                   std::pair<unsigned, unsigned> > MemOp2RegOpTableType;$/;"	t	class:llvm::X86InstrInfo
MemOp4	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    MemOp4 = 1U << 8,$/;"	e	enum:llvm::X86II::__anon350
MemOpLink	CodeGen/SelectionDAG/DAGCombiner.cpp	/^  MemOpLink (LSBaseSDNode *N, int64_t Offset, unsigned Seq):$/;"	f	struct:MemOpLink
MemOpLink	CodeGen/SelectionDAG/DAGCombiner.cpp	/^struct MemOpLink {$/;"	s	file:
MemOpQueue	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    typedef SmallVector<MemOpQueueEntry,8> MemOpQueue;$/;"	t	struct:__anon303::ARMLoadStoreOpt	file:
MemOpQueueEntry	Target/ARM/ARMLoadStoreOptimizer.cpp	/^      MemOpQueueEntry(int o, unsigned r, bool k, unsigned p,$/;"	f	struct:__anon303::ARMLoadStoreOpt::MemOpQueueEntry
MemOpQueueEntry	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    struct MemOpQueueEntry {$/;"	s	struct:__anon303::ARMLoadStoreOpt	file:
MemOpQueueIter	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    typedef MemOpQueue::iterator MemOpQueueIter;$/;"	t	struct:__anon303::ARMLoadStoreOpt	file:
MemRef	Analysis/Lint.cpp	/^  namespace MemRef {$/;"	n	namespace:__anon5	file:
MemSDNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^MemSDNode::MemSDNode(unsigned Opc, DebugLoc dl, SDVTList VTs, EVT memvt,$/;"	f	class:MemSDNode
MemSDNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^MemSDNode::MemSDNode(unsigned Opc, DebugLoc dl, SDVTList VTs,$/;"	f	class:MemSDNode
MemSet	Transforms/Scalar/SimplifyLibCalls.cpp	/^    MemCmpOpt MemCmp; MemCpyOpt MemCpy; MemMoveOpt MemMove; MemSetOpt MemSet;$/;"	m	class:__anon546::SimplifyLibCalls	file:
MemSetChk	Transforms/Utils/SimplifyLibCalls.cpp	/^  MemSetChkOpt MemSetChk;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
MemSetChkOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct MemSetChkOpt : public InstFortifiedLibCallOptimization {$/;"	s	namespace:__anon473	file:
MemSetOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct MemSetOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
MemTransferInstData	Transforms/Scalar/SROA.cpp	/^  SmallDenseMap<MemTransferInst *, MemTransferOffsets, 4> MemTransferInstData;$/;"	m	class:__anon557::AllocaPartitioning	file:
MemTransferOffsets	Transforms/Scalar/SROA.cpp	/^  struct MemTransferOffsets {$/;"	s	class:__anon557::AllocaPartitioning	file:
MemTransferPartitionMap	Transforms/Scalar/SROA.cpp	/^  SmallDenseMap<Instruction *, unsigned> MemTransferPartitionMap;$/;"	m	class:AllocaPartitioning::PartitionBuilder	file:
Memory	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } Memory;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon275	file:
Memory	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    Memory,$/;"	e	enum:__anon446::MBlazeOperand::KindTy	file:
Memory	Target/X86/AsmParser/X86AsmParser.cpp	/^    Memory$/;"	e	enum:__anon336::X86Operand::KindTy	file:
MemoryBufferMMapFile	Support/MemoryBuffer.cpp	/^  MemoryBufferMMapFile(StringRef Buffer, bool RequiresNullTerminator)$/;"	f	class:__anon238::MemoryBufferMMapFile
MemoryBufferMMapFile	Support/MemoryBuffer.cpp	/^class MemoryBufferMMapFile : public MemoryBufferMem {$/;"	c	namespace:__anon238	file:
MemoryBufferMem	Support/MemoryBuffer.cpp	/^  MemoryBufferMem(StringRef InputData, bool RequiresNullTerminator) {$/;"	f	class:__anon237::MemoryBufferMem
MemoryBufferMem	Support/MemoryBuffer.cpp	/^class MemoryBufferMem : public MemoryBuffer {$/;"	c	namespace:__anon237	file:
MemoryDependenceAnalysis	Analysis/MemoryDependenceAnalysis.cpp	/^MemoryDependenceAnalysis::MemoryDependenceAnalysis()$/;"	f	class:MemoryDependenceAnalysis
MemoryFence	Support/Atomic.cpp	/^void sys::MemoryFence() {$/;"	f	class:sys
MemoryFence	Support/Atomic.cpp	21;"	d	file:
MemoryRangeHeader	ExecutionEngine/JIT/JITMemoryManager.cpp	/^  struct MemoryRangeHeader {$/;"	s	namespace:__anon189	file:
MemsetRange	Transforms/Scalar/MemCpyOptimizer.cpp	/^struct MemsetRange {$/;"	s	namespace:__anon573	file:
MemsetRanges	Transforms/Scalar/MemCpyOptimizer.cpp	/^  MemsetRanges(const DataLayout &td) : TD(td) {}$/;"	f	class:__anon574::MemsetRanges
MemsetRanges	Transforms/Scalar/MemCpyOptimizer.cpp	/^class MemsetRanges {$/;"	c	namespace:__anon574	file:
Merge	CodeGen/AsmPrinter/DwarfDebug.h	/^  void Merge(DotDebugLocEntry *Next) {$/;"	f	struct:llvm::DotDebugLocEntry
Merge	Transforms/Scalar/ObjCARC.cpp	/^PtrState::Merge(const PtrState &Other, bool TopDown) {$/;"	f	class:PtrState
MergeAliasResults	Analysis/BasicAliasAnalysis.cpp	/^MergeAliasResults(AliasAnalysis::AliasResult A, AliasAnalysis::AliasResult B) {$/;"	f	file:
MergeBaseUpdateLSMultiple	Target/ARM/ARMLoadStoreOptimizer.cpp	/^bool ARMLoadStoreOpt::MergeBaseUpdateLSMultiple(MachineBasicBlock &MBB,$/;"	f	class:ARMLoadStoreOpt
MergeBaseUpdateLoadStore	Target/ARM/ARMLoadStoreOptimizer.cpp	/^bool ARMLoadStoreOpt::MergeBaseUpdateLoadStore(MachineBasicBlock &MBB,$/;"	f	class:ARMLoadStoreOpt
MergeBasicBlockIntoOnlyPred	Transforms/Utils/Local.cpp	/^void llvm::MergeBasicBlockIntoOnlyPred(BasicBlock *DestBB, Pass *P) {$/;"	f	class:llvm
MergeBlockIntoPredecessor	Transforms/Utils/BasicBlockUtils.cpp	/^bool llvm::MergeBlockIntoPredecessor(BasicBlock *BB, Pass *P) {$/;"	f	class:llvm
MergeBlocks	CodeGen/IfConversion.cpp	/^void IfConverter::MergeBlocks(BBInfo &ToBBI, BBInfo &FromBBI, bool AddEdges) {$/;"	f	class:IfConverter
MergeConsecutiveStores	CodeGen/SelectionDAG/DAGCombiner.cpp	/^bool DAGCombiner::MergeConsecutiveStores(StoreSDNode* St) {$/;"	f	class:DAGCombiner
MergeFunctions	Transforms/IPO/MergeFunctions.cpp	/^  MergeFunctions()$/;"	f	class:__anon598::MergeFunctions
MergeFunctions	Transforms/IPO/MergeFunctions.cpp	/^class MergeFunctions : public ModulePass {$/;"	c	namespace:__anon598	file:
MergeInTypeForLoadOrStore	Transforms/Scalar/ScalarReplAggregates.cpp	/^void ConvertToScalarInfo::MergeInTypeForLoadOrStore(Type *In,$/;"	f	class:ConvertToScalarInfo
MergeInVectorType	Transforms/Scalar/ScalarReplAggregates.cpp	/^bool ConvertToScalarInfo::MergeInVectorType(VectorType *VInTy,$/;"	f	class:ConvertToScalarInfo
MergeLDR_STR	Target/ARM/ARMLoadStoreOptimizer.cpp	/^ARMLoadStoreOpt::MergeLDR_STR(MachineBasicBlock &MBB, unsigned SIndex,$/;"	f	class:ARMLoadStoreOpt
MergeLIsAndRename	CodeGen/StrongPHIElimination.cpp	/^void StrongPHIElimination::MergeLIsAndRename(unsigned Reg, unsigned NewReg) {$/;"	f	class:StrongPHIElimination
MergeOps	Target/ARM/ARMLoadStoreOptimizer.cpp	/^ARMLoadStoreOpt::MergeOps(MachineBasicBlock &MBB,$/;"	f	class:ARMLoadStoreOpt
MergeOpsUpdate	Target/ARM/ARMLoadStoreOptimizer.cpp	/^void ARMLoadStoreOpt::MergeOpsUpdate(MachineBasicBlock &MBB,$/;"	f	class:ARMLoadStoreOpt
MergePotentials	CodeGen/BranchFolding.h	/^    std::vector<MergePotentialsElt> MergePotentials;$/;"	m	class:llvm::BranchFolder
MergePotentialsElt	CodeGen/BranchFolding.h	/^      MergePotentialsElt(unsigned h, MachineBasicBlock *b)$/;"	f	class:llvm::BranchFolder::MergePotentialsElt
MergePotentialsElt	CodeGen/BranchFolding.h	/^    class MergePotentialsElt {$/;"	c	class:llvm::BranchFolder
MergePred	Transforms/Scalar/ObjCARC.cpp	/^void BBState::MergePred(const BBState &Other) {$/;"	f	class:BBState
MergeRangesInAsValue	CodeGen/LiveInterval.cpp	/^void LiveInterval::MergeRangesInAsValue(const LiveInterval &RHS,$/;"	f	class:LiveInterval
MergeReturnIntoLDM	Target/ARM/ARMLoadStoreOptimizer.cpp	/^bool ARMLoadStoreOpt::MergeReturnIntoLDM(MachineBasicBlock &MBB) {$/;"	f	class:ARMLoadStoreOpt
MergeSeqs	Transforms/Scalar/ObjCARC.cpp	/^static Sequence MergeSeqs(Sequence A, Sequence B, bool TopDown) {$/;"	f	file:
MergeSucc	Transforms/Scalar/ObjCARC.cpp	/^void BBState::MergeSucc(const BBState &Other) {$/;"	f	class:BBState
MergeValueInAsValue	CodeGen/LiveInterval.cpp	/^void LiveInterval::MergeValueInAsValue(const LiveInterval &RHS,$/;"	f	class:LiveInterval
MergeValueNumberInto	CodeGen/LiveInterval.cpp	/^VNInfo* LiveInterval::MergeValueNumberInto(VNInfo *V1, VNInfo *V2) {$/;"	f	class:LiveInterval
Merged	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool Merged;$/;"	m	struct:llvm::DotDebugLocEntry
Merged	Target/ARM/ARMLoadStoreOptimizer.cpp	/^      bool Merged;$/;"	m	struct:__anon303::ARMLoadStoreOpt::MemOpQueueEntry	file:
Messages	Analysis/Lint.cpp	/^    std::string Messages;$/;"	m	class:__anon5::Lint	file:
Messages	VMCore/Verifier.cpp	/^    std::string Messages;$/;"	m	struct:__anon610::Verifier	file:
MessagesStr	Analysis/Lint.cpp	/^    raw_string_ostream MessagesStr;$/;"	m	class:__anon5::Lint	file:
MessagesStr	VMCore/Verifier.cpp	/^    raw_string_ostream MessagesStr;$/;"	m	struct:__anon610::Verifier	file:
MetaRenamer	Transforms/Utils/MetaRenamer.cpp	/^    MetaRenamer() : ModulePass(ID) {$/;"	f	struct:__anon472::MetaRenamer
MetaRenamer	Transforms/Utils/MetaRenamer.cpp	/^  struct MetaRenamer : public ModulePass {$/;"	s	namespace:__anon472	file:
MetadataStore	VMCore/LLVMContextImpl.h	/^  DenseMap<const Instruction *, MDMapTy> MetadataStore;$/;"	m	class:llvm::LLVMContextImpl
MetadataTy	VMCore/LLVMContextImpl.h	/^  Type VoidTy, LabelTy, HalfTy, FloatTy, DoubleTy, MetadataTy;$/;"	m	class:llvm::LLVMContextImpl
MetadataVar	AsmParser/LLToken.h	/^    MetadataVar,       \/\/ !foo$/;"	e	enum:llvm::lltok::Kind
MethodIDMap	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^  typedef DenseMap<void*, unsigned int> MethodIDMap;$/;"	t	class:__anon198::IntelJITEventListener	file:
MethodIDs	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^  MethodIDMap MethodIDs;$/;"	m	class:__anon198::IntelJITEventListener	file:
MicroControllerProfile	Target/ARM/ARMBuildAttrs.h	/^    MicroControllerProfile = (0x4D), \/\/ 'M' (e.g. for Cortex M3)$/;"	e	enum:ARMBuildAttrs::CPUArchProfile
MightBeFoldableInst	Transforms/Utils/AddrModeMatcher.cpp	/^static bool MightBeFoldableInst(Instruction *I) {$/;"	f	file:
MinAvailableCycle	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  unsigned MinAvailableCycle;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
MinCSFrameIndex	CodeGen/PrologEpilogInserter.h	/^    unsigned MinCSFrameIndex, MaxCSFrameIndex;$/;"	m	class:llvm::PEI
MinInstLength	DebugInfo/DWARFDebugLine.h	/^    uint8_t MinInstLength;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
MinInstr	CodeGen/EarlyIfConversion.cpp	/^  MachineTraceMetrics::Ensemble *MinInstr;$/;"	m	class:__anon92::EarlyIfConverter	file:
MinInstrCountEnsemble	CodeGen/MachineTraceMetrics.cpp	/^  MinInstrCountEnsemble(MachineTraceMetrics *mtm)$/;"	f	class:__anon131::MinInstrCountEnsemble
MinInstrCountEnsemble	CodeGen/MachineTraceMetrics.cpp	/^class MinInstrCountEnsemble : public MachineTraceMetrics::Ensemble {$/;"	c	namespace:__anon131	file:
MinOffset	Transforms/Scalar/LoopStrengthReduce.cpp	/^  int64_t MinOffset;$/;"	m	class:__anon517::LSRUse	file:
MinRCSize	CodeGen/SelectionDAG/InstrEmitter.cpp	/^const unsigned MinRCSize = 4;$/;"	v
MinReadyCycle	CodeGen/MachineScheduler.cpp	/^    unsigned MinReadyCycle;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
MinReadyCycle	Target/Hexagon/HexagonMachineScheduler.h	/^    unsigned MinReadyCycle;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
MinReservedArea	Target/PowerPC/PPCMachineFunctionInfo.h	/^  unsigned MinReservedArea;$/;"	m	class:llvm::PPCFunctionInfo
MinTime	Support/TimeValue.cpp	/^const TimeValue TimeValue::MinTime       = TimeValue ( INT64_MIN,0 );$/;"	m	class:llvm::TimeValue	file:
MinimalWeight	Analysis/ProfileEstimatorPass.cpp	/^    std::map<Edge,double>  MinimalWeight;$/;"	m	class:__anon9::ProfileEstimatorPass	file:
Mips	Target/Mips/InstPrinter/MipsInstPrinter.h	/^namespace Mips {$/;"	n	namespace:llvm
Mips	Target/Mips/MCTargetDesc/MipsDirectObjLower.h	/^  namespace Mips {$/;"	n	namespace:llvm
Mips	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^namespace Mips {$/;"	n	namespace:llvm
Mips	Target/Mips/MipsRelocations.h	/^  namespace Mips{$/;"	n	namespace:llvm
Mips16FrameLowering	Target/Mips/Mips16FrameLowering.h	/^  explicit Mips16FrameLowering(const MipsSubtarget &STI)$/;"	f	class:llvm::Mips16FrameLowering
Mips16FrameLowering	Target/Mips/Mips16FrameLowering.h	/^class Mips16FrameLowering : public MipsFrameLowering {$/;"	c	namespace:llvm
Mips16InstrInfo	Target/Mips/Mips16InstrInfo.cpp	/^Mips16InstrInfo::Mips16InstrInfo(MipsTargetMachine &tm)$/;"	f	class:Mips16InstrInfo
Mips16InstrInfo	Target/Mips/Mips16InstrInfo.h	/^class Mips16InstrInfo : public MipsInstrInfo {$/;"	c	namespace:llvm
Mips16RegisterInfo	Target/Mips/Mips16RegisterInfo.cpp	/^Mips16RegisterInfo::Mips16RegisterInfo(const MipsSubtarget &ST)$/;"	f	class:Mips16RegisterInfo
Mips16RegisterInfo	Target/Mips/Mips16RegisterInfo.h	/^class Mips16RegisterInfo : public MipsRegisterInfo {$/;"	c	namespace:llvm
Mips32	Target/Mips/MipsSubtarget.h	/^    Mips32, Mips32r2, Mips64, Mips64r2$/;"	e	enum:llvm::MipsSubtarget::MipsArchEnum
Mips32r2	Target/Mips/MipsSubtarget.h	/^    Mips32, Mips32r2, Mips64, Mips64r2$/;"	e	enum:llvm::MipsSubtarget::MipsArchEnum
Mips64	Target/Mips/MipsSubtarget.h	/^    Mips32, Mips32r2, Mips64, Mips64r2$/;"	e	enum:llvm::MipsSubtarget::MipsArchEnum
Mips64DPRegs	Target/Mips/MipsISelLowering.cpp	/^static const uint16_t Mips64DPRegs[8] =$/;"	v	file:
Mips64Disassembler	Target/Mips/Disassembler/MipsDisassembler.cpp	/^  Mips64Disassembler(const MCSubtargetInfo &STI, const MCRegisterInfo *Info,$/;"	f	class:__anon433::Mips64Disassembler
Mips64Disassembler	Target/Mips/Disassembler/MipsDisassembler.cpp	/^class Mips64Disassembler : public MipsDisassemblerBase {$/;"	c	namespace:__anon433	file:
Mips64IntRegs	Target/Mips/MipsISelLowering.cpp	/^static const uint16_t Mips64IntRegs[8] =$/;"	v	file:
Mips64r2	Target/Mips/MipsSubtarget.h	/^    Mips32, Mips32r2, Mips64, Mips64r2$/;"	e	enum:llvm::MipsSubtarget::MipsArchEnum
MipsABI	Target/Mips/MipsSubtarget.h	/^  MipsABIEnum MipsABI;$/;"	m	class:llvm::MipsSubtarget
MipsABIEnum	Target/Mips/MipsSubtarget.h	/^  enum MipsABIEnum {$/;"	g	class:llvm::MipsSubtarget
MipsAnalyzeImmediate	Target/Mips/MipsAnalyzeImmediate.h	/^  class MipsAnalyzeImmediate {$/;"	c	namespace:llvm
MipsArchEnum	Target/Mips/MipsSubtarget.h	/^  enum MipsArchEnum {$/;"	g	class:llvm::MipsSubtarget
MipsArchVersion	Target/Mips/MipsSubtarget.h	/^  MipsArchEnum MipsArchVersion;$/;"	m	class:llvm::MipsSubtarget
MipsAsmBackend	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  MipsAsmBackend(const Target &T,  Triple::OSType _OSType,$/;"	f	class:__anon429::MipsAsmBackend
MipsAsmBackend	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^class MipsAsmBackend : public MCAsmBackend {$/;"	c	namespace:__anon429	file:
MipsAsmParser	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  MipsAsmParser(MCSubtargetInfo &sti, MCAsmParser &parser)$/;"	f	class:__anon422::MipsAsmParser
MipsAsmParser	Target/Mips/AsmParser/MipsAsmParser.cpp	/^class MipsAsmParser : public MCTargetAsmParser {$/;"	c	namespace:__anon422	file:
MipsAsmPrinter	Target/Mips/MipsAsmPrinter.h	/^  explicit MipsAsmPrinter(TargetMachine &TM,  MCStreamer &Streamer)$/;"	f	class:llvm::MipsAsmPrinter
MipsAsmPrinter	Target/Mips/MipsAsmPrinter.h	/^class LLVM_LIBRARY_VISIBILITY MipsAsmPrinter : public AsmPrinter {$/;"	c	namespace:llvm
MipsAssemblerOptions	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  MipsAssemblerOptions():$/;"	f	class:__anon421::MipsAssemblerOptions
MipsAssemblerOptions	Target/Mips/AsmParser/MipsAsmParser.cpp	/^class MipsAssemblerOptions {$/;"	c	namespace:__anon421	file:
MipsCodeEmitter	Target/Mips/MipsCodeEmitter.cpp	/^    MipsCodeEmitter(TargetMachine &tm, JITCodeEmitter &mce) :$/;"	f	class:__anon438::MipsCodeEmitter
MipsCodeEmitter	Target/Mips/MipsCodeEmitter.cpp	/^class MipsCodeEmitter : public MachineFunctionPass {$/;"	c	namespace:__anon438	file:
MipsCompilationCallback	Target/Mips/MipsJITInfo.cpp	/^  void MipsCompilationCallback() {$/;"	f
MipsCompilationCallbackC	Target/Mips/MipsJITInfo.cpp	/^extern "C" void MipsCompilationCallbackC(intptr_t StubAddr) {$/;"	f
MipsDAGToDAGISel	Target/Mips/MipsISelDAGToDAG.cpp	/^  explicit MipsDAGToDAGISel(MipsTargetMachine &tm) :$/;"	f	class:__anon435::MipsDAGToDAGISel
MipsDAGToDAGISel	Target/Mips/MipsISelDAGToDAG.cpp	/^class MipsDAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon435	file:
MipsDisassembler	Target/Mips/Disassembler/MipsDisassembler.cpp	/^  MipsDisassembler(const MCSubtargetInfo &STI, const MCRegisterInfo *Info,$/;"	f	class:__anon433::MipsDisassembler
MipsDisassembler	Target/Mips/Disassembler/MipsDisassembler.cpp	/^class MipsDisassembler : public MipsDisassemblerBase {$/;"	c	namespace:__anon433	file:
MipsDisassemblerBase	Target/Mips/Disassembler/MipsDisassembler.cpp	/^  MipsDisassemblerBase(const MCSubtargetInfo &STI, const MCRegisterInfo *Info,$/;"	f	class:__anon433::MipsDisassemblerBase
MipsDisassemblerBase	Target/Mips/Disassembler/MipsDisassembler.cpp	/^class MipsDisassemblerBase : public MCDisassembler {$/;"	c	namespace:__anon433	file:
MipsELFObjectWriter	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^  class MipsELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anon430	file:
MipsELFObjectWriter	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^MipsELFObjectWriter::MipsELFObjectWriter(bool _is64Bit, uint8_t OSABI,$/;"	f	class:MipsELFObjectWriter
MipsELFWriterInfo	Target/Mips/MipsELFWriterInfo.cpp	/^MipsELFWriterInfo::MipsELFWriterInfo(bool is64Bit_, bool isLittleEndian_)$/;"	f	class:MipsELFWriterInfo
MipsELFWriterInfo	Target/Mips/MipsELFWriterInfo.h	/^  class MipsELFWriterInfo : public TargetELFWriterInfo {$/;"	c	namespace:llvm
MipsFCCToString	Target/Mips/InstPrinter/MipsInstPrinter.cpp	/^const char* Mips::MipsFCCToString(Mips::CondCode CC) {$/;"	f	class:Mips
MipsFI	Target/Mips/MipsAsmPrinter.h	/^  const MipsFunctionInfo *MipsFI;$/;"	m	class:llvm::MipsAsmPrinter
MipsFrameLowering	Target/Mips/MipsFrameLowering.h	/^  explicit MipsFrameLowering(const MipsSubtarget &sti)$/;"	f	class:llvm::MipsFrameLowering
MipsFrameLowering	Target/Mips/MipsFrameLowering.h	/^class MipsFrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
MipsFunctionInfo	Target/Mips/MipsMachineFunction.h	/^  MipsFunctionInfo(MachineFunction& MF)$/;"	f	class:llvm::MipsFunctionInfo
MipsFunctionInfo	Target/Mips/MipsMachineFunction.h	/^class MipsFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
MipsGetSymAndOffset	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^MipsGetSymAndOffset(const MCFixup &Fixup) {$/;"	f	namespace:llvm
MipsII	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^namespace MipsII {$/;"	n	namespace:llvm
MipsISD	Target/Mips/MipsISelLowering.h	/^  namespace MipsISD {$/;"	n	namespace:llvm
MipsISELLOWERING_H	Target/Mips/MipsISelLowering.h	16;"	d
MipsInstPrinter	Target/Mips/InstPrinter/MipsInstPrinter.h	/^  MipsInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,$/;"	f	class:llvm::MipsInstPrinter
MipsInstPrinter	Target/Mips/InstPrinter/MipsInstPrinter.h	/^class MipsInstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
MipsInstrInfo	Target/Mips/MipsInstrInfo.cpp	/^MipsInstrInfo::MipsInstrInfo(MipsTargetMachine &tm, unsigned UncondBr)$/;"	f	class:MipsInstrInfo
MipsInstrInfo	Target/Mips/MipsInstrInfo.h	/^class MipsInstrInfo : public MipsGenInstrInfo {$/;"	c	namespace:llvm
MipsJITInfo	Target/Mips/MipsJITInfo.h	/^    explicit MipsJITInfo() :$/;"	f	class:llvm::MipsJITInfo
MipsJITInfo	Target/Mips/MipsJITInfo.h	/^class MipsJITInfo : public TargetJITInfo {$/;"	c	namespace:llvm
MipsLongBranch	Target/Mips/MipsLongBranch.cpp	/^    MipsLongBranch(TargetMachine &tm)$/;"	f	class:__anon437::MipsLongBranch
MipsLongBranch	Target/Mips/MipsLongBranch.cpp	/^  class MipsLongBranch : public MachineFunctionPass {$/;"	c	namespace:__anon437	file:
MipsMCAsmInfo	Target/Mips/MCTargetDesc/MipsMCAsmInfo.cpp	/^MipsMCAsmInfo::MipsMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	class:MipsMCAsmInfo
MipsMCAsmInfo	Target/Mips/MCTargetDesc/MipsMCAsmInfo.h	/^  class MipsMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
MipsMCCodeEmitter	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^  MipsMCCodeEmitter(const MCInstrInfo &mcii, bool IsLittle) :$/;"	f	class:__anon432::MipsMCCodeEmitter
MipsMCCodeEmitter	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^class MipsMCCodeEmitter : public MCCodeEmitter {$/;"	c	namespace:__anon432	file:
MipsMCInstLower	Target/Mips/MipsMCInstLower.cpp	/^MipsMCInstLower::MipsMCInstLower(MipsAsmPrinter &asmprinter)$/;"	f	class:MipsMCInstLower
MipsMCInstLower	Target/Mips/MipsMCInstLower.h	/^class LLVM_LIBRARY_VISIBILITY MipsMCInstLower {$/;"	c	namespace:llvm
MipsOperand	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  MipsOperand(KindTy K) : MCParsedAsmOperand(), Kind(K) {}$/;"	f	class:__anon423::MipsOperand	file:
MipsOperand	Target/Mips/AsmParser/MipsAsmParser.cpp	/^class MipsOperand : public MCParsedAsmOperand {$/;"	c	namespace:__anon423	file:
MipsPassConfig	Target/Mips/MipsTargetMachine.cpp	/^  MipsPassConfig(MipsTargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon434::MipsPassConfig
MipsPassConfig	Target/Mips/MipsTargetMachine.cpp	/^class MipsPassConfig : public TargetPassConfig {$/;"	c	namespace:__anon434	file:
MipsRegisterInfo	Target/Mips/MipsRegisterInfo.cpp	/^MipsRegisterInfo::MipsRegisterInfo(const MipsSubtarget &ST)$/;"	f	class:MipsRegisterInfo
MipsRegisterInfo	Target/Mips/MipsRegisterInfo.h	/^class MipsRegisterInfo : public MipsGenRegisterInfo {$/;"	c	namespace:llvm
MipsSEFrameLowering	Target/Mips/MipsSEFrameLowering.h	/^  explicit MipsSEFrameLowering(const MipsSubtarget &STI)$/;"	f	class:llvm::MipsSEFrameLowering
MipsSEFrameLowering	Target/Mips/MipsSEFrameLowering.h	/^class MipsSEFrameLowering : public MipsFrameLowering {$/;"	c	namespace:llvm
MipsSEInstrInfo	Target/Mips/MipsSEInstrInfo.cpp	/^MipsSEInstrInfo::MipsSEInstrInfo(MipsTargetMachine &tm)$/;"	f	class:MipsSEInstrInfo
MipsSEInstrInfo	Target/Mips/MipsSEInstrInfo.h	/^class MipsSEInstrInfo : public MipsInstrInfo {$/;"	c	namespace:llvm
MipsSERegisterInfo	Target/Mips/MipsSERegisterInfo.cpp	/^MipsSERegisterInfo::MipsSERegisterInfo(const MipsSubtarget &ST,$/;"	f	class:MipsSERegisterInfo
MipsSERegisterInfo	Target/Mips/MipsSERegisterInfo.h	/^class MipsSERegisterInfo : public MipsRegisterInfo {$/;"	c	namespace:llvm
MipsSelectionDAGInfo	Target/Mips/MipsSelectionDAGInfo.cpp	/^MipsSelectionDAGInfo::MipsSelectionDAGInfo(const MipsTargetMachine &TM)$/;"	f	class:MipsSelectionDAGInfo
MipsSelectionDAGInfo	Target/Mips/MipsSelectionDAGInfo.h	/^class MipsSelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
MipsSubtarget	Target/Mips/MipsSubtarget.cpp	/^MipsSubtarget::MipsSubtarget(const std::string &TT, const std::string &CPU,$/;"	f	class:MipsSubtarget
MipsSubtarget	Target/Mips/MipsSubtarget.h	/^class MipsSubtarget : public MipsGenSubtargetInfo {$/;"	c	namespace:llvm
MipsTargetLowering	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering(MipsTargetMachine &TM)$/;"	f	class:MipsTargetLowering
MipsTargetLowering	Target/Mips/MipsISelLowering.h	/^  class MipsTargetLowering : public TargetLowering  {$/;"	c	namespace:llvm
MipsTargetMachine	Target/Mips/MipsTargetMachine.cpp	/^MipsTargetMachine(const Target &T, StringRef TT,$/;"	f	class:MipsTargetMachine
MipsTargetMachine	Target/Mips/MipsTargetMachine.h	/^class MipsTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
MipsTargetObjectFile	Target/Mips/MipsTargetObjectFile.h	/^  class MipsTargetObjectFile : public TargetLoweringObjectFileELF {$/;"	c	namespace:llvm
MipsebTargetMachine	Target/Mips/MipsTargetMachine.cpp	/^MipsebTargetMachine(const Target &T, StringRef TT,$/;"	f	class:MipsebTargetMachine
MipsebTargetMachine	Target/Mips/MipsTargetMachine.h	/^class MipsebTargetMachine : public MipsTargetMachine {$/;"	c	namespace:llvm
MipselTargetMachine	Target/Mips/MipsTargetMachine.cpp	/^MipselTargetMachine(const Target &T, StringRef TT,$/;"	f	class:MipselTargetMachine
MipselTargetMachine	Target/Mips/MipsTargetMachine.h	/^class MipselTargetMachine : public MipsTargetMachine {$/;"	c	namespace:llvm
MiscFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MiscFrm       = 26 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
MissingValue	Analysis/ProfileInfo.cpp	/^const double ProfileInfoT<Function,BasicBlock>::MissingValue = -1;$/;"	m	class:llvm::ProfileInfoT	file:
MissingValue	Analysis/ProfileInfo.cpp	/^double ProfileInfoT<MachineFunction, MachineBasicBlock>::MissingValue = -1;$/;"	m	class:llvm::ProfileInfoT	file:
Mod	Analysis/AliasAnalysisEvaluator.cpp	/^    unsigned NoModRef, Mod, Ref, ModRef;$/;"	m	class:__anon47::AAEval	file:
Mod	Analysis/Lint.cpp	/^    Module *Mod;$/;"	m	class:__anon5::Lint	file:
Mod	VMCore/Verifier.cpp	/^    Module *Mod;          \/\/ Module we are verifying right now$/;"	m	struct:__anon610::Verifier	file:
ModRMByte	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  inline static unsigned char ModRMByte(unsigned Mod, unsigned RegOpcode,$/;"	f	class:__anon353::X86MCCodeEmitter
ModRMByte	Target/X86/X86CodeEmitter.cpp	/^inline static unsigned char ModRMByte(unsigned Mod, unsigned RegOpcode,$/;"	f	file:
ModRMDecision	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^struct ModRMDecision {$/;"	s
ModRMDecisionType	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^} ModRMDecisionType;$/;"	t	typeref:enum:__anon365
ModRef	Analysis/AliasAnalysisEvaluator.cpp	/^    unsigned NoModRef, Mod, Ref, ModRef;$/;"	m	class:__anon47::AAEval	file:
ModTime	DebugInfo/DWARFDebugLine.h	/^    uint64_t ModTime;$/;"	m	struct:llvm::DWARFDebugLine::FileNameEntry
Mode	Linker/LinkModules.cpp	/^    unsigned Mode; \/\/ Mode to treat source module.$/;"	m	class:__anon202::ModuleLinker	file:
ModeIEEERndNear	Target/Hexagon/HexagonSubtarget.h	/^  bool ModeIEEERndNear;$/;"	m	class:llvm::HexagonSubtarget
Modified	Transforms/Scalar/SimplifyLibCalls.cpp	/^    bool Modified;  \/\/ This is only used by doInitialization.$/;"	m	class:__anon546::SimplifyLibCalls	file:
ModifiedDT	Transforms/Scalar/CodeGenPrepare.cpp	/^    bool ModifiedDT;$/;"	m	class:__anon525::CodeGenPrepare	file:
Modifier	Target/ARM/ARMConstantPoolValue.h	/^  ARMCP::ARMCPModifier Modifier;   \/\/ GV modifier i.e. (&GV(modifier)-(LPIC+8))$/;"	m	class:llvm::ARMConstantPoolValue
ModifierType	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^} ModifierType;$/;"	t	typeref:enum:__anon368
ModifyToType	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ModifyToType(SDValue InOp, EVT NVT) {$/;"	f	class:DAGTypeLegalizer
Module	VMCore/Module.cpp	/^Module::Module(StringRef MID, LLVMContext& C)$/;"	f	class:Module
ModuleDebugInfoPrinter	Analysis/ModuleDebugInfoPrinter.cpp	/^    ModuleDebugInfoPrinter() : ModulePass(ID) {$/;"	f	class:__anon46::ModuleDebugInfoPrinter
ModuleDebugInfoPrinter	Analysis/ModuleDebugInfoPrinter.cpp	/^  class ModuleDebugInfoPrinter : public ModulePass {$/;"	c	namespace:__anon46	file:
ModuleHasARC	Transforms/Scalar/ObjCARC.cpp	/^static bool ModuleHasARC(const Module &M) {$/;"	f	file:
ModuleLevelChanges	Transforms/Utils/CloneFunction.cpp	/^    bool ModuleLevelChanges;$/;"	m	struct:__anon465::PruningFunctionCloner	file:
ModuleLinker	Linker/LinkModules.cpp	/^    ModuleLinker(Module *dstM, Module *srcM, unsigned mode)$/;"	f	class:__anon202::ModuleLinker
ModuleLinker	Linker/LinkModules.cpp	/^  class ModuleLinker {$/;"	c	namespace:__anon202	file:
MoreHelp	Support/CommandLine.cpp	/^static ManagedStatic<std::vector<const char*> > MoreHelp;$/;"	v	file:
MorphNode	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^MorphNode(SDNode *Node, unsigned TargetOpc, SDVTList VTList,$/;"	f	class:SelectionDAGISel
MorphNodeTo	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDNode *SelectionDAG::MorphNodeTo(SDNode *N, unsigned Opc,$/;"	f	class:SelectionDAG
MoveBelowOrigChain	Target/X86/X86ISelDAGToDAG.cpp	/^static void MoveBelowOrigChain(SelectionDAG *CurDAG, SDValue Load,$/;"	f	file:
MoveCalls	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCOpt::MoveCalls(Value *Arg,$/;"	f	class:ObjCARCOpt
MoveConstantToNewSlot	VMCore/ConstantsContext.h	/^  void MoveConstantToNewSlot(ConstantClass *C, typename MapTy::iterator I) {$/;"	f	class:llvm::ConstantUniqueMap
MoveCopyOutOfITBlock	Target/ARM/Thumb2ITBlockPass.cpp	/^Thumb2ITBlockPass::MoveCopyOutOfITBlock(MachineInstr *MI,$/;"	f	class:Thumb2ITBlockPass
MoveDiscontiguousLoopBlocks	CodeGen/CodePlacementOpt.cpp	/^bool CodePlacementOpt::MoveDiscontiguousLoopBlocks(MachineFunction &MF,$/;"	f	class:CodePlacementOpt
MoveExtToFormExtLoad	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::MoveExtToFormExtLoad(Instruction *I) {$/;"	f	class:CodeGenPrepare
MovePCtoLROffset	Target/PowerPC/PPCCodeEmitter.cpp	/^    void *MovePCtoLROffset;$/;"	m	class:__anon324::PPCCodeEmitter	file:
MoveParam	Target/NVPTX/NVPTXISelLowering.h	/^  MoveParam,$/;"	e	enum:llvm::NVPTXISD::NodeType
MoveRetval	Target/NVPTX/NVPTXISelLowering.h	/^  MoveRetval,$/;"	e	enum:llvm::NVPTXISD::NodeType
MoveSource	MC/MCDisassembler/EDInst.h	/^  int MoveSource;$/;"	m	struct:llvm::EDInst
MoveTarget	MC/MCDisassembler/EDInst.h	/^  int MoveTarget;$/;"	m	struct:llvm::EDInst
MoveToParam	Target/NVPTX/NVPTXISelLowering.h	/^  MoveToParam,$/;"	e	enum:llvm::NVPTXISD::NodeType
MoveToRetval	Target/NVPTX/NVPTXISelLowering.h	/^  MoveToRetval,$/;"	e	enum:llvm::NVPTXISD::NodeType
Moves	CodeGen/AsmPrinter/DwarfDebug.h	/^    std::vector<MachineMove> Moves;$/;"	m	struct:llvm::DwarfDebug::FunctionDebugFrameInfo
MulFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    MulFrm        = 1  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
MulOpc	Target/ARM/ARMBaseInstrInfo.cpp	/^  uint16_t MulOpc;     \/\/ Expanded multiplication opcode$/;"	m	struct:ARM_MLxEntry	file:
MultiClass	TableGen/TGLexer.h	/^    MultiClass, String,$/;"	e	enum:llvm::tgtok::TokKind
MultiClasses	TableGen/TGParser.h	/^  std::map<std::string, MultiClass*> MultiClasses;$/;"	m	class:llvm::TGParser
MultiPressure	CodeGen/MachineScheduler.cpp	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure };$/;"	e	enum:__anon126::ConvergingScheduler::CandResult	file:
MultiPressure	Target/Hexagon/HexagonMachineScheduler.h	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure,$/;"	e	enum:llvm::ConvergingVLIWScheduler::CandResult
MultipleDefsBySameMI	CodeGen/LiveIntervalAnalysis.cpp	/^bool MultipleDefsBySameMI(const MachineInstr &MI, unsigned MOIdx) {$/;"	f	file:
MultiplyOverflows	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^static bool MultiplyOverflows(ConstantInt *C1, ConstantInt *C2, bool sign) {$/;"	f	file:
Must	Analysis/AliasAnalysisCounter.cpp	/^    unsigned No, May, Partial, Must;$/;"	m	class:__anon43::AliasAnalysisCounter	file:
MustAlias	Analysis/AliasAnalysisEvaluator.cpp	/^    unsigned NoAlias, MayAlias, PartialAlias, MustAlias;$/;"	m	class:__anon47::AAEval	file:
MustSaveLR	Target/PowerPC/PPCFrameLowering.cpp	/^static bool MustSaveLR(const MachineFunction &MF, unsigned LR) {$/;"	f	file:
MustSaveLR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  bool MustSaveLR;$/;"	m	class:llvm::PPCFunctionInfo
MustSpill	CodeGen/SpillPlacement.h	/^    MustSpill  \/\/\/< A register is impossible, variable must be spilled.$/;"	e	enum:llvm::SpillPlacement::BorderConstraint
MutatedMemory	Transforms/IPO/GlobalOpt.cpp	/^  DenseMap<Constant*, Constant*> MutatedMemory;$/;"	m	class:__anon591::Evaluator	file:
MutexImpl	Support/Mutex.cpp	/^MutexImpl::MutexImpl( bool recursive) { }$/;"	f	class:llvm::MutexImpl
N	Support/regcomp.c	953;"	d	file:
N1RegModImmFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    N1RegModImmFrm= 31 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
N2RegFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    N2RegFrm      = 32 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
N2RegVShLFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    N2RegVShLFrm  = 35 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
N2RegVShRFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    N2RegVShRFrm  = 36 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
N32	Target/Mips/MipsSubtarget.h	/^    UnknownABI, O32, N32, N64, EABI$/;"	e	enum:llvm::MipsSubtarget::MipsABIEnum
N3RegFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    N3RegFrm      = 37 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
N3RegVShFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    N3RegVShFrm   = 38 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
N64	Target/Mips/MipsSubtarget.h	/^    UnknownABI, O32, N32, N64, EABI$/;"	e	enum:llvm::MipsSubtarget::MipsABIEnum
N86	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^namespace N86 {$/;"	n	namespace:llvm
NC	Support/regutils.h	39;"	d
NDEBUG	Support/regutils.h	45;"	d
NDupFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NDupFrm       = 29 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
NE	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NE,            \/\/ Not equal                  Not equal, or unordered$/;"	e	enum:llvm::ARMCC::CondCodes
NE	Target/MBlaze/MBlazeISelLowering.h	/^      NE,$/;"	e	enum:llvm::MBlazeCC::CC
NE	Target/NVPTX/NVPTX.h	/^  NE,$/;"	e	enum:llvm::NVPTXCC::CondCodes
NEONLdStTable	Target/ARM/ARMExpandPseudoInsts.cpp	/^static const NEONLdStTableEntry NEONLdStTable[] = {$/;"	v	file:
NEONLdStTableEntry	Target/ARM/ARMExpandPseudoInsts.cpp	/^  struct NEONLdStTableEntry {$/;"	s	namespace:__anon312	file:
NEONModImmType	Target/ARM/ARMISelLowering.h	/^  enum NEONModImmType {$/;"	g	namespace:llvm
NEONRegSpacing	Target/ARM/ARMExpandPseudoInsts.cpp	/^  enum NEONRegSpacing {$/;"	g	namespace:__anon312	file:
NEONThumb2DataIPostEncoder	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned NEONThumb2DataIPostEncoder(const MachineInstr &MI, unsigned Val)$/;"	f	class:__anon297::ARMCodeEmitter	file:
NEONThumb2DataIPostEncoder	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^unsigned ARMMCCodeEmitter::NEONThumb2DataIPostEncoder(const MCInst &MI,$/;"	f	class:ARMMCCodeEmitter
NEONThumb2DupPostEncoder	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned NEONThumb2DupPostEncoder(const MachineInstr &MI,unsigned Val)$/;"	f	class:__anon297::ARMCodeEmitter	file:
NEONThumb2DupPostEncoder	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^unsigned ARMMCCodeEmitter::NEONThumb2DupPostEncoder(const MCInst &MI,$/;"	f	class:ARMMCCodeEmitter
NEONThumb2LoadStorePostEncoder	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned NEONThumb2LoadStorePostEncoder(const MachineInstr &MI,unsigned Val)$/;"	f	class:__anon297::ARMCodeEmitter	file:
NEONThumb2LoadStorePostEncoder	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^unsigned ARMMCCodeEmitter::NEONThumb2LoadStorePostEncoder(const MCInst &MI,$/;"	f	class:ARMMCCodeEmitter
NEW_DLL_ENVIRONMENT_VAR	ExecutionEngine/IntelJITEvents/jitprofiling.c	39;"	d	file:
NEW_DLL_ENVIRONMENT_VAR	ExecutionEngine/IntelJITEvents/jitprofiling.c	41;"	d	file:
NEW_DOMAIN_A	ExecutionEngine/IntelJITEvents/ittnotify_config.h	408;"	d
NEW_DOMAIN_W	ExecutionEngine/IntelJITEvents/ittnotify_config.h	392;"	d
NEW_STRING_HANDLE_A	ExecutionEngine/IntelJITEvents/ittnotify_config.h	439;"	d
NEW_STRING_HANDLE_W	ExecutionEngine/IntelJITEvents/ittnotify_config.h	424;"	d
NEW_THREAD_INFO_A	ExecutionEngine/IntelJITEvents/ittnotify_config.h	375;"	d
NEW_THREAD_INFO_W	ExecutionEngine/IntelJITEvents/ittnotify_config.h	358;"	d
NEXT	Support/regcomp.c	122;"	d	file:
NEXT2	Support/regcomp.c	123;"	d	file:
NEXTn	Support/regcomp.c	124;"	d	file:
NGetLnFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NGetLnFrm     = 27 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
NLdStFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NLdStFrm      = 30 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
NOP	Target/PowerPC/PPCISelLowering.h	/^      NOP,$/;"	e	enum:llvm::PPCISD::NodeType
NORMAL_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t NORMAL_WEIGHT = 16;$/;"	v	file:
NO_PHYS_REG	CodeGen/VirtRegMap.h	/^      NO_PHYS_REG = 0,$/;"	e	enum:llvm::VirtRegMap::__anon147
NO_STACK_SLOT	CodeGen/VirtRegMap.h	/^      NO_STACK_SLOT = (1L << 30)-1,$/;"	e	enum:llvm::VirtRegMap::__anon147
NPAREN	Support/regcomp.c	65;"	d	file:
NSH	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NSH   = 7,$/;"	e	enum:llvm::ARM_MB::MemBOpt
NSHST	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NSHST = 6,$/;"	e	enum:llvm::ARM_MB::MemBOpt
NSetLnFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NSetLnFrm     = 28 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
NVBuiltin	Target/NVPTX/NVPTXISelLowering.h	/^  NVBuiltin,$/;"	e	enum:llvm::NVPTXISD::NodeType
NVCL	Target/NVPTX/NVPTX.h	/^  NVCL,$/;"	e	enum:llvm::NVPTX::DrvInterface
NVCL_IMAGE2D_READONLY_FUNCNAME	Target/NVPTX/NVPTXUtilities.h	29;"	d
NVCL_IMAGE3D_READONLY_FUNCNAME	Target/NVPTX/NVPTXUtilities.h	30;"	d
NVCVTFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NVCVTFrm      = 33 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
NVDupLnFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NVDupLnFrm    = 34 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
NVExtFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NVExtFrm      = 39 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
NVMulSLFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NVMulSLFrm    = 40 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
NVPTX	Target/NVPTX/NVPTX.h	/^namespace NVPTX$/;"	n	namespace:llvm
NVPTXASMPRINTER_H	Target/NVPTX/NVPTXAsmPrinter.h	16;"	d
NVPTXAllocaHoisting	Target/NVPTX/NVPTXAllocaHoisting.h	/^  NVPTXAllocaHoisting() : FunctionPass(ID) {}$/;"	f	class:llvm::NVPTXAllocaHoisting
NVPTXAllocaHoisting	Target/NVPTX/NVPTXAllocaHoisting.h	/^class NVPTXAllocaHoisting : public FunctionPass {$/;"	c	namespace:llvm
NVPTXAsmPrinter	Target/NVPTX/NVPTXAsmPrinter.h	/^  NVPTXAsmPrinter(TargetMachine &TM,$/;"	f	class:llvm::NVPTXAsmPrinter
NVPTXAsmPrinter	Target/NVPTX/NVPTXAsmPrinter.h	/^class LLVM_LIBRARY_VISIBILITY NVPTXAsmPrinter : public AsmPrinter {$/;"	c	namespace:llvm
NVPTXBASEINFO_H	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	18;"	d
NVPTXCC	Target/NVPTX/NVPTX.h	/^namespace NVPTXCC {$/;"	n	namespace:llvm
NVPTXCondCodeToString	Target/NVPTX/NVPTX.h	/^inline static const char *NVPTXCondCodeToString(NVPTXCC::CondCodes CC) {$/;"	f	namespace:llvm
NVPTXDAGToDAGISel	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^NVPTXDAGToDAGISel::NVPTXDAGToDAGISel(NVPTXTargetMachine &tm,$/;"	f	class:NVPTXDAGToDAGISel
NVPTXDAGToDAGISel	Target/NVPTX/NVPTXISelDAGToDAG.h	/^class LLVM_LIBRARY_VISIBILITY NVPTXDAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon317
NVPTXFrameLowering	Target/NVPTX/NVPTXFrameLowering.h	/^  explicit NVPTXFrameLowering(NVPTXTargetMachine &_tm, bool _is64bit)$/;"	f	class:llvm::NVPTXFrameLowering
NVPTXFrameLowering	Target/NVPTX/NVPTXFrameLowering.h	/^class NVPTXFrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
NVPTXINSTRUCTIONINFO_H	Target/NVPTX/NVPTXInstrInfo.h	15;"	d
NVPTXISD	Target/NVPTX/NVPTXISelLowering.h	/^namespace NVPTXISD {$/;"	n	namespace:llvm
NVPTXISELLOWERING_H	Target/NVPTX/NVPTXISelLowering.h	16;"	d
NVPTXInstrInfo	Target/NVPTX/NVPTXInstrInfo.cpp	/^NVPTXInstrInfo::NVPTXInstrInfo(NVPTXTargetMachine &tm)$/;"	f	class:NVPTXInstrInfo
NVPTXInstrInfo	Target/NVPTX/NVPTXInstrInfo.h	/^class NVPTXInstrInfo : public NVPTXGenInstrInfo$/;"	c	namespace:llvm
NVPTXLowerAggrCopies	Target/NVPTX/NVPTXLowerAggrCopies.h	/^  NVPTXLowerAggrCopies() : FunctionPass(ID) {}$/;"	f	struct:llvm::NVPTXLowerAggrCopies
NVPTXLowerAggrCopies	Target/NVPTX/NVPTXLowerAggrCopies.h	/^struct NVPTXLowerAggrCopies : public FunctionPass {$/;"	s	namespace:llvm
NVPTXMCAsmInfo	Target/NVPTX/MCTargetDesc/NVPTXMCAsmInfo.cpp	/^NVPTXMCAsmInfo::NVPTXMCAsmInfo(const Target &T, const StringRef &TT) {$/;"	f	class:NVPTXMCAsmInfo
NVPTXMCAsmInfo	Target/NVPTX/MCTargetDesc/NVPTXMCAsmInfo.h	/^class NVPTXMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
NVPTXMCTARGETDESC_H	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.h	15;"	d
NVPTXNumRegisters	Target/NVPTX/NVPTXNumRegisters.h	/^const unsigned NVPTXNumRegisters = 396;$/;"	m	namespace:llvm
NVPTXPassConfig	Target/NVPTX/NVPTXTargetMachine.cpp	/^  NVPTXPassConfig(NVPTXTargetMachine *TM, PassManagerBase &PM)$/;"	f	class:llvm::NVPTXPassConfig
NVPTXPassConfig	Target/NVPTX/NVPTXTargetMachine.cpp	/^class NVPTXPassConfig : public TargetPassConfig {$/;"	c	namespace:llvm	file:
NVPTXREGISTERINFO_H	Target/NVPTX/NVPTXRegisterInfo.h	15;"	d
NVPTXRegisterInfo	Target/NVPTX/NVPTXRegisterInfo.cpp	/^NVPTXRegisterInfo::NVPTXRegisterInfo(const TargetInstrInfo &tii,$/;"	f	class:NVPTXRegisterInfo
NVPTXRegisterInfo	Target/NVPTX/NVPTXRegisterInfo.h	/^class NVPTXRegisterInfo : public NVPTXGenRegisterInfo {$/;"	c	namespace:llvm
NVPTXSUBTARGET_H	Target/NVPTX/NVPTXSubtarget.h	15;"	d
NVPTXSection	Target/NVPTX/NVPTXSection.h	/^  NVPTXSection(SectionVariant V, SectionKind K) : MCSection(V, K) {}$/;"	f	class:llvm::NVPTXSection
NVPTXSection	Target/NVPTX/NVPTXSection.h	/^class NVPTXSection : public MCSection {$/;"	c	namespace:llvm
NVPTXSplitBBatBar	Target/NVPTX/NVPTXSplitBBatBar.h	/^  NVPTXSplitBBatBar() : FunctionPass(ID) {}$/;"	f	struct:llvm::NVPTXSplitBBatBar
NVPTXSplitBBatBar	Target/NVPTX/NVPTXSplitBBatBar.h	/^struct NVPTXSplitBBatBar : public FunctionPass {$/;"	s	namespace:llvm
NVPTXSubtarget	Target/NVPTX/NVPTXSubtarget.cpp	/^NVPTXSubtarget::NVPTXSubtarget(const std::string &TT, const std::string &CPU,$/;"	f	class:NVPTXSubtarget
NVPTXSubtarget	Target/NVPTX/NVPTXSubtarget.h	/^class NVPTXSubtarget : public NVPTXGenSubtargetInfo {$/;"	c	namespace:llvm
NVPTXTargetLowering	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::NVPTXTargetLowering(NVPTXTargetMachine &TM)$/;"	f	class:NVPTXTargetLowering
NVPTXTargetLowering	Target/NVPTX/NVPTXISelLowering.h	/^class NVPTXTargetLowering : public TargetLowering {$/;"	c	namespace:llvm
NVPTXTargetMachine	Target/NVPTX/NVPTXTargetMachine.cpp	/^NVPTXTargetMachine::NVPTXTargetMachine(const Target &T,$/;"	f	class:NVPTXTargetMachine
NVPTXTargetMachine	Target/NVPTX/NVPTXTargetMachine.h	/^class NVPTXTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
NVPTXTargetMachine32	Target/NVPTX/NVPTXTargetMachine.cpp	/^NVPTXTargetMachine32::NVPTXTargetMachine32(const Target &T, StringRef TT,$/;"	f	class:NVPTXTargetMachine32
NVPTXTargetMachine32	Target/NVPTX/NVPTXTargetMachine.h	/^class NVPTXTargetMachine32 : public NVPTXTargetMachine {$/;"	c	namespace:llvm
NVPTXTargetMachine64	Target/NVPTX/NVPTXTargetMachine.cpp	/^NVPTXTargetMachine64::NVPTXTargetMachine64(const Target &T, StringRef TT,$/;"	f	class:NVPTXTargetMachine64
NVPTXTargetMachine64	Target/NVPTX/NVPTXTargetMachine.h	/^class NVPTXTargetMachine64 : public NVPTXTargetMachine {$/;"	c	namespace:llvm
NVPTXTargetObjectFile	Target/NVPTX/NVPTXTargetObjectFile.h	/^  NVPTXTargetObjectFile() {}$/;"	f	class:llvm::NVPTXTargetObjectFile
NVPTXTargetObjectFile	Target/NVPTX/NVPTXTargetObjectFile.h	/^class NVPTXTargetObjectFile : public TargetLoweringObjectFile {$/;"	c	namespace:llvm
NVPTXUTILITIES_H	Target/NVPTX/NVPTXUtilities.h	15;"	d
NVPTX_ALLOCA_HOISTING_H_	Target/NVPTX/NVPTXAllocaHoisting.h	15;"	d
NVPTX_FRAMELOWERING_H	Target/NVPTX/NVPTXFrameLowering.h	15;"	d
NVPTX_LOWER_AGGR_COPIES_H	Target/NVPTX/NVPTXLowerAggrCopies.h	16;"	d
NVPTX_MCASM_INFO_H	Target/NVPTX/MCTargetDesc/NVPTXMCAsmInfo.h	15;"	d
NVPTX_NUM_REGISTERS_H	Target/NVPTX/NVPTXNumRegisters.h	12;"	d
NVPTX_SPLIT_BB_AT_BAR_H	Target/NVPTX/NVPTXSplitBBatBar.h	16;"	d
NVPTX_TARGETMACHINE_H	Target/NVPTX/NVPTXTargetMachine.h	16;"	d
NVTBLFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    NVTBLFrm      = 41 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
N_BitShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    N_BitShift     = 7,$/;"	e	enum:llvm::ARMII::__anon288
NaNL	Support/APFloat.cpp	/^static const char NaNL[] = "nan";$/;"	v	file:
NaNU	Support/APFloat.cpp	/^static const char NaNU[] = "NAN";$/;"	v	file:
Name	AsmParser/LLParser.h	/^      std::string Name;$/;"	m	struct:llvm::LLParser::ArgInfo
Name	DebugInfo/DWARFDebugLine.h	/^    const char *Name;$/;"	m	struct:llvm::DWARFDebugLine::FileNameEntry
Name	MC/MCParser/AsmParser.cpp	/^  StringRef Name;$/;"	m	struct:__anon211::Macro	file:
Name	MC/WinCOFFObjectWriter.cpp	/^  name             Name;$/;"	m	class:__anon222::COFFSymbol	file:
Name	MC/WinCOFFObjectWriter.cpp	/^  std::string          Name;$/;"	m	class:__anon222::COFFSection	file:
Name	Object/Archive.cpp	/^  char Name[16];$/;"	m	struct:__anon228::ArchiveMemberHeader	file:
Name	TableGen/TGParser.h	/^    std::string Name;$/;"	m	struct:llvm::LetRecord
Name	VMCore/LeaksContext.h	/^  const char* Name;$/;"	m	struct:llvm::LeakDetectorImpl
Name2PairMap	Support/Timer.cpp	/^class Name2PairMap {$/;"	c	namespace:__anon246	file:
Name2TimerMap	Support/Timer.cpp	/^typedef StringMap<Timer> Name2TimerMap;$/;"	t	namespace:__anon246	file:
NameCompare	Support/Statistic.cpp	/^struct NameCompare {$/;"	s	namespace:__anon241	file:
NameNeedsEscaping	Target/Mangler.cpp	/^static bool NameNeedsEscaping(StringRef Str, const MCAsmInfo &MAI) {$/;"	f	file:
NameNeedsQuoting	MC/MCSymbol.cpp	/^static bool NameNeedsQuoting(StringRef Str) {$/;"	f	file:
NamePrefix	Transforms/Scalar/SROA.cpp	/^  std::string NamePrefix;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
NameSet	Target/CppBackend/CPPBackend.cpp	/^  typedef std::set<std::string> NameSet;$/;"	t	namespace:__anon412	file:
NameSuffix	Transforms/Utils/CloneFunction.cpp	/^    const char *NameSuffix;$/;"	m	struct:__anon465::PruningFunctionCloner	file:
Named	Transforms/IPO/ExtractGV.cpp	/^    SetVector<GlobalValue *> Named;$/;"	m	class:__anon584::GVExtractorPass	file:
NamedGroupedTimers	Support/Timer.cpp	/^static ManagedStatic<Name2PairMap> NamedGroupedTimers;$/;"	v	file:
NamedMDForAnnotations	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^static const char* NamedMDForAnnotations = "nvvm.annotations";$/;"	m	namespace:llvm
NamedMDNode	VMCore/Metadata.cpp	/^NamedMDNode::NamedMDNode(const Twine &N)$/;"	f	class:NamedMDNode
NamedRegionTimer	Support/Timer.cpp	/^NamedRegionTimer::NamedRegionTimer(StringRef Name, StringRef GroupName,$/;"	f	class:NamedRegionTimer
NamedRegionTimer	Support/Timer.cpp	/^NamedRegionTimer::NamedRegionTimer(StringRef Name,$/;"	f	class:NamedRegionTimer
NamedStructTypes	VMCore/LLVMContextImpl.h	/^  StringMap<StructType*> NamedStructTypes;$/;"	m	class:llvm::LLVMContextImpl
NamedStructTypesUniqueID	VMCore/LLVMContextImpl.h	/^  unsigned NamedStructTypesUniqueID;$/;"	m	class:llvm::LLVMContextImpl
NamedTimers	Support/Timer.cpp	/^static ManagedStatic<Name2TimerMap> NamedTimers;$/;"	v	file:
NamedTypes	AsmParser/LLParser.h	/^    StringMap<std::pair<Type*, LocTy> > NamedTypes;$/;"	m	class:llvm::LLParser
NamedTypes	VMCore/AsmWriter.cpp	/^  TypeFinder NamedTypes;$/;"	m	class:__anon611::TypePrinting	file:
NarrowDef	Transforms/Scalar/IndVarSimplify.cpp	/^  Instruction *NarrowDef;$/;"	m	struct:__anon497::NarrowIVDefUse	file:
NarrowIV	Transforms/Scalar/IndVarSimplify.cpp	/^    PHINode *NarrowIV;$/;"	m	struct:__anon496::WideIVInfo	file:
NarrowIVDefUse	Transforms/Scalar/IndVarSimplify.cpp	/^  NarrowIVDefUse(): NarrowDef(0), NarrowUse(0), WideDef(0) {}$/;"	f	struct:__anon497::NarrowIVDefUse
NarrowIVDefUse	Transforms/Scalar/IndVarSimplify.cpp	/^  NarrowIVDefUse(Instruction *ND, Instruction *NU, Instruction *WD):$/;"	f	struct:__anon497::NarrowIVDefUse
NarrowIVDefUse	Transforms/Scalar/IndVarSimplify.cpp	/^struct NarrowIVDefUse {$/;"	s	namespace:__anon497	file:
NarrowIVUsers	Transforms/Scalar/IndVarSimplify.cpp	/^  SmallVector<NarrowIVDefUse, 8> NarrowIVUsers;$/;"	m	class:__anon497::WidenIV	file:
NarrowOpc1	Target/ARM/Thumb2SizeReduction.cpp	/^    uint16_t NarrowOpc1;   \/\/ Narrow opcode to transform to$/;"	m	struct:__anon300::ReduceEntry	file:
NarrowOpc2	Target/ARM/Thumb2SizeReduction.cpp	/^    uint16_t NarrowOpc2;   \/\/ Narrow opcode when it's two-address$/;"	m	struct:__anon300::ReduceEntry	file:
NarrowSearchSpaceByCollapsingUnrolledCode	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::NarrowSearchSpaceByCollapsingUnrolledCode() {$/;"	f	class:LSRInstance
NarrowSearchSpaceByDetectingSupersets	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::NarrowSearchSpaceByDetectingSupersets() {$/;"	f	class:LSRInstance
NarrowSearchSpaceByPickingWinnerRegs	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::NarrowSearchSpaceByPickingWinnerRegs() {$/;"	f	class:LSRInstance
NarrowSearchSpaceByRefilteringUndesirableDedicatedRegisters	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::NarrowSearchSpaceByRefilteringUndesirableDedicatedRegisters(){$/;"	f	class:LSRInstance
NarrowSearchSpaceUsingHeuristics	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::NarrowSearchSpaceUsingHeuristics() {$/;"	f	class:LSRInstance
NarrowUse	Transforms/Scalar/IndVarSimplify.cpp	/^  Instruction *NarrowUse;$/;"	m	struct:__anon497::NarrowIVDefUse	file:
NearUsers	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallPtrSet<Instruction*, 4> NearUsers;$/;"	m	struct:__anon518::ChainUsers	file:
NeedLatency	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool NeedLatency;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
NeedSizeDir	Target/X86/AsmParser/X86AsmParser.cpp	/^      bool NeedSizeDir;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon341	file:
NeedSubsumption	CodeGen/IfConversion.cpp	/^      bool NeedSubsumption;$/;"	m	struct:__anon99::IfConverter::IfcvtToken	file:
NeedsCustomLoweringPass	CodeGen/GCStrategy.cpp	/^bool LowerIntrinsics::NeedsCustomLoweringPass(const GCStrategy &C) {$/;"	f	class:LowerIntrinsics
NeedsDefaultLoweringPass	CodeGen/GCStrategy.cpp	/^bool LowerIntrinsics::NeedsDefaultLoweringPass(const GCStrategy &C) {$/;"	f	class:LowerIntrinsics
NeedsGOT	MC/ELFObjectWriter.cpp	/^    bool NeedsGOT;$/;"	m	class:__anon225::ELFObjectWriter	file:
NeedsMatchingLo	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^static bool NeedsMatchingLo(const MCAssembler &Asm, const RelEntry &R) {$/;"	f	file:
NeedsPositiveRetainCount	Transforms/Scalar/ObjCARC.cpp	/^    NeedsPositiveRetainCount,$/;"	e	enum:__anon509::DependenceKind	file:
NeedsSymtabShndx	MC/ELFObjectWriter.cpp	/^    bool NeedsSymtabShndx;$/;"	m	class:__anon225::ELFObjectWriter	file:
NegAcc	Target/ARM/ARMBaseInstrInfo.cpp	/^  bool NegAcc;         \/\/ True if the acc is negated before the add \/ sub.$/;"	m	struct:ARM_MLxEntry	file:
NegOk	Target/ARM/ARMConstantIslandPass.cpp	/^      bool NegOk;$/;"	m	struct:__anon310::ARMConstantIslands::CPUser	file:
NegateValue	Transforms/Scalar/Reassociate.cpp	/^static Value *NegateValue(Value *V, Instruction *BI) {$/;"	f	file:
NestedBlockToIndexMap	Analysis/PathProfileVerifier.cpp	/^typedef std::map<BasicBlock*,BlockToDuplicateMap> NestedBlockToIndexMap;$/;"	t	file:
NewAI	Transforms/Scalar/SROA.cpp	/^  AllocaInst &OldAI, &NewAI;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
NewAllocaBeginOffset	Transforms/Scalar/SROA.cpp	/^  const uint64_t NewAllocaBeginOffset, NewAllocaEndOffset;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
NewAllocaEndOffset	Transforms/Scalar/SROA.cpp	/^  const uint64_t NewAllocaBeginOffset, NewAllocaEndOffset;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
NewAllocaTy	Transforms/Scalar/SROA.cpp	/^  Type *NewAllocaTy;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
NewBlocks	Transforms/Scalar/LoopUnswitch.cpp	/^    std::vector<BasicBlock*> NewBlocks;$/;"	m	class:__anon494::LoopUnswitch	file:
NewFunc	Transforms/Utils/CloneFunction.cpp	/^    Function *NewFunc;$/;"	m	struct:__anon465::PruningFunctionCloner	file:
NewGV	Linker/LinkModules.cpp	/^      GlobalVariable *NewGV;  \/\/ New aggregate global in dest module.$/;"	m	struct:__anon202::ModuleLinker::AppendingVarInfo	file:
NewIdx	CodeGen/LiveIntervalAnalysis.cpp	/^  SlotIndex NewIdx;$/;"	m	class:LiveIntervals::HMEditor	file:
NewNode	CodeGen/SelectionDAG/LegalizeTypes.h	/^    NewNode = -1,$/;"	e	enum:llvm::DAGTypeLegalizer::NodeIdFlags
NewPhiNodes	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DenseMap<std::pair<BasicBlock*, unsigned>, PHINode*> NewPhiNodes;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
NewRC	CodeGen/RegisterCoalescer.h	/^    const TargetRegisterClass *NewRC;$/;"	m	class:llvm::CoalescerPair
NewVNInfo	CodeGen/RegisterCoalescer.cpp	/^  SmallVectorImpl<VNInfo*> &NewVNInfo;$/;"	m	class:__anon115::JoinVals	file:
NewWaterList	Target/ARM/ARMConstantIslandPass.cpp	/^    SmallSet<MachineBasicBlock*, 4> NewWaterList;$/;"	m	class:__anon310::ARMConstantIslands	file:
Next	CodeGen/ExecutionDepsFix.cpp	/^  DomainValue *Next;$/;"	m	struct:__anon118::DomainValue	file:
Next	CodeGen/ShadowStackGC.cpp	/^    IRBuilder<> *Next() {$/;"	f	class:__anon149::EscapeEnumerator
Next	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    FreeRangeHeader *Next;$/;"	m	struct:__anon189::FreeRangeHeader	file:
Next	Transforms/Scalar/GVN.cpp	/^      LeaderTableEntry *Next;$/;"	m	struct:__anon537::GVN::LeaderTableEntry	file:
NextAction	CodeGen/AsmPrinter/DwarfException.h	/^    int NextAction;$/;"	m	struct:llvm::DwarfException::ActionEntry
NextAction	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^  int NextAction;$/;"	m	struct:__anon183::ActionEntry	file:
NextCascade	CodeGen/RegAllocGreedy.cpp	/^  unsigned NextCascade;$/;"	m	class:__anon158::RAGreedy	file:
NextColor	CodeGen/StackSlotColoring.cpp	/^    int NextColor;$/;"	m	class:__anon94::StackSlotColoring	file:
NextInstance	MC/MCContext.cpp	/^unsigned MCContext::NextInstance(int64_t LocalLabelVal) {$/;"	f	class:MCContext
NextStringPoolNumber	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned NextStringPoolNumber;$/;"	m	class:llvm::DwarfDebug
NextUnreadBit	Bitcode/Reader/BitcodeReader.h	/^  uint64_t NextUnreadBit;$/;"	m	class:llvm::BitcodeReader
No	Analysis/AliasAnalysisCounter.cpp	/^    unsigned No, May, Partial, Must;$/;"	m	class:__anon43::AliasAnalysisCounter	file:
NoAA	Analysis/NoAliasAnalysis.cpp	/^    NoAA() : ImmutablePass(ID) {$/;"	f	struct:__anon42::NoAA
NoAA	Analysis/NoAliasAnalysis.cpp	/^  struct NoAA : public ImmutablePass, public AliasAnalysis {$/;"	s	namespace:__anon42	file:
NoARM	Target/ARM/ARMSubtarget.h	/^  bool NoARM;$/;"	m	class:llvm::ARMSubtarget
NoAlias	Analysis/AliasAnalysisEvaluator.cpp	/^    unsigned NoAlias, MayAlias, PartialAlias, MustAlias;$/;"	m	class:__anon47::AAEval	file:
NoCand	CodeGen/MachineScheduler.cpp	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure };$/;"	e	enum:__anon126::ConvergingScheduler::CandResult	file:
NoCand	CodeGen/RegAllocGreedy.cpp	/^  enum { NoCand = ~0u };$/;"	e	enum:__anon158::RAGreedy::__anon159	file:
NoCand	Target/Hexagon/HexagonMachineScheduler.h	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure,$/;"	e	enum:llvm::ConvergingVLIWScheduler::CandResult
NoHWMult	Target/MSP430/MSP430ISelLowering.cpp	/^  NoHWMult,$/;"	e	enum:__anon389	file:
NoInterference	CodeGen/InterferenceCache.h	/^    static BlockInterference NoInterference;$/;"	m	class:llvm::InterferenceCache::Cursor
NoInterveningSideEffect	CodeGen/MachineCopyPropagation.cpp	/^static bool NoInterveningSideEffect(const MachineInstr *CopyMI,$/;"	f	file:
NoLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^enum VectorLaneTy { NoLanes, AllLanes, IndexedLane };$/;"	e	enum:__anon259::VectorLaneTy	file:
NoLoads	Transforms/Scalar/GVN.cpp	/^    bool NoLoads;$/;"	m	class:__anon537::GVN	file:
NoMMXSSE	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
NoMR	Analysis/AliasAnalysisCounter.cpp	/^    unsigned NoMR, JustRef, JustMod, MR;$/;"	m	class:__anon43::AliasAnalysisCounter	file:
NoModRef	Analysis/AliasAnalysisEvaluator.cpp	/^    unsigned NoModRef, Mod, Ref, ModRef;$/;"	m	class:__anon47::AAEval	file:
NoObjCARCExceptionsMDKind	Transforms/Scalar/ObjCARC.cpp	/^    unsigned NoObjCARCExceptionsMDKind;$/;"	m	class:__anon508::ObjCARCOpt	file:
NoPathProfileInfo	Analysis/PathProfileInfo.cpp	/^    NoPathProfileInfo() : ImmutablePass(ID) {$/;"	f	struct:__anon41::NoPathProfileInfo
NoPathProfileInfo	Analysis/PathProfileInfo.cpp	/^  struct NoPathProfileInfo : public ImmutablePass, public PathProfileInfo {$/;"	s	namespace:__anon41	file:
NoPrefix	VMCore/AsmWriter.cpp	/^  NoPrefix$/;"	e	enum:PrefixType	file:
NoProfileInfo	Analysis/ProfileInfo.cpp	/^    NoProfileInfo() : ImmutablePass(ID) {$/;"	f	struct:__anon16::NoProfileInfo
NoProfileInfo	Analysis/ProfileInfo.cpp	/^  struct NoProfileInfo : public ImmutablePass, public ProfileInfo {$/;"	s	namespace:__anon16	file:
NoRAUWValueMapConfig	ExecutionEngine/JIT/JITEmitter.cpp	/^  struct NoRAUWValueMapConfig : public ValueMapConfig<ValueTy> {$/;"	s	namespace:__anon182	file:
NoReduction	Transforms/Vectorize/LoopVectorize.cpp	/^    NoReduction = -1, \/\/\/ Not a reduction.$/;"	e	enum:__anon605::LoopVectorizationLegality::ReductionKind	file:
NoThreeDNow	Target/X86/X86Subtarget.h	/^    NoThreeDNow, ThreeDNow, ThreeDNowA$/;"	e	enum:llvm::X86Subtarget::X863DNowEnum
NoThreshold	Transforms/Scalar/LoopUnrollPass.cpp	/^    static const unsigned NoThreshold = UINT_MAX;$/;"	m	class:__anon571::LoopUnroll	file:
NoUseAfterLastDef	CodeGen/TwoAddressInstructionPass.cpp	/^bool TwoAddressInstructionPass::NoUseAfterLastDef(unsigned Reg,$/;"	f	class:TwoAddressInstructionPass
Node	Analysis/DominanceFrontier.cpp	/^    const DomTreeNode *Node;$/;"	m	class:__anon6::DFCalculateWorkObject	file:
Node	Analysis/ScalarEvolution.cpp	/^  const SCEV *Node;$/;"	m	struct:__anon32::SCEVSearch	file:
Node	Analysis/TypeBasedAliasAnalysis.cpp	/^    const MDNode *Node;$/;"	m	class:__anon12::TBAANode	file:
Node	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^      SDNode *Node;         \/\/ valid for expressions$/;"	m	struct:llvm::SDDbgValue::__anon89::__anon90
Node	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^      const SDNode *Node;$/;"	m	class:llvm::ScheduleDAGSDNodes::RegDefIter
Node	CodeGen/SpillPlacement.cpp	/^  Node() {$/;"	f	struct:SpillPlacement::Node
Node	CodeGen/SpillPlacement.cpp	/^struct SpillPlacement::Node {$/;"	s	class:SpillPlacement	file:
Node	CodeGen/StrongPHIElimination.cpp	/^      Node(unsigned v) : value(v), rank(0) { parent.setPointer(this); }$/;"	f	struct:__anon154::StrongPHIElimination::Node
Node	CodeGen/StrongPHIElimination.cpp	/^    struct Node {$/;"	s	class:__anon154::StrongPHIElimination	file:
Node	Support/YAMLParser.cpp	/^Node::Node(unsigned int Type, OwningPtr<Document> &D, StringRef A)$/;"	f	class:Node
Node	Transforms/Scalar/EarlyCSE.cpp	/^    DomTreeNode *Node;$/;"	m	class:__anon566::EarlyCSE::StackNode	file:
Node2LIMap	CodeGen/RegAllocPBQP.cpp	/^  typedef std::vector<const LiveInterval*> Node2LIMap;$/;"	t	class:__anon135::RegAllocPBQP	file:
NodeDeleted	CodeGen/SelectionDAG/DAGCombiner.cpp	/^  virtual void NodeDeleted(SDNode *N, SDNode *E) {$/;"	f	class:__anon69::WorkListRemover
NodeDeleted	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  virtual void NodeDeleted(SDNode *N, SDNode *E) {$/;"	f	class:__anon67::SelectionDAGLegalize
NodeDeleted	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^    virtual void NodeDeleted(SDNode *N, SDNode *E) {$/;"	f	class:__anon85::NodeUpdateListener
NodeDeleted	CodeGen/SelectionDAG/SelectionDAG.cpp	/^  virtual void NodeDeleted(SDNode *N, SDNode *E) {$/;"	f	class:__anon73::RAUWUpdateListener	file:
NodeDeleted	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::DAGUpdateListener::NodeDeleted(SDNode*, SDNode*) {}$/;"	f	class:SelectionDAG::DAGUpdateListener
NodeDeleted	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  virtual void NodeDeleted(SDNode *N, SDNode *E) {$/;"	f	class:__anon70::ISelUpdater
NodeIdFlags	CodeGen/SelectionDAG/LegalizeTypes.h	/^  enum NodeIdFlags {$/;"	g	class:llvm::DAGTypeLegalizer
NodeMap	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  DenseMap<const Value*, SDValue> NodeMap;$/;"	m	class:llvm::SelectionDAGBuilder
NodeNumDefs	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^      unsigned NodeNumDefs;$/;"	m	class:llvm::ScheduleDAGSDNodes::RegDefIter
NodeOrder	CodeGen/MachineScheduler.cpp	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure };$/;"	e	enum:__anon126::ConvergingScheduler::CandResult	file:
NodeOrder	Target/Hexagon/HexagonMachineScheduler.h	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure,$/;"	e	enum:llvm::ConvergingVLIWScheduler::CandResult
NodeScope	Transforms/Scalar/EarlyCSE.cpp	/^    NodeScope(ScopedHTType *availableValues,$/;"	f	class:__anon566::EarlyCSE::NodeScope
NodeScope	Transforms/Scalar/EarlyCSE.cpp	/^  class NodeScope {$/;"	c	class:__anon566::EarlyCSE	file:
NodeStack	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  SmallVector<SDValue, 4> NodeStack;$/;"	m	struct:__anon71::MatchScope	file:
NodeType	Target/ARM/ARMISelLowering.h	/^    enum NodeType {$/;"	g	namespace:llvm::ARMISD
NodeType	Target/CellSPU/SPUISelLowering.h	/^    enum NodeType {$/;"	g	namespace:llvm::SPUISD
NodeType	Target/MBlaze/MBlazeISelLowering.h	/^    enum NodeType {$/;"	g	namespace:llvm::MBlazeISD
NodeType	Target/Mips/MipsISelLowering.h	/^    enum NodeType {$/;"	g	namespace:llvm::MipsISD
NodeType	Target/NVPTX/NVPTXISelLowering.h	/^enum NodeType {$/;"	g	namespace:llvm::NVPTXISD
NodeType	Target/PowerPC/PPCISelLowering.h	/^    enum NodeType {$/;"	g	namespace:llvm::PPCISD
NodeType	Target/X86/X86ISelLowering.h	/^    enum NodeType {$/;"	g	namespace:llvm::X86ISD
NodeType	Target/XCore/XCoreISelLowering.h	/^    enum NodeType {$/;"	g	namespace:llvm::XCoreISD
NodeType	Transforms/IPO/FunctionAttrs.cpp	/^    typedef ArgumentGraphNode NodeType;$/;"	t	struct:llvm::GraphTraits	file:
NodeUpdateListener	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^    explicit NodeUpdateListener(DAGTypeLegalizer &dtl,$/;"	f	class:__anon85::NodeUpdateListener
NodeUpdateListener	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^  class NodeUpdateListener : public SelectionDAG::DAGUpdateListener {$/;"	c	namespace:__anon85	file:
NodeUpdated	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  virtual void NodeUpdated(SDNode *N) {}$/;"	f	class:__anon67::SelectionDAGLegalize
NodeUpdated	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^    virtual void NodeUpdated(SDNode *N) {$/;"	f	class:__anon85::NodeUpdateListener
NodeUpdated	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::DAGUpdateListener::NodeUpdated(SDNode*) {}$/;"	f	class:SelectionDAG::DAGUpdateListener
NodeVector	CodeGen/RegAllocPBQP.cpp	/^  typedef std::vector<PBQP::Graph::NodeItr> NodeVector;$/;"	t	class:__anon135::RegAllocPBQP	file:
NodesToAnalyze	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^    SmallSetVector<SDNode*, 16> &NodesToAnalyze;$/;"	m	class:__anon85::NodeUpdateListener	file:
NonAddressTakenGlobals	Analysis/IPA/GlobalsModRef.cpp	/^    std::set<const GlobalValue*> NonAddressTakenGlobals;$/;"	m	class:__anon1::GlobalsModRef	file:
NonFuncLocal	Analysis/MemDepPrinter.cpp	/^      NonFuncLocal,$/;"	e	enum:__anon33::MemDepPrinter::DepType	file:
NonPredSize	CodeGen/IfConversion.cpp	/^      unsigned NonPredSize;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
NonUniquedMDNodes	VMCore/LLVMContextImpl.h	/^  SmallPtrSet<MDNode*, 1> NonUniquedMDNodes;$/;"	m	class:llvm::LLVMContextImpl
None	CodeGen/ShrinkWrapping.cpp	/^  None, BasicInfo, Iterations, Details$/;"	e	enum:ShrinkWrapDebugLevel	file:
None	Target/X86/X86Subtarget.h	/^  None              \/\/ Set when in -static mode (not PIC or DynamicNoPIC mode).$/;"	e	enum:llvm::PICStyles::Style
None	VMCore/PassManager.cpp	/^  None, Arguments, Structure, Executions, Details$/;"	e	enum:llvm::PassDebugLevel	file:
NormalizeMask	Target/X86/X86ISelLowering.cpp	/^static void NormalizeMask(SmallVectorImpl<int> &Mask, unsigned NumElems) {$/;"	f	file:
NormalizeVectorShuffle	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::NormalizeVectorShuffle(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
NotFP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    NotFP      = 0 << FPTypeShift,$/;"	e	enum:llvm::X86II::__anon350
NotStored	Transforms/IPO/GlobalOpt.cpp	/^    NotStored,$/;"	e	enum:__anon590::GlobalStatus::StoredType	file:
NotStructReturn	Target/X86/X86ISelLowering.cpp	/^  NotStructReturn,$/;"	e	enum:StructReturnType	file:
NotUnderValgrind	Support/Valgrind.cpp	/^static const bool NotUnderValgrind = InitNotUnderValgrind();$/;"	v	file:
Not_Allowed	Target/ARM/ARMBuildAttrs.h	/^    Not_Allowed = 0,$/;"	e	enum:ARMBuildAttrs::__anon294
Not_Applicable	Target/ARM/ARMBuildAttrs.h	/^    Not_Applicable = 0, \/\/ pre v7, or cross-profile code$/;"	e	enum:ARMBuildAttrs::CPUArchProfile
NoteDeletion	CodeGen/SelectionDAG/LegalizeTypes.h	/^  void NoteDeletion(SDNode *Old, SDNode *New) {$/;"	f	class:llvm::DAGTypeLegalizer
NotifyDebugger	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^void NotifyDebugger(jit_code_entry* JITCodeEntry) {$/;"	f	namespace:__anon178
NotifyEventFunc	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  NotifyEventPtr NotifyEventFunc;$/;"	m	class:llvm::IntelJITEventsWrapper
NotifyEventPtr	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  typedef int (*NotifyEventPtr)(iJIT_JVM_EVENT, void*);$/;"	t	class:llvm::IntelJITEventsWrapper
NotifyFreeingMachineCode	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^void IntelJITEventListener::NotifyFreeingMachineCode(void *FnStart) {$/;"	f	class:__anon198::IntelJITEventListener
NotifyFreeingMachineCode	ExecutionEngine/JIT/JIT.cpp	/^void JIT::NotifyFreeingMachineCode(void *OldPtr) {$/;"	f	class:JIT
NotifyFreeingMachineCode	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^void OProfileJITEventListener::NotifyFreeingMachineCode(void *FnStart) {$/;"	f	class:__anon193::OProfileJITEventListener
NotifyFunctionEmitted	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^void IntelJITEventListener::NotifyFunctionEmitted($/;"	f	class:__anon198::IntelJITEventListener
NotifyFunctionEmitted	ExecutionEngine/JIT/JIT.cpp	/^void JIT::NotifyFunctionEmitted($/;"	f	class:JIT
NotifyFunctionEmitted	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^void OProfileJITEventListener::NotifyFunctionEmitted($/;"	f	class:__anon193::OProfileJITEventListener
NumAlignedDPRCS2Regs	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned NumAlignedDPRCS2Regs;$/;"	m	class:llvm::ARMFunctionInfo
NumAllocaArgs	Analysis/InlineCost.cpp	/^  unsigned NumAllocaArgs;$/;"	m	class:__anon28::CallAnalyzer	file:
NumBaseAdds	Transforms/Scalar/LoopStrengthReduce.cpp	/^  unsigned NumBaseAdds;$/;"	m	class:__anon515::Cost	file:
NumConstantArgs	Analysis/InlineCost.cpp	/^  unsigned NumConstantArgs;$/;"	m	class:__anon28::CallAnalyzer	file:
NumConstantOffsetPtrArgs	Analysis/InlineCost.cpp	/^  unsigned NumConstantOffsetPtrArgs;$/;"	m	class:__anon28::CallAnalyzer	file:
NumConstantPtrCmps	Analysis/InlineCost.cpp	/^  unsigned NumConstantPtrCmps;$/;"	m	class:__anon28::CallAnalyzer	file:
NumConstantPtrDiffs	Analysis/InlineCost.cpp	/^  unsigned NumConstantPtrDiffs;$/;"	m	class:__anon28::CallAnalyzer	file:
NumDups	CodeGen/IfConversion.cpp	/^      unsigned NumDups;$/;"	m	struct:__anon99::IfConverter::IfcvtToken	file:
NumDups2	CodeGen/IfConversion.cpp	/^      unsigned NumDups2;$/;"	m	struct:__anon99::IfConverter::IfcvtToken	file:
NumFPRegs	Target/X86/X86FloatingPoint.cpp	/^      NumFPRegs = 16            \/\/ Including scratch pseudo-registers.$/;"	e	enum:__anon386::FPS::__anon387	file:
NumGapBlocks	CodeGen/SplitKit.h	/^  unsigned NumGapBlocks;$/;"	m	class:llvm::SplitAnalysis
NumIVMuls	Transforms/Scalar/LoopStrengthReduce.cpp	/^  unsigned NumIVMuls;$/;"	m	class:__anon515::Cost	file:
NumInstructions	Analysis/InlineCost.cpp	/^  unsigned NumInstructions, NumVectorInstructions;$/;"	m	class:__anon28::CallAnalyzer	file:
NumInstructionsSimplified	Analysis/InlineCost.cpp	/^  unsigned NumInstructionsSimplified;$/;"	m	class:__anon28::CallAnalyzer	file:
NumIssued	Target/PowerPC/PPCHazardRecognizers.h	/^  unsigned NumIssued;  \/\/ Number of insts issued, including advanced cycles.$/;"	m	class:llvm::PPCHazardRecognizer970
NumLiveRegs	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  unsigned NumLiveRegs;$/;"	m	class:__anon86::ScheduleDAGFast	file:
NumLiveRegs	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  unsigned NumLiveRegs;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
NumLocalDynamics	Target/X86/X86MachineFunctionInfo.h	/^  unsigned NumLocalDynamics;$/;"	m	class:llvm::X86MachineFunctionInfo
NumLoops	Transforms/IPO/LoopExtractor.cpp	/^    unsigned NumLoops;$/;"	m	struct:__anon580::LoopExtractor	file:
NumMatchedMemRefs	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  unsigned NumMatchedMemRefs;$/;"	m	struct:__anon71::MatchScope	file:
NumModuleMDValues	Bitcode/Writer/ValueEnumerator.h	/^  unsigned NumModuleMDValues;$/;"	m	class:llvm::ValueEnumerator
NumModuleValues	Bitcode/Writer/ValueEnumerator.h	/^  unsigned NumModuleValues;$/;"	m	class:llvm::ValueEnumerator
NumMovedBlocks	Transforms/Scalar/BasicBlockPlacement.cpp	/^    unsigned NumMovedBlocks;$/;"	m	struct:__anon528::BlockPlacement	file:
NumNamedVarArgParams	Target/Hexagon/HexagonISelLowering.cpp	/^int NumNamedVarArgParams = -1;$/;"	v
NumParams	Analysis/MemoryBuiltins.cpp	/^  unsigned char NumParams;$/;"	m	struct:AllocFnsTy	file:
NumPendingSTs	Target/X86/X86FloatingPoint.cpp	/^    unsigned NumPendingSTs;$/;"	m	struct:__anon386::FPS	file:
NumRecordedNodes	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  unsigned NumRecordedNodes;$/;"	m	struct:__anon71::MatchScope	file:
NumRegs	CodeGen/ExecutionDepsFix.cpp	/^  const unsigned NumRegs;$/;"	m	class:__anon120::ExeDepsFix	file:
NumRegs	Target/ARM/ARMExpandPseudoInsts.cpp	/^    uint8_t NumRegs; \/\/ D registers loaded or stored$/;"	m	struct:__anon312::NEONLdStTableEntry	file:
NumRegs	Transforms/Scalar/LoopStrengthReduce.cpp	/^  unsigned NumRegs;$/;"	m	class:__anon515::Cost	file:
NumRetVals	Transforms/IPO/DeadArgumentElimination.cpp	/^static unsigned NumRetVals(const Function *F) {$/;"	f	file:
NumSignals	Support/CrashRecoveryContext.cpp	/^static const unsigned NumSignals = sizeof(Signals) \/ sizeof(Signals[0]);$/;"	v	file:
NumStores	Target/PowerPC/PPCHazardRecognizers.h	/^  unsigned NumStores;$/;"	m	class:llvm::PPCHazardRecognizer970
NumTargetFixupKinds	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  NumTargetFixupKinds = LastTargetFixupKind - FirstTargetFixupKind$/;"	e	enum:llvm::ARM::Fixups
NumTargetFixupKinds	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    NumTargetFixupKinds = LastTargetFixupKind - FirstTargetFixupKind$/;"	e	enum:llvm::Mips::Fixups
NumTargetFixupKinds	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^  NumTargetFixupKinds = LastTargetFixupKind - FirstTargetFixupKind$/;"	e	enum:llvm::PPC::Fixups
NumTargetFixupKinds	Target/X86/MCTargetDesc/X86FixupKinds.h	/^  NumTargetFixupKinds = LastTargetFixupKind - FirstTargetFixupKind$/;"	e	enum:llvm::X86::Fixups
NumTargetRegs	CodeGen/AggressiveAntiDepBreaker.h	/^    const unsigned NumTargetRegs;$/;"	m	class:llvm::AggressiveAntiDepState
NumThroughBlocks	CodeGen/SplitKit.h	/^  unsigned NumThroughBlocks;$/;"	m	class:llvm::SplitAnalysis
NumVectorInstructions	Analysis/InlineCost.cpp	/^  unsigned NumInstructions, NumVectorInstructions;$/;"	m	class:__anon28::CallAnalyzer	file:
Number	CodeGen/AsmPrinter/DIE.h	/^    unsigned Number;$/;"	m	class:llvm::DIEAbbrev
Number	CodeGen/AsmPrinter/DwarfDebug.h	/^    unsigned Number;$/;"	m	struct:llvm::DwarfDebug::FunctionDebugFrameInfo
Number	CodeGen/SpillPlacement.h	/^    unsigned Number;            \/\/\/< Basic block number (from MBB::getNumber()).$/;"	m	struct:llvm::SpillPlacement::BlockConstraint
Number	MC/WinCOFFObjectWriter.cpp	/^  int                  Number;$/;"	m	class:__anon222::COFFSection	file:
Number	Transforms/Instrumentation/GCOVProfiling.cpp	/^    uint32_t Number;$/;"	m	class:__anon490::GCOVBlock	file:
NumberedMetadata	AsmParser/LLParser.h	/^    std::vector<TrackingVH<MDNode> > NumberedMetadata;$/;"	m	class:llvm::LLParser
NumberedTypes	AsmParser/LLParser.h	/^    std::vector<std::pair<Type*, LocTy> > NumberedTypes;$/;"	m	class:llvm::LLParser
NumberedTypes	VMCore/AsmWriter.cpp	/^  DenseMap<StructType*, unsigned> NumberedTypes;$/;"	m	class:__anon611::TypePrinting	file:
NumberedVals	AsmParser/LLParser.h	/^      std::vector<Value*> NumberedVals;$/;"	m	class:llvm::LLParser::PerFunctionState
NumberedVals	AsmParser/LLParser.h	/^    std::vector<GlobalValue*> NumberedVals;$/;"	m	class:llvm::LLParser
NumericAttribute	Target/ARM/ARMAsmPrinter.cpp	/^        NumericAttribute,$/;"	e	enum:__anon313::ObjectAttributeEmitter::AttributeItemType::__anon314	file:
O	Target/NVPTX/NVPTXAsmPrinter.h	/^    raw_ostream &O;$/;"	m	class:llvm::NVPTXAsmPrinter::AggBuffer
O32	Target/Mips/MipsSubtarget.h	/^    UnknownABI, O32, N32, N64, EABI$/;"	e	enum:llvm::MipsSubtarget::MipsABIEnum
O32IntRegs	Target/Mips/MipsISelLowering.cpp	/^static const uint16_t O32IntRegs[] = {$/;"	v	file:
O32IntRegsSize	Target/Mips/MipsISelLowering.cpp	/^static const unsigned O32IntRegsSize = 4;$/;"	v	file:
OANY	Support/regex2.h	76;"	d
OANYOF	Support/regex2.h	77;"	d
OBACK_	Support/regex2.h	78;"	d
OBOL	Support/regex2.h	74;"	d
OBOW	Support/regex2.h	90;"	d
OCHAR	Support/regex2.h	73;"	d
OCH_	Support/regex2.h	86;"	d
OEND	Support/regex2.h	72;"	d
OEOL	Support/regex2.h	75;"	d
OEOW	Support/regex2.h	91;"	d
OLPAREN	Support/regex2.h	84;"	d
ONEBYTE	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  ONEBYTE       = 0,$/;"	e	enum:__anon364
ONEBYTE_STR	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	38;"	d
ONEBYTE_SYM	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	29;"	d
OOR1	Support/regex2.h	87;"	d
OOR2	Support/regex2.h	88;"	d
OP	Support/regex2.h	67;"	d
OPDMASK	Support/regex2.h	65;"	d
OPLUS_	Support/regex2.h	80;"	d
OPND	Support/regex2.h	68;"	d
OPRMASK	Support/regex2.h	64;"	d
OPSHIFT	Support/regex2.h	66;"	d
OProfileInitializationMutex	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^llvm::sys::Mutex OProfileInitializationMutex;$/;"	m	namespace:__anon194	file:
OProfileJITEventListener	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^  OProfileJITEventListener(OProfileWrapper& LibraryWrapper)$/;"	f	class:__anon193::OProfileJITEventListener
OProfileJITEventListener	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^class OProfileJITEventListener : public JITEventListener {$/;"	c	namespace:__anon193	file:
OProfileWrapper	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^OProfileWrapper::OProfileWrapper()$/;"	f	class:llvm::OProfileWrapper
OQUEST_	Support/regex2.h	82;"	d
OR	Target/X86/X86ISelDAGToDAG.cpp	/^  OR,$/;"	e	enum:AtomicOpc	file:
OR	Target/X86/X86ISelLowering.h	/^      INC, DEC, OR, XOR, AND,$/;"	e	enum:llvm::X86ISD::NodeType
ORPAREN	Support/regex2.h	85;"	d
ORi	Target/Mips/MipsAnalyzeImmediate.h	/^    unsigned ADDiu, ORi, SLL, LUi;$/;"	m	class:llvm::MipsAnalyzeImmediate
OS	Bitcode/Writer/BitcodeWriterPass.cpp	/^    raw_ostream &OS; \/\/ raw_ostream to print on$/;"	m	class:__anon59::WriteBitcodePass	file:
OS	CodeGen/GCMetadata.cpp	/^    raw_ostream &OS;$/;"	m	class:__anon160::Printer	file:
OS	CodeGen/MachineFunctionPrinterPass.cpp	/^  raw_ostream &OS;$/;"	m	struct:__anon96::MachineFunctionPrinterPass	file:
OS	CodeGen/MachineVerifier.cpp	/^    raw_ostream *OS;$/;"	m	struct:__anon139::MachineVerifier	file:
OS	DebugInfo/DWARFDebugLine.h	/^    raw_ostream &OS;$/;"	m	struct:llvm::DWARFDebugLine::DumpingState
OS	MC/MCAsmStreamer.cpp	/^  formatted_raw_ostream &OS;$/;"	m	class:__anon214::MCAsmStreamer	file:
OSABI	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  uint8_t OSABI;$/;"	m	class:__anon285::ELFARMAsmBackend	file:
OSABI	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^  uint8_t OSABI;$/;"	m	class:__anon456::ELFMBlazeAsmBackend	file:
OSABI	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^    uint8_t OSABI;$/;"	m	class:__anon321::ELFPPCAsmBackend	file:
OSABI	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  uint8_t OSABI;$/;"	m	class:__anon345::ELFX86AsmBackend	file:
OSH	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    OSH   = 3,$/;"	e	enum:llvm::ARM_MB::MemBOpt
OSHST	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    OSHST = 2,$/;"	e	enum:llvm::ARM_MB::MemBOpt
OSType	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  Triple::OSType OSType;$/;"	m	class:__anon429::MipsAsmBackend	file:
OUT	Support/regex2.h	156;"	d
O_BACK	Support/regex2.h	79;"	d
O_CH	Support/regex2.h	89;"	d
O_PLUS	Support/regex2.h	81;"	d
O_QUEST	Support/regex2.h	83;"	d
ObjAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uintptr_t ObjAddress;$/;"	m	class:llvm::SectionEntry
ObjCARCAPElim	Transforms/Scalar/ObjCARC.cpp	/^    ObjCARCAPElim() : ModulePass(ID) {$/;"	f	class:__anon502::ObjCARCAPElim
ObjCARCAPElim	Transforms/Scalar/ObjCARC.cpp	/^  class ObjCARCAPElim : public ModulePass {$/;"	c	namespace:__anon502	file:
ObjCARCAliasAnalysis	Transforms/Scalar/ObjCARC.cpp	/^    ObjCARCAliasAnalysis() : ImmutablePass(ID) {$/;"	f	class:__anon500::ObjCARCAliasAnalysis
ObjCARCAliasAnalysis	Transforms/Scalar/ObjCARC.cpp	/^  class ObjCARCAliasAnalysis : public ImmutablePass,$/;"	c	namespace:__anon500	file:
ObjCARCContract	Transforms/Scalar/ObjCARC.cpp	/^    ObjCARCContract() : FunctionPass(ID) {$/;"	f	class:__anon510::ObjCARCContract
ObjCARCContract	Transforms/Scalar/ObjCARC.cpp	/^  class ObjCARCContract : public FunctionPass {$/;"	c	namespace:__anon510	file:
ObjCARCExpand	Transforms/Scalar/ObjCARC.cpp	/^    ObjCARCExpand() : FunctionPass(ID) {$/;"	f	class:__anon501::ObjCARCExpand
ObjCARCExpand	Transforms/Scalar/ObjCARC.cpp	/^  class ObjCARCExpand : public FunctionPass {$/;"	c	namespace:__anon501	file:
ObjCARCOpt	Transforms/Scalar/ObjCARC.cpp	/^    ObjCARCOpt() : FunctionPass(ID) {$/;"	f	class:__anon508::ObjCARCOpt
ObjCARCOpt	Transforms/Scalar/ObjCARC.cpp	/^  class ObjCARCOpt : public FunctionPass {$/;"	c	namespace:__anon508	file:
ObjFile	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  object::ObjectFile *ObjFile;$/;"	m	class:llvm::ObjectImageCommon
ObjRelocationInfo	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^class ObjRelocationInfo {$/;"	c	namespace:llvm
ObjSectionToIDMap	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  typedef std::map<SectionRef, unsigned> ObjSectionToIDMap;$/;"	t	class:llvm::RuntimeDyldImpl
ObjSizeEval	Transforms/Instrumentation/BoundsChecking.cpp	/^    ObjectSizeOffsetEvaluator *ObjSizeEval;$/;"	m	struct:__anon493::BoundsChecking	file:
ObjectAttributeEmitter	Target/ARM/ARMAsmPrinter.cpp	/^    ObjectAttributeEmitter(MCObjectStreamer &Streamer_) :$/;"	f	class:__anon313::ObjectAttributeEmitter
ObjectAttributeEmitter	Target/ARM/ARMAsmPrinter.cpp	/^  class ObjectAttributeEmitter : public AttributeEmitter {$/;"	c	namespace:__anon313	file:
ObjectBufferMap	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^  RegisteredObjectBufferMap ObjectBufferMap;$/;"	m	class:__anon178::GDBJITRegistrar	file:
ObjectFile	Object/ObjectFile.cpp	/^ObjectFile::ObjectFile(unsigned int Type, MemoryBuffer *source, error_code &ec)$/;"	f	class:ObjectFile
ObjectImageCommon	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  ObjectImageCommon(ObjectBuffer *Input, object::ObjectFile *Obj)$/;"	f	class:llvm::ObjectImageCommon
ObjectImageCommon	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  ObjectImageCommon(ObjectBuffer* Input)$/;"	f	class:llvm::ObjectImageCommon
ObjectImageCommon	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^class ObjectImageCommon : public ObjectImage {$/;"	c	namespace:llvm
ObjectSizeOffsetEvaluator	Analysis/MemoryBuiltins.cpp	/^ObjectSizeOffsetEvaluator::ObjectSizeOffsetEvaluator(const DataLayout *TD,$/;"	f	class:ObjectSizeOffsetEvaluator
ObjectSizeOffsetVisitor	Analysis/MemoryBuiltins.cpp	/^ObjectSizeOffsetVisitor::ObjectSizeOffsetVisitor(const DataLayout *TD,$/;"	f	class:ObjectSizeOffsetVisitor
Objects	VMCore/LeakDetector.cpp	/^static ManagedStatic<LeakDetectorImpl<void> > Objects;$/;"	v	file:
ObjectsLock	VMCore/LeakDetector.cpp	/^static ManagedStatic<sys::SmartMutex<true> > ObjectsLock;$/;"	v	file:
Observe	CodeGen/AggressiveAntiDepBreaker.cpp	/^void AggressiveAntiDepBreaker::Observe(MachineInstr *MI, unsigned Count,$/;"	f	class:AggressiveAntiDepBreaker
Observe	CodeGen/CriticalAntiDepBreaker.cpp	/^void CriticalAntiDepBreaker::Observe(MachineInstr *MI, unsigned Count,$/;"	f	class:CriticalAntiDepBreaker
Observe	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::Observe(MachineInstr *MI, unsigned Count) {$/;"	f	class:SchedulePostRATDList
OcamlGC	CodeGen/OcamlGC.cpp	/^  class OcamlGC : public GCStrategy {$/;"	c	namespace:__anon103	file:
OcamlGC	CodeGen/OcamlGC.cpp	/^OcamlGC::OcamlGC() {$/;"	f	class:OcamlGC
OcamlGCMetadataPrinter	CodeGen/AsmPrinter/OcamlGCPrinter.cpp	/^  class OcamlGCMetadataPrinter : public GCMetadataPrinter {$/;"	c	namespace:__anon61	file:
OddDblSpc	Target/ARM/ARMExpandPseudoInsts.cpp	/^    OddDblSpc$/;"	e	enum:__anon312::NEONRegSpacing	file:
Off	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^      const MCExpr *Off;$/;"	m	struct:__anon446::MBlazeOperand::__anon447::__anon451	file:
Off	Target/Mips/AsmParser/MipsAsmParser.cpp	/^      const MCExpr *Off;$/;"	m	struct:__anon423::MipsOperand::__anon424::__anon428	file:
OffReg	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^      unsigned OffReg;$/;"	m	struct:__anon446::MBlazeOperand::__anon447::__anon451	file:
Offset	CodeGen/AsmPrinter/DIE.h	/^    unsigned Offset;$/;"	m	class:llvm::DIE
Offset	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  uint64_t Offset;$/;"	m	class:llvm::SDDbgValue
Offset	DebugInfo/DWARFCompileUnit.h	/^  uint32_t Offset;$/;"	m	class:llvm::DWARFCompileUnit
Offset	DebugInfo/DWARFDebugAbbrev.h	/^  uint32_t Offset;$/;"	m	class:llvm::DWARFAbbreviationDeclarationSet
Offset	DebugInfo/DWARFDebugArangeSet.h	/^  uint32_t Offset;$/;"	m	class:llvm::DWARFDebugArangeSet
Offset	DebugInfo/DWARFDebugAranges.h	/^    uint32_t Offset; \/\/ Offset of the compile unit or die$/;"	m	struct:llvm::DWARFDebugAranges::Range
Offset	DebugInfo/DWARFDebugInfoEntry.h	/^  uint32_t Offset;$/;"	m	class:llvm::DWARFDebugInfoEntryMinimal
Offset	DebugInfo/DWARFDebugRangeList.h	/^  uint32_t Offset;$/;"	m	class:llvm::DWARFDebugRangeList
Offset	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int        Offset;                 $/;"	m	struct:_LineNumberInfo
Offset	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uint64_t  Offset;$/;"	m	class:llvm::ObjRelocationInfo
Offset	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uintptr_t Offset;$/;"	m	class:llvm::RelocationEntry
Offset	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned Offset;$/;"	m	struct:__anon310::ARMConstantIslands::BasicBlockInfo	file:
Offset	Target/ARM/ARMFastISel.cpp	/^    int Offset;$/;"	m	struct:__anon307::Address	file:
Offset	Target/ARM/ARMLoadStoreOptimizer.cpp	/^      int Offset;$/;"	m	struct:__anon303::ARMLoadStoreOpt::MemOpQueueEntry	file:
Offset	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^    int64_t Offset;$/;"	m	struct:__anon430::RelEntry	file:
Offset	Transforms/Scalar/GVN.cpp	/^  unsigned Offset;$/;"	m	struct:__anon538::AvailableValueInBlock	file:
Offset	Transforms/Scalar/LoopStrengthReduce.cpp	/^  int64_t Offset;$/;"	m	struct:__anon516::LSRFixup	file:
Offset	Transforms/Scalar/SROA.cpp	/^    int64_t Offset;$/;"	m	struct:AllocaPartitioning::BuilderBase::OffsetUse	file:
Offset	Transforms/Scalar/SROA.cpp	/^  int64_t Offset;$/;"	m	class:AllocaPartitioning::BuilderBase	file:
OffsetComparator	DebugInfo/DWARFContext.cpp	/^  struct OffsetComparator {$/;"	s	namespace:__anon172	file:
OffsetCompare	Target/ARM/ARMLoadStoreOptimizer.cpp	/^  struct OffsetCompare {$/;"	s	namespace:__anon305	file:
OffsetFitsS11	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static bool OffsetFitsS11(EVT MemType, int64_t Offset) {$/;"	f	file:
OffsetFromBase	CodeGen/SelectionDAG/DAGCombiner.cpp	/^  int64_t OffsetFromBase;$/;"	m	struct:MemOpLink	file:
OffsetImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      const MCConstantExpr *OffsetImm;  \/\/ Offset immediate value$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon275	file:
OffsetRegNum	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned OffsetRegNum;    \/\/ Offset register num, when OffsetImm == NULL$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon275	file:
OffsetUse	Transforms/Scalar/SROA.cpp	/^  struct OffsetUse {$/;"	s	class:AllocaPartitioning::BuilderBase	file:
Offsets	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallVector<int64_t, 8> Offsets;$/;"	m	class:__anon517::LSRUse	file:
OldAI	Transforms/Scalar/SROA.cpp	/^  AllocaInst &OldAI, &NewAI;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
OldFunc	Transforms/Utils/CloneFunction.cpp	/^    const Function *OldFunc;$/;"	m	struct:__anon465::PruningFunctionCloner	file:
OldIdx	CodeGen/LiveIntervalAnalysis.cpp	/^  SlotIndex OldIdx;$/;"	m	class:LiveIntervals::HMEditor	file:
OldInduction	Transforms/Vectorize/LoopVectorize.cpp	/^  PHINode *OldInduction;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
OldPtr	Transforms/Scalar/SROA.cpp	/^  Instruction *OldPtr;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
OldUse	Transforms/Scalar/SROA.cpp	/^  Use *OldUse;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
OnTheFlyManagers	VMCore/PassManager.cpp	/^  std::map<Pass *, FunctionPassManagerImpl *> OnTheFlyManagers;$/;"	m	class:llvm::MPPassManager	file:
OneArgFP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    OneArgFP   = 2 << FPTypeShift,$/;"	e	enum:llvm::X86II::__anon350
OneArgFPRW	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    OneArgFPRW = 3 << FPTypeShift,$/;"	e	enum:llvm::X86II::__anon350
OnlyBlock	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    BasicBlock *OnlyBlock;$/;"	m	struct:__anon469::AllocaInfo	file:
OnlyDebugInfo	Transforms/IPO/StripSymbols.cpp	/^    bool OnlyDebugInfo;$/;"	m	class:__anon587::StripSymbols	file:
OnlyStore	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    StoreInst  *OnlyStore;$/;"	m	struct:__anon469::AllocaInfo	file:
OnlyUsedBy	Transforms/IPO/StripSymbols.cpp	/^static bool OnlyUsedBy(Value *V, Value *Usr) {$/;"	f	file:
OnlyUsedInOneBlock	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    bool OnlyUsedInOneBlock;$/;"	m	struct:__anon469::AllocaInfo	file:
Op	CodeGen/MachineTraceMetrics.cpp	/^  unsigned Op;$/;"	m	struct:__anon134::LiveRegUnit	file:
Op	Transforms/Scalar/Reassociate.cpp	/^    Value *Op;$/;"	m	struct:__anon547::ValueEntry	file:
Op0Mask	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Op0Mask     = 0x1F << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
Op0Shift	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Op0Shift    = 8,$/;"	e	enum:llvm::X86II::__anon350
OpIndex	MC/MCDisassembler/EDOperand.h	/^  unsigned int OpIndex;$/;"	m	struct:llvm::EDOperand
OpSize	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    OpSize      = 1 << 6,$/;"	e	enum:llvm::X86II::__anon350
OpSplitter	Transforms/Scalar/SROA.cpp	/^    OpSplitter(Instruction *InsertionPoint, Value *Ptr)$/;"	f	class:__anon562::AggLoadStoreRewriter::OpSplitter
OpSplitter	Transforms/Scalar/SROA.cpp	/^  class OpSplitter {$/;"	c	class:__anon562::AggLoadStoreRewriter	file:
Opc	Target/Mips/MipsAnalyzeImmediate.h	/^      unsigned Opc, ImmOpnd;$/;"	m	struct:llvm::MipsAnalyzeImmediate::Inst
Opcode	MC/MCParser/AsmParser.cpp	/^  unsigned Opcode;$/;"	m	class:__anon211::AsmParser	file:
OpcodeBase	DebugInfo/DWARFDebugLine.h	/^    uint8_t OpcodeBase;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
OpcodeDecision	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^struct OpcodeDecision {$/;"	s
OpcodeShift	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    OpcodeShift   = SSEDomainShift + 2,$/;"	e	enum:llvm::X86II::__anon350
OpcodeTable	Target/X86/X86FloatingPoint.cpp	/^static const TableEntry OpcodeTable[] = {$/;"	v	file:
OpcodeType	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^} OpcodeType;$/;"	t	typeref:enum:__anon364
OpenAndLoad	Archive/ArchiveReader.cpp	/^Archive::OpenAndLoad(const sys::Path& file, LLVMContext& C, $/;"	f	class:Archive
OpenAndLoadSymbols	Archive/ArchiveReader.cpp	/^Archive* Archive::OpenAndLoadSymbols(const sys::Path& file,$/;"	f	class:Archive
OpenFile	Support/DataStream.cpp	/^  error_code OpenFile(const std::string &Filename) {$/;"	f	class:__anon234::DataFileStreamer
OpenIdx	CodeGen/SplitKit.h	/^  unsigned OpenIdx;$/;"	m	class:llvm::SplitEditor
OpenedHandles	Support/DynamicLibrary.cpp	/^static DenseSet<void *> *OpenedHandles = 0;$/;"	v	file:
Operand	CodeGen/AggressiveAntiDepBreaker.h	/^      MachineOperand *Operand;$/;"	m	struct:llvm::AggressiveAntiDepState::__anon117
OperandChangedState	Transforms/Scalar/SCCP.cpp	/^  void OperandChangedState(Instruction *I) {$/;"	f	class:__anon531::SCCPSolver	file:
OperandEncoding	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  } OperandEncoding;$/;"	t	typeref:enum:__anon366
OperandFlags	MC/MCDisassembler/EDInfo.h	/^enum OperandFlags {$/;"	g
OperandID	MC/MCDisassembler/EDToken.h	/^  int OperandID;$/;"	m	struct:llvm::EDToken
OperandOrder	MC/MCDisassembler/EDInst.h	/^  const signed char* OperandOrder;$/;"	m	struct:llvm::EDInst
OperandSpecifier	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^struct OperandSpecifier {$/;"	s
OperandTraits	Bitcode/Reader/BitcodeReader.cpp	/^struct OperandTraits<ConstantPlaceHolder> :$/;"	s	namespace:llvm	file:
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<BinaryConstantExpr> :$/;"	s	namespace:llvm
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<CompareConstantExpr> :$/;"	s	namespace:llvm
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<ExtractElementConstantExpr> :$/;"	s	namespace:llvm
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<ExtractValueConstantExpr> :$/;"	s	namespace:llvm
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<GetElementPtrConstantExpr> :$/;"	s	namespace:llvm
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<InsertElementConstantExpr> :$/;"	s	namespace:llvm
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<InsertValueConstantExpr> :$/;"	s	namespace:llvm
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<SelectConstantExpr> :$/;"	s	namespace:llvm
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<ShuffleVectorConstantExpr> :$/;"	s	namespace:llvm
OperandTraits	VMCore/ConstantsContext.h	/^struct OperandTraits<UnaryConstantExpr> :$/;"	s	namespace:llvm
OperandType	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^} OperandType;$/;"	t	typeref:enum:__anon367
OperandTypes	MC/MCDisassembler/EDInfo.h	/^enum OperandTypes {$/;"	g
OperandValToReplace	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Value *OperandValToReplace;$/;"	m	struct:__anon516::LSRFixup	file:
Operands	MC/MCDisassembler/EDInst.h	/^  opvec_t Operands;$/;"	m	struct:llvm::EDInst
Operands	VMCore/ConstantsContext.h	/^  typedef ArrayRef<Constant*> Operands;$/;"	t	class:llvm::ConstantAggrUniqueMap
OperationEncodingString	Support/Dwarf.cpp	/^const char *llvm::dwarf::OperationEncodingString(unsigned Encoding) {$/;"	f	class:llvm::dwarf
OptAndOp	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Instruction *InstCombiner::OptAndOp(Instruction *Op,$/;"	f	class:InstCombiner
OptChkCall	Transforms/Scalar/SimplifyLibCalls.cpp	/^  bool OptChkCall;  \/\/ True if it's optimizing a __stpcpy_chk libcall.$/;"	m	struct:__anon545::StpCpyOpt	file:
OptForSize	Target/X86/X86ISelDAGToDAG.cpp	/^    bool OptForSize;$/;"	m	class:__anon373::X86DAGToDAGISel	file:
OptLevel	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    CodeGenOpt::Level OptLevel;$/;"	m	class:__anon68::DAGCombiner	file:
OptLevel	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  CodeGenOpt::Level OptLevel;$/;"	m	class:llvm::SelectionDAGBuilder
OptLevel	CodeGen/TwoAddressInstructionPass.cpp	/^    CodeGenOpt::Level OptLevel;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
OptNameCompare	Support/CommandLine.cpp	/^static int OptNameCompare(const void *LHS, const void *RHS) {$/;"	f	file:
OptSize	Transforms/Scalar/CodeGenPrepare.cpp	/^    bool OptSize;$/;"	m	class:__anon525::CodeGenPrepare	file:
OptSizeThreshold	Transforms/IPO/Inliner.cpp	/^const int OptSizeThreshold = 75;$/;"	v
OptSizeUnrollThreshold	Transforms/Scalar/LoopUnrollPass.cpp	/^    static const unsigned OptSizeUnrollThreshold = 50;$/;"	m	class:__anon571::LoopUnroll	file:
OptimalEdgeProfiler	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	/^    OptimalEdgeProfiler() : ModulePass(ID) {$/;"	f	class:__anon487::OptimalEdgeProfiler
OptimalEdgeProfiler	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	/^  class OptimalEdgeProfiler : public ModulePass {$/;"	c	namespace:__anon487	file:
Optimizations	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StringMap<LibCallOptimization*> Optimizations;$/;"	m	class:__anon546::SimplifyLibCalls	file:
Optimizations	Transforms/Utils/SimplifyLibCalls.cpp	/^  StringMap<LibCallOptimization*> Optimizations;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
OptimizeAdd	Transforms/Scalar/Reassociate.cpp	/^Value *Reassociate::OptimizeAdd(Instruction *I,$/;"	f	class:Reassociate
OptimizeAndOrXor	Transforms/Scalar/Reassociate.cpp	/^static Value *OptimizeAndOrXor(unsigned Opcode,$/;"	f	file:
OptimizeAutoreleaseRVCall	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::OptimizeAutoreleaseRVCall(Function &F, Instruction *AutoreleaseRV) {$/;"	f	class:ObjCARCOpt
OptimizeAwayTrappingUsesOfLoads	Transforms/IPO/GlobalOpt.cpp	/^static bool OptimizeAwayTrappingUsesOfLoads(GlobalVariable *GV, Constant *LV,$/;"	f	file:
OptimizeAwayTrappingUsesOfValue	Transforms/IPO/GlobalOpt.cpp	/^static bool OptimizeAwayTrappingUsesOfValue(Value *V, Constant *NewV) {$/;"	f	file:
OptimizeBB	CodeGen/OptimizePHIs.cpp	/^bool OptimizePHIs::OptimizeBB(MachineBasicBlock &MBB) {$/;"	f	class:OptimizePHIs
OptimizeBB	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCAPElim::OptimizeBB(BasicBlock *BB) {$/;"	f	class:ObjCARCAPElim
OptimizeBlock	CodeGen/BranchFolding.cpp	/^bool BranchFolder::OptimizeBlock(MachineBasicBlock *MBB) {$/;"	f	class:BranchFolder
OptimizeBlock	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::OptimizeBlock(BasicBlock &BB) {$/;"	f	class:CodeGenPrepare
OptimizeBranches	CodeGen/BranchFolding.cpp	/^bool BranchFolder::OptimizeBranches(MachineFunction &MF) {$/;"	f	class:BranchFolder
OptimizeCall	Transforms/Scalar/SimplifyLibCalls.cpp	/^  Value *OptimizeCall(CallInst *CI, const DataLayout *TD,$/;"	f	class:__anon544::LibCallOptimization
OptimizeCallInst	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::OptimizeCallInst(CallInst *CI) {$/;"	f	class:CodeGenPrepare
OptimizeCmpExpression	Transforms/Scalar/CodeGenPrepare.cpp	/^static bool OptimizeCmpExpression(CmpInst *CI) {$/;"	f	file:
OptimizeConditionalInDecrement	Target/X86/X86ISelLowering.cpp	/^static SDValue OptimizeConditionalInDecrement(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
OptimizeConstants	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::OptimizeConstants(unsigned CstStart, unsigned CstEnd) {$/;"	f	class:ValueEnumerator
OptimizeEmptyGlobalCXXDtors	Transforms/IPO/GlobalOpt.cpp	/^bool GlobalOpt::OptimizeEmptyGlobalCXXDtors(Function *CXAAtExitFn) {$/;"	f	class:GlobalOpt
OptimizeExpression	Transforms/Scalar/Reassociate.cpp	/^Value *Reassociate::OptimizeExpression(BinaryOperator *I,$/;"	f	class:Reassociate
OptimizeExtUses	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::OptimizeExtUses(Instruction *I) {$/;"	f	class:CodeGenPrepare
OptimizeFixedFormatString	Transforms/Scalar/SimplifyLibCalls.cpp	/^  Value *OptimizeFixedFormatString(Function *Callee, CallInst *CI,$/;"	f	struct:__anon545::FPrintFOpt
OptimizeFixedFormatString	Transforms/Scalar/SimplifyLibCalls.cpp	/^  Value *OptimizeFixedFormatString(Function *Callee, CallInst *CI,$/;"	f	struct:__anon545::PrintFOpt
OptimizeFixedFormatString	Transforms/Scalar/SimplifyLibCalls.cpp	/^  Value *OptimizeFixedFormatString(Function *Callee, CallInst *CI,$/;"	f	struct:__anon545::SPrintFOpt
OptimizeFloatStore	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::OptimizeFloatStore(StoreSDNode* ST) {$/;"	f	class:SelectionDAGLegalize
OptimizeForSize	Transforms/Scalar/LoopUnswitch.cpp	/^    bool OptimizeForSize;$/;"	m	class:__anon494::LoopUnswitch	file:
OptimizeFunction	CodeGen/BranchFolding.cpp	/^bool BranchFolder::OptimizeFunction(MachineFunction &MF,$/;"	f	class:BranchFolder
OptimizeFunctions	Transforms/IPO/GlobalOpt.cpp	/^bool GlobalOpt::OptimizeFunctions(Module &M) {$/;"	f	class:GlobalOpt
OptimizeGlobalAddressOfMalloc	Transforms/IPO/GlobalOpt.cpp	/^static GlobalVariable *OptimizeGlobalAddressOfMalloc(GlobalVariable *GV,$/;"	f	file:
OptimizeGlobalAliases	Transforms/IPO/GlobalOpt.cpp	/^bool GlobalOpt::OptimizeGlobalAliases(Module &M) {$/;"	f	class:GlobalOpt
OptimizeGlobalCtorsList	Transforms/IPO/GlobalOpt.cpp	/^bool GlobalOpt::OptimizeGlobalCtorsList(GlobalVariable *&GCL) {$/;"	f	class:GlobalOpt
OptimizeGlobalVars	Transforms/IPO/GlobalOpt.cpp	/^bool GlobalOpt::OptimizeGlobalVars(Module &M) {$/;"	f	class:GlobalOpt
OptimizeImpDefsBlock	CodeGen/BranchFolding.cpp	/^bool BranchFolder::OptimizeImpDefsBlock(MachineBasicBlock *MBB) {$/;"	f	class:BranchFolder
OptimizeIndividualCalls	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCOpt::OptimizeIndividualCalls(Function &F) {$/;"	f	class:ObjCARCOpt
OptimizeInlineAsmInst	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::OptimizeInlineAsmInst(CallInst *CS) {$/;"	f	class:CodeGenPrepare
OptimizeInst	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::OptimizeInst(Instruction *I) {$/;"	f	class:CodeGenPrepare
OptimizeInst	Transforms/Scalar/Reassociate.cpp	/^void Reassociate::OptimizeInst(Instruction *I) {$/;"	f	class:Reassociate
OptimizeIntToFloatBitCast	Transforms/InstCombine/InstCombineCasts.cpp	/^static Instruction *OptimizeIntToFloatBitCast(BitCastInst &CI,InstCombiner &IC){$/;"	f	file:
OptimizeIntegerToVectorInsertions	Transforms/InstCombine/InstCombineCasts.cpp	/^static Value *OptimizeIntegerToVectorInsertions(BitCastInst &CI,$/;"	f	file:
OptimizeIntraLoopEdges	CodeGen/CodePlacementOpt.cpp	/^bool CodePlacementOpt::OptimizeIntraLoopEdges(MachineFunction &MF) {$/;"	f	class:CodePlacementOpt
OptimizeIntraLoopEdgesInLoopNest	CodeGen/CodePlacementOpt.cpp	/^bool CodePlacementOpt::OptimizeIntraLoopEdgesInLoopNest(MachineFunction &MF,$/;"	f	class:CodePlacementOpt
OptimizeLoopTermCond	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::OptimizeLoopTermCond() {$/;"	f	class:LSRInstance
OptimizeMax	Transforms/Scalar/LoopStrengthReduce.cpp	/^ICmpInst *LSRInstance::OptimizeMax(ICmpInst *Cond, IVStrideUse* &CondUse) {$/;"	f	class:LSRInstance
OptimizeMemoryInst	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::OptimizeMemoryInst(Instruction *MemoryInst, Value *Addr,$/;"	f	class:CodeGenPrepare
OptimizeMul	Transforms/Scalar/Reassociate.cpp	/^Value *Reassociate::OptimizeMul(BinaryOperator *I,$/;"	f	class:Reassociate
OptimizeNoopCopyExpression	Transforms/Scalar/CodeGenPrepare.cpp	/^static bool OptimizeNoopCopyExpression(CastInst *CI, const TargetLowering &TLI){$/;"	f	file:
OptimizeOnceStoredGlobal	Transforms/IPO/GlobalOpt.cpp	/^static bool OptimizeOnceStoredGlobal(GlobalVariable *GV, Value *StoredOnceVal,$/;"	f	file:
OptimizePHIs	CodeGen/OptimizePHIs.cpp	/^    OptimizePHIs() : MachineFunctionPass(ID) {$/;"	f	class:__anon146::OptimizePHIs
OptimizePHIs	CodeGen/OptimizePHIs.cpp	/^  class OptimizePHIs : public MachineFunctionPass {$/;"	c	namespace:__anon146	file:
OptimizePHIsID	CodeGen/OptimizePHIs.cpp	/^char &llvm::OptimizePHIsID = OptimizePHIs::ID;$/;"	m	class:llvm	file:
OptimizePointerDifference	Transforms/InstCombine/InstCombineAddSub.cpp	/^Value *InstCombiner::OptimizePointerDifference(Value *LHS, Value *RHS,$/;"	f	class:InstCombiner
OptimizeRetainCall	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::OptimizeRetainCall(Function &F, Instruction *Retain) {$/;"	f	class:ObjCARCOpt
OptimizeRetainRVCall	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::OptimizeRetainRVCall(Function &F, Instruction *RetainRV) {$/;"	f	class:ObjCARCOpt
OptimizeReturns	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCOpt::OptimizeReturns(Function &F) {$/;"	f	class:ObjCARCOpt
OptimizeSelectInst	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::OptimizeSelectInst(SelectInst *SI) {$/;"	f	class:CodeGenPrepare
OptimizeSequences	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCOpt::OptimizeSequences(Function &F) {$/;"	f	class:ObjCARCOpt
OptimizeShadowIV	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::OptimizeShadowIV() {$/;"	f	class:LSRInstance
OptimizeVFPBrcond	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::OptimizeVFPBrcond(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
OptimizeVectorResize	Transforms/InstCombine/InstCombineCasts.cpp	/^static Instruction *OptimizeVectorResize(Value *InVal, VectorType *DestTy,$/;"	f	file:
OptimizeWeakCalls	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCOpt::OptimizeWeakCalls(Function &F) {$/;"	f	class:ObjCARCOpt
OptionListChanged	Support/CommandLine.cpp	/^static bool OptionListChanged = false;$/;"	v	file:
Options	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  MipsAssemblerOptions Options;$/;"	m	class:__anon422::MipsAsmParser	file:
OrSlowCase	Support/APInt.cpp	/^APInt APInt::OrSlowCase(const APInt& RHS) const {$/;"	f	class:APInt
OrdTy	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  IntegerType *OrdTy;$/;"	m	struct:__anon486::ThreadSanitizer	file:
Order	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  unsigned Order;$/;"	m	class:llvm::SDDbgValue
OrderMap	CodeGen/SelectionDAG/SDNodeOrdering.h	/^  DenseMap<const SDNode*, unsigned> OrderMap;$/;"	m	class:llvm::SDNodeOrdering
OrderSorter	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^  struct OrderSorter {$/;"	s	namespace:__anon88	file:
Ordering	Transforms/IPO/GlobalOpt.cpp	/^  AtomicOrdering Ordering;$/;"	m	struct:__anon590::GlobalStatus	file:
OrigAlignments	CodeGen/StackSlotColoring.cpp	/^    SmallVector<unsigned, 16> OrigAlignments;$/;"	m	class:__anon94::StackSlotColoring	file:
OrigLoop	Transforms/Vectorize/LoopVectorize.cpp	/^  Loop *OrigLoop;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
OrigPhi	Transforms/Scalar/IndVarSimplify.cpp	/^  PHINode *OrigPhi;$/;"	m	class:__anon497::WidenIV	file:
OrigReg	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const SCEV *OrigReg;$/;"	m	struct:__anon519::WorkItem	file:
OrigSizes	CodeGen/StackSlotColoring.cpp	/^    SmallVector<unsigned, 16> OrigSizes;$/;"	m	class:__anon94::StackSlotColoring	file:
Original	CodeGen/InlineSpiller.cpp	/^  unsigned Original;$/;"	m	class:__anon155::InlineSpiller	file:
Other	MC/WinCOFFObjectWriter.cpp	/^  COFFSymbol      *Other;$/;"	m	class:__anon222::COFFSymbol	file:
OtherModImm	Target/ARM/ARMISelLowering.h	/^    OtherModImm$/;"	e	enum:llvm::NEONModImmType
OtherSucc	Target/ARM/ARMISelLowering.cpp	/^MachineBasicBlock *OtherSucc(MachineBasicBlock *MBB, MachineBasicBlock *Succ) {$/;"	f	file:
OtherVNI	CodeGen/RegisterCoalescer.cpp	/^    VNInfo *OtherVNI;$/;"	m	struct:__anon115::JoinVals::Val	file:
Others	Target/ARM/ARMSubtarget.h	/^    Others, CortexA8, CortexA9, CortexA15, Swift$/;"	e	enum:llvm::ARMSubtarget::ARMProcFamilyEnum
Others	Target/X86/X86Subtarget.h	/^    Others, IntelAtom$/;"	e	enum:llvm::X86Subtarget::X86ProcFamilyEnum
Out	Analysis/DbgInfoPrinter.cpp	/^    raw_ostream &Out;$/;"	m	class:__anon34::PrintDbgInfo	file:
Out	Analysis/IPA/CallGraphSCCPass.cpp	/^    raw_ostream &Out;       \/\/ raw_ostream to print on.$/;"	m	class:__anon4::PrintCallGraphPass	file:
Out	Analysis/LoopPass.cpp	/^  raw_ostream &Out;       \/\/ raw_ostream to print on.$/;"	m	class:__anon45::PrintLoopPass	file:
Out	Analysis/RegionPass.cpp	/^  raw_ostream &Out;       \/\/ raw_ostream to print on.$/;"	m	class:__anon8::PrintRegionPass	file:
Out	MC/MCParser/AsmParser.cpp	/^  MCStreamer &Out;$/;"	m	class:__anon211::AsmParser	file:
Out	Target/CppBackend/CPPBackend.cpp	/^    formatted_raw_ostream &Out;$/;"	m	class:__anon412::CppWriter	file:
Out	VMCore/AsmWriter.cpp	/^  formatted_raw_ostream &Out;$/;"	m	class:__anon613::AssemblyWriter	file:
Out	VMCore/PrintModulePass.cpp	/^    raw_ostream *Out;       \/\/ raw_ostream to print on$/;"	m	class:__anon619::PrintFunctionPass	file:
Out	VMCore/PrintModulePass.cpp	/^    raw_ostream *Out;       \/\/ raw_ostream to print on$/;"	m	class:__anon619::PrintModulePass	file:
OutEdges	Transforms/Instrumentation/GCOVProfiling.cpp	/^    SmallVector<GCOVBlock *, 4> OutEdges;$/;"	m	class:__anon490::GCOVBlock	file:
OutFileName	CodeGen/MachineVerifier.cpp	/^    const char *const OutFileName;$/;"	m	struct:__anon139::MachineVerifier	file:
OuterResumeDest	Transforms/Utils/InlineFunction.cpp	/^    BasicBlock *OuterResumeDest; \/\/\/< Destination of the invoke's unwind.$/;"	m	class:__anon468::InvokeInliningInfo	file:
OverDefinedCache	Analysis/LazyValueInfo.cpp	/^    DenseSet<OverDefinedPairTy> OverDefinedCache;$/;"	m	class:__anon20::LazyValueInfoCache	file:
OverDefinedCacheUpdater	Analysis/LazyValueInfo.cpp	/^      OverDefinedCacheUpdater(Value *V, BasicBlock *B, LVILatticeVal &LV,$/;"	f	struct:__anon20::LazyValueInfoCache::OverDefinedCacheUpdater
OverDefinedCacheUpdater	Analysis/LazyValueInfo.cpp	/^    struct OverDefinedCacheUpdater {$/;"	s	class:__anon20::LazyValueInfoCache	file:
OverDefinedPairTy	Analysis/LazyValueInfo.cpp	/^    typedef std::pair<AssertingVH<BasicBlock>, Value*> OverDefinedPairTy;$/;"	t	class:__anon20::LazyValueInfoCache	file:
OverdefinedInstWorkList	Transforms/Scalar/SCCP.cpp	/^  SmallVector<Value*, 64> OverdefinedInstWorkList;$/;"	m	class:__anon531::SCCPSolver	file:
OverlapWithAssignments	CodeGen/StackSlotColoring.cpp	/^StackSlotColoring::OverlapWithAssignments(LiveInterval *li, int Color) const {$/;"	f	class:StackSlotColoring
OverrideVersionPrinter	Support/CommandLine.cpp	/^static void (*OverrideVersionPrinter)() = 0;$/;"	v	file:
OverwriteComplete	Transforms/Scalar/DeadStoreElimination.cpp	/^    OverwriteComplete,$/;"	e	enum:__anon553::OverwriteResult	file:
OverwriteEnd	Transforms/Scalar/DeadStoreElimination.cpp	/^    OverwriteEnd,$/;"	e	enum:__anon553::OverwriteResult	file:
OverwriteResult	Transforms/Scalar/DeadStoreElimination.cpp	/^  enum OverwriteResult$/;"	g	namespace:__anon553	file:
OverwriteUnknown	Transforms/Scalar/DeadStoreElimination.cpp	/^    OverwriteUnknown$/;"	e	enum:__anon553::OverwriteResult	file:
OwnedBegin	CodeGen/AllocationOrder.h	/^  bool OwnedBegin;$/;"	m	class:llvm::AllocationOrder
OwnedModules	VMCore/LLVMContextImpl.h	/^  SmallPtrSet<Module*, 4> OwnedModules;$/;"	m	class:llvm::LLVMContextImpl
P	AsmParser/LLParser.h	/^      LLParser &P;$/;"	m	class:llvm::LLParser::PerFunctionState
P	Transforms/Scalar/SROA.cpp	/^  AllocaPartitioning &P;$/;"	m	class:AllocaPartitioning::BuilderBase	file:
P	Transforms/Scalar/SROA.cpp	/^  AllocaPartitioning &P;$/;"	m	class:__anon560::PHIOrSelectSpeculator	file:
P	Transforms/Scalar/SROA.cpp	/^  AllocaPartitioning &P;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
PA	Transforms/Scalar/ObjCARC.cpp	/^    ProvenanceAnalysis PA;$/;"	m	class:__anon508::ObjCARCOpt	file:
PA	Transforms/Scalar/ObjCARC.cpp	/^    ProvenanceAnalysis PA;$/;"	m	class:__anon510::ObjCARCContract	file:
PALIGN	Target/X86/X86ISelLowering.h	/^      PALIGN,$/;"	e	enum:llvm::X86ISD::NodeType
PARALLEL_DIRS	Bitcode/Makefile	/^PARALLEL_DIRS = Reader Writer$/;"	m
PARALLEL_DIRS	CodeGen/Makefile	/^PARALLEL_DIRS = SelectionDAG AsmPrinter$/;"	m
PARALLEL_DIRS	ExecutionEngine/Makefile	/^PARALLEL_DIRS = Interpreter JIT MCJIT RuntimeDyld$/;"	m
PARALLEL_DIRS	MC/Makefile	/^PARALLEL_DIRS := MCParser MCDisassembler$/;"	m
PARALLEL_DIRS	Makefile	/^PARALLEL_DIRS := VMCore AsmParser Bitcode Archive Analysis Transforms CodeGen \\$/;"	m
PARALLEL_DIRS	Target/Makefile	/^PARALLEL_DIRS := $(TARGETS_TO_BUILD)$/;"	m
PARALLEL_DIRS	Transforms/Makefile	/^  PARALLEL_DIRS := $(filter-out Hello, $(PARALLEL_DIRS))$/;"	m
PARALLEL_DIRS	Transforms/Makefile	/^PARALLEL_DIRS = Utils Instrumentation Scalar InstCombine IPO Vectorize Hello$/;"	m
PARAM	Target/NVPTX/NVPTX.h	/^  PARAM = 4,$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::AddressSpace
PASS	CodeGen/MachineVerifier.cpp	/^    Pass *const PASS;$/;"	m	struct:__anon139::MachineVerifier	file:
PCAdjust	Target/ARM/ARMConstantPoolValue.h	/^  unsigned char PCAdjust;  \/\/ Extra adjustment if constantpool is pc-relative.$/;"	m	class:llvm::ARMConstantPoolValue
PCLabelMap	Target/ARM/ARMJITInfo.h	/^    DenseMap<unsigned, intptr_t> PCLabelMap;$/;"	m	class:llvm::ARMJITInfo
PCMPEQ	Target/X86/X86ISelLowering.h	/^      PCMPEQ, PCMPGT,$/;"	e	enum:llvm::X86ISD::NodeType
PCMPESTRI	Target/X86/X86ISelLowering.h	/^      PCMPESTRI,$/;"	e	enum:llvm::X86ISD::NodeType
PCMPGT	Target/X86/X86ISelLowering.h	/^      PCMPEQ, PCMPGT,$/;"	e	enum:llvm::X86ISD::NodeType
PCMPISTRI	Target/X86/X86ISelLowering.h	/^      PCMPISTRI,$/;"	e	enum:llvm::X86ISD::NodeType
PCRelAddr	Target/CellSPU/SPUISelLowering.h	/^      PCRelAddr,                \/\/\/< Program counter relative address$/;"	e	enum:llvm::SPUISD::NodeType
PCRelativeWrapper	Target/XCore/XCoreISelLowering.h	/^      PCRelativeWrapper,$/;"	e	enum:llvm::XCoreISD::NodeType
PCS_config	Target/ARM/ARMBuildAttrs.h	/^    PCS_config                = 13,$/;"	e	enum:ARMBuildAttrs::AttrType
PEEK	Support/regcomp.c	114;"	d	file:
PEEK2	Support/regcomp.c	115;"	d	file:
PEI	CodeGen/PrologEpilogInserter.h	/^    PEI() : MachineFunctionPass(ID) {$/;"	f	class:llvm::PEI
PEI	CodeGen/PrologEpilogInserter.h	/^  class PEI : public MachineFunctionPass {$/;"	c	namespace:llvm
PEXTRB	Target/X86/X86ISelLowering.h	/^      PEXTRB,$/;"	e	enum:llvm::X86ISD::NodeType
PEXTRW	Target/X86/X86ISelLowering.h	/^      PEXTRW,$/;"	e	enum:llvm::X86ISD::NodeType
PFI	Transforms/Scalar/CodeGenPrepare.cpp	/^    ProfileInfo *PFI;$/;"	m	class:__anon525::CodeGenPrepare	file:
PHI	CodeGen/EarlyIfConversion.cpp	/^    MachineInstr *PHI;$/;"	m	struct:__anon91::SSAIfConv::PHIInfo	file:
PHI	CodeGen/MachineSSAUpdater.cpp	/^    MachineInstr *PHI;$/;"	m	class:llvm::SSAUpdaterTraits::PHI_iterator	file:
PHI	Transforms/Utils/SSAUpdater.cpp	/^    PHINode *PHI;$/;"	m	class:llvm::SSAUpdaterTraits::PHI_iterator	file:
PHIElimination	CodeGen/PHIElimination.cpp	/^    PHIElimination() : MachineFunctionPass(ID) {$/;"	f	class:__anon164::PHIElimination
PHIElimination	CodeGen/PHIElimination.cpp	/^  class PHIElimination : public MachineFunctionPass {$/;"	c	namespace:__anon164	file:
PHIEliminationID	CodeGen/PHIElimination.cpp	/^char& llvm::PHIEliminationID = PHIElimination::ID;$/;"	m	class:llvm	file:
PHIId	Transforms/InstCombine/InstCombinePHI.cpp	/^  unsigned PHIId;     \/\/ The ID # of the PHI (something determinstic to sort on)$/;"	m	struct:__anon603::PHIUsageRecord	file:
PHIInfo	CodeGen/EarlyIfConversion.cpp	/^    PHIInfo(MachineInstr *phi)$/;"	f	struct:__anon91::SSAIfConv::PHIInfo
PHIInfo	CodeGen/EarlyIfConversion.cpp	/^  struct PHIInfo {$/;"	s	class:__anon91::SSAIfConv	file:
PHINode	VMCore/Instructions.cpp	/^PHINode::PHINode(const PHINode &PN)$/;"	f	class:PHINode
PHIOrSelectOpMap	Transforms/Scalar/SROA.cpp	/^  SmallDenseMap<Use *, std::pair<unsigned, unsigned>, 4> PHIOrSelectOpMap;$/;"	m	class:__anon557::AllocaPartitioning	file:
PHIOrSelectSizes	Transforms/Scalar/SROA.cpp	/^  SmallDenseMap<Instruction *, std::pair<uint64_t, bool> > PHIOrSelectSizes;$/;"	m	class:__anon557::AllocaPartitioning	file:
PHIOrSelectSpeculator	Transforms/Scalar/SROA.cpp	/^  PHIOrSelectSpeculator(const DataLayout &TD, AllocaPartitioning &P, SROA &Pass)$/;"	f	class:__anon560::PHIOrSelectSpeculator
PHIOrSelectSpeculator	Transforms/Scalar/SROA.cpp	/^class PHIOrSelectSpeculator : public InstVisitor<PHIOrSelectSpeculator> {$/;"	c	namespace:__anon560	file:
PHISrcDefs	CodeGen/StrongPHIElimination.cpp	/^    DenseMap<MachineBasicBlock*, std::vector<MachineInstr*> > PHISrcDefs;$/;"	m	class:__anon154::StrongPHIElimination	file:
PHITranslateSubExpr	Analysis/PHITransAddr.cpp	/^Value *PHITransAddr::PHITranslateSubExpr(Value *V, BasicBlock *CurBB,$/;"	f	class:PHITransAddr
PHITranslateValue	Analysis/PHITransAddr.cpp	/^bool PHITransAddr::PHITranslateValue(BasicBlock *CurBB, BasicBlock *PredBB,$/;"	f	class:PHITransAddr
PHITranslateWithInsertion	Analysis/PHITransAddr.cpp	/^PHITranslateWithInsertion(BasicBlock *CurBB, BasicBlock *PredBB,$/;"	f	class:PHITransAddr
PHIUsageRecord	Transforms/InstCombine/InstCombinePHI.cpp	/^  PHIUsageRecord(unsigned pn, unsigned Sh, Instruction *User)$/;"	f	struct:__anon603::PHIUsageRecord
PHIUsageRecord	Transforms/InstCombine/InstCombinePHI.cpp	/^struct PHIUsageRecord {$/;"	s	namespace:__anon603	file:
PHI_begin	CodeGen/MachineSSAUpdater.cpp	/^  static inline PHI_iterator PHI_begin(PhiT *PHI) { return PHI_iterator(PHI); }$/;"	f	class:llvm::SSAUpdaterTraits
PHI_begin	Transforms/Utils/SSAUpdater.cpp	/^  static PHI_iterator PHI_begin(PhiT *PHI) { return PHI_iterator(PHI); }$/;"	f	class:llvm::SSAUpdaterTraits
PHI_end	CodeGen/MachineSSAUpdater.cpp	/^  static inline PHI_iterator PHI_end(PhiT *PHI) {$/;"	f	class:llvm::SSAUpdaterTraits
PHI_end	Transforms/Utils/SSAUpdater.cpp	/^  static PHI_iterator PHI_end(PhiT *PHI) {$/;"	f	class:llvm::SSAUpdaterTraits
PHI_iterator	CodeGen/MachineSSAUpdater.cpp	/^    PHI_iterator(MachineInstr *P, bool) \/\/ end iterator$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
PHI_iterator	CodeGen/MachineSSAUpdater.cpp	/^    explicit PHI_iterator(MachineInstr *P) \/\/ begin iterator$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
PHI_iterator	CodeGen/MachineSSAUpdater.cpp	/^  class PHI_iterator {$/;"	c	class:llvm::SSAUpdaterTraits	file:
PHI_iterator	Transforms/Utils/SSAUpdater.cpp	/^    PHI_iterator(PHINode *P, bool) \/\/ end iterator$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
PHI_iterator	Transforms/Utils/SSAUpdater.cpp	/^    explicit PHI_iterator(PHINode *P) \/\/ begin iterator$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
PHI_iterator	Transforms/Utils/SSAUpdater.cpp	/^  class PHI_iterator {$/;"	c	class:llvm::SSAUpdaterTraits	file:
PHIs	CodeGen/EarlyIfConversion.cpp	/^  SmallVector<PHIInfo, 8> PHIs;$/;"	m	class:__anon91::SSAIfConv	file:
PHIsEqualValue	Transforms/InstCombine/InstCombinePHI.cpp	/^static bool PHIsEqualValue(PHINode *PN, Value *NonPhiInVal, $/;"	f	file:
PH_NONTAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t PH_NONTAKEN_WEIGHT = 12;$/;"	v	file:
PH_TAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t PH_TAKEN_WEIGHT = 20;$/;"	v	file:
PI	Analysis/ProfileVerifierPass.cpp	/^    ProfileInfoT<FType, BType> *PI;$/;"	m	class:__anon36::ProfileVerifierPassT	file:
PI	Transforms/Scalar/BasicBlockPlacement.cpp	/^    ProfileInfo *PI;$/;"	m	struct:__anon528::BlockPlacement	file:
PICBase	Target/X86/X86JITInfo.h	/^    uintptr_t PICBase;$/;"	m	class:llvm::X86JITInfo
PICBaseOffset	Target/X86/X86CodeEmitter.cpp	/^    intptr_t PICBaseOffset;$/;"	m	class:__anon379::Emitter	file:
PICLabelUId	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned PICLabelUId;$/;"	m	class:llvm::ARMFunctionInfo
PICStyle	Target/X86/X86Subtarget.h	/^  PICStyles::Style PICStyle;$/;"	m	class:llvm::X86Subtarget
PICStyles	Target/X86/X86Subtarget.h	/^namespace PICStyles {$/;"	n	namespace:llvm
PIC_ADD	Target/ARM/ARMISelLowering.h	/^      PIC_ADD,      \/\/ Add with a PC operand and a PIC label.$/;"	e	enum:llvm::ARMISD::NodeType
PINSRB	Target/X86/X86ISelLowering.h	/^      PINSRB,$/;"	e	enum:llvm::X86ISD::NodeType
PINSRW	Target/X86/X86ISelLowering.h	/^      PINSRW, MMX_PINSRW,$/;"	e	enum:llvm::X86ISD::NodeType
PL	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    PL,            \/\/ Plus, positive or zero     >, ==, or unordered$/;"	e	enum:llvm::ARMCC::CondCodes
PM	ExecutionEngine/JIT/JIT.h	/^  FunctionPassManager PM;  \/\/ Passes to compile a function$/;"	m	class:llvm::JITState
PMTopLevelManager	VMCore/PassManager.cpp	/^PMTopLevelManager::PMTopLevelManager(PMDataManager *PMDM) {$/;"	f	class:PMTopLevelManager
PMULUDQ	Target/X86/X86ISelLowering.h	/^      PMULUDQ,$/;"	e	enum:llvm::X86ISD::NodeType
PN	Transforms/InstCombine/InstCombinePHI.cpp	/^  PHINode *PN;        \/\/ The PHI that was lowered.$/;"	m	struct:__anon603::LoweredPHIRecord	file:
POWERPC32_REGISTERINFO_H	Target/PowerPC/PPCRegisterInfo.h	16;"	d
POWERPCCSELECTIONDAGINFO_H	Target/PowerPC/PPCSelectionDAGInfo.h	15;"	d
POWERPCSUBTARGET_H	Target/PowerPC/PPCSubtarget.h	15;"	d
POWERPC_FRAMEINFO_H	Target/PowerPC/PPCFrameLowering.h	14;"	d
POWERPC_INSTRBUILDER_H	Target/PowerPC/PPCInstrBuilder.h	21;"	d
POWERPC_INSTRUCTIONINFO_H	Target/PowerPC/PPCInstrInfo.h	15;"	d
POWERPC_JITINFO_H	Target/PowerPC/PPCJITInfo.h	15;"	d
PPC	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^namespace PPC {$/;"	n	namespace:llvm
PPC	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^namespace PPC {$/;"	n	namespace:llvm
PPC	Target/PowerPC/PPC.h	23;"	d
PPC	Target/PowerPC/PPCISelLowering.h	/^  namespace PPC {$/;"	n	namespace:llvm
PPC	Target/PowerPC/PPCRelocations.h	/^  namespace PPC {$/;"	n	namespace:llvm
PPC	Target/PowerPC/PPCRelocations.h	22;"	d
PPC	Target/PowerPC/PPCSubtarget.h	/^namespace PPC {$/;"	n	namespace:llvm
PPC	Target/PowerPC/PPCSubtarget.h	26;"	d
PPC32CompilationCallback	Target/PowerPC/PPCJITInfo.cpp	/^void PPC32CompilationCallback() {$/;"	f
PPC32TargetMachine	Target/PowerPC/PPCTargetMachine.cpp	/^PPC32TargetMachine::PPC32TargetMachine(const Target &T, StringRef TT,$/;"	f	class:PPC32TargetMachine
PPC32TargetMachine	Target/PowerPC/PPCTargetMachine.h	/^class PPC32TargetMachine : public PPCTargetMachine {$/;"	c	namespace:llvm
PPC64CompilationCallback	Target/PowerPC/PPCJITInfo.cpp	/^void PPC64CompilationCallback() {$/;"	f
PPC64TargetMachine	Target/PowerPC/PPCTargetMachine.cpp	/^PPC64TargetMachine::PPC64TargetMachine(const Target &T, StringRef TT,$/;"	f	class:PPC64TargetMachine
PPC64TargetMachine	Target/PowerPC/PPCTargetMachine.h	/^class PPC64TargetMachine : public PPCTargetMachine {$/;"	c	namespace:llvm
PPC970_BRU	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_BRU    = 7 << PPC970_Shift    \/\/ Branch Unit$/;"	e	enum:llvm::PPCII::PPC970_Unit
PPC970_CRU	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_CRU    = 4 << PPC970_Shift,   \/\/ Control Register Unit$/;"	e	enum:llvm::PPCII::PPC970_Unit
PPC970_Cracked	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_Cracked = 0x4,$/;"	e	enum:llvm::PPCII::__anon327
PPC970_FPU	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_FPU    = 3 << PPC970_Shift,   \/\/ Floating Point Unit$/;"	e	enum:llvm::PPCII::PPC970_Unit
PPC970_FXU	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_FXU    = 1 << PPC970_Shift,   \/\/ Fixed Point (aka Integer\/ALU) Unit$/;"	e	enum:llvm::PPCII::PPC970_Unit
PPC970_First	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_First = 0x1,$/;"	e	enum:llvm::PPCII::__anon327
PPC970_LSU	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_LSU    = 2 << PPC970_Shift,   \/\/ Load Store Unit$/;"	e	enum:llvm::PPCII::PPC970_Unit
PPC970_Mask	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_Mask = 0x07 << PPC970_Shift$/;"	e	enum:llvm::PPCII::__anon327
PPC970_Pseudo	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_Pseudo = 0 << PPC970_Shift,   \/\/ Pseudo instruction$/;"	e	enum:llvm::PPCII::PPC970_Unit
PPC970_Shift	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_Shift = 3,$/;"	e	enum:llvm::PPCII::__anon327
PPC970_Single	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_Single = 0x2,$/;"	e	enum:llvm::PPCII::__anon327
PPC970_Unit	Target/PowerPC/PPCInstrInfo.h	/^enum PPC970_Unit {$/;"	g	namespace:llvm::PPCII
PPC970_VALU	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_VALU   = 5 << PPC970_Shift,   \/\/ Vector ALU$/;"	e	enum:llvm::PPCII::PPC970_Unit
PPC970_VPERM	Target/PowerPC/PPCInstrInfo.h	/^  PPC970_VPERM  = 6 << PPC970_Shift,   \/\/ Vector Permute Unit$/;"	e	enum:llvm::PPCII::PPC970_Unit
PPCAsmBackend	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  PPCAsmBackend(const Target &T) : MCAsmBackend(), TheTarget(T) {}$/;"	f	class:__anon320::PPCAsmBackend
PPCAsmBackend	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^class PPCAsmBackend : public MCAsmBackend {$/;"	c	namespace:__anon320	file:
PPCAsmPrinter	Target/PowerPC/PPCAsmPrinter.cpp	/^    explicit PPCAsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:__anon330::PPCAsmPrinter
PPCAsmPrinter	Target/PowerPC/PPCAsmPrinter.cpp	/^  class PPCAsmPrinter : public AsmPrinter {$/;"	c	namespace:__anon330	file:
PPCBASEINFO_H	Target/PowerPC/MCTargetDesc/PPCBaseInfo.h	18;"	d
PPCBSel	Target/PowerPC/PPCBranchSelector.cpp	/^    PPCBSel() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon323::PPCBSel
PPCBSel	Target/PowerPC/PPCBranchSelector.cpp	/^  struct PPCBSel : public MachineFunctionPass {$/;"	s	namespace:__anon323	file:
PPCCTRLoops	Target/PowerPC/PPCCTRLoops.cpp	/^    PPCCTRLoops() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon325::PPCCTRLoops
PPCCTRLoops	Target/PowerPC/PPCCTRLoops.cpp	/^  struct PPCCTRLoops : public MachineFunctionPass {$/;"	s	namespace:__anon325	file:
PPCCodeEmitter	Target/PowerPC/PPCCodeEmitter.cpp	/^    PPCCodeEmitter(TargetMachine &tm, JITCodeEmitter &mce)$/;"	f	class:__anon324::PPCCodeEmitter
PPCCodeEmitter	Target/PowerPC/PPCCodeEmitter.cpp	/^  class PPCCodeEmitter : public MachineFunctionPass {$/;"	c	namespace:__anon324	file:
PPCCompilationCallbackC	Target/PowerPC/PPCJITInfo.cpp	/^static void* LLVM_ATTRIBUTE_USED PPCCompilationCallbackC(unsigned *StubCallAddrPlus4,$/;"	f	file:
PPCDAGToDAGISel	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    explicit PPCDAGToDAGISel(PPCTargetMachine &tm)$/;"	f	class:__anon331::PPCDAGToDAGISel
PPCDAGToDAGISel	Target/PowerPC/PPCISelDAGToDAG.cpp	/^  class PPCDAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon331	file:
PPCDarwinAsmPrinter	Target/PowerPC/PPCAsmPrinter.cpp	/^    explicit PPCDarwinAsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:__anon330::PPCDarwinAsmPrinter
PPCDarwinAsmPrinter	Target/PowerPC/PPCAsmPrinter.cpp	/^  class PPCDarwinAsmPrinter : public PPCAsmPrinter {$/;"	c	namespace:__anon330	file:
PPCDoubleDouble	Support/APFloat.cpp	/^  const fltSemantics APFloat::PPCDoubleDouble = { 1023, -1022, 106, false };$/;"	m	class:llvm::APFloat	file:
PPCELFObjectWriter	Target/PowerPC/MCTargetDesc/PPCELFObjectWriter.cpp	/^  class PPCELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anon322	file:
PPCELFObjectWriter	Target/PowerPC/MCTargetDesc/PPCELFObjectWriter.cpp	/^PPCELFObjectWriter::PPCELFObjectWriter(bool Is64Bit, uint8_t OSABI)$/;"	f	class:PPCELFObjectWriter
PPCFrameLowering	Target/PowerPC/PPCFrameLowering.h	/^  PPCFrameLowering(const PPCSubtarget &sti)$/;"	f	class:llvm::PPCFrameLowering
PPCFrameLowering	Target/PowerPC/PPCFrameLowering.h	/^class PPCFrameLowering: public TargetFrameLowering {$/;"	c	namespace:llvm
PPCFunctionInfo	Target/PowerPC/PPCMachineFunctionInfo.h	/^  explicit PPCFunctionInfo(MachineFunction &MF) $/;"	f	class:llvm::PPCFunctionInfo
PPCFunctionInfo	Target/PowerPC/PPCMachineFunctionInfo.h	/^class PPCFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
PPCHAZRECS_H	Target/PowerPC/PPCHazardRecognizers.h	15;"	d
PPCHazardRecognizer970	Target/PowerPC/PPCHazardRecognizers.cpp	/^PPCHazardRecognizer970::PPCHazardRecognizer970(const TargetInstrInfo &tii)$/;"	f	class:PPCHazardRecognizer970
PPCHazardRecognizer970	Target/PowerPC/PPCHazardRecognizers.h	/^class PPCHazardRecognizer970 : public ScheduleHazardRecognizer {$/;"	c	namespace:llvm
PPCII	Target/PowerPC/PPC.h	/^  namespace PPCII {$/;"	n	namespace:llvm
PPCII	Target/PowerPC/PPCInstrInfo.h	/^namespace PPCII {$/;"	n	namespace:llvm
PPCINSTPRINTER_H	Target/PowerPC/InstPrinter/PPCInstPrinter.h	15;"	d
PPCISD	Target/PowerPC/PPCISelLowering.h	/^  namespace PPCISD {$/;"	n	namespace:llvm
PPCInstPrinter	Target/PowerPC/InstPrinter/PPCInstPrinter.h	/^  PPCInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,$/;"	f	class:llvm::PPCInstPrinter
PPCInstPrinter	Target/PowerPC/InstPrinter/PPCInstPrinter.h	/^class PPCInstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
PPCInstrInfo	Target/PowerPC/PPCInstrInfo.cpp	/^PPCInstrInfo::PPCInstrInfo(PPCTargetMachine &tm)$/;"	f	class:PPCInstrInfo
PPCInstrInfo	Target/PowerPC/PPCInstrInfo.h	/^class PPCInstrInfo : public PPCGenInstrInfo {$/;"	c	namespace:llvm
PPCJITInfo	Target/PowerPC/PPCJITInfo.h	/^    PPCJITInfo(PPCTargetMachine &tm, bool tmIs64Bit) : TM(tm) {$/;"	f	class:llvm::PPCJITInfo
PPCJITInfo	Target/PowerPC/PPCJITInfo.h	/^  class PPCJITInfo : public TargetJITInfo {$/;"	c	namespace:llvm
PPCLinuxAsmPrinter	Target/PowerPC/PPCAsmPrinter.cpp	/^    explicit PPCLinuxAsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:__anon330::PPCLinuxAsmPrinter
PPCLinuxAsmPrinter	Target/PowerPC/PPCAsmPrinter.cpp	/^  class PPCLinuxAsmPrinter : public PPCAsmPrinter {$/;"	c	namespace:__anon330	file:
PPCLinuxMCAsmInfo	Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.cpp	/^PPCLinuxMCAsmInfo::PPCLinuxMCAsmInfo(bool is64Bit) {$/;"	f	class:PPCLinuxMCAsmInfo
PPCLinuxMCAsmInfo	Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.h	/^  class PPCLinuxMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
PPCLowering	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    const PPCTargetLowering &PPCLowering;$/;"	m	class:__anon331::PPCDAGToDAGISel	file:
PPCMCAsmInfoDarwin	Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.cpp	/^PPCMCAsmInfoDarwin::PPCMCAsmInfoDarwin(bool is64Bit) {$/;"	f	class:PPCMCAsmInfoDarwin
PPCMCAsmInfoDarwin	Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.h	/^  class PPCMCAsmInfoDarwin : public MCAsmInfoDarwin {$/;"	c	namespace:llvm
PPCMCCodeEmitter	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^  PPCMCCodeEmitter(const MCInstrInfo &mcii, const MCSubtargetInfo &sti,$/;"	f	class:__anon319::PPCMCCodeEmitter
PPCMCCodeEmitter	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^class PPCMCCodeEmitter : public MCCodeEmitter {$/;"	c	namespace:__anon319	file:
PPCMCTARGETDESC_H	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h	15;"	d
PPCMachObjectWriter	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  PPCMachObjectWriter(bool Is64Bit, uint32_t CPUType,$/;"	f	class:__anon320::PPCMachObjectWriter
PPCMachObjectWriter	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^class PPCMachObjectWriter : public MCMachObjectTargetWriter {$/;"	c	namespace:__anon320	file:
PPCPassConfig	Target/PowerPC/PPCTargetMachine.cpp	/^  PPCPassConfig(PPCTargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon329::PPCPassConfig
PPCPassConfig	Target/PowerPC/PPCTargetMachine.cpp	/^class PPCPassConfig : public TargetPassConfig {$/;"	c	namespace:__anon329	file:
PPCRELOCATIONS_H	Target/PowerPC/PPCRelocations.h	15;"	d
PPCRegisterInfo	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::PPCRegisterInfo(const PPCSubtarget &ST,$/;"	f	class:PPCRegisterInfo
PPCRegisterInfo	Target/PowerPC/PPCRegisterInfo.h	/^class PPCRegisterInfo : public PPCGenRegisterInfo {$/;"	c	namespace:llvm
PPCScoreboardHazardRecognizer	Target/PowerPC/PPCHazardRecognizers.h	/^  PPCScoreboardHazardRecognizer(const InstrItineraryData *ItinData,$/;"	f	class:llvm::PPCScoreboardHazardRecognizer
PPCScoreboardHazardRecognizer	Target/PowerPC/PPCHazardRecognizers.h	/^class PPCScoreboardHazardRecognizer : public ScoreboardHazardRecognizer {$/;"	c	namespace:llvm
PPCSelectionDAGInfo	Target/PowerPC/PPCSelectionDAGInfo.cpp	/^PPCSelectionDAGInfo::PPCSelectionDAGInfo(const PPCTargetMachine &TM)$/;"	f	class:PPCSelectionDAGInfo
PPCSelectionDAGInfo	Target/PowerPC/PPCSelectionDAGInfo.h	/^class PPCSelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
PPCSubTarget	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    const PPCSubtarget &PPCSubTarget;$/;"	m	class:__anon331::PPCDAGToDAGISel	file:
PPCSubTarget	Target/PowerPC/PPCISelLowering.h	/^    const PPCSubtarget &PPCSubTarget;$/;"	m	class:llvm::PPCTargetLowering
PPCSubtarget	Target/PowerPC/PPCSubtarget.cpp	/^PPCSubtarget::PPCSubtarget(const std::string &TT, const std::string &CPU,$/;"	f	class:PPCSubtarget
PPCSubtarget	Target/PowerPC/PPCSubtarget.h	/^class PPCSubtarget : public PPCGenSubtargetInfo {$/;"	c	namespace:llvm
PPCTARGETASMINFO_H	Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.h	15;"	d
PPCTargetLowering	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::PPCTargetLowering(PPCTargetMachine &TM)$/;"	f	class:PPCTargetLowering
PPCTargetLowering	Target/PowerPC/PPCISelLowering.h	/^  class PPCTargetLowering : public TargetLowering {$/;"	c	namespace:llvm
PPCTargetMachine	Target/PowerPC/PPCTargetMachine.cpp	/^PPCTargetMachine::PPCTargetMachine(const Target &T, StringRef TT,$/;"	f	class:PPCTargetMachine
PPCTargetMachine	Target/PowerPC/PPCTargetMachine.h	/^class PPCTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
PPC_FP128Ty	VMCore/LLVMContextImpl.h	/^  Type X86_FP80Ty, FP128Ty, PPC_FP128Ty, X86_MMXTy;$/;"	m	class:llvm::LLVMContextImpl
PPC_MACHINE_FUNCTION_INFO_H	Target/PowerPC/PPCMachineFunctionInfo.h	15;"	d
PPC_TARGETMACHINE_H	Target/PowerPC/PPCTargetMachine.h	15;"	d
PRED_ALWAYS	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^    PRED_ALWAYS = (0 << 5) | 20,$/;"	e	enum:llvm::PPC::Predicate
PRED_EQ	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^    PRED_EQ     = (2 << 5) | 12,$/;"	e	enum:llvm::PPC::Predicate
PRED_GE	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^    PRED_GE     = (0 << 5) |  4,$/;"	e	enum:llvm::PPC::Predicate
PRED_GT	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^    PRED_GT     = (1 << 5) | 12,$/;"	e	enum:llvm::PPC::Predicate
PRED_LE	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^    PRED_LE     = (1 << 5) |  4,$/;"	e	enum:llvm::PPC::Predicate
PRED_LT	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^    PRED_LT     = (0 << 5) | 12,$/;"	e	enum:llvm::PPC::Predicate
PRED_NE	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^    PRED_NE     = (2 << 5) |  4,$/;"	e	enum:llvm::PPC::Predicate
PRED_NU	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^    PRED_NU     = (3 << 5) |  4$/;"	e	enum:llvm::PPC::Predicate
PRED_UN	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^    PRED_UN     = (3 << 5) | 12,$/;"	e	enum:llvm::PPC::Predicate
PREFSLOT2VEC	Target/CellSPU/SPUISelLowering.h	/^      PREFSLOT2VEC,             \/\/\/< Promote scalar->vector$/;"	e	enum:llvm::SPUISD::NodeType
PRELOAD	Target/ARM/ARMISelLowering.h	/^      PRELOAD,      \/\/ Preload$/;"	e	enum:llvm::ARMISD::NodeType
PRINT_ALIAS_INSTR	Target/X86/InstPrinter/X86ATTInstPrinter.cpp	32;"	d	file:
PRINT_MODULE	Transforms/Instrumentation/PathProfiling.cpp	1325;"	d	file:
PRINT_OPT_DIFF	Support/CommandLine.cpp	1133;"	d	file:
PRNG	Transforms/Utils/MetaRenamer.cpp	/^  struct PRNG {$/;"	s	namespace:__anon472	file:
PROC_NONE	Target/CellSPU/SPUSubtarget.h	/^      PROC_NONE,$/;"	e	enum:llvm::SPU::__anon420
PROFILINGUTILS_H	Transforms/Instrumentation/ProfilingUtils.h	18;"	d
PROPERTY_ALIGN	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_ALIGN,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_ISKERNEL_FUNCTION	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_ISKERNEL_FUNCTION,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_ISREADONLY_IMAGE_PARAM	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_ISREADONLY_IMAGE_PARAM,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_ISSAMPLER	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_ISSAMPLER,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_ISSURFACE	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_ISSURFACE,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_ISTEXTURE	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_ISTEXTURE,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_ISWRITEONLY_IMAGE_PARAM	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_ISWRITEONLY_IMAGE_PARAM,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_LAST	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_LAST$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_MAXNTID_X	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_MAXNTID_X = 0,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_MAXNTID_Y	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_MAXNTID_Y,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_MAXNTID_Z	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_MAXNTID_Z,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_MINNCTAPERSM	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_MINNCTAPERSM,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_REQNTID_X	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_REQNTID_X,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_REQNTID_Y	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_REQNTID_Y,$/;"	e	enum:llvm::PropertyAnnotation
PROPERTY_REQNTID_Z	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^  PROPERTY_REQNTID_Z,$/;"	e	enum:llvm::PropertyAnnotation
PSHUFB	Target/X86/X86ISelLowering.h	/^      PSHUFB,$/;"	e	enum:llvm::X86ISD::NodeType
PSHUFD	Target/X86/X86ISelLowering.h	/^      PSHUFD,$/;"	e	enum:llvm::X86ISD::NodeType
PSHUFHW	Target/X86/X86ISelLowering.h	/^      PSHUFHW,$/;"	e	enum:llvm::X86ISD::NodeType
PSHUFLW	Target/X86/X86ISelLowering.h	/^      PSHUFLW,$/;"	e	enum:llvm::X86ISD::NodeType
PSIGN	Target/X86/X86ISelLowering.h	/^      PSIGN,$/;"	e	enum:llvm::X86ISD::NodeType
PSK_InBounds	VMCore/Value.cpp	/^  PSK_InBounds$/;"	e	enum:__anon618::PointerStripKind	file:
PSK_InBoundsConstantIndices	VMCore/Value.cpp	/^  PSK_InBoundsConstantIndices,$/;"	e	enum:__anon618::PointerStripKind	file:
PSK_ZeroIndices	VMCore/Value.cpp	/^  PSK_ZeroIndices,$/;"	e	enum:__anon618::PointerStripKind	file:
PSVGlobals	CodeGen/PseudoSourceValue.cpp	/^static ManagedStatic<PSVGlobalsTy> PSVGlobals;$/;"	m	namespace:__anon100	file:
PSVGlobalsTy	CodeGen/PseudoSourceValue.cpp	/^  PSVGlobalsTy() : PSVs() {}$/;"	f	struct:__anon100::PSVGlobalsTy
PSVGlobalsTy	CodeGen/PseudoSourceValue.cpp	/^struct PSVGlobalsTy {$/;"	s	namespace:__anon100	file:
PSVNames	CodeGen/PseudoSourceValue.cpp	/^static const char *const PSVNames[] = {$/;"	v	file:
PSVs	CodeGen/PseudoSourceValue.cpp	/^  const PseudoSourceValue PSVs[4];$/;"	m	struct:__anon100::PSVGlobalsTy	file:
PTEST	Target/X86/X86ISelLowering.h	/^      PTEST,$/;"	e	enum:llvm::X86ISD::NodeType
PTXLdStInstCode	Target/NVPTX/NVPTX.h	/^namespace PTXLdStInstCode {$/;"	n	namespace:llvm::NVPTX
P_BitShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    P_BitShift     = 24,$/;"	e	enum:llvm::ARMII::__anon288
Packet	Target/Hexagon/HexagonMachineScheduler.h	/^  std::vector<SUnit*> Packet;$/;"	m	class:llvm::VLIWResourceModel
PacketInfo	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  std::map<const MachineInstr*, unsigned> PacketInfo;$/;"	m	class:llvm::HexagonMachineFunctionInfo
PacketizeMIs	CodeGen/DFAPacketizer.cpp	/^void VLIWPacketizerList::PacketizeMIs(MachineBasicBlock *MBB,$/;"	f	class:VLIWPacketizerList
PadIndex	CodeGen/AsmPrinter/DwarfException.h	/^    unsigned PadIndex;$/;"	m	struct:llvm::DwarfException::PadRange
PadIndex	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^  unsigned PadIndex;$/;"	m	struct:__anon183::PadRange	file:
PadLT	CodeGen/AsmPrinter/DwarfException.cpp	/^bool DwarfException::PadLT(const LandingPadInfo *L, const LandingPadInfo *R) {$/;"	f	class:DwarfException
PadLT	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^static bool PadLT(const LandingPadInfo *L, const LandingPadInfo *R) {$/;"	f	file:
PadLabel	CodeGen/AsmPrinter/DwarfException.h	/^    MCSymbol *PadLabel;   \/\/ zero indicates that there is no landing pad.$/;"	m	struct:llvm::DwarfException::CallSiteEntry
PadLabel	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^  MCSymbol *PadLabel;   \/\/ zero indicates that there is no landing pad.$/;"	m	struct:__anon183::CallSiteEntry	file:
PadRange	CodeGen/AsmPrinter/DwarfException.h	/^  struct PadRange {$/;"	s	class:llvm::DwarfException
PadRange	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^struct PadRange {$/;"	s	namespace:__anon183	file:
PadToColumn	Support/FormattedStream.cpp	/^formatted_raw_ostream &formatted_raw_ostream::PadToColumn(unsigned NewCol) { $/;"	f	class:formatted_raw_ostream
PairDRegs	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::PairDRegs(EVT VT, SDValue V0, SDValue V1) {$/;"	f	class:ARMDAGToDAGISel
PairQRegs	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::PairQRegs(EVT VT, SDValue V0, SDValue V1) {$/;"	f	class:ARMDAGToDAGISel
PairSRegs	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::PairSRegs(EVT VT, SDValue V0, SDValue V1) {$/;"	f	class:ARMDAGToDAGISel
ParamInfo	AsmParser/LLParser.h	/^      ParamInfo(LocTy loc, Value *v, Attributes attrs)$/;"	f	struct:llvm::LLParser::ParamInfo
ParamInfo	AsmParser/LLParser.h	/^    struct ParamInfo {$/;"	s	class:llvm::LLParser
Parameters	MC/MCParser/AsmParser.cpp	/^  MacroParameters Parameters;$/;"	m	struct:__anon211::Macro	file:
Params	VMCore/LLVMContextImpl.h	/^    ArrayRef<Type*> Params;$/;"	m	struct:llvm::FunctionTypeKeyInfo::KeyTy
Parent	Analysis/LazyValueInfo.cpp	/^      LazyValueInfoCache *Parent;$/;"	m	struct:__anon20::LazyValueInfoCache::OverDefinedCacheUpdater	file:
Parent	Analysis/LazyValueInfo.cpp	/^    LazyValueInfoCache *Parent;$/;"	m	struct:__anon19::LVIValueHandle	file:
Parent	CodeGen/AsmPrinter/DIE.h	/^    DIE *Parent;$/;"	m	class:llvm::DIE
Parent	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *Parent;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestBlock
ParentIdx	DebugInfo/DWARFDebugInfoEntry.h	/^  uint32_t ParentIdx;$/;"	m	class:llvm::DWARFDebugInfoEntryMinimal
Parse	VMCore/InlineAsm.cpp	/^bool InlineAsm::ConstraintInfo::Parse(StringRef Str,$/;"	f	class:InlineAsm::ConstraintInfo
ParseARMTriple	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^std::string ARM_MC::ParseARMTriple(StringRef TT, StringRef CPU) {$/;"	f	class:ARM_MC
ParseATTOperand	Target/X86/AsmParser/X86AsmParser.cpp	/^X86Operand *X86AsmParser::ParseATTOperand() {$/;"	f	class:X86AsmParser
ParseAbsoluteExpression	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseAbsoluteExpression(int64_t &Res) {$/;"	f	class:AsmParser
ParseAlias	AsmParser/LLParser.cpp	/^bool LLParser::ParseAlias(const std::string &Name, LocTy NameLoc,$/;"	f	class:LLParser
ParseAlloc	AsmParser/LLParser.cpp	/^int LLParser::ParseAlloc(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseAnonStructType	AsmParser/LLParser.cpp	/^bool LLParser::ParseAnonStructType(Type *&Result, bool Packed) {$/;"	f	class:LLParser
ParseArgumentList	AsmParser/LLParser.cpp	/^bool LLParser::ParseArgumentList(SmallVectorImpl<ArgInfo> &ArgList,$/;"	f	class:LLParser
ParseArithmetic	AsmParser/LLParser.cpp	/^bool LLParser::ParseArithmetic(Instruction *&Inst, PerFunctionState &PFS,$/;"	f	class:LLParser
ParseArrayVectorType	AsmParser/LLParser.cpp	/^bool LLParser::ParseArrayVectorType(Type *&Result, bool isVector) {$/;"	f	class:LLParser
ParseAssembly	AsmParser/Parser.cpp	/^Module *llvm::ParseAssembly(MemoryBuffer *F,$/;"	f	class:llvm
ParseAssemblyFile	AsmParser/Parser.cpp	/^Module *llvm::ParseAssemblyFile(const std::string &Filename, SMDiagnostic &Err,$/;"	f	class:llvm
ParseAssemblyString	AsmParser/Parser.cpp	/^Module *llvm::ParseAssemblyString(const char *AsmString, Module *M,$/;"	f	class:llvm
ParseAssignment	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseAssignment(StringRef Name, bool allow_redef,$/;"	f	class:AsmParser
ParseAtUnwindOrAtExcept	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseAtUnwindOrAtExcept(bool &unwind, bool &except) {$/;"	f	class:COFFAsmParser
ParseAtomicRMW	AsmParser/LLParser.cpp	/^int LLParser::ParseAtomicRMW(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseAttributeBlock	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseAttributeBlock() {$/;"	f	class:BitcodeReader
ParseBasicBlock	AsmParser/LLParser.cpp	/^bool LLParser::ParseBasicBlock(PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseBinOpRHS	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseBinOpRHS(unsigned Precedence, const MCExpr *&Res,$/;"	f	class:AsmParser
ParseBitcodeFile	Bitcode/Reader/BitcodeReader.cpp	/^Module *llvm::ParseBitcodeFile(MemoryBuffer *Buffer, LLVMContext& Context,$/;"	f	class:llvm
ParseBitcodeInto	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseBitcodeInto(Module *M) {$/;"	f	class:BitcodeReader
ParseBody	TableGen/TGParser.cpp	/^bool TGParser::ParseBody(Record *CurRec) {$/;"	f	class:TGParser
ParseBodyItem	TableGen/TGParser.cpp	/^bool TGParser::ParseBodyItem(Record *CurRec) {$/;"	f	class:TGParser
ParseBr	AsmParser/LLParser.cpp	/^bool LLParser::ParseBr(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseBracketExpr	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseBracketExpr(const MCExpr *&Res, SMLoc &EndLoc) {$/;"	f	class:AsmParser
ParseCStringVector	Support/CommandLine.cpp	/^static void ParseCStringVector(std::vector<char *> &OutputVector,$/;"	f	file:
ParseCall	AsmParser/LLParser.cpp	/^bool LLParser::ParseCall(Instruction *&Inst, PerFunctionState &PFS,$/;"	f	class:LLParser
ParseCast	AsmParser/LLParser.cpp	/^bool LLParser::ParseCast(Instruction *&Inst, PerFunctionState &PFS,$/;"	f	class:LLParser
ParseClass	TableGen/TGParser.cpp	/^bool TGParser::ParseClass() {$/;"	f	class:TGParser
ParseClassID	TableGen/TGParser.cpp	/^Record *TGParser::ParseClassID() {$/;"	f	class:TGParser
ParseCmpPredicate	AsmParser/LLParser.cpp	/^bool LLParser::ParseCmpPredicate(unsigned &P, unsigned Opc) {$/;"	f	class:LLParser
ParseCmpXchg	AsmParser/LLParser.cpp	/^int LLParser::ParseCmpXchg(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseCommandLineOptions	Support/CommandLine.cpp	/^void cl::ParseCommandLineOptions(int argc, const char * const *argv,$/;"	f	class:cl
ParseCompare	AsmParser/LLParser.cpp	/^bool LLParser::ParseCompare(Instruction *&Inst, PerFunctionState &PFS,$/;"	f	class:LLParser
ParseConstants	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseConstants() {$/;"	f	class:BitcodeReader
ParseConstraints	CodeGen/SelectionDAG/TargetLowering.cpp	/^TargetLowering::AsmOperandInfoVector TargetLowering::ParseConstraints($/;"	f	class:TargetLowering
ParseConstraints	VMCore/InlineAsm.cpp	/^InlineAsm::ParseConstraints(StringRef Constraints) {$/;"	f	class:InlineAsm
ParseCppHashLineFilenameComment	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseCppHashLineFilenameComment(const SMLoc &L) {$/;"	f	class:AsmParser
ParseDagArgList	TableGen/TGParser.cpp	/^TGParser::ParseDagArgList(Record *CurRec) {$/;"	f	class:TGParser
ParseDeclaration	TableGen/TGParser.cpp	/^Init *TGParser::ParseDeclaration(Record *CurRec,$/;"	f	class:TGParser
ParseDeclare	AsmParser/LLParser.cpp	/^bool LLParser::ParseDeclare() {$/;"	f	class:LLParser
ParseDef	TableGen/TGParser.cpp	/^bool TGParser::ParseDef(MultiClass *CurMultiClass) {$/;"	f	class:TGParser
ParseDefine	AsmParser/LLParser.cpp	/^bool LLParser::ParseDefine() {$/;"	f	class:LLParser
ParseDefm	TableGen/TGParser.cpp	/^bool TGParser::ParseDefm(MultiClass *CurMultiClass) {$/;"	f	class:TGParser
ParseDefmID	TableGen/TGParser.cpp	/^Record *TGParser::ParseDefmID() {$/;"	f	class:TGParser
ParseDepLibs	AsmParser/LLParser.cpp	/^bool LLParser::ParseDepLibs() {$/;"	f	class:LLParser
ParseDirective	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::ParseDirective(AsmToken DirectiveID) {$/;"	f	class:ARMAsmParser
ParseDirective	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^bool MBlazeAsmParser::ParseDirective(AsmToken DirectiveID) {$/;"	f	class:MBlazeAsmParser
ParseDirective	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::ParseDirective(AsmToken DirectiveID) {$/;"	f	class:MipsAsmParser
ParseDirective	Target/X86/AsmParser/X86AsmParser.cpp	/^bool X86AsmParser::ParseDirective(AsmToken DirectiveID) {$/;"	f	class:X86AsmParser
ParseDirectiveAbort	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveAbort() {$/;"	f	class:AsmParser
ParseDirectiveAlign	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveAlign(bool IsPow2, unsigned ValueSize) {$/;"	f	class:AsmParser
ParseDirectiveAscii	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveAscii(StringRef IDVal, bool ZeroTerminated) {$/;"	f	class:AsmParser
ParseDirectiveCFIAdjustCfaOffset	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIAdjustCfaOffset(StringRef,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIDefCfa	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIDefCfa(StringRef,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIDefCfaOffset	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIDefCfaOffset(StringRef,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIDefCfaRegister	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIDefCfaRegister(StringRef,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIEndProc	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIEndProc(StringRef, SMLoc DirectiveLoc) {$/;"	f	class:GenericAsmParser
ParseDirectiveCFIEscape	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIEscape(StringRef IDVal,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIOffset	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIOffset(StringRef, SMLoc DirectiveLoc) {$/;"	f	class:GenericAsmParser
ParseDirectiveCFIPersonalityOrLsda	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIPersonalityOrLsda(StringRef IDVal,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIRelOffset	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIRelOffset(StringRef,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIRememberState	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIRememberState(StringRef IDVal,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIRestore	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIRestore(StringRef IDVal,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIRestoreState	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIRestoreState(StringRef IDVal,$/;"	f	class:GenericAsmParser
ParseDirectiveCFISameValue	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFISameValue(StringRef IDVal,$/;"	f	class:GenericAsmParser
ParseDirectiveCFISections	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFISections(StringRef,$/;"	f	class:GenericAsmParser
ParseDirectiveCFISignalFrame	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFISignalFrame(StringRef Directive,$/;"	f	class:GenericAsmParser
ParseDirectiveCFIStartProc	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveCFIStartProc(StringRef,$/;"	f	class:GenericAsmParser
ParseDirectiveCode	Target/X86/AsmParser/X86AsmParser.cpp	/^bool X86AsmParser::ParseDirectiveCode(StringRef IDVal, SMLoc L) {$/;"	f	class:X86AsmParser
ParseDirectiveComm	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveComm(bool IsLocal) {$/;"	f	class:AsmParser
ParseDirectiveDataRegion	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveDataRegion(StringRef, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectiveDataRegionEnd	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveDataRegionEnd(StringRef, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectiveDef	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseDirectiveDef(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseDirectiveDesc	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveDesc(StringRef, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectiveDumpOrLoad	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveDumpOrLoad(StringRef Directive,$/;"	f	class:DarwinAsmParser
ParseDirectiveElse	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveElse(SMLoc DirectiveLoc) {$/;"	f	class:AsmParser
ParseDirectiveElseIf	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveElseIf(SMLoc DirectiveLoc) {$/;"	f	class:AsmParser
ParseDirectiveEndIf	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveEndIf(SMLoc DirectiveLoc) {$/;"	f	class:AsmParser
ParseDirectiveEndMacro	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveEndMacro(StringRef Directive,$/;"	f	class:GenericAsmParser
ParseDirectiveEndef	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseDirectiveEndef(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseDirectiveEndr	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveEndr(SMLoc DirectiveLoc) {$/;"	f	class:AsmParser
ParseDirectiveFile	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveFile(StringRef, SMLoc DirectiveLoc) {$/;"	f	class:GenericAsmParser
ParseDirectiveFill	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveFill() {$/;"	f	class:AsmParser
ParseDirectiveIdent	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectiveIdent(StringRef, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectiveIf	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveIf(SMLoc DirectiveLoc) {$/;"	f	class:AsmParser
ParseDirectiveIfb	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveIfb(SMLoc DirectiveLoc, bool ExpectBlank) {$/;"	f	class:AsmParser
ParseDirectiveIfc	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveIfc(SMLoc DirectiveLoc, bool ExpectEqual) {$/;"	f	class:AsmParser
ParseDirectiveIfdef	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveIfdef(SMLoc DirectiveLoc, bool expect_defined) {$/;"	f	class:AsmParser
ParseDirectiveIncbin	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveIncbin() {$/;"	f	class:AsmParser
ParseDirectiveInclude	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveInclude() {$/;"	f	class:AsmParser
ParseDirectiveIrp	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveIrp(SMLoc DirectiveLoc) {$/;"	f	class:AsmParser
ParseDirectiveIrpc	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveIrpc(SMLoc DirectiveLoc) {$/;"	f	class:AsmParser
ParseDirectiveLEB128	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveLEB128(StringRef DirName, SMLoc) {$/;"	f	class:GenericAsmParser
ParseDirectiveLine	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveLine(StringRef, SMLoc DirectiveLoc) {$/;"	f	class:GenericAsmParser
ParseDirectiveLoc	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveLoc(StringRef, SMLoc DirectiveLoc) {$/;"	f	class:GenericAsmParser
ParseDirectiveLsym	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveLsym(StringRef, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectiveMacro	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveMacro(StringRef Directive,$/;"	f	class:GenericAsmParser
ParseDirectiveMacrosOnOff	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveMacrosOnOff(StringRef Directive,$/;"	f	class:GenericAsmParser
ParseDirectiveOrg	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveOrg() {$/;"	f	class:AsmParser
ParseDirectivePopSection	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectivePopSection(StringRef, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectivePopSection	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectivePopSection(StringRef, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectivePrevious	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectivePrevious(StringRef DirName, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectivePrevious	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectivePrevious(StringRef DirName, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectivePurgeMacro	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectivePurgeMacro(StringRef Directive,$/;"	f	class:GenericAsmParser
ParseDirectivePushSection	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectivePushSection(StringRef S, SMLoc Loc) {$/;"	f	class:DarwinAsmParser
ParseDirectivePushSection	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectivePushSection(StringRef s, SMLoc loc) {$/;"	f	class:ELFAsmParser
ParseDirectiveRealValue	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveRealValue(const fltSemantics &Semantics) {$/;"	f	class:AsmParser
ParseDirectiveRept	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveRept(SMLoc DirectiveLoc) {$/;"	f	class:AsmParser
ParseDirectiveScl	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseDirectiveScl(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseDirectiveSecRel32	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseDirectiveSecRel32(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseDirectiveSection	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveSection(StringRef, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectiveSection	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectiveSection(StringRef, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectiveSecureLogReset	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveSecureLogReset(StringRef, SMLoc IDLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectiveSecureLogUnique	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveSecureLogUnique(StringRef, SMLoc IDLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectiveSet	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveSet(StringRef IDVal, bool allow_redef) {$/;"	f	class:AsmParser
ParseDirectiveSize	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectiveSize(StringRef, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectiveSpace	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveSpace() {$/;"	f	class:AsmParser
ParseDirectiveStabs	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseDirectiveStabs(StringRef Directive,$/;"	f	class:GenericAsmParser
ParseDirectiveSubsectionsViaSymbols	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveSubsectionsViaSymbols(StringRef, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectiveSymbolAttribute	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveSymbolAttribute(MCSymbolAttr Attr) {$/;"	f	class:AsmParser
ParseDirectiveSymbolAttribute	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseDirectiveSymbolAttribute(StringRef Directive, SMLoc) {$/;"	f	class:COFFAsmParser
ParseDirectiveSymbolAttribute	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectiveSymbolAttribute(StringRef Directive, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectiveSymver	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectiveSymver(StringRef, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectiveTBSS	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveTBSS(StringRef, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseDirectiveType	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseDirectiveType(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseDirectiveType	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectiveType(StringRef, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectiveValue	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveValue(unsigned Size) {$/;"	f	class:AsmParser
ParseDirectiveVersion	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectiveVersion(StringRef, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectiveWeakref	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseDirectiveWeakref(StringRef, SMLoc) {$/;"	f	class:ELFAsmParser
ParseDirectiveWord	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^bool MBlazeAsmParser::ParseDirectiveWord(unsigned Size, SMLoc L) {$/;"	f	class:MBlazeAsmParser
ParseDirectiveWord	Target/X86/AsmParser/X86AsmParser.cpp	/^bool X86AsmParser::ParseDirectiveWord(unsigned Size, SMLoc L) {$/;"	f	class:X86AsmParser
ParseDirectiveZero	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseDirectiveZero() {$/;"	f	class:AsmParser
ParseDirectiveZerofill	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseDirectiveZerofill(StringRef, SMLoc) {$/;"	f	class:DarwinAsmParser
ParseEnvironmentOptions	Support/CommandLine.cpp	/^void cl::ParseEnvironmentOptions(const char *progName, const char *envVar,$/;"	f	class:cl
ParseEscapedString	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseEscapedString(std::string &Data) {$/;"	f	class:AsmParser
ParseExpression	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseExpression(const MCExpr *&Res) {$/;"	f	class:AsmParser
ParseExpression	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseExpression(const MCExpr *&Res, SMLoc &EndLoc) {$/;"	f	class:AsmParser
ParseExpression	MC/MCParser/MCAsmParser.cpp	/^bool MCAsmParser::ParseExpression(const MCExpr *&Res) {$/;"	f	class:MCAsmParser
ParseExtractElement	AsmParser/LLParser.cpp	/^bool LLParser::ParseExtractElement(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseExtractValue	AsmParser/LLParser.cpp	/^int LLParser::ParseExtractValue(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseFence	AsmParser/LLParser.cpp	/^int LLParser::ParseFence(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseFile	TableGen/TGParser.cpp	/^bool TGParser::ParseFile() {$/;"	f	class:TGParser
ParseForeach	TableGen/TGParser.cpp	/^bool TGParser::ParseForeach(MultiClass *CurMultiClass) {$/;"	f	class:TGParser
ParseForeachDeclaration	TableGen/TGParser.cpp	/^VarInit *TGParser::ParseForeachDeclaration(ListInit *&ForeachListValue) {$/;"	f	class:TGParser
ParseForeachMode	TableGen/TGParser.h	/^    ParseForeachMode  \/\/ We are parsing a foreach init.$/;"	e	enum:llvm::TGParser::IDParseMode
ParseFsl	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^MBlazeOperand *MBlazeAsmParser::ParseFsl() {$/;"	f	class:MBlazeAsmParser
ParseFunctionBody	AsmParser/LLParser.cpp	/^bool LLParser::ParseFunctionBody(Function &Fn) {$/;"	f	class:LLParser
ParseFunctionBody	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseFunctionBody(Function *F) {$/;"	f	class:BitcodeReader
ParseFunctionHeader	AsmParser/LLParser.cpp	/^bool LLParser::ParseFunctionHeader(Function *&Fn, bool isDefine) {$/;"	f	class:LLParser
ParseFunctionType	AsmParser/LLParser.cpp	/^bool LLParser::ParseFunctionType(Type *&Result) {$/;"	f	class:LLParser
ParseGetElementPtr	AsmParser/LLParser.cpp	/^int LLParser::ParseGetElementPtr(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseGlobal	AsmParser/LLParser.cpp	/^bool LLParser::ParseGlobal(const std::string &Name, LocTy NameLoc,$/;"	f	class:LLParser
ParseGlobalCtors	Transforms/IPO/GlobalOpt.cpp	/^static std::vector<Function*> ParseGlobalCtors(GlobalVariable *GV) {$/;"	f	file:
ParseGlobalType	AsmParser/LLParser.cpp	/^bool LLParser::ParseGlobalType(bool &IsConstant) {$/;"	f	class:LLParser
ParseGlobalTypeAndValue	AsmParser/LLParser.cpp	/^bool LLParser::ParseGlobalTypeAndValue(Constant *&V) {$/;"	f	class:LLParser
ParseGlobalValue	AsmParser/LLParser.cpp	/^bool LLParser::ParseGlobalValue(Type *Ty, Constant *&C) {$/;"	f	class:LLParser
ParseGlobalValueVector	AsmParser/LLParser.cpp	/^bool LLParser::ParseGlobalValueVector(SmallVectorImpl<Constant*> &Elts) {$/;"	f	class:LLParser
ParseIDValue	TableGen/TGParser.cpp	/^Init *TGParser::ParseIDValue(Record *CurRec, IDParseMode Mode) {$/;"	f	class:TGParser
ParseIDValue	TableGen/TGParser.cpp	/^Init *TGParser::ParseIDValue(Record *CurRec,$/;"	f	class:TGParser
ParseIdentifier	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseIdentifier(StringRef &Res) {$/;"	f	class:AsmParser
ParseImmediate	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^MBlazeOperand *MBlazeAsmParser::ParseImmediate() {$/;"	f	class:MBlazeAsmParser
ParseIndexList	AsmParser/LLParser.cpp	/^bool LLParser::ParseIndexList(SmallVectorImpl<unsigned> &Indices,$/;"	f	class:LLParser
ParseIndexList	AsmParser/LLParser.h	/^    bool ParseIndexList(SmallVectorImpl<unsigned> &Indices) {$/;"	f	class:llvm::LLParser
ParseIndirectBr	AsmParser/LLParser.cpp	/^bool LLParser::ParseIndirectBr(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseInsertElement	AsmParser/LLParser.cpp	/^bool LLParser::ParseInsertElement(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseInsertValue	AsmParser/LLParser.cpp	/^int LLParser::ParseInsertValue(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseInstruction	AsmParser/LLParser.cpp	/^int LLParser::ParseInstruction(Instruction *&Inst, BasicBlock *BB,$/;"	f	class:LLParser
ParseInstruction	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::ParseInstruction(StringRef Name, SMLoc NameLoc,$/;"	f	class:ARMAsmParser
ParseInstruction	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^ParseInstruction(StringRef Name, SMLoc NameLoc,$/;"	f	class:MBlazeAsmParser
ParseInstruction	Target/Mips/AsmParser/MipsAsmParser.cpp	/^ParseInstruction(StringRef Name, SMLoc NameLoc,$/;"	f	class:MipsAsmParser
ParseInstruction	Target/X86/AsmParser/X86AsmParser.cpp	/^ParseInstruction(StringRef Name, SMLoc NameLoc,$/;"	f	class:X86AsmParser
ParseInstructionMetadata	AsmParser/LLParser.cpp	/^bool LLParser::ParseInstructionMetadata(Instruction *Inst,$/;"	f	class:LLParser
ParseIntelBracExpression	Target/X86/AsmParser/X86AsmParser.cpp	/^X86Operand *X86AsmParser::ParseIntelBracExpression(unsigned SegReg,$/;"	f	class:X86AsmParser
ParseIntelMemOperand	Target/X86/AsmParser/X86AsmParser.cpp	/^X86Operand *X86AsmParser::ParseIntelMemOperand(unsigned SegReg, SMLoc Start) {$/;"	f	class:X86AsmParser
ParseIntelOperand	Target/X86/AsmParser/X86AsmParser.cpp	/^X86Operand *X86AsmParser::ParseIntelOperand() {$/;"	f	class:X86AsmParser
ParseInvoke	AsmParser/LLParser.cpp	/^bool LLParser::ParseInvoke(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseLandingPad	AsmParser/LLParser.cpp	/^bool LLParser::ParseLandingPad(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseLetList	TableGen/TGParser.cpp	/^std::vector<LetRecord> TGParser::ParseLetList() {$/;"	f	class:TGParser
ParseLoad	AsmParser/LLParser.cpp	/^int LLParser::ParseLoad(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseLogical	AsmParser/LLParser.cpp	/^bool LLParser::ParseLogical(Instruction *&Inst, PerFunctionState &PFS,$/;"	f	class:LLParser
ParseMDNodeID	AsmParser/LLParser.cpp	/^bool LLParser::ParseMDNodeID(MDNode *&Result) {$/;"	f	class:LLParser
ParseMDNodeID	AsmParser/LLParser.cpp	/^bool LLParser::ParseMDNodeID(MDNode *&Result, unsigned &SlotNo) {$/;"	f	class:LLParser
ParseMDNodeVector	AsmParser/LLParser.cpp	/^bool LLParser::ParseMDNodeVector(SmallVectorImpl<Value*> &Elts,$/;"	f	class:LLParser
ParseMDString	AsmParser/LLParser.cpp	/^bool LLParser::ParseMDString(MDString *&Result) {$/;"	f	class:LLParser
ParseMSInlineAsm	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseMSInlineAsm(void *AsmLoc, std::string &AsmString,$/;"	f	class:AsmParser
ParseMacroArgument	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseMacroArgument(MacroArgument &MA,$/;"	f	class:AsmParser
ParseMacroArguments	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseMacroArguments(const Macro *M, MacroArguments &A) {$/;"	f	class:AsmParser
ParseMacroLikeBody	MC/MCParser/AsmParser.cpp	/^Macro *AsmParser::ParseMacroLikeBody(SMLoc DirectiveLoc) {$/;"	f	class:AsmParser
ParseMemOperand	Target/X86/AsmParser/X86AsmParser.cpp	/^X86Operand *X86AsmParser::ParseMemOperand(unsigned SegReg, SMLoc MemStart) {$/;"	f	class:X86AsmParser
ParseMemory	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^ParseMemory(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:MBlazeAsmParser
ParseMetadata	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseMetadata() {$/;"	f	class:BitcodeReader
ParseMetadataAttachment	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseMetadataAttachment() {$/;"	f	class:BitcodeReader
ParseMetadataListValue	AsmParser/LLParser.cpp	/^bool LLParser::ParseMetadataListValue(ValID &ID, PerFunctionState *PFS) {$/;"	f	class:LLParser
ParseMetadataValue	AsmParser/LLParser.cpp	/^bool LLParser::ParseMetadataValue(ValID &ID, PerFunctionState *PFS) {$/;"	f	class:LLParser
ParseMipsTriple	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	/^static std::string ParseMipsTriple(StringRef TT, StringRef CPU) {$/;"	f	file:
ParseModule	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseModule(bool Resume) {$/;"	f	class:BitcodeReader
ParseModuleAsm	AsmParser/LLParser.cpp	/^bool LLParser::ParseModuleAsm() {$/;"	f	class:LLParser
ParseModuleTriple	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseModuleTriple(std::string &Triple) {$/;"	f	class:BitcodeReader
ParseMultiClass	TableGen/TGParser.cpp	/^bool TGParser::ParseMultiClass() {$/;"	f	class:TGParser
ParseMultiClassID	TableGen/TGParser.cpp	/^MultiClass *TGParser::ParseMultiClassID() {$/;"	f	class:TGParser
ParseNameMode	TableGen/TGParser.h	/^    ParseNameMode,    \/\/ We are parsing a name of an object that does not yet$/;"	e	enum:llvm::TGParser::IDParseMode
ParseNamedGlobal	AsmParser/LLParser.cpp	/^bool LLParser::ParseNamedGlobal() {$/;"	f	class:LLParser
ParseNamedMetadata	AsmParser/LLParser.cpp	/^bool LLParser::ParseNamedMetadata() {$/;"	f	class:LLParser
ParseNamedType	AsmParser/LLParser.cpp	/^bool LLParser::ParseNamedType() {$/;"	f	class:LLParser
ParseObject	TableGen/TGParser.cpp	/^bool TGParser::ParseObject(MultiClass *MC) {$/;"	f	class:TGParser
ParseObjectBody	TableGen/TGParser.cpp	/^bool TGParser::ParseObjectBody(Record *CurRec) {$/;"	f	class:TGParser
ParseObjectList	TableGen/TGParser.cpp	/^bool TGParser::ParseObjectList(MultiClass *MC) {$/;"	f	class:TGParser
ParseObjectName	TableGen/TGParser.cpp	/^Init *TGParser::ParseObjectName(MultiClass *CurMultiClass) {$/;"	f	class:TGParser
ParseOperand	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^ParseOperand(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:MBlazeAsmParser
ParseOperand	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::ParseOperand(SmallVectorImpl<MCParsedAsmOperand*>&Operands,$/;"	f	class:MipsAsmParser
ParseOperand	Target/X86/AsmParser/X86AsmParser.cpp	/^X86Operand *X86AsmParser::ParseOperand() {$/;"	f	class:X86AsmParser
ParseOperation	TableGen/TGParser.cpp	/^Init *TGParser::ParseOperation(Record *CurRec) {$/;"	f	class:TGParser
ParseOperatorType	TableGen/TGParser.cpp	/^RecTy *TGParser::ParseOperatorType() {$/;"	f	class:TGParser
ParseOptionalAddrSpace	AsmParser/LLParser.cpp	/^bool LLParser::ParseOptionalAddrSpace(unsigned &AddrSpace) {$/;"	f	class:LLParser
ParseOptionalAlignment	AsmParser/LLParser.cpp	/^bool LLParser::ParseOptionalAlignment(unsigned &Alignment) {$/;"	f	class:LLParser
ParseOptionalAttrs	AsmParser/LLParser.cpp	/^bool LLParser::ParseOptionalAttrs(AttrBuilder &B, unsigned AttrKind) {$/;"	f	class:LLParser
ParseOptionalBitList	TableGen/TGParser.cpp	/^bool TGParser::ParseOptionalBitList(std::vector<unsigned> &Ranges) {$/;"	f	class:TGParser
ParseOptionalCallingConv	AsmParser/LLParser.cpp	/^bool LLParser::ParseOptionalCallingConv(CallingConv::ID &CC) {$/;"	f	class:LLParser
ParseOptionalCommaAlign	AsmParser/LLParser.cpp	/^bool LLParser::ParseOptionalCommaAlign(unsigned &Alignment,$/;"	f	class:LLParser
ParseOptionalLinkage	AsmParser/LLParser.cpp	/^bool LLParser::ParseOptionalLinkage(unsigned &Res, bool &HasLinkage) {$/;"	f	class:LLParser
ParseOptionalLinkage	AsmParser/LLParser.h	/^    bool ParseOptionalLinkage(unsigned &Linkage) {$/;"	f	class:llvm::LLParser
ParseOptionalRangeList	TableGen/TGParser.cpp	/^bool TGParser::ParseOptionalRangeList(std::vector<unsigned> &Ranges) {$/;"	f	class:TGParser
ParseOptionalStackAlignment	AsmParser/LLParser.cpp	/^bool LLParser::ParseOptionalStackAlignment(unsigned &Alignment) {$/;"	f	class:LLParser
ParseOptionalThreadLocal	AsmParser/LLParser.cpp	/^bool LLParser::ParseOptionalThreadLocal(GlobalVariable::ThreadLocalMode &TLM) {$/;"	f	class:LLParser
ParseOptionalToken	AsmParser/LLParser.h	/^    bool ParseOptionalToken(lltok::Kind T, bool &Present, LocTy *Loc = 0) {$/;"	f	class:llvm::LLParser
ParseOptionalVisibility	AsmParser/LLParser.cpp	/^bool LLParser::ParseOptionalVisibility(unsigned &Res) {$/;"	f	class:LLParser
ParsePHI	AsmParser/LLParser.cpp	/^int LLParser::ParsePHI(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseParameterList	AsmParser/LLParser.cpp	/^bool LLParser::ParseParameterList(SmallVectorImpl<ParamInfo> &ArgList,$/;"	f	class:LLParser
ParseParenExpr	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseParenExpr(const MCExpr *&Res, SMLoc &EndLoc) {$/;"	f	class:AsmParser
ParseParenExpression	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseParenExpression(const MCExpr *&Res, SMLoc &EndLoc) {$/;"	f	class:AsmParser
ParsePrimaryExpr	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParsePrimaryExpr(const MCExpr *&Res, SMLoc &EndLoc) {$/;"	f	class:AsmParser
ParseRangeList	TableGen/TGParser.cpp	/^std::vector<unsigned> TGParser::ParseRangeList() {$/;"	f	class:TGParser
ParseRangePiece	TableGen/TGParser.cpp	/^bool TGParser::ParseRangePiece(std::vector<unsigned> &Ranges) {$/;"	f	class:TGParser
ParseRegister	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::ParseRegister(unsigned &RegNo,$/;"	f	class:ARMAsmParser
ParseRegister	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^MBlazeOperand *MBlazeAsmParser::ParseRegister(unsigned &RegNo) {$/;"	f	class:MBlazeAsmParser
ParseRegister	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^bool MBlazeAsmParser::ParseRegister(unsigned &RegNo,$/;"	f	class:MBlazeAsmParser
ParseRegister	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::ParseRegister(unsigned &RegNo, SMLoc &StartLoc,$/;"	f	class:MipsAsmParser
ParseRegister	Target/X86/AsmParser/X86AsmParser.cpp	/^bool X86AsmParser::ParseRegister(unsigned &RegNo,$/;"	f	class:X86AsmParser
ParseRegisterOrRegisterNumber	MC/MCParser/AsmParser.cpp	/^bool GenericAsmParser::ParseRegisterOrRegisterNumber(int64_t &Register,$/;"	f	class:GenericAsmParser
ParseResult	MC/MCDisassembler/EDInst.h	/^  CachedResult ParseResult;$/;"	m	struct:llvm::EDInst
ParseResume	AsmParser/LLParser.cpp	/^bool LLParser::ParseResume(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseRet	AsmParser/LLParser.cpp	/^bool LLParser::ParseRet(Instruction *&Inst, BasicBlock *BB,$/;"	f	class:LLParser
ParseSEHDirectiveAllocStack	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveAllocStack(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveEndChained	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveEndChained(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveEndProc	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveEndProc(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveEndProlog	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveEndProlog(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveHandler	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveHandler(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveHandlerData	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveHandlerData(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseSEHDirectivePushFrame	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectivePushFrame(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseSEHDirectivePushReg	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectivePushReg(StringRef, SMLoc L) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveSaveReg	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveSaveReg(StringRef, SMLoc L) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveSaveXMM	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveSaveXMM(StringRef, SMLoc L) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveSetFrame	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveSetFrame(StringRef, SMLoc L) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveStartChained	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveStartChained(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseSEHDirectiveStartProc	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHDirectiveStartProc(StringRef, SMLoc) {$/;"	f	class:COFFAsmParser
ParseSEHRegisterNumber	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSEHRegisterNumber(unsigned &RegNo) {$/;"	f	class:COFFAsmParser
ParseScopeAndOrdering	AsmParser/LLParser.cpp	/^bool LLParser::ParseScopeAndOrdering(bool isAtomic, SynchronizationScope &Scope,$/;"	f	class:LLParser
ParseSectionDirectiveBSS	MC/MCParser/COFFAsmParser.cpp	/^  bool ParseSectionDirectiveBSS(StringRef, SMLoc) {$/;"	f	class:__anon210::COFFAsmParser	file:
ParseSectionDirectiveBSS	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveBSS(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveCString	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveCString(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveConst	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveConst(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveConstData	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveConstData(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveConstructor	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveConstructor(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveData	MC/MCParser/COFFAsmParser.cpp	/^  bool ParseSectionDirectiveData(StringRef, SMLoc) {$/;"	f	class:__anon210::COFFAsmParser	file:
ParseSectionDirectiveData	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveData(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveData	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveData(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveDataRel	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveDataRel(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveDataRelRo	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveDataRelRo(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveDataRelRoLocal	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveDataRelRoLocal(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveDestructor	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveDestructor(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveDyld	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveDyld(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveEhFrame	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveEhFrame(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveFVMLibInit0	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveFVMLibInit0(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveFVMLibInit1	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveFVMLibInit1(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveIdent	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveIdent(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveLazySymbolPointers	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveLazySymbolPointers(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveLiteral16	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveLiteral16(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveLiteral4	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveLiteral4(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveLiteral8	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveLiteral8(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveModInitFunc	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveModInitFunc(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveModTermFunc	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveModTermFunc(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveNonLazySymbolPointers	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveNonLazySymbolPointers(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCCatClsMeth	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCCatClsMeth(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCCatInstMeth	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCCatInstMeth(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCCategory	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCCategory(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCClass	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCClass(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCClassNames	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCClassNames(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCClassVars	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCClassVars(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCClsMeth	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCClsMeth(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCClsRefs	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCClsRefs(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCInstMeth	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCInstMeth(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCInstanceVars	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCInstanceVars(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCMessageRefs	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCMessageRefs(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCMetaClass	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCMetaClass(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCMethVarNames	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCMethVarNames(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCMethVarTypes	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCMethVarTypes(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCModuleInfo	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCModuleInfo(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCProtocol	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCProtocol(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCSelectorStrs	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCSelectorStrs(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCStringObject	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCStringObject(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveObjCSymbols	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveObjCSymbols(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectivePICSymbolStub	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectivePICSymbolStub(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveRoData	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveRoData(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveStaticConst	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveStaticConst(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveStaticData	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveStaticData(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveSymbolStub	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveSymbolStub(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveTBSS	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveTBSS(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveTData	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveTData(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveTData	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveTData(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveTLV	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveTLV(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveText	MC/MCParser/COFFAsmParser.cpp	/^  bool ParseSectionDirectiveText(StringRef, SMLoc) {$/;"	f	class:__anon210::COFFAsmParser	file:
ParseSectionDirectiveText	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveText(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionDirectiveText	MC/MCParser/ELFAsmParser.cpp	/^  bool ParseSectionDirectiveText(StringRef, SMLoc) {$/;"	f	class:__anon209::ELFAsmParser
ParseSectionDirectiveThreadInitFunc	MC/MCParser/DarwinAsmParser.cpp	/^  bool ParseSectionDirectiveThreadInitFunc(StringRef, SMLoc) {$/;"	f	class:__anon208::DarwinAsmParser
ParseSectionName	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseSectionName(StringRef &SectionName) {$/;"	f	class:ELFAsmParser
ParseSectionSpecifier	MC/MCSectionMachO.cpp	/^std::string MCSectionMachO::ParseSectionSpecifier(StringRef Spec,        \/\/ In.$/;"	f	class:MCSectionMachO
ParseSectionSwitch	MC/MCParser/COFFAsmParser.cpp	/^bool COFFAsmParser::ParseSectionSwitch(StringRef Section,$/;"	f	class:COFFAsmParser
ParseSectionSwitch	MC/MCParser/DarwinAsmParser.cpp	/^bool DarwinAsmParser::ParseSectionSwitch(const char *Segment,$/;"	f	class:DarwinAsmParser
ParseSectionSwitch	MC/MCParser/ELFAsmParser.cpp	/^bool ELFAsmParser::ParseSectionSwitch(StringRef Section, unsigned Type,$/;"	f	class:ELFAsmParser
ParseSelect	AsmParser/LLParser.cpp	/^bool LLParser::ParseSelect(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseShuffleVector	AsmParser/LLParser.cpp	/^bool LLParser::ParseShuffleVector(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseSimpleValue	TableGen/TGParser.cpp	/^Init *TGParser::ParseSimpleValue(Record *CurRec, RecTy *ItemType,$/;"	f	class:TGParser
ParseStandaloneMetadata	AsmParser/LLParser.cpp	/^bool LLParser::ParseStandaloneMetadata() {$/;"	f	class:LLParser
ParseStatement	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ParseStatement() {$/;"	f	class:AsmParser
ParseStore	AsmParser/LLParser.cpp	/^int LLParser::ParseStore(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseStringConstant	AsmParser/LLParser.cpp	/^bool LLParser::ParseStringConstant(std::string &Result) {$/;"	f	class:LLParser
ParseStringToComma	MC/MCParser/AsmParser.cpp	/^StringRef AsmParser::ParseStringToComma() {$/;"	f	class:AsmParser
ParseStringToEndOfStatement	MC/MCParser/AsmParser.cpp	/^StringRef AsmParser::ParseStringToEndOfStatement() {$/;"	f	class:AsmParser
ParseStructBody	AsmParser/LLParser.cpp	/^bool LLParser::ParseStructBody(SmallVectorImpl<Type*> &Body) {$/;"	f	class:LLParser
ParseStructDefinition	AsmParser/LLParser.cpp	/^bool LLParser::ParseStructDefinition(SMLoc TypeLoc, StringRef Name,$/;"	f	class:LLParser
ParseSubClassReference	TableGen/TGParser.cpp	/^ParseSubClassReference(Record *CurRec, bool isDefm) {$/;"	f	class:TGParser
ParseSubMultiClassReference	TableGen/TGParser.cpp	/^ParseSubMultiClassReference(MultiClass *CurMC) {$/;"	f	class:TGParser
ParseSwitch	AsmParser/LLParser.cpp	/^bool LLParser::ParseSwitch(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseTLSModel	AsmParser/LLParser.cpp	/^bool LLParser::ParseTLSModel(GlobalVariable::ThreadLocalMode &TLM) {$/;"	f	class:LLParser
ParseTargetDefinition	AsmParser/LLParser.cpp	/^bool LLParser::ParseTargetDefinition() {$/;"	f	class:LLParser
ParseTemplateArgList	TableGen/TGParser.cpp	/^bool TGParser::ParseTemplateArgList(Record *CurRec) {$/;"	f	class:TGParser
ParseToken	AsmParser/LLParser.cpp	/^bool LLParser::ParseToken(lltok::Kind T, const char *ErrMsg) {$/;"	f	class:LLParser
ParseTopLevelEntities	AsmParser/LLParser.cpp	/^bool LLParser::ParseTopLevelEntities() {$/;"	f	class:LLParser
ParseTopLevelLet	TableGen/TGParser.cpp	/^bool TGParser::ParseTopLevelLet(MultiClass *CurMultiClass) {$/;"	f	class:TGParser
ParseTriple	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseTriple(std::string &Triple) {$/;"	f	class:BitcodeReader
ParseType	AsmParser/LLParser.cpp	/^bool LLParser::ParseType(Type *&Result, bool AllowVoid) {$/;"	f	class:LLParser
ParseType	AsmParser/LLParser.h	/^    bool ParseType(Type *&Result, LocTy &Loc, bool AllowVoid = false) {$/;"	f	class:llvm::LLParser
ParseType	TableGen/TGParser.cpp	/^RecTy *TGParser::ParseType() {$/;"	f	class:TGParser
ParseTypeAndBasicBlock	AsmParser/LLParser.cpp	/^bool LLParser::ParseTypeAndBasicBlock(BasicBlock *&BB, LocTy &Loc,$/;"	f	class:LLParser
ParseTypeAndBasicBlock	AsmParser/LLParser.h	/^    bool ParseTypeAndBasicBlock(BasicBlock *&BB, PerFunctionState &PFS) {$/;"	f	class:llvm::LLParser
ParseTypeAndValue	AsmParser/LLParser.cpp	/^bool LLParser::ParseTypeAndValue(Value *&V, PerFunctionState *PFS) {$/;"	f	class:LLParser
ParseTypeAndValue	AsmParser/LLParser.h	/^    bool ParseTypeAndValue(Value *&V, LocTy &Loc, PerFunctionState &PFS) {$/;"	f	class:llvm::LLParser
ParseTypeAndValue	AsmParser/LLParser.h	/^    bool ParseTypeAndValue(Value *&V, PerFunctionState &PFS) {$/;"	f	class:llvm::LLParser
ParseTypeTable	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseTypeTable() {$/;"	f	class:BitcodeReader
ParseTypeTableBody	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseTypeTableBody() {$/;"	f	class:BitcodeReader
ParseUInt32	AsmParser/LLParser.cpp	/^bool LLParser::ParseUInt32(unsigned &Val) {$/;"	f	class:LLParser
ParseUInt32	AsmParser/LLParser.h	/^    bool ParseUInt32(unsigned &Val, LocTy &Loc) {$/;"	f	class:llvm::LLParser
ParseUnnamedGlobal	AsmParser/LLParser.cpp	/^bool LLParser::ParseUnnamedGlobal() {$/;"	f	class:LLParser
ParseUnnamedType	AsmParser/LLParser.cpp	/^bool LLParser::ParseUnnamedType() {$/;"	f	class:LLParser
ParseUseLists	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseUseLists() {$/;"	f	class:BitcodeReader
ParseVA_Arg	AsmParser/LLParser.cpp	/^bool LLParser::ParseVA_Arg(Instruction *&Inst, PerFunctionState &PFS) {$/;"	f	class:LLParser
ParseValID	AsmParser/LLParser.cpp	/^bool LLParser::ParseValID(ValID &ID, PerFunctionState *PFS) {$/;"	f	class:LLParser
ParseValue	AsmParser/LLParser.cpp	/^bool LLParser::ParseValue(Type *Ty, Value *&V, PerFunctionState *PFS) {$/;"	f	class:LLParser
ParseValue	AsmParser/LLParser.h	/^    bool ParseValue(Type *Ty, Value *&V, LocTy &Loc,$/;"	f	class:llvm::LLParser
ParseValue	AsmParser/LLParser.h	/^    bool ParseValue(Type *Ty, Value *&V, PerFunctionState &PFS) {$/;"	f	class:llvm::LLParser
ParseValue	TableGen/TGParser.cpp	/^Init *TGParser::ParseValue(Record *CurRec, RecTy *ItemType, IDParseMode Mode) {$/;"	f	class:TGParser
ParseValueList	TableGen/TGParser.cpp	/^std::vector<Init*> TGParser::ParseValueList(Record *CurRec, Record *ArgsRec,$/;"	f	class:TGParser
ParseValueMode	TableGen/TGParser.h	/^    ParseValueMode,   \/\/ We are parsing a value we expect to look up.$/;"	e	enum:llvm::TGParser::IDParseMode
ParseValueSymbolTable	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ParseValueSymbolTable() {$/;"	f	class:BitcodeReader
ParseX86Triple	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^std::string X86_MC::ParseX86Triple(StringRef TT) {$/;"	f	class:X86_MC
ParsedOperands	MC/MCParser/AsmParser.cpp	/^  SmallVector<MCParsedAsmOperand*, 8> ParsedOperands;$/;"	m	class:__anon211::AsmParser	file:
Parser	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  MCAsmParser &Parser;$/;"	m	class:__anon259::ARMAsmParser	file:
Parser	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  MCAsmParser &Parser;$/;"	m	class:__anon446::MBlazeAsmParser	file:
Parser	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  MCAsmParser &Parser;$/;"	m	class:__anon422::MipsAsmParser	file:
Parser	Target/X86/AsmParser/X86AsmParser.cpp	/^  MCAsmParser &Parser;$/;"	m	class:__anon335::X86AsmParser	file:
ParserMutex	MC/MCDisassembler/EDDisassembler.h	/^  llvm::sys::Mutex ParserMutex;$/;"	m	struct:llvm::EDDisassembler
ParsingInlineAsm	MC/MCParser/AsmParser.cpp	/^  bool ParsingInlineAsm;$/;"	m	class:__anon211::AsmParser	file:
PartFlag	Target/ARM/Thumb2SizeReduction.cpp	/^    unsigned PartFlag : 1; \/\/ 16-bit instruction does partial flag update$/;"	m	struct:__anon300::ReduceEntry	file:
Partial	Analysis/AliasAnalysisCounter.cpp	/^    unsigned No, May, Partial, Must;$/;"	m	class:__anon43::AliasAnalysisCounter	file:
Partial	CodeGen/RegisterCoalescer.h	/^    bool Partial;$/;"	m	class:llvm::CoalescerPair
Partial	Transforms/Scalar/ObjCARC.cpp	/^    bool Partial;$/;"	m	class:__anon506::PtrState	file:
PartialAlias	Analysis/AliasAnalysisEvaluator.cpp	/^    unsigned NoAlias, MayAlias, PartialAlias, MustAlias;$/;"	m	class:__anon47::AAEval	file:
PartialInliner	Transforms/IPO/PartialInlining.cpp	/^    PartialInliner() : ModulePass(ID) {$/;"	f	struct:__anon592::PartialInliner
PartialInliner	Transforms/IPO/PartialInlining.cpp	/^  struct PartialInliner : public ModulePass {$/;"	s	namespace:__anon592	file:
Partition	Transforms/Scalar/SROA.cpp	/^    Partition() : ByteRange(), IsSplittable() {}$/;"	f	struct:__anon557::AllocaPartitioning::Partition
Partition	Transforms/Scalar/SROA.cpp	/^    Partition(uint64_t BeginOffset, uint64_t EndOffset, bool IsSplittable)$/;"	f	struct:__anon557::AllocaPartitioning::Partition
Partition	Transforms/Scalar/SROA.cpp	/^  struct Partition : public ByteRange {$/;"	s	class:__anon557::AllocaPartitioning	file:
PartitionBuilder	Transforms/Scalar/SROA.cpp	/^  PartitionBuilder(const DataLayout &TD, AllocaInst &AI, AllocaPartitioning &P)$/;"	f	class:AllocaPartitioning::PartitionBuilder
PartitionBuilder	Transforms/Scalar/SROA.cpp	/^class AllocaPartitioning::PartitionBuilder$/;"	c	class:AllocaPartitioning	file:
PartitionUse	Transforms/Scalar/SROA.cpp	/^    PartitionUse() : ByteRange(), U() {}$/;"	f	struct:__anon557::AllocaPartitioning::PartitionUse
PartitionUse	Transforms/Scalar/SROA.cpp	/^    PartitionUse(uint64_t BeginOffset, uint64_t EndOffset, Use *U)$/;"	f	struct:__anon557::AllocaPartitioning::PartitionUse
PartitionUse	Transforms/Scalar/SROA.cpp	/^  struct PartitionUse : public ByteRange {$/;"	s	class:__anon557::AllocaPartitioning	file:
Partitions	Transforms/Scalar/SROA.cpp	/^  SmallVector<Partition, 8> Partitions;$/;"	m	class:__anon557::AllocaPartitioning	file:
Pass	Transforms/Scalar/SROA.cpp	/^  SROA &Pass;$/;"	m	class:__anon560::PHIOrSelectSpeculator	file:
Pass	Transforms/Scalar/SROA.cpp	/^  SROA &Pass;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
PassByValArg64	Target/Mips/MipsISelLowering.cpp	/^PassByValArg64(SDValue Chain, DebugLoc dl,$/;"	f	file:
PassConfigImpl	CodeGen/Passes.cpp	/^class PassConfigImpl {$/;"	c	namespace:llvm	file:
PassDebugLevel	VMCore/PassManager.cpp	/^enum PassDebugLevel {$/;"	g	namespace:llvm	file:
PassF64ArgInRegs	Target/ARM/ARMISelLowering.cpp	/^void ARMTargetLowering::PassF64ArgInRegs(DebugLoc dl, SelectionDAG &DAG,$/;"	f	class:ARMTargetLowering
PassInfoMap	VMCore/PassRegistry.cpp	/^  MapType PassInfoMap;$/;"	m	struct:__anon607::PassRegistryImpl	file:
PassInfoStringMap	VMCore/PassRegistry.cpp	/^  StringMapType PassInfoStringMap;$/;"	m	struct:__anon607::PassRegistryImpl	file:
PassManager	VMCore/PassManager.cpp	/^PassManager::PassManager() {$/;"	f	class:PassManager
PassManagerBuilder	Transforms/IPO/PassManagerBuilder.cpp	/^PassManagerBuilder::PassManagerBuilder() {$/;"	f	class:PassManagerBuilder
PassManagerImpl	VMCore/PassManager.cpp	/^  explicit PassManagerImpl() :$/;"	f	class:llvm::PassManagerImpl
PassManagerImpl	VMCore/PassManager.cpp	/^class PassManagerImpl : public Pass,$/;"	c	namespace:llvm	file:
PassOptionList	VMCore/PassManager.cpp	/^PassOptionList;$/;"	t	namespace:llvm	file:
PassRegistrationListener	VMCore/Pass.cpp	/^PassRegistrationListener::PassRegistrationListener() {$/;"	f	class:PassRegistrationListener
PassRegistryImpl	VMCore/PassRegistry.cpp	/^struct PassRegistryImpl {$/;"	s	namespace:__anon607	file:
PassRegistryObj	VMCore/PassRegistry.cpp	/^static ManagedStatic<PassRegistry> PassRegistryObj;$/;"	v	file:
PathProfileInfo	Analysis/PathProfileInfo.cpp	/^PathProfileInfo::PathProfileInfo () : _currentDag(0) , _currentFunction(0) {$/;"	f	class:PathProfileInfo
PathProfileLoaderPass	Analysis/PathProfileInfo.cpp	/^    PathProfileLoaderPass() : ModulePass(ID) { }$/;"	f	class:__anon40::PathProfileLoaderPass
PathProfileLoaderPass	Analysis/PathProfileInfo.cpp	/^  class PathProfileLoaderPass : public ModulePass, public PathProfileInfo {$/;"	c	namespace:__anon40	file:
PathProfileLoaderPassID	Analysis/PathProfileInfo.cpp	/^char &llvm::PathProfileLoaderPassID = PathProfileLoaderPass::ID;$/;"	m	class:llvm	file:
PathProfileVerifier	Analysis/PathProfileVerifier.cpp	/^    PathProfileVerifier() : ModulePass(ID) {$/;"	f	class:__anon29::PathProfileVerifier
PathProfileVerifier	Analysis/PathProfileVerifier.cpp	/^  class PathProfileVerifier : public ModulePass {$/;"	c	namespace:__anon29	file:
PathProfiler	Transforms/Instrumentation/PathProfiling.cpp	/^  PathProfiler() : ModulePass(ID) {$/;"	f	class:__anon488::PathProfiler
PathProfiler	Transforms/Instrumentation/PathProfiling.cpp	/^class PathProfiler : public ModulePass {$/;"	c	namespace:__anon488	file:
PathProfilingFunctionTable	Transforms/Instrumentation/PathProfiling.cpp	/^  class PathProfilingFunctionTable {};$/;"	c	namespace:llvm	file:
Paths	ExecutionEngine/EventListenerCommon.h	/^  DenseMap<AssertingVH<MDNode>, std::string> Paths;$/;"	m	class:llvm::jitprofiling::FilenameCache
PeepholeOptimizer	CodeGen/PeepholeOptimizer.cpp	/^    PeepholeOptimizer() : MachineFunctionPass(ID) {$/;"	f	class:__anon163::PeepholeOptimizer
PeepholeOptimizer	CodeGen/PeepholeOptimizer.cpp	/^  class PeepholeOptimizer : public MachineFunctionPass {$/;"	c	namespace:__anon163	file:
PeepholeOptimizerID	CodeGen/PeepholeOptimizer.cpp	/^char &llvm::PeepholeOptimizerID = PeepholeOptimizer::ID;$/;"	m	class:llvm	file:
Penalty	Transforms/Instrumentation/BoundsChecking.cpp	/^    unsigned Penalty;$/;"	m	struct:__anon493::BoundsChecking	file:
Pending	Analysis/ScalarEvolution.cpp	/^  bool Pending;$/;"	m	struct:MarkPendingLoopPredicate	file:
Pending	CodeGen/MachineScheduler.cpp	/^    ReadyQueue Pending;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
Pending	Target/Hexagon/HexagonMachineScheduler.h	/^    ReadyQueue Pending;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
PendingExports	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  SmallVector<SDValue, 8> PendingExports;$/;"	m	class:llvm::SelectionDAGBuilder
PendingFunctions	ExecutionEngine/JIT/JIT.h	/^  std::vector<AssertingVH<Function> > PendingFunctions;$/;"	m	class:llvm::JITState
PendingLoads	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  SmallVector<SDValue, 8> PendingLoads;$/;"	m	class:llvm::SelectionDAGBuilder
PendingQueue	CodeGen/PostRASchedulerList.cpp	/^    std::vector<SUnit*> PendingQueue;$/;"	m	class:__anon102::SchedulePostRATDList	file:
PendingQueue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  std::vector<SUnit*> PendingQueue;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
PendingQueue	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^  std::vector<SUnit*> PendingQueue;$/;"	m	class:__anon84::ScheduleDAGVLIW	file:
PendingST	Target/X86/X86FloatingPoint.cpp	/^    unsigned char PendingST[8];$/;"	m	struct:__anon386::FPS	file:
PerFunctionState	AsmParser/LLParser.cpp	/^LLParser::PerFunctionState::PerFunctionState(LLParser &p, Function &f,$/;"	f	class:LLParser::PerFunctionState
PerFunctionState	AsmParser/LLParser.h	/^    class PerFunctionState {$/;"	c	class:llvm::LLParser
PerPtrBottomUp	Transforms/Scalar/ObjCARC.cpp	/^    MapTy PerPtrBottomUp;$/;"	m	class:__anon507::BBState	file:
PerPtrTopDown	Transforms/Scalar/ObjCARC.cpp	/^    MapTy PerPtrTopDown;$/;"	m	class:__anon507::BBState	file:
PerfectShuffleTable	Target/ARM/ARMPerfectShuffle.h	/^static const unsigned PerfectShuffleTable[6561+1] = {$/;"	v
PerfectShuffleTable	Target/PowerPC/PPCPerfectShuffle.h	/^static const unsigned PerfectShuffleTable[6561+1] = {$/;"	v
PerformADCCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformADCCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformADDCCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformADDCCombine(SDNode *N,$/;"	f	file:
PerformADDCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformADDCombine(SDNode *N,$/;"	f	file:
PerformADDCombine	Target/Mips/MipsISelLowering.cpp	/^static SDValue PerformADDCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformADDCombineWithOperands	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformADDCombineWithOperands(SDNode *N, SDValue N0, SDValue N1,$/;"	f	file:
PerformADDECombine	Target/Mips/MipsISelLowering.cpp	/^static SDValue PerformADDECombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformANDCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformANDCombine(SDNode *N,$/;"	f	file:
PerformANDCombine	Target/Mips/MipsISelLowering.cpp	/^static SDValue PerformANDCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformAddCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformAddCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformAndCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformAndCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformBFICombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformBFICombine(SDNode *N,$/;"	f	file:
PerformBTCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformBTCombine(SDNode *N,$/;"	f	file:
PerformBUILD_VECTORCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformBUILD_VECTORCombine(SDNode *N,$/;"	f	file:
PerformBrCondCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformBrCondCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformCMOVCombine	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::PerformCMOVCombine(SDNode *N, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
PerformCMOVCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformCMOVCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformCSE	CodeGen/MachineCSE.cpp	/^bool MachineCSE::PerformCSE(MachineDomTreeNode *Node) {$/;"	f	class:MachineCSE
PerformCodePlacement	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::PerformCodePlacement(DenseMap<const BasicBlock *, BBState>$/;"	f	class:ObjCARCOpt
PerformDAGCombine	CodeGen/SelectionDAG/TargetLowering.cpp	/^PerformDAGCombine(SDNode *N, DAGCombinerInfo &DCI) const {$/;"	f	class:TargetLowering
PerformDAGCombine	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::PerformDAGCombine(SDNode *N,$/;"	f	class:ARMTargetLowering
PerformDAGCombine	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::PerformDAGCombine(SDNode *N, DAGCombinerInfo &DCI) const$/;"	f	class:SPUTargetLowering
PerformDAGCombine	Target/Mips/MipsISelLowering.cpp	/^SDValue  MipsTargetLowering::PerformDAGCombine(SDNode *N, DAGCombinerInfo &DCI)$/;"	f	class:MipsTargetLowering
PerformDAGCombine	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPCTargetLowering::PerformDAGCombine(SDNode *N,$/;"	f	class:PPCTargetLowering
PerformDAGCombine	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::PerformDAGCombine(SDNode *N,$/;"	f	class:X86TargetLowering
PerformDAGCombine	Target/XCore/XCoreISelLowering.cpp	/^SDValue XCoreTargetLowering::PerformDAGCombine(SDNode *N,$/;"	f	class:XCoreTargetLowering
PerformDefaultLowering	CodeGen/GCStrategy.cpp	/^bool LowerIntrinsics::PerformDefaultLowering(Function &F, GCStrategy &S) {$/;"	f	class:LowerIntrinsics
PerformDivRemCombine	Target/Mips/MipsISelLowering.cpp	/^static SDValue PerformDivRemCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformEXTRACT_VECTOR_ELTCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformEXTRACT_VECTOR_ELTCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformExpensiveChecks	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::PerformExpensiveChecks() {$/;"	f	class:DAGTypeLegalizer
PerformExtendCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformExtendCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformFADDCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformFADDCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformFANDCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformFANDCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformFMACombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformFMACombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformFMinFMaxCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformFMinFMaxCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformFORCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformFORCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformFSUBCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformFSUBCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformHeapAllocSRoA	Transforms/IPO/GlobalOpt.cpp	/^static GlobalVariable *PerformHeapAllocSRoA(GlobalVariable *GV, CallInst *CI,$/;"	f	file:
PerformISDSETCCCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformISDSETCCCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformInsertEltCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformInsertEltCombine(SDNode *N,$/;"	f	file:
PerformInsertVectorEltInMemory	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^PerformInsertVectorEltInMemory(SDValue Vec, SDValue Val, SDValue Idx,$/;"	f	class:SelectionDAGLegalize
PerformIntrinsicCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformIntrinsicCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformLOADCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformLOADCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformMULCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformMULCombine(SDNode *N,$/;"	f	file:
PerformMulCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformMulCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformORCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformORCombine(SDNode *N,$/;"	f	file:
PerformORCombine	Target/Mips/MipsISelLowering.cpp	/^static SDValue PerformORCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformOrCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformOrCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformSELECTCombine	Target/Mips/MipsISelLowering.cpp	/^static SDValue PerformSELECTCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformSELECTCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformSELECTCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformSELECT_CCCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformSELECT_CCCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformSETCCCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformSETCCCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformSExtCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformSExtCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformSHLCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformSHLCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformSINT_TO_FPCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformSINT_TO_FPCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformSTORECombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformSTORECombine(SDNode *N,$/;"	f	file:
PerformSTORECombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformSTORECombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformSUBCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformSUBCombine(SDNode *N,$/;"	f	file:
PerformSUBECombine	Target/Mips/MipsISelLowering.cpp	/^static SDValue PerformSUBECombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformShiftCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformShiftCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformShiftCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformShiftCombine(SDNode* N, SelectionDAG &DAG,$/;"	f	file:
PerformShuffleCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformShuffleCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformShuffleCombine256	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformShuffleCombine256(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformSubCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformSubCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformTrivialCoalescing	CodeGen/MachineCSE.cpp	/^bool MachineCSE::PerformTrivialCoalescing(MachineInstr *MI,$/;"	f	class:MachineCSE
PerformTrivialForwardCoalescing	CodeGen/MachineSink.cpp	/^bool MachineSinking::PerformTrivialForwardCoalescing(MachineInstr *MI,$/;"	f	class:MachineSinking
PerformTruncateCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformTruncateCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformUINT_TO_FPCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformUINT_TO_FPCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformVCVTCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformVCVTCombine(SDNode *N,$/;"	f	file:
PerformVDIVCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformVDIVCombine(SDNode *N,$/;"	f	file:
PerformVDUPLANECombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformVDUPLANECombine(SDNode *N,$/;"	f	file:
PerformVECTOR_SHUFFLECombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformVECTOR_SHUFFLECombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformVMOVDRRCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformVMOVDRRCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformVMOVRRDCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformVMOVRRDCombine(SDNode *N,$/;"	f	file:
PerformVMULCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformVMULCombine(SDNode *N,$/;"	f	file:
PerformVZEXT_MOVLCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformVZEXT_MOVLCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
PerformXORCombine	Target/ARM/ARMISelLowering.cpp	/^static SDValue PerformXORCombine(SDNode *N,$/;"	f	file:
PerformXorCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformXorCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PerformZExtCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue PerformZExtCombine(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
PermStr	MC/MCDisassembler/EDToken.h	/^  std::string PermStr;$/;"	m	struct:llvm::EDToken
Personality	MC/MCDwarf.cpp	/^    const MCSymbol* Personality;$/;"	m	struct:__anon224::CIEKey	file:
PersonalityEncoding	MC/MCDwarf.cpp	/^    unsigned PersonalityEncoding;$/;"	m	struct:__anon224::CIEKey	file:
PersonalityFn	CodeGen/SjLjEHPrepare.cpp	/^    Value *PersonalityFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
PersonalityFn	VMCore/Verifier.cpp	/^    const Value *PersonalityFn;$/;"	m	struct:__anon610::Verifier	file:
Personality_Type	Transforms/InstCombine/InstructionCombining.cpp	/^enum Personality_Type {$/;"	g	file:
PhiT	CodeGen/MachineSSAUpdater.cpp	/^  typedef MachineInstr PhiT;$/;"	t	class:llvm::SSAUpdaterTraits	file:
PhiT	Transforms/Utils/SSAUpdater.cpp	/^  typedef PHINode PhiT;$/;"	t	class:llvm::SSAUpdaterTraits	file:
PhiToAllocaMap	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    DenseMap<PHINode*, unsigned> PhiToAllocaMap;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
PhysReg	CodeGen/InterferenceCache.h	/^    unsigned PhysReg;$/;"	m	class:llvm::InterferenceCache::Entry
PhysReg	CodeGen/RegAllocFast.cpp	/^      unsigned PhysReg;         \/\/ Currently held here.$/;"	m	struct:__anon140::RAFast::LiveReg	file:
PhysReg	CodeGen/RegAllocGreedy.cpp	/^    unsigned PhysReg;$/;"	m	struct:__anon158::RAGreedy::GlobalSplitCandidate	file:
PhysRegDefsReach	CodeGen/MachineCSE.cpp	/^bool MachineCSE::PhysRegDefsReach(MachineInstr *CSMI, MachineInstr *MI,$/;"	f	class:MachineCSE
PhysRegEntries	CodeGen/InterferenceCache.h	/^  SmallVector<unsigned char, 2> PhysRegEntries;$/;"	m	class:llvm::InterferenceCache
PhysRegOperands	CodeGen/RegisterPressure.cpp	/^typedef RegisterOperands<false> PhysRegOperands;$/;"	t	file:
PhysRegState	CodeGen/RegAllocFast.cpp	/^    std::vector<unsigned> PhysRegState;$/;"	m	class:__anon140::RAFast	file:
PickMostRelevantLoop	Analysis/ScalarEvolutionExpander.cpp	/^static const Loop *PickMostRelevantLoop(const Loop *A, const Loop *B,$/;"	f	file:
PickNodeToScheduleBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^SUnit *ScheduleDAGRRList::PickNodeToScheduleBottomUp() {$/;"	f	class:ScheduleDAGRRList
Picker	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  SF Picker;$/;"	m	class:__anon77::RegReductionPriorityQueue	file:
PlaceBlocks	Transforms/Scalar/BasicBlockPlacement.cpp	/^void BlockPlacement::PlaceBlocks(BasicBlock *BB) {$/;"	f	class:BlockPlacement
PlaceDbgValues	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::PlaceDbgValues(Function &F) {$/;"	f	class:CodeGenPrepare
PlaceSplitBlockCarefully	Transforms/Utils/LoopSimplify.cpp	/^void LoopSimplify::PlaceSplitBlockCarefully(BasicBlock *NewBB,$/;"	f	class:LoopSimplify
PlacedBlocks	Transforms/Scalar/BasicBlockPlacement.cpp	/^    std::set<BasicBlock*> PlacedBlocks;$/;"	m	struct:__anon528::BlockPlacement	file:
PlacedChain	CodeGen/MachineBlockPlacement.cpp	/^  const BlockChain &PlacedChain;$/;"	m	class:__anon108::IsBlockPlaced	file:
PlatformParser	MC/MCParser/AsmParser.cpp	/^  MCAsmParserExtension *PlatformParser;$/;"	m	class:__anon211::AsmParser	file:
Plugins	Support/PluginLoader.cpp	/^static ManagedStatic<std::vector<std::string> > Plugins;$/;"	v	file:
PluginsLock	Support/PluginLoader.cpp	/^static ManagedStatic<sys::SmartMutex<true> > PluginsLock;$/;"	v	file:
PointerAllocaValues	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    std::vector<Value*> PointerAllocaValues;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
PointerEscapingInstr	Transforms/Scalar/SROA.cpp	/^  Instruction *PointerEscapingInstr;$/;"	m	class:__anon557::AllocaPartitioning	file:
PointerMayBeCaptured	Analysis/CaptureTracking.cpp	/^bool llvm::PointerMayBeCaptured(const Value *V,$/;"	f	class:llvm
PointerMayBeCaptured	Analysis/CaptureTracking.cpp	/^void llvm::PointerMayBeCaptured(const Value *V, CaptureTracker *Tracker) {$/;"	f	class:llvm
PointerMustAliases	Transforms/Scalar/LICM.cpp	/^    SmallPtrSet<Value*, 4> &PointerMustAliases;$/;"	m	class:__anon569::LoopPromoter	file:
PointerStripKind	VMCore/Value.cpp	/^enum PointerStripKind {$/;"	g	namespace:__anon618	file:
PointerType	VMCore/Type.cpp	/^PointerType::PointerType(Type *E, unsigned AddrSpace)$/;"	f	class:PointerType
PointerTypes	VMCore/LLVMContextImpl.h	/^  DenseMap<Type*, PointerType*> PointerTypes;  \/\/ Pointers in AddrSpace = 0$/;"	m	class:llvm::LLVMContextImpl
PoisonMemory	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    bool PoisonMemory;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
PoisonShadowPartialRightRedzone	Transforms/Instrumentation/AddressSanitizer.cpp	/^static void PoisonShadowPartialRightRedzone(uint8_t *Shadow,$/;"	f	file:
PoisonStack	Transforms/Instrumentation/AddressSanitizer.cpp	/^void AddressSanitizer::PoisonStack(const ArrayRef<AllocaInst*> &AllocaVec,$/;"	f	class:AddressSanitizer
Pool	Target/NVPTX/ManagedStringPool.h	/^  SmallVector<std::string *, 8> Pool;$/;"	m	class:llvm::ManagedStringPool
PopTable	Target/X86/X86FloatingPoint.cpp	/^static const TableEntry PopTable[] = {$/;"	v	file:
Pos	CodeGen/AllocationOrder.h	/^  const unsigned *Pos;$/;"	m	class:llvm::AllocationOrder
Position	Target/ARM/ARMLoadStoreOptimizer.cpp	/^      unsigned Position;$/;"	m	struct:__anon303::ARMLoadStoreOpt::MemOpQueueEntry	file:
PosixZeroTime	Support/TimeValue.cpp	/^const TimeValue TimeValue::PosixZeroTime = TimeValue ( -946684800,0 );$/;"	m	class:llvm::TimeValue	file:
PostAlign	Target/ARM/ARMConstantIslandPass.cpp	/^      uint8_t PostAlign;$/;"	m	struct:__anon310::ARMConstantIslands::BasicBlockInfo	file:
PostDomOnlyPrinter	Analysis/DomPrinter.cpp	/^  PostDomOnlyPrinter() :$/;"	f	struct:__anon50::PostDomOnlyPrinter
PostDomOnlyPrinter	Analysis/DomPrinter.cpp	/^struct PostDomOnlyPrinter$/;"	s	namespace:__anon50	file:
PostDomOnlyViewer	Analysis/DomPrinter.cpp	/^  PostDomOnlyViewer() :$/;"	f	struct:__anon49::PostDomOnlyViewer
PostDomOnlyViewer	Analysis/DomPrinter.cpp	/^struct PostDomOnlyViewer$/;"	s	namespace:__anon49	file:
PostDomPrinter	Analysis/DomPrinter.cpp	/^  PostDomPrinter() :$/;"	f	struct:__anon50::PostDomPrinter
PostDomPrinter	Analysis/DomPrinter.cpp	/^struct PostDomPrinter$/;"	s	namespace:__anon50	file:
PostDomViewer	Analysis/DomPrinter.cpp	/^  PostDomViewer() :$/;"	f	struct:__anon49::PostDomViewer
PostDomViewer	Analysis/DomPrinter.cpp	/^struct PostDomViewer$/;"	s	namespace:__anon49	file:
PostIdxReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } PostIdxReg;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon276	file:
PostIncLoops	Transforms/Scalar/LoopStrengthReduce.cpp	/^  PostIncLoopSet PostIncLoops;$/;"	m	struct:__anon516::LSRFixup	file:
PostIncTransform	Analysis/ScalarEvolutionNormalization.cpp	/^  PostIncTransform(TransformKind kind, PostIncLoopSet &loops,$/;"	f	class:__anon48::PostIncTransform
PostIncTransform	Analysis/ScalarEvolutionNormalization.cpp	/^class PostIncTransform {$/;"	c	namespace:__anon48	file:
PostPromotionWorklist	Transforms/Scalar/SROA.cpp	/^  SetVector<AllocaInst *, SmallVector<AllocaInst *, 16> > PostPromotionWorklist;$/;"	m	class:__anon559::SROA	file:
PostRAMachineLICMID	CodeGen/Passes.cpp	/^char TargetPassConfig::PostRAMachineLICMID = 0;$/;"	m	class:TargetPassConfig	file:
PostRAScheduler	CodeGen/PostRASchedulerList.cpp	/^    PostRAScheduler() : MachineFunctionPass(ID) {}$/;"	f	class:__anon102::PostRAScheduler
PostRAScheduler	CodeGen/PostRASchedulerList.cpp	/^  class PostRAScheduler : public MachineFunctionPass {$/;"	c	namespace:__anon102	file:
PostRAScheduler	Target/ARM/ARMSubtarget.h	/^  bool PostRAScheduler;$/;"	m	class:llvm::ARMSubtarget
PostRAScheduler	Target/X86/X86Subtarget.h	/^  bool PostRAScheduler;$/;"	m	class:llvm::X86Subtarget
PostRASchedulerID	CodeGen/PostRASchedulerList.cpp	/^char &llvm::PostRASchedulerID = PostRAScheduler::ID;$/;"	m	class:llvm	file:
Pow	Transforms/Scalar/SimplifyLibCalls.cpp	/^    CosOpt Cos; PowOpt Pow; Exp2Opt Exp2;$/;"	m	class:__anon546::SimplifyLibCalls	file:
PowOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct PowOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
Power	Transforms/Scalar/Reassociate.cpp	/^    unsigned Power;$/;"	m	struct:__anon548::Factor	file:
PowerDescendingSorter	Transforms/Scalar/Reassociate.cpp	/^    struct PowerDescendingSorter {$/;"	s	struct:__anon548::Factor	file:
PowerEqual	Transforms/Scalar/Reassociate.cpp	/^    struct PowerEqual {$/;"	s	struct:__anon548::Factor	file:
PreRegAlloc	CodeGen/IfConversion.cpp	/^    bool PreRegAlloc;$/;"	m	class:__anon99::IfConverter	file:
PreRegAlloc	CodeGen/MachineLICM.cpp	/^    bool PreRegAlloc;$/;"	m	class:__anon156::MachineLICM	file:
PreRegAlloc	CodeGen/TailDuplication.cpp	/^    bool PreRegAlloc;$/;"	m	class:__anon167::TailDuplicatePass	file:
PreVerifier	VMCore/Verifier.cpp	/^    PreVerifier() : FunctionPass(ID) {$/;"	f	struct:__anon609::PreVerifier
PreVerifier	VMCore/Verifier.cpp	/^  struct PreVerifier : public FunctionPass {$/;"	s	namespace:__anon609	file:
PreVerifyID	VMCore/Verifier.cpp	/^static char &PreVerifyID = PreVerifier::ID;$/;"	v	file:
Pre_v4	Target/ARM/ARMBuildAttrs.h	/^    Pre_v4       = 0,$/;"	e	enum:ARMBuildAttrs::CPUArch
Pred	CodeGen/MachineTraceMetrics.h	/^    const MachineBasicBlock *Pred;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
Pred	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    BasicBlock *Pred;$/;"	m	class:__anon469::RenamePassData	file:
PredCC1	Target/ARM/Thumb2SizeReduction.cpp	/^    unsigned PredCC1  : 2; \/\/ 0 - If predicated, cc is on and vice versa.$/;"	m	struct:__anon300::ReduceEntry	file:
PredCC2	Target/ARM/Thumb2SizeReduction.cpp	/^    unsigned PredCC2  : 2;$/;"	m	struct:__anon300::ReduceEntry	file:
PredCache	Transforms/Utils/LCSSA.cpp	/^    PredIteratorCache PredCache;$/;"	m	struct:__anon475::LCSSA	file:
PredClosure	Support/DAGDeltaAlgorithm.cpp	/^  std::map<change_ty, std::set<change_ty> > PredClosure;$/;"	m	class:__anon233::DAGDeltaAlgorithmImpl	file:
PredValueInfo	Transforms/Scalar/JumpThreading.cpp	/^  typedef SmallVectorImpl<std::pair<Constant*, BasicBlock*> > PredValueInfo;$/;"	t	namespace:__anon542	file:
PredValueInfoTy	Transforms/Scalar/JumpThreading.cpp	/^  typedef SmallVector<std::pair<Constant*, BasicBlock*>, 8> PredValueInfoTy;$/;"	t	namespace:__anon542	file:
Predecessors	Support/DAGDeltaAlgorithm.cpp	/^  std::map<change_ty, std::vector<change_ty> > Predecessors;$/;"	m	class:__anon233::DAGDeltaAlgorithmImpl	file:
Predicate	CodeGen/IfConversion.cpp	/^      SmallVector<MachineOperand, 4> Predicate;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
Predicate	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^  enum Predicate {$/;"	g	namespace:llvm::PPC
PredicateBlock	CodeGen/IfConversion.cpp	/^void IfConverter::PredicateBlock(BBInfo &BBI,$/;"	f	class:IfConverter
PredicateInstruction	CodeGen/TargetInstrInfoImpl.cpp	/^bool TargetInstrInfoImpl::PredicateInstruction(MachineInstr *MI,$/;"	f	class:TargetInstrInfoImpl
PredicateInstruction	Target/ARM/ARMBaseInstrInfo.cpp	/^PredicateInstruction(MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
PredicateInstruction	Target/Hexagon/HexagonInstrInfo.cpp	/^PredicateInstruction(MachineInstr *MI,$/;"	f	class:HexagonInstrInfo
PredicatedMask	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    PredicatedMask = 0x1$/;"	e	enum:llvm::HexagonII::__anon399
PredicatedPos	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    PredicatedPos  = 6,$/;"	e	enum:llvm::HexagonII::__anon399
PredicatesFoldable	Transforms/Utils/CmpInstAnalysis.cpp	/^bool llvm::PredicatesFoldable(ICmpInst::Predicate p1, ICmpInst::Predicate p2) {$/;"	f	class:llvm
Preds	CodeGen/MachineVerifier.cpp	/^      BlockSet Preds, Succs;$/;"	m	struct:__anon139::MachineVerifier::BBInfo	file:
Preds	Transforms/Scalar/ObjCARC.cpp	/^    SmallVector<BasicBlock *, 2> Preds;$/;"	m	class:__anon507::BBState	file:
Pref32BitThumb	Target/ARM/ARMSubtarget.h	/^  bool Pref32BitThumb;$/;"	m	class:llvm::ARMSubtarget
PrefBoth	CodeGen/SpillPlacement.h	/^    PrefBoth,  \/\/\/< Block entry prefers both register and stack.$/;"	e	enum:llvm::SpillPlacement::BorderConstraint
PrefReg	CodeGen/SpillPlacement.h	/^    PrefReg,   \/\/\/< Block entry\/exit prefers a register.$/;"	e	enum:llvm::SpillPlacement::BorderConstraint
PrefSpill	CodeGen/SpillPlacement.h	/^    PrefSpill, \/\/\/< Block entry\/exit prefers a stack slot.$/;"	e	enum:llvm::SpillPlacement::BorderConstraint
PrefixIn	Transforms/IPO/ArgumentPromotion.cpp	/^static bool PrefixIn(const ArgPromotion::IndicesVector &Indices,$/;"	f	file:
PrefixType	VMCore/AsmWriter.cpp	/^enum PrefixType {$/;"	g	file:
Preheader	Transforms/Scalar/LICM.cpp	/^    BasicBlock *Preheader;   \/\/ The preheader block of the current loop...$/;"	m	struct:__anon568::LICM	file:
PrepareCall	Target/PowerPC/PPCISelLowering.cpp	/^unsigned PrepareCall(SelectionDAG &DAG, SDValue &Callee, SDValue &InFlag,$/;"	f	file:
PrepareEHLandingPad	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^void SelectionDAGISel::PrepareEHLandingPad() {$/;"	f	class:SelectionDAGISel
PrepareTailCall	Target/PowerPC/PPCISelLowering.cpp	/^void PrepareTailCall(SelectionDAG &DAG, SDValue &InFlag, SDValue &Chain,$/;"	f	file:
PrependFlag	MC/SubtargetFeature.cpp	/^static inline std::string PrependFlag(const StringRef Feature,$/;"	f	file:
PrependMainExecutablePath	Support/SystemUtils.cpp	/^sys::Path llvm::PrependMainExecutablePath(const std::string &ExeName,$/;"	f	class:llvm
PreprocessISelDAG	Target/X86/X86ISelDAGToDAG.cpp	/^void X86DAGToDAGISel::PreprocessISelDAG() {$/;"	f	class:X86DAGToDAGISel
PrescanInstruction	CodeGen/AggressiveAntiDepBreaker.cpp	/^void AggressiveAntiDepBreaker::PrescanInstruction(MachineInstr *MI,$/;"	f	class:AggressiveAntiDepBreaker
PrescanInstruction	CodeGen/CriticalAntiDepBreaker.cpp	/^void CriticalAntiDepBreaker::PrescanInstruction(MachineInstr *MI) {$/;"	f	class:CriticalAntiDepBreaker
PrescheduleNodesWithMultipleUses	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void RegReductionPQBase::PrescheduleNodesWithMultipleUses() {$/;"	f	class:RegReductionPQBase
PreserveFPSign	Target/ARM/ARMBuildAttrs.h	/^    PreserveFPSign = 2, \/\/ sign when flushed-to-zero is preserved$/;"	e	enum:ARMBuildAttrs::__anon294
PrettyStackTraceEntry	Support/PrettyStackTrace.cpp	/^PrettyStackTraceEntry::PrettyStackTraceEntry() {$/;"	f	class:PrettyStackTraceEntry
PrettyStackTraceHead	Support/PrettyStackTrace.cpp	/^static sys::ThreadLocal<const PrettyStackTraceEntry> PrettyStackTraceHead;$/;"	v	file:
Prev	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    FreeRangeHeader *Prev;$/;"	m	struct:__anon189::FreeRangeHeader	file:
PrevAbbrOffsetPos	DebugInfo/DWARFDebugAbbrev.h	/^  mutable DWARFAbbreviationDeclarationCollMapConstIter PrevAbbrOffsetPos;$/;"	m	class:llvm::DWARFDebugAbbrev
PrevActions	Support/CrashRecoveryContext.cpp	/^static struct sigaction PrevActions[NumSignals];$/;"	v	typeref:struct:sigaction	file:
PrevAllocated	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    unsigned PrevAllocated : 1;$/;"	m	struct:__anon189::MemoryRangeHeader	file:
PrevDL	ExecutionEngine/JIT/JITEmitter.cpp	/^    DebugLoc PrevDL;$/;"	m	class:__anon182::JITEmitter	file:
PrevInstLoc	CodeGen/AsmPrinter/DwarfDebug.h	/^  DebugLoc PrevInstLoc;$/;"	m	class:llvm::DwarfDebug
PrevLabel	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *PrevLabel;$/;"	m	class:llvm::DwarfDebug
PrevPos	CodeGen/InterferenceCache.h	/^    SlotIndex PrevPos;$/;"	m	class:llvm::InterferenceCache::Entry
Previous	CodeGen/AsmPrinter/DwarfException.h	/^    unsigned Previous;$/;"	m	struct:llvm::DwarfException::ActionEntry
Previous	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^  struct ActionEntry *Previous;$/;"	m	struct:__anon183::ActionEntry	typeref:struct:__anon183::ActionEntry::ActionEntry	file:
Print	Analysis/SparsePropagation.cpp	/^void SparseSolver::Print(Function &F, raw_ostream &OS) const {$/;"	f	class:SparseSolver
PrintAsmMemoryOperand	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^bool AsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:AsmPrinter
PrintAsmMemoryOperand	Target/ARM/ARMAsmPrinter.cpp	/^bool ARMAsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI,$/;"	f	class:ARMAsmPrinter
PrintAsmMemoryOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^bool SPUAsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI,$/;"	f	class:SPUAsmPrinter
PrintAsmMemoryOperand	Target/Hexagon/HexagonAsmPrinter.cpp	/^bool HexagonAsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI,$/;"	f	class:HexagonAsmPrinter
PrintAsmMemoryOperand	Target/MSP430/MSP430AsmPrinter.cpp	/^bool MSP430AsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI,$/;"	f	class:MSP430AsmPrinter
PrintAsmMemoryOperand	Target/Mips/MipsAsmPrinter.cpp	/^bool MipsAsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI,$/;"	f	class:MipsAsmPrinter
PrintAsmMemoryOperand	Target/NVPTX/NVPTXAsmPrinter.cpp	/^bool NVPTXAsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI,$/;"	f	class:NVPTXAsmPrinter
PrintAsmMemoryOperand	Target/PowerPC/PPCAsmPrinter.cpp	/^bool PPCAsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:PPCAsmPrinter
PrintAsmMemoryOperand	Target/Sparc/SparcAsmPrinter.cpp	/^bool SparcAsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI,$/;"	f	class:SparcAsmPrinter
PrintAsmMemoryOperand	Target/X86/X86AsmPrinter.cpp	/^bool X86AsmPrinter::PrintAsmMemoryOperand(const MachineInstr *MI,$/;"	f	class:X86AsmPrinter
PrintAsmOperand	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^bool AsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:AsmPrinter
PrintAsmOperand	Target/ARM/ARMAsmPrinter.cpp	/^bool ARMAsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNum,$/;"	f	class:ARMAsmPrinter
PrintAsmOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^bool SPUAsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:SPUAsmPrinter
PrintAsmOperand	Target/Hexagon/HexagonAsmPrinter.cpp	/^bool HexagonAsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:HexagonAsmPrinter
PrintAsmOperand	Target/MBlaze/MBlazeAsmPrinter.cpp	/^PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:MBlazeAsmPrinter
PrintAsmOperand	Target/MSP430/MSP430AsmPrinter.cpp	/^bool MSP430AsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:MSP430AsmPrinter
PrintAsmOperand	Target/Mips/MipsAsmPrinter.cpp	/^bool MipsAsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNum,$/;"	f	class:MipsAsmPrinter
PrintAsmOperand	Target/NVPTX/NVPTXAsmPrinter.cpp	/^bool NVPTXAsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:NVPTXAsmPrinter
PrintAsmOperand	Target/PowerPC/PPCAsmPrinter.cpp	/^bool PPCAsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:PPCAsmPrinter
PrintAsmOperand	Target/Sparc/SparcAsmPrinter.cpp	/^bool SparcAsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:SparcAsmPrinter
PrintAsmOperand	Target/X86/X86AsmPrinter.cpp	/^bool X86AsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:X86AsmPrinter
PrintAsmOperand	Target/XCore/XCoreAsmPrinter.cpp	/^bool XCoreAsmPrinter::PrintAsmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:XCoreAsmPrinter
PrintCall	Target/NVPTX/NVPTXISelLowering.h	/^  PrintCall,$/;"	e	enum:llvm::NVPTXISD::NodeType
PrintCallGraphPass	Analysis/IPA/CallGraphSCCPass.cpp	/^    PrintCallGraphPass(const std::string &B, raw_ostream &o)$/;"	f	class:__anon4::PrintCallGraphPass
PrintCallGraphPass	Analysis/IPA/CallGraphSCCPass.cpp	/^  class PrintCallGraphPass : public CallGraphSCCPass {$/;"	c	namespace:__anon4	file:
PrintCallUni	Target/NVPTX/NVPTXISelLowering.h	/^  PrintCallUni,$/;"	e	enum:llvm::NVPTXISD::NodeType
PrintCallingConv	VMCore/AsmWriter.cpp	/^static void PrintCallingConv(unsigned cc, raw_ostream &Out)$/;"	f	file:
PrintChildLoopComment	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void PrintChildLoopComment(raw_ostream &OS, const MachineLoop *Loop,$/;"	f	file:
PrintCurStackTrace	Support/PrettyStackTrace.cpp	/^static void PrintCurStackTrace(raw_ostream &OS) {$/;"	f	file:
PrintDbgInfo	Analysis/DbgInfoPrinter.cpp	/^    PrintDbgInfo() : FunctionPass(ID), Out(errs()) {$/;"	f	class:__anon34::PrintDbgInfo
PrintDbgInfo	Analysis/DbgInfoPrinter.cpp	/^  class PrintDbgInfo : public FunctionPass {$/;"	c	namespace:__anon34	file:
PrintDebugValueComment	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::PrintDebugValueComment(const MachineInstr *MI,$/;"	f	class:ARMAsmPrinter
PrintDebugValueComment	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::PrintDebugValueComment(const MachineInstr *MI,$/;"	f	class:MipsAsmPrinter
PrintDebugValueComment	Target/X86/X86AsmPrinter.cpp	/^void X86AsmPrinter::PrintDebugValueComment(const MachineInstr *MI,$/;"	f	class:X86AsmPrinter
PrintDebugValueComment	Target/XCore/XCoreAsmPrinter.cpp	/^void XCoreAsmPrinter::PrintDebugValueComment(const MachineInstr *MI,$/;"	f	class:XCoreAsmPrinter
PrintError	TableGen/Error.cpp	/^void PrintError(ArrayRef<SMLoc> ErrorLoc, const Twine &Msg) {$/;"	f	namespace:llvm
PrintError	TableGen/Error.cpp	/^void PrintError(const TGError &Error) {$/;"	f	namespace:llvm
PrintError	TableGen/Error.cpp	/^void PrintError(const Twine &Msg) {$/;"	f	namespace:llvm
PrintError	TableGen/Error.cpp	/^void PrintError(const char *Loc, const Twine &Msg) {$/;"	f	namespace:llvm
PrintEscapedString	VMCore/AsmWriter.cpp	/^static void PrintEscapedString(StringRef Name, raw_ostream &Out) {$/;"	f	file:
PrintF	Transforms/Scalar/SimplifyLibCalls.cpp	/^    SPrintFOpt SPrintF; PrintFOpt PrintF;$/;"	m	class:__anon546::SimplifyLibCalls	file:
PrintFOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct PrintFOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
PrintFunctionPass	VMCore/PrintModulePass.cpp	/^    PrintFunctionPass() : FunctionPass(ID), Banner(""), Out(&dbgs()), $/;"	f	class:__anon619::PrintFunctionPass
PrintFunctionPass	VMCore/PrintModulePass.cpp	/^    PrintFunctionPass(const std::string &B, raw_ostream *o, bool DS)$/;"	f	class:__anon619::PrintFunctionPass
PrintFunctionPass	VMCore/PrintModulePass.cpp	/^  class PrintFunctionPass : public FunctionPass {$/;"	c	namespace:__anon619	file:
PrintHelpMessage	Support/CommandLine.cpp	/^void cl::PrintHelpMessage() {$/;"	f	class:cl
PrintImpl	Target/ARM/MCTargetDesc/ARMMCExpr.cpp	/^void ARMMCExpr::PrintImpl(raw_ostream &OS) const {$/;"	f	class:ARMMCExpr
PrintIncludeStack	Support/SourceMgr.cpp	/^void SourceMgr::PrintIncludeStack(SMLoc IncludeLoc, raw_ostream &OS) const {$/;"	f	class:SourceMgr
PrintLLVMName	VMCore/AsmWriter.cpp	/^static void PrintLLVMName(raw_ostream &OS, StringRef Name, PrefixType Prefix) {$/;"	f	file:
PrintLLVMName	VMCore/AsmWriter.cpp	/^static void PrintLLVMName(raw_ostream &OS, const Value *V) {$/;"	f	file:
PrintLinkage	VMCore/AsmWriter.cpp	/^static void PrintLinkage(GlobalValue::LinkageTypes LT,$/;"	f	file:
PrintLoopInfo	Analysis/LoopDependenceAnalysis.cpp	/^static void PrintLoopInfo(raw_ostream &OS,$/;"	f	file:
PrintLoopInfo	Analysis/ScalarEvolution.cpp	/^static void PrintLoopInfo(raw_ostream &OS, ScalarEvolution *SE,$/;"	f	file:
PrintLoopPass	Analysis/LoopPass.cpp	/^  PrintLoopPass(const std::string &B, raw_ostream &o)$/;"	f	class:__anon45::PrintLoopPass
PrintLoopPass	Analysis/LoopPass.cpp	/^class PrintLoopPass : public LoopPass {$/;"	c	namespace:__anon45	file:
PrintMacroInstantiations	MC/MCParser/AsmParser.cpp	/^void AsmParser::PrintMacroInstantiations() {$/;"	f	class:AsmParser
PrintMessage	MC/MCParser/AsmParser.cpp	/^  void PrintMessage(SMLoc Loc, SourceMgr::DiagKind Kind, const Twine &Msg,$/;"	f	class:__anon211::AsmParser	file:
PrintMessage	Support/SourceMgr.cpp	/^void SourceMgr::PrintMessage(SMLoc Loc, SourceMgr::DiagKind Kind,$/;"	f	class:SourceMgr
PrintMessage	TableGen/Error.cpp	/^static void PrintMessage(ArrayRef<SMLoc> Loc, SourceMgr::DiagKind Kind,$/;"	f	namespace:llvm
PrintModRefResults	Analysis/AliasAnalysisEvaluator.cpp	/^PrintModRefResults(const char *Msg, bool P, CallSite CSA, CallSite CSB,$/;"	f	file:
PrintModRefResults	Analysis/AliasAnalysisEvaluator.cpp	/^PrintModRefResults(const char *Msg, bool P, Instruction *I, Value *Ptr,$/;"	f	file:
PrintModulePass	VMCore/PrintModulePass.cpp	/^    PrintModulePass() : ModulePass(ID), Out(&dbgs()), $/;"	f	class:__anon619::PrintModulePass
PrintModulePass	VMCore/PrintModulePass.cpp	/^    PrintModulePass(const std::string &B, raw_ostream *o, bool DS)$/;"	f	class:__anon619::PrintModulePass
PrintModulePass	VMCore/PrintModulePass.cpp	/^  class PrintModulePass : public ModulePass {$/;"	c	namespace:__anon619	file:
PrintOps	Transforms/Scalar/Reassociate.cpp	/^static void PrintOps(Instruction *I, const SmallVectorImpl<ValueEntry> &Ops) {$/;"	f	file:
PrintOptionValues	Support/CommandLine.cpp	/^void cl::PrintOptionValues() {$/;"	f	class:cl
PrintParentLoopComment	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void PrintParentLoopComment(raw_ostream &OS, const MachineLoop *Loop,$/;"	f	file:
PrintPercent	Analysis/AliasAnalysisEvaluator.cpp	/^static void PrintPercent(unsigned Num, unsigned Sum) {$/;"	f	file:
PrintQueuedTimers	Support/Timer.cpp	/^void TimerGroup::PrintQueuedTimers(raw_ostream &OS) {$/;"	f	class:TimerGroup
PrintQuotedString	MC/MCAsmStreamer.cpp	/^static void PrintQuotedString(StringRef Data, raw_ostream &OS) {$/;"	f	file:
PrintRecyclerStats	Support/Allocator.cpp	/^void PrintRecyclerStats(size_t Size,$/;"	f	namespace:llvm
PrintRegName	Target/X86/InstPrinter/X86IntelInstPrinter.cpp	/^static void PrintRegName(raw_ostream &O, StringRef RegName) {$/;"	f	file:
PrintRegionPass	Analysis/RegionPass.cpp	/^  PrintRegionPass() : RegionPass(ID), Out(dbgs()) {}$/;"	f	class:__anon8::PrintRegionPass
PrintRegionPass	Analysis/RegionPass.cpp	/^  PrintRegionPass(const std::string &B, raw_ostream &o)$/;"	f	class:__anon8::PrintRegionPass
PrintRegionPass	Analysis/RegionPass.cpp	/^class PrintRegionPass : public RegionPass {$/;"	c	namespace:__anon8	file:
PrintResults	Analysis/AliasAnalysisEvaluator.cpp	/^static void PrintResults(const char *Msg, bool P, const Value *V1,$/;"	f	file:
PrintSpecial	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^void AsmPrinter::PrintSpecial(const MachineInstr *MI, raw_ostream &OS,$/;"	f	class:AsmPrinter
PrintStack	Support/PrettyStackTrace.cpp	/^static unsigned PrintStack(const PrettyStackTraceEntry *Entry, raw_ostream &OS){$/;"	f	file:
PrintStatistics	Support/Statistic.cpp	/^void llvm::PrintStatistics() {$/;"	f	class:llvm
PrintStatistics	Support/Statistic.cpp	/^void llvm::PrintStatistics(raw_ostream &OS) {$/;"	f	class:llvm
PrintStats	Support/Allocator.cpp	/^void BumpPtrAllocator::PrintStats() const {$/;"	f	class:llvm::BumpPtrAllocator
PrintSwitchToSection	MC/MCSectionCOFF.cpp	/^void MCSectionCOFF::PrintSwitchToSection(const MCAsmInfo &MAI,$/;"	f	class:MCSectionCOFF
PrintSwitchToSection	MC/MCSectionELF.cpp	/^void MCSectionELF::PrintSwitchToSection(const MCAsmInfo &MAI,$/;"	f	class:MCSectionELF
PrintSwitchToSection	MC/MCSectionMachO.cpp	/^void MCSectionMachO::PrintSwitchToSection(const MCAsmInfo &MAI,$/;"	f	class:MCSectionMachO
PrintSwitchToSection	Target/NVPTX/NVPTXSection.h	/^  virtual void PrintSwitchToSection(const MCAsmInfo &MAI,$/;"	f	class:llvm::NVPTXSection
PrintThreadLocalModel	VMCore/AsmWriter.cpp	/^static void PrintThreadLocalModel(GlobalVariable::ThreadLocalMode TLM,$/;"	f	file:
PrintValue	Analysis/SparsePropagation.cpp	/^void AbstractLatticeFunction::PrintValue(LatticeVal V, raw_ostream &OS) {$/;"	f	class:AbstractLatticeFunction
PrintVersionMessage	Support/CommandLine.cpp	/^void cl::PrintVersionMessage() {$/;"	f	class:cl
PrintVisibility	VMCore/AsmWriter.cpp	/^static void PrintVisibility(GlobalValue::VisibilityTypes Vis,$/;"	f	file:
PrintWarning	TableGen/Error.cpp	/^void PrintWarning(ArrayRef<SMLoc> WarningLoc, const Twine &Msg) {$/;"	f	namespace:llvm
PrintWarning	TableGen/Error.cpp	/^void PrintWarning(const TGError &Warning) {$/;"	f	namespace:llvm
PrintWarning	TableGen/Error.cpp	/^void PrintWarning(const Twine &Msg) {$/;"	f	namespace:llvm
PrintWarning	TableGen/Error.cpp	/^void PrintWarning(const char *Loc, const Twine &Msg) {$/;"	f	namespace:llvm
PrintedDebugTree	Analysis/ProfileVerifierPass.cpp	/^    bool PrintedDebugTree;$/;"	m	class:__anon36::ProfileVerifierPassT	file:
Printer	CodeGen/GCMetadata.cpp	/^    explicit Printer(raw_ostream &OS) : FunctionPass(ID), OS(OS) {}$/;"	f	class:__anon160::Printer
Printer	CodeGen/GCMetadata.cpp	/^  class Printer : public FunctionPass {$/;"	c	namespace:__anon160	file:
Printer	Target/MBlaze/MBlazeMCInstLower.h	/^  AsmPrinter &Printer;$/;"	m	class:llvm::MBlazeMCInstLower
Printer	Target/MSP430/MSP430MCInstLower.h	/^  AsmPrinter &Printer;$/;"	m	class:llvm::MSP430MCInstLower
PrinterMutex	MC/MCDisassembler/EDDisassembler.h	/^  llvm::sys::Mutex PrinterMutex;$/;"	m	struct:llvm::EDDisassembler
PrinterTrait	VMCore/LeaksContext.h	/^struct PrinterTrait {$/;"	s	namespace:llvm
PrinterTrait	VMCore/LeaksContext.h	/^struct PrinterTrait<Value> {$/;"	s	namespace:llvm
PriorityFive	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static const unsigned PriorityFive = 5;$/;"	v	file:
PriorityFour	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static const unsigned PriorityFour = 15;$/;"	v	file:
PriorityFour	Target/Hexagon/HexagonMachineScheduler.cpp	/^static const unsigned PriorityFour = 20;$/;"	v	file:
PriorityOne	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static const unsigned PriorityOne = 200;$/;"	v	file:
PriorityOne	Target/Hexagon/HexagonMachineScheduler.cpp	/^static const unsigned PriorityOne = 200;$/;"	v	file:
PriorityThree	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static const unsigned PriorityThree = 50;$/;"	v	file:
PriorityThree	Target/Hexagon/HexagonMachineScheduler.cpp	/^static const unsigned PriorityThree = 50;$/;"	v	file:
PriorityTwo	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static const unsigned PriorityTwo = 100;$/;"	v	file:
PriorityTwo	Target/Hexagon/HexagonMachineScheduler.cpp	/^static const unsigned PriorityTwo = 100;$/;"	v	file:
ProcDirective	Target/CellSPU/SPUSubtarget.h	/^    unsigned ProcDirective;$/;"	m	class:llvm::SPUSubtarget
ProcessBlock	CodeGen/MachineCSE.cpp	/^bool MachineCSE::ProcessBlock(MachineBasicBlock *MBB) {$/;"	f	class:MachineCSE
ProcessBlock	CodeGen/MachineSink.cpp	/^bool MachineSinking::ProcessBlock(MachineBasicBlock &MBB) {$/;"	f	class:MachineSinking
ProcessBlock	Transforms/Scalar/JumpThreading.cpp	/^bool JumpThreading::ProcessBlock(BasicBlock *BB) {$/;"	f	class:JumpThreading
ProcessBlock	Transforms/Scalar/Sink.cpp	/^bool Sinking::ProcessBlock(BasicBlock &BB) {$/;"	f	class:Sinking
ProcessBranchOnPHI	Transforms/Scalar/JumpThreading.cpp	/^bool JumpThreading::ProcessBranchOnPHI(PHINode *PN) {$/;"	f	class:JumpThreading
ProcessBranchOnXOR	Transforms/Scalar/JumpThreading.cpp	/^bool JumpThreading::ProcessBranchOnXOR(BinaryOperator *BO) {$/;"	f	class:JumpThreading
ProcessCallArgs	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::ProcessCallArgs(SmallVectorImpl<Value*> &Args,$/;"	f	class:ARMFastISel
ProcessCopy	CodeGen/TwoAddressInstructionPass.cpp	/^void TwoAddressInstructionPass::ProcessCopy(MachineInstr *MI,$/;"	f	class:TwoAddressInstructionPass
ProcessForeachDefs	TableGen/TGParser.cpp	/^bool TGParser::ProcessForeachDefs(Record *CurRec, SMLoc Loc) {$/;"	f	class:TGParser
ProcessForeachDefs	TableGen/TGParser.cpp	/^bool TGParser::ProcessForeachDefs(Record *CurRec, SMLoc Loc, IterSet &IterVals){$/;"	f	class:TGParser
ProcessFunctionAfterISel	Target/Mips/MipsISelDAGToDAG.cpp	/^void MipsDAGToDAGISel::ProcessFunctionAfterISel(MachineFunction &MF) {$/;"	f	class:MipsDAGToDAGISel
ProcessGlobal	Transforms/IPO/GlobalOpt.cpp	/^bool GlobalOpt::ProcessGlobal(GlobalVariable *GV,$/;"	f	class:GlobalOpt
ProcessImplicitDefs	CodeGen/ProcessImplicitDefs.cpp	/^  ProcessImplicitDefs() : MachineFunctionPass(ID) {$/;"	f	class:__anon166::ProcessImplicitDefs
ProcessImplicitDefs	CodeGen/ProcessImplicitDefs.cpp	/^class ProcessImplicitDefs : public MachineFunctionPass {$/;"	c	namespace:__anon166	file:
ProcessImplicitDefsID	CodeGen/ProcessImplicitDefs.cpp	/^char &llvm::ProcessImplicitDefsID = ProcessImplicitDefs::ID;$/;"	m	class:llvm	file:
ProcessIncbinFile	MC/MCParser/AsmParser.cpp	/^bool AsmParser::ProcessIncbinFile(const std::string &Filename) {$/;"	f	class:AsmParser
ProcessInstruction	Transforms/Utils/LCSSA.cpp	/^bool LCSSA::ProcessInstruction(Instruction *Inst,$/;"	f	class:LCSSA
ProcessInternalGlobal	Transforms/IPO/GlobalOpt.cpp	/^bool GlobalOpt::ProcessInternalGlobal(GlobalVariable *GV,$/;"	f	class:GlobalOpt
ProcessLoop	Transforms/Utils/LoopSimplify.cpp	/^bool LoopSimplify::ProcessLoop(Loop *L, LPPassManager &LPM) {$/;"	f	class:LoopSimplify
ProcessMI	CodeGen/MachineLICM.cpp	/^void MachineLICM::ProcessMI(MachineInstr *MI,$/;"	f	class:MachineLICM
ProcessPHI	CodeGen/TailDuplication.cpp	/^void TailDuplicatePass::ProcessPHI(MachineInstr *MI,$/;"	f	class:TailDuplicatePass
ProcessReturningBlock	Transforms/Scalar/TailRecursionElimination.cpp	/^bool TailCallElim::ProcessReturningBlock(ReturnInst *Ret, BasicBlock *&OldEntry,$/;"	f	class:TailCallElim
ProcessSDDbgValues	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^static void ProcessSDDbgValues(SDNode *N, SelectionDAG *DAG,$/;"	f	file:
ProcessSourceNode	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^static void ProcessSourceNode(SDNode *N, SelectionDAG *DAG,$/;"	f	file:
ProcessThreadableEdges	Transforms/Scalar/JumpThreading.cpp	/^bool JumpThreading::ProcessThreadableEdges(Value *Cond, BasicBlock *BB,$/;"	f	class:JumpThreading
ProcessUAddIdiom	Transforms/InstCombine/InstCombineCompares.cpp	/^static Instruction *ProcessUAddIdiom(Instruction &I, Value *OrigAddV,$/;"	f	file:
ProcessUGT_ADDCST_ADD	Transforms/InstCombine/InstCombineCompares.cpp	/^static Instruction *ProcessUGT_ADDCST_ADD(ICmpInst &I, Value *A, Value *B,$/;"	f	file:
Processed	CodeGen/SelectionDAG/LegalizeTypes.h	/^    Processed = -3$/;"	e	enum:llvm::DAGTypeLegalizer::NodeIdFlags
Processed	Transforms/Scalar/EarlyCSE.cpp	/^    bool Processed;$/;"	m	class:__anon566::EarlyCSE::StackNode	file:
ProcessedSPNodes	CodeGen/AsmPrinter/DwarfDebug.h	/^  SmallPtrSet<const MDNode *, 16> ProcessedSPNodes;$/;"	m	class:llvm::DwarfDebug
Profile	CodeGen/AsmPrinter/DIE.cpp	/^void DIEAbbrev::Profile(FoldingSetNodeID &ID) const {$/;"	f	class:DIEAbbrev
Profile	CodeGen/AsmPrinter/DIE.cpp	/^void DIEAbbrevData::Profile(FoldingSetNodeID &ID) const {$/;"	f	class:DIEAbbrevData
Profile	CodeGen/MachineInstr.cpp	/^void MachineMemOperand::Profile(FoldingSetNodeID &ID) const {$/;"	f	class:MachineMemOperand
Profile	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SDNode::Profile(FoldingSetNodeID &ID) const {$/;"	f	class:SDNode
Profile	Support/APFloat.cpp	/^void APFloat::Profile(FoldingSetNodeID& ID) const {$/;"	f	class:APFloat
Profile	Support/APInt.cpp	/^void APInt::Profile(FoldingSetNodeID& ID) const {$/;"	f	class:APInt
Profile	Support/APSInt.cpp	/^void APSInt::Profile(FoldingSetNodeID& ID) const {$/;"	f	class:APSInt
Profile	TableGen/Record.cpp	/^void BitsInit::Profile(FoldingSetNodeID &ID) const {$/;"	f	class:BitsInit
Profile	TableGen/Record.cpp	/^void DagInit::Profile(FoldingSetNodeID &ID) const {$/;"	f	class:DagInit
Profile	TableGen/Record.cpp	/^void ListInit::Profile(FoldingSetNodeID &ID) const {$/;"	f	class:ListInit
Profile	VMCore/Attributes.cpp	/^  static void Profile(FoldingSetNodeID &ID, ArrayRef<AttributeWithIndex> Attrs){$/;"	f	class:llvm::AttributeListImpl
Profile	VMCore/Attributes.cpp	/^  void Profile(FoldingSetNodeID &ID) const {$/;"	f	class:llvm::AttributeListImpl
Profile	VMCore/AttributesImpl.h	/^  static void Profile(FoldingSetNodeID &ID, uint64_t Bits) {$/;"	f	class:llvm::AttributesImpl
Profile	VMCore/AttributesImpl.h	/^  void Profile(FoldingSetNodeID &ID) const {$/;"	f	class:llvm::AttributesImpl
Profile	VMCore/Metadata.cpp	/^void MDNode::Profile(FoldingSetNodeID &ID) const {$/;"	f	class:MDNode
ProfileBitsInit	TableGen/Record.cpp	/^ProfileBitsInit(FoldingSetNodeID &ID, ArrayRef<Init *> Range) {$/;"	f	file:
ProfileDagInit	TableGen/Record.cpp	/^void ProfileDagInit(FoldingSetNodeID &ID,$/;"	f
ProfileDataLoader	Analysis/ProfileDataLoader.cpp	/^ProfileDataLoader::ProfileDataLoader(const char *ToolName,$/;"	f	class:ProfileDataLoader
ProfileEstimatorPass	Analysis/ProfileEstimatorPass.cpp	/^    explicit ProfileEstimatorPass(const double execcount = 0)$/;"	f	class:__anon9::ProfileEstimatorPass
ProfileEstimatorPass	Analysis/ProfileEstimatorPass.cpp	/^  class ProfileEstimatorPass : public FunctionPass, public ProfileInfo {$/;"	c	namespace:__anon9	file:
ProfileEstimatorPassID	Analysis/ProfileEstimatorPass.cpp	/^  char &ProfileEstimatorPassID = ProfileEstimatorPass::ID;$/;"	m	namespace:llvm	file:
ProfileInfoLoader	Analysis/ProfileInfoLoader.cpp	/^ProfileInfoLoader::ProfileInfoLoader(const char *ToolName,$/;"	f	class:ProfileInfoLoader
ProfileInfoT	Analysis/ProfileInfo.cpp	/^ProfileInfoT<Function, BasicBlock>::ProfileInfoT() {$/;"	f	class:llvm::ProfileInfoT
ProfileInfoT	Analysis/ProfileInfo.cpp	/^ProfileInfoT<MachineFunction, MachineBasicBlock>::ProfileInfoT() {}$/;"	f	class:llvm::ProfileInfoT
ProfileListInit	TableGen/Record.cpp	/^static void ProfileListInit(FoldingSetNodeID &ID,$/;"	f	file:
ProfileLoaderPassID	Analysis/ProfileInfoLoaderPass.cpp	/^char &llvm::ProfileLoaderPassID = LoaderPass::ID;$/;"	m	class:llvm	file:
ProfileMetadataLoaderPass	Analysis/ProfileDataLoaderPass.cpp	/^    explicit ProfileMetadataLoaderPass(const std::string &filename = "")$/;"	f	class:__anon7::ProfileMetadataLoaderPass
ProfileMetadataLoaderPass	Analysis/ProfileDataLoaderPass.cpp	/^  class ProfileMetadataLoaderPass : public ModulePass {$/;"	c	namespace:__anon7	file:
ProfileMetadataLoaderPassID	Analysis/ProfileDataLoaderPass.cpp	/^char &llvm::ProfileMetadataLoaderPassID = ProfileMetadataLoaderPass::ID;$/;"	m	class:llvm	file:
ProfilePath	Analysis/PathProfileInfo.cpp	/^ProfilePath::ProfilePath (unsigned int number, unsigned int count,$/;"	f	class:ProfilePath
ProfilePathEdge	Analysis/PathProfileInfo.cpp	/^ProfilePathEdge::ProfilePathEdge (BasicBlock* source, BasicBlock* target,$/;"	f	class:ProfilePathEdge
ProfileVerifierPass	Analysis/ProfileVerifierPass.cpp	/^  typedef ProfileVerifierPassT<Function, BasicBlock> ProfileVerifierPass;$/;"	t	namespace:__anon36	file:
ProfileVerifierPassT	Analysis/ProfileVerifierPass.cpp	/^    explicit ProfileVerifierPassT () : FunctionPass(ID) {$/;"	f	class:__anon36::ProfileVerifierPassT
ProfileVerifierPassT	Analysis/ProfileVerifierPass.cpp	/^    explicit ProfileVerifierPassT (bool da) : FunctionPass(ID), $/;"	f	class:__anon36::ProfileVerifierPassT
ProfileVerifierPassT	Analysis/ProfileVerifierPass.cpp	/^  class ProfileVerifierPassT : public FunctionPass {$/;"	c	namespace:__anon36	file:
ProfitableToMerge	CodeGen/BranchFolding.cpp	/^static bool ProfitableToMerge(MachineBasicBlock *MBB1,$/;"	f	file:
ProgramName	Support/CommandLine.cpp	/^static char ProgramName[80] = "<premain>";$/;"	v	file:
ProgramOverview	Support/CommandLine.cpp	/^static const char *ProgramOverview = 0;$/;"	v	file:
PrologEndLoc	CodeGen/AsmPrinter/DwarfDebug.h	/^  DebugLoc PrologEndLoc;$/;"	m	class:llvm::DwarfDebug
PrologEpilogCodeInserterID	CodeGen/PrologEpilogInserter.cpp	/^char &llvm::PrologEpilogCodeInserterID = PEI::ID;$/;"	m	class:llvm	file:
Prologue	DebugInfo/DWARFDebugLine.h	/^    Prologue()$/;"	f	struct:llvm::DWARFDebugLine::Prologue
Prologue	DebugInfo/DWARFDebugLine.h	/^    struct Prologue Prologue;$/;"	m	struct:llvm::DWARFDebugLine::LineTable	typeref:struct:llvm::DWARFDebugLine::LineTable::Prologue
Prologue	DebugInfo/DWARFDebugLine.h	/^  struct Prologue {$/;"	s	class:llvm::DWARFDebugLine
PrologueEnd	DebugInfo/DWARFDebugLine.h	/^            PrologueEnd:1,$/;"	m	struct:llvm::DWARFDebugLine::Row
PrologueLength	DebugInfo/DWARFDebugLine.h	/^    uint32_t PrologueLength;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
PromotableAllocas	Transforms/Scalar/SROA.cpp	/^  std::vector<AllocaInst *> PromotableAllocas;$/;"	m	class:__anon559::SROA	file:
PromoteAliasSet	Transforms/Scalar/LICM.cpp	/^void LICM::PromoteAliasSet(AliasSet &AS,$/;"	f	class:LICM
PromoteArguments	Transforms/IPO/ArgumentPromotion.cpp	/^CallGraphNode *ArgPromotion::PromoteArguments(CallGraphNode *CGN) {$/;"	f	class:ArgPromotion
PromoteCastOfAllocation	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::PromoteCastOfAllocation(BitCastInst &CI,$/;"	f	class:InstCombiner
PromoteExtend	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::PromoteExtend(SDValue Op) {$/;"	f	class:DAGCombiner
PromoteIntBinOp	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::PromoteIntBinOp(SDValue Op) {$/;"	f	class:DAGCombiner
PromoteIntOp_ANY_EXTEND	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_ANY_EXTEND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_ATOMIC_STORE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_ATOMIC_STORE(AtomicSDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_BITCAST	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_BRCOND	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_BRCOND(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_BR_CC	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_BR_CC(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_BUILD_PAIR	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_BUILD_PAIR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_BUILD_VECTOR	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_BUILD_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_CONCAT_VECTORS	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_CONCAT_VECTORS(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_CONVERT_RNDSAT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_CONVERT_RNDSAT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_EXTRACT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_EXTRACT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_INSERT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_INSERT_VECTOR_ELT(SDNode *N,$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_MEMBARRIER	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_MEMBARRIER(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_SCALAR_TO_VECTOR	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_SCALAR_TO_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_SELECT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_SELECT(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_SELECT_CC	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_SELECT_CC(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_SETCC	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_SETCC(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_SIGN_EXTEND	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_SIGN_EXTEND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_SINT_TO_FP	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_SINT_TO_FP(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_STORE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_STORE(StoreSDNode *N, unsigned OpNo){$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_Shift	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_Shift(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_TRUNCATE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_TRUNCATE(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_UINT_TO_FP	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_UINT_TO_FP(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntOp_ZERO_EXTEND	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntOp_ZERO_EXTEND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_AssertSext	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_AssertSext(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_AssertZext	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_AssertZext(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_Atomic0	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_Atomic0(AtomicSDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_Atomic1	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_Atomic1(AtomicSDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_Atomic2	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_Atomic2(AtomicSDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_BITCAST	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_BSWAP	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_BSWAP(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_BUILD_PAIR	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_BUILD_PAIR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_BUILD_VECTOR	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_BUILD_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_CONCAT_VECTORS	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_CONCAT_VECTORS(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_CONVERT_RNDSAT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_CONVERT_RNDSAT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_CTLZ	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_CTLZ(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_CTPOP	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_CTPOP(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_CTTZ	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_CTTZ(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_Constant	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_Constant(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_EXTRACT_SUBVECTOR	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_EXTRACT_SUBVECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_EXTRACT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_EXTRACT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_FP32_TO_FP16	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_FP32_TO_FP16(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_FP_TO_XINT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_FP_TO_XINT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_INSERT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_INSERT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_INT_EXTEND	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_INT_EXTEND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_LOAD	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_LOAD(LoadSDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_MERGE_VALUES	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_MERGE_VALUES(SDNode *N,$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_Overflow	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_Overflow(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SADDSUBO	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SADDSUBO(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SCALAR_TO_VECTOR	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SCALAR_TO_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SDIV	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SDIV(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SELECT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SELECT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SELECT_CC	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SELECT_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SETCC	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SHL	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SHL(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SIGN_EXTEND_INREG	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SIGN_EXTEND_INREG(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SRA	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SRA(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SRL	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SRL(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_SimpleIntBinOp	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_SimpleIntBinOp(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_TRUNCATE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_TRUNCATE(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_UADDSUBO	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_UADDSUBO(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_UDIV	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_UDIV(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_UNDEF	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_UNDEF(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_VAARG	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_VAARG(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_VECTOR_SHUFFLE	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_VECTOR_SHUFFLE(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_VSELECT	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_VSELECT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
PromoteIntRes_XMULO	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteIntRes_XMULO(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
PromoteIntShiftOp	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::PromoteIntShiftOp(SDValue Op) {$/;"	f	class:DAGCombiner
PromoteIntegerOperand	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^bool DAGTypeLegalizer::PromoteIntegerOperand(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
PromoteIntegerResult	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::PromoteIntegerResult(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
PromoteLegalFP_TO_INT	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::PromoteLegalFP_TO_INT(SDValue LegalOp,$/;"	f	class:SelectionDAGLegalize
PromoteLegalINT_TO_FP	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SDValue SelectionDAGLegalize::PromoteLegalINT_TO_FP(SDValue LegalOp,$/;"	f	class:SelectionDAGLegalize
PromoteLoad	CodeGen/SelectionDAG/DAGCombiner.cpp	/^bool DAGCombiner::PromoteLoad(SDValue Op) {$/;"	f	class:DAGCombiner
PromoteMem2Reg	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    PromoteMem2Reg(const std::vector<AllocaInst*> &A, DominatorTree &dt,$/;"	f	struct:__anon469::PromoteMem2Reg
PromoteMem2Reg	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  struct PromoteMem2Reg {$/;"	s	namespace:__anon469	file:
PromoteMemToReg	Transforms/Utils/PromoteMemoryToRegister.cpp	/^void llvm::PromoteMemToReg(const std::vector<AllocaInst*> &Allocas,$/;"	f	class:llvm
PromoteNode	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^void SelectionDAGLegalize::PromoteNode(SDNode *Node) {$/;"	f	class:SelectionDAGLegalize
PromoteOperand	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::PromoteOperand(SDValue Op, EVT PVT, bool &Replace) {$/;"	f	class:DAGCombiner
PromotePass	Transforms/Utils/Mem2Reg.cpp	/^    PromotePass() : FunctionPass(ID) {$/;"	f	struct:__anon471::PromotePass
PromotePass	Transforms/Utils/Mem2Reg.cpp	/^  struct PromotePass : public FunctionPass {$/;"	s	namespace:__anon471	file:
PromoteSetCCOperands	CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp	/^void DAGTypeLegalizer::PromoteSetCCOperands(SDValue &NewLHS,SDValue &NewRHS,$/;"	f	class:DAGTypeLegalizer
PromoteSingleBlockAlloca	Transforms/Utils/PromoteMemoryToRegister.cpp	/^void PromoteMem2Reg::PromoteSingleBlockAlloca(AllocaInst *AI, AllocaInfo &Info,$/;"	f	class:PromoteMem2Reg
PromoteSplat	Target/X86/X86ISelLowering.cpp	/^static SDValue PromoteSplat(ShuffleVectorSDNode *SV, SelectionDAG &DAG) {$/;"	f	file:
PromoteSplati8i16	Target/X86/X86ISelLowering.cpp	/^static SDValue PromoteSplati8i16(SDValue V, SelectionDAG &DAG, int &EltNo) {$/;"	f	file:
PromoteTargetBoolean	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^SDValue DAGTypeLegalizer::PromoteTargetBoolean(SDValue Bool, EVT VT) {$/;"	f	class:DAGTypeLegalizer
PromoteToDotNew	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::PromoteToDotNew(MachineInstr* MI,$/;"	f	class:HexagonPacketizerList
PromoteVectorOp	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::PromoteVectorOp(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
PromoteVectorOpINT_TO_FP	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::PromoteVectorOpINT_TO_FP(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
PromotedIntegers	CodeGen/SelectionDAG/LegalizeTypes.h	/^  DenseMap<SDValue, SDValue> PromotedIntegers;$/;"	m	class:llvm::DAGTypeLegalizer
PromotedToDotNew	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^    bool PromotedToDotNew;$/;"	m	class:__anon403::HexagonPacketizerList	file:
PropagateConstantReturn	Transforms/IPO/IPConstantPropagation.cpp	/^bool IPCP::PropagateConstantReturn(Function &F) {$/;"	f	class:IPCP
PropagateConstantsIntoArguments	Transforms/IPO/IPConstantPropagation.cpp	/^bool IPCP::PropagateConstantsIntoArguments(Function &F) {$/;"	f	class:IPCP
PropagateLiveness	Transforms/IPO/DeadArgumentElimination.cpp	/^void DAE::PropagateLiveness(const RetOrArg &RA) {$/;"	f	class:DAE
PropertyAnnotation	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^enum PropertyAnnotation {$/;"	g	namespace:llvm
PropertyAnnotationNames	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^PropertyAnnotationNames[PROPERTY_LAST + 1][AnnotationNameLen + 1] = {$/;"	m	namespace:llvm
Prototype	Target/NVPTX/NVPTXISelLowering.h	/^  Prototype,$/;"	e	enum:llvm::NVPTXISD::NodeType
ProvenanceAnalysis	Transforms/Scalar/ObjCARC.cpp	/^    ProvenanceAnalysis() {}$/;"	f	class:__anon503::ProvenanceAnalysis
ProvenanceAnalysis	Transforms/Scalar/ObjCARC.cpp	/^  class ProvenanceAnalysis {$/;"	c	namespace:__anon503	file:
ProvideOption	Support/CommandLine.cpp	/^static inline bool ProvideOption(Option *Handler, StringRef ArgName,$/;"	f	file:
ProvidePositionalOption	Support/CommandLine.cpp	/^static bool ProvidePositionalOption(Option *Handler, StringRef Arg, int i) {$/;"	f	file:
PruneEH	Transforms/IPO/PruneEH.cpp	/^    PruneEH() : CallGraphSCCPass(ID) {$/;"	f	struct:__anon583::PruneEH
PruneEH	Transforms/IPO/PruneEH.cpp	/^  struct PruneEH : public CallGraphSCCPass {$/;"	s	namespace:__anon583	file:
Pruned	CodeGen/RegisterCoalescer.cpp	/^    bool Pruned;$/;"	m	struct:__anon115::JoinVals::Val	file:
PrunedComputed	CodeGen/RegisterCoalescer.cpp	/^    bool PrunedComputed;$/;"	m	struct:__anon115::JoinVals::Val	file:
PruningFunctionCloner	Transforms/Utils/CloneFunction.cpp	/^    PruningFunctionCloner(Function *newFunc, const Function *oldFunc,$/;"	f	struct:__anon465::PruningFunctionCloner
PruningFunctionCloner	Transforms/Utils/CloneFunction.cpp	/^  struct PruningFunctionCloner {$/;"	s	namespace:__anon465	file:
Pseudo	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    Pseudo        = 0  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
Pseudo	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^    Pseudo   = 0,$/;"	e	enum:llvm::MipsII::__anon431
Pseudo	Target/Sparc/SparcInstrInfo.h	/^    Pseudo = (1<<0),$/;"	e	enum:llvm::SPII::__anon445
Pseudo	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    Pseudo         = 0,$/;"	e	enum:llvm::X86II::__anon350
PseudoOpc	Target/ARM/ARMBaseInstrInfo.cpp	/^  uint16_t PseudoOpc;$/;"	m	struct:AddSubFlagsOpcodePair	file:
PseudoOpc	Target/ARM/ARMExpandPseudoInsts.cpp	/^    uint16_t PseudoOpc;$/;"	m	struct:__anon312::NEONLdStTableEntry	file:
PseudoSourceValue	CodeGen/PseudoSourceValue.cpp	/^PseudoSourceValue::PseudoSourceValue(enum ValueTy Subclass) :$/;"	f	class:PseudoSourceValue
PseudoUseParam	Target/NVPTX/NVPTXISelLowering.h	/^  PseudoUseParam,$/;"	e	enum:llvm::NVPTXISD::NodeType
Ptr	Transforms/Scalar/SROA.cpp	/^    Value *Ptr;$/;"	m	class:__anon562::AggLoadStoreRewriter::OpSplitter	file:
PtrState	Transforms/Scalar/ObjCARC.cpp	/^    PtrState() : KnownPositiveRefCount(false), Partial(false),$/;"	f	class:__anon506::PtrState
PtrState	Transforms/Scalar/ObjCARC.cpp	/^  class PtrState {$/;"	c	namespace:__anon506	file:
PtrToIntInst	VMCore/Instructions.cpp	/^PtrToIntInst::PtrToIntInst($/;"	f	class:PtrToIntInst
PushDefUseChildren	Analysis/ScalarEvolution.cpp	/^PushDefUseChildren(Instruction *I,$/;"	f	file:
PushLoopPHIs	Analysis/ScalarEvolution.cpp	/^PushLoopPHIs(const Loop *L, SmallVectorImpl<Instruction *> &Worklist) {$/;"	f	file:
PushPopMIs	Target/ARM/ARMConstantIslandPass.cpp	/^    SmallVector<MachineInstr*, 4> PushPopMIs;$/;"	m	class:__anon310::ARMConstantIslands	file:
PushValueAndType	Bitcode/Writer/BitcodeWriter.cpp	/^static bool PushValueAndType(const Value *V, unsigned InstID,$/;"	f	file:
Puts	Transforms/Scalar/SimplifyLibCalls.cpp	/^    PutsOpt Puts;$/;"	m	class:__anon546::SimplifyLibCalls	file:
PutsOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct PutsOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
QII	Target/Hexagon/HexagonNewValueJump.cpp	/^    const HexagonInstrInfo    *QII;$/;"	m	struct:__anon410::HexagonNewValueJump	file:
QII	Target/Hexagon/HexagonPeephole.cpp	/^    const HexagonInstrInfo    *QII;$/;"	m	struct:__anon411::HexagonPeephole	file:
QPRDecoderTable	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static const uint16_t QPRDecoderTable[] = {$/;"	v	file:
QRI	Target/Hexagon/HexagonNewValueJump.cpp	/^    const HexagonRegisterInfo *QRI;$/;"	m	struct:__anon410::HexagonNewValueJump	file:
QRI	Target/Hexagon/HexagonPeephole.cpp	/^    const HexagonRegisterInfo *QRI;$/;"	m	struct:__anon411::HexagonPeephole	file:
QST	Target/Hexagon/HexagonCFGOptimizer.cpp	/^  const HexagonSubtarget &QST;$/;"	m	class:__anon402::HexagonCFGOptimizer	file:
QST	Target/Hexagon/HexagonExpandPredSpillCode.cpp	/^    const HexagonSubtarget &QST;$/;"	m	class:__anon401::HexagonExpandPredSpillCode	file:
QST	Target/Hexagon/HexagonSplitTFRCondSets.cpp	/^    const HexagonSubtarget &QST;$/;"	m	class:__anon407::HexagonSplitTFRCondSets	file:
QTM	Target/Hexagon/HexagonCFGOptimizer.cpp	/^  HexagonTargetMachine& QTM;$/;"	m	class:__anon402::HexagonCFGOptimizer	file:
QTM	Target/Hexagon/HexagonExpandPredSpillCode.cpp	/^    HexagonTargetMachine& QTM;$/;"	m	class:__anon401::HexagonExpandPredSpillCode	file:
QTM	Target/Hexagon/HexagonSplitTFRCondSets.cpp	/^    HexagonTargetMachine& QTM;$/;"	m	class:__anon407::HexagonSplitTFRCondSets	file:
QuadDRegs	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::QuadDRegs(EVT VT, SDValue V0, SDValue V1,$/;"	f	class:ARMDAGToDAGISel
QuadQRegs	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::QuadQRegs(EVT VT, SDValue V0, SDValue V1,$/;"	f	class:ARMDAGToDAGISel
QuadSRegs	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::QuadSRegs(EVT VT, SDValue V0, SDValue V1,$/;"	f	class:ARMDAGToDAGISel
QualifyName	TableGen/Record.cpp	/^Init *llvm::QualifyName(Record &CurRec, MultiClass *CurMultiClass,$/;"	f	class:llvm
Queries	CodeGen/LiveRegMatrix.h	/^  OwningArrayPtr<LiveIntervalUnion::Query> Queries;$/;"	m	class:llvm::LiveRegMatrix
Query	Analysis/InstructionSimplify.cpp	/^  Query(const DataLayout *td, const TargetLibraryInfo *tli,$/;"	f	struct:Query
Query	Analysis/InstructionSimplify.cpp	/^struct Query {$/;"	s	file:
Query	CodeGen/LiveIntervalUnion.h	/^    Query(): LiveUnion(), VirtReg(), Tag(0), UserTag(0) {}$/;"	f	class:llvm::LiveIntervalUnion::Query
Query	CodeGen/LiveIntervalUnion.h	/^    Query(LiveInterval *VReg, LiveIntervalUnion *LIU):$/;"	f	class:llvm::LiveIntervalUnion::Query
Query	CodeGen/LiveIntervalUnion.h	/^  class Query {$/;"	c	class:llvm::LiveIntervalUnion
Queue	CodeGen/RegAllocBasic.cpp	/^                      CompSpillWeight> Queue;$/;"	m	class:__anon122::RABasic	file:
Queue	CodeGen/RegAllocGreedy.cpp	/^  std::priority_queue<std::pair<unsigned, unsigned> > Queue;$/;"	m	class:__anon158::RAGreedy	file:
Queue	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^    SmallVector<SUnit *, 16> Queue;$/;"	m	struct:__anon86::FastPriorityQueue	file:
Queue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  std::vector<SUnit*> Queue;$/;"	m	class:__anon77::RegReductionPQBase	file:
Queue	Transforms/Scalar/SROA.cpp	/^  SmallVector<OffsetUse, 8> Queue;$/;"	m	class:AllocaPartitioning::BuilderBase	file:
Queue	Transforms/Scalar/SROA.cpp	/^  SmallVector<Use *, 8> Queue;$/;"	m	class:__anon562::AggLoadStoreRewriter	file:
QueuePhiNode	Transforms/Utils/PromoteMemoryToRegister.cpp	/^bool PromoteMem2Reg::QueuePhiNode(BasicBlock *BB, unsigned AllocaNo,$/;"	f	class:PromoteMem2Reg
Quotient	Transforms/Utils/BypassSlowDivision.cpp	/^    PHINode *Quotient;$/;"	m	struct:__anon477::DivPhiNodes	file:
RABasic	CodeGen/RegAllocBasic.cpp	/^RABasic::RABasic(): MachineFunctionPass(ID) {$/;"	f	class:RABasic
RABasic	CodeGen/RegAllocBasic.cpp	/^class RABasic : public MachineFunctionPass, public RegAllocBase$/;"	c	namespace:__anon122	file:
RAFast	CodeGen/RegAllocFast.cpp	/^    RAFast() : MachineFunctionPass(ID), StackSlotForVirtReg(-1),$/;"	f	class:__anon140::RAFast
RAFast	CodeGen/RegAllocFast.cpp	/^  class RAFast : public MachineFunctionPass {$/;"	c	namespace:__anon140	file:
RAGreedy	CodeGen/RegAllocGreedy.cpp	/^RAGreedy::RAGreedy(): MachineFunctionPass(ID) {$/;"	f	class:RAGreedy
RAGreedy	CodeGen/RegAllocGreedy.cpp	/^class RAGreedy : public MachineFunctionPass,$/;"	c	namespace:__anon158	file:
RAStackOffset	Target/MBlaze/MBlazeMachineFunction.h	/^  int RAStackOffset;$/;"	m	class:llvm::MBlazeFunctionInfo
RAUWUpdateListener	CodeGen/SelectionDAG/SelectionDAG.cpp	/^  RAUWUpdateListener(SelectionDAG &d,$/;"	f	class:__anon73::RAUWUpdateListener
RAUWUpdateListener	CodeGen/SelectionDAG/SelectionDAG.cpp	/^class RAUWUpdateListener : public SelectionDAG::DAGUpdateListener {$/;"	c	namespace:__anon73	file:
RBIT	Target/ARM/ARMISelLowering.h	/^      RBIT,         \/\/ ARM bitreverse instruction$/;"	e	enum:llvm::ARMISD::NodeType
RC	CodeGen/AggressiveAntiDepBreaker.h	/^      const TargetRegisterClass *RC;$/;"	m	struct:llvm::AggressiveAntiDepState::__anon117
RC	CodeGen/ExecutionDepsFix.cpp	/^  const TargetRegisterClass *const RC;$/;"	m	class:__anon120::ExeDepsFix	file:
RCI	CodeGen/AllocationOrder.h	/^  const RegisterClassInfo &RCI;$/;"	m	class:llvm::AllocationOrder
RCPair	Target/ARM/ARMISelLowering.cpp	/^typedef std::pair<unsigned, const TargetRegisterClass*> RCPair;$/;"	t	file:
RDRAND	Target/X86/X86ISelLowering.h	/^      RDRAND,$/;"	e	enum:llvm::X86ISD::NodeType
RDTSC_DAG	Target/X86/X86ISelLowering.h	/^      RDTSC_DAG,$/;"	e	enum:llvm::X86ISD::NodeType
REGEX_BAD	Support/regex2.h	141;"	d
REGS_16BIT	Target/X86/Disassembler/X86DisassemblerDecoder.h	106;"	d
REGS_32BIT	Target/X86/Disassembler/X86DisassemblerDecoder.h	142;"	d
REGS_64BIT	Target/X86/Disassembler/X86DisassemblerDecoder.h	178;"	d
REGS_8BIT	Target/X86/Disassembler/X86DisassemblerDecoder.h	66;"	d
REGS_CONTROL	Target/X86/Disassembler/X86DisassemblerDecoder.h	260;"	d
REGS_DEBUG	Target/X86/Disassembler/X86DisassemblerDecoder.h	250;"	d
REGS_MMX	Target/X86/Disassembler/X86DisassemblerDecoder.h	196;"	d
REGS_SEGMENT	Target/X86/Disassembler/X86DisassemblerDecoder.h	242;"	d
REGS_XMM	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  REGS_XMM$/;"	e	enum:__anon355
REGS_XMM	Target/X86/Disassembler/X86DisassemblerDecoder.h	206;"	d
REGS_YMM	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  REGS_YMM$/;"	e	enum:__anon355
REGS_YMM	Target/X86/Disassembler/X86DisassemblerDecoder.h	224;"	d
REG_ASSERT	Support/regex_impl.h	80;"	d
REG_ATOI	Support/regex_impl.h	82;"	d
REG_BACKR	Support/regex_impl.h	91;"	d
REG_BADBR	Support/regex_impl.h	75;"	d
REG_BADPAT	Support/regex_impl.h	67;"	d
REG_BADRPT	Support/regex_impl.h	78;"	d
REG_BASIC	Support/regex_impl.h	56;"	d
REG_DUMP	Support/regex_impl.h	63;"	d
REG_EBRACE	Support/regex_impl.h	74;"	d
REG_EBRACK	Support/regex_impl.h	72;"	d
REG_ECOLLATE	Support/regex_impl.h	68;"	d
REG_ECTYPE	Support/regex_impl.h	69;"	d
REG_EESCAPE	Support/regex_impl.h	70;"	d
REG_EMPTY	Support/regex_impl.h	79;"	d
REG_EPAREN	Support/regex_impl.h	73;"	d
REG_ERANGE	Support/regex_impl.h	76;"	d
REG_ESPACE	Support/regex_impl.h	77;"	d
REG_ESUBREG	Support/regex_impl.h	71;"	d
REG_EXTENDED	Support/regex_impl.h	57;"	d
REG_ICASE	Support/regex_impl.h	58;"	d
REG_INVARG	Support/regex_impl.h	81;"	d
REG_ITOA	Support/regex_impl.h	83;"	d
REG_LARGE	Support/regex_impl.h	90;"	d
REG_NEWLINE	Support/regex_impl.h	60;"	d
REG_NOMATCH	Support/regex_impl.h	66;"	d
REG_NOSPEC	Support/regex_impl.h	61;"	d
REG_NOSUB	Support/regex_impl.h	59;"	d
REG_NOTBOL	Support/regex_impl.h	86;"	d
REG_NOTEOL	Support/regex_impl.h	87;"	d
REG_PEND	Support/regex_impl.h	62;"	d
REG_STARTEND	Support/regex_impl.h	88;"	d
REG_TRACE	Support/regex_impl.h	89;"	d
REP	Support/regcomp.c	955;"	d	file:
REP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    REP         = 2 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
REP_MOVS	Target/X86/X86ISelLowering.h	/^      REP_MOVS,$/;"	e	enum:llvm::X86ISD::NodeType
REP_STOS	Target/X86/X86ISelLowering.h	/^      REP_STOS,$/;"	e	enum:llvm::X86ISD::NodeType
REQUIRE	Support/regcomp.c	127;"	d	file:
REQUIRES_EH	TableGen/Makefile	/^REQUIRES_EH = 1$/;"	m
REQUIRES_RTTI	Support/Makefile	/^REQUIRES_RTTI = 1$/;"	m
REQUIRES_RTTI	VMCore/Makefile	/^REQUIRES_RTTI = 1$/;"	m
RESERVED_0	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RESERVED_0 = 0,$/;"	e	enum:llvm::ARM_MB::MemBOpt
RESERVED_1	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RESERVED_1 = 1,$/;"	e	enum:llvm::ARM_MB::MemBOpt
RESERVED_12	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RESERVED_12 = 12,$/;"	e	enum:llvm::ARM_MB::MemBOpt
RESERVED_13	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RESERVED_13 = 13,$/;"	e	enum:llvm::ARM_MB::MemBOpt
RESERVED_4	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RESERVED_4 = 4,$/;"	e	enum:llvm::ARM_MB::MemBOpt
RESERVED_5	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RESERVED_5 = 5,$/;"	e	enum:llvm::ARM_MB::MemBOpt
RESERVED_8	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RESERVED_8 = 8,$/;"	e	enum:llvm::ARM_MB::MemBOpt
RESERVED_9	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RESERVED_9 = 9,$/;"	e	enum:llvm::ARM_MB::MemBOpt
RETI_FLAG	Target/MSP430/MSP430ISelLowering.h	/^      RETI_FLAG,$/;"	e	enum:llvm::MSP430ISD::__anon397
RETSP	Target/XCore/XCoreISelLowering.h	/^      RETSP,$/;"	e	enum:llvm::XCoreISD::NodeType
RETURN	Target/NVPTX/NVPTXISelLowering.h	/^  RETURN,$/;"	e	enum:llvm::NVPTXISD::NodeType
RET_FLAG	Target/ARM/ARMISelLowering.h	/^      RET_FLAG,     \/\/ Return with a flag operand.$/;"	e	enum:llvm::ARMISD::NodeType
RET_FLAG	Target/CellSPU/SPUISelLowering.h	/^      RET_FLAG,                 \/\/\/< Return with flag, matched by bi instruction$/;"	e	enum:llvm::SPUISD::NodeType
RET_FLAG	Target/Hexagon/HexagonISelLowering.h	/^      RET_FLAG,    \/\/ Return with a flag operand.$/;"	e	enum:llvm::HexagonISD::__anon404
RET_FLAG	Target/MSP430/MSP430ISelLowering.h	/^      RET_FLAG,$/;"	e	enum:llvm::MSP430ISD::__anon397
RET_FLAG	Target/NVPTX/NVPTXISelLowering.h	/^  RET_FLAG,$/;"	e	enum:llvm::NVPTXISD::NodeType
RET_FLAG	Target/PowerPC/PPCISelLowering.h	/^      RET_FLAG,$/;"	e	enum:llvm::PPCISD::NodeType
RET_FLAG	Target/Sparc/SparcISelLowering.h	/^      RET_FLAG,    \/\/ Return with a flag operand.$/;"	e	enum:llvm::SPISD::__anon444
RET_FLAG	Target/X86/X86ISelLowering.h	/^      RET_FLAG,$/;"	e	enum:llvm::X86ISD::NodeType
REXShift	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    REXShift    = Op0Shift + 5,$/;"	e	enum:llvm::X86II::__anon350
REX_W	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    REX_W       = 1 << REXShift,$/;"	e	enum:llvm::X86II::__anon350
RGPassManager	Analysis/RegionPass.cpp	/^RGPassManager::RGPassManager()$/;"	f	class:RGPassManager
RI	ExecutionEngine/JIT/JITDwarfEmitter.h	/^  const TargetRegisterInfo* RI;$/;"	m	class:llvm::JITDwarfEmitter
RI	Target/ARM/ARMInstrInfo.h	/^  ARMRegisterInfo RI;$/;"	m	class:llvm::ARMInstrInfo
RI	Target/ARM/Thumb1InstrInfo.h	/^  Thumb1RegisterInfo RI;$/;"	m	class:llvm::Thumb1InstrInfo
RI	Target/ARM/Thumb2InstrInfo.h	/^  Thumb2RegisterInfo RI;$/;"	m	class:llvm::Thumb2InstrInfo
RI	Target/CellSPU/SPUInstrInfo.h	/^    const SPURegisterInfo RI;$/;"	m	class:llvm::SPUInstrInfo
RI	Target/Hexagon/HexagonInstrInfo.h	/^  const HexagonRegisterInfo RI;$/;"	m	class:llvm::HexagonInstrInfo
RI	Target/MBlaze/MBlazeInstrInfo.h	/^  const MBlazeRegisterInfo RI;$/;"	m	class:llvm::MBlazeInstrInfo
RI	Target/MSP430/MSP430InstrInfo.h	/^  const MSP430RegisterInfo RI;$/;"	m	class:llvm::MSP430InstrInfo
RI	Target/Mips/Mips16InstrInfo.h	/^  const Mips16RegisterInfo RI;$/;"	m	class:llvm::Mips16InstrInfo
RI	Target/Mips/MipsSEInstrInfo.h	/^  const MipsSERegisterInfo RI;$/;"	m	class:llvm::MipsSEInstrInfo
RI	Target/PowerPC/PPCInstrInfo.h	/^  const PPCRegisterInfo RI;$/;"	m	class:llvm::PPCInstrInfo
RI	Target/Sparc/SparcInstrInfo.h	/^  const SparcRegisterInfo RI;$/;"	m	class:llvm::SparcInstrInfo
RI	Target/X86/X86InstrInfo.h	/^  const X86RegisterInfo RI;$/;"	m	class:llvm::X86InstrInfo
RI	Target/XCore/XCoreInstrInfo.h	/^  const XCoreRegisterInfo RI;$/;"	m	class:llvm::XCoreInstrInfo
RIPRel	Target/X86/X86Subtarget.h	/^  RIPRel,           \/\/ Used on X86-64 when not in -static mode.$/;"	e	enum:llvm::PICStyles::Style
RLA	Target/MSP430/MSP430ISelLowering.h	/^      RRA, RLA,$/;"	e	enum:llvm::MSP430ISD::__anon397
ROTBYTES_LEFT	Target/CellSPU/SPUISelLowering.h	/^      ROTBYTES_LEFT,            \/\/\/< Rotate bytes (loads -> ROTQBYI)$/;"	e	enum:llvm::SPUISD::NodeType
ROTBYTES_LEFT_BITS	Target/CellSPU/SPUISelLowering.h	/^      ROTBYTES_LEFT_BITS,       \/\/\/< Rotate bytes left by bit shift count$/;"	e	enum:llvm::SPUISD::NodeType
RPDelta	CodeGen/MachineScheduler.cpp	/^    RegPressureDelta RPDelta;$/;"	m	struct:__anon126::ConvergingScheduler::SchedCandidate	file:
RPDelta	Target/Hexagon/HexagonMachineScheduler.h	/^    RegPressureDelta RPDelta;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedCandidate
RRA	Target/MSP430/MSP430ISelLowering.h	/^      RRA, RLA,$/;"	e	enum:llvm::MSP430ISD::__anon397
RRC	Target/MSP430/MSP430ISelLowering.h	/^      RRC,$/;"	e	enum:llvm::MSP430ISD::__anon397
RRI	Transforms/Scalar/ObjCARC.cpp	/^    RRInfo RRI;$/;"	m	class:__anon506::PtrState	file:
RRInfo	Transforms/Scalar/ObjCARC.cpp	/^    RRInfo() :$/;"	f	struct:__anon505::RRInfo
RRInfo	Transforms/Scalar/ObjCARC.cpp	/^  struct RRInfo {$/;"	s	namespace:__anon505	file:
RRX	Target/ARM/ARMISelLowering.h	/^      RRX,          \/\/ V = RRX X, Flag     -> srl X, 1 + shift in carry flag.$/;"	e	enum:llvm::ARMISD::NodeType
RS	CodeGen/BranchFolding.h	/^    RegScavenger *RS;$/;"	m	class:llvm::BranchFolder
RS	CodeGen/PrologEpilogInserter.h	/^    RegScavenger *RS;$/;"	m	class:llvm::PEI
RS	CodeGen/TailDuplication.cpp	/^    OwningPtr<RegScavenger> RS;$/;"	m	class:__anon167::TailDuplicatePass	file:
RS	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    RegScavenger *RS;$/;"	m	struct:__anon303::ARMLoadStoreOpt	file:
RS_Assign	CodeGen/RegAllocGreedy.cpp	/^    RS_Assign,$/;"	e	enum:__anon158::RAGreedy::LiveRangeStage	file:
RS_Done	CodeGen/RegAllocGreedy.cpp	/^    RS_Done$/;"	e	enum:__anon158::RAGreedy::LiveRangeStage	file:
RS_New	CodeGen/RegAllocGreedy.cpp	/^    RS_New,$/;"	e	enum:__anon158::RAGreedy::LiveRangeStage	file:
RS_Spill	CodeGen/RegAllocGreedy.cpp	/^    RS_Spill,$/;"	e	enum:__anon158::RAGreedy::LiveRangeStage	file:
RS_Split	CodeGen/RegAllocGreedy.cpp	/^    RS_Split,$/;"	e	enum:__anon158::RAGreedy::LiveRangeStage	file:
RS_Split2	CodeGen/RegAllocGreedy.cpp	/^    RS_Split2,$/;"	e	enum:__anon158::RAGreedy::LiveRangeStage	file:
RWMutexImpl	Support/RWMutex.cpp	/^RWMutexImpl::RWMutexImpl() { }$/;"	f	class:llvm::RWMutexImpl
Range	Analysis/LazyValueInfo.cpp	/^  ConstantRange Range;$/;"	m	class:__anon18::LVILatticeVal	file:
Range	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    APInt Range;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestBlock
Range	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    CaseRange Range;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseRec
Range	DebugInfo/DWARFDebugAranges.h	/^    explicit Range(uint64_t lo = -1ULL, uint64_t hi = -1ULL,$/;"	f	struct:llvm::DWARFDebugAranges::Range
Range	DebugInfo/DWARFDebugAranges.h	/^  struct Range {$/;"	s	class:llvm::DWARFDebugAranges
Range	Support/YAMLParser.cpp	/^  StringRef Range;$/;"	m	struct:llvm::yaml::Token	file:
RangeColl	DebugInfo/DWARFDebugAranges.h	/^  typedef std::vector<Range>              RangeColl;$/;"	t	class:llvm::DWARFDebugAranges
RangeCollIterator	DebugInfo/DWARFDebugAranges.h	/^  typedef RangeColl::const_iterator       RangeCollIterator;$/;"	t	class:llvm::DWARFDebugAranges
RangeCollection	DebugInfo/DWARFDebugAranges.cpp	/^    DWARFDebugAranges::RangeColl& RangeCollection;$/;"	m	class:__anon173::AddArangeDescriptors	file:
RangeIndex	CodeGen/AsmPrinter/DwarfException.h	/^    unsigned RangeIndex;$/;"	m	struct:llvm::DwarfException::PadRange
RangeIndex	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^  unsigned RangeIndex;$/;"	m	struct:__anon183::PadRange	file:
RangeLessThan	DebugInfo/DWARFDebugAranges.cpp	/^static bool RangeLessThan(const DWARFDebugAranges::Range &range1,$/;"	f	file:
RangeListEntry	DebugInfo/DWARFDebugRangeList.h	/^  struct RangeListEntry {$/;"	s	class:llvm::DWARFDebugRangeList
RangeMapType	CodeGen/AsmPrinter/DwarfException.h	/^  typedef DenseMap<MCSymbol *, PadRange> RangeMapType;$/;"	t	class:llvm::DwarfException
RangeMapType	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^typedef DenseMap<MCSymbol*, PadRange> RangeMapType;$/;"	t	namespace:__anon183	file:
RangeSection	DebugInfo/DWARFContext.h	/^  StringRef RangeSection;$/;"	m	class:llvm::DWARFContextInMemory
Ranges	Transforms/Scalar/MemCpyOptimizer.cpp	/^  std::list<MemsetRange> Ranges;$/;"	m	class:__anon574::MemsetRanges	file:
Rank	Transforms/Scalar/Reassociate.cpp	/^    unsigned Rank;$/;"	m	struct:__anon547::ValueEntry	file:
RankMap	Transforms/Scalar/Reassociate.cpp	/^    DenseMap<BasicBlock*, unsigned> RankMap;$/;"	m	class:__anon549::Reassociate	file:
RateFormula	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Cost::RateFormula(const Formula &F,$/;"	f	class:Cost
RatePrimaryRegister	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Cost::RatePrimaryRegister(const SCEV *Reg,$/;"	f	class:Cost
RateRegister	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Cost::RateRegister(const SCEV *Reg,$/;"	f	class:Cost
Raw	VMCore/Attributes.cpp	/^uint64_t Attributes::Raw() const {$/;"	f	class:Attributes
Raw	VMCore/AttributesImpl.h	/^  uint64_t Raw() const { return Bits; } \/\/ FIXME: Remove.$/;"	f	class:llvm::AttributesImpl
RawFrm	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    RawFrm         = 1,$/;"	e	enum:llvm::X86II::__anon350
RawFrmImm16	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    RawFrmImm16 = 44,$/;"	e	enum:llvm::X86II::__anon350
RawFrmImm8	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    RawFrmImm8 = 43,$/;"	e	enum:llvm::X86II::__anon350
RawFunc	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^typedef void (*RawFunc)();$/;"	t	file:
RawFunctions	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static ManagedStatic<std::map<const Function *, RawFunc> > RawFunctions;$/;"	v	file:
RawMemoryObject	Support/StreamableMemoryObject.cpp	/^  RawMemoryObject(const unsigned char *Start, const unsigned char *End) :$/;"	f	class:__anon236::RawMemoryObject
RawMemoryObject	Support/StreamableMemoryObject.cpp	/^class RawMemoryObject : public StreamableMemoryObject {$/;"	c	namespace:__anon236	file:
Read	Analysis/Lint.cpp	/^    static unsigned Read     = 1;$/;"	m	namespace:__anon5::MemRef	file:
ReadByValArg	Target/Mips/MipsISelLowering.cpp	/^static void ReadByValArg(MachineFunction &MF, SDValue Chain, DebugLoc dl,$/;"	f	file:
ReadCount	Analysis/ProfileInfoLoaderPass.cpp	/^    unsigned ReadCount;$/;"	m	class:__anon52::LoaderPass	file:
ReadDataFromGlobal	Analysis/ConstantFolding.cpp	/^static bool ReadDataFromGlobal(Constant *C, uint64_t ByteOffset,$/;"	f	file:
ReadDataInCodeTableEntry	Object/MachOObject.cpp	/^void MachOObject::ReadDataInCodeTableEntry(uint64_t TableOffset,$/;"	f	class:MachOObject
ReadDysymtabLoadCommand	Object/MachOObject.cpp	/^void MachOObject::ReadDysymtabLoadCommand(const LoadCommandInfo &LCI,$/;"	f	class:MachOObject
ReadInMemoryStruct	Object/MachOObject.cpp	/^static void ReadInMemoryStruct(const MachOObject &MOO,$/;"	f	file:
ReadIndirectSymbolTableEntry	Object/MachOObject.cpp	/^MachOObject::ReadIndirectSymbolTableEntry(const macho::DysymtabLoadCommand &DLC,$/;"	f	class:MachOObject
ReadLinkeditDataLoadCommand	Object/MachOObject.cpp	/^void MachOObject::ReadLinkeditDataLoadCommand(const LoadCommandInfo &LCI,$/;"	f	class:MachOObject
ReadOrAssert	Analysis/ProfileVerifierPass.cpp	/^  double ProfileVerifierPassT<FType, BType>::ReadOrAssert(typename ProfileInfoT<FType, BType>::Edge E) {$/;"	f	class:__anon36::ProfileVerifierPassT
ReadProfilingArgBlock	Analysis/ProfileDataLoader.cpp	/^static void ReadProfilingArgBlock(const char *ToolName, FILE *F,$/;"	f	file:
ReadProfilingBlock	Analysis/ProfileDataLoader.cpp	/^static void ReadProfilingBlock(const char *ToolName, FILE *F,$/;"	f	file:
ReadProfilingBlock	Analysis/ProfileInfoLoader.cpp	/^static void ReadProfilingBlock(const char *ToolName, FILE *F,$/;"	f	file:
ReadProfilingData	Analysis/ProfileDataLoader.cpp	/^static void ReadProfilingData(const char *ToolName, FILE *F,$/;"	f	file:
ReadProfilingNumEntries	Analysis/ProfileDataLoader.cpp	/^static unsigned ReadProfilingNumEntries(const char *ToolName, FILE *F,$/;"	f	file:
ReadRelocationEntry	Object/MachOObject.cpp	/^void MachOObject::ReadRelocationEntry(uint64_t RelocationTableOffset,$/;"	f	class:MachOObject
ReadSection	Object/MachOObject.cpp	/^void MachOObject::ReadSection(const LoadCommandInfo &LCI,$/;"	f	class:MachOObject
ReadSection64	Object/MachOObject.cpp	/^void MachOObject::ReadSection64(const LoadCommandInfo &LCI,$/;"	f	class:MachOObject
ReadSegment64LoadCommand	Object/MachOObject.cpp	/^void MachOObject::ReadSegment64LoadCommand(const LoadCommandInfo &LCI,$/;"	f	class:MachOObject
ReadSegmentLoadCommand	Object/MachOObject.cpp	/^void MachOObject::ReadSegmentLoadCommand(const LoadCommandInfo &LCI,$/;"	f	class:MachOObject
ReadString	AsmParser/LLLexer.cpp	/^lltok::Kind LLLexer::ReadString(lltok::Kind kind) {$/;"	f	class:LLLexer
ReadSymbol64TableEntry	Object/MachOObject.cpp	/^void MachOObject::ReadSymbol64TableEntry(uint64_t SymbolTableOffset,$/;"	f	class:MachOObject
ReadSymbolTableEntry	Object/MachOObject.cpp	/^void MachOObject::ReadSymbolTableEntry(uint64_t SymbolTableOffset,$/;"	f	class:MachOObject
ReadSymtabLoadCommand	Object/MachOObject.cpp	/^void MachOObject::ReadSymtabLoadCommand(const LoadCommandInfo &LCI,$/;"	f	class:MachOObject
ReadTable	CodeGen/DFAPacketizer.cpp	/^void DFAPacketizer::ReadTable(unsigned int state) {$/;"	f	class:DFAPacketizer
ReadULEB128s	Object/MachOObject.cpp	/^void MachOObject::ReadULEB128s(uint64_t Index,$/;"	f	class:MachOObject
ReadVarName	AsmParser/LLLexer.cpp	/^bool LLLexer::ReadVarName() {$/;"	f	class:LLLexer
ReadWideAPInt	Bitcode/Reader/BitcodeReader.cpp	/^static APInt ReadWideAPInt(ArrayRef<uint64_t> Vals, unsigned TypeBits) {$/;"	f	file:
ReadyQ	CodeGen/MachineScheduler.cpp	/^  std::vector<SUnit*> ReadyQ;$/;"	m	class:__anon128::ILPScheduler	file:
ReadyToProcess	CodeGen/SelectionDAG/LegalizeTypes.h	/^    ReadyToProcess = 0,$/;"	e	enum:llvm::DAGTypeLegalizer::NodeIdFlags
RealOpc	Target/ARM/ARMExpandPseudoInsts.cpp	/^    uint16_t RealOpc;$/;"	m	struct:__anon312::NEONLdStTableEntry	file:
RealTimeProfile	Target/ARM/ARMBuildAttrs.h	/^    RealTimeProfile = (0x52), \/\/ 'R' (e.g. for Cortex R4)$/;"	e	enum:ARMBuildAttrs::CPUArchProfile
ReallocLike	Analysis/MemoryBuiltins.cpp	/^  ReallocLike        = 1<<2, \/\/ reallocates$/;"	e	enum:AllocType	file:
Reassociate	Transforms/Scalar/Reassociate.cpp	/^    Reassociate() : FunctionPass(ID) {$/;"	f	class:__anon549::Reassociate
Reassociate	Transforms/Scalar/Reassociate.cpp	/^  class Reassociate : public FunctionPass {$/;"	c	namespace:__anon549	file:
ReassociateExpression	Transforms/Scalar/Reassociate.cpp	/^void Reassociate::ReassociateExpression(BinaryOperator *I) {$/;"	f	class:Reassociate
ReassociateOps	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::ReassociateOps(unsigned Opc, DebugLoc DL,$/;"	f	class:DAGCombiner
Rec	TableGen/TGParser.cpp	/^  Record *Rec;$/;"	m	struct:llvm::SubClassReference	file:
RecedeCycle	CodeGen/ScoreboardHazardRecognizer.cpp	/^void ScoreboardHazardRecognizer::RecedeCycle() {$/;"	f	class:ScoreboardHazardRecognizer
RecedeCycle	Target/ARM/ARMHazardRecognizer.cpp	/^void ARMHazardRecognizer::RecedeCycle() {$/;"	f	class:ARMHazardRecognizer
RecentPositive	CodeGen/SpillPlacement.h	/^  SmallVector<unsigned, 8> RecentPositive;$/;"	m	class:llvm::SpillPlacement
RecognizePersonality	Transforms/InstCombine/InstructionCombining.cpp	/^static Personality_Type RecognizePersonality(Value *Pers) {$/;"	f	file:
RecomputeRegs	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRUse::RecomputeRegs(size_t LUIdx, RegUseTracker &RegUses) {$/;"	f	class:LSRUse
ReconstructShuffle	Target/ARM/ARMISelLowering.cpp	/^SDValue ARMTargetLowering::ReconstructShuffle(SDValue Op,$/;"	f	class:ARMTargetLowering
RecordARMScatteredHalfRelocation	Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp	/^RecordARMScatteredHalfRelocation(MachObjectWriter *Writer,$/;"	f	class:ARMMachObjectWriter
RecordARMScatteredRelocation	Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp	/^void ARMMachObjectWriter::RecordARMScatteredRelocation(MachObjectWriter *Writer,$/;"	f	class:ARMMachObjectWriter
RecordProcEnd	MC/MCStreamer.cpp	/^void MCStreamer::RecordProcEnd(MCDwarfFrameInfo &Frame) {$/;"	f	class:MCStreamer
RecordProcStart	MC/MCStreamer.cpp	/^void MCStreamer::RecordProcStart(MCDwarfFrameInfo &Frame) {$/;"	f	class:MCStreamer
RecordRelocation	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::RecordRelocation(const MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
RecordRelocation	MC/MachObjectWriter.cpp	/^void MachObjectWriter::RecordRelocation(const MCAssembler &Asm,$/;"	f	class:MachObjectWriter
RecordRelocation	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::RecordRelocation(const MCAssembler &Asm,$/;"	f	class:WinCOFFObjectWriter
RecordRelocation	Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp	/^void ARMMachObjectWriter::RecordRelocation(MachObjectWriter *Writer,$/;"	f	class:ARMMachObjectWriter
RecordRelocation	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  void RecordRelocation(MachObjectWriter *Writer,$/;"	f	class:__anon320::PPCMachObjectWriter
RecordRelocation	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^  void RecordRelocation(MachObjectWriter *Writer,$/;"	f	class:__anon351::X86MachObjectWriter
RecordScatteredRelocation	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^bool X86MachObjectWriter::RecordScatteredRelocation(MachObjectWriter *Writer,$/;"	f	class:X86MachObjectWriter
RecordTLVPRelocation	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^void X86MachObjectWriter::RecordTLVPRelocation(MachObjectWriter *Writer,$/;"	f	class:X86MachObjectWriter
RecordVal	TableGen/Record.cpp	/^RecordVal::RecordVal(Init *N, RecTy *T, unsigned P)$/;"	f	class:RecordVal
RecordVal	TableGen/Record.cpp	/^RecordVal::RecordVal(const std::string &N, RecTy *T, unsigned P)$/;"	f	class:RecordVal
RecordX86Relocation	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^void X86MachObjectWriter::RecordX86Relocation(MachObjectWriter *Writer,$/;"	f	class:X86MachObjectWriter
RecordX86_64Relocation	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^void X86MachObjectWriter::RecordX86_64Relocation(MachObjectWriter *Writer,$/;"	f	class:X86MachObjectWriter
Records	TableGen/TGParser.h	/^  RecordKeeper &Records;$/;"	m	class:llvm::TGParser
RecursionLimit	Analysis/InstructionSimplify.cpp	/^enum { RecursionLimit = 3 };$/;"	e	enum:__anon11	file:
RecursionSet	Transforms/Scalar/JumpThreading.cpp	/^    DenseSet<std::pair<Value*, BasicBlock*> > RecursionSet;$/;"	m	class:__anon542::JumpThreading	file:
RecursionSetRemover	Transforms/Scalar/JumpThreading.cpp	/^      RecursionSetRemover(DenseSet<std::pair<Value*, BasicBlock*> > &S,$/;"	f	struct:__anon542::JumpThreading::RecursionSetRemover
RecursionSetRemover	Transforms/Scalar/JumpThreading.cpp	/^    struct RecursionSetRemover {$/;"	s	class:__anon542::JumpThreading	file:
RecursivelyDeleteDeadPHINode	Transforms/Utils/Local.cpp	/^bool llvm::RecursivelyDeleteDeadPHINode(PHINode *PN,$/;"	f	class:llvm
RecursivelyDeleteTriviallyDeadInstructions	Transforms/Utils/Local.cpp	/^llvm::RecursivelyDeleteTriviallyDeadInstructions(Value *V,$/;"	f	class:llvm
RedefVNI	CodeGen/RegisterCoalescer.cpp	/^    VNInfo *RedefVNI;$/;"	m	struct:__anon115::JoinVals::Val	file:
RedoInsts	Transforms/Scalar/Reassociate.cpp	/^    SetVector<AssertingVH<Instruction> > RedoInsts;$/;"	m	class:__anon549::Reassociate	file:
ReduceEntry	Target/ARM/Thumb2SizeReduction.cpp	/^  struct ReduceEntry {$/;"	s	namespace:__anon300	file:
ReduceLoadOpStoreWidth	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::ReduceLoadOpStoreWidth(SDNode *N) {$/;"	f	class:DAGCombiner
ReduceLoadStore	Target/ARM/Thumb2SizeReduction.cpp	/^Thumb2SizeReduce::ReduceLoadStore(MachineBasicBlock &MBB, MachineInstr *MI,$/;"	f	class:Thumb2SizeReduce
ReduceLoadWidth	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::ReduceLoadWidth(SDNode *N) {$/;"	f	class:DAGCombiner
ReduceMBB	Target/ARM/Thumb2SizeReduction.cpp	/^bool Thumb2SizeReduce::ReduceMBB(MachineBasicBlock &MBB) {$/;"	f	class:Thumb2SizeReduce
ReduceOpcodeMap	Target/ARM/Thumb2SizeReduction.cpp	/^    DenseMap<unsigned, unsigned> ReduceOpcodeMap;$/;"	m	class:__anon300::Thumb2SizeReduce	file:
ReduceSpecial	Target/ARM/Thumb2SizeReduction.cpp	/^Thumb2SizeReduce::ReduceSpecial(MachineBasicBlock &MBB, MachineInstr *MI,$/;"	f	class:Thumb2SizeReduce
ReduceTable	Target/ARM/Thumb2SizeReduction.cpp	/^  static const ReduceEntry ReduceTable[] = {$/;"	m	namespace:__anon300	file:
ReduceTo2Addr	Target/ARM/Thumb2SizeReduction.cpp	/^Thumb2SizeReduce::ReduceTo2Addr(MachineBasicBlock &MBB, MachineInstr *MI,$/;"	f	class:Thumb2SizeReduce
ReduceToNarrow	Target/ARM/Thumb2SizeReduction.cpp	/^Thumb2SizeReduce::ReduceToNarrow(MachineBasicBlock &MBB, MachineInstr *MI,$/;"	f	class:Thumb2SizeReduce
ReductionDescriptor	Transforms/Vectorize/LoopVectorize.cpp	/^    ReductionDescriptor():$/;"	f	struct:__anon605::LoopVectorizationLegality::ReductionDescriptor
ReductionDescriptor	Transforms/Vectorize/LoopVectorize.cpp	/^    ReductionDescriptor(Value *Start, Instruction *Exit, ReductionKind K):$/;"	f	struct:__anon605::LoopVectorizationLegality::ReductionDescriptor
ReductionDescriptor	Transforms/Vectorize/LoopVectorize.cpp	/^  struct ReductionDescriptor {$/;"	s	class:__anon605::LoopVectorizationLegality	file:
ReductionKind	Transforms/Vectorize/LoopVectorize.cpp	/^  enum ReductionKind {$/;"	g	class:__anon605::LoopVectorizationLegality	file:
ReductionList	Transforms/Vectorize/LoopVectorize.cpp	/^  typedef DenseMap<PHINode*, ReductionDescriptor> ReductionList;$/;"	t	class:__anon605::LoopVectorizationLegality	file:
Reductions	Transforms/Vectorize/LoopVectorize.cpp	/^  ReductionList Reductions;$/;"	m	class:__anon605::LoopVectorizationLegality	file:
RedzoneSize	Transforms/Instrumentation/AddressSanitizer.cpp	/^  size_t RedzoneSize;$/;"	m	struct:__anon491::AddressSanitizer	file:
Ref	Analysis/AliasAnalysisEvaluator.cpp	/^    unsigned NoModRef, Mod, Ref, ModRef;$/;"	m	class:__anon47::AAEval	file:
RefCnt	ExecutionEngine/Interpreter/Interpreter.h	/^  unsigned RefCnt;$/;"	m	class:llvm::AllocaHolder
RefCount	CodeGen/InterferenceCache.h	/^    unsigned RefCount;$/;"	m	class:llvm::InterferenceCache::Entry
RefCount	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned RefCount;$/;"	m	struct:__anon310::ARMConstantIslands::CPEntry	file:
RefCount	VMCore/Attributes.cpp	/^  sys::cas_flag RefCount;$/;"	m	class:llvm::AttributeListImpl	file:
RefLoc	TableGen/TGParser.cpp	/^  SMLoc RefLoc;$/;"	m	struct:llvm::SubClassReference	file:
RefLoc	TableGen/TGParser.cpp	/^  SMLoc RefLoc;$/;"	m	struct:llvm::SubMultiClassReference	file:
RefreshCallGraph	Analysis/IPA/CallGraphSCCPass.cpp	/^bool CGPassManager::RefreshCallGraph(CallGraphSCC &CurSCC,$/;"	f	class:CGPassManager
Refs	CodeGen/ExecutionDepsFix.cpp	/^  unsigned Refs;$/;"	m	struct:__anon118::DomainValue	file:
Reg	CodeGen/MachineTraceMetrics.h	/^    unsigned Reg;$/;"	m	struct:llvm::MachineTraceMetrics::LiveInReg
Reg	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    unsigned Reg;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestBlock
Reg	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    unsigned Reg;$/;"	m	struct:llvm::SelectionDAGBuilder::JumpTable
Reg	Target/ARM/ARMFastISel.cpp	/^      unsigned Reg;$/;"	m	union:__anon307::Address::__anon309	file:
Reg	Target/ARM/ARMLoadStoreOptimizer.cpp	/^      unsigned Reg;$/;"	m	struct:__anon303::ARMLoadStoreOpt::MemOpQueueEntry	file:
Reg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } Reg;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon271	file:
Reg	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    } Reg;$/;"	m	union:__anon446::MBlazeOperand::__anon447	typeref:struct:__anon446::MBlazeOperand::__anon447::__anon449	file:
Reg	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^      SDValue Reg;$/;"	m	struct:__anon392::MSP430ISelAddressMode::__anon394	file:
Reg	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    } Reg;$/;"	m	union:__anon423::MipsOperand::__anon424	typeref:struct:__anon423::MipsOperand::__anon424::__anon426	file:
Reg	Target/X86/AsmParser/X86AsmParser.cpp	/^    } Reg;$/;"	m	union:__anon336::X86Operand::__anon337	typeref:struct:__anon336::X86Operand::__anon337::__anon339	file:
Reg	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^} Reg;$/;"	t	typeref:enum:__anon358
Reg	Target/X86/X86InstrBuilder.h	/^    unsigned Reg;$/;"	m	union:llvm::X86AddressMode::__anon385
RegAllocBase	CodeGen/RegAllocBase.h	/^  RegAllocBase(): TRI(0), MRI(0), VRM(0), LIS(0), Matrix(0) {}$/;"	f	class:llvm::RegAllocBase
RegAllocBase	CodeGen/RegAllocBase.h	/^class RegAllocBase {$/;"	c	namespace:llvm
RegAllocPBQP	CodeGen/RegAllocPBQP.cpp	/^  RegAllocPBQP(std::auto_ptr<PBQPBuilder> b, char *cPassID=0)$/;"	f	class:__anon135::RegAllocPBQP
RegAllocPBQP	CodeGen/RegAllocPBQP.cpp	/^class RegAllocPBQP : public MachineFunctionPass {$/;"	c	namespace:__anon135	file:
RegAssign	CodeGen/SplitKit.h	/^  RegAssignMap RegAssign;$/;"	m	class:llvm::SplitEditor
RegAssignMap	CodeGen/SplitKit.h	/^  typedef IntervalMap<SlotIndex, unsigned> RegAssignMap;$/;"	t	class:llvm::SplitEditor
RegBase	Target/ARM/ARMFastISel.cpp	/^      RegBase,$/;"	e	enum:__anon307::Address::__anon308	file:
RegBase	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^      RegBase,$/;"	e	enum:__anon392::MSP430ISelAddressMode::__anon393	file:
RegBase	Target/X86/X86ISelDAGToDAG.cpp	/^      RegBase,$/;"	e	enum:__anon371::X86ISelAddressMode::__anon372	file:
RegBase	Target/X86/X86InstrBuilder.h	/^    RegBase,$/;"	e	enum:llvm::X86AddressMode::__anon384
RegClassInfo	CodeGen/AggressiveAntiDepBreaker.h	/^    const RegisterClassInfo &RegClassInfo;$/;"	m	class:llvm::AggressiveAntiDepBreaker
RegClassInfo	CodeGen/CriticalAntiDepBreaker.h	/^    const RegisterClassInfo &RegClassInfo;$/;"	m	class:llvm::CriticalAntiDepBreaker
RegClassInfo	CodeGen/PostRASchedulerList.cpp	/^    RegisterClassInfo RegClassInfo;$/;"	m	class:__anon102::PostRAScheduler	file:
RegClassInfo	CodeGen/RegAllocBase.h	/^  RegisterClassInfo RegClassInfo;$/;"	m	class:llvm::RegAllocBase
RegClassInfo	CodeGen/RegAllocFast.cpp	/^    RegisterClassInfo RegClassInfo;$/;"	m	class:__anon140::RAFast	file:
RegClassInfo	CodeGen/RegisterCoalescer.cpp	/^    RegisterClassInfo RegClassInfo;$/;"	m	class:__anon114::RegisterCoalescer	file:
RegClassMap	Target/NVPTX/VectorElementize.cpp	/^  RegClassMap;$/;"	m	class:__anon316::VectorElementize	file:
RegDefIter	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^ScheduleDAGSDNodes::RegDefIter::RegDefIter(const SUnit *SU,$/;"	f	class:ScheduleDAGSDNodes::RegDefIter
RegDefIter	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^    class RegDefIter {$/;"	c	class:llvm::ScheduleDAGSDNodes
RegElts	Target/ARM/ARMExpandPseudoInsts.cpp	/^    uint8_t RegElts; \/\/ elements per D register; used for lane ops$/;"	m	struct:__anon312::NEONLdStTableEntry	file:
RegInfo	CodeGen/RegAllocGreedy.cpp	/^    RegInfo() : Stage(RS_New), Cascade(0) {}$/;"	f	struct:__anon158::RAGreedy::RegInfo
RegInfo	CodeGen/RegAllocGreedy.cpp	/^  struct RegInfo {$/;"	s	class:__anon158::RAGreedy	file:
RegInfo	Target/ARM/ARMISelLowering.h	/^    const TargetRegisterInfo *RegInfo;$/;"	m	class:llvm::ARMTargetLowering
RegInfo	Target/Mips/Disassembler/MipsDisassembler.cpp	/^  const MCRegisterInfo *RegInfo;$/;"	m	class:__anon433::MipsDisassemblerBase	file:
RegInfo	Target/NVPTX/NVPTXInstrInfo.h	/^  const NVPTXRegisterInfo RegInfo;$/;"	m	class:llvm::NVPTXInstrInfo
RegInfo	Target/NVPTX/VectorElementize.cpp	/^  const NVPTXRegisterInfo *RegInfo;$/;"	m	class:__anon316::VectorElementize	file:
RegInfo	Target/X86/X86ISelLowering.h	/^    const X86RegisterInfo *RegInfo;$/;"	m	class:llvm::X86TargetLowering
RegLimit	CodeGen/MachineLICM.cpp	/^    SmallVector<unsigned, 8> RegLimit;$/;"	m	class:__anon156::MachineLICM	file:
RegLimit	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  std::vector<unsigned> RegLimit;$/;"	m	class:__anon77::RegReductionPQBase	file:
RegMap	CodeGen/MachineVerifier.cpp	/^    typedef DenseMap<unsigned, const MachineInstr*> RegMap;$/;"	t	struct:__anon139::MachineVerifier	file:
RegMap	Target/X86/X86FloatingPoint.cpp	/^    unsigned RegMap[NumFPRegs];$/;"	m	struct:__anon386::FPS	file:
RegMaskTag	CodeGen/LiveRegMatrix.h	/^  unsigned RegMaskTag;$/;"	m	class:llvm::LiveRegMatrix
RegMaskUsable	CodeGen/LiveRegMatrix.h	/^  BitVector RegMaskUsable;$/;"	m	class:llvm::LiveRegMatrix
RegMaskVector	CodeGen/MachineVerifier.cpp	/^    typedef SmallVector<const uint32_t*, 4> RegMaskVector;$/;"	t	struct:__anon139::MachineVerifier	file:
RegMaskVirtReg	CodeGen/LiveRegMatrix.h	/^  unsigned RegMaskVirtReg;$/;"	m	class:llvm::LiveRegMatrix
RegNo	Target/X86/AsmParser/X86AsmParser.cpp	/^      unsigned RegNo;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon339	file:
RegNodeMap	CodeGen/StrongPHIElimination.cpp	/^    DenseMap<unsigned, Node*> RegNodeMap;$/;"	m	class:__anon154::StrongPHIElimination	file:
RegNum	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned RegNum;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon271	file:
RegNum	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned RegNum;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon272	file:
RegNum	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned RegNum;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon276	file:
RegNum	Target/Hexagon/HexagonHardwareLoops.cpp	/^      unsigned RegNum;$/;"	m	union:__anon408::CountValue::Values	file:
RegNum	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^      unsigned RegNum;$/;"	m	struct:__anon446::MBlazeOperand::__anon447::__anon449	file:
RegNum	Target/Mips/AsmParser/MipsAsmParser.cpp	/^      unsigned RegNum;$/;"	m	struct:__anon423::MipsOperand::__anon424::__anon426	file:
RegNum	Target/PowerPC/PPCCTRLoops.cpp	/^      unsigned RegNum;$/;"	m	union:__anon325::CountValue::Values	file:
RegOp	Target/X86/X86InstrInfo.cpp	/^  uint16_t RegOp;$/;"	m	struct:X86OpTblEntry	file:
RegOp2MemOpTable0	Target/X86/X86InstrInfo.h	/^  RegOp2MemOpTableType RegOp2MemOpTable0;$/;"	m	class:llvm::X86InstrInfo
RegOp2MemOpTable1	Target/X86/X86InstrInfo.h	/^  RegOp2MemOpTableType RegOp2MemOpTable1;$/;"	m	class:llvm::X86InstrInfo
RegOp2MemOpTable2	Target/X86/X86InstrInfo.h	/^  RegOp2MemOpTableType RegOp2MemOpTable2;$/;"	m	class:llvm::X86InstrInfo
RegOp2MemOpTable2Addr	Target/X86/X86InstrInfo.h	/^  RegOp2MemOpTableType RegOp2MemOpTable2Addr;$/;"	m	class:llvm::X86InstrInfo
RegOp2MemOpTable3	Target/X86/X86InstrInfo.h	/^  RegOp2MemOpTableType RegOp2MemOpTable3;$/;"	m	class:llvm::X86InstrInfo
RegOp2MemOpTableType	Target/X86/X86InstrInfo.h	/^                   std::pair<unsigned, unsigned> > RegOp2MemOpTableType;$/;"	t	class:llvm::X86InstrInfo
RegPair	CodeGen/RegAllocPBQP.cpp	/^  typedef std::pair<unsigned, unsigned> RegPair;$/;"	t	class:__anon135::RegAllocPBQP	file:
RegPairEven	Target/ARM/ARMBaseRegisterInfo.h	/^    RegPairEven = 2$/;"	e	enum:llvm::ARMRI::__anon295
RegPairOdd	Target/ARM/ARMBaseRegisterInfo.h	/^    RegPairOdd  = 1,$/;"	e	enum:llvm::ARMRI::__anon295
RegPressure	CodeGen/MachineLICM.cpp	/^    SmallVector<unsigned, 8> RegPressure;$/;"	m	class:__anon156::MachineLICM	file:
RegPressure	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  std::vector<unsigned> RegPressure;$/;"	m	class:__anon77::RegReductionPQBase	file:
RegPressureDiff	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^int RegReductionPQBase::RegPressureDiff(SUnit *SU, unsigned &LiveUses) const {$/;"	f	class:RegReductionPQBase
RegRMap	MC/MCDisassembler/EDDisassembler.h	/^  regrmap_t RegRMap;$/;"	m	struct:llvm::EDDisassembler
RegRdHiShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RegRdHiShift   = 16,$/;"	e	enum:llvm::ARMII::__anon288
RegRdLoShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RegRdLoShift   = 12,$/;"	e	enum:llvm::ARMII::__anon288
RegRdShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RegRdShift     = 12,$/;"	e	enum:llvm::ARMII::__anon288
RegReductionPQBase	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  RegReductionPQBase(MachineFunction &mf,$/;"	f	class:__anon77::RegReductionPQBase
RegReductionPQBase	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^class RegReductionPQBase : public SchedulingPriorityQueue {$/;"	c	namespace:__anon77	file:
RegReductionPriorityQueue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  RegReductionPriorityQueue(MachineFunction &mf,$/;"	f	class:__anon77::RegReductionPriorityQueue
RegReductionPriorityQueue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^class RegReductionPriorityQueue : public RegReductionPQBase {$/;"	c	namespace:__anon77	file:
RegRefIter	CodeGen/CriticalAntiDepBreaker.h	/^      RegRefIter;$/;"	t	class:llvm::CriticalAntiDepBreaker
RegRefs	CodeGen/AggressiveAntiDepBreaker.h	/^    std::multimap<unsigned, RegisterReference> RegRefs;$/;"	m	class:llvm::AggressiveAntiDepState
RegRefs	CodeGen/CriticalAntiDepBreaker.h	/^    std::multimap<unsigned, MachineOperand *> RegRefs;$/;"	m	class:llvm::CriticalAntiDepBreaker
RegRnShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RegRnShift     = 16,$/;"	e	enum:llvm::ARMII::__anon288
RegRsShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    RegRsShift     = 8,$/;"	e	enum:llvm::ARMII::__anon288
RegSaveFrameIndex	Target/X86/X86MachineFunctionInfo.h	/^  int RegSaveFrameIndex;$/;"	m	class:llvm::X86MachineFunctionInfo
RegSeen	CodeGen/MachineLICM.cpp	/^    SmallSet<unsigned, 32> RegSeen;$/;"	m	class:__anon156::MachineLICM	file:
RegSequence	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallVector<const SCEV *, 16> RegSequence;$/;"	m	class:__anon513::RegUseTracker	file:
RegSequences	CodeGen/TwoAddressInstructionPass.cpp	/^    SmallVector<MachineInstr*, 16> RegSequences;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
RegSet	CodeGen/MachineVerifier.cpp	/^    typedef DenseSet<unsigned> RegSet;$/;"	t	struct:__anon139::MachineVerifier	file:
RegSet	CodeGen/RegAllocPBQP.cpp	/^  typedef std::set<unsigned> RegSet;$/;"	t	class:__anon135::RegAllocPBQP	file:
RegShiftedImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } RegShiftedImm;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon279	file:
RegShiftedReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } RegShiftedReg;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon278	file:
RegSortData	Transforms/Scalar/LoopStrengthReduce.cpp	/^  RegSortData() {}$/;"	f	class:__anon512::RegSortData
RegSortData	Transforms/Scalar/LoopStrengthReduce.cpp	/^class RegSortData {$/;"	c	namespace:__anon512	file:
RegSpacing	Target/ARM/ARMExpandPseudoInsts.cpp	/^    uint8_t RegSpacing; \/\/ One of type NEONRegSpacing$/;"	m	struct:__anon312::NEONLdStTableEntry	file:
RegState	CodeGen/RegAllocFast.cpp	/^    enum RegState {$/;"	g	class:__anon140::RAFast	file:
RegStructReturn	Target/X86/X86ISelLowering.cpp	/^  RegStructReturn,$/;"	e	enum:StructReturnType	file:
RegToMem	Transforms/Scalar/Reg2Mem.cpp	/^    RegToMem() : FunctionPass(ID) {$/;"	f	struct:__anon541::RegToMem
RegToMem	Transforms/Scalar/Reg2Mem.cpp	/^  struct RegToMem : public FunctionPass {$/;"	s	namespace:__anon541	file:
RegUnit	CodeGen/MachineTraceMetrics.cpp	/^  unsigned RegUnit;$/;"	m	struct:__anon134::LiveRegUnit	file:
RegUnitInfo	CodeGen/InterferenceCache.h	/^      RegUnitInfo(LiveIntervalUnion &LIU) : VirtTag(LIU.getTag()), Fixed(0) {$/;"	f	struct:llvm::InterferenceCache::Entry::RegUnitInfo
RegUnitInfo	CodeGen/InterferenceCache.h	/^    struct RegUnitInfo {$/;"	s	class:llvm::InterferenceCache::Entry
RegUnits	CodeGen/InterferenceCache.h	/^    SmallVector<RegUnitInfo, 4> RegUnits;$/;"	m	class:llvm::InterferenceCache::Entry
RegUseTracker	Transforms/Scalar/LoopStrengthReduce.cpp	/^class RegUseTracker {$/;"	c	namespace:__anon513	file:
RegUses	Transforms/Scalar/LoopStrengthReduce.cpp	/^  RegUseTracker RegUses;$/;"	m	class:__anon518::LSRInstance	file:
RegUsesMap	Transforms/Scalar/LoopStrengthReduce.cpp	/^  RegUsesTy RegUsesMap;$/;"	m	class:__anon513::RegUseTracker	file:
RegUsesTy	Transforms/Scalar/LoopStrengthReduce.cpp	/^  typedef DenseMap<const SCEV *, RegSortData> RegUsesTy;$/;"	t	class:__anon513::RegUseTracker	file:
RegVT	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    EVT RegVT;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestBlock
RegVTs	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^    SmallVector<EVT, 4> RegVTs;$/;"	m	struct:__anon82::RegsForValue	file:
RegVec	MC/MCDisassembler/EDDisassembler.h	/^  regvec_t RegVec;$/;"	m	struct:llvm::EDDisassembler
RegVector	CodeGen/MachineVerifier.cpp	/^    typedef SmallVector<unsigned, 16> RegVector;$/;"	t	struct:__anon139::MachineVerifier	file:
Regex	Support/Regex.cpp	/^Regex::Regex(StringRef regex, unsigned Flags) {$/;"	f	class:Regex
Region	Analysis/RegionInfo.cpp	/^Region::Region(BasicBlock *Entry, BasicBlock *Exit, RegionInfo* RInfo,$/;"	f	class:Region
RegionInfo	Analysis/RegionInfo.cpp	/^RegionInfo::RegionInfo() : FunctionPass(ID) {$/;"	f	class:RegionInfo
RegionOnlyPrinter	Analysis/RegionPrinter.cpp	/^  RegionOnlyPrinter() :$/;"	f	struct:__anon39::RegionOnlyPrinter
RegionOnlyPrinter	Analysis/RegionPrinter.cpp	/^struct RegionOnlyPrinter$/;"	s	namespace:__anon39	file:
RegionOnlyViewer	Analysis/RegionPrinter.cpp	/^  RegionOnlyViewer() : DOTGraphTraitsViewer<RegionInfo, true>("regonly", ID) {$/;"	f	struct:__anon38::RegionOnlyViewer
RegionOnlyViewer	Analysis/RegionPrinter.cpp	/^struct RegionOnlyViewer$/;"	s	namespace:__anon38	file:
RegionPrinter	Analysis/RegionPrinter.cpp	/^  RegionPrinter() :$/;"	f	struct:__anon38::RegionPrinter
RegionPrinter	Analysis/RegionPrinter.cpp	/^struct RegionPrinter$/;"	s	namespace:__anon38	file:
RegionViewer	Analysis/RegionPrinter.cpp	/^  RegionViewer() : DOTGraphTraitsViewer<RegionInfo, false>("reg", ID){$/;"	f	struct:__anon38::RegionViewer
RegionViewer	Analysis/RegionPrinter.cpp	/^struct RegionViewer$/;"	s	namespace:__anon38	file:
Register	ExecutionEngine/Interpreter/Interpreter.h	/^  static void Register() {$/;"	f	class:llvm::Interpreter
Register	ExecutionEngine/JIT/JIT.h	/^  static void Register() {$/;"	f	class:llvm::JIT
Register	ExecutionEngine/MCJIT/MCJIT.h	/^  static void Register() {$/;"	f	class:llvm::MCJIT
Register	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    Register,$/;"	e	enum:__anon446::MBlazeOperand::KindTy	file:
Register	Target/X86/AsmParser/X86AsmParser.cpp	/^    Register,$/;"	e	enum:__anon336::X86Operand::KindTy	file:
RegisterAGBase	VMCore/Pass.cpp	/^RegisterAGBase::RegisterAGBase(const char *Name, const void *InterfaceID,$/;"	f	class:RegisterAGBase
RegisterCallbackExFunc	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  RegisterCallbackExPtr RegisterCallbackExFunc;$/;"	m	class:llvm::IntelJITEventsWrapper
RegisterCallbackExPtr	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  typedef void (*RegisterCallbackExPtr)(void *, iJIT_ModeChangedEx );$/;"	t	class:llvm::IntelJITEventsWrapper
RegisterClassInfo	CodeGen/RegisterClassInfo.cpp	/^RegisterClassInfo::RegisterClassInfo() : Tag(0), MF(0), TRI(0), CalleeSaved(0)$/;"	f	class:RegisterClassInfo
RegisterCoalescer	CodeGen/RegisterCoalescer.cpp	/^    RegisterCoalescer() : MachineFunctionPass(ID) {$/;"	f	class:__anon114::RegisterCoalescer
RegisterCoalescer	CodeGen/RegisterCoalescer.cpp	/^  class RegisterCoalescer : public MachineFunctionPass,$/;"	c	namespace:__anon114	file:
RegisterCoalescerID	CodeGen/RegisterCoalescer.cpp	/^char &llvm::RegisterCoalescerID = RegisterCoalescer::ID;$/;"	m	class:llvm	file:
RegisterCrashPrinter	Support/PrettyStackTrace.cpp	/^static bool RegisterCrashPrinter() {$/;"	f	file:
RegisterFn	CodeGen/SjLjEHPrepare.cpp	/^    Constant *RegisterFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
RegisterID	MC/MCDisassembler/EDToken.h	/^  unsigned RegisterID;$/;"	m	struct:llvm::EDToken
RegisterInterp	ExecutionEngine/Interpreter/Interpreter.cpp	/^  RegisterInterp() { Interpreter::Register(); }$/;"	f	struct:__anon181::RegisterInterp
RegisterInterp	ExecutionEngine/Interpreter/Interpreter.cpp	/^static struct RegisterInterp {$/;"	s	namespace:__anon181	file:
RegisterJIT	ExecutionEngine/JIT/JIT.cpp	/^  RegisterJIT() { JIT::Register(); }$/;"	f	struct:__anon184::RegisterJIT
RegisterJIT	ExecutionEngine/JIT/JIT.cpp	/^static struct RegisterJIT {$/;"	s	namespace:__anon184	file:
RegisterJIT	ExecutionEngine/MCJIT/MCJIT.cpp	/^  RegisterJIT() { MCJIT::Register(); }$/;"	f	struct:__anon192::RegisterJIT
RegisterJIT	ExecutionEngine/MCJIT/MCJIT.cpp	/^static struct RegisterJIT {$/;"	s	namespace:__anon192	file:
RegisterJITEventListener	ExecutionEngine/JIT/JIT.cpp	/^void JIT::RegisterJITEventListener(JITEventListener *L) {$/;"	f	class:JIT
RegisterManagedStatic	Support/ManagedStatic.cpp	/^void ManagedStaticBase::RegisterManagedStatic(void *(*Creator)(),$/;"	f	class:ManagedStaticBase
RegisterMap	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  rmap_ty RegisterMap;$/;"	m	class:__anon258::ARMBaseAsmLexer	file:
RegisterMap	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^    rmap_ty RegisterMap;$/;"	m	class:__anon453::MBlazeBaseAsmLexer	file:
RegisterOperands	CodeGen/RegisterPressure.cpp	/^struct RegisterOperands {$/;"	s	file:
RegisterReaderWrapper	MC/MCDisassembler/EDOperand.cpp	/^  struct RegisterReaderWrapper {$/;"	s	namespace:__anon203	file:
RegisterReference	CodeGen/AggressiveAntiDepBreaker.h	/^    } RegisterReference;$/;"	t	class:llvm::AggressiveAntiDepState	typeref:struct:llvm::AggressiveAntiDepState::__anon117
RegisterReqs	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  StringMap<unsigned> RegisterReqs;$/;"	m	class:__anon259::ARMAsmParser	file:
RegisterStatistic	Support/Statistic.cpp	/^void Statistic::RegisterStatistic() {$/;"	f	class:Statistic
RegisterStringTable	Object/MachOObject.cpp	/^void MachOObject::RegisterStringTable(macho::SymtabLoadCommand &SLC) {$/;"	f	class:MachOObject
RegisterStubResolver	ExecutionEngine/JIT/JITEmitter.cpp	/^    void RegisterStubResolver(void *Stub, JITResolver *Resolver) {$/;"	f	class:__anon182::StubToResolverMapTy
RegisterTarget	Support/TargetRegistry.cpp	/^void TargetRegistry::RegisterTarget(Target &T,$/;"	f	class:TargetRegistry
Registered	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^    bool Registered;$/;"	m	class:__anon180::ELFObjectImage	file:
RegisteredObjectBufferMap	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^  RegisteredObjectBufferMap;$/;"	t	namespace:__anon178	file:
RegisteredOptionList	Support/CommandLine.cpp	/^static Option *RegisteredOptionList = 0;$/;"	v	file:
Registers	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  SmallVector<unsigned, 8> Registers;$/;"	m	class:__anon261::ARMOperand	file:
Registry	CodeGen/MachineScheduler.cpp	/^MachinePassRegistry MachineSchedRegistry::Registry;$/;"	m	class:MachineSchedRegistry	file:
Registry	CodeGen/Passes.cpp	/^MachinePassRegistry RegisterRegAlloc::Registry;$/;"	m	class:RegisterRegAlloc	file:
Registry	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^MachinePassRegistry RegisterScheduler::Registry;$/;"	m	class:RegisterScheduler	file:
Regs	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^    SmallVector<unsigned, 4> Regs;$/;"	m	struct:__anon82::RegsForValue	file:
Regs	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallPtrSet<const SCEV *, 4> Regs;$/;"	m	class:__anon517::LSRUse	file:
RegsForValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^    RegsForValue() {}$/;"	f	struct:__anon82::RegsForValue
RegsForValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^    RegsForValue(LLVMContext &Context, const TargetLowering &tli,$/;"	f	struct:__anon82::RegsForValue
RegsForValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^    RegsForValue(const SmallVector<unsigned, 4> &regs,$/;"	f	struct:__anon82::RegsForValue
RegsForValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^  struct RegsForValue {$/;"	s	namespace:__anon82	file:
RegsToPassVector	Target/ARM/ARMISelLowering.h	/^    typedef SmallVector<std::pair<unsigned, SDValue>, 8> RegsToPassVector;$/;"	t	class:llvm::ARMTargetLowering
RegsToSpill	CodeGen/InlineSpiller.cpp	/^  SmallVector<unsigned, 8> RegsToSpill;$/;"	m	class:__anon155::InlineSpiller	file:
RehashTable	Support/StringMap.cpp	/^void StringMapImpl::RehashTable() {$/;"	f	class:StringMapImpl
RelEntry	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^    RelEntry(const ELFRelocationEntry &R, const MCSymbol *S, int64_t O) :$/;"	f	struct:__anon430::RelEntry
RelEntry	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^  struct RelEntry {$/;"	s	namespace:__anon430	file:
RelLs	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^  typedef std::list<RelEntry> RelLs;$/;"	t	namespace:__anon430	file:
RelLsIter	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^  typedef RelLs::iterator RelLsIter;$/;"	t	namespace:__anon430	file:
RelMapTy	MC/ELFObjectWriter.cpp	/^    typedef DenseMap<const MCSectionELF*, const MCSectionELF*> RelMapTy;$/;"	t	class:__anon225::ELFObjectWriter	file:
RelType	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uint32_t RelType;$/;"	m	class:llvm::RelocationEntry
RelaxedMayFoldVectorLoad	Target/X86/X86ISelLowering.cpp	/^static bool RelaxedMayFoldVectorLoad(SDValue V) {$/;"	f	file:
ReleaseCallee	Transforms/Scalar/ObjCARC.cpp	/^    Constant *RetainRVCallee, *AutoreleaseRVCallee, *ReleaseCallee,$/;"	m	class:__anon508::ObjCARCOpt	file:
ReleaseMetadata	Transforms/Scalar/ObjCARC.cpp	/^    MDNode *ReleaseMetadata;$/;"	m	struct:__anon505::RRInfo	file:
ReleasePending	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::ReleasePending() {$/;"	f	class:ScheduleDAGRRList
ReleasePred	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^void ScheduleDAGFast::ReleasePred(SUnit *SU, SDep *PredEdge) {$/;"	f	class:ScheduleDAGFast
ReleasePred	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::ReleasePred(SUnit *SU, const SDep *PredEdge) {$/;"	f	class:ScheduleDAGRRList
ReleasePredecessors	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^void ScheduleDAGFast::ReleasePredecessors(SUnit *SU, unsigned CurCycle) {$/;"	f	class:ScheduleDAGFast
ReleasePredecessors	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::ReleasePredecessors(SUnit *SU) {$/;"	f	class:ScheduleDAGRRList
ReleaseSucc	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::ReleaseSucc(SUnit *SU, SDep *SuccEdge) {$/;"	f	class:SchedulePostRATDList
ReleaseSuccessors	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::ReleaseSuccessors(SUnit *SU) {$/;"	f	class:SchedulePostRATDList
Reloc	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^    ELFRelocationEntry Reloc;$/;"	m	struct:__anon430::RelEntry	file:
RelocNeedsGOT	MC/ELFObjectWriter.cpp	/^bool ELFObjectWriter::RelocNeedsGOT(MCSymbolRefExpr::VariantKind Variant) {$/;"	f	class:ELFObjectWriter
RelocationEntry	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  RelocationEntry(unsigned id, uint64_t offset, uint32_t type, int64_t addend)$/;"	f	class:llvm::RelocationEntry
RelocationEntry	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^class RelocationEntry {$/;"	c	namespace:llvm
RelocationList	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  typedef SmallVector<RelocationEntry, 64> RelocationList;$/;"	t	class:llvm::RuntimeDyldImpl
RelocationType	Target/ARM/ARMRelocations.h	/^    enum RelocationType {$/;"	g	namespace:llvm::ARM
RelocationType	Target/MBlaze/MBlazeRelocations.h	/^    enum RelocationType {$/;"	g	namespace:llvm::MBlaze
RelocationType	Target/Mips/MipsRelocations.h	/^    enum RelocationType {$/;"	g	namespace:llvm::Mips
RelocationType	Target/PowerPC/PPCRelocations.h	/^    enum RelocationType {$/;"	g	namespace:llvm::PPC
RelocationType	Target/X86/X86Relocations.h	/^    enum RelocationType {$/;"	g	namespace:llvm::X86
RelocationValueRef	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  RelocationValueRef(): SectionID(0), Addend(0), SymbolName(0) {}$/;"	f	class:llvm::RelocationValueRef
RelocationValueRef	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^class RelocationValueRef {$/;"	c	namespace:llvm
Relocations	ExecutionEngine/JIT/JITEmitter.cpp	/^    std::vector<MachineRelocation> Relocations;$/;"	m	class:__anon182::JITEmitter	file:
Relocations	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  DenseMap<unsigned, RelocationList> Relocations;$/;"	m	class:llvm::RuntimeDyldImpl
Relocations	MC/ELFObjectWriter.cpp	/^                   std::vector<ELFRelocationEntry> > Relocations;$/;"	m	class:__anon225::ELFObjectWriter	file:
Relocations	MC/WinCOFFObjectWriter.cpp	/^  int              Relocations;$/;"	m	class:__anon222::COFFSymbol	file:
Relocations	MC/WinCOFFObjectWriter.cpp	/^  relocations          Relocations;$/;"	m	class:__anon222::COFFSection	file:
Remainder	Transforms/Utils/BypassSlowDivision.cpp	/^    PHINode *Remainder;$/;"	m	struct:__anon477::DivPhiNodes	file:
RemapInstruction	Transforms/Utils/LoopUnroll.cpp	/^static inline void RemapInstruction(Instruction *I,$/;"	f	file:
RemapInstruction	Transforms/Utils/ValueMapper.cpp	/^void llvm::RemapInstruction(Instruction *I, ValueToValueMapTy &VMap,$/;"	f	class:llvm
RemapValue	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::RemapValue(SDValue &N) {$/;"	f	class:DAGTypeLegalizer
RememberAndSkipFunctionBody	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::RememberAndSkipFunctionBody() {$/;"	f	class:BitcodeReader
Remove	CodeGen/MachinePassRegistry.cpp	/^void MachinePassRegistry::Remove(MachinePassRegistryNode *Node) {$/;"	f	class:MachinePassRegistry
Remove	ExecutionEngine/JIT/JIT.cpp	/^  void Remove(JIT *jit) {$/;"	f	class:__anon188::JitPool
Remove	Transforms/InstCombine/InstCombineWorklist.h	/^  void Remove(Instruction *I) {$/;"	f	class:llvm::InstCombineWorklist
RemoveAccessedObjects	Transforms/Scalar/DeadStoreElimination.cpp	/^void DSE::RemoveAccessedObjects(const AliasAnalysis::Location &LoadedLoc,$/;"	f	class:DSE
RemoveBlockIfDead	Transforms/Scalar/LoopUnswitch.cpp	/^void LoopUnswitch::RemoveBlockIfDead(BasicBlock *BB,$/;"	f	class:LoopUnswitch
RemoveBlocksWithHash	CodeGen/BranchFolding.cpp	/^void BranchFolder::RemoveBlocksWithHash(unsigned CurHash,$/;"	f	class:BranchFolder
RemoveBranch	Target/ARM/ARMBaseInstrInfo.cpp	/^unsigned ARMBaseInstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:ARMBaseInstrInfo
RemoveBranch	Target/CellSPU/SPUInstrInfo.cpp	/^SPUInstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:SPUInstrInfo
RemoveBranch	Target/Hexagon/HexagonInstrInfo.cpp	/^unsigned HexagonInstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:HexagonInstrInfo
RemoveBranch	Target/MBlaze/MBlazeInstrInfo.cpp	/^unsigned MBlazeInstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:MBlazeInstrInfo
RemoveBranch	Target/MSP430/MSP430InstrInfo.cpp	/^unsigned MSP430InstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:MSP430InstrInfo
RemoveBranch	Target/Mips/MipsInstrInfo.cpp	/^RemoveBranch(MachineBasicBlock &MBB) const$/;"	f	class:MipsInstrInfo
RemoveBranch	Target/NVPTX/NVPTXInstrInfo.cpp	/^unsigned NVPTXInstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:NVPTXInstrInfo
RemoveBranch	Target/PowerPC/PPCInstrInfo.cpp	/^unsigned PPCInstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:PPCInstrInfo
RemoveBranch	Target/Sparc/SparcInstrInfo.cpp	/^unsigned SparcInstrInfo::RemoveBranch(MachineBasicBlock &MBB) const$/;"	f	class:SparcInstrInfo
RemoveBranch	Target/X86/X86InstrInfo.cpp	/^unsigned X86InstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:X86InstrInfo
RemoveBranch	Target/XCore/XCoreInstrInfo.cpp	/^XCoreInstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:XCoreInstrInfo
RemoveCachedNonLocalPointerDependencies	Analysis/MemoryDependenceAnalysis.cpp	/^RemoveCachedNonLocalPointerDependencies(ValueIsLoadPair P) {$/;"	f	class:MemoryDependenceAnalysis
RemoveDeadArgumentsFromCallers	Transforms/IPO/DeadArgumentElimination.cpp	/^bool DAE::RemoveDeadArgumentsFromCallers(Function &Fn)$/;"	f	class:DAE
RemoveDeadBlock	CodeGen/BranchFolding.cpp	/^void BranchFolder::RemoveDeadBlock(MachineBasicBlock *MBB) {$/;"	f	class:BranchFolder
RemoveDeadBlock	CodeGen/TailDuplication.cpp	/^void TailDuplicatePass::RemoveDeadBlock(MachineBasicBlock *MBB) {$/;"	f	class:TailDuplicatePass
RemoveDeadConstant	Transforms/IPO/StripSymbols.cpp	/^static void RemoveDeadConstant(Constant *C) {$/;"	f	file:
RemoveDeadNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::RemoveDeadNode(SDNode *N){$/;"	f	class:SelectionDAG
RemoveDeadNodes	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::RemoveDeadNodes() {$/;"	f	class:SelectionDAG
RemoveDeadNodes	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::RemoveDeadNodes(SmallVectorImpl<SDNode *> &DeadNodes) {$/;"	f	class:SelectionDAG
RemoveDeadStores	CodeGen/StackSlotColoring.cpp	/^bool StackSlotColoring::RemoveDeadStores(MachineBasicBlock* MBB) {$/;"	f	class:StackSlotColoring
RemoveDeadStuffFromFunction	Transforms/IPO/DeadArgumentElimination.cpp	/^bool DAE::RemoveDeadStuffFromFunction(Function *F) {$/;"	f	class:DAE
RemoveExtraEdges	CodeGen/IfConversion.cpp	/^void IfConverter::RemoveExtraEdges(BBInfo &BBI) {$/;"	f	class:IfConverter
RemoveFactorFromExpression	Transforms/Scalar/Reassociate.cpp	/^Value *Reassociate::RemoveFactorFromExpression(Value *V, Value *Factor) {$/;"	f	class:Reassociate
RemoveFromAllocasList	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    void RemoveFromAllocasList(unsigned &AllocaIdx) {$/;"	f	struct:__anon469::PromoteMem2Reg	file:
RemoveFromFreeList	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    FreeRangeHeader *RemoveFromFreeList() {$/;"	f	struct:__anon189::FreeRangeHeader
RemoveFromReverseMap	Analysis/MemoryDependenceAnalysis.cpp	/^static void RemoveFromReverseMap(DenseMap<Instruction*, $/;"	f	file:
RemoveFromUseList	VMCore/Value.cpp	/^void ValueHandleBase::RemoveFromUseList() {$/;"	f	class:ValueHandleBase
RemoveFromWorklist	CodeGen/SelectionDAG/DAGCombiner.cpp	/^void TargetLowering::DAGCombinerInfo::RemoveFromWorklist(SDNode *N) {$/;"	f	class:TargetLowering::DAGCombinerInfo
RemoveFromWorklist	Transforms/Scalar/LoopUnswitch.cpp	/^static void RemoveFromWorklist(Instruction *I,$/;"	f	file:
RemoveInstInputs	Analysis/PHITransAddr.cpp	/^static void RemoveInstInputs(Value *V,$/;"	f	file:
RemoveKey	Support/StringMap.cpp	/^StringMapEntryBase *StringMapImpl::RemoveKey(StringRef Key) {$/;"	f	class:StringMapImpl
RemoveKey	Support/StringMap.cpp	/^void StringMapImpl::RemoveKey(StringMapEntryBase *V) {$/;"	f	class:StringMapImpl
RemoveLoopFromHierarchy	Transforms/Scalar/LoopUnswitch.cpp	/^void LoopUnswitch::RemoveLoopFromHierarchy(Loop *L) {$/;"	f	class:LoopUnswitch
RemoveLoopFromWorklist	Transforms/Scalar/LoopUnswitch.cpp	/^    void RemoveLoopFromWorklist(Loop *L) {$/;"	f	class:__anon494::LoopUnswitch	file:
RemoveMapping	ExecutionEngine/ExecutionEngine.cpp	/^void *ExecutionEngineState::RemoveMapping(const MutexGuard &,$/;"	f	class:ExecutionEngineState
RemoveNestAttribute	Transforms/IPO/GlobalOpt.cpp	/^static void RemoveNestAttribute(Function *F) {$/;"	f	file:
RemoveNode	Support/FoldingSet.cpp	/^bool FoldingSetImpl::RemoveNode(Node *N) {$/;"	f	class:FoldingSetImpl
RemoveNodeFromCSEMaps	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SelectionDAG::RemoveNodeFromCSEMaps(SDNode *N) {$/;"	f	class:SelectionDAG
RemoveOne	Transforms/InstCombine/InstCombineWorklist.h	/^  Instruction *RemoveOne() {$/;"	f	class:llvm::InstCombineWorklist
RemoveOperand	CodeGen/MachineInstr.cpp	/^void MachineInstr::RemoveOperand(unsigned OpNo) {$/;"	f	class:MachineInstr
RemovePred	CodeGen/ScheduleDAG.cpp	/^void ScheduleDAGTopologicalSort::RemovePred(SUnit *M, SUnit *N) {$/;"	f	class:ScheduleDAGTopologicalSort
RemovePred	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  void RemovePred(SUnit *SU, const SDep &D) {$/;"	f	class:__anon86::ScheduleDAGFast
RemovePred	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  void RemovePred(SUnit *SU, const SDep &D) {$/;"	f	class:__anon76::ScheduleDAGRRList
RemovePredecessorAndSimplify	Transforms/Utils/Local.cpp	/^void llvm::RemovePredecessorAndSimplify(BasicBlock *BB, BasicBlock *Pred,$/;"	f	class:llvm
RemoveRegOperandsFromUseLists	CodeGen/MachineInstr.cpp	/^void MachineInstr::RemoveRegOperandsFromUseLists(MachineRegisterInfo &MRI) {$/;"	f	class:MachineInstr
RemoveUnusedGlobalValue	Transforms/IPO/GlobalDCE.cpp	/^bool GlobalDCE::RemoveUnusedGlobalValue(GlobalValue &GV) {$/;"	f	class:GlobalDCE
RemoveUnusedGlue	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^static void RemoveUnusedGlue(SDNode *N, SelectionDAG *DAG) {$/;"	f	file:
RemoveVRSaveCode	Target/PowerPC/PPCFrameLowering.cpp	/^static void RemoveVRSaveCode(MachineInstr *MI) {$/;"	f	file:
RenameOrderType	CodeGen/AggressiveAntiDepBreaker.h	/^    typedef std::map<const TargetRegisterClass *, unsigned> RenameOrderType;$/;"	t	class:llvm::AggressiveAntiDepBreaker
RenamePass	Transforms/Utils/PromoteMemoryToRegister.cpp	/^void PromoteMem2Reg::RenamePass(BasicBlock *BB, BasicBlock *Pred,$/;"	f	class:PromoteMem2Reg
RenamePassData	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    RenamePassData() : BB(NULL), Pred(NULL), Values() {}$/;"	f	class:__anon469::RenamePassData
RenamePassData	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    RenamePassData(BasicBlock *B, BasicBlock *P,$/;"	f	class:__anon469::RenamePassData
RenamePassData	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  class RenamePassData {$/;"	c	namespace:__anon469	file:
Renames	MC/ELFObjectWriter.cpp	/^    DenseMap<const MCSymbol *, const MCSymbol *> Renames;$/;"	m	class:__anon225::ELFObjectWriter	file:
RenumberBlocks	CodeGen/MachineFunction.cpp	/^void MachineFunction::RenumberBlocks(MachineBasicBlock *MBB) {$/;"	f	class:MachineFunction
RenumberValues	CodeGen/LiveInterval.cpp	/^void LiveInterval::RenumberValues(LiveIntervals &lis) {$/;"	f	class:LiveInterval
RepeatedValue	Transforms/Scalar/Reassociate.cpp	/^typedef std::pair<Value*, APInt> RepeatedValue;$/;"	t	file:
ReplaceADDiuSLLWithLUi	Target/Mips/MipsAnalyzeImmediate.cpp	/^void MipsAnalyzeImmediate::ReplaceADDiuSLLWithLUi(InstSeq &Seq) {$/;"	f	class:MipsAnalyzeImmediate
ReplaceATOMIC_BINARY_64	Target/X86/X86ISelLowering.cpp	/^ReplaceATOMIC_BINARY_64(SDNode *Node, SmallVectorImpl<SDValue>&Results,$/;"	f	file:
ReplaceATOMIC_LOAD	Target/X86/X86ISelLowering.cpp	/^static void ReplaceATOMIC_LOAD(SDNode *Node,$/;"	f	file:
ReplaceATOMIC_OP_64	Target/ARM/ARMISelLowering.cpp	/^ReplaceATOMIC_OP_64(SDNode *Node, SmallVectorImpl<SDValue>& Results,$/;"	f	file:
ReplaceAllUsesOfValueWith	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::ReplaceAllUsesOfValueWith(SDValue From, SDValue To){$/;"	f	class:SelectionDAG
ReplaceAllUsesOfValuesWith	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::ReplaceAllUsesOfValuesWith(const SDValue *From,$/;"	f	class:SelectionDAG
ReplaceAllUsesWith	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::ReplaceAllUsesWith(SDNode *From, SDNode *To) {$/;"	f	class:SelectionDAG
ReplaceAllUsesWith	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::ReplaceAllUsesWith(SDNode *From, const SDValue *To) {$/;"	f	class:SelectionDAG
ReplaceAllUsesWith	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::ReplaceAllUsesWith(SDValue FromN, SDValue To) {$/;"	f	class:SelectionDAG
ReplaceCallWith	CodeGen/IntrinsicLowering.cpp	/^static CallInst *ReplaceCallWith(const char *NewFn, CallInst *CI,$/;"	f	file:
ReplaceFPIntrinsicWithCall	CodeGen/IntrinsicLowering.cpp	/^static void ReplaceFPIntrinsicWithCall(CallInst *CI, const char *Fname,$/;"	f	file:
ReplaceInstUsesWith	Transforms/InstCombine/InstCombine.h	/^  Instruction *ReplaceInstUsesWith(Instruction &I, Value *V) {$/;"	f	class:llvm::InstCombiner
ReplaceInstWithInst	Transforms/Utils/BasicBlockUtils.cpp	/^void llvm::ReplaceInstWithInst(BasicBlock::InstListType &BIL,$/;"	f	class:llvm
ReplaceInstWithInst	Transforms/Utils/BasicBlockUtils.cpp	/^void llvm::ReplaceInstWithInst(Instruction *From, Instruction *To) {$/;"	f	class:llvm
ReplaceInstWithValue	Transforms/Utils/BasicBlockUtils.cpp	/^void llvm::ReplaceInstWithValue(BasicBlock::InstListType &BIL,$/;"	f	class:llvm
ReplaceLoadWithPromotedLoad	CodeGen/SelectionDAG/DAGCombiner.cpp	/^void DAGCombiner::ReplaceLoadWithPromotedLoad(SDNode *Load, SDNode *ExtLoad) {$/;"	f	class:DAGCombiner
ReplaceMBBInJumpTable	CodeGen/MachineFunction.cpp	/^bool MachineJumpTableInfo::ReplaceMBBInJumpTable(unsigned Idx,$/;"	f	class:MachineJumpTableInfo
ReplaceMBBInJumpTables	CodeGen/MachineFunction.cpp	/^bool MachineJumpTableInfo::ReplaceMBBInJumpTables(MachineBasicBlock *Old,$/;"	f	class:MachineJumpTableInfo
ReplaceNode	Analysis/IPA/CallGraphSCCPass.cpp	/^void CallGraphSCC::ReplaceNode(CallGraphNode *Old, CallGraphNode *New) {$/;"	f	class:CallGraphSCC
ReplaceNode	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  void ReplaceNode(SDNode *Old, SDNode *New) {$/;"	f	class:__anon67::SelectionDAGLegalize
ReplaceNode	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  void ReplaceNode(SDNode *Old, const SDValue *New) {$/;"	f	class:__anon67::SelectionDAGLegalize
ReplaceNode	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  void ReplaceNode(SDValue Old, SDValue New) {$/;"	f	class:__anon67::SelectionDAGLegalize
ReplaceNodeResults	Target/ARM/ARMISelLowering.cpp	/^void ARMTargetLowering::ReplaceNodeResults(SDNode *N,$/;"	f	class:ARMTargetLowering
ReplaceNodeResults	Target/CellSPU/SPUISelLowering.cpp	/^void SPUTargetLowering::ReplaceNodeResults(SDNode *N,$/;"	f	class:SPUTargetLowering
ReplaceNodeResults	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::ReplaceNodeResults(SDNode *N,$/;"	f	class:MipsTargetLowering
ReplaceNodeResults	Target/PowerPC/PPCISelLowering.cpp	/^void PPCTargetLowering::ReplaceNodeResults(SDNode *N,$/;"	f	class:PPCTargetLowering
ReplaceNodeResults	Target/X86/X86ISelLowering.cpp	/^void X86TargetLowering::ReplaceNodeResults(SDNode *N,$/;"	f	class:X86TargetLowering
ReplaceNodeResults	Target/XCore/XCoreISelLowering.cpp	/^void XCoreTargetLowering::ReplaceNodeResults(SDNode *N,$/;"	f	class:XCoreTargetLowering
ReplaceRegWith	CodeGen/MachineSSAUpdater.cpp	/^void MachineSSAUpdater::ReplaceRegWith(unsigned OldReg, unsigned NewReg) {$/;"	f	class:MachineSSAUpdater
ReplaceTLSBaseAddrCall	Target/X86/X86InstrInfo.cpp	/^    MachineInstr *ReplaceTLSBaseAddrCall(MachineInstr *I,$/;"	f	struct:__anon376::LDTLSCleanup
ReplaceTailWithBranchTo	CodeGen/BranchFolding.cpp	/^void BranchFolder::ReplaceTailWithBranchTo(MachineBasicBlock::iterator OldInst,$/;"	f	class:BranchFolder
ReplaceTailWithBranchTo	CodeGen/TargetInstrInfoImpl.cpp	/^TargetInstrInfoImpl::ReplaceTailWithBranchTo(MachineBasicBlock::iterator Tail,$/;"	f	class:TargetInstrInfoImpl
ReplaceTailWithBranchTo	Target/ARM/Thumb2InstrInfo.cpp	/^Thumb2InstrInfo::ReplaceTailWithBranchTo(MachineBasicBlock::iterator Tail,$/;"	f	class:Thumb2InstrInfo
ReplaceUsesOfBlockWith	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::ReplaceUsesOfBlockWith(MachineBasicBlock *Old,$/;"	f	class:MachineBasicBlock
ReplaceUsesOfMallocWithGlobal	Transforms/IPO/GlobalOpt.cpp	/^static void ReplaceUsesOfMallocWithGlobal(Instruction *Alloc,$/;"	f	file:
ReplaceUsesOfWith	Transforms/Scalar/LoopUnswitch.cpp	/^static void ReplaceUsesOfWith(Instruction *I, Value *V,$/;"	f	file:
ReplaceUsesWithZeroReg	Target/Mips/MipsISelDAGToDAG.cpp	/^bool MipsDAGToDAGISel::ReplaceUsesWithZeroReg(MachineRegisterInfo *MRI,$/;"	f	class:MipsDAGToDAGISel
ReplaceValueWith	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::ReplaceValueWith(SDValue From, SDValue To) {$/;"	f	class:DAGTypeLegalizer
ReplaceableInstrs	Target/X86/X86InstrInfo.cpp	/^static const uint16_t ReplaceableInstrs[][3] = {$/;"	v	file:
ReplaceableInstrsAVX2	Target/X86/X86InstrInfo.cpp	/^static const uint16_t ReplaceableInstrsAVX2[][3] = {$/;"	v	file:
ReplacedNode	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  void ReplacedNode(SDNode *N) {$/;"	f	class:__anon67::SelectionDAGLegalize
ReplacedValues	CodeGen/SelectionDAG/LegalizeTypes.h	/^  DenseMap<SDValue, SDValue> ReplacedValues;$/;"	m	class:llvm::DAGTypeLegalizer
ReportPackets	Target/Hexagon/HexagonMachineScheduler.h	/^  unsigned ReportPackets() {$/;"	f	class:llvm::ConvergingVLIWScheduler
Required	Support/DAGDeltaAlgorithm.cpp	/^  const changeset_ty &Required;$/;"	m	class:__anon233::DeltaActiveSetHelper	file:
RequiresDomTree	Transforms/Scalar/SROA.cpp	/^  const bool RequiresDomTree;$/;"	m	class:__anon559::SROA	file:
RequiresStackProtector	CodeGen/StackProtector.cpp	/^bool StackProtector::RequiresStackProtector() const {$/;"	f	class:StackProtector
RequiresValue	Support/CommandLine.cpp	/^static bool RequiresValue(const Option *O) {$/;"	f	file:
ResNo	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^      unsigned ResNo;       \/\/ valid for expressions$/;"	m	struct:llvm::SDDbgValue::__anon89::__anon90
RescheduleKillAboveMI	CodeGen/TwoAddressInstructionPass.cpp	/^TwoAddressInstructionPass::RescheduleKillAboveMI(MachineBasicBlock *MBB,$/;"	f	class:TwoAddressInstructionPass
RescheduleLoadStoreInstrs	Target/ARM/ARMLoadStoreOptimizer.cpp	/^ARMPreAllocLoadStoreOpt::RescheduleLoadStoreInstrs(MachineBasicBlock *MBB) {$/;"	f	class:ARMPreAllocLoadStoreOpt
RescheduleMIBelowKill	CodeGen/TwoAddressInstructionPass.cpp	/^TwoAddressInstructionPass::RescheduleMIBelowKill(MachineBasicBlock *MBB,$/;"	f	class:TwoAddressInstructionPass
RescheduleOps	Target/ARM/ARMLoadStoreOptimizer.cpp	/^bool ARMPreAllocLoadStoreOpt::RescheduleOps(MachineBasicBlock *MBB,$/;"	f	class:ARMPreAllocLoadStoreOpt
Reset	CodeGen/ScoreboardHazardRecognizer.cpp	/^void ScoreboardHazardRecognizer::Reset() {$/;"	f	class:ScoreboardHazardRecognizer
Reset	Support/Allocator.cpp	/^void BumpPtrAllocator::Reset() {$/;"	f	class:llvm::BumpPtrAllocator
Reset	Target/ARM/ARMHazardRecognizer.cpp	/^void ARMHazardRecognizer::Reset() {$/;"	f	class:ARMHazardRecognizer
Reset	Target/PowerPC/PPCHazardRecognizers.cpp	/^void PPCHazardRecognizer970::Reset() {$/;"	f	class:PPCHazardRecognizer970
Reset	Target/PowerPC/PPCHazardRecognizers.cpp	/^void PPCScoreboardHazardRecognizer::Reset() {$/;"	f	class:PPCScoreboardHazardRecognizer
ResetSequenceProgress	Transforms/Scalar/ObjCARC.cpp	/^    void ResetSequenceProgress(Sequence NewSeq) {$/;"	f	class:__anon506::PtrState
Resolution	CodeGen/RegisterCoalescer.cpp	/^    ConflictResolution Resolution;$/;"	m	struct:__anon115::JoinVals::Val	file:
ResolveConstantForwardRefs	Bitcode/Reader/BitcodeReader.cpp	/^void BitcodeReaderValueList::ResolveConstantForwardRefs() {$/;"	f	class:BitcodeReaderValueList
ResolveConstants	Bitcode/Reader/BitcodeReader.h	/^  ResolveConstantsTy ResolveConstants;$/;"	m	class:llvm::BitcodeReaderValueList
ResolveConstantsTy	Bitcode/Reader/BitcodeReader.h	/^  typedef std::vector<std::pair<Constant*, unsigned> > ResolveConstantsTy;$/;"	t	class:llvm::BitcodeReaderValueList
ResolveForwardRefBlockAddresses	AsmParser/LLParser.cpp	/^bool LLParser::ResolveForwardRefBlockAddresses(Function *TheFn, $/;"	f	class:LLParser
ResolveFrameIndexReference	Target/ARM/ARMFrameLowering.cpp	/^ARMFrameLowering::ResolveFrameIndexReference(const MachineFunction &MF,$/;"	f	class:ARMFrameLowering
ResolveGlobalAndAliasInits	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::ResolveGlobalAndAliasInits() {$/;"	f	class:BitcodeReader
ResolveMulticlassDef	TableGen/TGParser.cpp	/^bool TGParser::ResolveMulticlassDef(MultiClass &MC,$/;"	f	class:TGParser
ResolveMulticlassDefArgs	TableGen/TGParser.cpp	/^bool TGParser::ResolveMulticlassDefArgs(MultiClass &MC,$/;"	f	class:TGParser
ResolveRegAllocHint	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::ResolveRegAllocHint(unsigned Type, unsigned Reg,$/;"	f	class:ARMBaseRegisterInfo
ResolvedUndefsIn	Transforms/Scalar/SCCP.cpp	/^bool SCCPSolver::ResolvedUndefsIn(Function &F) {$/;"	f	class:SCCPSolver
Resolver	ExecutionEngine/JIT/JITEmitter.cpp	/^    JITResolver Resolver;$/;"	m	class:__anon182::JITEmitter	file:
ResolverHasStubs	ExecutionEngine/JIT/JITEmitter.cpp	/^    bool ResolverHasStubs(JITResolver* Resolver) const {$/;"	f	class:__anon182::StubToResolverMapTy
ResourceModel	Target/Hexagon/HexagonMachineScheduler.h	/^    VLIWResourceModel *ResourceModel;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
ResourcePriorityQueue	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^ResourcePriorityQueue::ResourcePriorityQueue(SelectionDAGISel *IS) :$/;"	f	class:ResourcePriorityQueue
ResourcesModel	Target/Hexagon/HexagonMachineScheduler.h	/^  DFAPacketizer *ResourcesModel;$/;"	m	class:llvm::VLIWResourceModel
RestoreHazardCheckerBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::RestoreHazardCheckerBottomUp() {$/;"	f	class:ScheduleDAGRRList
RestoreSPFromFP	Target/ARM/ARMMachineFunctionInfo.h	/^  bool RestoreSPFromFP;$/;"	m	class:llvm::ARMFunctionInfo
RestrictingDepExistInPacket	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::RestrictingDepExistInPacket (MachineInstr* MI,$/;"	f	class:HexagonPacketizerList
Result	MC/MCDisassembler/EDInst.h	/^  int Result;$/;"	m	struct:llvm::CachedResult
Result	Support/CrashRecoveryContext.cpp	/^  bool Result;$/;"	m	struct:__anon256::RunSafelyOnThreadInfo	file:
ResumeInst	VMCore/Instructions.cpp	/^ResumeInst::ResumeInst(Value *Exn, BasicBlock *InsertAtEnd)$/;"	f	class:ResumeInst
ResumeInst	VMCore/Instructions.cpp	/^ResumeInst::ResumeInst(Value *Exn, Instruction *InsertBefore)$/;"	f	class:ResumeInst
ResumeInst	VMCore/Instructions.cpp	/^ResumeInst::ResumeInst(const ResumeInst &RI)$/;"	f	class:ResumeInst
Ret	Target/MBlaze/MBlazeISelLowering.h	/^      Ret,$/;"	e	enum:llvm::MBlazeISD::NodeType
Ret	Target/Mips/MipsISelLowering.h	/^      Ret,$/;"	e	enum:llvm::MipsISD::NodeType
RetCC_ARM_AAPCS_Custom_f64	Target/ARM/ARMCallingConv.h	/^static bool RetCC_ARM_AAPCS_Custom_f64(unsigned &ValNo, MVT &ValVT, MVT &LocVT,$/;"	f	namespace:llvm
RetCC_ARM_APCS_Custom_f64	Target/ARM/ARMCallingConv.h	/^static bool RetCC_ARM_APCS_Custom_f64(unsigned &ValNo, MVT &ValVT, MVT &LocVT,$/;"	f	namespace:llvm
RetCC_Hexagon	Target/Hexagon/HexagonISelLowering.cpp	/^static bool RetCC_Hexagon(unsigned ValNo, MVT ValVT,$/;"	f	file:
RetCC_Hexagon32	Target/Hexagon/HexagonISelLowering.cpp	/^static bool RetCC_Hexagon32(unsigned ValNo, MVT ValVT,$/;"	f	file:
RetCC_Hexagon32_VarArgs	Target/Hexagon/HexagonVarargsCallingConvention.h	/^static bool RetCC_Hexagon32_VarArgs(unsigned ValNo, EVT ValVT,$/;"	f
RetCC_Hexagon64	Target/Hexagon/HexagonISelLowering.cpp	/^static bool RetCC_Hexagon64(unsigned ValNo, MVT ValVT,$/;"	f	file:
RetOrArg	Transforms/IPO/DeadArgumentElimination.cpp	/^      RetOrArg(const Function *F, unsigned Idx, bool IsArg) : F(F), Idx(Idx),$/;"	f	struct:__anon600::DAE::RetOrArg
RetOrArg	Transforms/IPO/DeadArgumentElimination.cpp	/^    struct RetOrArg {$/;"	s	class:__anon600::DAE	file:
RetainAutoreleaseCallee	Transforms/Scalar/ObjCARC.cpp	/^             *RetainAutoreleaseCallee, *RetainAutoreleaseRVCallee;$/;"	m	class:__anon510::ObjCARCContract	file:
RetainAutoreleaseDep	Transforms/Scalar/ObjCARC.cpp	/^    RetainAutoreleaseDep,       \/\/\/< Blocks objc_retainAutorelease.$/;"	e	enum:__anon509::DependenceKind	file:
RetainAutoreleaseRVCallee	Transforms/Scalar/ObjCARC.cpp	/^             *RetainAutoreleaseCallee, *RetainAutoreleaseRVCallee;$/;"	m	class:__anon510::ObjCARCContract	file:
RetainAutoreleaseRVDep	Transforms/Scalar/ObjCARC.cpp	/^    RetainAutoreleaseRVDep,     \/\/\/< Blocks objc_retainAutoreleaseReturnValue.$/;"	e	enum:__anon509::DependenceKind	file:
RetainBlockCallee	Transforms/Scalar/ObjCARC.cpp	/^             *RetainCallee, *RetainBlockCallee, *AutoreleaseCallee;$/;"	m	class:__anon508::ObjCARCOpt	file:
RetainCallee	Transforms/Scalar/ObjCARC.cpp	/^             *RetainCallee, *RetainBlockCallee, *AutoreleaseCallee;$/;"	m	class:__anon508::ObjCARCOpt	file:
RetainRVCallee	Transforms/Scalar/ObjCARC.cpp	/^    Constant *RetainRVCallee, *AutoreleaseRVCallee, *ReleaseCallee,$/;"	m	class:__anon508::ObjCARCOpt	file:
RetainRVDep	Transforms/Scalar/ObjCARC.cpp	/^    RetainRVDep                 \/\/\/< Blocks objc_retainAutoreleasedReturnValue.$/;"	e	enum:__anon509::DependenceKind	file:
RetainRVMarker	Transforms/Scalar/ObjCARC.cpp	/^    const MDString *RetainRVMarker;$/;"	m	class:__anon510::ObjCARCContract	file:
ReturnAddrIndex	Target/MSP430/MSP430MachineFunctionInfo.h	/^  int ReturnAddrIndex;$/;"	m	class:llvm::MSP430MachineFunctionInfo
ReturnAddrIndex	Target/X86/X86MachineFunctionInfo.h	/^  int ReturnAddrIndex;$/;"	m	class:llvm::X86MachineFunctionInfo
ReturnAddrSaveIndex	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int ReturnAddrSaveIndex;$/;"	m	class:llvm::PPCFunctionInfo
ReturnBlock	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVBlock *ReturnBlock;$/;"	m	class:__anon490::GCOVFunction	file:
ReturnBlocks	CodeGen/PrologEpilogInserter.h	/^    SmallVector<MachineBasicBlock*, 4> ReturnBlocks;$/;"	m	class:llvm::PEI
ReturnCaptures	Analysis/CaptureTracking.cpp	/^    bool ReturnCaptures;$/;"	m	struct:__anon10::SimpleCaptureTracker	file:
ReturnError	MC/MCParser/AsmLexer.cpp	/^AsmToken AsmLexer::ReturnError(const char *Loc, const std::string &Msg) {$/;"	f	class:AsmLexer
ReturnError	TableGen/TGLexer.cpp	/^tgtok::TokKind TGLexer::ReturnError(const char *Loc, const Twine &Msg) {$/;"	f	class:TGLexer
ReturnInst	VMCore/Instructions.cpp	/^ReturnInst::ReturnInst(LLVMContext &C, Value *retVal, BasicBlock *InsertAtEnd)$/;"	f	class:ReturnInst
ReturnInst	VMCore/Instructions.cpp	/^ReturnInst::ReturnInst(LLVMContext &C, Value *retVal, Instruction *InsertBefore)$/;"	f	class:ReturnInst
ReturnInst	VMCore/Instructions.cpp	/^ReturnInst::ReturnInst(LLVMContext &Context, BasicBlock *InsertAtEnd)$/;"	f	class:ReturnInst
ReturnInst	VMCore/Instructions.cpp	/^ReturnInst::ReturnInst(const ReturnInst &RI)$/;"	f	class:ReturnInst
ReturnType	VMCore/LLVMContextImpl.h	/^    const Type *ReturnType;$/;"	m	struct:llvm::FunctionTypeKeyInfo::KeyTy
ReuseOrCreateCast	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::ReuseOrCreateCast(Value *V, Type *Ty,$/;"	f	class:SCEVExpander
RevGroupMapTy	MC/ELFObjectWriter.cpp	/^    typedef DenseMap<const MCSymbol*, const MCSectionELF*> RevGroupMapTy;$/;"	t	class:__anon225::ELFObjectWriter	file:
ReverseBranchCondition	CodeGen/IfConversion.cpp	/^bool IfConverter::ReverseBranchCondition(BBInfo &BBI) {$/;"	f	class:IfConverter
ReverseBranchCondition	Target/ARM/ARMBaseInstrInfo.cpp	/^ReverseBranchCondition(SmallVectorImpl<MachineOperand> &Cond) const {$/;"	f	class:ARMBaseInstrInfo
ReverseBranchCondition	Target/CellSPU/SPUInstrInfo.cpp	/^SPUInstrInfo::ReverseBranchCondition(SmallVectorImpl<MachineOperand> &Cond)$/;"	f	class:SPUInstrInfo
ReverseBranchCondition	Target/Hexagon/HexagonInstrInfo.cpp	/^ReverseBranchCondition(SmallVectorImpl<MachineOperand> &Cond) const {$/;"	f	class:HexagonInstrInfo
ReverseBranchCondition	Target/MBlaze/MBlazeInstrInfo.cpp	/^bool MBlazeInstrInfo::ReverseBranchCondition(SmallVectorImpl<MachineOperand>$/;"	f	class:MBlazeInstrInfo
ReverseBranchCondition	Target/MSP430/MSP430InstrInfo.cpp	/^ReverseBranchCondition(SmallVectorImpl<MachineOperand> &Cond) const {$/;"	f	class:MSP430InstrInfo
ReverseBranchCondition	Target/Mips/MipsInstrInfo.cpp	/^ReverseBranchCondition(SmallVectorImpl<MachineOperand> &Cond) const$/;"	f	class:MipsInstrInfo
ReverseBranchCondition	Target/PowerPC/PPCInstrInfo.cpp	/^ReverseBranchCondition(SmallVectorImpl<MachineOperand> &Cond) const {$/;"	f	class:PPCInstrInfo
ReverseBranchCondition	Target/X86/X86InstrInfo.cpp	/^ReverseBranchCondition(SmallVectorImpl<MachineOperand> &Cond) const {$/;"	f	class:X86InstrInfo
ReverseBranchCondition	Target/XCore/XCoreInstrInfo.cpp	/^ReverseBranchCondition(SmallVectorImpl<MachineOperand> &Cond) const {$/;"	f	class:XCoreInstrInfo
ReverseInsertPts	Transforms/Scalar/ObjCARC.cpp	/^    SmallPtrSet<Instruction *, 2> ReverseInsertPts;$/;"	m	struct:__anon505::RRInfo	file:
ReverseInstrIter	Target/Mips/MipsDelaySlotFiller.cpp	/^    typedef MachineBasicBlock::reverse_instr_iterator ReverseInstrIter;$/;"	t	struct:__anon436::Filler	file:
ReverseIter	Target/Mips/MipsLongBranch.cpp	/^  typedef MachineBasicBlock::reverse_iterator ReverseIter;$/;"	t	namespace:__anon437	file:
ReverseST0Table	Target/X86/X86FloatingPoint.cpp	/^static const TableEntry ReverseST0Table[] = {$/;"	v	file:
ReverseSTiTable	Target/X86/X86FloatingPoint.cpp	/^static const TableEntry ReverseSTiTable[] = {$/;"	v	file:
RewindFunction	CodeGen/DwarfEHPrepare.cpp	/^    Constant *RewindFunction;$/;"	m	class:__anon138::DwarfEHPrepare	file:
Rewrite	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::Rewrite(const LSRFixup &LF,$/;"	f	class:LSRInstance
RewriteAsNarrowerShuffle	Target/X86/X86ISelLowering.cpp	/^SDValue RewriteAsNarrowerShuffle(ShuffleVectorSDNode *SVOp,$/;"	f	file:
RewriteBitCast	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::RewriteBitCast(BitCastInst *BC, AllocaInst *AI, uint64_t Offset,$/;"	f	class:SROA
RewriteExprTree	Transforms/Scalar/Reassociate.cpp	/^void Reassociate::RewriteExprTree(BinaryOperator *I,$/;"	f	class:Reassociate
RewriteForPHI	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::RewriteForPHI(PHINode *PN,$/;"	f	class:LSRInstance
RewriteForScalarRepl	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::RewriteForScalarRepl(Instruction *I, AllocaInst *AI, uint64_t Offset,$/;"	f	class:SROA
RewriteGEP	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::RewriteGEP(GetElementPtrInst *GEPI, AllocaInst *AI, uint64_t Offset,$/;"	f	class:SROA
RewriteHeapSROALoadUser	Transforms/IPO/GlobalOpt.cpp	/^static void RewriteHeapSROALoadUser(Instruction *LoadUser,$/;"	f	file:
RewriteInstruction	CodeGen/StackSlotColoring.cpp	/^void StackSlotColoring::RewriteInstruction(MachineInstr *MI, int OldFI,$/;"	f	class:StackSlotColoring
RewriteLifetimeIntrinsic	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::RewriteLifetimeIntrinsic(IntrinsicInst *II, AllocaInst *AI,$/;"	f	class:SROA
RewriteLoadUserOfWholeAlloca	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::RewriteLoadUserOfWholeAlloca(LoadInst *LI, AllocaInst *AI,$/;"	f	class:SROA
RewriteLoopBodyWithConditionConstant	Transforms/Scalar/LoopUnswitch.cpp	/^void LoopUnswitch::RewriteLoopBodyWithConditionConstant(Loop *L, Value *LIC,$/;"	f	class:LoopUnswitch
RewriteLoopExitBlock	Transforms/Utils/LoopSimplify.cpp	/^BasicBlock *LoopSimplify::RewriteLoopExitBlock(Loop *L, BasicBlock *Exit) {$/;"	f	class:LoopSimplify
RewriteLoopExitValues	Transforms/Scalar/IndVarSimplify.cpp	/^void IndVarSimplify::RewriteLoopExitValues(Loop *L, SCEVExpander &Rewriter) {$/;"	f	class:IndVarSimplify
RewriteMemIntrinUserOfAlloca	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::RewriteMemIntrinUserOfAlloca(MemIntrinsic *MI, Instruction *Inst,$/;"	f	class:SROA
RewriteNonIntegerIVs	Transforms/Scalar/IndVarSimplify.cpp	/^void IndVarSimplify::RewriteNonIntegerIVs(Loop *L) {$/;"	f	class:IndVarSimplify
RewriteSingleStoreAlloca	Transforms/Utils/PromoteMemoryToRegister.cpp	/^void PromoteMem2Reg::RewriteSingleStoreAlloca(AllocaInst *AI,$/;"	f	class:PromoteMem2Reg
RewriteStoreUserOfWholeAlloca	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::RewriteStoreUserOfWholeAlloca(StoreInst *SI, AllocaInst *AI,$/;"	f	class:SROA
RewriteUse	CodeGen/MachineSSAUpdater.cpp	/^void MachineSSAUpdater::RewriteUse(MachineOperand &U) {$/;"	f	class:MachineSSAUpdater
RewriteUse	Transforms/Utils/SSAUpdater.cpp	/^void SSAUpdater::RewriteUse(Use &U) {$/;"	f	class:SSAUpdater
RewriteUseAfterInsertions	Transforms/Utils/SSAUpdater.cpp	/^void SSAUpdater::RewriteUseAfterInsertions(Use &U) {$/;"	f	class:SSAUpdater
RewriteUsesOfClonedInstructions	Transforms/Scalar/LoopRotation.cpp	/^static void RewriteUsesOfClonedInstructions(BasicBlock *OrigHeader,$/;"	f	file:
RewriteUsesOfLoadForHeapSRoA	Transforms/IPO/GlobalOpt.cpp	/^static void RewriteUsesOfLoadForHeapSRoA(LoadInst *Load,$/;"	f	file:
RightDistributesOverLeft	Transforms/InstCombine/InstructionCombining.cpp	/^static bool RightDistributesOverLeft(Instruction::BinaryOps LOp,$/;"	f	file:
Root	Analysis/IPA/CallGraph.cpp	/^  CallGraphNode *Root;$/;"	m	class:__anon2::BasicCallGraph	file:
Roots	CodeGen/ShadowStackGC.cpp	/^    std::vector<std::pair<CallInst*,AllocaInst*> > Roots;$/;"	m	class:__anon148::ShadowStackGC	file:
Roots	Support/DAGDeltaAlgorithm.cpp	/^  std::vector<change_ty> Roots;$/;"	m	class:__anon233::DAGDeltaAlgorithmImpl	file:
RotImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } RotImm;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon280	file:
RoundDoubleToAPInt	Support/APInt.cpp	/^APInt llvm::APIntOps::RoundDoubleToAPInt(double Double, unsigned width) {$/;"	f	class:llvm::APIntOps
RoundRobin	CodeGen/InterferenceCache.h	/^  unsigned RoundRobin;$/;"	m	class:llvm::InterferenceCache
Row	DebugInfo/DWARFDebugLine.h	/^    Row(bool default_is_stmt = false) { reset(default_is_stmt); }$/;"	f	struct:llvm::DWARFDebugLine::Row
Row	DebugInfo/DWARFDebugLine.h	/^  struct Row {$/;"	s	class:llvm::DWARFDebugLine
RowIter	DebugInfo/DWARFDebugLine.h	/^    typedef RowVector::const_iterator RowIter;$/;"	t	struct:llvm::DWARFDebugLine::LineTable
RowVector	DebugInfo/DWARFDebugLine.h	/^    typedef std::vector<Row> RowVector;$/;"	t	struct:llvm::DWARFDebugLine::LineTable
Rows	DebugInfo/DWARFDebugLine.h	/^    RowVector Rows;$/;"	m	struct:llvm::DWARFDebugLine::LineTable
Run	AsmParser/LLParser.cpp	/^bool LLParser::Run() {$/;"	f	class:LLParser
Run	CodeGen/SelectionDAG/DAGCombiner.cpp	/^void DAGCombiner::Run(CombineLevel AtLevel) {$/;"	f	class:DAGCombiner
Run	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^bool VectorLegalizer::Run() {$/;"	f	class:__anon72::VectorLegalizer
Run	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::Run(SelectionDAG *dag, MachineBasicBlock *bb) {$/;"	f	class:ScheduleDAGSDNodes
Run	MC/MCParser/AsmParser.cpp	/^bool AsmParser::Run(bool NoInitialTextSection, bool NoFinalize) {$/;"	f	class:AsmParser
Run	Support/DAGDeltaAlgorithm.cpp	/^DAGDeltaAlgorithm::Run(const changeset_ty &Changes,$/;"	f	class:DAGDeltaAlgorithm
Run	Support/DAGDeltaAlgorithm.cpp	/^DAGDeltaAlgorithmImpl::Run() {$/;"	f	class:DAGDeltaAlgorithmImpl
Run	Support/DeltaAlgorithm.cpp	/^DeltaAlgorithm::changeset_ty DeltaAlgorithm::Run(const changeset_ty &Changes) {$/;"	f	class:DeltaAlgorithm
Run	Transforms/Scalar/ObjCARC.cpp	/^    bool Run;$/;"	m	class:__anon501::ObjCARCExpand	file:
Run	Transforms/Scalar/ObjCARC.cpp	/^    bool Run;$/;"	m	class:__anon508::ObjCARCOpt	file:
Run	Transforms/Scalar/ObjCARC.cpp	/^    bool Run;$/;"	m	class:__anon510::ObjCARCContract	file:
RunAllPassesOnSCC	Analysis/IPA/CallGraphSCCPass.cpp	/^bool CGPassManager::RunAllPassesOnSCC(CallGraphSCC &CurSCC, CallGraph &CG,$/;"	f	class:CGPassManager
RunPassOnSCC	Analysis/IPA/CallGraphSCCPass.cpp	/^bool CGPassManager::RunPassOnSCC(Pass *P, CallGraphSCC &CurSCC,$/;"	f	class:CGPassManager
RunSafely	Support/CrashRecoveryContext.cpp	/^bool CrashRecoveryContext::RunSafely(void (*Fn)(void*), void *UserData) {$/;"	f	class:CrashRecoveryContext
RunSafelyOnThread	Support/CrashRecoveryContext.cpp	/^bool CrashRecoveryContext::RunSafelyOnThread(void (*Fn)(void*), void *UserData,$/;"	f	class:CrashRecoveryContext
RunSafelyOnThreadInfo	Support/CrashRecoveryContext.cpp	/^struct RunSafelyOnThreadInfo {$/;"	s	namespace:__anon256	file:
RunSafelyOnThread_Dispatch	Support/CrashRecoveryContext.cpp	/^static void RunSafelyOnThread_Dispatch(void *UserData) {$/;"	f	file:
RunningOnValgrind	Support/Valgrind.cpp	/^bool llvm::sys::RunningOnValgrind() {$/;"	f	class:llvm::sys
RuntimeDyld	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^RuntimeDyld::RuntimeDyld(RTDyldMemoryManager *mm) {$/;"	f	class:llvm::RuntimeDyld
RuntimeDyldELF	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.h	/^  RuntimeDyldELF(RTDyldMemoryManager *mm)$/;"	f	class:llvm::RuntimeDyldELF
RuntimeDyldELF	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.h	/^class RuntimeDyldELF : public RuntimeDyldImpl {$/;"	c	namespace:llvm
RuntimeDyldImpl	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  RuntimeDyldImpl(RTDyldMemoryManager *mm) : MemMgr(mm), HasError(false) {}$/;"	f	class:llvm::RuntimeDyldImpl
RuntimeDyldImpl	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^class RuntimeDyldImpl {$/;"	c	namespace:llvm
RuntimeDyldMachO	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.h	/^  RuntimeDyldMachO(RTDyldMemoryManager *mm) : RuntimeDyldImpl(mm) {}$/;"	f	class:llvm::RuntimeDyldMachO
RuntimeDyldMachO	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.h	/^class RuntimeDyldMachO : public RuntimeDyldImpl {$/;"	c	namespace:llvm
S	CodeGen/AsmPrinter/AsmPrinter.cpp	/^    const MCSection *S;$/;"	m	struct:__anon65::SectionCPs	file:
S	Target/ARM/ARMConstantPoolValue.h	/^  const char *S;                \/\/ ExtSymbol being loaded.$/;"	m	class:llvm::ARMConstantPoolSymbol
SA	CodeGen/RegAllocGreedy.cpp	/^  std::auto_ptr<SplitAnalysis> SA;$/;"	m	class:__anon158::RAGreedy	file:
SA	CodeGen/SplitKit.h	/^  SplitAnalysis &SA;$/;"	m	class:llvm::SplitEditor
SAHF	Target/X86/X86ISelLowering.h	/^      SAHF,$/;"	e	enum:llvm::X86ISD::NodeType
SBB	Target/X86/X86ISelLowering.h	/^      ADD, SUB, ADC, SBB, SMUL,$/;"	e	enum:llvm::X86ISD::NodeType
SCCNodes	Transforms/IPO/FunctionAttrs.cpp	/^    const SmallPtrSet<Function*, 8> &SCCNodes;$/;"	m	struct:__anon579::ArgumentUsesTracker	file:
SCCP	Transforms/Scalar/SCCP.cpp	/^    SCCP() : FunctionPass(ID) {$/;"	f	struct:__anon532::SCCP
SCCP	Transforms/Scalar/SCCP.cpp	/^  struct SCCP : public FunctionPass {$/;"	s	namespace:__anon532	file:
SCCPSolver	Transforms/Scalar/SCCP.cpp	/^  SCCPSolver(const DataLayout *td, const TargetLibraryInfo *tli)$/;"	f	class:__anon531::SCCPSolver
SCCPSolver	Transforms/Scalar/SCCP.cpp	/^class SCCPSolver : public InstVisitor<SCCPSolver> {$/;"	c	namespace:__anon531	file:
SCEVCallbackVH	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::SCEVCallbackVH::SCEVCallbackVH(Value *V, ScalarEvolution *se)$/;"	f	class:ScalarEvolution::SCEVCallbackVH
SCEVCastExpr	Analysis/ScalarEvolution.cpp	/^SCEVCastExpr::SCEVCastExpr(const FoldingSetNodeIDRef ID,$/;"	f	class:SCEVCastExpr
SCEVComplexityCompare	Analysis/ScalarEvolution.cpp	/^    explicit SCEVComplexityCompare(const LoopInfo *li) : LI(li) {}$/;"	f	class:__anon30::SCEVComplexityCompare
SCEVComplexityCompare	Analysis/ScalarEvolution.cpp	/^  class SCEVComplexityCompare {$/;"	c	namespace:__anon30	file:
SCEVCouldNotCompute	Analysis/ScalarEvolution.cpp	/^SCEVCouldNotCompute::SCEVCouldNotCompute() :$/;"	f	class:SCEVCouldNotCompute
SCEVFindUnsafe	Analysis/ScalarEvolutionExpander.cpp	/^  SCEVFindUnsafe(): IsUnsafe(false) {}$/;"	f	struct:__anon23::SCEVFindUnsafe
SCEVFindUnsafe	Analysis/ScalarEvolutionExpander.cpp	/^struct SCEVFindUnsafe {$/;"	s	namespace:__anon23	file:
SCEVSearch	Analysis/ScalarEvolution.cpp	/^  SCEVSearch(const SCEV *N): Node(N), IsFound(false) {}$/;"	f	struct:__anon32::SCEVSearch
SCEVSearch	Analysis/ScalarEvolution.cpp	/^struct SCEVSearch {$/;"	s	namespace:__anon32	file:
SCEVSignExtendExpr	Analysis/ScalarEvolution.cpp	/^SCEVSignExtendExpr::SCEVSignExtendExpr(const FoldingSetNodeIDRef ID,$/;"	f	class:SCEVSignExtendExpr
SCEVTruncateExpr	Analysis/ScalarEvolution.cpp	/^SCEVTruncateExpr::SCEVTruncateExpr(const FoldingSetNodeIDRef ID,$/;"	f	class:SCEVTruncateExpr
SCEVZeroExtendExpr	Analysis/ScalarEvolution.cpp	/^SCEVZeroExtendExpr::SCEVZeroExtendExpr(const FoldingSetNodeIDRef ID,$/;"	f	class:SCEVZeroExtendExpr
SCHEDULEDAGSDNODES_H	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	16;"	d
SCost	Target/Hexagon/HexagonMachineScheduler.h	/^    int SCost;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedCandidate
SD	MC/MCELFStreamer.cpp	/^    MCSymbolData *SD;$/;"	m	struct:__anon215::MCELFStreamer::LocalCommon	file:
SDDbgValue	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  SDDbgValue(MDNode *mdP, SDNode *N, unsigned R, uint64_t off, DebugLoc dl,$/;"	f	class:llvm::SDDbgValue
SDDbgValue	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  SDDbgValue(MDNode *mdP, const Value *C, uint64_t off, DebugLoc dl,$/;"	f	class:llvm::SDDbgValue
SDDbgValue	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  SDDbgValue(MDNode *mdP, unsigned FI, uint64_t off, DebugLoc dl, unsigned O) : $/;"	f	class:llvm::SDDbgValue
SDDbgValue	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^class SDDbgValue {$/;"	c	namespace:llvm
SDISelAsmOperandInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^  explicit SDISelAsmOperandInfo(const TargetLowering::AsmOperandInfo &info)$/;"	f	class:__anon83::SDISelAsmOperandInfo
SDISelAsmOperandInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^class SDISelAsmOperandInfo : public TargetLowering::AsmOperandInfo {$/;"	c	namespace:__anon83	file:
SDISelAsmOperandInfoVector	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^typedef SmallVector<SDISelAsmOperandInfo,16> SDISelAsmOperandInfoVector;$/;"	t	namespace:__anon83	file:
SDL	Target/Mips/MipsISelLowering.h	/^      SDL,$/;"	e	enum:llvm::MipsISD::NodeType
SDNODE	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^    SDNODE = 0,             \/\/ value is the result of an expression$/;"	e	enum:llvm::SDDbgValue::DbgValueKind
SDNodeOrder	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    unsigned SDNodeOrder;$/;"	m	class:llvm::SelectionDAGBuilder::DanglingDebugInfo
SDNodeOrder	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  unsigned SDNodeOrder;$/;"	m	class:llvm::SelectionDAGBuilder
SDNodeOrdering	CodeGen/SelectionDAG/SDNodeOrdering.h	/^  SDNodeOrdering() {}$/;"	f	class:llvm::SDNodeOrdering
SDNodeOrdering	CodeGen/SelectionDAG/SDNodeOrdering.h	/^class SDNodeOrdering {$/;"	c	namespace:llvm
SDR	Target/Mips/MipsISelLowering.h	/^      SDR$/;"	e	enum:llvm::MipsISD::NodeType
SE	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^    ScalarEvolution *SE;$/;"	m	class:__anon51::ScalarEvolutionAliasAnalysis	file:
SE	Analysis/ScalarEvolutionNormalization.cpp	/^  ScalarEvolution &SE;$/;"	m	class:__anon48::PostIncTransform	file:
SE	CodeGen/RegAllocGreedy.cpp	/^  std::auto_ptr<SplitEditor> SE;$/;"	m	class:__anon158::RAGreedy	file:
SE	Transforms/Scalar/IndVarSimplify.cpp	/^    ScalarEvolution *SE;$/;"	m	class:__anon495::IndVarSimplify	file:
SE	Transforms/Scalar/IndVarSimplify.cpp	/^    ScalarEvolution *SE;$/;"	m	class:__anon496::WideIVVisitor	file:
SE	Transforms/Scalar/IndVarSimplify.cpp	/^  ScalarEvolution *SE;$/;"	m	class:__anon497::WidenIV	file:
SE	Transforms/Scalar/LoopIdiomRecognize.cpp	/^    ScalarEvolution *SE;$/;"	m	class:__anon543::LoopIdiomRecognize	file:
SE	Transforms/Scalar/LoopStrengthReduce.cpp	/^  ScalarEvolution &SE;$/;"	m	class:__anon518::LSRInstance	file:
SE	Transforms/Utils/LoopSimplify.cpp	/^    ScalarEvolution *SE;$/;"	m	struct:__anon483::LoopSimplify	file:
SE	Transforms/Utils/SimplifyIndVar.cpp	/^    ScalarEvolution  *SE;$/;"	m	class:__anon463::SimplifyIndvar	file:
SE	Transforms/Vectorize/BBVectorize.cpp	/^    ScalarEvolution *SE;$/;"	m	struct:__anon604::BBVectorize	file:
SE	Transforms/Vectorize/LoopVectorize.cpp	/^  ScalarEvolution *SE;$/;"	m	class:__anon605::LoopVectorizationLegality	file:
SE	Transforms/Vectorize/LoopVectorize.cpp	/^  ScalarEvolution *SE;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
SE	Transforms/Vectorize/LoopVectorize.cpp	/^  ScalarEvolution *SE;$/;"	m	struct:__anon605::LoopVectorize	file:
SEE	Support/regcomp.c	118;"	d	file:
SEETWO	Support/regcomp.c	119;"	d	file:
SEG_ALLOCA	Target/X86/X86ISelLowering.h	/^      SEG_ALLOCA,$/;"	e	enum:llvm::X86ISD::NodeType
SEG_OVERRIDE_CS	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SEG_OVERRIDE_CS,$/;"	e	enum:__anon359
SEG_OVERRIDE_DS	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SEG_OVERRIDE_DS,$/;"	e	enum:__anon359
SEG_OVERRIDE_ES	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SEG_OVERRIDE_ES,$/;"	e	enum:__anon359
SEG_OVERRIDE_FS	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SEG_OVERRIDE_FS,$/;"	e	enum:__anon359
SEG_OVERRIDE_GS	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SEG_OVERRIDE_GS,$/;"	e	enum:__anon359
SEG_OVERRIDE_NONE	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SEG_OVERRIDE_NONE,$/;"	e	enum:__anon359
SEG_OVERRIDE_SS	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SEG_OVERRIDE_SS,$/;"	e	enum:__anon359
SEG_OVERRIDE_max	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SEG_OVERRIDE_max$/;"	e	enum:__anon359
SELB	Target/CellSPU/SPUISelLowering.h	/^      SELB,                     \/\/\/< Select bits -> (b & mask) | (a & ~mask)$/;"	e	enum:llvm::SPUISD::NodeType
SELECTIONDAGBUILDER_H	CodeGen/SelectionDAG/SelectionDAGBuilder.h	15;"	d
SELECTIONDAG_LEGALIZETYPES_H	CodeGen/SelectionDAG/LegalizeTypes.h	17;"	d
SELECT_CC	Target/MSP430/MSP430ISelLowering.h	/^      SELECT_CC,$/;"	e	enum:llvm::MSP430ISD::__anon397
SELECT_FCC	Target/Hexagon/HexagonISelLowering.h	/^      SELECT_FCC,  \/\/ Select between two values using the current FCC flags.$/;"	e	enum:llvm::HexagonISD::__anon404
SELECT_FCC	Target/Sparc/SparcISelLowering.h	/^      SELECT_FCC,  \/\/ Select between two values using the current FCC flags.$/;"	e	enum:llvm::SPISD::__anon444
SELECT_ICC	Target/Hexagon/HexagonISelLowering.h	/^      SELECT_ICC,  \/\/ Select between two values using the current ICC flags.$/;"	e	enum:llvm::HexagonISD::__anon404
SELECT_ICC	Target/Sparc/SparcISelLowering.h	/^      SELECT_ICC,  \/\/ Select between two values using the current ICC flags.$/;"	e	enum:llvm::SPISD::__anon444
SELECT_MASK	Target/CellSPU/SPUISelLowering.h	/^      SELECT_MASK,              \/\/\/< Select Mask (FSM, FSMB, FSMH, FSMBI)$/;"	e	enum:llvm::SPUISD::NodeType
SEL_CPU	Target/ARM/ARMBuildAttrs.h	/^    SEL_CPU $/;"	e	enum:ARMBuildAttrs::SpecialAttr
SET0	Support/regexec.c	108;"	d	file:
SET0	Support/regexec.c	61;"	d	file:
SET0	Support/regexec.c	87;"	d	file:
SET1	Support/regexec.c	109;"	d	file:
SET1	Support/regexec.c	62;"	d	file:
SET1	Support/regexec.c	88;"	d	file:
SETCC	Target/Hexagon/HexagonISelLowering.h	/^      SETCC,$/;"	e	enum:llvm::HexagonISD::__anon404
SETCC	Target/MSP430/MSP430ISelLowering.h	/^      SETCC,$/;"	e	enum:llvm::MSP430ISD::__anon397
SETCC	Target/X86/X86ISelLowering.h	/^      SETCC,$/;"	e	enum:llvm::X86ISD::NodeType
SETCC_CARRY	Target/X86/X86ISelLowering.h	/^      SETCC_CARRY,  \/\/ R = carry_bit ? ~0 : 0$/;"	e	enum:llvm::X86ISD::NodeType
SETERROR	Support/regcomp.c	126;"	d	file:
SETUP	Support/regexec.c	118;"	d	file:
SETUP	Support/regexec.c	69;"	d	file:
SETUP	Support/regexec.c	95;"	d	file:
SExtInst	VMCore/Instructions.cpp	/^SExtInst::SExtInst($/;"	f	class:SExtInst
SExtPromoteOperand	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::SExtPromoteOperand(SDValue Op, EVT PVT) {$/;"	f	class:DAGCombiner
SExtPromotedInteger	CodeGen/SelectionDAG/LegalizeTypes.h	/^  SDValue SExtPromotedInteger(SDValue Op) {$/;"	f	class:llvm::DAGTypeLegalizer
SFENCE	Target/X86/X86ISelLowering.h	/^      SFENCE,$/;"	e	enum:llvm::X86ISD::NodeType
SHARED	Target/NVPTX/NVPTX.h	/^  SHARED = 3,$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::AddressSpace
SHILO	Target/Mips/MipsISelLowering.h	/^      SHILO,$/;"	e	enum:llvm::MipsISD::NodeType
SHL	Target/MSP430/MSP430ISelLowering.h	/^      SHL, SRA, SRL$/;"	e	enum:llvm::MSP430ISD::__anon397
SHL	Target/PowerPC/PPCISelLowering.h	/^      SRL, SRA, SHL,$/;"	e	enum:llvm::PPCISD::NodeType
SHLD	Target/X86/X86ISelLowering.h	/^      SHLD,$/;"	e	enum:llvm::X86ISD::NodeType
SHL_BITS	Target/CellSPU/SPUISelLowering.h	/^      SHL_BITS,                 \/\/\/< Shift quad left, by bits$/;"	e	enum:llvm::SPUISD::NodeType
SHL_BYTES	Target/CellSPU/SPUISelLowering.h	/^      SHL_BYTES,                \/\/\/< Shift quad left, by bytes$/;"	e	enum:llvm::SPUISD::NodeType
SHRD	Target/X86/X86ISelLowering.h	/^      SHRD,$/;"	e	enum:llvm::X86ISD::NodeType
SHUFB	Target/CellSPU/SPUISelLowering.h	/^      SHUFB,                    \/\/\/< Vector shuffle (permute)$/;"	e	enum:llvm::SPUISD::NodeType
SHUFFLE_MASK	Target/CellSPU/SPUISelLowering.h	/^      SHUFFLE_MASK,             \/\/\/< Shuffle mask$/;"	e	enum:llvm::SPUISD::NodeType
SHUFP	Target/X86/X86ISelLowering.h	/^      SHUFP,$/;"	e	enum:llvm::X86ISD::NodeType
SIBBase	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^} SIBBase;$/;"	t	typeref:enum:__anon356
SIBIndex	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^} SIBIndex;$/;"	t	typeref:enum:__anon355
SIB_BASE_NONE	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SIB_BASE_NONE,$/;"	e	enum:__anon356
SIB_BASE_max	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SIB_BASE_max$/;"	e	enum:__anon356
SIB_INDEX_NONE	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SIB_INDEX_NONE,$/;"	e	enum:__anon355
SIB_INDEX_max	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SIB_INDEX_max$/;"	e	enum:__anon355
SITOF	Target/ARM/ARMISelLowering.h	/^      SITOF,        \/\/ sint to FP within a FP register.$/;"	e	enum:llvm::ARMISD::NodeType
SIToFPInst	VMCore/Instructions.cpp	/^SIToFPInst::SIToFPInst($/;"	f	class:SIToFPInst
SIZE	Target/X86/X86JITInfo.cpp	63;"	d	file:
SIZE	Target/X86/X86JITInfo.cpp	66;"	d	file:
SLL	Target/Mips/MipsAnalyzeImmediate.h	/^    unsigned ADDiu, ORi, SLL, LUi;$/;"	m	class:llvm::MipsAnalyzeImmediate
SM	AsmParser/LLLexer.h	/^    SourceMgr &SM;$/;"	m	class:llvm::LLLexer
SM	Support/YAMLParser.cpp	/^  SourceMgr &SM;$/;"	m	class:llvm::yaml::Scanner	file:
SMDiagnostic	Support/SourceMgr.cpp	/^SMDiagnostic::SMDiagnostic(const SourceMgr &sm, SMLoc L, const std::string &FN,$/;"	f	class:SMDiagnostic
SMLAL	Target/ARM/ARMISelLowering.h	/^      SMLAL,        \/\/ 64bit Signed Accumulate Multiply$/;"	e	enum:llvm::ARMISD::NodeType
SMUL	Target/X86/X86ISelLowering.h	/^      ADD, SUB, ADC, SBB, SMUL,$/;"	e	enum:llvm::X86ISD::NodeType
SM_Partition	CodeGen/SplitKit.h	/^    SM_Partition,$/;"	e	enum:llvm::SplitEditor::ComplementSpillMode
SM_SentinelZero	Target/X86/Utils/X86ShuffleDecode.h	/^  SM_SentinelZero = -1$/;"	e	enum:llvm::__anon343
SM_Size	CodeGen/SplitKit.h	/^    SM_Size,$/;"	e	enum:llvm::SplitEditor::ComplementSpillMode
SM_Speed	CodeGen/SplitKit.h	/^    SM_Speed$/;"	e	enum:llvm::SplitEditor::ComplementSpillMode
SNAMES	Support/regexec.c	103;"	d	file:
SNAMES	Support/regexec.c	80;"	d	file:
SOP	Support/regex2.h	69;"	d
SOURCES	ExecutionEngine/IntelJITEvents/Makefile	/^SOURCES := IntelJITEventListener.cpp \\$/;"	m
SPARCCondCodeToString	Target/Sparc/Sparc.h	/^  inline static const char *SPARCCondCodeToString(SPCC::CondCodes CC) {$/;"	f	namespace:llvm
SPARCINSTRUCTIONINFO_H	Target/Sparc/SparcInstrInfo.h	15;"	d
SPARCMACHINEFUNCTIONINFO_H	Target/Sparc/SparcMachineFunctionInfo.h	14;"	d
SPARCMCTARGETDESC_H	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.h	15;"	d
SPARCREGISTERINFO_H	Target/Sparc/SparcRegisterInfo.h	15;"	d
SPARCSELECTIONDAGINFO_H	Target/Sparc/SparcSelectionDAGInfo.h	15;"	d
SPARCTARGETASMINFO_H	Target/Sparc/MCTargetDesc/SparcMCAsmInfo.h	15;"	d
SPARCTARGETMACHINE_H	Target/Sparc/SparcTargetMachine.h	15;"	d
SPARC_FRAMEINFO_H	Target/Sparc/SparcFrameLowering.h	15;"	d
SPARC_ISELLOWERING_H	Target/Sparc/SparcISelLowering.h	16;"	d
SPARC_SUBTARGET_H	Target/Sparc/SparcSubtarget.h	15;"	d
SPCC	Target/Sparc/Sparc.h	/^  namespace SPCC {$/;"	n	namespace:llvm
SPECIAL_ADDR	MC/MCDwarf.cpp	33;"	d	file:
SPF_SMAX	Transforms/InstCombine/InstCombine.h	/^  SPF_SMAX, SPF_UMAX$/;"	e	enum:llvm::SelectPatternFlavor
SPF_SMIN	Transforms/InstCombine/InstCombine.h	/^  SPF_SMIN, SPF_UMIN,$/;"	e	enum:llvm::SelectPatternFlavor
SPF_UMAX	Transforms/InstCombine/InstCombine.h	/^  SPF_SMAX, SPF_UMAX$/;"	e	enum:llvm::SelectPatternFlavor
SPF_UMIN	Transforms/InstCombine/InstCombine.h	/^  SPF_SMIN, SPF_UMIN,$/;"	e	enum:llvm::SelectPatternFlavor
SPF_UNKNOWN	Transforms/InstCombine/InstCombine.h	/^  SPF_UNKNOWN = 0,$/;"	e	enum:llvm::SelectPatternFlavor
SPII	Target/Sparc/SparcInstrInfo.h	/^namespace SPII {$/;"	n	namespace:llvm
SPISD	Target/Sparc/SparcISelLowering.h	/^  namespace SPISD {$/;"	n	namespace:llvm
SPMap	CodeGen/AsmPrinter/DwarfDebug.h	/^  DenseMap <const MDNode *, CompileUnit *> SPMap;$/;"	m	class:llvm::DwarfDebug
SPOffset	Target/MBlaze/MBlazeMachineFunction.h	/^    int SPOffset;$/;"	m	struct:llvm::MBlazeFunctionInfo::MBlazeFIHolder
SPQ	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  RegReductionPQBase *SPQ;$/;"	m	struct:__anon77::bu_ls_rr_sort	file:
SPQ	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  RegReductionPQBase *SPQ;$/;"	m	struct:__anon77::hybrid_ls_rr_sort	file:
SPQ	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  RegReductionPQBase *SPQ;$/;"	m	struct:__anon77::ilp_ls_rr_sort	file:
SPQ	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  RegReductionPQBase *SPQ;$/;"	m	struct:__anon77::src_ls_rr_sort	file:
SPRDecoderTable	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static const uint16_t SPRDecoderTable[] = {$/;"	v	file:
SPU	Target/CellSPU/SPUISelLowering.h	/^  namespace SPU {$/;"	n	namespace:llvm
SPU	Target/CellSPU/SPUSubtarget.h	/^  namespace SPU {$/;"	n	namespace:llvm
SPUAsmPrinter	Target/CellSPU/SPUAsmPrinter.cpp	/^    explicit SPUAsmPrinter(TargetMachine &TM, MCStreamer &Streamer) :$/;"	f	class:__anon413::SPUAsmPrinter
SPUAsmPrinter	Target/CellSPU/SPUAsmPrinter.cpp	/^  class SPUAsmPrinter : public AsmPrinter {$/;"	c	namespace:__anon413	file:
SPUDAGToDAGISel	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    explicit SPUDAGToDAGISel(SPUTargetMachine &tm) :$/;"	f	class:__anon414::SPUDAGToDAGISel
SPUDAGToDAGISel	Target/CellSPU/SPUISelDAGToDAG.cpp	/^  class SPUDAGToDAGISel :$/;"	c	namespace:__anon414	file:
SPUFrameLowering	Target/CellSPU/SPUFrameLowering.cpp	/^SPUFrameLowering::SPUFrameLowering(const SPUSubtarget &sti)$/;"	f	class:SPUFrameLowering
SPUFrameLowering	Target/CellSPU/SPUFrameLowering.h	/^  class SPUFrameLowering: public TargetFrameLowering {$/;"	c	namespace:llvm
SPUFunctionInfo	Target/CellSPU/SPUMachineFunction.h	/^  SPUFunctionInfo(MachineFunction& MF) $/;"	f	class:llvm::SPUFunctionInfo
SPUFunctionInfo	Target/CellSPU/SPUMachineFunction.h	/^class SPUFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
SPUHAZRECS_H	Target/CellSPU/SPUHazardRecognizers.h	16;"	d
SPUHazardRecognizer	Target/CellSPU/SPUHazardRecognizers.h	/^  SPUHazardRecognizer(const TargetInstrInfo &\/*TII*\/) {}$/;"	f	class:llvm::SPUHazardRecognizer
SPUHazardRecognizer	Target/CellSPU/SPUHazardRecognizers.h	/^class SPUHazardRecognizer : public ScheduleHazardRecognizer$/;"	c	namespace:llvm
SPUISD	Target/CellSPU/SPUISelLowering.h	/^  namespace SPUISD {$/;"	n	namespace:llvm
SPUInstrInfo	Target/CellSPU/SPUInstrInfo.cpp	/^SPUInstrInfo::SPUInstrInfo(SPUTargetMachine &tm)$/;"	f	class:SPUInstrInfo
SPUInstrInfo	Target/CellSPU/SPUInstrInfo.h	/^  class SPUInstrInfo : public SPUGenInstrInfo {$/;"	c	namespace:llvm
SPULinuxMCAsmInfo	Target/CellSPU/MCTargetDesc/SPUMCAsmInfo.cpp	/^SPULinuxMCAsmInfo::SPULinuxMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	class:SPULinuxMCAsmInfo
SPULinuxMCAsmInfo	Target/CellSPU/MCTargetDesc/SPUMCAsmInfo.h	/^  class SPULinuxMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
SPUMCTARGETDESC_H	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.h	15;"	d
SPUNopFiller	Target/CellSPU/SPUNopFiller.cpp	/^    SPUNopFiller(TargetMachine &tm) $/;"	f	struct:__anon417::SPUNopFiller
SPUNopFiller	Target/CellSPU/SPUNopFiller.cpp	/^  struct SPUNopFiller : public MachineFunctionPass {$/;"	s	namespace:__anon417	file:
SPUOpPlace	Target/CellSPU/SPUNopFiller.cpp	/^                   odd    = 3 } SPUOpPlace;$/;"	t	struct:__anon417::SPUNopFiller	typeref:enum:__anon417::SPUNopFiller::__anon418	file:
SPUPassConfig	Target/CellSPU/SPUTargetMachine.cpp	/^  SPUPassConfig(SPUTargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon415::SPUPassConfig
SPUPassConfig	Target/CellSPU/SPUTargetMachine.cpp	/^class SPUPassConfig : public TargetPassConfig {$/;"	c	namespace:__anon415	file:
SPURegisterInfo	Target/CellSPU/SPURegisterInfo.cpp	/^SPURegisterInfo::SPURegisterInfo(const SPUSubtarget &subtarget,$/;"	f	class:SPURegisterInfo
SPURegisterInfo	Target/CellSPU/SPURegisterInfo.h	/^  class SPURegisterInfo : public SPUGenRegisterInfo {$/;"	c	namespace:llvm
SPUSelectionDAGInfo	Target/CellSPU/SPUSelectionDAGInfo.cpp	/^SPUSelectionDAGInfo::SPUSelectionDAGInfo(const SPUTargetMachine &TM)$/;"	f	class:SPUSelectionDAGInfo
SPUSelectionDAGInfo	Target/CellSPU/SPUSelectionDAGInfo.h	/^class SPUSelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
SPUSubtarget	Target/CellSPU/SPUSubtarget.cpp	/^SPUSubtarget::SPUSubtarget(const std::string &TT, const std::string &CPU,$/;"	f	class:SPUSubtarget
SPUSubtarget	Target/CellSPU/SPUSubtarget.h	/^  class SPUSubtarget : public SPUGenSubtargetInfo {$/;"	c	namespace:llvm
SPUTARGETASMINFO_H	Target/CellSPU/MCTargetDesc/SPUMCAsmInfo.h	15;"	d
SPUTM	Target/CellSPU/SPUISelLowering.h	/^    SPUTargetMachine &SPUTM;$/;"	m	class:llvm::SPUTargetLowering
SPUTargetLowering	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::SPUTargetLowering(SPUTargetMachine &TM)$/;"	f	class:SPUTargetLowering
SPUTargetLowering	Target/CellSPU/SPUISelLowering.h	/^  class SPUTargetLowering :$/;"	c	namespace:llvm
SPUTargetMachine	Target/CellSPU/SPUTargetMachine.cpp	/^SPUTargetMachine::SPUTargetMachine(const Target &T, StringRef TT,$/;"	f	class:SPUTargetMachine
SPUTargetMachine	Target/CellSPU/SPUTargetMachine.h	/^class SPUTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
SPU_FRAMEINFO_H	Target/CellSPU/SPUFrameLowering.h	16;"	d
SPU_INSTRBUILDER_H	Target/CellSPU/SPUInstrBuilder.h	21;"	d
SPU_INSTRUCTIONINFO_H	Target/CellSPU/SPUInstrInfo.h	15;"	d
SPU_ISELLOWERING_H	Target/CellSPU/SPUISelLowering.h	16;"	d
SPU_MACHINE_FUNCTION_INFO_H	Target/CellSPU/SPUMachineFunction.h	15;"	d
SPU_REGISTERINFO_H	Target/CellSPU/SPURegisterInfo.h	16;"	d
SPU_REGISTER_NAMES_H	Target/CellSPU/SPURegisterNames.h	11;"	d
SPU_TARGETMACHINE_H	Target/CellSPU/SPUTargetMachine.h	15;"	d
SPUtli	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    const SPUTargetLowering &SPUtli;$/;"	m	class:__anon414::SPUDAGToDAGISel	file:
SPrintF	Transforms/Scalar/SimplifyLibCalls.cpp	/^    SPrintFOpt SPrintF; PrintFOpt PrintF;$/;"	m	class:__anon546::SimplifyLibCalls	file:
SPrintFOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct SPrintFOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
SRA	Target/MSP430/MSP430ISelLowering.h	/^      SHL, SRA, SRL$/;"	e	enum:llvm::MSP430ISD::__anon397
SRA	Target/PowerPC/PPCISelLowering.h	/^      SRL, SRA, SHL,$/;"	e	enum:llvm::PPCISD::NodeType
SRAGlobal	Transforms/IPO/GlobalOpt.cpp	/^static GlobalVariable *SRAGlobal(GlobalVariable *GV, const DataLayout &TD) {$/;"	f	file:
SRA_FLAG	Target/ARM/ARMISelLowering.h	/^      SRA_FLAG,     \/\/ V,Flag = sra_flag X -> sra X, 1 + save carry out.$/;"	e	enum:llvm::ARMISD::NodeType
SRL	Target/MSP430/MSP430ISelLowering.h	/^      SHL, SRA, SRL$/;"	e	enum:llvm::MSP430ISD::__anon397
SRL	Target/PowerPC/PPCISelLowering.h	/^      SRL, SRA, SHL,$/;"	e	enum:llvm::PPCISD::NodeType
SRL_BYTES	Target/CellSPU/SPUISelLowering.h	/^      SRL_BYTES,                \/\/\/< Shift quad right, by bytes. Insert zeros.$/;"	e	enum:llvm::SPUISD::NodeType
SRL_FLAG	Target/ARM/ARMISelLowering.h	/^      SRL_FLAG,     \/\/ V,Flag = srl_flag X -> srl X, 1 + save carry out.$/;"	e	enum:llvm::ARMISD::NodeType
SROA	Transforms/Scalar/SROA.cpp	/^  SROA(bool RequiresDomTree = true)$/;"	f	class:__anon559::SROA
SROA	Transforms/Scalar/SROA.cpp	/^class SROA : public FunctionPass {$/;"	c	namespace:__anon559	file:
SROA	Transforms/Scalar/ScalarReplAggregates.cpp	/^    SROA(int T, bool hasDT, char &ID, int ST, int AT, int SLT)$/;"	f	struct:__anon521::SROA
SROA	Transforms/Scalar/ScalarReplAggregates.cpp	/^  struct SROA : public FunctionPass {$/;"	s	namespace:__anon521	file:
SROAArgCosts	Analysis/InlineCost.cpp	/^  DenseMap<Value *, int> SROAArgCosts;$/;"	m	class:__anon28::CallAnalyzer	file:
SROAArgValues	Analysis/InlineCost.cpp	/^  DenseMap<Value *, Value *> SROAArgValues;$/;"	m	class:__anon28::CallAnalyzer	file:
SROACostSavings	Analysis/InlineCost.cpp	/^  unsigned SROACostSavings;$/;"	m	class:__anon28::CallAnalyzer	file:
SROACostSavingsLost	Analysis/InlineCost.cpp	/^  unsigned SROACostSavingsLost;$/;"	m	class:__anon28::CallAnalyzer	file:
SROA_DT	Transforms/Scalar/ScalarReplAggregates.cpp	/^    SROA_DT(int T = -1, int ST = -1, int AT = -1, int SLT = -1) :$/;"	f	struct:__anon521::SROA_DT
SROA_DT	Transforms/Scalar/ScalarReplAggregates.cpp	/^  struct SROA_DT : public SROA {$/;"	s	namespace:__anon521	file:
SROA_SSAUp	Transforms/Scalar/ScalarReplAggregates.cpp	/^    SROA_SSAUp(int T = -1, int ST = -1, int AT = -1, int SLT = -1) :$/;"	f	struct:__anon521::SROA_SSAUp
SROA_SSAUp	Transforms/Scalar/ScalarReplAggregates.cpp	/^  struct SROA_SSAUp : public SROA {$/;"	s	namespace:__anon521	file:
SRThreshold	Transforms/Scalar/ScalarReplAggregates.cpp	/^    unsigned SRThreshold;$/;"	m	struct:__anon521::SROA	file:
SRetReturnReg	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  unsigned SRetReturnReg;$/;"	m	class:llvm::HexagonMachineFunctionInfo
SRetReturnReg	Target/MBlaze/MBlazeMachineFunction.h	/^  unsigned SRetReturnReg;$/;"	m	class:llvm::MBlazeFunctionInfo
SRetReturnReg	Target/Mips/MipsMachineFunction.h	/^  unsigned SRetReturnReg;$/;"	m	class:llvm::MipsFunctionInfo
SRetReturnReg	Target/Sparc/SparcMachineFunctionInfo.h	/^    unsigned SRetReturnReg;$/;"	m	class:llvm::SparcMachineFunctionInfo
SRetReturnReg	Target/X86/X86MachineFunctionInfo.h	/^  unsigned SRetReturnReg;$/;"	m	class:llvm::X86MachineFunctionInfo
SSAIfConv	CodeGen/EarlyIfConversion.cpp	/^class SSAIfConv {$/;"	c	namespace:__anon91	file:
SSAUpdateVRs	CodeGen/TailDuplication.cpp	/^    SmallVector<unsigned, 16> SSAUpdateVRs;$/;"	m	class:__anon167::TailDuplicatePass	file:
SSAUpdateVals	CodeGen/TailDuplication.cpp	/^    DenseMap<unsigned, AvailableValsTy> SSAUpdateVals;$/;"	m	class:__anon167::TailDuplicatePass	file:
SSAUpdater	Transforms/Utils/SSAUpdater.cpp	/^SSAUpdater::SSAUpdater(SmallVectorImpl<PHINode*> *NewPHI)$/;"	f	class:SSAUpdater
SSAUpdaterTraits	CodeGen/MachineSSAUpdater.cpp	/^class SSAUpdaterTraits<MachineSSAUpdater> {$/;"	c	namespace:llvm	file:
SSAUpdaterTraits	Transforms/Utils/SSAUpdater.cpp	/^class SSAUpdaterTraits<SSAUpdater> {$/;"	c	namespace:llvm	file:
SSE1	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
SSE2	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
SSE3	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
SSE41	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
SSE42	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
SSEDomainShift	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    SSEDomainShift = SegOvrShift + 2,$/;"	e	enum:llvm::X86II::__anon350
SSIntervals	CodeGen/StackSlotColoring.cpp	/^    std::vector<LiveInterval*> SSIntervals;$/;"	m	class:__anon94::StackSlotColoring	file:
SSRefs	CodeGen/StackSlotColoring.cpp	/^    SmallVector<SmallVector<MachineInstr*, 8>, 16> SSRefs;$/;"	m	class:__anon94::StackSlotColoring	file:
SSSE3	Target/X86/X86Subtarget.h	/^    NoMMXSSE, MMX, SSE1, SSE2, SSE3, SSSE3, SSE41, SSE42, AVX, AVX2$/;"	e	enum:llvm::X86Subtarget::X86SSEEnum
ST	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ST    = 14,$/;"	e	enum:llvm::ARM_MB::MemBOpt
STATESETUP	Support/regexec.c	114;"	d	file:
STATESETUP	Support/regexec.c	67;"	d	file:
STATESETUP	Support/regexec.c	93;"	d	file:
STATETEARDOWN	Support/regexec.c	117;"	d	file:
STATETEARDOWN	Support/regexec.c	68;"	d	file:
STATETEARDOWN	Support/regexec.c	94;"	d	file:
STATEVARS	Support/regexec.c	113;"	d	file:
STATEVARS	Support/regexec.c	66;"	d	file:
STATEVARS	Support/regexec.c	92;"	d	file:
STBRX	Target/PowerPC/PPCISelLowering.h	/^      STBRX,$/;"	e	enum:llvm::PPCISD::NodeType
STCX	Target/PowerPC/PPCISelLowering.h	/^      STCX,$/;"	e	enum:llvm::PPCISD::NodeType
STDCALL	ExecutionEngine/IntelJITEvents/ittnotify_config.h	89;"	d
STDCALL	ExecutionEngine/IntelJITEvents/ittnotify_config.h	92;"	d
STDCALL	ExecutionEngine/IntelJITEvents/ittnotify_config.h	94;"	d
STDERR_FILENO	Support/raw_ostream.cpp	54;"	d	file:
STDIN_FILENO	Support/raw_ostream.cpp	48;"	d	file:
STDOUT_FILENO	Support/raw_ostream.cpp	51;"	d	file:
STD_32	Target/PowerPC/PPCISelLowering.h	/^      STD_32 = ISD::FIRST_TARGET_MEMORY_OPCODE,$/;"	e	enum:llvm::PPCISD::NodeType
STFIWX	Target/PowerPC/PPCISelLowering.h	/^      STFIWX,$/;"	e	enum:llvm::PPCISD::NodeType
STI	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<const llvm::MCSubtargetInfo> STI;$/;"	m	struct:llvm::EDDisassembler
STI	Target/ARM/ARMBaseRegisterInfo.h	/^  const ARMSubtarget &STI;$/;"	m	class:llvm::ARMBaseRegisterInfo
STI	Target/ARM/ARMConstantIslandPass.cpp	/^    const ARMSubtarget *STI;$/;"	m	class:__anon310::ARMConstantIslands	file:
STI	Target/ARM/ARMExpandPseudoInsts.cpp	/^    const ARMSubtarget *STI;$/;"	m	class:__anon311::ARMExpandPseudo	file:
STI	Target/ARM/ARMFrameLowering.h	/^  const ARMSubtarget &STI;$/;"	m	class:llvm::ARMFrameLowering
STI	Target/ARM/ARMHazardRecognizer.h	/^  const ARMSubtarget &STI;$/;"	m	class:llvm::ARMHazardRecognizer
STI	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    const ARMSubtarget *STI;$/;"	m	struct:__anon303::ARMLoadStoreOpt	file:
STI	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    const ARMSubtarget *STI;$/;"	m	struct:__anon304::ARMPreAllocLoadStoreOpt	file:
STI	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  MCSubtargetInfo &STI;$/;"	m	class:__anon259::ARMAsmParser	file:
STI	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  const MCSubtargetInfo* STI;$/;"	m	class:__anon284::ARMAsmBackend	file:
STI	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  const MCSubtargetInfo &STI;$/;"	m	class:__anon283::ARMMCCodeEmitter	file:
STI	Target/ARM/Thumb2SizeReduction.cpp	/^    const ARMSubtarget *STI;$/;"	m	class:__anon300::Thumb2SizeReduce	file:
STI	Target/Hexagon/HexagonFrameLowering.h	/^  const HexagonSubtarget &STI;$/;"	m	class:llvm::HexagonFrameLowering
STI	Target/MBlaze/MBlazeFrameLowering.h	/^  const MBlazeSubtarget &STI;$/;"	m	class:llvm::MBlazeFrameLowering
STI	Target/MSP430/MSP430FrameLowering.h	/^  const MSP430Subtarget &STI;$/;"	m	class:llvm::MSP430FrameLowering
STI	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  MCSubtargetInfo &STI;$/;"	m	class:__anon422::MipsAsmParser	file:
STI	Target/Mips/MipsFrameLowering.h	/^  const MipsSubtarget &STI;$/;"	m	class:llvm::MipsFrameLowering
STI	Target/X86/AsmParser/X86AsmParser.cpp	/^  MCSubtargetInfo &STI;$/;"	m	class:__anon335::X86AsmParser	file:
STI	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  const MCSubtargetInfo &STI;$/;"	m	class:__anon353::X86MCCodeEmitter	file:
STI	Target/X86/X86FrameLowering.h	/^  const X86Subtarget &STI;$/;"	m	class:llvm::X86FrameLowering
STTI	Target/ARM/ARMTargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::ARMTargetMachine
STTI	Target/ARM/ARMTargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::ThumbTargetMachine
STTI	Target/CellSPU/SPUTargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::SPUTargetMachine
STTI	Target/Hexagon/HexagonTargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::HexagonTargetMachine
STTI	Target/MBlaze/MBlazeTargetMachine.h	/^    ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::MBlazeTargetMachine
STTI	Target/MSP430/MSP430TargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::MSP430TargetMachine
STTI	Target/Mips/MipsTargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::MipsTargetMachine
STTI	Target/NVPTX/NVPTXTargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::NVPTXTargetMachine
STTI	Target/PowerPC/PPCTargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::PPCTargetMachine
STTI	Target/Sparc/SparcTargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::SparcTargetMachine
STTI	Target/X86/X86TargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::X86_32TargetMachine
STTI	Target/X86/X86TargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::X86_64TargetMachine
STTI	Target/XCore/XCoreTargetMachine.h	/^  ScalarTargetTransformImpl STTI;$/;"	m	class:llvm::XCoreTargetMachine
STWSP	Target/XCore/XCoreISelLowering.h	/^      STWSP,$/;"	e	enum:llvm::XCoreISD::NodeType
ST_CLEAN	Target/X86/X86VZeroUpper.cpp	/^      ST_CLEAN   = 1,$/;"	e	enum:__anon382::VZeroUpperInserter::__anon383	file:
ST_DEBUG	VMCore/AsmWriter.cpp	441;"	d	file:
ST_DIRTY	Target/X86/X86VZeroUpper.cpp	/^      ST_DIRTY   = 2,$/;"	e	enum:__anon382::VZeroUpperInserter::__anon383	file:
ST_INIT	Target/X86/X86VZeroUpper.cpp	/^      ST_INIT    = 3$/;"	e	enum:__anon382::VZeroUpperInserter::__anon383	file:
ST_UNKNOWN	Target/X86/X86VZeroUpper.cpp	/^      ST_UNKNOWN = 0,$/;"	e	enum:__anon382::VZeroUpperInserter::__anon383	file:
SU	CodeGen/MachineScheduler.cpp	/^    SUnit *SU;$/;"	m	struct:__anon126::ConvergingScheduler::SchedCandidate	file:
SU	Target/Hexagon/HexagonMachineScheduler.h	/^    SUnit *SU;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedCandidate
SUB	Target/X86/X86ISelDAGToDAG.cpp	/^  SUB,$/;"	e	enum:AtomicOpc	file:
SUB	Target/X86/X86ISelLowering.h	/^      ADD, SUB, ADC, SBB, SMUL,$/;"	e	enum:llvm::X86ISD::NodeType
SUB64_MARKER	Target/CellSPU/SPUISelLowering.h	/^      SUB64_MARKER,             \/\/\/< i64 subtraction marker$/;"	e	enum:llvm::SPUISD::NodeType
SUBC	Target/ARM/ARMISelLowering.h	/^      SUBC,         \/\/ Sub with carry$/;"	e	enum:llvm::ARMISD::NodeType
SUBE	Target/ARM/ARMISelLowering.h	/^      SUBE,         \/\/ Sub using carry$/;"	e	enum:llvm::ARMISD::NodeType
SUBREG_FPEVEN	Target/MBlaze/MBlazeRegisterInfo.h	/^    SUBREG_FPEVEN = 1, SUBREG_FPODD = 2$/;"	e	enum:llvm::MBlaze::SubregIndex
SUBREG_FPODD	Target/MBlaze/MBlazeRegisterInfo.h	/^    SUBREG_FPEVEN = 1, SUBREG_FPODD = 2$/;"	e	enum:llvm::MBlaze::SubregIndex
SUSchedulingCost	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^signed ResourcePriorityQueue::SUSchedulingCost(SUnit *SU) {$/;"	f	class:ResourcePriorityQueue
SUnitOrder	CodeGen/MachineScheduler.cpp	/^struct SUnitOrder {$/;"	s	namespace:__anon129	file:
SUnits	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  std::vector<SUnit> *SUnits;$/;"	m	class:__anon77::RegReductionPQBase	file:
SValue	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const Value *SValue;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestBlock
SValue	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const Value *SValue;$/;"	m	struct:llvm::SelectionDAGBuilder::JumpTableHeader
SWITCH_INST_MAGIC	Bitcode/Reader/BitcodeReader.cpp	/^  SWITCH_INST_MAGIC = 0x4B5 \/\/ May 2012 => 1205 => Hex$/;"	e	enum:__anon54	file:
SWITCH_INST_MAGIC	Bitcode/Writer/BitcodeWriter.cpp	/^  SWITCH_INST_MAGIC = 0x4B5 \/\/ May 2012 => 1205 => Hex$/;"	e	enum:__anon57	file:
SWL	Target/Mips/MipsISelLowering.h	/^      SWL,$/;"	e	enum:llvm::MipsISD::NodeType
SWR	Target/Mips/MipsISelLowering.h	/^      SWR,$/;"	e	enum:llvm::MipsISD::NodeType
SY	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    SY    = 15$/;"	e	enum:llvm::ARM_MB::MemBOpt
S_BitShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    S_BitShift     = 20,$/;"	e	enum:llvm::ARMII::__anon288
S_CanRelease	Transforms/Scalar/ObjCARC.cpp	/^    S_CanRelease,     \/\/\/< foo(x) -- x could possibly see a ref count decrement$/;"	e	enum:__anon504::Sequence	file:
S_MovableRelease	Transforms/Scalar/ObjCARC.cpp	/^    S_MovableRelease  \/\/\/< objc_release(x), !clang.imprecise_release$/;"	e	enum:__anon504::Sequence	file:
S_None	Transforms/Scalar/ObjCARC.cpp	/^    S_None,$/;"	e	enum:__anon504::Sequence	file:
S_Release	Transforms/Scalar/ObjCARC.cpp	/^    S_Release,        \/\/\/< objc_release(x)$/;"	e	enum:__anon504::Sequence	file:
S_Retain	Transforms/Scalar/ObjCARC.cpp	/^    S_Retain,         \/\/\/< objc_retain(x)$/;"	e	enum:__anon504::Sequence	file:
S_Stop	Transforms/Scalar/ObjCARC.cpp	/^    S_Stop,           \/\/\/< like S_Release, but code motion is stopped$/;"	e	enum:__anon504::Sequence	file:
S_Use	Transforms/Scalar/ObjCARC.cpp	/^    S_Use,            \/\/\/< any use of x$/;"	e	enum:__anon504::Sequence	file:
SafeToDestroyConstant	Transforms/IPO/GlobalOpt.cpp	/^static bool SafeToDestroyConstant(const Constant *C) {$/;"	f	file:
SafeToMergeTerminators	Transforms/Utils/SimplifyCFG.cpp	/^static bool SafeToMergeTerminators(TerminatorInst *SI1, TerminatorInst *SI2) {$/;"	f	file:
SameTailElt	CodeGen/BranchFolding.h	/^      SameTailElt(MPIterator mp, MachineBasicBlock::iterator tsp)$/;"	f	class:llvm::BranchFolder::SameTailElt
SameTailElt	CodeGen/BranchFolding.h	/^    class SameTailElt {$/;"	c	class:llvm::BranchFolder
SameTails	CodeGen/BranchFolding.h	/^    std::vector<SameTailElt> SameTails;$/;"	m	class:llvm::BranchFolder
SatFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    SatFrm        = 13 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
SavedBufferBegin	ExecutionEngine/JIT/JITEmitter.cpp	/^    uint8_t *SavedBufferBegin, *SavedBufferEnd, *SavedCurBufferPtr;$/;"	m	class:__anon182::JITEmitter	file:
SavedBufferEnd	ExecutionEngine/JIT/JITEmitter.cpp	/^    uint8_t *SavedBufferBegin, *SavedBufferEnd, *SavedCurBufferPtr;$/;"	m	class:__anon182::JITEmitter	file:
SavedCurBufferPtr	ExecutionEngine/JIT/JITEmitter.cpp	/^    uint8_t *SavedBufferBegin, *SavedBufferEnd, *SavedCurBufferPtr;$/;"	m	class:__anon182::JITEmitter	file:
SavedDiagContext	MC/MCParser/AsmParser.cpp	/^  void *SavedDiagContext;$/;"	m	class:__anon211::AsmParser	file:
SavedDiagHandler	MC/MCParser/AsmParser.cpp	/^  SourceMgr::DiagHandlerTy SavedDiagHandler;$/;"	m	class:__anon211::AsmParser	file:
Scalar	Target/NVPTX/NVPTX.h	/^  Scalar = 1,$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::VecType
ScalarEvolution	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::ScalarEvolution()$/;"	f	class:ScalarEvolution
ScalarEvolutionAliasAnalysis	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^    ScalarEvolutionAliasAnalysis() : FunctionPass(ID), SE(0) {$/;"	f	class:__anon51::ScalarEvolutionAliasAnalysis
ScalarEvolutionAliasAnalysis	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^  class ScalarEvolutionAliasAnalysis : public FunctionPass,$/;"	c	namespace:__anon51	file:
ScalarKind	Transforms/Scalar/ScalarReplAggregates.cpp	/^  } ScalarKind;$/;"	m	class:__anon522::ConvertToScalarInfo	typeref:enum:__anon522::ConvertToScalarInfo::__anon523	file:
ScalarLoadThreshold	Transforms/Scalar/ScalarReplAggregates.cpp	/^    unsigned ScalarLoadThreshold;$/;"	m	struct:__anon521::SROA	file:
ScalarLoadThreshold	Transforms/Scalar/ScalarReplAggregates.cpp	/^  unsigned ScalarLoadThreshold;$/;"	m	class:__anon522::ConvertToScalarInfo	file:
ScalarizeVecOp_BITCAST	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecOp_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecOp_CONCAT_VECTORS	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecOp_CONCAT_VECTORS(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecOp_EXTRACT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecOp_EXTRACT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecOp_STORE	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecOp_STORE(StoreSDNode *N, unsigned OpNo){$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_BITCAST	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_BUILD_VECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_BUILD_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_BinOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_BinOp(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_CONVERT_RNDSAT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_CONVERT_RNDSAT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_EXTRACT_SUBVECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_EXTRACT_SUBVECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_FPOWI	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_FPOWI(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_FP_ROUND	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_FP_ROUND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_INSERT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_INSERT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_InregOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_InregOp(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_LOAD	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_LOAD(LoadSDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_MERGE_VALUES	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_MERGE_VALUES(SDNode *N,$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_SCALAR_TO_VECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_SCALAR_TO_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_SELECT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_SELECT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_SELECT_CC	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_SELECT_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_SETCC	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_SETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_TernaryOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_TernaryOp(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_UNDEF	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_UNDEF(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_UnaryOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_UnaryOp(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_VECTOR_SHUFFLE	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_VECTOR_SHUFFLE(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_VSELECT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_VSELECT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVecRes_VSETCC	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::ScalarizeVecRes_VSETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVectorOperand	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^bool DAGTypeLegalizer::ScalarizeVectorOperand(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
ScalarizeVectorResult	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::ScalarizeVectorResult(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
ScalarizedVectors	CodeGen/SelectionDAG/LegalizeTypes.h	/^  DenseMap<SDValue, SDValue> ScalarizedVectors;$/;"	m	class:llvm::DAGTypeLegalizer
Scale	Analysis/BasicAliasAnalysis.cpp	/^    int64_t Scale;$/;"	m	struct:__anon14::VariableGEPIndex	file:
Scale	CodeGen/SpillPlacement.cpp	/^  float Scale[2];$/;"	m	struct:SpillPlacement::Node	file:
Scale	Target/X86/AsmParser/X86AsmParser.cpp	/^      unsigned Scale;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon341	file:
Scale	Target/X86/X86ISelDAGToDAG.cpp	/^    unsigned Scale;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
Scale	Target/X86/X86InstrBuilder.h	/^  unsigned Scale;$/;"	m	struct:llvm::X86AddressMode
ScaleAddrDelta	MC/MCDwarf.cpp	/^static inline uint64_t ScaleAddrDelta(uint64_t AddrDelta) {$/;"	f	file:
ScaleOne	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static const unsigned ScaleOne = 20;$/;"	v	file:
ScaleThree	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static const unsigned ScaleThree = 5;$/;"	v	file:
ScaleTwo	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static const unsigned ScaleTwo = 10;$/;"	v	file:
ScaleTwo	Target/Hexagon/HexagonMachineScheduler.cpp	/^static const unsigned ScaleTwo = 10;$/;"	v	file:
ScaledReg	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const SCEV *ScaledReg;$/;"	m	struct:__anon514::Formula	file:
ScanForSpillSlotRefs	CodeGen/StackSlotColoring.cpp	/^void StackSlotColoring::ScanForSpillSlotRefs(MachineFunction &MF) {$/;"	f	class:StackSlotColoring
ScanInstruction	CodeGen/AggressiveAntiDepBreaker.cpp	/^void AggressiveAntiDepBreaker::ScanInstruction(MachineInstr *MI,$/;"	f	class:AggressiveAntiDepBreaker
ScanInstruction	CodeGen/CriticalAntiDepBreaker.cpp	/^void CriticalAntiDepBreaker::ScanInstruction(MachineInstr *MI,$/;"	f	class:CriticalAntiDepBreaker
ScanInstructions	CodeGen/IfConversion.cpp	/^void IfConverter::ScanInstructions(BBInfo &BBI) {$/;"	f	class:IfConverter
ScanUses	CodeGen/TwoAddressInstructionPass.cpp	/^TwoAddressInstructionPass::ScanUses(unsigned DstReg, MachineBasicBlock *MBB,$/;"	f	class:TwoAddressInstructionPass
Scanner	Support/YAMLParser.cpp	/^Scanner::Scanner(StringRef Input, SourceMgr &sm)$/;"	f	class:Scanner
Scanner	Support/YAMLParser.cpp	/^class Scanner {$/;"	c	namespace:llvm::yaml	file:
SchedBoundary	CodeGen/MachineScheduler.cpp	/^    SchedBoundary(unsigned ID, const Twine &Name):$/;"	f	struct:__anon126::ConvergingScheduler::SchedBoundary
SchedBoundary	CodeGen/MachineScheduler.cpp	/^  struct SchedBoundary {$/;"	s	class:__anon126::ConvergingScheduler	file:
SchedBoundary	Target/Hexagon/HexagonMachineScheduler.h	/^    SchedBoundary(unsigned ID, const Twine &Name):$/;"	f	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
SchedBoundary	Target/Hexagon/HexagonMachineScheduler.h	/^  struct SchedBoundary {$/;"	s	class:llvm::ConvergingVLIWScheduler
SchedCandidate	CodeGen/MachineScheduler.cpp	/^    SchedCandidate(): SU(NULL) {}$/;"	f	struct:__anon126::ConvergingScheduler::SchedCandidate
SchedCandidate	CodeGen/MachineScheduler.cpp	/^  struct SchedCandidate {$/;"	s	class:__anon126::ConvergingScheduler	file:
SchedCandidate	Target/Hexagon/HexagonMachineScheduler.h	/^    SchedCandidate(): SU(NULL), SCost(0) {}$/;"	f	struct:llvm::ConvergingVLIWScheduler::SchedCandidate
SchedCandidate	Target/Hexagon/HexagonMachineScheduler.h	/^  struct SchedCandidate {$/;"	s	class:llvm::ConvergingVLIWScheduler
SchedDAG	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^      const ScheduleDAGSDNodes *SchedDAG;$/;"	m	class:llvm::ScheduleDAGSDNodes::RegDefIter
SchedDAGReverseDFS	CodeGen/ScheduleDAGInstrs.cpp	/^class SchedDAGReverseDFS {$/;"	c	namespace:__anon110	file:
SchedModel	CodeGen/EarlyIfConversion.cpp	/^  const MCSchedModel *SchedModel;$/;"	m	class:__anon92::EarlyIfConverter	file:
SchedModel	CodeGen/MachineScheduler.cpp	/^    const TargetSchedModel *SchedModel;$/;"	m	struct:__anon126::ConvergingScheduler::SchedBoundary	file:
SchedModel	CodeGen/MachineScheduler.cpp	/^  const TargetSchedModel *SchedModel;$/;"	m	class:__anon126::ConvergingScheduler	file:
SchedModel	CodeGen/MachineTraceMetrics.h	/^  TargetSchedModel SchedModel;$/;"	m	class:llvm::MachineTraceMetrics
SchedModel	Target/ARM/ARMSubtarget.h	/^  const MCSchedModel *SchedModel;$/;"	m	class:llvm::ARMSubtarget
SchedModel	Target/Hexagon/HexagonMachineScheduler.h	/^    const TargetSchedModel *SchedModel;$/;"	m	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
SchedModel	Target/Hexagon/HexagonMachineScheduler.h	/^  const TargetSchedModel *SchedModel;$/;"	m	class:llvm::ConvergingVLIWScheduler
SchedModel	Target/Hexagon/HexagonMachineScheduler.h	/^  const TargetSchedModel *SchedModel;$/;"	m	class:llvm::VLIWResourceModel
Schedule	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^void ScheduleDAGFast::Schedule() {$/;"	f	class:ScheduleDAGFast
Schedule	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^void ScheduleDAGLinearize::Schedule() {$/;"	f	class:ScheduleDAGLinearize
Schedule	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::Schedule() {$/;"	f	class:ScheduleDAGRRList
Schedule	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^void ScheduleDAGVLIW::Schedule() {$/;"	f	class:ScheduleDAGVLIW
ScheduleDAG	CodeGen/ScheduleDAG.cpp	/^ScheduleDAG::ScheduleDAG(MachineFunction &mf)$/;"	f	class:ScheduleDAG
ScheduleDAGFast	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  ScheduleDAGFast(MachineFunction &mf)$/;"	f	class:__anon86::ScheduleDAGFast
ScheduleDAGFast	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^class ScheduleDAGFast : public ScheduleDAGSDNodes {$/;"	c	namespace:__anon86	file:
ScheduleDAGInstrs	CodeGen/ScheduleDAGInstrs.cpp	/^ScheduleDAGInstrs::ScheduleDAGInstrs(MachineFunction &mf,$/;"	f	class:ScheduleDAGInstrs
ScheduleDAGLinearize	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  ScheduleDAGLinearize(MachineFunction &mf) : ScheduleDAGSDNodes(mf) {}$/;"	f	class:__anon87::ScheduleDAGLinearize
ScheduleDAGLinearize	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^class ScheduleDAGLinearize : public ScheduleDAGSDNodes {$/;"	c	namespace:__anon87	file:
ScheduleDAGRRList	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  ScheduleDAGRRList(MachineFunction &mf, bool needlatency,$/;"	f	class:__anon76::ScheduleDAGRRList
ScheduleDAGRRList	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^class ScheduleDAGRRList : public ScheduleDAGSDNodes {$/;"	c	namespace:__anon76	file:
ScheduleDAGSDNodes	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^ScheduleDAGSDNodes::ScheduleDAGSDNodes(MachineFunction &mf)$/;"	f	class:ScheduleDAGSDNodes
ScheduleDAGSDNodes	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^  class ScheduleDAGSDNodes : public ScheduleDAG {$/;"	c	namespace:llvm
ScheduleDAGTopologicalSort	CodeGen/ScheduleDAG.cpp	/^ScheduleDAGTopologicalSort(std::vector<SUnit> &sunits) : SUnits(sunits) {}$/;"	f	class:ScheduleDAGTopologicalSort
ScheduleDAGVLIW	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^  ScheduleDAGVLIW(MachineFunction &mf,$/;"	f	class:__anon84::ScheduleDAGVLIW
ScheduleDAGVLIW	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^class ScheduleDAGVLIW : public ScheduleDAGSDNodes {$/;"	c	namespace:__anon84	file:
ScheduleNode	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^void ScheduleDAGLinearize::ScheduleNode(SDNode *N) {$/;"	f	class:ScheduleDAGLinearize
ScheduleNodeBottomUp	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^void ScheduleDAGFast::ScheduleNodeBottomUp(SUnit *SU, unsigned CurCycle) {$/;"	f	class:ScheduleDAGFast
ScheduleNodeBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::ScheduleNodeBottomUp(SUnit *SU) {$/;"	f	class:ScheduleDAGRRList
ScheduleNodeTopDown	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::ScheduleNodeTopDown(SUnit *SU, unsigned CurCycle) {$/;"	f	class:SchedulePostRATDList
SchedulePostRATDList	CodeGen/PostRASchedulerList.cpp	/^  class SchedulePostRATDList : public ScheduleDAGInstrs {$/;"	c	namespace:__anon102	file:
SchedulePostRATDList	CodeGen/PostRASchedulerList.cpp	/^SchedulePostRATDList::SchedulePostRATDList($/;"	f	class:SchedulePostRATDList
SchedulingCost	Target/Hexagon/HexagonMachineScheduler.cpp	/^int ConvergingVLIWScheduler::SchedulingCost(ReadyQueue &Q, SUnit *SU,$/;"	f	class:ConvergingVLIWScheduler
Scope	Transforms/Scalar/EarlyCSE.cpp	/^    ScopedHTType::ScopeTy Scope;$/;"	m	class:__anon566::EarlyCSE::NodeScope	file:
ScopeInlinedAtIdx	VMCore/LLVMContextImpl.h	/^  DenseMap<std::pair<MDNode*, MDNode*>, int> ScopeInlinedAtIdx;$/;"	m	class:llvm::LLVMContextImpl
ScopeInlinedAtRecords	VMCore/LLVMContextImpl.h	/^  std::vector<std::pair<DebugRecVH, DebugRecVH> > ScopeInlinedAtRecords;$/;"	m	class:llvm::LLVMContextImpl
ScopeMap	CodeGen/MachineCSE.cpp	/^    DenseMap<MachineBasicBlock*, ScopeType*> ScopeMap;$/;"	m	class:__anon161::MachineCSE	file:
ScopeRecordIdx	VMCore/LLVMContextImpl.h	/^  DenseMap<MDNode*, int> ScopeRecordIdx;$/;"	m	class:llvm::LLVMContextImpl
ScopeRecords	VMCore/LLVMContextImpl.h	/^  std::vector<DebugRecVH> ScopeRecords;$/;"	m	class:llvm::LLVMContextImpl
ScopeType	CodeGen/MachineCSE.cpp	/^    typedef ScopedHTType::ScopeTy ScopeType;$/;"	t	class:__anon161::MachineCSE	file:
ScopeVariables	CodeGen/AsmPrinter/DwarfDebug.h	/^  DenseMap<LexicalScope *, SmallVector<DbgVariable *, 8> > ScopeVariables;$/;"	m	class:llvm::DwarfDebug
ScopedCommonHandle	Support/Windows/Windows.h	/^typedef ScopedHandle<CommonHandleTraits> ScopedCommonHandle;$/;"	t
ScopedCryptContext	Support/Windows/Windows.h	/^typedef ScopedHandle<CryptContextTraits> ScopedCryptContext;$/;"	t
ScopedFileHandle	Support/Windows/Windows.h	/^typedef ScopedHandle<FileHandleTraits>   ScopedFileHandle;$/;"	t
ScopedFindHandle	Support/Windows/Windows.h	/^typedef ScopedHandle<FindHandleTraits>   ScopedFindHandle;$/;"	t
ScopedHTType	CodeGen/MachineCSE.cpp	/^        MachineInstrExpressionTrait, AllocatorTy> ScopedHTType;$/;"	t	class:__anon161::MachineCSE	file:
ScopedHTType	Transforms/Scalar/EarlyCSE.cpp	/^                          AllocatorTy> ScopedHTType;$/;"	t	class:__anon566::EarlyCSE	file:
ScopedHandle	Support/Windows/Windows.h	/^  ScopedHandle()$/;"	f	class:ScopedHandle
ScopedHandle	Support/Windows/Windows.h	/^  explicit ScopedHandle(handle_type h)$/;"	f	class:ScopedHandle
ScopedHandle	Support/Windows/Windows.h	/^class ScopedHandle {$/;"	c
ScopedJobHandle	Support/Windows/Windows.h	/^typedef ScopedHandle<JobHandleTraits>    ScopedJobHandle;$/;"	t
Scopes	Transforms/Scalar/EarlyCSE.cpp	/^    NodeScope Scopes;$/;"	m	class:__anon566::EarlyCSE::StackNode	file:
ScoreboardHazardRecognizer	CodeGen/ScoreboardHazardRecognizer.cpp	/^ScoreboardHazardRecognizer(const InstrItineraryData *II,$/;"	f	class:ScoreboardHazardRecognizer
Search	Support/DeltaAlgorithm.cpp	/^bool DeltaAlgorithm::Search(const changeset_ty &Changes,$/;"	f	class:DeltaAlgorithm
SearchForAddressOfSpecialSymbol	Support/SearchForAddressOfSpecialSymbol.cpp	/^void *SearchForAddressOfSpecialSymbol(const char* symbolName) {$/;"	f	namespace:llvm
SearchForAddressOfSymbol	Support/DynamicLibrary.cpp	/^void* DynamicLibrary::SearchForAddressOfSymbol(const char *symbolName) {$/;"	f	class:DynamicLibrary
Section	MC/WinCOFFObjectWriter.cpp	/^  COFFSection     *Section;$/;"	m	class:__anon222::COFFSymbol	file:
Section	Target/ARM/ARMBuildAttrs.h	/^    Section                   = 2,$/;"	e	enum:ARMBuildAttrs::AttrType
SectionAttrDescriptors	MC/MCSectionMachO.cpp	/^} SectionAttrDescriptors[] = {$/;"	v	typeref:struct:__anon227	file:
SectionCPs	CodeGen/AsmPrinter/AsmPrinter.cpp	/^    SectionCPs(const MCSection *s, unsigned a) : S(s), Alignment(a) {}$/;"	f	struct:__anon65::SectionCPs
SectionCPs	CodeGen/AsmPrinter/AsmPrinter.cpp	/^  struct SectionCPs {$/;"	s	namespace:__anon65	file:
SectionEntry	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  SectionEntry(uint8_t *address, size_t size, uintptr_t stubOffset,$/;"	f	class:llvm::SectionEntry
SectionEntry	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^class SectionEntry {$/;"	c	namespace:llvm
SectionForGlobal	Target/TargetLoweringObjectFile.cpp	/^SectionForGlobal(const GlobalValue *GV, SectionKind Kind, Mangler *Mang,$/;"	f	class:TargetLoweringObjectFile
SectionID	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  unsigned  SectionID;$/;"	m	class:llvm::ObjRelocationInfo
SectionID	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  unsigned  SectionID;$/;"	m	class:llvm::RelocationValueRef
SectionID	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  unsigned SectionID;$/;"	m	class:llvm::RelocationEntry
SectionIndex	MC/ELFObjectWriter.cpp	/^      uint32_t SectionIndex;$/;"	m	struct:__anon225::ELFObjectWriter::ELFSymbolData	file:
SectionIndexMapTy	MC/ELFObjectWriter.cpp	/^    typedef DenseMap<const MCSectionELF*, uint32_t> SectionIndexMapTy;$/;"	t	class:__anon225::ELFObjectWriter	file:
SectionList	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  typedef SmallVector<SectionEntry, 64> SectionList;$/;"	t	class:llvm::RuntimeDyldImpl
SectionMap	CodeGen/AsmPrinter/DwarfDebug.h	/^  UniqueVector<const MCSection*> SectionMap;$/;"	m	class:llvm::DwarfDebug
SectionMap	MC/WinCOFFObjectWriter.cpp	/^  section_map SectionMap;$/;"	m	class:__anon222::WinCOFFObjectWriter	file:
SectionOffsetMapTy	MC/ELFObjectWriter.cpp	/^    typedef DenseMap<const MCSectionELF*, uint64_t> SectionOffsetMapTy;$/;"	t	class:__anon225::ELFObjectWriter	file:
SectionStart	MC/MCDwarf.cpp	/^    const MCSymbol *SectionStart;$/;"	m	class:__anon223::FrameEmitterImpl	file:
SectionStringTableIndex	MC/ELFObjectWriter.cpp	/^    DenseMap<const MCSection*, uint64_t> SectionStringTableIndex;$/;"	m	class:__anon225::ELFObjectWriter	file:
SectionTypeDescriptors	MC/MCSectionMachO.cpp	/^} SectionTypeDescriptors[MCSectionMachO::LAST_KNOWN_SECTION_TYPE+1] = {$/;"	v	typeref:struct:__anon226	file:
Sections	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  SectionList Sections;$/;"	m	class:llvm::RuntimeDyldImpl
Sections	MC/WinCOFFObjectWriter.cpp	/^  sections     Sections;$/;"	m	class:__anon222::WinCOFFObjectWriter	file:
Seen	CodeGen/LiveRangeCalc.h	/^  BitVector Seen;$/;"	m	class:llvm::LiveRangeCalc
SeenAllInterferences	CodeGen/LiveIntervalUnion.h	/^    bool SeenAllInterferences;$/;"	m	class:llvm::LiveIntervalUnion::Query
SeenBlocks	Analysis/LazyValueInfo.cpp	/^    DenseSet<AssertingVH<BasicBlock> > SeenBlocks;$/;"	m	class:__anon20::LazyValueInfoCache	file:
SeenFirstFunctionBody	Bitcode/Reader/BitcodeReader.h	/^  bool SeenFirstFunctionBody;$/;"	m	class:llvm::BitcodeReader
SeenIdent	MC/MCParser/ELFAsmParser.cpp	/^  bool SeenIdent;$/;"	m	class:__anon209::ELFAsmParser	file:
SeenUnknownBackEdge	CodeGen/ExecutionDepsFix.cpp	/^  bool SeenUnknownBackEdge;$/;"	m	class:__anon120::ExeDepsFix	file:
SeenUnspillableVReg	CodeGen/LiveIntervalUnion.h	/^    bool SeenUnspillableVReg;$/;"	m	class:llvm::LiveIntervalUnion::Query
SeenValueSymbolTable	Bitcode/Reader/BitcodeReader.h	/^  bool SeenValueSymbolTable;$/;"	m	class:llvm::BitcodeReader
SegOvrMask	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    SegOvrMask  = 3 << SegOvrShift,$/;"	e	enum:llvm::X86II::__anon350
SegOvrShift	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    SegOvrShift = LOCKShift + 1,$/;"	e	enum:llvm::X86II::__anon350
SegReg	Target/X86/AsmParser/X86AsmParser.cpp	/^      unsigned SegReg;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon341	file:
SegSize	DebugInfo/DWARFDebugArangeSet.h	/^    uint8_t SegSize;$/;"	m	struct:llvm::DWARFDebugArangeSet::Header
Segment	Target/X86/X86ISelDAGToDAG.cpp	/^    SDValue Segment;$/;"	m	struct:__anon371::X86ISelAddressMode	file:
SegmentIter	CodeGen/LiveIntervalUnion.h	/^  typedef LiveSegments::iterator SegmentIter;$/;"	t	class:llvm::LiveIntervalUnion
SegmentOverride	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^} SegmentOverride;$/;"	t	typeref:enum:__anon359
Segments	CodeGen/LiveIntervalUnion.h	/^  LiveSegments Segments;  \/\/ union of virtual reg segments$/;"	m	class:llvm::LiveIntervalUnion
Select	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::Select(SDNode *N) {$/;"	f	class:ARMDAGToDAGISel
Select	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SPUDAGToDAGISel::Select(SDNode *N) {$/;"	f	class:SPUDAGToDAGISel
Select	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::Select(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
Select	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^SDNode* MBlazeDAGToDAGISel::Select(SDNode *Node) {$/;"	f	class:MBlazeDAGToDAGISel
Select	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^SDNode *MSP430DAGToDAGISel::Select(SDNode *Node) {$/;"	f	class:MSP430DAGToDAGISel
Select	Target/Mips/MipsISelDAGToDAG.cpp	/^SDNode* MipsDAGToDAGISel::Select(SDNode *Node) {$/;"	f	class:MipsDAGToDAGISel
Select	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^SDNode* NVPTXDAGToDAGISel::Select(SDNode *N) {$/;"	f	class:NVPTXDAGToDAGISel
Select	Target/PowerPC/PPCISelDAGToDAG.cpp	/^SDNode *PPCDAGToDAGISel::Select(SDNode *N) {$/;"	f	class:PPCDAGToDAGISel
Select	Target/Sparc/SparcISelDAGToDAG.cpp	/^SDNode *SparcDAGToDAGISel::Select(SDNode *N) {$/;"	f	class:SparcDAGToDAGISel
Select	Target/X86/X86ISelDAGToDAG.cpp	/^SDNode *X86DAGToDAGISel::Select(SDNode *Node) {$/;"	f	class:X86DAGToDAGISel
Select	Target/XCore/XCoreISelDAGToDAG.cpp	/^SDNode *XCoreDAGToDAGISel::Select(SDNode *N) {$/;"	f	class:XCoreDAGToDAGISel
SelectABSOp	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectABSOp(SDNode *N){$/;"	f	class:ARMDAGToDAGISel
SelectADDRcpii	Target/XCore/XCoreISelDAGToDAG.cpp	/^bool XCoreDAGToDAGISel::SelectADDRcpii(SDValue Addr, SDValue &Base,$/;"	f	class:XCoreDAGToDAGISel
SelectADDRdpii	Target/XCore/XCoreISelDAGToDAG.cpp	/^bool XCoreDAGToDAGISel::SelectADDRdpii(SDValue Addr, SDValue &Base,$/;"	f	class:XCoreDAGToDAGISel
SelectADDRri	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectADDRri(SDValue& Addr, SDValue &Base,$/;"	f	class:HexagonDAGToDAGISel
SelectADDRri	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::SelectADDRri(SDNode *OpNode, SDValue Addr,$/;"	f	class:NVPTXDAGToDAGISel
SelectADDRri	Target/Sparc/SparcISelDAGToDAG.cpp	/^bool SparcDAGToDAGISel::SelectADDRri(SDValue Addr,$/;"	f	class:SparcDAGToDAGISel
SelectADDRri64	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::SelectADDRri64(SDNode *OpNode, SDValue Addr,$/;"	f	class:NVPTXDAGToDAGISel
SelectADDRriS11_0	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectADDRriS11_0(SDValue& Addr, SDValue &Base,$/;"	f	class:HexagonDAGToDAGISel
SelectADDRriS11_1	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectADDRriS11_1(SDValue& Addr, SDValue &Base,$/;"	f	class:HexagonDAGToDAGISel
SelectADDRriS11_2	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectADDRriS11_2(SDValue& Addr, SDValue &Base,$/;"	f	class:HexagonDAGToDAGISel
SelectADDRriS11_3	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectADDRriS11_3(SDValue& Addr, SDValue &Base,$/;"	f	class:HexagonDAGToDAGISel
SelectADDRriU6_0	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectADDRriU6_0(SDValue& Addr, SDValue &Base,$/;"	f	class:HexagonDAGToDAGISel
SelectADDRriU6_1	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectADDRriU6_1(SDValue& Addr, SDValue &Base,$/;"	f	class:HexagonDAGToDAGISel
SelectADDRriU6_2	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectADDRriU6_2(SDValue& Addr, SDValue &Base,$/;"	f	class:HexagonDAGToDAGISel
SelectADDRri_imp	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::SelectADDRri_imp(SDNode *OpNode, SDValue Addr,$/;"	f	class:NVPTXDAGToDAGISel
SelectADDRrr	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectADDRrr(SDValue &Addr, SDValue &R1,$/;"	f	class:HexagonDAGToDAGISel
SelectADDRrr	Target/Sparc/SparcISelDAGToDAG.cpp	/^bool SparcDAGToDAGISel::SelectADDRrr(SDValue Addr, SDValue &R1, SDValue &R2) {$/;"	f	class:SparcDAGToDAGISel
SelectADDRsi	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::SelectADDRsi(SDNode *OpNode, SDValue Addr,$/;"	f	class:NVPTXDAGToDAGISel
SelectADDRsi64	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::SelectADDRsi64(SDNode *OpNode, SDValue Addr,$/;"	f	class:NVPTXDAGToDAGISel
SelectADDRsi_imp	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::SelectADDRsi_imp(SDNode *OpNode, SDValue Addr,$/;"	f	class:NVPTXDAGToDAGISel
SelectADDRspii	Target/XCore/XCoreISelDAGToDAG.cpp	/^bool XCoreDAGToDAGISel::SelectADDRspii(SDValue Addr, SDValue &Base,$/;"	f	class:XCoreDAGToDAGISel
SelectAFormAddr	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SPUDAGToDAGISel::SelectAFormAddr(SDNode *Op, SDValue N, SDValue &Base,$/;"	f	class:SPUDAGToDAGISel
SelectARMCMOVImmOp	Target/ARM/ARMISelDAGToDAG.cpp	/^SelectARMCMOVImmOp(SDNode *N, SDValue FalseVal, SDValue TrueVal,$/;"	f	class:ARMDAGToDAGISel
SelectARMCMOVShiftOp	Target/ARM/ARMISelDAGToDAG.cpp	/^SelectARMCMOVShiftOp(SDNode *N, SDValue FalseVal, SDValue TrueVal,$/;"	f	class:ARMDAGToDAGISel
SelectARMIndexedLoad	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectARMIndexedLoad(SDNode *N) {$/;"	f	class:ARMDAGToDAGISel
SelectAdd	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectAdd(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectAddr	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectAddr(SDNode *Op, SDValue Addr,$/;"	f	class:HexagonDAGToDAGISel
SelectAddr	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^bool MSP430DAGToDAGISel::SelectAddr(SDValue N,$/;"	f	class:MSP430DAGToDAGISel
SelectAddr	Target/Mips/MipsISelDAGToDAG.cpp	/^SelectAddr(SDNode *Parent, SDValue Addr, SDValue &Base, SDValue &Offset) {$/;"	f	class:MipsDAGToDAGISel
SelectAddr	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::SelectAddr(SDNode *Parent, SDValue N, SDValue &Base,$/;"	f	class:X86DAGToDAGISel
SelectAddrIdx	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    bool SelectAddrIdx(SDValue N, SDValue &Base, SDValue &Index) {$/;"	f	class:__anon331::PPCDAGToDAGISel
SelectAddrIdxOffs	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    bool SelectAddrIdxOffs(SDValue N, SDValue &Out) const {$/;"	f	class:__anon331::PPCDAGToDAGISel
SelectAddrIdxOnly	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    bool SelectAddrIdxOnly(SDValue N, SDValue &Base, SDValue &Index) {$/;"	f	class:__anon331::PPCDAGToDAGISel
SelectAddrImm	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    bool SelectAddrImm(SDValue N, SDValue &Disp,$/;"	f	class:__anon331::PPCDAGToDAGISel
SelectAddrImmOffs	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    bool SelectAddrImmOffs(SDValue N, SDValue &Out) const {$/;"	f	class:__anon331::PPCDAGToDAGISel
SelectAddrImmShift	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    bool SelectAddrImmShift(SDValue N, SDValue &Disp, SDValue &Base) {$/;"	f	class:__anon331::PPCDAGToDAGISel
SelectAddrMode2	Target/ARM/ARMISelDAGToDAG.cpp	/^  bool SelectAddrMode2(SDValue N, SDValue &Base, SDValue &Offset,$/;"	f	class:__anon302::ARMDAGToDAGISel
SelectAddrMode2Base	Target/ARM/ARMISelDAGToDAG.cpp	/^  bool SelectAddrMode2Base(SDValue N, SDValue &Base, SDValue &Offset,$/;"	f	class:__anon302::ARMDAGToDAGISel
SelectAddrMode2OffsetImm	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrMode2OffsetImm(SDNode *Op, SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrMode2OffsetImmPre	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrMode2OffsetImmPre(SDNode *Op, SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrMode2OffsetReg	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrMode2OffsetReg(SDNode *Op, SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrMode2ShOp	Target/ARM/ARMISelDAGToDAG.cpp	/^  bool SelectAddrMode2ShOp(SDValue N, SDValue &Base, SDValue &Offset,$/;"	f	class:__anon302::ARMDAGToDAGISel
SelectAddrMode2Worker	Target/ARM/ARMISelDAGToDAG.cpp	/^AddrMode2Type ARMDAGToDAGISel::SelectAddrMode2Worker(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrMode3	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrMode3(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrMode3Offset	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrMode3Offset(SDNode *Op, SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrMode5	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrMode5(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrMode6	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrMode6(SDNode *Parent, SDValue N, SDValue &Addr,$/;"	f	class:ARMDAGToDAGISel
SelectAddrMode6Offset	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrMode6Offset(SDNode *Op, SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrModeImm12	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrModeImm12(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrModePC	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrModePC(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectAddrOffsetNone	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectAddrOffsetNone(SDValue N, SDValue &Base) {$/;"	f	class:ARMDAGToDAGISel
SelectAddrRegImm	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^SelectAddrRegImm(SDValue N, SDValue &Base, SDValue &Disp) {$/;"	f	class:MBlazeDAGToDAGISel
SelectAddrRegReg	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^SelectAddrRegReg(SDValue N, SDValue &Base, SDValue &Index) {$/;"	f	class:MBlazeDAGToDAGISel
SelectAddressRegImm	Target/PowerPC/PPCISelLowering.cpp	/^bool PPCTargetLowering::SelectAddressRegImm(SDValue N, SDValue &Disp,$/;"	f	class:PPCTargetLowering
SelectAddressRegImmShift	Target/PowerPC/PPCISelLowering.cpp	/^bool PPCTargetLowering::SelectAddressRegImmShift(SDValue N, SDValue &Disp,$/;"	f	class:PPCTargetLowering
SelectAddressRegReg	Target/PowerPC/PPCISelLowering.cpp	/^bool PPCTargetLowering::SelectAddressRegReg(SDValue N, SDValue &Base,$/;"	f	class:PPCTargetLowering
SelectAddressRegRegOnly	Target/PowerPC/PPCISelLowering.cpp	/^bool PPCTargetLowering::SelectAddressRegRegOnly(SDValue N, SDValue &Base,$/;"	f	class:PPCTargetLowering
SelectAllBasicBlocks	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^void SelectionDAGISel::SelectAllBasicBlocks(const Function &Fn) {$/;"	f	class:SelectionDAGISel
SelectAtomic64	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectAtomic64(SDNode *Node, unsigned Opc) {$/;"	f	class:ARMDAGToDAGISel
SelectAtomic64	Target/X86/X86ISelDAGToDAG.cpp	/^SDNode *X86DAGToDAGISel::SelectAtomic64(SDNode *Node, unsigned Opc) {$/;"	f	class:X86DAGToDAGISel
SelectAtomicLoadArith	Target/X86/X86ISelDAGToDAG.cpp	/^SDNode *X86DAGToDAGISel::SelectAtomicLoadArith(SDNode *Node, EVT NVT) {$/;"	f	class:X86DAGToDAGISel
SelectBRIND	Target/XCore/XCoreISelDAGToDAG.cpp	/^SDNode *XCoreDAGToDAGISel::SelectBRIND(SDNode *N) {$/;"	f	class:XCoreDAGToDAGISel
SelectBaseOffsetLoad	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectBaseOffsetLoad(LoadSDNode *LD, DebugLoc dl) {$/;"	f	class:HexagonDAGToDAGISel
SelectBaseOffsetStore	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectBaseOffsetStore(StoreSDNode *ST,$/;"	f	class:HexagonDAGToDAGISel
SelectBasicBlock	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^void SelectionDAGISel::SelectBasicBlock(BasicBlock::const_iterator Begin,$/;"	f	class:SelectionDAGISel
SelectBinaryFPOp	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectBinaryFPOp(const Instruction *I, unsigned ISDOpcode) {$/;"	f	class:ARMFastISel
SelectBinaryIntOp	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectBinaryIntOp(const Instruction *I, unsigned ISDOpcode) {$/;"	f	class:ARMFastISel
SelectBinaryOp	CodeGen/SelectionDAG/FastISel.cpp	/^bool FastISel::SelectBinaryOp(const User *I, unsigned ISDOpcode) {$/;"	f	class:FastISel
SelectBitCast	CodeGen/SelectionDAG/FastISel.cpp	/^bool FastISel::SelectBitCast(const User *I) {$/;"	f	class:FastISel
SelectBitfieldInsert	Target/PowerPC/PPCISelDAGToDAG.cpp	/^SDNode *PPCDAGToDAGISel::SelectBitfieldInsert(SDNode *N) {$/;"	f	class:PPCDAGToDAGISel
SelectBranch	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectBranch(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectCC	Target/PowerPC/PPCISelDAGToDAG.cpp	/^SDValue PPCDAGToDAGISel::SelectCC(SDValue LHS, SDValue RHS,$/;"	f	class:PPCDAGToDAGISel
SelectCMOVOp	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectCMOVOp(SDNode *N) {$/;"	f	class:ARMDAGToDAGISel
SelectCall	CodeGen/SelectionDAG/FastISel.cpp	/^bool FastISel::SelectCall(const User *I) {$/;"	f	class:FastISel
SelectCall	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectCall(const Instruction *I,$/;"	f	class:ARMFastISel
SelectCast	CodeGen/SelectionDAG/FastISel.cpp	/^bool FastISel::SelectCast(const User *I, unsigned Opcode) {$/;"	f	class:FastISel
SelectCmp	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectCmp(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectCodeCommon	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^SelectCodeCommon(SDNode *NodeToMatch, const unsigned char *MatcherTable,$/;"	f	class:SelectionDAGISel
SelectConcatVector	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectConcatVector(SDNode *N) {$/;"	f	class:ARMDAGToDAGISel
SelectConstant	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectConstant(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectConstantExpr	VMCore/ConstantsContext.h	/^  SelectConstantExpr(Constant *C1, Constant *C2, Constant *C3)$/;"	f	class:llvm::SelectConstantExpr
SelectConstantExpr	VMCore/ConstantsContext.h	/^class SelectConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
SelectConstantFP	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectConstantFP(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectDForm2Addr	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SPUDAGToDAGISel::SelectDForm2Addr(SDNode *Op, SDValue N, SDValue &Disp,$/;"	f	class:SPUDAGToDAGISel
SelectDFormAddr	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SPUDAGToDAGISel::SelectDFormAddr(SDNode *Op, SDValue N, SDValue &Base,$/;"	f	class:SPUDAGToDAGISel
SelectDirectAddr	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::SelectDirectAddr(SDValue N, SDValue &Address) {$/;"	f	class:NVPTXDAGToDAGISel
SelectDiv	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectDiv(const Instruction *I, bool isSigned) {$/;"	f	class:ARMFastISel
SelectExtractValue	CodeGen/SelectionDAG/FastISel.cpp	/^FastISel::SelectExtractValue(const User *U) {$/;"	f	class:FastISel
SelectFNeg	CodeGen/SelectionDAG/FastISel.cpp	/^FastISel::SelectFNeg(const User *I) {$/;"	f	class:FastISel
SelectFPExt	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectFPExt(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectFPToI	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectFPToI(const Instruction *I, bool isSigned) {$/;"	f	class:ARMFastISel
SelectFPTrunc	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectFPTrunc(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectGather	Target/X86/X86ISelDAGToDAG.cpp	/^SDNode *X86DAGToDAGISel::SelectGather(SDNode *Node, unsigned Opc) {$/;"	f	class:X86DAGToDAGISel
SelectGetElementPtr	CodeGen/SelectionDAG/FastISel.cpp	/^bool FastISel::SelectGetElementPtr(const User *I) {$/;"	f	class:FastISel
SelectI64Constant	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SDNode *SPUDAGToDAGISel::SelectI64Constant(SDNode *N, EVT OpVT,$/;"	f	class:SPUDAGToDAGISel
SelectI64Constant	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SDNode *SPUDAGToDAGISel::SelectI64Constant(uint64_t Value64, EVT OpVT,$/;"	f	class:SPUDAGToDAGISel
SelectIToFP	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectIToFP(const Instruction *I, bool isSigned) {$/;"	f	class:ARMFastISel
SelectImmShifterOperand	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectImmShifterOperand(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectIndexedBinOp	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^SDNode *MSP430DAGToDAGISel::SelectIndexedBinOp(SDNode *Op,$/;"	f	class:MSP430DAGToDAGISel
SelectIndexedLoad	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectIndexedLoad(LoadSDNode *LD, DebugLoc dl) {$/;"	f	class:HexagonDAGToDAGISel
SelectIndexedLoad	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^SDNode *MSP430DAGToDAGISel::SelectIndexedLoad(SDNode *N) {$/;"	f	class:MSP430DAGToDAGISel
SelectIndexedLoadSignExtend64	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectIndexedLoadSignExtend64(LoadSDNode *LD,$/;"	f	class:HexagonDAGToDAGISel
SelectIndexedLoadZeroExtend64	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectIndexedLoadZeroExtend64(LoadSDNode *LD,$/;"	f	class:HexagonDAGToDAGISel
SelectIndexedStore	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectIndexedStore(StoreSDNode *ST, DebugLoc dl) {$/;"	f	class:HexagonDAGToDAGISel
SelectIndirectBr	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectIndirectBr(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectInlineAsmMemoryOperand	Target/ARM/ARMISelDAGToDAG.cpp	/^SelectInlineAsmMemoryOperand(const SDValue &Op, char ConstraintCode,$/;"	f	class:ARMDAGToDAGISel
SelectInlineAsmMemoryOperand	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    virtual bool SelectInlineAsmMemoryOperand(const SDValue &Op,$/;"	f	class:__anon414::SPUDAGToDAGISel
SelectInlineAsmMemoryOperand	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SelectInlineAsmMemoryOperand(const SDValue &Op, char ConstraintCode,$/;"	f	class:HexagonDAGToDAGISel
SelectInlineAsmMemoryOperand	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^SelectInlineAsmMemoryOperand(const SDValue &Op, char ConstraintCode,$/;"	f	class:MSP430DAGToDAGISel
SelectInlineAsmMemoryOperand	Target/Mips/MipsISelDAGToDAG.cpp	/^SelectInlineAsmMemoryOperand(const SDValue &Op, char ConstraintCode,$/;"	f	class:MipsDAGToDAGISel
SelectInlineAsmMemoryOperand	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::SelectInlineAsmMemoryOperand(const SDValue &Op,$/;"	f	class:NVPTXDAGToDAGISel
SelectInlineAsmMemoryOperand	Target/PowerPC/PPCISelDAGToDAG.cpp	/^   virtual bool SelectInlineAsmMemoryOperand(const SDValue &Op,$/;"	f	class:__anon331::PPCDAGToDAGISel
SelectInlineAsmMemoryOperand	Target/Sparc/SparcISelDAGToDAG.cpp	/^SparcDAGToDAGISel::SelectInlineAsmMemoryOperand(const SDValue &Op,$/;"	f	class:SparcDAGToDAGISel
SelectInlineAsmMemoryOperand	Target/X86/X86ISelDAGToDAG.cpp	/^SelectInlineAsmMemoryOperand(const SDValue &Op, char ConstraintCode,$/;"	f	class:X86DAGToDAGISel
SelectInlineAsmMemoryOperands	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^SelectInlineAsmMemoryOperands(std::vector<SDValue> &Ops) {$/;"	f	class:SelectionDAGISel
SelectInstruction	CodeGen/SelectionDAG/FastISel.cpp	/^FastISel::SelectInstruction(const Instruction *I) {$/;"	f	class:FastISel
SelectIntExt	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectIntExt(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectIntrinsicCall	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectIntrinsicCall(const IntrinsicInst &I) {$/;"	f	class:ARMFastISel
SelectIntrinsicWOChain	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectIntrinsicWOChain(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectLEAAddr	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::SelectLEAAddr(SDValue N,$/;"	f	class:X86DAGToDAGISel
SelectLdStSOReg	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectLdStSOReg(SDValue N, SDValue &Base, SDValue &Offset,$/;"	f	class:ARMDAGToDAGISel
SelectLoad	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectLoad(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectLoad	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectLoad(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectLoad	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^SDNode* NVPTXDAGToDAGISel::SelectLoad(SDNode *N) {$/;"	f	class:NVPTXDAGToDAGISel
SelectMEMriS11_2	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^bool HexagonDAGToDAGISel::SelectMEMriS11_2(SDValue& Addr, SDValue &Base,$/;"	f	class:HexagonDAGToDAGISel
SelectMULT	Target/Mips/MipsISelDAGToDAG.cpp	/^MipsDAGToDAGISel::SelectMULT(SDNode *N, unsigned Opc, DebugLoc dl, EVT Ty,$/;"	f	class:MipsDAGToDAGISel
SelectMadd	Target/Mips/MipsISelLowering.cpp	/^static bool SelectMadd(SDNode *ADDENode, SelectionDAG *CurDAG) {$/;"	f	file:
SelectMsub	Target/Mips/MipsISelLowering.cpp	/^static bool SelectMsub(SDNode *SUBENode, SelectionDAG *CurDAG) {$/;"	f	file:
SelectMul	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectMul(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectNodeTo	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDNode *SelectionDAG::SelectNodeTo(SDNode *N, unsigned MachineOpc,$/;"	f	class:SelectionDAG
SelectOperator	CodeGen/SelectionDAG/FastISel.cpp	/^FastISel::SelectOperator(const User *I, unsigned Opcode) {$/;"	f	class:FastISel
SelectPatternFlavor	Transforms/InstCombine/InstCombine.h	/^enum SelectPatternFlavor {$/;"	g	namespace:llvm
SelectRegShifterOperand	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectRegShifterOperand(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectRem	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectRem(const Instruction *I, bool isSigned) {$/;"	f	class:ARMFastISel
SelectRet	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectRet(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectSETCC	Target/PowerPC/PPCISelDAGToDAG.cpp	/^SDNode *PPCDAGToDAGISel::SelectSETCC(SDNode *N) {$/;"	f	class:PPCDAGToDAGISel
SelectSHL	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectSHL(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectSHLi64	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SPUDAGToDAGISel::SelectSHLi64(SDNode *N, EVT OpVT) {$/;"	f	class:SPUDAGToDAGISel
SelectSRAi64	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SPUDAGToDAGISel::SelectSRAi64(SDNode *N, EVT OpVT) {$/;"	f	class:SPUDAGToDAGISel
SelectSRLi64	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SPUDAGToDAGISel::SelectSRLi64(SDNode *N, EVT OpVT) {$/;"	f	class:SPUDAGToDAGISel
SelectScalarSSELoad	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::SelectScalarSSELoad(SDNode *Root,$/;"	f	class:X86DAGToDAGISel
SelectSectionForGlobal	CodeGen/TargetLoweringObjectFileImpl.cpp	/^SelectSectionForGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:TargetLoweringObjectFileCOFF
SelectSectionForGlobal	CodeGen/TargetLoweringObjectFileImpl.cpp	/^SelectSectionForGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:TargetLoweringObjectFileELF
SelectSectionForGlobal	CodeGen/TargetLoweringObjectFileImpl.cpp	/^SelectSectionForGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:TargetLoweringObjectFileMachO
SelectSectionForGlobal	Target/Hexagon/HexagonTargetObjectFile.cpp	/^SelectSectionForGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:HexagonTargetObjectFile
SelectSectionForGlobal	Target/MBlaze/MBlazeTargetObjectFile.cpp	/^SelectSectionForGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:MBlazeTargetObjectFile
SelectSectionForGlobal	Target/Mips/MipsTargetObjectFile.cpp	/^SelectSectionForGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:MipsTargetObjectFile
SelectSectionForGlobal	Target/TargetLoweringObjectFile.cpp	/^TargetLoweringObjectFile::SelectSectionForGlobal(const GlobalValue *GV,$/;"	f	class:TargetLoweringObjectFile
SelectSelect	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectSelect(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectSelect	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectSelect(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectShift	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectShift(const Instruction *I,$/;"	f	class:ARMFastISel
SelectShiftImmShifterOperand	Target/ARM/ARMISelDAGToDAG.cpp	/^  bool SelectShiftImmShifterOperand(SDValue N, SDValue &A,$/;"	f	class:__anon302::ARMDAGToDAGISel
SelectShiftRegShifterOperand	Target/ARM/ARMISelDAGToDAG.cpp	/^  bool SelectShiftRegShifterOperand(SDValue N, SDValue &A,$/;"	f	class:__anon302::ARMDAGToDAGISel
SelectStore	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectStore(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectStore	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectStore(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectStore	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^SDNode* NVPTXDAGToDAGISel::SelectStore(SDNode *N) {$/;"	f	class:NVPTXDAGToDAGISel
SelectT2AddrModeImm12	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectT2AddrModeImm12(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectT2AddrModeImm8	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectT2AddrModeImm8(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectT2AddrModeImm8Offset	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectT2AddrModeImm8Offset(SDNode *Op, SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectT2AddrModeSoReg	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectT2AddrModeSoReg(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectT2CMOVImmOp	Target/ARM/ARMISelDAGToDAG.cpp	/^SelectT2CMOVImmOp(SDNode *N, SDValue FalseVal, SDValue TrueVal,$/;"	f	class:ARMDAGToDAGISel
SelectT2CMOVShiftOp	Target/ARM/ARMISelDAGToDAG.cpp	/^SelectT2CMOVShiftOp(SDNode *N, SDValue FalseVal, SDValue TrueVal,$/;"	f	class:ARMDAGToDAGISel
SelectT2IndexedLoad	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectT2IndexedLoad(SDNode *N) {$/;"	f	class:ARMDAGToDAGISel
SelectT2ShifterOperandReg	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectT2ShifterOperandReg(SDValue N, SDValue &BaseReg,$/;"	f	class:ARMDAGToDAGISel
SelectTLSADDRAddr	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::SelectTLSADDRAddr(SDValue N, SDValue &Base,$/;"	f	class:X86DAGToDAGISel
SelectThumbAddrModeImm5S	Target/ARM/ARMISelDAGToDAG.cpp	/^ARMDAGToDAGISel::SelectThumbAddrModeImm5S(SDValue N, unsigned Scale,$/;"	f	class:ARMDAGToDAGISel
SelectThumbAddrModeImm5S1	Target/ARM/ARMISelDAGToDAG.cpp	/^ARMDAGToDAGISel::SelectThumbAddrModeImm5S1(SDValue N, SDValue &Base,$/;"	f	class:ARMDAGToDAGISel
SelectThumbAddrModeImm5S2	Target/ARM/ARMISelDAGToDAG.cpp	/^ARMDAGToDAGISel::SelectThumbAddrModeImm5S2(SDValue N, SDValue &Base,$/;"	f	class:ARMDAGToDAGISel
SelectThumbAddrModeImm5S4	Target/ARM/ARMISelDAGToDAG.cpp	/^ARMDAGToDAGISel::SelectThumbAddrModeImm5S4(SDValue N, SDValue &Base,$/;"	f	class:ARMDAGToDAGISel
SelectThumbAddrModeRI	Target/ARM/ARMISelDAGToDAG.cpp	/^ARMDAGToDAGISel::SelectThumbAddrModeRI(SDValue N, SDValue &Base,$/;"	f	class:ARMDAGToDAGISel
SelectThumbAddrModeRI5S1	Target/ARM/ARMISelDAGToDAG.cpp	/^ARMDAGToDAGISel::SelectThumbAddrModeRI5S1(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectThumbAddrModeRI5S2	Target/ARM/ARMISelDAGToDAG.cpp	/^ARMDAGToDAGISel::SelectThumbAddrModeRI5S2(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectThumbAddrModeRI5S4	Target/ARM/ARMISelDAGToDAG.cpp	/^ARMDAGToDAGISel::SelectThumbAddrModeRI5S4(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectThumbAddrModeRR	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectThumbAddrModeRR(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectThumbAddrModeSP	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::SelectThumbAddrModeSP(SDValue N,$/;"	f	class:ARMDAGToDAGISel
SelectTrunc	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::SelectTrunc(const Instruction *I) {$/;"	f	class:ARMFastISel
SelectTruncate	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectTruncate(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
SelectV6T2BitfieldExtractOp	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectV6T2BitfieldExtractOp(SDNode *N,$/;"	f	class:ARMDAGToDAGISel
SelectVLD	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectVLD(SDNode *N, bool isUpdating, unsigned NumVecs,$/;"	f	class:ARMDAGToDAGISel
SelectVLDDup	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectVLDDup(SDNode *N, bool isUpdating,$/;"	f	class:ARMDAGToDAGISel
SelectVLDSTLane	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectVLDSTLane(SDNode *N, bool IsLoad,$/;"	f	class:ARMDAGToDAGISel
SelectVST	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectVST(SDNode *N, bool isUpdating, unsigned NumVecs,$/;"	f	class:ARMDAGToDAGISel
SelectVTBL	Target/ARM/ARMISelDAGToDAG.cpp	/^SDNode *ARMDAGToDAGISel::SelectVTBL(SDNode *N, bool IsExt, unsigned NumVecs,$/;"	f	class:ARMDAGToDAGISel
SelectXFormAddr	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SPUDAGToDAGISel::SelectXFormAddr(SDNode *Op, SDValue N, SDValue &Base,$/;"	f	class:SPUDAGToDAGISel
SelectZeroExtend	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^SDNode *HexagonDAGToDAGISel::SelectZeroExtend(SDNode *N) {$/;"	f	class:HexagonDAGToDAGISel
Select_CC	Target/MBlaze/MBlazeISelLowering.h	/^      Select_CC,$/;"	e	enum:llvm::MBlazeISD::NodeType
Select_INLINEASM	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^SDNode *SelectionDAGISel::Select_INLINEASM(SDNode *N) {$/;"	f	class:SelectionDAGISel
Select_UNDEF	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^SDNode *SelectionDAGISel::Select_UNDEF(SDNode *N) {$/;"	f	class:SelectionDAGISel
SelectionDAG	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::SelectionDAG(const TargetMachine &tm, CodeGenOpt::Level OL)$/;"	f	class:SelectionDAG
SelectionDAGBuilder	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  SelectionDAGBuilder(SelectionDAG &dag, FunctionLoweringInfo &funcinfo,$/;"	f	class:llvm::SelectionDAGBuilder
SelectionDAGBuilder	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^class SelectionDAGBuilder {$/;"	c	namespace:llvm
SelectionDAGISel	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^SelectionDAGISel::SelectionDAGISel(const TargetMachine &tm,$/;"	f	class:SelectionDAGISel
SelectionDAGLegalize	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SelectionDAGLegalize::SelectionDAGLegalize(SelectionDAG &dag)$/;"	f	class:SelectionDAGLegalize
SelectionDAGLegalize	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^class SelectionDAGLegalize : public SelectionDAG::DAGUpdateListener {$/;"	c	namespace:__anon67	file:
Sentinel	Support/YAMLParser.cpp	/^  mutable Token Sentinel;$/;"	m	struct:llvm::ilist_sentinel_traits	file:
SeparateNestedLoop	Transforms/Utils/LoopSimplify.cpp	/^Loop *LoopSimplify::SeparateNestedLoop(Loop *L, LPPassManager &LPM,$/;"	f	class:LoopSimplify
Sequence	CodeGen/PostRASchedulerList.cpp	/^    std::vector<SUnit*> Sequence;$/;"	m	class:__anon102::SchedulePostRATDList	file:
Sequence	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  std::vector<SDNode*> Sequence;$/;"	m	class:__anon87::ScheduleDAGLinearize	file:
Sequence	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^    std::vector<SUnit*> Sequence;$/;"	m	class:llvm::ScheduleDAGSDNodes
Sequence	DebugInfo/DWARFDebugLine.h	/^    Sequence() { reset(); }$/;"	f	struct:llvm::DWARFDebugLine::Sequence
Sequence	DebugInfo/DWARFDebugLine.h	/^  struct Sequence {$/;"	s	class:llvm::DWARFDebugLine
Sequence	Transforms/Scalar/ObjCARC.cpp	/^  enum Sequence {$/;"	g	namespace:__anon504	file:
SequenceIter	DebugInfo/DWARFDebugLine.h	/^    typedef SequenceVector::const_iterator SequenceIter;$/;"	t	struct:llvm::DWARFDebugLine::LineTable
SequenceNum	CodeGen/SelectionDAG/DAGCombiner.cpp	/^  unsigned SequenceNum;$/;"	m	struct:MemOpLink	file:
SequenceVector	DebugInfo/DWARFDebugLine.h	/^    typedef std::vector<Sequence> SequenceVector;$/;"	t	struct:llvm::DWARFDebugLine::LineTable
Sequences	DebugInfo/DWARFDebugLine.h	/^    SequenceVector Sequences;$/;"	m	struct:llvm::DWARFDebugLine::LineTable
Set	Transforms/Scalar/SROA.cpp	/^    const SetType &Set;$/;"	m	class:__anon563::IsAllocaInSet	file:
SetAsEntry	Transforms/Scalar/ObjCARC.cpp	/^    void SetAsEntry() { TopDownPathCount = 1; }$/;"	f	class:__anon507::BBState
SetAsExit	Transforms/Scalar/ObjCARC.cpp	/^    void SetAsExit()  { BottomUpPathCount = 1; }$/;"	f	class:__anon507::BBState
SetBinding	MC/MCELF.cpp	/^void MCELF::SetBinding(MCSymbolData &SD, unsigned Binding) {$/;"	f	class:llvm::MCELF
SetBufferAndMode	Support/raw_ostream.cpp	/^void raw_ostream::SetBufferAndMode(char *BufferStart, size_t Size,$/;"	f	class:raw_ostream
SetBuffered	Support/raw_ostream.cpp	/^void raw_ostream::SetBuffered() {$/;"	f	class:raw_ostream
SetEndOfBlockSizeMarker	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void SetEndOfBlockSizeMarker() {$/;"	f	struct:__anon189::FreeRangeHeader
SetExpandedFloat	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::SetExpandedFloat(SDValue Op, SDValue Lo,$/;"	f	class:DAGTypeLegalizer
SetExpandedInteger	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::SetExpandedInteger(SDValue Op, SDValue Lo,$/;"	f	class:DAGTypeLegalizer
SetImpliedBits	MC/SubtargetFeature.cpp	/^void SetImpliedBits(uint64_t &Bits, const SubtargetFeatureKV *FeatureEntry,$/;"	f	file:
SetInstName	AsmParser/LLParser.cpp	/^bool LLParser::PerFunctionState::SetInstName(int NameID,$/;"	f	class:LLParser::PerFunctionState
SetJITMode	Target/CellSPU/SPUSubtarget.cpp	/^void SPUSubtarget::SetJITMode() {$/;"	f	class:SPUSubtarget
SetJITMode	Target/PowerPC/PPCSubtarget.cpp	/^void PPCSubtarget::SetJITMode() {$/;"	f	class:PPCSubtarget
SetJmpFn	Transforms/Utils/LowerInvoke.cpp	/^    Constant *SetJmpFn, *LongJmpFn, *StackSaveFn, *StackRestoreFn;$/;"	m	class:__anon474::LowerInvoke	file:
SetKnownPositiveRefCount	Transforms/Scalar/ObjCARC.cpp	/^    void SetKnownPositiveRefCount() {$/;"	f	class:__anon506::PtrState
SetPromotedInteger	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::SetPromotedInteger(SDValue Op, SDValue Result) {$/;"	f	class:DAGTypeLegalizer
SetRegister	Target/X86/X86InstrInfo.cpp	/^    MachineInstr *SetRegister(MachineInstr *I, unsigned *TLSBaseAddrReg) {$/;"	f	struct:__anon376::LDTLSCleanup
SetScalarizedVector	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::SetScalarizedVector(SDValue Op, SDValue Result) {$/;"	f	class:DAGTypeLegalizer
SetSection	MC/MCELFStreamer.cpp	/^  void SetSection(StringRef Section, unsigned Type, unsigned Flags,$/;"	f	class:__anon215::MCELFStreamer	file:
SetSection	MC/WinCOFFStreamer.cpp	/^  void SetSection(StringRef Section,$/;"	f	class:__anon218::WinCOFFStreamer	file:
SetSectionBSS	MC/WinCOFFStreamer.cpp	/^  void SetSectionBSS() {$/;"	f	class:__anon218::WinCOFFStreamer	file:
SetSectionBss	MC/MCELFStreamer.cpp	/^  void SetSectionBss() {$/;"	f	class:__anon215::MCELFStreamer	file:
SetSectionData	MC/MCELFStreamer.cpp	/^  void SetSectionData() {$/;"	f	class:__anon215::MCELFStreamer	file:
SetSectionData	MC/WinCOFFStreamer.cpp	/^  void SetSectionData() {$/;"	f	class:__anon218::WinCOFFStreamer	file:
SetSectionText	MC/MCELFStreamer.cpp	/^  void SetSectionText() {$/;"	f	class:__anon215::MCELFStreamer	file:
SetSectionText	MC/WinCOFFStreamer.cpp	/^  void SetSectionText() {$/;"	f	class:__anon218::WinCOFFStreamer	file:
SetSeq	Transforms/Scalar/ObjCARC.cpp	/^    void SetSeq(Sequence NewSeq) {$/;"	f	class:__anon506::PtrState
SetSoftenedFloat	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::SetSoftenedFloat(SDValue Op, SDValue Result) {$/;"	f	class:DAGTypeLegalizer
SetSplitVector	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::SetSplitVector(SDValue Op, SDValue Lo,$/;"	f	class:DAGTypeLegalizer
SetType	MC/MCELF.cpp	/^void MCELF::SetType(MCSymbolData &SD, unsigned Type) {$/;"	f	class:llvm::MCELF
SetType	Transforms/Scalar/SROA.cpp	/^    typedef SmallPtrSet<AllocaInst *, 4> SetType;$/;"	t	class:__anon563::IsAllocaInSet	file:
SetValue	ExecutionEngine/Interpreter/Execution.cpp	/^static void SetValue(Value *V, GenericValue Val, ExecutionContext &SF) {$/;"	f	file:
SetValue	TableGen/TGParser.cpp	/^bool TGParser::SetValue(Record *CurRec, SMLoc Loc, Init *ValName,$/;"	f	class:TGParser
SetValue	TableGen/TGParser.h	/^  bool SetValue(Record *TheRec, SMLoc Loc, const std::string &ValName,$/;"	f	class:llvm::TGParser
SetVersionPrinter	Support/CommandLine.cpp	/^void cl::SetVersionPrinter(void (*func)()) {$/;"	f	class:cl
SetVisibility	MC/MCELF.cpp	/^void MCELF::SetVisibility(MCSymbolData &SD, unsigned Visibility) {$/;"	f	class:llvm::MCELF
SetWidenedVector	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::SetWidenedVector(SDValue Op, SDValue Result) {$/;"	f	class:DAGTypeLegalizer
SethiUllmanNumbers	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  std::vector<unsigned> SethiUllmanNumbers;$/;"	m	class:__anon77::RegReductionPQBase	file:
SetupCost	Transforms/Scalar/LoopStrengthReduce.cpp	/^  unsigned SetupCost;$/;"	m	class:__anon515::Cost	file:
SetupEntryBlockForSjLj	Target/ARM/ARMISelLowering.cpp	/^SetupEntryBlockForSjLj(MachineInstr *MI, MachineBasicBlock *MBB,$/;"	f	class:ARMTargetLowering
SetupMachineFunction	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::SetupMachineFunction(MachineFunction &MF) {$/;"	f	class:AsmPrinter
SextConstantI16	Target/X86/X86ISelDAGToDAG.cpp	/^  SextConstantI16,$/;"	e	enum:AtomicSz	file:
SextConstantI32	Target/X86/X86ISelDAGToDAG.cpp	/^  SextConstantI32,$/;"	e	enum:AtomicSz	file:
SextConstantI64	Target/X86/X86ISelDAGToDAG.cpp	/^  SextConstantI64,$/;"	e	enum:AtomicSz	file:
ShadowStackGC	CodeGen/ShadowStackGC.cpp	/^  class ShadowStackGC : public GCStrategy {$/;"	c	namespace:__anon148	file:
ShadowStackGC	CodeGen/ShadowStackGC.cpp	/^ShadowStackGC::ShadowStackGC() : Head(0), StackEntryTy(0) {$/;"	f	class:ShadowStackGC
Shared	TableGen/Record.cpp	/^DagRecTy DagRecTy::Shared;$/;"	m	class:DagRecTy	file:
Shared	TableGen/Record.cpp	/^IntRecTy IntRecTy::Shared;$/;"	m	class:IntRecTy	file:
Shared	TableGen/Record.cpp	/^StringRecTy StringRecTy::Shared;$/;"	m	class:StringRecTy	file:
SharedTypeIds	CodeGen/AsmPrinter/DwarfException.cpp	/^unsigned DwarfException::SharedTypeIds(const LandingPadInfo *L,$/;"	f	class:DwarfException
SharedTypeIds	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^static unsigned SharedTypeIds(const LandingPadInfo *L,$/;"	f	file:
Shift	CodeGen/ScheduleDAG.cpp	/^void ScheduleDAGTopologicalSort::Shift(BitVector& Visited, int LowerBound,$/;"	f	class:ScheduleDAGTopologicalSort
Shift	Transforms/InstCombine/InstCombinePHI.cpp	/^  unsigned Shift;     \/\/ The amount shifted.$/;"	m	struct:__anon603::LoweredPHIRecord	file:
Shift	Transforms/InstCombine/InstCombinePHI.cpp	/^  unsigned Shift;     \/\/ The amount shifted.$/;"	m	struct:__anon603::PHIUsageRecord	file:
ShiftImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned ShiftImm;        \/\/ shift for OffsetReg.$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon275	file:
ShiftImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned ShiftImm;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon276	file:
ShiftImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned ShiftImm;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon278	file:
ShiftImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned ShiftImm;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon279	file:
ShiftImmShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ShiftImmShift  = 5,$/;"	e	enum:llvm::ARMII::__anon288
ShiftOpc	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  enum ShiftOpc {$/;"	g	namespace:llvm::ARM_AM
ShiftReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned ShiftReg;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon278	file:
ShiftShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ShiftShift     = 7,$/;"	e	enum:llvm::ARMII::__anon288
ShiftTy	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      ARM_AM::ShiftOpc ShiftTy;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon276	file:
ShiftTy	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      ARM_AM::ShiftOpc ShiftTy;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon278	file:
ShiftTy	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      ARM_AM::ShiftOpc ShiftTy;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon279	file:
ShiftType	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      ARM_AM::ShiftOpc ShiftType; \/\/ Shift type for OffsetReg$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon275	file:
ShiftTypeShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ShiftTypeShift = 4,$/;"	e	enum:llvm::ARMII::__anon288
ShifterImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } ShifterImm;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon277	file:
ShouldAttemptScalarRepl	Transforms/Scalar/ScalarReplAggregates.cpp	/^bool SROA::ShouldAttemptScalarRepl(AllocaInst *AI) {$/;"	f	class:SROA
ShouldBreakUpSubtract	Transforms/Scalar/Reassociate.cpp	/^static bool ShouldBreakUpSubtract(Instruction *Sub) {$/;"	f	file:
ShouldBuildLookupTable	Transforms/Utils/SimplifyCFG.cpp	/^static bool ShouldBuildLookupTable(SwitchInst *SI,$/;"	f	file:
ShouldChangeType	Transforms/InstCombine/InstructionCombining.cpp	/^bool InstCombiner::ShouldChangeType(Type *From, Type *To) const {$/;"	f	class:InstCombiner
ShouldEmitAsBranches	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::ShouldEmitAsBranches(const std::vector<CaseBlock> &Cases){$/;"	f	class:SelectionDAGBuilder
ShouldHackArguments	Transforms/IPO/DeadArgumentElimination.cpp	/^    virtual bool ShouldHackArguments() const { return false; }$/;"	f	class:__anon600::DAE
ShouldHackArguments	Transforms/IPO/DeadArgumentElimination.cpp	/^    virtual bool ShouldHackArguments() const { return true; }$/;"	f	struct:__anon601::DAH
ShouldInstrumentGlobal	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::ShouldInstrumentGlobal(GlobalVariable *G) {$/;"	f	class:AddressSanitizer
ShouldOmitSectionDirective	MC/MCSectionCOFF.cpp	/^bool MCSectionCOFF::ShouldOmitSectionDirective(StringRef Name,$/;"	f	class:MCSectionCOFF
ShouldOmitSectionDirective	MC/MCSectionELF.cpp	/^bool MCSectionELF::ShouldOmitSectionDirective(StringRef Name,$/;"	f	class:MCSectionELF
ShouldOptimizeCast	Transforms/InstCombine/InstCombineCasts.cpp	/^bool InstCombiner::ShouldOptimizeCast(Instruction::CastOps opc, const Value *V,$/;"	f	class:InstCombiner
ShouldPrintAfterPass	VMCore/PassManager.cpp	/^static bool ShouldPrintAfterPass(const PassInfo *PI) {$/;"	f	namespace:llvm
ShouldPrintBeforeOrAfterPass	VMCore/PassManager.cpp	/^static bool ShouldPrintBeforeOrAfterPass(const PassInfo *PI,$/;"	f	namespace:llvm
ShouldPrintBeforePass	VMCore/PassManager.cpp	/^static bool ShouldPrintBeforePass(const PassInfo *PI) {$/;"	f	namespace:llvm
ShouldShrinkFPConstant	Target/X86/X86ISelLowering.h	/^    virtual bool ShouldShrinkFPConstant(EVT VT) const {$/;"	f	class:llvm::X86TargetLowering
ShouldXformToMOVHLPS	Target/X86/X86ISelLowering.cpp	/^static bool ShouldXformToMOVHLPS(ArrayRef<int> Mask, EVT VT) {$/;"	f	file:
ShouldXformToMOVLP	Target/X86/X86ISelLowering.cpp	/^static bool ShouldXformToMOVLP(SDNode *V1, SDNode *V2,$/;"	f	file:
ShowHidden	Support/CommandLine.cpp	/^  const bool ShowHidden;$/;"	m	class:__anon247::HelpPrinter	file:
ShrinkDemandedConstant	CodeGen/SelectionDAG/TargetLowering.cpp	/^bool TargetLowering::TargetLoweringOpt::ShrinkDemandedConstant(SDValue Op,$/;"	f	class:TargetLowering::TargetLoweringOpt
ShrinkDemandedConstant	Transforms/InstCombine/InstCombineSimplifyDemanded.cpp	/^static bool ShrinkDemandedConstant(Instruction *I, unsigned OpNo, $/;"	f	file:
ShrinkDemandedOp	CodeGen/SelectionDAG/TargetLowering.cpp	/^TargetLowering::TargetLoweringOpt::ShrinkDemandedOp(SDValue Op,$/;"	f	class:TargetLowering::TargetLoweringOpt
ShrinkLoadReplaceStoreWithStore	CodeGen/SelectionDAG/DAGCombiner.cpp	/^ShrinkLoadReplaceStoreWithStore(const std::pair<unsigned, unsigned> &MaskInfo,$/;"	f	file:
ShrinkWrapDebugLevel	CodeGen/ShrinkWrapping.cpp	/^enum ShrinkWrapDebugLevel {$/;"	g	file:
ShrinkWrapThisFunction	CodeGen/PrologEpilogInserter.h	/^    bool ShrinkWrapThisFunction;$/;"	m	class:llvm::PEI
ShstrtabIndex	MC/ELFObjectWriter.cpp	/^    unsigned ShstrtabIndex;$/;"	m	class:__anon225::ELFObjectWriter	file:
ShuffleVectorConstantExpr	VMCore/ConstantsContext.h	/^  ShuffleVectorConstantExpr(Constant *C1, Constant *C2, Constant *C3)$/;"	f	class:llvm::ShuffleVectorConstantExpr
ShuffleVectorConstantExpr	VMCore/ConstantsContext.h	/^class ShuffleVectorConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
ShuffleVectorInst	VMCore/Instructions.cpp	/^ShuffleVectorInst::ShuffleVectorInst(Value *V1, Value *V2, Value *Mask,$/;"	f	class:ShuffleVectorInst
ShuffleWithNarrowerEltType	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^SelectionDAGLegalize::ShuffleWithNarrowerEltType(EVT NVT, EVT VT,  DebugLoc dl,$/;"	f	class:SelectionDAGLegalize
SibValueInfo	CodeGen/InlineSpiller.cpp	/^    SibValueInfo(unsigned Reg, VNInfo *VNI)$/;"	f	struct:__anon155::InlineSpiller::SibValueInfo
SibValueInfo	CodeGen/InlineSpiller.cpp	/^  struct SibValueInfo {$/;"	s	class:__anon155::InlineSpiller	file:
SibValueMap	CodeGen/InlineSpiller.cpp	/^  typedef DenseMap<VNInfo*, SibValueInfo> SibValueMap;$/;"	t	class:__anon155::InlineSpiller	file:
SibValues	CodeGen/InlineSpiller.cpp	/^  SibValueMap SibValues;$/;"	m	class:__anon155::InlineSpiller	file:
SiblingIdx	DebugInfo/DWARFDebugInfoEntry.h	/^  uint32_t SiblingIdx;$/;"	m	class:llvm::DWARFDebugInfoEntryMinimal
SignBitIsZero	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SelectionDAG::SignBitIsZero(SDValue Op, unsigned Depth) const {$/;"	f	class:SelectionDAG
Signals	Support/CrashRecoveryContext.cpp	/^static const int Signals[] = { SIGABRT, SIGBUS, SIGFPE, SIGILL, SIGSEGV, SIGTRAP };$/;"	v	file:
Signed	Target/NVPTX/NVPTX.h	/^  Signed,$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::FromType
SignedOp	Transforms/Utils/BypassSlowDivision.cpp	/^    bool SignedOp;$/;"	m	struct:__anon477::DivOpInfo	file:
SimpleCaptureTracker	Analysis/CaptureTracking.cpp	/^    explicit SimpleCaptureTracker(bool ReturnCaptures)$/;"	f	struct:__anon10::SimpleCaptureTracker
SimpleCaptureTracker	Analysis/CaptureTracking.cpp	/^  struct SimpleCaptureTracker : public CaptureTracker {$/;"	s	namespace:__anon10	file:
SimpleConstants	Transforms/IPO/GlobalOpt.cpp	/^  SmallPtrSet<Constant*, 8> SimpleConstants;$/;"	m	class:__anon591::Evaluator	file:
SimpleInliner	Transforms/IPO/InlineSimple.cpp	/^    SimpleInliner() : Inliner(ID) {$/;"	f	class:__anon595::SimpleInliner
SimpleInliner	Transforms/IPO/InlineSimple.cpp	/^    SimpleInliner(int Threshold) : Inliner(ID, Threshold,$/;"	f	class:__anon595::SimpleInliner
SimpleInliner	Transforms/IPO/InlineSimple.cpp	/^  class SimpleInliner : public Inliner {$/;"	c	namespace:__anon595	file:
SimpleKey	Support/YAMLParser.cpp	/^struct SimpleKey {$/;"	s	namespace:__anon244	file:
SimpleKeys	Support/YAMLParser.cpp	/^  SmallVector<SimpleKey, 4> SimpleKeys;$/;"	m	class:llvm::yaml::Scanner	file:
SimpleMove	Target/NVPTX/NVPTX.h	/^enum SimpleMove {$/;"	g	namespace:llvm::NVPTX
SimpleMoveMap	Target/NVPTX/VectorElementize.cpp	/^  llvm::DenseMap<unsigned, bool> SimpleMoveMap;$/;"	m	class:__anon316::VectorElementize	file:
SimpleMoveMask	Target/NVPTX/NVPTX.h	/^  SimpleMoveMask = 0x10,$/;"	e	enum:llvm::NVPTX::SimpleMove
SimpleMoveShift	Target/NVPTX/NVPTX.h	/^  SimpleMoveShift = 4$/;"	e	enum:llvm::NVPTX::SimpleMove
SimpleVTArray	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static ManagedStatic<EVTArray> SimpleVTArray;$/;"	v	file:
SimpleVal	Transforms/Scalar/GVN.cpp	/^    SimpleVal,  \/\/ A simple offsetted value that is accessed.$/;"	e	enum:__anon538::AvailableValueInBlock::ValType	file:
SimpleValue	Transforms/Scalar/EarlyCSE.cpp	/^    SimpleValue(Instruction *I) : Inst(I) {$/;"	f	struct:__anon564::SimpleValue
SimpleValue	Transforms/Scalar/EarlyCSE.cpp	/^  struct SimpleValue {$/;"	s	namespace:__anon564	file:
SimplifiedValues	Analysis/InlineCost.cpp	/^  DenseMap<Value *, Constant *> SimplifiedValues;$/;"	m	class:__anon28::CallAnalyzer	file:
Simplifier	Transforms/InstCombine/InstCombine.h	/^  LibCallSimplifier *Simplifier;$/;"	m	class:llvm::InstCombiner
SimplifyAShrInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyAShrInst(Value *Op0, Value *Op1, bool isExact,$/;"	f	class:llvm
SimplifyAShrInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyAShrInst(Value *Op0, Value *Op1, bool isExact,$/;"	f	file:
SimplifyAddInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyAddInst(Value *Op0, Value *Op1, bool isNSW, bool isNUW,$/;"	f	class:llvm
SimplifyAddInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyAddInst(Value *Op0, Value *Op1, bool isNSW, bool isNUW,$/;"	f	file:
SimplifyAddOperands	Analysis/ScalarEvolutionExpander.cpp	/^static void SimplifyAddOperands(SmallVectorImpl<const SCEV *> &Ops,$/;"	f	file:
SimplifyAndExtend	Transforms/Scalar/IndVarSimplify.cpp	/^void IndVarSimplify::SimplifyAndExtend(Loop *L,$/;"	f	class:IndVarSimplify
SimplifyAndInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyAndInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifyAndInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyAndInst(Value *Op0, Value *Op1, const Query &Q,$/;"	f	file:
SimplifyAssociativeBinOp	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyAssociativeBinOp(unsigned Opc, Value *LHS, Value *RHS,$/;"	f	file:
SimplifyAssociativeOrCommutative	Transforms/InstCombine/InstructionCombining.cpp	/^bool InstCombiner::SimplifyAssociativeOrCommutative(BinaryOperator &I) {$/;"	f	class:InstCombiner
SimplifyBinOp	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyBinOp(unsigned Opcode, Value *LHS, Value *RHS,$/;"	f	class:llvm
SimplifyBinOp	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyBinOp(unsigned Opcode, Value *LHS, Value *RHS,$/;"	f	file:
SimplifyBinOpWithSameOpcodeHands	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::SimplifyBinOpWithSameOpcodeHands(SDNode *N) {$/;"	f	class:DAGCombiner
SimplifyBranchOnICmpChain	Transforms/Utils/SimplifyCFG.cpp	/^static bool SimplifyBranchOnICmpChain(BranchInst *BI, const DataLayout *TD,$/;"	f	file:
SimplifyCFG	Transforms/Utils/SimplifyCFG.cpp	/^bool llvm::SimplifyCFG(BasicBlock *BB, const DataLayout *TD) {$/;"	f	class:llvm
SimplifyCFGOpt	Transforms/Utils/SimplifyCFG.cpp	/^  explicit SimplifyCFGOpt(const DataLayout *td) : TD(td) {}$/;"	f	class:__anon478::SimplifyCFGOpt
SimplifyCFGOpt	Transforms/Utils/SimplifyCFG.cpp	/^class SimplifyCFGOpt {$/;"	c	namespace:__anon478	file:
SimplifyCallInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyCallInst(CallInst *CI, const Query &) {$/;"	f	file:
SimplifyCmpInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyCmpInst(unsigned Predicate, Value *LHS, Value *RHS,$/;"	f	class:llvm
SimplifyCmpInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyCmpInst(unsigned Predicate, Value *LHS, Value *RHS,$/;"	f	file:
SimplifyCode	Transforms/Scalar/LoopUnswitch.cpp	/^void LoopUnswitch::SimplifyCode(std::vector<Instruction*> &Worklist, Loop *L) {$/;"	f	class:LoopUnswitch
SimplifyCondBranch	Transforms/Utils/SimplifyCFG.cpp	/^bool SimplifyCFGOpt::SimplifyCondBranch(BranchInst *BI, IRBuilder<> &Builder) {$/;"	f	class:SimplifyCFGOpt
SimplifyCondBranchToCondBranch	Transforms/Utils/SimplifyCFG.cpp	/^static bool SimplifyCondBranchToCondBranch(BranchInst *PBI, BranchInst *BI) {$/;"	f	file:
SimplifyCondBranchToTwoReturns	Transforms/Utils/SimplifyCFG.cpp	/^static bool SimplifyCondBranchToTwoReturns(BranchInst *BI,$/;"	f	file:
SimplifyDemandedBits	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    bool SimplifyDemandedBits(SDValue Op) {$/;"	f	class:__anon68::DAGCombiner	file:
SimplifyDemandedBits	CodeGen/SelectionDAG/DAGCombiner.cpp	/^bool DAGCombiner::SimplifyDemandedBits(SDValue Op, const APInt &Demanded) {$/;"	f	class:DAGCombiner
SimplifyDemandedBits	CodeGen/SelectionDAG/TargetLowering.cpp	/^bool TargetLowering::SimplifyDemandedBits(SDValue Op,$/;"	f	class:TargetLowering
SimplifyDemandedBits	Transforms/InstCombine/InstCombineSimplifyDemanded.cpp	/^bool InstCombiner::SimplifyDemandedBits(Use &U, APInt DemandedMask, $/;"	f	class:InstCombiner
SimplifyDemandedInstructionBits	Transforms/InstCombine/InstCombineSimplifyDemanded.cpp	/^bool InstCombiner::SimplifyDemandedInstructionBits(Instruction &Inst) {$/;"	f	class:InstCombiner
SimplifyDemandedUseBits	Transforms/InstCombine/InstCombineSimplifyDemanded.cpp	/^Value *InstCombiner::SimplifyDemandedUseBits(Value *V, APInt DemandedMask,$/;"	f	class:InstCombiner
SimplifyDemandedVectorElts	Transforms/InstCombine/InstCombineSimplifyDemanded.cpp	/^Value *InstCombiner::SimplifyDemandedVectorElts(Value *V, APInt DemandedElts,$/;"	f	class:InstCombiner
SimplifyDiv	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyDiv(Instruction::BinaryOps Opcode, Value *Op0, Value *Op1,$/;"	f	file:
SimplifyDivRemOfSelect	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^bool InstCombiner::SimplifyDivRemOfSelect(BinaryOperator &I) {$/;"	f	class:InstCombiner
SimplifyEqualityComparisonWithOnlyPredecessor	Transforms/Utils/SimplifyCFG.cpp	/^SimplifyEqualityComparisonWithOnlyPredecessor(TerminatorInst *TI,$/;"	f	class:SimplifyCFGOpt
SimplifyFCmpInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyFCmpInst(unsigned Predicate, Value *LHS, Value *RHS,$/;"	f	class:llvm
SimplifyFCmpInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyFCmpInst(unsigned Predicate, Value *LHS, Value *RHS,$/;"	f	file:
SimplifyFDivInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyFDivInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifyFDivInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyFDivInst(Value *Op0, Value *Op1, const Query &Q,$/;"	f	file:
SimplifyFRemInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyFRemInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifyFRemInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyFRemInst(Value *Op0, Value *Op1, const Query &,$/;"	f	file:
SimplifyFunction	Transforms/IPO/PruneEH.cpp	/^bool PruneEH::SimplifyFunction(Function *F) {$/;"	f	class:PruneEH
SimplifyGEPInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyGEPInst(ArrayRef<Value *> Ops, const DataLayout *TD,$/;"	f	class:llvm
SimplifyGEPInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyGEPInst(ArrayRef<Value *> Ops, const Query &Q, unsigned) {$/;"	f	file:
SimplifyICmpInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyICmpInst(unsigned Predicate, Value *LHS, Value *RHS,$/;"	f	class:llvm
SimplifyICmpInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyICmpInst(unsigned Predicate, Value *LHS, Value *RHS,$/;"	f	file:
SimplifyICmpOperands	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::SimplifyICmpOperands(ICmpInst::Predicate &Pred,$/;"	f	class:ScalarEvolution
SimplifyIndirectBr	Transforms/Utils/SimplifyCFG.cpp	/^bool SimplifyCFGOpt::SimplifyIndirectBr(IndirectBrInst *IBI) {$/;"	f	class:SimplifyCFGOpt
SimplifyIndirectBrOnSelect	Transforms/Utils/SimplifyCFG.cpp	/^static bool SimplifyIndirectBrOnSelect(IndirectBrInst *IBI, SelectInst *SI) {$/;"	f	file:
SimplifyIndvar	Transforms/Utils/SimplifyIndVar.cpp	/^    SimplifyIndvar(Loop *Loop, ScalarEvolution *SE, LPPassManager *LPM,$/;"	f	class:__anon463::SimplifyIndvar
SimplifyIndvar	Transforms/Utils/SimplifyIndVar.cpp	/^  class SimplifyIndvar {$/;"	c	namespace:__anon463	file:
SimplifyInsertValueInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyInsertValueInst(Value *Agg, Value *Val,$/;"	f	class:llvm
SimplifyInsertValueInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyInsertValueInst(Value *Agg, Value *Val,$/;"	f	file:
SimplifyInstruction	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyInstruction(Instruction *I, const DataLayout *TD,$/;"	f	class:llvm
SimplifyInstructionsInBlock	Transforms/Utils/Local.cpp	/^bool llvm::SimplifyInstructionsInBlock(BasicBlock *BB, const DataLayout *TD,$/;"	f	class:llvm
SimplifyLShrInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyLShrInst(Value *Op0, Value *Op1, bool isExact,$/;"	f	class:llvm
SimplifyLShrInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyLShrInst(Value *Op0, Value *Op1, bool isExact,$/;"	f	file:
SimplifyLibCalls	Transforms/Scalar/SimplifyLibCalls.cpp	/^    SimplifyLibCalls() : FunctionPass(ID), StpCpy(false), StpCpyChk(true),$/;"	f	class:__anon546::SimplifyLibCalls
SimplifyLibCalls	Transforms/Scalar/SimplifyLibCalls.cpp	/^  class SimplifyLibCalls : public FunctionPass {$/;"	c	namespace:__anon546	file:
SimplifyMemSet	Transforms/InstCombine/InstCombineCalls.cpp	/^Instruction *InstCombiner::SimplifyMemSet(MemSetInst *MI) {$/;"	f	class:InstCombiner
SimplifyMemTransfer	Transforms/InstCombine/InstCombineCalls.cpp	/^Instruction *InstCombiner::SimplifyMemTransfer(MemIntrinsic *MI) {$/;"	f	class:InstCombiner
SimplifyMulInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyMulInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifyMulInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyMulInst(Value *Op0, Value *Op1, const Query &Q,$/;"	f	file:
SimplifyNodeWithTwoResults	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::SimplifyNodeWithTwoResults(SDNode *N, unsigned LoOp,$/;"	f	class:DAGCombiner
SimplifyOrInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyOrInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifyOrInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyOrInst(Value *Op0, Value *Op1, const Query &Q,$/;"	f	file:
SimplifyPHINode	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyPHINode(PHINode *PN, const Query &Q) {$/;"	f	file:
SimplifyPartiallyRedundantLoad	Transforms/Scalar/JumpThreading.cpp	/^bool JumpThreading::SimplifyPartiallyRedundantLoad(LoadInst *LI) {$/;"	f	class:JumpThreading
SimplifyRem	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyRem(Instruction::BinaryOps Opcode, Value *Op0, Value *Op1,$/;"	f	file:
SimplifyResume	Transforms/Utils/SimplifyCFG.cpp	/^bool SimplifyCFGOpt::SimplifyResume(ResumeInst *RI, IRBuilder<> &Builder) {$/;"	f	class:SimplifyCFGOpt
SimplifyReturn	Transforms/Utils/SimplifyCFG.cpp	/^bool SimplifyCFGOpt::SimplifyReturn(ReturnInst *RI, IRBuilder<> &Builder) {$/;"	f	class:SimplifyCFGOpt
SimplifySDivInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifySDivInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifySDivInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifySDivInst(Value *Op0, Value *Op1, const Query &Q,$/;"	f	file:
SimplifySRemInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifySRemInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifySRemInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifySRemInst(Value *Op0, Value *Op1, const Query &Q,$/;"	f	file:
SimplifySelect	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::SimplifySelect(DebugLoc DL, SDValue N0,$/;"	f	class:DAGCombiner
SimplifySelectCC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::SimplifySelectCC(DebugLoc DL, SDValue N0, SDValue N1,$/;"	f	class:DAGCombiner
SimplifySelectInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifySelectInst(Value *Cond, Value *TrueVal, Value *FalseVal,$/;"	f	class:llvm
SimplifySelectInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifySelectInst(Value *CondVal, Value *TrueVal,$/;"	f	file:
SimplifySelectOps	CodeGen/SelectionDAG/DAGCombiner.cpp	/^bool DAGCombiner::SimplifySelectOps(SDNode *TheSelect, SDValue LHS,$/;"	f	class:DAGCombiner
SimplifySetCC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::SimplifySetCC(EVT VT, SDValue N0,$/;"	f	class:DAGCombiner
SimplifySetCC	CodeGen/SelectionDAG/TargetLowering.cpp	/^TargetLowering::SimplifySetCC(EVT VT, SDValue N0, SDValue N1,$/;"	f	class:TargetLowering
SimplifyShift	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyShift(unsigned Opcode, Value *Op0, Value *Op1,$/;"	f	file:
SimplifyShlInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyShlInst(Value *Op0, Value *Op1, bool isNSW, bool isNUW,$/;"	f	class:llvm
SimplifyShlInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyShlInst(Value *Op0, Value *Op1, bool isNSW, bool isNUW,$/;"	f	file:
SimplifyShortImmForm	Target/X86/X86MCInstLower.cpp	/^static void SimplifyShortImmForm(MCInst &Inst, unsigned Opcode) {$/;"	f	file:
SimplifyShortMoveForm	Target/X86/X86MCInstLower.cpp	/^static void SimplifyShortMoveForm(X86AsmPrinter &Printer, MCInst &Inst,$/;"	f	file:
SimplifyStoreAtEndOfBlock	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^bool InstCombiner::SimplifyStoreAtEndOfBlock(StoreInst &SI) {$/;"	f	class:InstCombiner
SimplifySubInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifySubInst(Value *Op0, Value *Op1, bool isNSW, bool isNUW,$/;"	f	class:llvm
SimplifySubInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifySubInst(Value *Op0, Value *Op1, bool isNSW, bool isNUW,$/;"	f	file:
SimplifySwitch	Transforms/Utils/SimplifyCFG.cpp	/^bool SimplifyCFGOpt::SimplifySwitch(SwitchInst *SI, IRBuilder<> &Builder) {$/;"	f	class:SimplifyCFGOpt
SimplifySwitchOnSelect	Transforms/Utils/SimplifyCFG.cpp	/^static bool SimplifySwitchOnSelect(SwitchInst *SI, SelectInst *Select) {$/;"	f	file:
SimplifyTerminatorOnSelect	Transforms/Utils/SimplifyCFG.cpp	/^static bool SimplifyTerminatorOnSelect(TerminatorInst *OldTerm, Value *Cond,$/;"	f	file:
SimplifyTruncInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyTruncInst(Value *Op, Type *Ty, const DataLayout *TD,$/;"	f	class:llvm
SimplifyTruncInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyTruncInst(Value *Op, Type *Ty, const Query &Q, unsigned) {$/;"	f	file:
SimplifyUDivInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyUDivInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifyUDivInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyUDivInst(Value *Op0, Value *Op1, const Query &Q,$/;"	f	file:
SimplifyURemInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyURemInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifyURemInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyURemInst(Value *Op0, Value *Op1, const Query &Q,$/;"	f	file:
SimplifyUncondBranch	Transforms/Utils/SimplifyCFG.cpp	/^bool SimplifyCFGOpt::SimplifyUncondBranch(BranchInst *BI, IRBuilder<> &Builder){$/;"	f	class:SimplifyCFGOpt
SimplifyUnreachable	Transforms/Utils/SimplifyCFG.cpp	/^bool SimplifyCFGOpt::SimplifyUnreachable(UnreachableInst *UI) {$/;"	f	class:SimplifyCFGOpt
SimplifyUsingDistributiveLaws	Transforms/InstCombine/InstructionCombining.cpp	/^Value *InstCombiner::SimplifyUsingDistributiveLaws(BinaryOperator &I) {$/;"	f	class:InstCombiner
SimplifyVBinOp	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::SimplifyVBinOp(SDNode *N) {$/;"	f	class:DAGCombiner
SimplifyVUnaryOp	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::SimplifyVUnaryOp(SDNode *N) {$/;"	f	class:DAGCombiner
SimplifyWithOpReplaced	Transforms/InstCombine/InstCombineSelect.cpp	/^static Value *SimplifyWithOpReplaced(Value *V, Value *Op, Value *RepOp,$/;"	f	file:
SimplifyXorInst	Analysis/InstructionSimplify.cpp	/^Value *llvm::SimplifyXorInst(Value *Op0, Value *Op1, const DataLayout *TD,$/;"	f	class:llvm
SimplifyXorInst	Analysis/InstructionSimplify.cpp	/^static Value *SimplifyXorInst(Value *Op0, Value *Op1, const Query &Q,$/;"	f	file:
SingleBlockLoopVectorizer	Transforms/Vectorize/LoopVectorize.cpp	/^  SingleBlockLoopVectorizer(Loop *Orig, ScalarEvolution *Se, LoopInfo *Li,$/;"	f	class:__anon605::SingleBlockLoopVectorizer
SingleBlockLoopVectorizer	Transforms/Vectorize/LoopVectorize.cpp	/^class SingleBlockLoopVectorizer {$/;"	c	namespace:__anon605	file:
SingleCritical	CodeGen/MachineScheduler.cpp	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure };$/;"	e	enum:__anon126::ConvergingScheduler::CandResult	file:
SingleCritical	Target/Hexagon/HexagonMachineScheduler.h	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure,$/;"	e	enum:llvm::ConvergingVLIWScheduler::CandResult
SingleExcess	CodeGen/MachineScheduler.cpp	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure };$/;"	e	enum:__anon126::ConvergingScheduler::CandResult	file:
SingleExcess	Target/Hexagon/HexagonMachineScheduler.h	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure,$/;"	e	enum:llvm::ConvergingVLIWScheduler::CandResult
SingleLoopExtractor	Transforms/IPO/LoopExtractor.cpp	/^    SingleLoopExtractor() : LoopExtractor(1) {}$/;"	f	struct:__anon581::SingleLoopExtractor
SingleLoopExtractor	Transforms/IPO/LoopExtractor.cpp	/^  struct SingleLoopExtractor : public LoopExtractor {$/;"	s	namespace:__anon581	file:
SingleMax	CodeGen/MachineScheduler.cpp	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure };$/;"	e	enum:__anon126::ConvergingScheduler::CandResult	file:
SingleMax	Target/Hexagon/HexagonMachineScheduler.h	/^    NoCand, NodeOrder, SingleExcess, SingleCritical, SingleMax, MultiPressure,$/;"	e	enum:llvm::ConvergingVLIWScheduler::CandResult
SingleSpc	Target/ARM/ARMExpandPseudoInsts.cpp	/^    SingleSpc,$/;"	e	enum:__anon312::NEONRegSpacing	file:
SingleValue	Transforms/Utils/SimplifyCFG.cpp	/^    Constant *SingleValue;$/;"	m	class:__anon480::SwitchLookupTable	file:
SingleValueKind	Transforms/Utils/SimplifyCFG.cpp	/^      SingleValueKind,$/;"	e	enum:__anon480::SwitchLookupTable::__anon481	file:
Sink3AddrInstruction	CodeGen/TwoAddressInstructionPass.cpp	/^bool TwoAddressInstructionPass::Sink3AddrInstruction(MachineBasicBlock *MBB,$/;"	f	class:TwoAddressInstructionPass
SinkInstruction	CodeGen/MachineSink.cpp	/^bool MachineSinking::SinkInstruction(MachineInstr *MI, bool &SawStore) {$/;"	f	class:MachineSinking
SinkInstruction	Transforms/Scalar/Sink.cpp	/^bool Sinking::SinkInstruction(Instruction *Inst,$/;"	f	class:Sinking
SinkRegion	Transforms/Scalar/LICM.cpp	/^void LICM::SinkRegion(DomTreeNode *N) {$/;"	f	class:LICM
SinkThenElseCodeToEnd	Transforms/Utils/SimplifyCFG.cpp	/^static bool SinkThenElseCodeToEnd(BranchInst *BI1) {$/;"	f	file:
SinkUnusedInvariants	Transforms/Scalar/IndVarSimplify.cpp	/^void IndVarSimplify::SinkUnusedInvariants(Loop *L) {$/;"	f	class:IndVarSimplify
Sinking	Transforms/Scalar/Sink.cpp	/^    Sinking() : FunctionPass(ID) {$/;"	f	class:__anon556::Sinking
Sinking	Transforms/Scalar/Sink.cpp	/^  class Sinking : public FunctionPass {$/;"	c	namespace:__anon556	file:
Size	CodeGen/AsmPrinter/DIE.h	/^    unsigned Size;                \/\/ Size in bytes excluding size header.$/;"	m	class:llvm::DIEBlock
Size	CodeGen/AsmPrinter/DIE.h	/^    unsigned Size;$/;"	m	class:llvm::DIE
Size	CodeGen/LiveIntervalUnion.h	/^    unsigned Size;$/;"	m	class:llvm::LiveIntervalUnion::Array
Size	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  size_t Size;$/;"	m	class:llvm::SectionEntry
Size	MC/MCDisassembler/Disassembler.cpp	/^  uint64_t Size;$/;"	m	class:__anon207::DisasmMemoryObject	file:
Size	MC/MCELFStreamer.cpp	/^    uint64_t Size;$/;"	m	struct:__anon215::MCELFStreamer::LocalCommon	file:
Size	MC/MCParser/AsmParser.cpp	/^  unsigned Size;$/;"	m	struct:__anon213::AsmRewrite	file:
Size	Object/Archive.cpp	/^  char Size[10]; \/\/\/< Size of data, not including header or padding.$/;"	m	struct:__anon228::ArchiveMemberHeader	file:
Size	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned Size;$/;"	m	struct:__anon310::ARMConstantIslands::BasicBlockInfo	file:
Size	Target/Mips/MipsAnalyzeImmediate.h	/^    unsigned Size;$/;"	m	class:llvm::MipsAnalyzeImmediate
Size	Target/Mips/MipsLongBranch.cpp	/^    uint64_t Size, Address;$/;"	m	struct:__anon437::MBBInfo	file:
Size	Target/X86/AsmParser/X86AsmParser.cpp	/^      unsigned Size;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon341	file:
Size2Bytes	Target/MSP430/MSP430InstrInfo.h	/^    Size2Bytes  = 2 << SizeShift,$/;"	e	enum:llvm::MSP430II::__anon398
Size4Bytes	Target/MSP430/MSP430InstrInfo.h	/^    Size4Bytes  = 3 << SizeShift,$/;"	e	enum:llvm::MSP430II::__anon398
Size6Bytes	Target/MSP430/MSP430InstrInfo.h	/^    Size6Bytes  = 4 << SizeShift$/;"	e	enum:llvm::MSP430II::__anon398
SizeEstimate	ExecutionEngine/JIT/JITEmitter.cpp	/^    uintptr_t SizeEstimate;$/;"	m	class:__anon182::JITEmitter	file:
SizeEstimation	Transforms/Scalar/LoopUnswitch.cpp	/^      unsigned SizeEstimation;$/;"	m	struct:__anon494::LUAnalysisCache::LoopProperties	file:
SizeMask	Target/MSP430/MSP430InstrInfo.h	/^    SizeMask    = 7 << SizeShift,$/;"	e	enum:llvm::MSP430II::__anon398
SizeOf	CodeGen/AsmPrinter/DIE.cpp	/^unsigned DIEBlock::SizeOf(AsmPrinter *AP, unsigned Form) const {$/;"	f	class:DIEBlock
SizeOf	CodeGen/AsmPrinter/DIE.cpp	/^unsigned DIEDelta::SizeOf(AsmPrinter *AP, unsigned Form) const {$/;"	f	class:DIEDelta
SizeOf	CodeGen/AsmPrinter/DIE.cpp	/^unsigned DIEInteger::SizeOf(AsmPrinter *AP, unsigned Form) const {$/;"	f	class:DIEInteger
SizeOf	CodeGen/AsmPrinter/DIE.cpp	/^unsigned DIELabel::SizeOf(AsmPrinter *AP, unsigned Form) const {$/;"	f	class:DIELabel
SizeOf	CodeGen/AsmPrinter/DIE.h	/^    virtual unsigned SizeOf(AsmPrinter *AP, unsigned Form) const {$/;"	f	class:llvm::DIEEntry
SizeShift	Target/MSP430/MSP430InstrInfo.h	/^    SizeShift   = 2,$/;"	e	enum:llvm::MSP430II::__anon398
SizeSpecial	Target/MSP430/MSP430InstrInfo.h	/^    SizeSpecial = 1 << SizeShift,$/;"	e	enum:llvm::MSP430II::__anon398
SizeUnknown	Target/MSP430/MSP430InstrInfo.h	/^    SizeUnknown = 0 << SizeShift,$/;"	e	enum:llvm::MSP430II::__anon398
SjLjEHPrepare	CodeGen/SjLjEHPrepare.cpp	/^    explicit SjLjEHPrepare(const TargetLowering *tli = NULL)$/;"	f	class:__anon123::SjLjEHPrepare
SjLjEHPrepare	CodeGen/SjLjEHPrepare.cpp	/^  class SjLjEHPrepare : public FunctionPass {$/;"	c	namespace:__anon123	file:
SkipBCPLComment	TableGen/TGLexer.cpp	/^void TGLexer::SkipBCPLComment() {$/;"	f	class:TGLexer
SkipCComment	TableGen/TGLexer.cpp	/^bool TGLexer::SkipCComment() {$/;"	f	class:TGLexer
SkipExtension	Target/ARM/ARMISelLowering.cpp	/^static SDValue SkipExtension(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
SkipIgnoredIntegerSuffix	MC/MCParser/AsmLexer.cpp	/^static void SkipIgnoredIntegerSuffix(const char *&CurPtr) {$/;"	f	file:
SkipLineComment	AsmParser/LLLexer.cpp	/^void LLLexer::SkipLineComment() {$/;"	f	class:LLLexer
SkipPHIsAndLabels	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::SkipPHIsAndLabels(MachineBasicBlock::iterator I) {$/;"	f	class:MachineBasicBlock
SkipWhileFunc	Support/YAMLParser.cpp	/^  typedef StringRef::iterator (Scanner::*SkipWhileFunc)(StringRef::iterator);$/;"	t	class:llvm::yaml::Scanner::StringRef	file:
SkippedInstrs	CodeGen/RegAllocFast.cpp	/^    SmallPtrSet<const MCInstrDesc*, 4> SkippedInstrs;$/;"	m	class:__anon140::RAFast	file:
SliceUpIllegalIntegerPHI	Transforms/InstCombine/InstCombinePHI.cpp	/^Instruction *InstCombiner::SliceUpIllegalIntegerPHI(PHINode &FirstPhi) {$/;"	f	class:InstCombiner
SlotSize	Target/X86/X86RegisterInfo.h	/^  unsigned SlotSize;$/;"	m	class:llvm::X86RegisterInfo
SlotSizeSorter	CodeGen/StackColoring.cpp	/^    SlotSizeSorter(MachineFrameInfo *mfi) : MFI(mfi) { }$/;"	f	struct:__anon113::StackColoring::SlotSizeSorter
SlotSizeSorter	CodeGen/StackColoring.cpp	/^  struct SlotSizeSorter {$/;"	s	class:__anon113::StackColoring	file:
SlotTracker	VMCore/AsmWriter.cpp	/^SlotTracker::SlotTracker(const Function *F)$/;"	f	class:SlotTracker
SlotTracker	VMCore/AsmWriter.cpp	/^SlotTracker::SlotTracker(const Module *M)$/;"	f	class:SlotTracker
SlotTracker	VMCore/AsmWriter.cpp	/^class SlotTracker {$/;"	c	namespace:__anon612	file:
SlowFPBrcc	Target/ARM/ARMSubtarget.h	/^  bool SlowFPBrcc;$/;"	m	class:llvm::ARMSubtarget
SlowFPVMLx	Target/ARM/ARMSubtarget.h	/^  bool SlowFPVMLx;$/;"	m	class:llvm::ARMSubtarget
SmVersion	Target/NVPTX/NVPTXSubtarget.h	/^  unsigned int SmVersion;$/;"	m	class:llvm::NVPTXSubtarget
SmallBSSSection	Target/Hexagon/HexagonTargetObjectFile.h	/^    const MCSectionELF *SmallBSSSection;$/;"	m	class:llvm::HexagonTargetObjectFile
SmallBSSSection	Target/MBlaze/MBlazeTargetObjectFile.h	/^    const MCSection *SmallBSSSection;$/;"	m	class:llvm::MBlazeTargetObjectFile
SmallBSSSection	Target/Mips/MipsTargetObjectFile.h	/^    const MCSection *SmallBSSSection;$/;"	m	class:llvm::MipsTargetObjectFile
SmallDataSection	Target/Hexagon/HexagonTargetObjectFile.h	/^    const MCSectionELF *SmallDataSection;$/;"	m	class:llvm::HexagonTargetObjectFile
SmallDataSection	Target/MBlaze/MBlazeTargetObjectFile.h	/^    const MCSection *SmallDataSection;$/;"	m	class:llvm::MBlazeTargetObjectFile
SmallDataSection	Target/Mips/MipsTargetObjectFile.h	/^    const MCSection *SmallDataSection;$/;"	m	class:llvm::MipsTargetObjectFile
SmallPtrSetImpl	Support/SmallPtrSet.cpp	/^SmallPtrSetImpl::SmallPtrSetImpl(const void **SmallStorage,$/;"	f	class:SmallPtrSetImpl
SndParam	Analysis/MemoryBuiltins.cpp	/^  signed char FstParam, SndParam;$/;"	m	struct:AllocFnsTy	file:
SnippetCopies	CodeGen/InlineSpiller.cpp	/^  SmallPtrSet<MachineInstr*, 8> SnippetCopies;$/;"	m	class:__anon155::InlineSpiller	file:
SoRotImmShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    SoRotImmShift  = 8,$/;"	e	enum:llvm::ARMII::__anon288
SoftenFloatOp_BITCAST	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatOp_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatOp_BR_CC	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatOp_BR_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatOp_FP32_TO_FP16	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatOp_FP32_TO_FP16(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatOp_FP_ROUND	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatOp_FP_ROUND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatOp_FP_TO_SINT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatOp_FP_TO_SINT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatOp_FP_TO_UINT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatOp_FP_TO_UINT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatOp_SELECT_CC	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatOp_SELECT_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatOp_SETCC	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatOp_SETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatOp_STORE	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatOp_STORE(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatOperand	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^bool DAGTypeLegalizer::SoftenFloatOperand(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_BITCAST	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_BUILD_PAIR	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_BUILD_PAIR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_ConstantFP	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_ConstantFP(ConstantFPSDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_EXTRACT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_EXTRACT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FABS	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FABS(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FADD	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FADD(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FCEIL	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FCEIL(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FCOPYSIGN	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FCOPYSIGN(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FCOS	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FCOS(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FDIV	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FDIV(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FEXP	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FEXP(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FEXP2	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FEXP2(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FFLOOR	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FFLOOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FLOG	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FLOG(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FLOG10	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FLOG10(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FLOG2	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FLOG2(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FMA	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FMA(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FMUL	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FMUL(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FNEARBYINT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FNEARBYINT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FNEG	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FNEG(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FP16_TO_FP32	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FP16_TO_FP32(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FPOW	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FPOW(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FPOWI	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FPOWI(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FP_EXTEND	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FP_EXTEND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FP_ROUND	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FP_ROUND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FREM	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FREM(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FRINT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FRINT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FSIN	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FSIN(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FSQRT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FSQRT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FSUB	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FSUB(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_FTRUNC	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_FTRUNC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_LOAD	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_LOAD(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_MERGE_VALUES	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_MERGE_VALUES(SDNode *N,$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_SELECT	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_SELECT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_SELECT_CC	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_SELECT_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_UNDEF	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_UNDEF(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_VAARG	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_VAARG(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatRes_XINT_TO_FP	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^SDValue DAGTypeLegalizer::SoftenFloatRes_XINT_TO_FP(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SoftenFloatResult	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::SoftenFloatResult(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
SoftenSetCCOperands	CodeGen/SelectionDAG/LegalizeFloatTypes.cpp	/^void DAGTypeLegalizer::SoftenSetCCOperands(SDValue &NewLHS, SDValue &NewRHS,$/;"	f	class:DAGTypeLegalizer
SoftenedFloats	CodeGen/SelectionDAG/LegalizeTypes.h	/^  DenseMap<SDValue, SDValue> SoftenedFloats;$/;"	m	class:llvm::DAGTypeLegalizer
SoloMask	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    SoloMask = 0x1,$/;"	e	enum:llvm::HexagonII::__anon399
SoloPos	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    SoloPos  = 5,$/;"	e	enum:llvm::HexagonII::__anon399
Solve	Analysis/SparsePropagation.cpp	/^void SparseSolver::Solve(Function &F) {$/;"	f	class:SparseSolver
Solve	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::Solve(SmallVectorImpl<const Formula *> &Solution) const {$/;"	f	class:LSRInstance
Solve	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::Solve() {$/;"	f	class:SCCPSolver
SolveLinEquationWithOverflow	Analysis/ScalarEvolution.cpp	/^static const SCEV *SolveLinEquationWithOverflow(const APInt &A, const APInt &B,$/;"	f	file:
SolveQuadraticEquation	Analysis/ScalarEvolution.cpp	/^SolveQuadraticEquation(const SCEVAddRecExpr *AddRec, ScalarEvolution &SE) {$/;"	f	file:
SolveRecurse	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::SolveRecurse(SmallVectorImpl<const Formula *> &Solution,$/;"	f	class:LSRInstance
SomePtr	Transforms/Scalar/LICM.cpp	/^    Value *SomePtr;  \/\/ Designated pointer to store to.$/;"	m	class:__anon569::LoopPromoter	file:
SortFunc	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  SF &SortFunc;$/;"	m	struct:__anon77::reverse_sort	file:
SortNonLocalDepInfoCache	Analysis/MemoryDependenceAnalysis.cpp	/^SortNonLocalDepInfoCache(MemoryDependenceAnalysis::NonLocalDepInfo &Cache,$/;"	f	file:
SortSymbolPair	CodeGen/MachineModuleInfoImpls.cpp	/^static int SortSymbolPair(const void *LHS, const void *RHS) {$/;"	f	file:
SortedOverlapCheck	DebugInfo/DWARFDebugAranges.h	/^    static bool SortedOverlapCheck(const Range &curr_range,$/;"	f	struct:llvm::DWARFDebugAranges::Range
SourceBegin	Transforms/Scalar/SROA.cpp	/^    uint64_t SourceBegin, SourceEnd;$/;"	m	struct:__anon557::AllocaPartitioning::MemTransferOffsets	file:
SourceEnd	Transforms/Scalar/SROA.cpp	/^    uint64_t SourceBegin, SourceEnd;$/;"	m	struct:__anon557::AllocaPartitioning::MemTransferOffsets	file:
SourceID	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned SourceID;                 \/\/ Source ID number.$/;"	m	class:llvm::SrcLineInfo
SourceIdMap	CodeGen/AsmPrinter/DwarfDebug.h	/^  StringMap<unsigned, BumpPtrAllocator&> SourceIdMap;$/;"	m	class:llvm::DwarfDebug
SourceMap	CodeGen/MachineCopyPropagation.cpp	/^    typedef DenseMap<unsigned, DestList> SourceMap;$/;"	t	class:__anon93::MachineCopyPropagation	file:
SourceNoLongerAvailable	CodeGen/MachineCopyPropagation.cpp	/^MachineCopyPropagation::SourceNoLongerAvailable(unsigned Reg,$/;"	f	class:MachineCopyPropagation
SpanningTree	Analysis/ProfileInfoLoaderPass.cpp	/^    std::set<Edge> SpanningTree;$/;"	m	class:__anon52::LoaderPass	file:
SparcAsmPrinter	Target/Sparc/SparcAsmPrinter.cpp	/^    explicit SparcAsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:__anon441::SparcAsmPrinter
SparcAsmPrinter	Target/Sparc/SparcAsmPrinter.cpp	/^  class SparcAsmPrinter : public AsmPrinter {$/;"	c	namespace:__anon441	file:
SparcDAGToDAGISel	Target/Sparc/SparcISelDAGToDAG.cpp	/^  explicit SparcDAGToDAGISel(SparcTargetMachine &tm)$/;"	f	class:__anon443::SparcDAGToDAGISel
SparcDAGToDAGISel	Target/Sparc/SparcISelDAGToDAG.cpp	/^class SparcDAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon443	file:
SparcELFMCAsmInfo	Target/Sparc/MCTargetDesc/SparcMCAsmInfo.cpp	/^SparcELFMCAsmInfo::SparcELFMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	class:SparcELFMCAsmInfo
SparcELFMCAsmInfo	Target/Sparc/MCTargetDesc/SparcMCAsmInfo.h	/^  class SparcELFMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
SparcFrameLowering	Target/Sparc/SparcFrameLowering.h	/^  explicit SparcFrameLowering(const SparcSubtarget &\/*sti*\/)$/;"	f	class:llvm::SparcFrameLowering
SparcFrameLowering	Target/Sparc/SparcFrameLowering.h	/^class SparcFrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
SparcInstrInfo	Target/Sparc/SparcInstrInfo.cpp	/^SparcInstrInfo::SparcInstrInfo(SparcSubtarget &ST)$/;"	f	class:SparcInstrInfo
SparcInstrInfo	Target/Sparc/SparcInstrInfo.h	/^class SparcInstrInfo : public SparcGenInstrInfo {$/;"	c	namespace:llvm
SparcMachineFunctionInfo	Target/Sparc/SparcMachineFunctionInfo.h	/^    SparcMachineFunctionInfo()$/;"	f	class:llvm::SparcMachineFunctionInfo
SparcMachineFunctionInfo	Target/Sparc/SparcMachineFunctionInfo.h	/^    explicit SparcMachineFunctionInfo(MachineFunction &MF)$/;"	f	class:llvm::SparcMachineFunctionInfo
SparcMachineFunctionInfo	Target/Sparc/SparcMachineFunctionInfo.h	/^  class SparcMachineFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
SparcPassConfig	Target/Sparc/SparcTargetMachine.cpp	/^  SparcPassConfig(SparcTargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon440::SparcPassConfig
SparcPassConfig	Target/Sparc/SparcTargetMachine.cpp	/^class SparcPassConfig : public TargetPassConfig {$/;"	c	namespace:__anon440	file:
SparcRegisterInfo	Target/Sparc/SparcRegisterInfo.cpp	/^SparcRegisterInfo::SparcRegisterInfo(SparcSubtarget &st,$/;"	f	class:SparcRegisterInfo
SparcRegisterInfo	Target/Sparc/SparcRegisterInfo.h	/^struct SparcRegisterInfo : public SparcGenRegisterInfo {$/;"	s	namespace:llvm
SparcSelectionDAGInfo	Target/Sparc/SparcSelectionDAGInfo.cpp	/^SparcSelectionDAGInfo::SparcSelectionDAGInfo(const SparcTargetMachine &TM)$/;"	f	class:SparcSelectionDAGInfo
SparcSelectionDAGInfo	Target/Sparc/SparcSelectionDAGInfo.h	/^class SparcSelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
SparcSubtarget	Target/Sparc/SparcSubtarget.cpp	/^SparcSubtarget::SparcSubtarget(const std::string &TT, const std::string &CPU,$/;"	f	class:SparcSubtarget
SparcSubtarget	Target/Sparc/SparcSubtarget.h	/^class SparcSubtarget : public SparcGenSubtargetInfo {$/;"	c	namespace:llvm
SparcTargetLowering	Target/Sparc/SparcISelLowering.cpp	/^SparcTargetLowering::SparcTargetLowering(TargetMachine &TM)$/;"	f	class:SparcTargetLowering
SparcTargetLowering	Target/Sparc/SparcISelLowering.h	/^  class SparcTargetLowering : public TargetLowering {$/;"	c	namespace:llvm
SparcTargetMachine	Target/Sparc/SparcTargetMachine.cpp	/^SparcTargetMachine::SparcTargetMachine(const Target &T, StringRef TT,$/;"	f	class:SparcTargetMachine
SparcTargetMachine	Target/Sparc/SparcTargetMachine.h	/^class SparcTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
SparcV8TargetMachine	Target/Sparc/SparcTargetMachine.cpp	/^SparcV8TargetMachine::SparcV8TargetMachine(const Target &T,$/;"	f	class:SparcV8TargetMachine
SparcV8TargetMachine	Target/Sparc/SparcTargetMachine.h	/^class SparcV8TargetMachine : public SparcTargetMachine {$/;"	c	namespace:llvm
SparcV9TargetMachine	Target/Sparc/SparcTargetMachine.cpp	/^SparcV9TargetMachine::SparcV9TargetMachine(const Target &T,$/;"	f	class:SparcV9TargetMachine
SparcV9TargetMachine	Target/Sparc/SparcTargetMachine.h	/^class SparcV9TargetMachine : public SparcTargetMachine {$/;"	c	namespace:llvm
Special	Target/ARM/Thumb2SizeReduction.cpp	/^    unsigned Special  : 1; \/\/ Needs to be dealt with specially$/;"	m	struct:__anon300::ReduceEntry	file:
Special	Transforms/Scalar/LoopStrengthReduce.cpp	/^    Special, \/\/\/< A special case of basic, allowing -1 scales.$/;"	e	enum:__anon517::LSRUse::KindType	file:
SpecialAttr	Target/ARM/ARMBuildAttrs.h	/^  enum SpecialAttr {$/;"	g	namespace:ARMBuildAttrs
SpecialFP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    SpecialFP  = 7 << FPTypeShift,$/;"	e	enum:llvm::X86II::__anon350
SpecificAsmLexer	MC/MCDisassembler/EDDisassembler.h	/^  llvm::OwningPtr<llvm::MCTargetAsmLexer> SpecificAsmLexer;$/;"	m	struct:llvm::EDDisassembler
SpeculateFalse	CodeGen/MachineLICM.cpp	/^      SpeculateFalse   = 0,$/;"	e	enum:__anon156::MachineLICM::__anon157	file:
SpeculateTrue	CodeGen/MachineLICM.cpp	/^      SpeculateTrue    = 1,$/;"	e	enum:__anon156::MachineLICM::__anon157	file:
SpeculateUnknown	CodeGen/MachineLICM.cpp	/^      SpeculateUnknown = 2$/;"	e	enum:__anon156::MachineLICM::__anon157	file:
SpeculationState	CodeGen/MachineLICM.cpp	/^    unsigned SpeculationState;$/;"	m	class:__anon156::MachineLICM	file:
SpeculativeTypes	Linker/LinkModules.cpp	/^  SmallVector<Type*, 16> SpeculativeTypes;$/;"	m	class:__anon201::TypeMapTy	file:
SpeculativelyExecuteBB	Transforms/Utils/SimplifyCFG.cpp	/^static bool SpeculativelyExecuteBB(BranchInst *BI, BasicBlock *BB1) {$/;"	f	file:
SpillLabels	Target/XCore/XCoreMachineFunctionInfo.h	/^  std::vector<std::pair<MCSymbol*, CalleeSavedInfo> > SpillLabels;$/;"	m	class:llvm::XCoreFunctionInfo
SpillMBB	CodeGen/InlineSpiller.cpp	/^    MachineBasicBlock *SpillMBB;$/;"	m	struct:__anon155::InlineSpiller::SibValueInfo	file:
SpillMode	CodeGen/SplitKit.h	/^  ComplementSpillMode SpillMode;$/;"	m	class:llvm::SplitEditor
SpillPlacement	CodeGen/SpillPlacement.h	/^  SpillPlacement() : MachineFunctionPass(ID), nodes(0) {}$/;"	f	class:llvm::SpillPlacement
SpillPlacement	CodeGen/SpillPlacement.h	/^class SpillPlacement  : public MachineFunctionPass {$/;"	c	namespace:llvm
SpillPlacementID	CodeGen/SpillPlacement.cpp	/^char &llvm::SpillPlacementID = SpillPlacement::ID;$/;"	m	class:llvm	file:
SpillPlacer	CodeGen/RegAllocGreedy.cpp	/^  SpillPlacement *SpillPlacer;$/;"	m	class:__anon158::RAGreedy	file:
SpillReg	CodeGen/InlineSpiller.cpp	/^    unsigned SpillReg;$/;"	m	struct:__anon155::InlineSpiller::SibValueInfo	file:
SpillVNI	CodeGen/InlineSpiller.cpp	/^    VNInfo *SpillVNI;$/;"	m	struct:__anon155::InlineSpiller::SibValueInfo	file:
Spiller	CodeGen/Spiller.h	/^  class Spiller {$/;"	c	namespace:llvm
SpillerBase	CodeGen/Spiller.cpp	/^  SpillerBase(MachineFunctionPass &pass, MachineFunction &mf, VirtRegMap &vrm)$/;"	f	class:__anon143::SpillerBase
SpillerBase	CodeGen/Spiller.cpp	/^class SpillerBase : public Spiller {$/;"	c	namespace:__anon143	file:
SpillerInstance	CodeGen/RegAllocBasic.cpp	/^  std::auto_ptr<Spiller> SpillerInstance;$/;"	m	class:__anon122::RABasic	file:
SpillerInstance	CodeGen/RegAllocGreedy.cpp	/^  std::auto_ptr<Spiller> SpillerInstance;$/;"	m	class:__anon158::RAGreedy	file:
SpillerName	CodeGen/Spiller.cpp	/^  enum SpillerName { trivial, inline_ };$/;"	g	namespace:__anon142	file:
SpillsCR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  bool SpillsCR;$/;"	m	class:llvm::PPCFunctionInfo
SplatByte	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^static APInt SplatByte(unsigned NumBits, uint8_t ByteVal) {$/;"	f	file:
SplatByte	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static APInt SplatByte(unsigned NumBits, uint8_t ByteVal) {$/;"	f	file:
Splice	CodeGen/CodePlacementOpt.cpp	/^void CodePlacementOpt::Splice(MachineFunction &MF,$/;"	f	class:CodePlacementOpt
Split	MC/SubtargetFeature.cpp	/^static void Split(std::vector<std::string> &V, const StringRef S) {$/;"	f	file:
Split	Support/DeltaAlgorithm.cpp	/^void DeltaAlgorithm::Split(const changeset_ty &S, changesetlist_ty &Res) {$/;"	f	class:DeltaAlgorithm
SplitAddRecs	Analysis/ScalarEvolutionExpander.cpp	/^static void SplitAddRecs(SmallVectorImpl<const SCEV *> &Ops,$/;"	f	file:
SplitAnalysis	CodeGen/SplitKit.cpp	/^SplitAnalysis::SplitAnalysis(const VirtRegMap &vrm,$/;"	f	class:SplitAnalysis
SplitAnalysis	CodeGen/SplitKit.h	/^class SplitAnalysis {$/;"	c	namespace:llvm
SplitBlock	Transforms/Utils/BasicBlockUtils.cpp	/^BasicBlock *llvm::SplitBlock(BasicBlock *Old, Instruction *SplitPt, Pass *P) {$/;"	f	class:llvm
SplitBlockAndInsertIfThen	Transforms/Utils/BasicBlockUtils.cpp	/^TerminatorInst *llvm::SplitBlockAndInsertIfThen(Instruction *Cmp,$/;"	f	class:llvm
SplitBlockPredecessors	Transforms/Utils/BasicBlockUtils.cpp	/^BasicBlock *llvm::SplitBlockPredecessors(BasicBlock *BB, $/;"	f	class:llvm
SplitConstraints	CodeGen/RegAllocGreedy.cpp	/^  SmallVector<SpillPlacement::BlockConstraint, 8> SplitConstraints;$/;"	m	class:__anon158::RAGreedy	file:
SplitCriticalEdge	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::SplitCriticalEdge(MachineBasicBlock *Succ, Pass *P) {$/;"	f	class:MachineBasicBlock
SplitCriticalEdge	CodeGen/MachineSink.cpp	/^MachineBasicBlock *MachineSinking::SplitCriticalEdge(MachineInstr *MI,$/;"	f	class:MachineSinking
SplitCriticalEdge	Transforms/Utils/BreakCriticalEdges.cpp	/^BasicBlock *llvm::SplitCriticalEdge(TerminatorInst *TI, unsigned SuccNum,$/;"	f	class:llvm
SplitCriticalSideEffectEdges	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^static void SplitCriticalSideEffectEdges(Function &Fn, Pass *SDISel) {$/;"	f	file:
SplitEdge	Transforms/Utils/BasicBlockUtils.cpp	/^BasicBlock *llvm::SplitEdge(BasicBlock *BB, BasicBlock *Succ, Pass *P) {$/;"	f	class:llvm
SplitEditor	CodeGen/SplitKit.cpp	/^SplitEditor::SplitEditor(SplitAnalysis &sa,$/;"	f	class:SplitEditor
SplitEditor	CodeGen/SplitKit.h	/^class SplitEditor {$/;"	c	namespace:llvm
SplitExitEdges	Transforms/Scalar/LoopUnswitch.cpp	/^void LoopUnswitch::SplitExitEdges(Loop *L,$/;"	f	class:LoopUnswitch
SplitInteger	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^void DAGTypeLegalizer::SplitInteger(SDValue Op,$/;"	f	class:DAGTypeLegalizer
SplitInterferencesForBasicBlock	CodeGen/StrongPHIElimination.cpp	/^StrongPHIElimination::SplitInterferencesForBasicBlock($/;"	f	class:StrongPHIElimination
SplitLandingPadPredecessors	Transforms/Utils/BasicBlockUtils.cpp	/^void llvm::SplitLandingPadPredecessors(BasicBlock *OrigBB,$/;"	f	class:llvm
SplitLandingPadPreds	Transforms/IPO/LoopExtractor.cpp	/^void BlockExtractorPass::SplitLandingPadPreds(Function *F) {$/;"	f	class:BlockExtractorPass
SplitMBBAt	CodeGen/BranchFolding.cpp	/^MachineBasicBlock *BranchFolder::SplitMBBAt(MachineBasicBlock &CurMBB,$/;"	f	class:BranchFolder
SplitPHIEdges	CodeGen/PHIElimination.cpp	/^bool PHIElimination::SplitPHIEdges(MachineFunction &MF,$/;"	f	class:PHIElimination
SplitRes_MERGE_VALUES	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::SplitRes_MERGE_VALUES(SDNode *N, unsigned ResNo,$/;"	f	class:DAGTypeLegalizer
SplitRes_SELECT	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::SplitRes_SELECT(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitRes_SELECT_CC	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::SplitRes_SELECT_CC(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitRes_UNDEF	CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp	/^void DAGTypeLegalizer::SplitRes_UNDEF(SDNode *N, SDValue &Lo, SDValue &Hi) {$/;"	f	class:DAGTypeLegalizer
SplitString	Support/StringExtras.cpp	/^void llvm::SplitString(StringRef Source,$/;"	f	class:llvm
SplitVecOp_BITCAST	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::SplitVecOp_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SplitVecOp_CONCAT_VECTORS	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::SplitVecOp_CONCAT_VECTORS(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SplitVecOp_EXTRACT_SUBVECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::SplitVecOp_EXTRACT_SUBVECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SplitVecOp_EXTRACT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::SplitVecOp_EXTRACT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SplitVecOp_FP_ROUND	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::SplitVecOp_FP_ROUND(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SplitVecOp_STORE	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::SplitVecOp_STORE(StoreSDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
SplitVecOp_UnaryOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::SplitVecOp_UnaryOp(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SplitVecOp_VSETCC	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::SplitVecOp_VSETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
SplitVecRes_BITCAST	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_BITCAST(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_BUILD_VECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_BUILD_VECTOR(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_BinOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_BinOp(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_CONCAT_VECTORS	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_CONCAT_VECTORS(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_EXTRACT_SUBVECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_EXTRACT_SUBVECTOR(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_FPOWI	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_FPOWI(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_INSERT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_INSERT_VECTOR_ELT(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_InregOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_InregOp(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_LOAD	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_LOAD(LoadSDNode *LD, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_SCALAR_TO_VECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_SCALAR_TO_VECTOR(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_SETCC	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_SETCC(SDNode *N, SDValue &Lo, SDValue &Hi) {$/;"	f	class:DAGTypeLegalizer
SplitVecRes_TernaryOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_TernaryOp(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_UnaryOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_UnaryOp(SDNode *N, SDValue &Lo,$/;"	f	class:DAGTypeLegalizer
SplitVecRes_VECTOR_SHUFFLE	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVecRes_VECTOR_SHUFFLE(ShuffleVectorSDNode *N,$/;"	f	class:DAGTypeLegalizer
SplitVectorOperand	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^bool DAGTypeLegalizer::SplitVectorOperand(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
SplitVectorResult	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::SplitVectorResult(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
SplitVectors	CodeGen/SelectionDAG/LegalizeTypes.h	/^  DenseMap<SDValue, std::pair<SDValue, SDValue> > SplitVectors;$/;"	m	class:llvm::DAGTypeLegalizer
SrcCopyMap	CodeGen/StrongPHIElimination.cpp	/^      SrcCopyMap;$/;"	t	class:__anon154::StrongPHIElimination	file:
SrcCopySet	CodeGen/StrongPHIElimination.cpp	/^    typedef DenseSet<std::pair<MachineBasicBlock*, unsigned> > SrcCopySet;$/;"	t	class:__anon154::StrongPHIElimination	file:
SrcDefinitionsToResolve	Linker/LinkModules.cpp	/^  SmallVector<StructType*, 16> SrcDefinitionsToResolve;$/;"	m	class:__anon201::TypeMapTy	file:
SrcIdx	CodeGen/RegisterCoalescer.h	/^    unsigned SrcIdx;$/;"	m	class:llvm::CoalescerPair
SrcInit	Linker/LinkModules.cpp	/^      Constant *SrcInit;      \/\/ Old initializer from src module.$/;"	m	struct:__anon202::ModuleLinker::AppendingVarInfo	file:
SrcLineInfo	CodeGen/AsmPrinter/DwarfDebug.h	/^  SrcLineInfo(unsigned L, unsigned C, unsigned S, MCSymbol *label)$/;"	f	class:llvm::SrcLineInfo
SrcLineInfo	CodeGen/AsmPrinter/DwarfDebug.h	/^class SrcLineInfo {$/;"	c	namespace:llvm
SrcM	Linker/LinkModules.cpp	/^    Module *DstM, *SrcM;$/;"	m	class:__anon202::ModuleLinker	file:
SrcMgr	MC/MCParser/AsmParser.cpp	/^  SourceMgr &SrcMgr;$/;"	m	class:__anon211::AsmParser	file:
SrcMgr	TableGen/Error.cpp	/^SourceMgr SrcMgr;$/;"	m	namespace:llvm	file:
SrcMgr	TableGen/TGLexer.h	/^  SourceMgr &SrcMgr;$/;"	m	class:llvm::TGLexer
SrcMgrDiagInfo	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^  struct SrcMgrDiagInfo {$/;"	s	namespace:__anon66	file:
SrcOrder	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool SrcOrder;$/;"	m	class:__anon77::RegReductionPQBase	file:
SrcReg	CodeGen/RegisterCoalescer.h	/^    unsigned SrcReg;$/;"	m	class:llvm::CoalescerPair
SrcReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned SrcReg;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon278	file:
SrcReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned SrcReg;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon279	file:
SrcRegMap	CodeGen/TwoAddressInstructionPass.cpp	/^    DenseMap<unsigned, unsigned> SrcRegMap;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
SrcRegReductionPriorityQueue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^SrcRegReductionPriorityQueue;$/;"	t	namespace:__anon77	file:
StFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    StFrm         = 7  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
StMiscFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    StMiscFrm     = 9  << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
Stack	Target/X86/X86FloatingPoint.cpp	/^    unsigned Stack[8];          \/\/ FP<n> Registers in each stack slot...$/;"	m	struct:__anon386::FPS	file:
StackAddrFn	CodeGen/SjLjEHPrepare.cpp	/^    Constant *StackAddrFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
StackAlign	Target/MSP430/MSP430RegisterInfo.h	/^  unsigned StackAlign;$/;"	m	struct:llvm::MSP430RegisterInfo
StackAlignment	Target/CellSPU/SPUSubtarget.h	/^    unsigned StackAlignment;$/;"	m	class:llvm::SPUSubtarget
StackAlignment	Target/PowerPC/PPCSubtarget.h	/^  unsigned StackAlignment;$/;"	m	class:llvm::PPCSubtarget
StackColoring	CodeGen/StackColoring.cpp	/^  StackColoring() : MachineFunctionPass(ID) {$/;"	f	class:__anon113::StackColoring
StackColoring	CodeGen/StackColoring.cpp	/^class StackColoring : public MachineFunctionPass {$/;"	c	namespace:__anon113	file:
StackColoringID	CodeGen/StackColoring.cpp	/^char &llvm::StackColoringID = StackColoring::ID;$/;"	m	class:llvm	file:
StackEntryTy	CodeGen/ShadowStackGC.cpp	/^    StructType *StackEntryTy;$/;"	m	class:__anon148::ShadowStackGC	file:
StackInt	CodeGen/InlineSpiller.cpp	/^  LiveInterval *StackInt;$/;"	m	class:__anon155::InlineSpiller	file:
StackNode	Transforms/Scalar/EarlyCSE.cpp	/^    StackNode(ScopedHTType *availableValues,$/;"	f	class:__anon566::EarlyCSE::StackNode
StackNode	Transforms/Scalar/EarlyCSE.cpp	/^  class StackNode {$/;"	c	class:__anon566::EarlyCSE	file:
StackOffset	Target/Hexagon/HexagonCallingConvLower.h	/^  unsigned StackOffset;$/;"	m	class:llvm::Hexagon_CCState
StackProtector	CodeGen/StackProtector.cpp	/^    StackProtector() : FunctionPass(ID), TLI(0) {$/;"	f	class:__anon130::StackProtector
StackProtector	CodeGen/StackProtector.cpp	/^    StackProtector(const TargetLowering *tli)$/;"	f	class:__anon130::StackProtector
StackProtector	CodeGen/StackProtector.cpp	/^  class StackProtector : public FunctionPass {$/;"	c	namespace:__anon130	file:
StackPtr	Target/X86/X86FastISel.cpp	/^  unsigned StackPtr;$/;"	m	class:__anon381::X86FastISel	file:
StackPtr	Target/X86/X86RegisterInfo.h	/^  unsigned StackPtr;$/;"	m	class:llvm::X86RegisterInfo
StackRestoreFn	CodeGen/SjLjEHPrepare.cpp	/^    Constant *StackRestoreFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
StackRestoreFn	Transforms/Utils/LowerInvoke.cpp	/^    Constant *SetJmpFn, *LongJmpFn, *StackSaveFn, *StackRestoreFn;$/;"	m	class:__anon474::LowerInvoke	file:
StackSaveFn	Transforms/Utils/LowerInvoke.cpp	/^    Constant *SetJmpFn, *LongJmpFn, *StackSaveFn, *StackRestoreFn;$/;"	m	class:__anon474::LowerInvoke	file:
StackSlot	CodeGen/InlineSpiller.cpp	/^  int StackSlot;$/;"	m	class:__anon155::InlineSpiller	file:
StackSlotColoring	CodeGen/StackSlotColoring.cpp	/^    StackSlotColoring() :$/;"	f	class:__anon94::StackSlotColoring
StackSlotColoring	CodeGen/StackSlotColoring.cpp	/^  class StackSlotColoring : public MachineFunctionPass {$/;"	c	namespace:__anon94	file:
StackSlotColoringID	CodeGen/StackSlotColoring.cpp	/^char &llvm::StackSlotColoringID = StackSlotColoring::ID;$/;"	m	class:llvm	file:
StackSlotForVirtReg	CodeGen/RegAllocFast.cpp	/^    IndexedMap<int, VirtReg2IndexFunctor> StackSlotForVirtReg;$/;"	m	class:__anon140::RAFast	file:
StackStructReturn	Target/X86/X86ISelLowering.cpp	/^  StackStructReturn$/;"	e	enum:StructReturnType	file:
StackTop	Target/X86/X86FloatingPoint.cpp	/^    unsigned StackTop;          \/\/ The current top of the FP stack.$/;"	m	struct:__anon386::FPS	file:
Stage	CodeGen/RegAllocGreedy.cpp	/^    LiveRangeStage Stage;$/;"	m	struct:__anon158::RAGreedy::RegInfo	file:
StageName	CodeGen/RegAllocGreedy.cpp	/^  static const char *const StageName[];$/;"	m	class:__anon158::RAGreedy	file:
StageName	CodeGen/RegAllocGreedy.cpp	/^const char *const RAGreedy::StageName[] = {$/;"	m	class:RAGreedy	file:
StandardNames	Target/TargetLibraryInfo.cpp	/^const char* TargetLibraryInfo::StandardNames[LibFunc::NumLibFuncs] =$/;"	m	class:TargetLibraryInfo	file:
StandardOpcodeLengths	DebugInfo/DWARFDebugLine.h	/^    std::vector<uint8_t> StandardOpcodeLengths;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
Start	Transforms/Scalar/MemCpyOptimizer.cpp	/^  int64_t Start, End;$/;"	m	struct:__anon573::MemsetRange	file:
StartAddress	DebugInfo/DWARFDebugRangeList.h	/^    uint64_t StartAddress;$/;"	m	struct:llvm::DWARFDebugRangeList::RangeListEntry
StartBlock	CodeGen/AggressiveAntiDepBreaker.cpp	/^void AggressiveAntiDepBreaker::StartBlock(MachineBasicBlock *BB) {$/;"	f	class:AggressiveAntiDepBreaker
StartBlock	CodeGen/CriticalAntiDepBreaker.cpp	/^void CriticalAntiDepBreaker::StartBlock(MachineBasicBlock *BB) {$/;"	f	class:CriticalAntiDepBreaker
StartBlockForKills	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::StartBlockForKills(MachineBasicBlock *BB) {$/;"	f	class:SchedulePostRATDList
StartLoc	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	class:__anon261::ARMOperand	file:
StartLoc	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	struct:__anon446::MBlazeOperand	file:
StartLoc	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	class:__anon423::MipsOperand	file:
StartLoc	Target/X86/AsmParser/X86AsmParser.cpp	/^  SMLoc StartLoc, EndLoc;$/;"	m	struct:__anon336::X86Operand	file:
StartMachineBasicBlock	ExecutionEngine/JIT/JITEmitter.cpp	/^    virtual void StartMachineBasicBlock(MachineBasicBlock *MBB) {$/;"	f	class:__anon182::JITEmitter
StartNewSlab	Support/Allocator.cpp	/^void BumpPtrAllocator::StartNewSlab() {$/;"	f	class:llvm::BumpPtrAllocator
StartPacket	Target/Hexagon/HexagonMachineFunctionInfo.h	/^    const unsigned int StartPacket = 0x1;$/;"	m	namespace:llvm::Hexagon
StartParsingLineTable	DebugInfo/DWARFDebugLine.h	/^      StartParsingLineTable = 0,$/;"	e	enum:llvm::DWARFDebugLine::State::__anon174
StartPtr	Transforms/Scalar/MemCpyOptimizer.cpp	/^  Value *StartPtr;$/;"	m	struct:__anon573::MemsetRange	file:
StartValue	Transforms/Vectorize/LoopVectorize.cpp	/^    Value *StartValue;$/;"	m	struct:__anon605::LoopVectorizationLegality::ReductionDescriptor	file:
StartsWithGlobalOffsetTable	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^StartsWithGlobalOffsetTable(const MCExpr *Expr) {$/;"	f	file:
StatInfo	Support/Statistic.cpp	/^static ManagedStatic<StatisticInfo> StatInfo;$/;"	v	file:
StatLock	Support/Statistic.cpp	/^static ManagedStatic<sys::SmartMutex<true> > StatLock;$/;"	v	file:
StatSymbols	ExecutionEngine/JIT/JITMemoryManager.cpp	/^  StatSymbols() {$/;"	f	class:__anon191::StatSymbols
StatSymbols	ExecutionEngine/JIT/JITMemoryManager.cpp	/^class StatSymbols {$/;"	c	namespace:__anon191	file:
State	CodeGen/AggressiveAntiDepBreaker.h	/^    AggressiveAntiDepState *State;$/;"	m	class:llvm::AggressiveAntiDepBreaker
State	CodeGen/ShadowStackGC.cpp	/^    int State;$/;"	m	class:__anon149::EscapeEnumerator	file:
State	DebugInfo/DWARFDebugLine.h	/^    State() : row(StartParsingLineTable) {}$/;"	f	struct:llvm::DWARFDebugLine::State
State	DebugInfo/DWARFDebugLine.h	/^  struct State : public Row, public Sequence, public LineTable {$/;"	s	class:llvm::DWARFDebugLine
StateBB	CodeGen/ShadowStackGC.cpp	/^    Function::iterator StateBB, StateE;$/;"	m	class:__anon149::EscapeEnumerator	file:
StateE	CodeGen/ShadowStackGC.cpp	/^    Function::iterator StateBB, StateE;$/;"	m	class:__anon149::EscapeEnumerator	file:
StaticList	Support/ManagedStatic.cpp	/^static const ManagedStaticBase *StaticList = 0;$/;"	v	file:
StatisticInfo	Support/Statistic.cpp	/^class StatisticInfo {$/;"	c	namespace:__anon240	file:
Stats	Support/Statistic.cpp	/^  std::vector<const Statistic*> Stats;$/;"	m	class:__anon240::StatisticInfo	file:
Store	Target/Sparc/SparcInstrInfo.h	/^    Store = (1<<2),$/;"	e	enum:llvm::SPII::__anon445
StoreIndexSearchPredicate	Transforms/Utils/PromoteMemoryToRegister.cpp	/^struct StoreIndexSearchPredicate {$/;"	s	namespace:__anon470	file:
StoreInst	VMCore/Instructions.cpp	/^StoreInst::StoreInst(Value *val, Value *addr, BasicBlock *InsertAtEnd)$/;"	f	class:StoreInst
StoreInst	VMCore/Instructions.cpp	/^StoreInst::StoreInst(Value *val, Value *addr, Instruction *InsertBefore)$/;"	f	class:StoreInst
StoreInst	VMCore/Instructions.cpp	/^StoreInst::StoreInst(Value *val, Value *addr, bool isVolatile,$/;"	f	class:StoreInst
StoreIntToMemory	ExecutionEngine/ExecutionEngine.cpp	/^static void StoreIntToMemory(const APInt &IntVal, uint8_t *Dst,$/;"	f	file:
StoreOffset	Target/PowerPC/PPCHazardRecognizers.h	/^  int64_t StoreOffset[4];$/;"	m	class:llvm::PPCHazardRecognizer970
StoreOpSplitter	Transforms/Scalar/SROA.cpp	/^    StoreOpSplitter(Instruction *InsertionPoint, Value *Ptr)$/;"	f	struct:__anon562::AggLoadStoreRewriter::StoreOpSplitter
StoreOpSplitter	Transforms/Scalar/SROA.cpp	/^  struct StoreOpSplitter : public OpSplitter<StoreOpSplitter> {$/;"	s	class:__anon562::AggLoadStoreRewriter	file:
StoreParam	Target/NVPTX/NVPTXISelLowering.h	/^  StoreParam,$/;"	e	enum:llvm::NVPTXISD::NodeType
StoreParamS32	Target/NVPTX/NVPTXISelLowering.h	/^  StoreParamS32, \/\/ to sext and store a <32bit value, not used currently$/;"	e	enum:llvm::NVPTXISD::NodeType
StoreParamU32	Target/NVPTX/NVPTXISelLowering.h	/^  StoreParamU32, \/\/ to zext and store a <32bit value, not used currently$/;"	e	enum:llvm::NVPTXISD::NodeType
StoreRegToStackSlot	Target/PowerPC/PPCInstrInfo.cpp	/^PPCInstrInfo::StoreRegToStackSlot(MachineFunction &MF,$/;"	f	class:PPCInstrInfo
StoreRetval	Target/NVPTX/NVPTXISelLowering.h	/^  StoreRetval,$/;"	e	enum:llvm::NVPTXISD::NodeType
StoreSize	Target/PowerPC/PPCHazardRecognizers.h	/^  uint64_t StoreSize[4];$/;"	m	class:llvm::PPCHazardRecognizer970
StoreStrongCallee	Transforms/Scalar/ObjCARC.cpp	/^    Constant *StoreStrongCallee,$/;"	m	class:__anon510::ObjCARCContract	file:
StoreStrongCalls	Transforms/Scalar/ObjCARC.cpp	/^    SmallPtrSet<CallInst *, 8> StoreStrongCalls;$/;"	m	class:__anon510::ObjCARCContract	file:
StoreTailCallArgumentsToStackSlot	Target/PowerPC/PPCISelLowering.cpp	/^StoreTailCallArgumentsToStackSlot(SelectionDAG &DAG,$/;"	f	file:
StoreValue	Target/PowerPC/PPCHazardRecognizers.h	/^  const Value *StoreValue[4];$/;"	m	class:llvm::PPCHazardRecognizer970
StoreValueToMemory	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::StoreValueToMemory(const GenericValue &Val,$/;"	f	class:ExecutionEngine
StoredOnceValue	Transforms/IPO/GlobalOpt.cpp	/^  Value *StoredOnceValue;$/;"	m	struct:__anon590::GlobalStatus	file:
StoredType	Transforms/IPO/GlobalOpt.cpp	/^  enum StoredType {$/;"	g	struct:__anon590::GlobalStatus	file:
StoredType	Transforms/IPO/GlobalOpt.cpp	/^  } StoredType;$/;"	m	struct:__anon590::GlobalStatus	typeref:enum:__anon590::GlobalStatus::StoredType	file:
StpCpy	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StpCpyOpt StpCpy; StpCpyOpt StpCpyChk;$/;"	m	class:__anon546::SimplifyLibCalls	file:
StpCpyChk	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StpCpyOpt StpCpy; StpCpyOpt StpCpyChk;$/;"	m	class:__anon546::SimplifyLibCalls	file:
StpCpyOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^  StpCpyOpt(bool c) : OptChkCall(c) {}$/;"	f	struct:__anon545::StpCpyOpt
StpCpyOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct StpCpyOpt: public LibCallOptimization {$/;"	s	namespace:__anon545	file:
Str	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    StringRef Str;$/;"	m	struct:llvm::DwarfAccelTable::HashData
Str	MC/MCDisassembler/EDToken.h	/^  llvm::StringRef Str;$/;"	m	struct:llvm::EDToken
StrCSpn	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StrToOpt StrTo; StrSpnOpt StrSpn; StrCSpnOpt StrCSpn; StrStrOpt StrStr;$/;"	m	class:__anon546::SimplifyLibCalls	file:
StrCSpnOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct StrCSpnOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
StrCat	Transforms/Utils/SimplifyLibCalls.cpp	/^  StrCatOpt StrCat;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
StrCatOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct StrCatOpt : public LibCallOptimization {$/;"	s	namespace:__anon473	file:
StrChr	Transforms/Utils/SimplifyLibCalls.cpp	/^  StrChrOpt StrChr;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
StrChrOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct StrChrOpt : public LibCallOptimization {$/;"	s	namespace:__anon473	file:
StrCmp	Transforms/Utils/SimplifyLibCalls.cpp	/^  StrCmpOpt StrCmp;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
StrCmpOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct StrCmpOpt : public LibCallOptimization {$/;"	s	namespace:__anon473	file:
StrCpy	Transforms/Utils/SimplifyLibCalls.cpp	/^  StrCpyOpt StrCpy;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
StrCpyChk	Transforms/Utils/SimplifyLibCalls.cpp	/^  StrCpyChkOpt StrCpyChk;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
StrCpyChkOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct StrCpyChkOpt : public InstFortifiedLibCallOptimization {$/;"	s	namespace:__anon473	file:
StrCpyOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct StrCpyOpt : public LibCallOptimization {$/;"	s	namespace:__anon473	file:
StrDupLike	Analysis/MemoryBuiltins.cpp	/^  StrDupLike         = 1<<3,$/;"	e	enum:AllocType	file:
StrError	Support/Errno.cpp	/^std::string StrError() {$/;"	f	namespace:llvm::sys
StrError	Support/Errno.cpp	/^std::string StrError(int errnum) {$/;"	f	namespace:llvm::sys
StrInStrNoCase	Support/StringExtras.cpp	/^StringRef::size_type llvm::StrInStrNoCase(StringRef s1, StringRef s2) {$/;"	f	class:llvm
StrLen	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StrLenOpt StrLen; StrPBrkOpt StrPBrk;$/;"	m	class:__anon546::SimplifyLibCalls	file:
StrLenOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct StrLenOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
StrNCat	Transforms/Utils/SimplifyLibCalls.cpp	/^  StrNCatOpt StrNCat;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
StrNCatOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct StrNCatOpt : public StrCatOpt {$/;"	s	namespace:__anon473	file:
StrNCmp	Transforms/Utils/SimplifyLibCalls.cpp	/^  StrNCmpOpt StrNCmp;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
StrNCmpOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct StrNCmpOpt : public LibCallOptimization {$/;"	s	namespace:__anon473	file:
StrNCpy	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StrNCpyOpt StrNCpy;$/;"	m	class:__anon546::SimplifyLibCalls	file:
StrNCpyChk	Transforms/Utils/SimplifyLibCalls.cpp	/^  StrNCpyChkOpt StrNCpyChk;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
StrNCpyChkOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct StrNCpyChkOpt : public InstFortifiedLibCallOptimization {$/;"	s	namespace:__anon473	file:
StrNCpyOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct StrNCpyOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
StrPBrk	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StrLenOpt StrLen; StrPBrkOpt StrPBrk;$/;"	m	class:__anon546::SimplifyLibCalls	file:
StrPBrkOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct StrPBrkOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
StrRChr	Transforms/Utils/SimplifyLibCalls.cpp	/^  StrRChrOpt StrRChr;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
StrRChrOpt	Transforms/Utils/SimplifyLibCalls.cpp	/^struct StrRChrOpt : public LibCallOptimization {$/;"	s	namespace:__anon473	file:
StrSpn	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StrToOpt StrTo; StrSpnOpt StrSpn; StrCSpnOpt StrCSpn; StrStrOpt StrStr;$/;"	m	class:__anon546::SimplifyLibCalls	file:
StrSpnOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct StrSpnOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
StrStr	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StrToOpt StrTo; StrSpnOpt StrSpn; StrCSpnOpt StrCSpn; StrStrOpt StrStr;$/;"	m	class:__anon546::SimplifyLibCalls	file:
StrStrOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct StrStrOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
StrTo	Transforms/Scalar/SimplifyLibCalls.cpp	/^    StrToOpt StrTo; StrSpnOpt StrSpn; StrCSpnOpt StrCSpn; StrStrOpt StrStr;$/;"	m	class:__anon546::SimplifyLibCalls	file:
StrToOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct StrToOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
StrVal	AsmParser/LLLexer.h	/^    std::string StrVal;$/;"	m	class:llvm::LLLexer
StrVal	AsmParser/LLParser.h	/^    std::string StrVal, StrVal2;$/;"	m	struct:llvm::ValID
StrVal	TableGen/TGLexer.h	/^    Id, StrVal, VarName, CodeFragment$/;"	e	enum:llvm::tgtok::TokKind
StrVal2	AsmParser/LLParser.h	/^    std::string StrVal, StrVal2;$/;"	m	struct:llvm::ValID
Strategy	CodeGen/MachineTraceMetrics.h	/^  enum Strategy {$/;"	g	class:llvm::MachineTraceMetrics
Stream	Bitcode/Reader/BitcodeReader.h	/^  BitstreamCursor Stream;$/;"	m	class:llvm::BitcodeReader
Stream	Support/YAMLParser.cpp	/^Stream::Stream(StringRef Input, SourceMgr &SM)$/;"	f	class:Stream
StreamFile	Bitcode/Reader/BitcodeReader.h	/^  OwningPtr<BitstreamReader> StreamFile;$/;"	m	class:llvm::BitcodeReader
Streamer	Target/ARM/ARMAsmPrinter.cpp	/^    MCObjectStreamer &Streamer;$/;"	m	class:__anon313::ObjectAttributeEmitter	file:
Streamer	Target/ARM/ARMAsmPrinter.cpp	/^    MCStreamer &Streamer;$/;"	m	class:__anon313::AsmAttributeEmitter	file:
StreamingMemoryObject	Support/StreamableMemoryObject.cpp	/^StreamingMemoryObject::StreamingMemoryObject(DataStreamer *streamer) :$/;"	f	class:llvm::StreamingMemoryObject
StressIVChain	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool StressIVChain = false;$/;"	v	file:
String	MC/MCDisassembler/EDDisassembler.cpp	/^  const char *String;$/;"	m	struct:TripleMap	file:
String	MC/MCDisassembler/EDInst.h	/^  std::string String;$/;"	m	struct:llvm::EDInst
String	TableGen/TGLexer.h	/^    MultiClass, String,$/;"	e	enum:llvm::tgtok::TokKind
String16	MC/ELFObjectWriter.cpp	/^    void String16(MCDataFragment &F, uint16_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
String32	MC/ELFObjectWriter.cpp	/^    void String32(MCDataFragment &F, uint32_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
String64	MC/ELFObjectWriter.cpp	/^    void String64(MCDataFragment &F, uint64_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
String8	MC/ELFObjectWriter.cpp	/^    void String8(MCDataFragment &F, uint8_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
StringBE16	MC/ELFObjectWriter.cpp	/^    void StringBE16(char *buf ,uint16_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
StringBE32	MC/ELFObjectWriter.cpp	/^    void StringBE32(char *buf, uint32_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
StringBE64	MC/ELFObjectWriter.cpp	/^    void StringBE64(char *buf, uint64_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
StringConstant	AsmParser/LLToken.h	/^    StringConstant,    \/\/ "foo"$/;"	e	enum:llvm::lltok::Kind
StringEntries	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  typedef StringMap<DataArray, BumpPtrAllocator&> StringEntries;$/;"	t	class:llvm::DwarfAccelTable
StringIndex	MC/ELFObjectWriter.cpp	/^      uint64_t StringIndex;$/;"	m	struct:__anon225::ELFObjectWriter::ELFSymbolData	file:
StringLE16	MC/ELFObjectWriter.cpp	/^    void StringLE16(char *buf, uint16_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
StringLE32	MC/ELFObjectWriter.cpp	/^    void StringLE32(char *buf, uint32_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
StringLE64	MC/ELFObjectWriter.cpp	/^    void StringLE64(char *buf, uint64_t Value) {$/;"	f	class:__anon225::ELFObjectWriter
StringMapImpl	Support/StringMap.cpp	/^StringMapImpl::StringMapImpl(unsigned InitSize, unsigned itemSize) {$/;"	f	class:StringMapImpl
StringMapType	VMCore/PassRegistry.cpp	/^  typedef StringMap<const PassInfo*> StringMapType;$/;"	t	struct:__anon607::PassRegistryImpl	file:
StringPool	CodeGen/AsmPrinter/DwarfDebug.h	/^  StringMap<std::pair<MCSymbol*, unsigned>, BumpPtrAllocator&> StringPool;$/;"	m	class:llvm::DwarfDebug
StringPool	Support/StringPool.cpp	/^StringPool::StringPool() {}$/;"	f	class:StringPool
StringSection	DebugInfo/DWARFContext.h	/^  StringRef StringSection;$/;"	m	class:llvm::DWARFContextInMemory
StringTable	MC/ELFObjectWriter.cpp	/^    SmallString<256> StringTable;$/;"	m	class:__anon225::ELFObjectWriter	file:
StringTable	MC/WinCOFFObjectWriter.cpp	/^StringTable::StringTable() {$/;"	f	class:StringTable
StringTable	MC/WinCOFFObjectWriter.cpp	/^class StringTable {$/;"	c	namespace:__anon222	file:
StringTableIndex	MC/ELFObjectWriter.cpp	/^    unsigned StringTableIndex;$/;"	m	class:__anon225::ELFObjectWriter	file:
StringValue	Target/ARM/ARMAsmPrinter.cpp	/^      StringRef StringValue;$/;"	m	struct:__anon313::ObjectAttributeEmitter::AttributeItemType	file:
StringifyResult	MC/MCDisassembler/EDInst.h	/^  CachedResult StringifyResult;$/;"	m	struct:llvm::EDInst
Strings	MC/WinCOFFObjectWriter.cpp	/^  StringTable  Strings;$/;"	m	class:__anon222::WinCOFFObjectWriter	file:
StripCast	VMCore/IntrinsicInst.cpp	/^Value *DbgInfoIntrinsic::StripCast(Value *C) {$/;"	f	class:DbgInfoIntrinsic
StripDeadDebugInfo	Transforms/IPO/StripSymbols.cpp	/^    explicit StripDeadDebugInfo()$/;"	f	class:__anon587::StripDeadDebugInfo
StripDeadDebugInfo	Transforms/IPO/StripSymbols.cpp	/^  class StripDeadDebugInfo : public ModulePass {$/;"	c	namespace:__anon587	file:
StripDeadPrototypesPass	Transforms/IPO/StripDeadPrototypes.cpp	/^  StripDeadPrototypesPass() : ModulePass(ID) {$/;"	f	class:__anon599::StripDeadPrototypesPass
StripDeadPrototypesPass	Transforms/IPO/StripDeadPrototypes.cpp	/^class StripDeadPrototypesPass : public ModulePass {$/;"	c	namespace:__anon599	file:
StripDebugDeclare	Transforms/IPO/StripSymbols.cpp	/^    explicit StripDebugDeclare()$/;"	f	class:__anon587::StripDebugDeclare
StripDebugDeclare	Transforms/IPO/StripSymbols.cpp	/^  class StripDebugDeclare : public ModulePass {$/;"	c	namespace:__anon587	file:
StripDebugInfo	Transforms/IPO/StripSymbols.cpp	/^static bool StripDebugInfo(Module &M) {$/;"	f	file:
StripFlag	MC/SubtargetFeature.cpp	/^static inline std::string StripFlag(const StringRef Feature) {$/;"	f	file:
StripNest	Transforms/IPO/GlobalOpt.cpp	/^static AttrListPtr StripNest(LLVMContext &C, const AttrListPtr &Attrs) {$/;"	f	file:
StripNonDebugSymbols	Transforms/IPO/StripSymbols.cpp	/^    explicit StripNonDebugSymbols()$/;"	f	class:__anon587::StripNonDebugSymbols
StripNonDebugSymbols	Transforms/IPO/StripSymbols.cpp	/^  class StripNonDebugSymbols : public ModulePass {$/;"	c	namespace:__anon587	file:
StripPointerCastsAndObjCCalls	Transforms/Scalar/ObjCARC.cpp	/^static Value *StripPointerCastsAndObjCCalls(Value *V) {$/;"	f	file:
StripPointerCastsAndObjCCalls	Transforms/Scalar/ObjCARC.cpp	/^static const Value *StripPointerCastsAndObjCCalls(const Value *V) {$/;"	f	file:
StripPtrCastKeepAS	Analysis/ConstantFolding.cpp	/^static Constant* StripPtrCastKeepAS(Constant* Ptr) {$/;"	f	file:
StripSpaces	MC/MCSectionMachO.cpp	/^static void StripSpaces(StringRef &Str) {$/;"	f	file:
StripSymbolNames	Transforms/IPO/StripSymbols.cpp	/^static bool StripSymbolNames(Module &M, bool PreserveDbgInfo) {$/;"	f	file:
StripSymbols	Transforms/IPO/StripSymbols.cpp	/^    explicit StripSymbols(bool ODI = false) $/;"	f	class:__anon587::StripSymbols
StripSymbols	Transforms/IPO/StripSymbols.cpp	/^  class StripSymbols : public ModulePass {$/;"	c	namespace:__anon587	file:
StripSymtab	Transforms/IPO/StripSymbols.cpp	/^static void StripSymtab(ValueSymbolTable &ST, bool PreserveDbgInfo) {$/;"	f	file:
StripTypeNames	Transforms/IPO/StripSymbols.cpp	/^static void StripTypeNames(Module &M, bool PreserveDbgInfo) {$/;"	f	file:
StrongPHIElimination	CodeGen/StrongPHIElimination.cpp	/^    StrongPHIElimination() : MachineFunctionPass(ID) {$/;"	f	class:__anon154::StrongPHIElimination
StrongPHIElimination	CodeGen/StrongPHIElimination.cpp	/^  class StrongPHIElimination : public MachineFunctionPass {$/;"	c	namespace:__anon154	file:
StrongPHIEliminationID	CodeGen/StrongPHIElimination.cpp	/^char &llvm::StrongPHIEliminationID = StrongPHIElimination::ID;$/;"	m	class:llvm	file:
StrongerOrdering	Transforms/IPO/GlobalOpt.cpp	/^static AtomicOrdering StrongerOrdering(AtomicOrdering X, AtomicOrdering Y) {$/;"	f	file:
StructConstants	VMCore/LLVMContextImpl.h	/^  StructConstantsTy StructConstants;$/;"	m	class:llvm::LLVMContextImpl
StructConstantsTy	VMCore/LLVMContextImpl.h	/^  typedef ConstantAggrUniqueMap<StructType, ConstantStruct> StructConstantsTy;$/;"	t	class:llvm::LLVMContextImpl
StructLayout	VMCore/DataLayout.cpp	/^StructLayout::StructLayout(StructType *ST, const DataLayout &TD) {$/;"	f	class:StructLayout
StructLayoutMap	VMCore/DataLayout.cpp	/^class StructLayoutMap {$/;"	c	namespace:__anon617	file:
StructMemberThreshold	Transforms/Scalar/ScalarReplAggregates.cpp	/^    unsigned StructMemberThreshold;$/;"	m	struct:__anon521::SROA	file:
StructReturnType	Target/X86/X86ISelLowering.cpp	/^enum StructReturnType {$/;"	g	file:
StructTypeMap	VMCore/LLVMContextImpl.h	/^  typedef DenseMap<StructType*, bool, AnonStructTypeKeyInfo> StructTypeMap;$/;"	t	class:llvm::LLVMContextImpl
StructValueState	Transforms/Scalar/SCCP.cpp	/^  DenseMap<std::pair<Value*, unsigned>, LatticeVal> StructValueState;$/;"	m	class:__anon531::SCCPSolver	file:
Structor	CodeGen/AsmPrinter/AsmPrinter.cpp	/^typedef std::pair<unsigned, Constant*> Structor;$/;"	t	file:
Structure	VMCore/PassManager.cpp	/^  None, Arguments, Structure, Executions, Details$/;"	e	enum:llvm::PassDebugLevel	file:
StubAllocator	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    BumpPtrAllocator StubAllocator;$/;"	m	class:__anon190::DefaultJITMemoryManager	file:
StubDynamicNoPIC	Target/X86/X86Subtarget.h	/^  StubDynamicNoPIC, \/\/ Used on i386-darwin in -mdynamic-no-pic mode.$/;"	e	enum:llvm::PICStyles::Style
StubMap	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  typedef std::map<RelocationValueRef, uintptr_t> StubMap;$/;"	t	class:llvm::RuntimeDyldImpl
StubOffset	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uintptr_t StubOffset;$/;"	m	class:llvm::SectionEntry
StubPIC	Target/X86/X86Subtarget.h	/^  StubPIC,          \/\/ Used on i386-darwin in -fPIC mode.$/;"	e	enum:llvm::PICStyles::Style
StubToResolverMap	ExecutionEngine/JIT/JITEmitter.cpp	/^  ManagedStatic<StubToResolverMapTy> StubToResolverMap;$/;"	m	namespace:__anon182	file:
StubToResolverMapTy	ExecutionEngine/JIT/JITEmitter.cpp	/^  class StubToResolverMapTy {$/;"	c	namespace:__anon182	file:
Style	Target/X86/X86Subtarget.h	/^enum Style {$/;"	g	namespace:llvm::PICStyles
SubClassReference	TableGen/TGParser.cpp	/^  SubClassReference() : Rec(0) {}$/;"	f	struct:llvm::SubClassReference
SubClassReference	TableGen/TGParser.cpp	/^struct SubClassReference {$/;"	s	namespace:llvm	file:
SubIdx	CodeGen/RegisterCoalescer.cpp	/^  unsigned SubIdx;$/;"	m	class:__anon115::JoinVals	file:
SubMultiClassReference	TableGen/TGParser.cpp	/^  SubMultiClassReference() : MC(0) {}$/;"	f	struct:llvm::SubMultiClassReference
SubMultiClassReference	TableGen/TGParser.cpp	/^struct SubMultiClassReference {$/;"	s	namespace:llvm	file:
SubOne	Transforms/InstCombine/InstCombineAddSub.cpp	/^static Constant *SubOne(ConstantInt *C) {$/;"	f	file:
SubOne	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static Constant *SubOne(ConstantInt *C) {$/;"	f	file:
SubOne	Transforms/InstCombine/InstCombineCompares.cpp	/^static Constant *SubOne(Constant *C) {$/;"	f	file:
SubWithOverflow	Transforms/InstCombine/InstCombineCompares.cpp	/^static bool SubWithOverflow(Constant *&Result, Constant *In1,$/;"	f	file:
SubloopParents	Analysis/LoopInfo.cpp	/^  DenseMap<Loop*, Loop*> SubloopParents;$/;"	m	class:__anon37::UnloopUpdater	file:
SubregIndex	Target/MBlaze/MBlazeRegisterInfo.h	/^  enum SubregIndex {$/;"	g	namespace:llvm::MBlaze
SubsumesPredicate	Target/ARM/ARMBaseInstrInfo.cpp	/^SubsumesPredicate(const SmallVectorImpl<MachineOperand> &Pred1,$/;"	f	class:ARMBaseInstrInfo
SubsumesPredicate	Target/Hexagon/HexagonInstrInfo.cpp	/^SubsumesPredicate(const SmallVectorImpl<MachineOperand> &Pred1,$/;"	f	class:HexagonInstrInfo
Subtarget	Target/ARM/ARMAsmPrinter.h	/^  const ARMSubtarget *Subtarget;$/;"	m	class:llvm::ARMAsmPrinter
Subtarget	Target/ARM/ARMBaseInstrInfo.h	/^  const ARMSubtarget &Subtarget;$/;"	m	class:llvm::ARMBaseInstrInfo
Subtarget	Target/ARM/ARMCodeEmitter.cpp	/^    const ARMSubtarget        *Subtarget;$/;"	m	class:__anon297::ARMCodeEmitter	file:
Subtarget	Target/ARM/ARMFastISel.cpp	/^  const ARMSubtarget *Subtarget;$/;"	m	class:__anon307::ARMFastISel	file:
Subtarget	Target/ARM/ARMISelDAGToDAG.cpp	/^  const ARMSubtarget *Subtarget;$/;"	m	class:__anon302::ARMDAGToDAGISel	file:
Subtarget	Target/ARM/ARMISelLowering.h	/^    const ARMSubtarget *Subtarget;$/;"	m	class:llvm::ARMTargetLowering
Subtarget	Target/ARM/ARMSelectionDAGInfo.h	/^  const ARMSubtarget *Subtarget;$/;"	m	class:llvm::ARMSelectionDAGInfo
Subtarget	Target/ARM/ARMTargetMachine.h	/^  ARMSubtarget        Subtarget;$/;"	m	class:llvm::ARMBaseTargetMachine
Subtarget	Target/CellSPU/SPUFrameLowering.h	/^    const SPUSubtarget &Subtarget;$/;"	m	class:llvm::SPUFrameLowering
Subtarget	Target/CellSPU/SPURegisterInfo.h	/^    const SPUSubtarget &Subtarget;$/;"	m	class:llvm::SPURegisterInfo
Subtarget	Target/CellSPU/SPUTargetMachine.h	/^  SPUSubtarget        Subtarget;$/;"	m	class:llvm::SPUTargetMachine
Subtarget	Target/Hexagon/HexagonAsmPrinter.h	/^    const HexagonSubtarget *Subtarget;$/;"	m	class:llvm::HexagonAsmPrinter
Subtarget	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^  const HexagonSubtarget &Subtarget;$/;"	m	class:__anon400::HexagonDAGToDAGISel	file:
Subtarget	Target/Hexagon/HexagonInstrInfo.h	/^  const HexagonSubtarget& Subtarget;$/;"	m	class:llvm::HexagonInstrInfo
Subtarget	Target/Hexagon/HexagonRegisterInfo.h	/^  HexagonSubtarget &Subtarget;$/;"	m	struct:llvm::HexagonRegisterInfo
Subtarget	Target/Hexagon/HexagonTargetMachine.h	/^  HexagonSubtarget Subtarget;$/;"	m	class:llvm::HexagonTargetMachine
Subtarget	Target/MBlaze/MBlazeAsmPrinter.cpp	/^    const MBlazeSubtarget *Subtarget;$/;"	m	class:__anon460::MBlazeAsmPrinter	file:
Subtarget	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^  const MBlazeSubtarget &Subtarget;$/;"	m	class:__anon461::MBlazeDAGToDAGISel	file:
Subtarget	Target/MBlaze/MBlazeISelLowering.h	/^    const MBlazeSubtarget *Subtarget;$/;"	m	class:llvm::MBlazeTargetLowering
Subtarget	Target/MBlaze/MBlazeRegisterInfo.h	/^  const MBlazeSubtarget &Subtarget;$/;"	m	struct:llvm::MBlazeRegisterInfo
Subtarget	Target/MBlaze/MBlazeTargetMachine.h	/^    MBlazeSubtarget        Subtarget;$/;"	m	class:llvm::MBlazeTargetMachine
Subtarget	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    const MSP430Subtarget &Subtarget;$/;"	m	class:__anon395::MSP430DAGToDAGISel	file:
Subtarget	Target/MSP430/MSP430ISelLowering.h	/^    const MSP430Subtarget &Subtarget;$/;"	m	class:llvm::MSP430TargetLowering
Subtarget	Target/MSP430/MSP430TargetMachine.h	/^  MSP430Subtarget        Subtarget;$/;"	m	class:llvm::MSP430TargetMachine
Subtarget	Target/Mips/MipsAsmPrinter.h	/^  const MipsSubtarget *Subtarget;$/;"	m	class:llvm::MipsAsmPrinter
Subtarget	Target/Mips/MipsCodeEmitter.cpp	/^  const MipsSubtarget *Subtarget;$/;"	m	class:__anon438::MipsCodeEmitter	file:
Subtarget	Target/Mips/MipsISelDAGToDAG.cpp	/^  const MipsSubtarget &Subtarget;$/;"	m	class:__anon435::MipsDAGToDAGISel	file:
Subtarget	Target/Mips/MipsISelLowering.h	/^    const MipsSubtarget *Subtarget;$/;"	m	class:llvm::MipsTargetLowering
Subtarget	Target/Mips/MipsRegisterInfo.h	/^  const MipsSubtarget &Subtarget;$/;"	m	class:llvm::MipsRegisterInfo
Subtarget	Target/Mips/MipsTargetMachine.h	/^  MipsSubtarget       Subtarget;$/;"	m	class:llvm::MipsTargetMachine
Subtarget	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  const NVPTXSubtarget &Subtarget;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
Subtarget	Target/NVPTX/NVPTXTargetMachine.h	/^  NVPTXSubtarget        Subtarget;$/;"	m	class:llvm::NVPTXTargetMachine
Subtarget	Target/PowerPC/PPCAsmPrinter.cpp	/^    const PPCSubtarget &Subtarget;$/;"	m	class:__anon330::PPCAsmPrinter	file:
Subtarget	Target/PowerPC/PPCFrameLowering.h	/^  const PPCSubtarget &Subtarget;$/;"	m	class:llvm::PPCFrameLowering
Subtarget	Target/PowerPC/PPCRegisterInfo.h	/^  const PPCSubtarget &Subtarget;$/;"	m	class:llvm::PPCRegisterInfo
Subtarget	Target/PowerPC/PPCTargetMachine.h	/^  PPCSubtarget        Subtarget;$/;"	m	class:llvm::PPCTargetMachine
Subtarget	Target/Sparc/SparcISelDAGToDAG.cpp	/^  const SparcSubtarget &Subtarget;$/;"	m	class:__anon443::SparcDAGToDAGISel	file:
Subtarget	Target/Sparc/SparcInstrInfo.h	/^  const SparcSubtarget& Subtarget;$/;"	m	class:llvm::SparcInstrInfo
Subtarget	Target/Sparc/SparcRegisterInfo.h	/^  SparcSubtarget &Subtarget;$/;"	m	struct:llvm::SparcRegisterInfo
Subtarget	Target/Sparc/SparcTargetMachine.h	/^  SparcSubtarget Subtarget;$/;"	m	class:llvm::SparcTargetMachine
Subtarget	Target/X86/X86AsmPrinter.h	/^  const X86Subtarget *Subtarget;$/;"	m	class:llvm::X86AsmPrinter
Subtarget	Target/X86/X86FastISel.cpp	/^  const X86Subtarget *Subtarget;$/;"	m	class:__anon381::X86FastISel	file:
Subtarget	Target/X86/X86ISelDAGToDAG.cpp	/^    const X86Subtarget *Subtarget;$/;"	m	class:__anon373::X86DAGToDAGISel	file:
Subtarget	Target/X86/X86ISelLowering.h	/^    const X86Subtarget *Subtarget;$/;"	m	class:llvm::X86TargetLowering
Subtarget	Target/X86/X86JITInfo.h	/^    const X86Subtarget *Subtarget;$/;"	m	class:llvm::X86JITInfo
Subtarget	Target/X86/X86SelectionDAGInfo.h	/^  const X86Subtarget *Subtarget;$/;"	m	class:llvm::X86SelectionDAGInfo
Subtarget	Target/X86/X86TargetMachine.h	/^  X86Subtarget       Subtarget;$/;"	m	class:llvm::X86TargetMachine
Subtarget	Target/XCore/XCoreAsmPrinter.cpp	/^    const XCoreSubtarget &Subtarget;$/;"	m	class:__anon333::XCoreAsmPrinter	file:
Subtarget	Target/XCore/XCoreISelDAGToDAG.cpp	/^    const XCoreSubtarget &Subtarget;$/;"	m	class:__anon334::XCoreDAGToDAGISel	file:
Subtarget	Target/XCore/XCoreISelLowering.h	/^    const XCoreSubtarget &Subtarget;$/;"	m	class:llvm::XCoreTargetLowering
Subtarget	Target/XCore/XCoreTargetMachine.h	/^  XCoreSubtarget Subtarget;$/;"	m	class:llvm::XCoreTargetMachine
SubtargetFeatures	MC/SubtargetFeature.cpp	/^SubtargetFeatures::SubtargetFeatures(const StringRef Initial) {$/;"	f	class:SubtargetFeatures
Subtype	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  const object::mach::CPUSubtypeARM Subtype;$/;"	m	class:__anon285::DarwinARMAsmBackend	file:
Succ	CodeGen/MachineTraceMetrics.h	/^    const MachineBasicBlock *Succ;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
SuccClosure	Support/DAGDeltaAlgorithm.cpp	/^  std::map<change_ty, std::set<change_ty> > SuccClosure;$/;"	m	class:__anon233::DAGDeltaAlgorithmImpl	file:
SuccessorSorter	CodeGen/MachineSink.cpp	/^    SuccessorSorter(MachineLoopInfo *LoopInfo) : LI(LoopInfo) {}$/;"	f	struct:__anon101::SuccessorSorter
SuccessorSorter	CodeGen/MachineSink.cpp	/^  struct SuccessorSorter {$/;"	s	namespace:__anon101	file:
Successors	Support/DAGDeltaAlgorithm.cpp	/^  std::map<change_ty, std::vector<change_ty> > Successors;$/;"	m	class:__anon233::DAGDeltaAlgorithmImpl	file:
Succs	CodeGen/MachineVerifier.cpp	/^      BlockSet Preds, Succs;$/;"	m	struct:__anon139::MachineVerifier::BBInfo	file:
Succs	Transforms/Scalar/ObjCARC.cpp	/^    SmallVector<BasicBlock *, 2> Succs;$/;"	m	class:__anon507::BBState	file:
SunkAddrs	Transforms/Scalar/CodeGenPrepare.cpp	/^    DenseMap<Value*, Value*> SunkAddrs;$/;"	m	class:__anon525::CodeGenPrepare	file:
SupportsTailCall	Target/ARM/ARMSubtarget.h	/^  bool SupportsTailCall;$/;"	m	class:llvm::ARMSubtarget
SurveyFunction	Transforms/IPO/DeadArgumentElimination.cpp	/^void DAE::SurveyFunction(const Function &F) {$/;"	f	class:DAE
SurveyUse	Transforms/IPO/DeadArgumentElimination.cpp	/^DAE::Liveness DAE::SurveyUse(Value::const_use_iterator U,$/;"	f	class:DAE
SurveyUses	Transforms/IPO/DeadArgumentElimination.cpp	/^DAE::Liveness DAE::SurveyUses(const Value *V, UseVector &MaybeLiveUses) {$/;"	f	class:DAE
SwapAndDropUse	Transforms/Scalar/LoopStrengthReduce.cpp	/^RegUseTracker::SwapAndDropUse(size_t LUIdx, size_t LastLUIdx) {$/;"	f	class:RegUseTracker
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::DataInCodeTableEntry &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::DysymtabLoadCommand &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::IndirectSymbolTableEntry &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::LinkeditDataLoadCommand &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::RelocationEntry &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::Section &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::Section64 &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::Segment64LoadCommand &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::SegmentLoadCommand &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::Symbol64TableEntry &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::SymbolTableEntry &Value) {$/;"	f
SwapStruct	Object/MachOObject.cpp	/^void SwapStruct(macho::SymtabLoadCommand &Value) {$/;"	f
SwapValue	Object/MachOObject.cpp	/^static void SwapValue(T &Value) {$/;"	f	file:
Swift	Target/ARM/ARMSubtarget.h	/^    Others, CortexA8, CortexA9, CortexA15, Swift$/;"	e	enum:llvm::ARMSubtarget::ARMProcFamilyEnum
SwitchCases	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  std::vector<CaseBlock> SwitchCases;$/;"	m	class:llvm::SelectionDAGBuilder
SwitchInst	VMCore/Instructions.cpp	/^SwitchInst::SwitchInst(Value *Value, BasicBlock *Default, unsigned NumCases,$/;"	f	class:SwitchInst
SwitchInst	VMCore/Instructions.cpp	/^SwitchInst::SwitchInst(const SwitchInst &SI)$/;"	f	class:SwitchInst
SwitchLookupTable	Transforms/Utils/SimplifyCFG.cpp	/^  class SwitchLookupTable {$/;"	c	namespace:__anon480	file:
SwitchLookupTable	Transforms/Utils/SimplifyCFG.cpp	/^SwitchLookupTable::SwitchLookupTable(Module &M,$/;"	f	class:SwitchLookupTable
SwitchMode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void SwitchMode() {$/;"	f	class:__anon259::ARMAsmParser	file:
SwitchMode	Target/X86/AsmParser/X86AsmParser.cpp	/^  void SwitchMode() {$/;"	f	class:__anon335::X86AsmParser	file:
SwitchToLookupTable	Transforms/Utils/SimplifyCFG.cpp	/^static bool SwitchToLookupTable(SwitchInst *SI,$/;"	f	file:
SwitchToNewBasicBlock	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::SwitchToNewBasicBlock(BasicBlock *Dest, ExecutionContext &SF){$/;"	f	class:Interpreter
Sym	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    MCSymbol *Sym;$/;"	m	struct:llvm::DwarfAccelTable::HashData
Sym	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^    const MCSymbol *Sym;$/;"	m	struct:__anon430::RelEntry	file:
Sym2IndirectSymMap	Target/ARM/ARMJITInfo.h	/^    DenseMap<void*, intptr_t> Sym2IndirectSymMap;$/;"	m	class:llvm::ARMJITInfo
Symb	MC/WinCOFFObjectWriter.cpp	/^  COFFSymbol          *Symb;$/;"	m	struct:__anon222::COFFRelocation	file:
Symbol	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  SymbolRef Symbol;$/;"	m	class:llvm::ObjRelocationInfo
Symbol	MC/WinCOFFObjectWriter.cpp	/^  COFFSymbol          *Symbol;$/;"	m	class:__anon222::COFFSection	file:
Symbol	Target/ARM/ARMBuildAttrs.h	/^    Symbol                    = 3,$/;"	e	enum:ARMBuildAttrs::AttrType
SymbolData	MC/ELFObjectWriter.cpp	/^      MCSymbolData *SymbolData;$/;"	m	struct:__anon225::ELFObjectWriter::ELFSymbolData	file:
SymbolFlags	Target/X86/X86ISelDAGToDAG.cpp	/^    unsigned char SymbolFlags;  \/\/ X86II::MO_*$/;"	m	struct:__anon371::X86ISelAddressMode	file:
SymbolLoc	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  typedef std::pair<unsigned, uintptr_t> SymbolLoc;$/;"	t	class:llvm::RuntimeDyldImpl
SymbolLookUp	MC/MCDisassembler/Disassembler.h	/^  LLVMSymbolLookupCallback SymbolLookUp;$/;"	m	class:llvm::LLVMDisasmContext
SymbolMap	MC/WinCOFFObjectWriter.cpp	/^  symbol_map  SymbolMap;$/;"	m	class:__anon222::WinCOFFObjectWriter	file:
SymbolName	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  const char *SymbolName;$/;"	m	class:llvm::RelocationValueRef
SymbolTableIndex	MC/ELFObjectWriter.cpp	/^    unsigned SymbolTableIndex;$/;"	m	class:__anon225::ELFObjectWriter	file:
SymbolTableListTraits	VMCore/BasicBlock.cpp	/^template class llvm::SymbolTableListTraits<Instruction, BasicBlock>;$/;"	m	class:llvm	typeref:class:llvm::	file:
SymbolTableListTraits	VMCore/Function.cpp	/^template class llvm::SymbolTableListTraits<Argument, Function>;$/;"	m	class:llvm	typeref:class:llvm::	file:
SymbolTableListTraits	VMCore/Function.cpp	/^template class llvm::SymbolTableListTraits<BasicBlock, Function>;$/;"	m	class:llvm	typeref:class:llvm::	file:
SymbolTableListTraits	VMCore/Module.cpp	/^template class llvm::SymbolTableListTraits<Function, Module>;$/;"	m	class:llvm	typeref:class:llvm::	file:
SymbolTableListTraits	VMCore/Module.cpp	/^template class llvm::SymbolTableListTraits<GlobalAlias, Module>;$/;"	m	class:llvm	typeref:class:llvm::	file:
SymbolTableListTraits	VMCore/Module.cpp	/^template class llvm::SymbolTableListTraits<GlobalVariable, Module>;$/;"	m	class:llvm	typeref:class:llvm::	file:
SymbolTableMap	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  typedef StringMap<SymbolLoc> SymbolTableMap;$/;"	t	class:llvm::RuntimeDyldImpl
SymbolToReloc	MC/ELFObjectWriter.cpp	/^const MCSymbol *ELFObjectWriter::SymbolToReloc(const MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
SymbolValue	MC/ELFObjectWriter.cpp	/^uint64_t ELFObjectWriter::SymbolValue(MCSymbolData &Data,$/;"	f	class:ELFObjectWriter
SymbolicallyEvaluateBinop	Analysis/ConstantFolding.cpp	/^static Constant *SymbolicallyEvaluateBinop(unsigned Opc, Constant *Op0,$/;"	f	file:
SymbolicallyEvaluateGEP	Analysis/ConstantFolding.cpp	/^static Constant *SymbolicallyEvaluateGEP(ArrayRef<Constant *> Ops,$/;"	f	file:
Symbols	CodeGen/MachineModuleInfo.cpp	/^    PointerUnion<MCSymbol *, std::vector<MCSymbol*>*> Symbols;$/;"	m	struct:llvm::MMIAddrLabelMap::AddrLabelSymEntry	file:
Symbols	MC/WinCOFFObjectWriter.cpp	/^  symbols      Symbols;$/;"	m	class:__anon222::WinCOFFObjectWriter	file:
Symbols	Target/NVPTX/NVPTXAsmPrinter.h	/^    SmallVector<Value *, 4> Symbols;$/;"	m	class:llvm::NVPTXAsmPrinter::AggBuffer
Sync	Target/Mips/MipsISelLowering.h	/^      Sync,$/;"	e	enum:llvm::MipsISD::NodeType
Syntax	MC/MCDisassembler/EDDisassembler.h	/^    AssemblySyntax Syntax;$/;"	m	struct:llvm::EDDisassembler::CPUKey
SyntaxVariant	Target/PowerPC/InstPrinter/PPCInstPrinter.h	/^  unsigned SyntaxVariant;$/;"	m	class:llvm::PPCInstPrinter
SyntheticRoot	Transforms/IPO/FunctionAttrs.cpp	/^    ArgumentGraphNode SyntheticRoot;$/;"	m	class:__anon579::ArgumentGraph	file:
SystemProfile	Target/ARM/ARMBuildAttrs.h	/^    SystemProfile = (0x53) \/\/ 'S' Application or real-time profile$/;"	e	enum:ARMBuildAttrs::CPUArchProfile
T2EE_use	Target/ARM/ARMBuildAttrs.h	/^    T2EE_use                  = 66,$/;"	e	enum:ARMBuildAttrs::AttrType
T2JumpTables	Target/ARM/ARMConstantIslandPass.cpp	/^    SmallVector<MachineInstr*, 4> T2JumpTables;$/;"	m	class:__anon310::ARMConstantIslands	file:
T8	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    T8 = 13 << Op0Shift,  TA = 14 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
T8XD	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    T8XD = 17 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
T8XS	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    T8XS = 18 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
TA	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    T8 = 13 << Op0Shift,  TA = 14 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
TARGET	Target/ARM/Makefile	/^TARGET = ARM$/;"	m
TARGET	Target/CellSPU/Makefile	/^TARGET = SPU$/;"	m
TARGET	Target/Hexagon/Makefile	/^TARGET = Hexagon$/;"	m
TARGET	Target/MBlaze/Makefile	/^TARGET = MBlaze$/;"	m
TARGET	Target/MSP430/Makefile	/^TARGET = MSP430$/;"	m
TARGET	Target/Mips/Makefile	/^TARGET = Mips$/;"	m
TARGET	Target/NVPTX/Makefile	/^TARGET = NVPTX$/;"	m
TARGET	Target/PowerPC/Makefile	/^TARGET = PPC$/;"	m
TARGET	Target/Sparc/Makefile	/^TARGET = Sparc$/;"	m
TARGET	Target/X86/Makefile	/^TARGET = X86$/;"	m
TARGET	Target/XCore/Makefile	/^TARGET = XCore$/;"	m
TARGET_ARM_H	Target/ARM/ARM.h	16;"	d
TARGET_Hexagon_H	Target/Hexagon/Hexagon.h	16;"	d
TARGET_MBLAZE_H	Target/MBlaze/MBlaze.h	16;"	d
TARGET_MIPS_H	Target/Mips/Mips.h	16;"	d
TARGET_SPARC_H	Target/Sparc/Sparc.h	16;"	d
TARGET_X86_H	Target/X86/X86.h	16;"	d
TARGET_XCORE_H	Target/XCore/XCore.h	16;"	d
TAXD	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    TAXD = 19 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
TB	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    TB          = 1 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
TBAANode	Analysis/TypeBasedAliasAnalysis.cpp	/^    TBAANode() : Node(0) {}$/;"	f	class:__anon12::TBAANode
TBAANode	Analysis/TypeBasedAliasAnalysis.cpp	/^    explicit TBAANode(const MDNode *N) : Node(N) {}$/;"	f	class:__anon12::TBAANode
TBAANode	Analysis/TypeBasedAliasAnalysis.cpp	/^  class TBAANode {$/;"	c	namespace:__anon12	file:
TBB	CodeGen/EarlyIfConversion.cpp	/^  MachineBasicBlock *TBB;$/;"	m	class:__anon91::SSAIfConv	file:
TBI	CodeGen/MachineTraceMetrics.h	/^    TraceBlockInfo &TBI;$/;"	m	class:llvm::MachineTraceMetrics::Trace
TB_ALIGN_16	Target/X86/X86InstrInfo.cpp	/^  TB_ALIGN_16    =   16 << TB_ALIGN_SHIFT,$/;"	e	enum:__anon374	file:
TB_ALIGN_32	Target/X86/X86InstrInfo.cpp	/^  TB_ALIGN_32    =   32 << TB_ALIGN_SHIFT,$/;"	e	enum:__anon374	file:
TB_ALIGN_MASK	Target/X86/X86InstrInfo.cpp	/^  TB_ALIGN_MASK  = 0xff << TB_ALIGN_SHIFT$/;"	e	enum:__anon374	file:
TB_ALIGN_NONE	Target/X86/X86InstrInfo.cpp	/^  TB_ALIGN_NONE  =    0 << TB_ALIGN_SHIFT,$/;"	e	enum:__anon374	file:
TB_ALIGN_SHIFT	Target/X86/X86InstrInfo.cpp	/^  TB_ALIGN_SHIFT = 8,$/;"	e	enum:__anon374	file:
TB_FOLDED_LOAD	Target/X86/X86InstrInfo.cpp	/^  TB_FOLDED_LOAD  = 1 << 6,$/;"	e	enum:__anon374	file:
TB_FOLDED_STORE	Target/X86/X86InstrInfo.cpp	/^  TB_FOLDED_STORE = 1 << 7,$/;"	e	enum:__anon374	file:
TB_INDEX_0	Target/X86/X86InstrInfo.cpp	/^  TB_INDEX_0    = 0,$/;"	e	enum:__anon374	file:
TB_INDEX_1	Target/X86/X86InstrInfo.cpp	/^  TB_INDEX_1    = 1,$/;"	e	enum:__anon374	file:
TB_INDEX_2	Target/X86/X86InstrInfo.cpp	/^  TB_INDEX_2    = 2,$/;"	e	enum:__anon374	file:
TB_INDEX_3	Target/X86/X86InstrInfo.cpp	/^  TB_INDEX_3    = 3,$/;"	e	enum:__anon374	file:
TB_INDEX_MASK	Target/X86/X86InstrInfo.cpp	/^  TB_INDEX_MASK = 0xf,$/;"	e	enum:__anon374	file:
TB_NO_FORWARD	Target/X86/X86InstrInfo.cpp	/^  TB_NO_FORWARD   = 1 << 5,$/;"	e	enum:__anon374	file:
TB_NO_REVERSE	Target/X86/X86InstrInfo.cpp	/^  TB_NO_REVERSE   = 1 << 4,$/;"	e	enum:__anon374	file:
TC_RETURN	Target/ARM/ARMISelLowering.h	/^      TC_RETURN,    \/\/ Tail call return pseudo.$/;"	e	enum:llvm::ARMISD::NodeType
TC_RETURN	Target/Hexagon/HexagonISelLowering.h	/^      TC_RETURN$/;"	e	enum:llvm::HexagonISD::__anon404
TC_RETURN	Target/PowerPC/PPCISelLowering.h	/^      TC_RETURN,$/;"	e	enum:llvm::PPCISD::NodeType
TC_RETURN	Target/X86/X86ISelLowering.h	/^      TC_RETURN,$/;"	e	enum:llvm::X86ISD::NodeType
TCycles	CodeGen/EarlyIfConversion.cpp	/^    int CondCycles, TCycles, FCycles;$/;"	m	struct:__anon91::SSAIfConv::PHIInfo	file:
TD	Analysis/InlineCost.cpp	/^  const DataLayout *const TD;$/;"	m	class:__anon28::CallAnalyzer	file:
TD	Analysis/InstructionSimplify.cpp	/^  const DataLayout *TD;$/;"	m	struct:Query	file:
TD	Analysis/Lint.cpp	/^    DataLayout *TD;$/;"	m	class:__anon5::Lint	file:
TD	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  const DataLayout *TD;$/;"	m	class:llvm::SelectionDAGBuilder
TD	ExecutionEngine/Interpreter/Interpreter.h	/^  DataLayout TD;$/;"	m	class:llvm::Interpreter
TD	ExecutionEngine/JIT/JITDwarfEmitter.h	/^  const DataLayout* TD;$/;"	m	class:llvm::JITDwarfEmitter
TD	Target/ARM/ARMCodeEmitter.cpp	/^    const DataLayout          *TD;$/;"	m	class:__anon297::ARMCodeEmitter	file:
TD	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    const DataLayout *TD;$/;"	m	struct:__anon304::ARMPreAllocLoadStoreOpt	file:
TD	Target/MSP430/MSP430ISelLowering.h	/^    const DataLayout *TD;$/;"	m	class:llvm::MSP430TargetLowering
TD	Target/Mips/MipsCodeEmitter.cpp	/^  const DataLayout *TD;$/;"	m	class:__anon438::MipsCodeEmitter	file:
TD	Target/X86/X86CodeEmitter.cpp	/^    const DataLayout    *TD;$/;"	m	class:__anon379::Emitter	file:
TD	Target/X86/X86ISelLowering.h	/^    const DataLayout *TD;$/;"	m	class:llvm::X86TargetLowering
TD	Transforms/IPO/ConstantMerge.cpp	/^    const DataLayout *TD;$/;"	m	struct:__anon586::ConstantMerge	file:
TD	Transforms/IPO/GlobalOpt.cpp	/^    DataLayout *TD;$/;"	m	struct:__anon589::GlobalOpt	file:
TD	Transforms/IPO/GlobalOpt.cpp	/^  const DataLayout *TD;$/;"	m	class:__anon591::Evaluator	file:
TD	Transforms/IPO/MergeFunctions.cpp	/^  DataLayout *TD;$/;"	m	class:__anon596::ComparableFunction	file:
TD	Transforms/IPO/MergeFunctions.cpp	/^  DataLayout *TD;$/;"	m	class:__anon598::MergeFunctions	file:
TD	Transforms/IPO/MergeFunctions.cpp	/^  const DataLayout *TD;$/;"	m	class:__anon597::FunctionComparator	file:
TD	Transforms/InstCombine/InstCombine.h	/^  DataLayout *TD;$/;"	m	class:llvm::InstCombiner
TD	Transforms/Instrumentation/AddressSanitizer.cpp	/^  DataLayout *TD;$/;"	m	struct:__anon491::AddressSanitizer	file:
TD	Transforms/Instrumentation/BoundsChecking.cpp	/^    const DataLayout *TD;$/;"	m	struct:__anon493::BoundsChecking	file:
TD	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  DataLayout *TD;$/;"	m	struct:__anon486::ThreadSanitizer	file:
TD	Transforms/Scalar/EarlyCSE.cpp	/^  const DataLayout *TD;$/;"	m	class:__anon566::EarlyCSE	file:
TD	Transforms/Scalar/GVN.cpp	/^    const DataLayout *TD;$/;"	m	class:__anon537::GVN	file:
TD	Transforms/Scalar/GlobalMerge.cpp	/^      const DataLayout *TD;$/;"	m	struct:__anon567::GlobalMerge::GlobalCmp	file:
TD	Transforms/Scalar/IndVarSimplify.cpp	/^    DataLayout      *TD;$/;"	m	class:__anon495::IndVarSimplify	file:
TD	Transforms/Scalar/IndVarSimplify.cpp	/^    const DataLayout *TD;$/;"	m	class:__anon496::WideIVVisitor	file:
TD	Transforms/Scalar/JumpThreading.cpp	/^    DataLayout *TD;$/;"	m	class:__anon542::JumpThreading	file:
TD	Transforms/Scalar/LICM.cpp	/^    DataLayout *TD;          \/\/ DataLayout for constant folding.$/;"	m	struct:__anon568::LICM	file:
TD	Transforms/Scalar/LoopIdiomRecognize.cpp	/^    const DataLayout *TD;$/;"	m	class:__anon543::LoopIdiomRecognize	file:
TD	Transforms/Scalar/MemCpyOptimizer.cpp	/^    const DataLayout *TD;$/;"	m	class:__anon575::MemCpyOpt	file:
TD	Transforms/Scalar/MemCpyOptimizer.cpp	/^  const DataLayout &TD;$/;"	m	class:__anon574::MemsetRanges	file:
TD	Transforms/Scalar/SCCP.cpp	/^  const DataLayout *TD;$/;"	m	class:__anon531::SCCPSolver	file:
TD	Transforms/Scalar/SROA.cpp	/^  const DataLayout &TD;$/;"	m	class:AllocaPartitioning::BuilderBase	file:
TD	Transforms/Scalar/SROA.cpp	/^  const DataLayout &TD;$/;"	m	class:__anon560::PHIOrSelectSpeculator	file:
TD	Transforms/Scalar/SROA.cpp	/^  const DataLayout &TD;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
TD	Transforms/Scalar/SROA.cpp	/^  const DataLayout &TD;$/;"	m	class:__anon562::AggLoadStoreRewriter	file:
TD	Transforms/Scalar/SROA.cpp	/^  const DataLayout *TD;$/;"	m	class:__anon559::SROA	file:
TD	Transforms/Scalar/ScalarReplAggregates.cpp	/^    DataLayout *TD;$/;"	m	struct:__anon521::SROA	file:
TD	Transforms/Scalar/ScalarReplAggregates.cpp	/^  const DataLayout &TD;$/;"	m	class:__anon522::ConvertToScalarInfo	file:
TD	Transforms/Scalar/SimplifyLibCalls.cpp	/^  const DataLayout *TD;$/;"	m	class:__anon544::LibCallOptimization	file:
TD	Transforms/Utils/CloneFunction.cpp	/^    const DataLayout *TD;$/;"	m	struct:__anon465::PruningFunctionCloner	file:
TD	Transforms/Utils/SimplifyCFG.cpp	/^  const DataLayout *const TD;$/;"	m	class:__anon478::SimplifyCFGOpt	file:
TD	Transforms/Utils/SimplifyIndVar.cpp	/^    const DataLayout *TD; \/\/ May be NULL$/;"	m	class:__anon463::SimplifyIndvar	file:
TD	Transforms/Utils/SimplifyLibCalls.cpp	/^  const DataLayout *TD;$/;"	m	class:__anon473::LibCallOptimization	file:
TD	Transforms/Utils/SimplifyLibCalls.cpp	/^  const DataLayout *TD;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
TD	Transforms/Vectorize/BBVectorize.cpp	/^    DataLayout *TD;$/;"	m	struct:__anon604::BBVectorize	file:
TE	CodeGen/MachineTraceMetrics.h	/^    Ensemble &TE;$/;"	m	class:llvm::MachineTraceMetrics::Trace
TEST	Target/NVPTX/NVPTX.h	/^  TEST$/;"	e	enum:llvm::NVPTX::DrvInterface
TESTP	Target/X86/X86ISelLowering.h	/^      TESTP,$/;"	e	enum:llvm::X86ISD::NodeType
TG	VMCore/PassManager.cpp	/^  TimerGroup TG;$/;"	m	class:__anon615::TimingInfo	file:
TGLEXER_H	TableGen/TGLexer.h	15;"	d
TGLexer	TableGen/TGLexer.cpp	/^TGLexer::TGLexer(SourceMgr &SM) : SrcMgr(SM) {$/;"	f	class:TGLexer
TGLexer	TableGen/TGLexer.h	/^class TGLexer {$/;"	c	namespace:llvm
TGPARSER_H	TableGen/TGParser.h	15;"	d
TGParser	TableGen/TGParser.h	/^  TGParser(SourceMgr &SrcMgr, RecordKeeper &records) :$/;"	f	class:llvm::TGParser
TGParser	TableGen/TGParser.h	/^class TGParser {$/;"	c	namespace:llvm
THERE	Support/regcomp.c	136;"	d	file:
THERETHERE	Support/regcomp.c	137;"	d	file:
THREAD_POINTER	Target/ARM/ARMISelLowering.h	/^      THREAD_POINTER,$/;"	e	enum:llvm::ARMISD::NodeType
THREEBYTE38_STR	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	40;"	d
THREEBYTE38_SYM	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	31;"	d
THREEBYTE3A_STR	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	41;"	d
THREEBYTE3A_SYM	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	32;"	d
THREEBYTEA6_STR	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	42;"	d
THREEBYTEA6_SYM	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	33;"	d
THREEBYTEA7_STR	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	43;"	d
THREEBYTEA7_SYM	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	34;"	d
THREEBYTE_38	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  THREEBYTE_38  = 2,$/;"	e	enum:__anon364
THREEBYTE_3A	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  THREEBYTE_3A  = 3,$/;"	e	enum:__anon364
THREEBYTE_A6	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  THREEBYTE_A6  = 4,$/;"	e	enum:__anon364
THREEBYTE_A7	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  THREEBYTE_A7  = 5$/;"	e	enum:__anon364
THUMB1INSTRUCTIONINFO_H	Target/ARM/Thumb1InstrInfo.h	15;"	d
THUMB1REGISTERINFO_H	Target/ARM/Thumb1RegisterInfo.h	16;"	d
THUMB2INSTRUCTIONINFO_H	Target/ARM/Thumb2InstrInfo.h	15;"	d
THUMB2REGISTERINFO_H	Target/ARM/Thumb2RegisterInfo.h	16;"	d
THUMB_ISA_use	Target/ARM/ARMBuildAttrs.h	/^    THUMB_ISA_use             = 9,$/;"	e	enum:ARMBuildAttrs::AttrType
TIDT	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef DWORD             TIDT;$/;"	t
TIDT	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef pthread_t         TIDT;$/;"	t
TII	CodeGen/AggressiveAntiDepBreaker.h	/^    const TargetInstrInfo *TII;$/;"	m	class:llvm::AggressiveAntiDepBreaker
TII	CodeGen/BranchFolding.h	/^    const TargetInstrInfo *TII;$/;"	m	class:llvm::BranchFolder
TII	CodeGen/CodePlacementOpt.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon150::CodePlacementOpt	file:
TII	CodeGen/CriticalAntiDepBreaker.h	/^    const TargetInstrInfo *TII;$/;"	m	class:llvm::CriticalAntiDepBreaker
TII	CodeGen/DeadMachineInstructionElim.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon137::DeadMachineInstructionElim	file:
TII	CodeGen/EarlyIfConversion.cpp	/^  const TargetInstrInfo *TII;$/;"	m	class:__anon91::SSAIfConv	file:
TII	CodeGen/EarlyIfConversion.cpp	/^  const TargetInstrInfo *TII;$/;"	m	class:__anon92::EarlyIfConverter	file:
TII	CodeGen/ExecutionDepsFix.cpp	/^  const TargetInstrInfo *TII;$/;"	m	class:__anon120::ExeDepsFix	file:
TII	CodeGen/ExpandPostRAPseudos.cpp	/^  const TargetInstrInfo *TII;$/;"	m	struct:__anon165::ExpandPostRA	file:
TII	CodeGen/GCStrategy.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon145::GCMachineCodeAnalysis	file:
TII	CodeGen/IfConversion.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon99::IfConverter	file:
TII	CodeGen/InlineSpiller.cpp	/^  const TargetInstrInfo &TII;$/;"	m	class:__anon155::InlineSpiller	file:
TII	CodeGen/MachineBlockPlacement.cpp	/^  const TargetInstrInfo *TII;$/;"	m	class:__anon107::MachineBlockPlacement	file:
TII	CodeGen/MachineCSE.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon161::MachineCSE	file:
TII	CodeGen/MachineLICM.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon156::MachineLICM	file:
TII	CodeGen/MachineSink.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon101::MachineSinking	file:
TII	CodeGen/MachineTraceMetrics.h	/^  const TargetInstrInfo *TII;$/;"	m	class:llvm::MachineTraceMetrics
TII	CodeGen/MachineVerifier.cpp	/^    const TargetInstrInfo *TII;$/;"	m	struct:__anon139::MachineVerifier	file:
TII	CodeGen/OptimizePHIs.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon146::OptimizePHIs	file:
TII	CodeGen/PeepholeOptimizer.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon163::PeepholeOptimizer	file:
TII	CodeGen/PostRASchedulerList.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon102::PostRAScheduler	file:
TII	CodeGen/ProcessImplicitDefs.cpp	/^  const TargetInstrInfo *TII;$/;"	m	class:__anon166::ProcessImplicitDefs	file:
TII	CodeGen/RegAllocFast.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon140::RAFast	file:
TII	CodeGen/RegisterCoalescer.cpp	/^    const TargetInstrInfo* TII;$/;"	m	class:__anon114::RegisterCoalescer	file:
TII	CodeGen/SelectionDAG/InstrEmitter.h	/^  const TargetInstrInfo *TII;$/;"	m	class:llvm::InstrEmitter
TII	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  const TargetInstrInfo *TII;$/;"	m	class:__anon77::RegReductionPQBase	file:
TII	CodeGen/SplitKit.h	/^  const TargetInstrInfo &TII;$/;"	m	class:llvm::SplitAnalysis
TII	CodeGen/SplitKit.h	/^  const TargetInstrInfo &TII;$/;"	m	class:llvm::SplitEditor
TII	CodeGen/StackSlotColoring.cpp	/^    const TargetInstrInfo  *TII;$/;"	m	class:__anon94::StackSlotColoring	file:
TII	CodeGen/StrongPHIElimination.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon154::StrongPHIElimination	file:
TII	CodeGen/TailDuplication.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon167::TailDuplicatePass	file:
TII	CodeGen/TwoAddressInstructionPass.cpp	/^    const TargetInstrInfo *TII;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
TII	CodeGen/VirtRegMap.cpp	/^  const TargetInstrInfo *TII;$/;"	m	class:__anon97::VirtRegRewriter	file:
TII	CodeGen/VirtRegMap.h	/^    const TargetInstrInfo *TII;$/;"	m	class:llvm::VirtRegMap
TII	Target/ARM/ARMBaseRegisterInfo.h	/^  const ARMBaseInstrInfo &TII;$/;"	m	class:llvm::ARMBaseRegisterInfo
TII	Target/ARM/ARMConstantIslandPass.cpp	/^    const ARMBaseInstrInfo *TII;$/;"	m	class:__anon310::ARMConstantIslands	file:
TII	Target/ARM/ARMExpandPseudoInsts.cpp	/^    const ARMBaseInstrInfo *TII;$/;"	m	class:__anon311::ARMExpandPseudo	file:
TII	Target/ARM/ARMFastISel.cpp	/^  const TargetInstrInfo &TII;$/;"	m	class:__anon307::ARMFastISel	file:
TII	Target/ARM/ARMHazardRecognizer.h	/^  const ARMBaseInstrInfo &TII;$/;"	m	class:llvm::ARMHazardRecognizer
TII	Target/ARM/ARMISelDAGToDAG.cpp	/^  const ARMBaseInstrInfo *TII;$/;"	m	class:__anon302::ARMDAGToDAGISel	file:
TII	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    const TargetInstrInfo *TII;$/;"	m	struct:__anon303::ARMLoadStoreOpt	file:
TII	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    const TargetInstrInfo *TII;$/;"	m	struct:__anon304::ARMPreAllocLoadStoreOpt	file:
TII	Target/ARM/MLxExpansionPass.cpp	/^    const ARMBaseInstrInfo *TII;$/;"	m	struct:__anon301::MLxExpansion	file:
TII	Target/ARM/Thumb2ITBlockPass.cpp	/^    const Thumb2InstrInfo *TII;$/;"	m	class:__anon306::Thumb2ITBlockPass	file:
TII	Target/ARM/Thumb2SizeReduction.cpp	/^    const Thumb2InstrInfo *TII;$/;"	m	class:__anon300::Thumb2SizeReduce	file:
TII	Target/CellSPU/SPUNopFiller.cpp	/^    const TargetInstrInfo *TII;$/;"	m	struct:__anon417::SPUNopFiller	file:
TII	Target/CellSPU/SPURegisterInfo.h	/^    const TargetInstrInfo &TII;$/;"	m	class:llvm::SPURegisterInfo
TII	Target/Hexagon/HexagonHardwareLoops.cpp	/^    const TargetInstrInfo *TII;$/;"	m	struct:__anon408::HexagonHardwareLoops	file:
TII	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^  const HexagonInstrInfo *TII;$/;"	m	class:__anon400::HexagonDAGToDAGISel	file:
TII	Target/Hexagon/HexagonRegisterInfo.h	/^  const HexagonInstrInfo &TII;$/;"	m	struct:llvm::HexagonRegisterInfo
TII	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^    const TargetInstrInfo *TII;$/;"	m	struct:__anon462::Filler	file:
TII	Target/MBlaze/MBlazeRegisterInfo.h	/^  const TargetInstrInfo &TII;$/;"	m	struct:llvm::MBlazeRegisterInfo
TII	Target/MSP430/MSP430RegisterInfo.h	/^  const TargetInstrInfo &TII;$/;"	m	struct:llvm::MSP430RegisterInfo
TII	Target/Mips/MipsDelaySlotFiller.cpp	/^    const TargetInstrInfo *TII;$/;"	m	struct:__anon436::Filler	file:
TII	Target/Mips/MipsLongBranch.cpp	/^    const MipsInstrInfo *TII;$/;"	m	class:__anon437::MipsLongBranch	file:
TII	Target/Mips/MipsSERegisterInfo.h	/^  const MipsSEInstrInfo &TII;$/;"	m	class:llvm::MipsSERegisterInfo
TII	Target/PowerPC/PPCCTRLoops.cpp	/^    const TargetInstrInfo *TII;$/;"	m	struct:__anon325::PPCCTRLoops	file:
TII	Target/PowerPC/PPCHazardRecognizers.h	/^  const TargetInstrInfo &TII;$/;"	m	class:llvm::PPCHazardRecognizer970
TII	Target/PowerPC/PPCRegisterInfo.h	/^  const TargetInstrInfo &TII;$/;"	m	class:llvm::PPCRegisterInfo
TII	Target/Sparc/DelaySlotFiller.cpp	/^    const TargetInstrInfo *TII;$/;"	m	struct:__anon439::Filler	file:
TII	Target/Sparc/SparcRegisterInfo.h	/^  const TargetInstrInfo &TII;$/;"	m	struct:llvm::SparcRegisterInfo
TII	Target/X86/X86FloatingPoint.cpp	/^    const TargetInstrInfo *TII; \/\/ Machine instruction info.$/;"	m	struct:__anon386::FPS	file:
TII	Target/X86/X86RegisterInfo.h	/^  const TargetInstrInfo &TII;$/;"	m	class:llvm::X86RegisterInfo
TII	Target/X86/X86VZeroUpper.cpp	/^    const TargetInstrInfo *TII; \/\/ Machine instruction info.$/;"	m	struct:__anon382::VZeroUpperInserter	file:
TII	Target/XCore/XCoreRegisterInfo.h	/^  const TargetInstrInfo &TII;$/;"	m	struct:llvm::XCoreRegisterInfo
TJI	ExecutionEngine/JIT/JIT.h	/^  TargetJITInfo &TJI;      \/\/ The JITInfo for the target we are compiling to$/;"	m	class:llvm::JIT
TK_Alias	Support/YAMLParser.cpp	/^    TK_Alias,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_Anchor	Support/YAMLParser.cpp	/^    TK_Anchor,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_BlockEnd	Support/YAMLParser.cpp	/^    TK_BlockEnd,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_BlockEntry	Support/YAMLParser.cpp	/^    TK_BlockEntry,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_BlockMappingStart	Support/YAMLParser.cpp	/^    TK_BlockMappingStart,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_BlockSequenceStart	Support/YAMLParser.cpp	/^    TK_BlockSequenceStart,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_DocumentEnd	Support/YAMLParser.cpp	/^    TK_DocumentEnd,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_DocumentStart	Support/YAMLParser.cpp	/^    TK_DocumentStart,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_Error	Support/YAMLParser.cpp	/^    TK_Error, \/\/ Uninitialized token.$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_FlowEntry	Support/YAMLParser.cpp	/^    TK_FlowEntry,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_FlowMappingEnd	Support/YAMLParser.cpp	/^    TK_FlowMappingEnd,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_FlowMappingStart	Support/YAMLParser.cpp	/^    TK_FlowMappingStart,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_FlowSequenceEnd	Support/YAMLParser.cpp	/^    TK_FlowSequenceEnd,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_FlowSequenceStart	Support/YAMLParser.cpp	/^    TK_FlowSequenceStart,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_Key	Support/YAMLParser.cpp	/^    TK_Key,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_Scalar	Support/YAMLParser.cpp	/^    TK_Scalar,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_StreamEnd	Support/YAMLParser.cpp	/^    TK_StreamEnd,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_StreamStart	Support/YAMLParser.cpp	/^    TK_StreamStart,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_Tag	Support/YAMLParser.cpp	/^    TK_Tag$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_TagDirective	Support/YAMLParser.cpp	/^    TK_TagDirective,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_Value	Support/YAMLParser.cpp	/^    TK_Value,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TK_VersionDirective	Support/YAMLParser.cpp	/^    TK_VersionDirective,$/;"	e	enum:llvm::yaml::Token::TokenKind	file:
TLI	Analysis/InstructionSimplify.cpp	/^  const TargetLibraryInfo *TLI;$/;"	m	struct:Query	file:
TLI	Analysis/Lint.cpp	/^    TargetLibraryInfo *TLI;$/;"	m	class:__anon5::Lint	file:
TLI	CodeGen/CodePlacementOpt.cpp	/^    const TargetLowering  *TLI;$/;"	m	class:__anon150::CodePlacementOpt	file:
TLI	CodeGen/DwarfEHPrepare.cpp	/^    const TargetLowering *TLI;$/;"	m	class:__anon138::DwarfEHPrepare	file:
TLI	CodeGen/IfConversion.cpp	/^    const TargetLowering *TLI;$/;"	m	class:__anon99::IfConverter	file:
TLI	CodeGen/MachineBlockPlacement.cpp	/^  const TargetLowering *TLI;$/;"	m	class:__anon107::MachineBlockPlacement	file:
TLI	CodeGen/MachineLICM.cpp	/^    const TargetLowering *TLI;$/;"	m	class:__anon156::MachineLICM	file:
TLI	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    const TargetLowering &TLI;$/;"	m	class:__anon68::DAGCombiner	file:
TLI	CodeGen/SelectionDAG/InstrEmitter.h	/^  const TargetLowering *TLI;$/;"	m	class:llvm::InstrEmitter
TLI	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  const TargetLowering &TLI;$/;"	m	class:__anon67::SelectionDAGLegalize	file:
TLI	CodeGen/SelectionDAG/LegalizeTypes.h	/^  const TargetLowering &TLI;$/;"	m	class:llvm::DAGTypeLegalizer
TLI	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^  const TargetLowering &TLI;$/;"	m	class:__anon72::VectorLegalizer	file:
TLI	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  const TargetLowering *TLI;$/;"	m	class:__anon77::RegReductionPQBase	file:
TLI	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  const TargetLowering &TLI;$/;"	m	class:llvm::SelectionDAGBuilder
TLI	CodeGen/SjLjEHPrepare.cpp	/^    const TargetLowering *TLI;$/;"	m	class:__anon123::SjLjEHPrepare	file:
TLI	CodeGen/StackProtector.cpp	/^    const TargetLowering *TLI;$/;"	m	class:__anon130::StackProtector	file:
TLI	Target/ARM/ARMFastISel.cpp	/^  const TargetLowering &TLI;$/;"	m	class:__anon307::ARMFastISel	file:
TLI	Target/X86/X86SelectionDAGInfo.h	/^  const X86TargetLowering &TLI;$/;"	m	class:llvm::X86SelectionDAGInfo
TLI	Transforms/IPO/GlobalOpt.cpp	/^    TargetLibraryInfo *TLI;$/;"	m	struct:__anon589::GlobalOpt	file:
TLI	Transforms/IPO/GlobalOpt.cpp	/^  const TargetLibraryInfo *TLI;$/;"	m	class:__anon591::Evaluator	file:
TLI	Transforms/InstCombine/InstCombine.h	/^  TargetLibraryInfo *TLI;$/;"	m	class:llvm::InstCombiner
TLI	Transforms/Instrumentation/BoundsChecking.cpp	/^    const TargetLibraryInfo *TLI;$/;"	m	struct:__anon493::BoundsChecking	file:
TLI	Transforms/Scalar/CodeGenPrepare.cpp	/^    const TargetLowering *TLI;$/;"	m	class:__anon525::CodeGenPrepare	file:
TLI	Transforms/Scalar/DeadStoreElimination.cpp	/^    const TargetLibraryInfo *TLI;$/;"	m	struct:__anon552::DSE	file:
TLI	Transforms/Scalar/EarlyCSE.cpp	/^  const TargetLibraryInfo *TLI;$/;"	m	class:__anon566::EarlyCSE	file:
TLI	Transforms/Scalar/GVN.cpp	/^    const TargetLibraryInfo *TLI;$/;"	m	class:__anon537::GVN	file:
TLI	Transforms/Scalar/GlobalMerge.cpp	/^    const TargetLowering *TLI;$/;"	m	class:__anon567::GlobalMerge	file:
TLI	Transforms/Scalar/IndVarSimplify.cpp	/^    TargetLibraryInfo *TLI;$/;"	m	class:__anon495::IndVarSimplify	file:
TLI	Transforms/Scalar/JumpThreading.cpp	/^    TargetLibraryInfo *TLI;$/;"	m	class:__anon542::JumpThreading	file:
TLI	Transforms/Scalar/LICM.cpp	/^    TargetLibraryInfo *TLI;  \/\/ TargetLibraryInfo for constant folding.$/;"	m	struct:__anon568::LICM	file:
TLI	Transforms/Scalar/LoopIdiomRecognize.cpp	/^    TargetLibraryInfo *TLI;$/;"	m	class:__anon543::LoopIdiomRecognize	file:
TLI	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const TargetLowering *const TLI;$/;"	m	class:__anon518::LSRInstance	file:
TLI	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const TargetLowering *const TLI;$/;"	m	class:__anon520::LoopStrengthReduce	file:
TLI	Transforms/Scalar/MemCpyOptimizer.cpp	/^    TargetLibraryInfo *TLI;$/;"	m	class:__anon575::MemCpyOpt	file:
TLI	Transforms/Scalar/SCCP.cpp	/^  const TargetLibraryInfo *TLI;$/;"	m	class:__anon531::SCCPSolver	file:
TLI	Transforms/Scalar/SimplifyLibCalls.cpp	/^    TargetLibraryInfo *TLI;$/;"	m	class:__anon546::SimplifyLibCalls	file:
TLI	Transforms/Scalar/SimplifyLibCalls.cpp	/^  const TargetLibraryInfo *TLI;$/;"	m	class:__anon544::LibCallOptimization	file:
TLI	Transforms/Utils/LowerInvoke.cpp	/^    const TargetLowering *TLI;$/;"	m	class:__anon474::LowerInvoke	file:
TLI	Transforms/Utils/SimplifyLibCalls.cpp	/^  const TargetLibraryInfo *TLI;$/;"	m	class:__anon473::LibCallOptimization	file:
TLI	Transforms/Utils/SimplifyLibCalls.cpp	/^  const TargetLibraryInfo *TLI;$/;"	m	class:llvm::LibCallSimplifierImpl	file:
TLInfo	Target/ARM/ARMTargetMachine.h	/^  ARMTargetLowering   TLInfo;$/;"	m	class:llvm::ARMTargetMachine
TLInfo	Target/ARM/ARMTargetMachine.h	/^  ARMTargetLowering   TLInfo;$/;"	m	class:llvm::ThumbTargetMachine
TLInfo	Target/CellSPU/SPUTargetMachine.h	/^  SPUTargetLowering   TLInfo;$/;"	m	class:llvm::SPUTargetMachine
TLInfo	Target/Hexagon/HexagonTargetMachine.h	/^  HexagonTargetLowering TLInfo;$/;"	m	class:llvm::HexagonTargetMachine
TLInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    MBlazeTargetLowering   TLInfo;$/;"	m	class:llvm::MBlazeTargetMachine
TLInfo	Target/MSP430/MSP430TargetMachine.h	/^  MSP430TargetLowering   TLInfo;$/;"	m	class:llvm::MSP430TargetMachine
TLInfo	Target/Mips/MipsTargetMachine.h	/^  MipsTargetLowering  TLInfo;$/;"	m	class:llvm::MipsTargetMachine
TLInfo	Target/NVPTX/NVPTXTargetMachine.h	/^  NVPTXTargetLowering   TLInfo;$/;"	m	class:llvm::NVPTXTargetMachine
TLInfo	Target/PowerPC/PPCTargetMachine.h	/^  PPCTargetLowering   TLInfo;$/;"	m	class:llvm::PPCTargetMachine
TLInfo	Target/Sparc/SparcTargetMachine.h	/^  SparcTargetLowering TLInfo;$/;"	m	class:llvm::SparcTargetMachine
TLInfo	Target/X86/X86TargetMachine.h	/^  X86TargetLowering TLInfo;$/;"	m	class:llvm::X86_32TargetMachine
TLInfo	Target/X86/X86TargetMachine.h	/^  X86TargetLowering TLInfo;$/;"	m	class:llvm::X86_64TargetMachine
TLInfo	Target/XCore/XCoreTargetMachine.h	/^  XCoreTargetLowering TLInfo;$/;"	m	class:llvm::XCoreTargetMachine
TLInfo	Transforms/Scalar/CodeGenPrepare.cpp	/^    const TargetLibraryInfo *TLInfo;$/;"	m	class:__anon525::CodeGenPrepare	file:
TLLoops	CodeGen/PrologEpilogInserter.h	/^    DenseMap<MachineBasicBlock*, MachineLoop*> TLLoops;$/;"	m	class:llvm::PEI
TLSADDR	Target/X86/X86ISelLowering.h	/^      TLSADDR,$/;"	e	enum:llvm::X86ISD::NodeType
TLSBASEADDR	Target/X86/X86ISelLowering.h	/^      TLSBASEADDR,$/;"	e	enum:llvm::X86ISD::NodeType
TLSCALL	Target/X86/X86ISelLowering.h	/^      TLSCALL,$/;"	e	enum:llvm::X86ISD::NodeType
TLSGD	Target/ARM/ARMConstantPoolValue.h	/^    TLSGD,$/;"	e	enum:llvm::ARMCP::ARMCPModifier
TLSOffset	Target/X86/X86JITInfo.h	/^    char* TLSOffset;$/;"	m	class:llvm::X86JITInfo
TM	CodeGen/DwarfEHPrepare.cpp	/^    const TargetMachine *TM;$/;"	m	class:__anon138::DwarfEHPrepare	file:
TM	CodeGen/GCStrategy.cpp	/^    const TargetMachine *TM;$/;"	m	class:__anon145::GCMachineCodeAnalysis	file:
TM	CodeGen/MachineLICM.cpp	/^    const TargetMachine   *TM;$/;"	m	class:__anon156::MachineLICM	file:
TM	CodeGen/MachineVerifier.cpp	/^    const TargetMachine *TM;$/;"	m	struct:__anon139::MachineVerifier	file:
TM	CodeGen/PeepholeOptimizer.cpp	/^    const TargetMachine   *TM;$/;"	m	class:__anon163::PeepholeOptimizer	file:
TM	CodeGen/RegAllocFast.cpp	/^    const TargetMachine *TM;$/;"	m	class:__anon140::RAFast	file:
TM	CodeGen/RegisterCoalescer.cpp	/^    const TargetMachine* TM;$/;"	m	class:__anon114::RegisterCoalescer	file:
TM	CodeGen/SelectionDAG/InstrEmitter.h	/^  const TargetMachine *TM;$/;"	m	class:llvm::InstrEmitter
TM	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^  const TargetMachine &TM;$/;"	m	class:__anon67::SelectionDAGLegalize	file:
TM	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  const TargetMachine &TM;$/;"	m	class:llvm::SelectionDAGBuilder
TM	CodeGen/VirtRegMap.cpp	/^  const TargetMachine *TM;$/;"	m	class:__anon97::VirtRegRewriter	file:
TM	ExecutionEngine/JIT/JIT.h	/^  TargetMachine &TM;       \/\/ The current target we are compiling to$/;"	m	class:llvm::JIT
TM	ExecutionEngine/MCJIT/MCJIT.h	/^  TargetMachine *TM;$/;"	m	class:llvm::MCJIT
TM	Target/ARM/ARMCodeEmitter.cpp	/^    TargetMachine             &TM;$/;"	m	class:__anon297::ARMCodeEmitter	file:
TM	Target/ARM/ARMFastISel.cpp	/^  const TargetMachine &TM;$/;"	m	class:__anon307::ARMFastISel	file:
TM	Target/ARM/ARMISelDAGToDAG.cpp	/^  ARMBaseTargetMachine &TM;$/;"	m	class:__anon302::ARMDAGToDAGISel	file:
TM	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    const SPUTargetMachine &TM;$/;"	m	class:__anon414::SPUDAGToDAGISel	file:
TM	Target/CellSPU/SPUInstrInfo.h	/^    SPUTargetMachine &TM;$/;"	m	class:llvm::SPUInstrInfo
TM	Target/CellSPU/SPUNopFiller.cpp	/^    TargetMachine &TM;$/;"	m	struct:__anon417::SPUNopFiller	file:
TM	Target/Hexagon/HexagonCallingConvLower.h	/^  const TargetMachine &TM;$/;"	m	class:llvm::Hexagon_CCState
TM	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^  HexagonTargetMachine& TM;$/;"	m	class:__anon400::HexagonDAGToDAGISel	file:
TM	Target/Hexagon/HexagonISelLowering.h	/^    HexagonTargetMachine &TM;$/;"	m	class:llvm::HexagonTargetLowering
TM	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^    TargetMachine &TM;$/;"	m	struct:__anon462::Filler	file:
TM	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^  MBlazeTargetMachine &TM;$/;"	m	class:__anon461::MBlazeDAGToDAGISel	file:
TM	Target/MBlaze/MBlazeInstrInfo.h	/^  MBlazeTargetMachine &TM;$/;"	m	class:llvm::MBlazeInstrInfo
TM	Target/MSP430/MSP430RegisterInfo.h	/^  MSP430TargetMachine &TM;$/;"	m	struct:llvm::MSP430RegisterInfo
TM	Target/Mips/MipsCodeEmitter.cpp	/^  TargetMachine &TM;$/;"	m	class:__anon438::MipsCodeEmitter	file:
TM	Target/Mips/MipsDelaySlotFiller.cpp	/^    TargetMachine &TM;$/;"	m	struct:__anon436::Filler	file:
TM	Target/Mips/MipsISelDAGToDAG.cpp	/^  MipsTargetMachine &TM;$/;"	m	class:__anon435::MipsDAGToDAGISel	file:
TM	Target/Mips/MipsInstrInfo.h	/^  MipsTargetMachine &TM;$/;"	m	class:llvm::MipsInstrInfo
TM	Target/Mips/MipsLongBranch.cpp	/^    const TargetMachine &TM;$/;"	m	class:__anon437::MipsLongBranch	file:
TM	Target/NVPTX/NVPTXInstrInfo.h	/^  NVPTXTargetMachine &TM;$/;"	m	class:llvm::NVPTXInstrInfo
TM	Target/NVPTX/VectorElementize.cpp	/^  NVPTXTargetMachine &TM;$/;"	m	class:__anon316::VectorElementize	file:
TM	Target/PowerPC/PPCCodeEmitter.cpp	/^    TargetMachine &TM;$/;"	m	class:__anon324::PPCCodeEmitter	file:
TM	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    const PPCTargetMachine &TM;$/;"	m	class:__anon331::PPCDAGToDAGISel	file:
TM	Target/PowerPC/PPCInstrInfo.h	/^  PPCTargetMachine &TM;$/;"	m	class:llvm::PPCInstrInfo
TM	Target/PowerPC/PPCJITInfo.h	/^    PPCTargetMachine &TM;$/;"	m	class:llvm::PPCJITInfo
TM	Target/Sparc/DelaySlotFiller.cpp	/^    TargetMachine &TM;$/;"	m	struct:__anon439::Filler	file:
TM	Target/Sparc/FPMover.cpp	/^    TargetMachine &TM;$/;"	m	struct:__anon442::FPMover	file:
TM	Target/Sparc/SparcISelDAGToDAG.cpp	/^  SparcTargetMachine& TM;$/;"	m	class:__anon443::SparcDAGToDAGISel	file:
TM	Target/X86/X86CodeEmitter.cpp	/^    X86TargetMachine    &TM;$/;"	m	class:__anon379::Emitter	file:
TM	Target/X86/X86FrameLowering.h	/^  const X86TargetMachine &TM;$/;"	m	class:llvm::X86FrameLowering
TM	Target/X86/X86InstrInfo.h	/^  X86TargetMachine &TM;$/;"	m	class:llvm::X86InstrInfo
TM	Target/X86/X86JITInfo.h	/^    X86TargetMachine &TM;$/;"	m	class:llvm::X86JITInfo
TM	Target/X86/X86MCInstLower.cpp	/^  const TargetMachine &TM;$/;"	m	class:__anon380::X86MCInstLower	file:
TM	Target/X86/X86RegisterInfo.h	/^  X86TargetMachine &TM;$/;"	m	class:llvm::X86RegisterInfo
TM	Target/XCore/XCoreISelLowering.h	/^    const XCoreTargetMachine &TM;$/;"	m	class:llvm::XCoreTargetLowering
TOC	Target/PowerPC/PPCAsmPrinter.cpp	/^    DenseMap<MCSymbol*, MCSymbol*> TOC;$/;"	m	class:__anon330::PPCAsmPrinter	file:
TOCLabelID	Target/PowerPC/PPCAsmPrinter.cpp	/^    uint64_t TOCLabelID;$/;"	m	class:__anon330::PPCAsmPrinter	file:
TOC_ENTRY	Target/PowerPC/PPCISelLowering.h	/^      TOC_ENTRY,$/;"	e	enum:llvm::PPCISD::NodeType
TOC_RESTORE	Target/PowerPC/PPCISelLowering.h	/^      TOC_RESTORE,$/;"	e	enum:llvm::PPCISD::NodeType
TOF	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  enum TOF {$/;"	g	namespace:llvm::ARMII
TOF	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^  enum TOF {$/;"	g	namespace:llvm::MipsII
TOF	Target/PowerPC/PPC.h	/^  enum TOF {$/;"	g	namespace:llvm::PPCII
TOF	Target/X86/MCTargetDesc/X86BaseInfo.h	/^  enum TOF {$/;"	g	namespace:llvm::X86II
TPInitialize	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^typedef unsigned int(*TPInitialize)(void);$/;"	t	file:
TPNotify	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^typedef unsigned int(*TPNotify)(unsigned int, void*);$/;"	t	file:
TPOFF	Target/ARM/ARMConstantPoolValue.h	/^    TPOFF$/;"	e	enum:llvm::ARMCP::ARMCPModifier
TRI	CodeGen/AggressiveAntiDepBreaker.h	/^    const TargetRegisterInfo *TRI;$/;"	m	class:llvm::AggressiveAntiDepBreaker
TRI	CodeGen/BranchFolding.h	/^    const TargetRegisterInfo *TRI;$/;"	m	class:llvm::BranchFolder
TRI	CodeGen/CriticalAntiDepBreaker.h	/^    const TargetRegisterInfo *TRI;$/;"	m	class:llvm::CriticalAntiDepBreaker
TRI	CodeGen/DeadMachineInstructionElim.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon137::DeadMachineInstructionElim	file:
TRI	CodeGen/EarlyIfConversion.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon91::SSAIfConv	file:
TRI	CodeGen/EarlyIfConversion.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon92::EarlyIfConverter	file:
TRI	CodeGen/ExecutionDepsFix.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon120::ExeDepsFix	file:
TRI	CodeGen/ExpandPostRAPseudos.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	struct:__anon165::ExpandPostRA	file:
TRI	CodeGen/IfConversion.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon99::IfConverter	file:
TRI	CodeGen/InlineSpiller.cpp	/^  const TargetRegisterInfo &TRI;$/;"	m	class:__anon155::InlineSpiller	file:
TRI	CodeGen/InterferenceCache.h	/^  const TargetRegisterInfo *TRI;$/;"	m	class:llvm::InterferenceCache
TRI	CodeGen/LiveDebugVariables.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon153::LDVImpl	file:
TRI	CodeGen/LiveIntervalAnalysis.cpp	/^  const TargetRegisterInfo& TRI;$/;"	m	class:LiveIntervals::HMEditor	file:
TRI	CodeGen/LiveRegMatrix.h	/^  const TargetRegisterInfo *TRI;$/;"	m	class:llvm::LiveRegMatrix
TRI	CodeGen/MachineCSE.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon161::MachineCSE	file:
TRI	CodeGen/MachineCopyPropagation.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon93::MachineCopyPropagation	file:
TRI	CodeGen/MachineLICM.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon156::MachineLICM	file:
TRI	CodeGen/MachineScheduler.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon126::ConvergingScheduler	file:
TRI	CodeGen/MachineSink.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon101::MachineSinking	file:
TRI	CodeGen/MachineTraceMetrics.h	/^  const TargetRegisterInfo *TRI;$/;"	m	class:llvm::MachineTraceMetrics
TRI	CodeGen/MachineVerifier.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	struct:__anon139::MachineVerifier	file:
TRI	CodeGen/ProcessImplicitDefs.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon166::ProcessImplicitDefs	file:
TRI	CodeGen/RegAllocBase.h	/^  const TargetRegisterInfo *TRI;$/;"	m	class:llvm::RegAllocBase
TRI	CodeGen/RegAllocFast.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon140::RAFast	file:
TRI	CodeGen/RegisterCoalescer.cpp	/^    const TargetRegisterInfo* TRI;$/;"	m	class:__anon114::RegisterCoalescer	file:
TRI	CodeGen/RegisterCoalescer.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon115::JoinVals	file:
TRI	CodeGen/RegisterCoalescer.h	/^    const TargetRegisterInfo &TRI;$/;"	m	class:llvm::CoalescerPair
TRI	CodeGen/SelectionDAG/InstrEmitter.h	/^  const TargetRegisterInfo *TRI;$/;"	m	class:llvm::InstrEmitter
TRI	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon77::RegReductionPQBase	file:
TRI	CodeGen/SplitKit.h	/^  const TargetRegisterInfo &TRI;$/;"	m	class:llvm::SplitEditor
TRI	CodeGen/TailDuplication.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon167::TailDuplicatePass	file:
TRI	CodeGen/TwoAddressInstructionPass.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon104::TwoAddressInstructionPass	file:
TRI	CodeGen/VirtRegMap.cpp	/^  const TargetRegisterInfo *TRI;$/;"	m	class:__anon97::VirtRegRewriter	file:
TRI	CodeGen/VirtRegMap.h	/^    const TargetRegisterInfo *TRI;$/;"	m	class:llvm::VirtRegMap
TRI	Target/ARM/ARMExpandPseudoInsts.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon311::ARMExpandPseudo	file:
TRI	Target/ARM/ARMHazardRecognizer.h	/^  const ARMBaseRegisterInfo &TRI;$/;"	m	class:llvm::ARMHazardRecognizer
TRI	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	struct:__anon303::ARMLoadStoreOpt	file:
TRI	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	struct:__anon304::ARMPreAllocLoadStoreOpt	file:
TRI	Target/ARM/MLxExpansionPass.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	struct:__anon301::MLxExpansion	file:
TRI	Target/ARM/Thumb2ITBlockPass.cpp	/^    const TargetRegisterInfo *TRI;$/;"	m	class:__anon306::Thumb2ITBlockPass	file:
TRI	Target/Hexagon/HexagonCallingConvLower.h	/^  const TargetRegisterInfo &TRI;$/;"	m	class:llvm::Hexagon_CCState
TRI	Target/Hexagon/HexagonMachineScheduler.h	/^  const TargetRegisterInfo *TRI;$/;"	m	class:llvm::ConvergingVLIWScheduler
TRUE	Target/X86/Disassembler/X86DisassemblerDecoder.c	25;"	d	file:
TReg	CodeGen/EarlyIfConversion.cpp	/^    unsigned TReg, FReg;$/;"	m	struct:__anon91::SSAIfConv::PHIInfo	file:
TSInfo	Target/ARM/ARMTargetMachine.h	/^  ARMSelectionDAGInfo TSInfo;$/;"	m	class:llvm::ARMTargetMachine
TSInfo	Target/ARM/ARMTargetMachine.h	/^  ARMSelectionDAGInfo TSInfo;$/;"	m	class:llvm::ThumbTargetMachine
TSInfo	Target/CellSPU/SPUTargetMachine.h	/^  SPUSelectionDAGInfo TSInfo;$/;"	m	class:llvm::SPUTargetMachine
TSInfo	Target/Hexagon/HexagonTargetMachine.h	/^  HexagonSelectionDAGInfo TSInfo;$/;"	m	class:llvm::HexagonTargetMachine
TSInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    MBlazeSelectionDAGInfo TSInfo;$/;"	m	class:llvm::MBlazeTargetMachine
TSInfo	Target/MSP430/MSP430TargetMachine.h	/^  MSP430SelectionDAGInfo TSInfo;$/;"	m	class:llvm::MSP430TargetMachine
TSInfo	Target/Mips/MipsTargetMachine.h	/^  MipsSelectionDAGInfo TSInfo;$/;"	m	class:llvm::MipsTargetMachine
TSInfo	Target/NVPTX/NVPTXTargetMachine.h	/^  TargetSelectionDAGInfo   TSInfo;$/;"	m	class:llvm::NVPTXTargetMachine
TSInfo	Target/PowerPC/PPCTargetMachine.h	/^  PPCSelectionDAGInfo TSInfo;$/;"	m	class:llvm::PPCTargetMachine
TSInfo	Target/Sparc/SparcTargetMachine.h	/^  SparcSelectionDAGInfo TSInfo;$/;"	m	class:llvm::SparcTargetMachine
TSInfo	Target/X86/X86TargetMachine.h	/^  X86SelectionDAGInfo TSInfo;$/;"	m	class:llvm::X86_32TargetMachine
TSInfo	Target/X86/X86TargetMachine.h	/^  X86SelectionDAGInfo TSInfo;$/;"	m	class:llvm::X86_64TargetMachine
TSInfo	Target/XCore/XCoreTargetMachine.h	/^  XCoreSelectionDAGInfo TSInfo;$/;"	m	class:llvm::XCoreTargetMachine
TS_MinInstrCount	CodeGen/MachineTraceMetrics.h	/^    TS_MinInstrCount,$/;"	e	enum:llvm::MachineTraceMetrics::Strategy
TS_NumStrategies	CodeGen/MachineTraceMetrics.h	/^    TS_NumStrategies$/;"	e	enum:llvm::MachineTraceMetrics::Strategy
TWOBYTE	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  TWOBYTE       = 1,$/;"	e	enum:__anon364
TWOBYTE_STR	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	39;"	d
TWOBYTE_SYM	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	30;"	d
TYPEKEYWORD	AsmParser/LLLexer.cpp	582;"	d	file:
TYPEKEYWORD	AsmParser/LLLexer.cpp	595;"	d	file:
TYPES	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  TYPES$/;"	e	enum:__anon367
TYPES	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	263;"	d
TYPE_FUNCTION	Target/X86/X86JITInfo.cpp	64;"	d	file:
TYPE_FUNCTION	Target/X86/X86JITInfo.cpp	67;"	d	file:
TYPE_max	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  TYPE_max$/;"	e	enum:__anon367
TableAllocator	Transforms/Scalar/GVN.cpp	/^    BumpPtrAllocator TableAllocator;$/;"	m	class:__anon537::GVN	file:
TableEntry	Target/X86/X86FloatingPoint.cpp	/^  struct TableEntry {$/;"	s	namespace:__anon388	file:
TableGenMain	TableGen/Main.cpp	/^int TableGenMain(char *argv0, TableGenMainFn *MainFn) {$/;"	f	namespace:llvm
TableGenStringKey	TableGen/Record.cpp	/^  TableGenStringKey(const char *str) : data(str) {}$/;"	f	class:llvm::TableGenStringKey
TableGenStringKey	TableGen/Record.cpp	/^  TableGenStringKey(const std::string &str) : data(str) {}$/;"	f	class:llvm::TableGenStringKey
TableGenStringKey	TableGen/Record.cpp	/^class TableGenStringKey {$/;"	c	namespace:llvm	file:
TableHeader	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    TableHeader (uint32_t data_len) :$/;"	f	struct:llvm::DwarfAccelTable::TableHeader
TableHeader	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  struct TableHeader {$/;"	s	class:llvm::DwarfAccelTable
TableHeaderData	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    TableHeaderData(ArrayRef<Atom> AtomList, uint32_t offset = 0)$/;"	f	struct:llvm::DwarfAccelTable::TableHeaderData
TableHeaderData	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  struct TableHeaderData {$/;"	s	class:llvm::DwarfAccelTable
TableIsSorted	Target/X86/X86FloatingPoint.cpp	/^static bool TableIsSorted(const TableEntry *Table, unsigned NumEntries) {$/;"	f	file:
Tag	Analysis/LazyValueInfo.cpp	/^  LatticeValueTy Tag;$/;"	m	class:__anon18::LVILatticeVal	file:
Tag	CodeGen/AsmPrinter/DIE.h	/^    uint16_t Tag;$/;"	m	class:llvm::DIEAbbrev
Tag	CodeGen/InterferenceCache.h	/^    unsigned Tag;$/;"	m	class:llvm::InterferenceCache::Entry
Tag	CodeGen/InterferenceCache.h	/^    unsigned Tag;$/;"	m	struct:llvm::InterferenceCache::BlockInterference
Tag	CodeGen/LiveIntervalUnion.h	/^    unsigned Tag, UserTag;$/;"	m	class:llvm::LiveIntervalUnion::Query
Tag	CodeGen/LiveIntervalUnion.h	/^  unsigned Tag;           \/\/ unique tag for current contents.$/;"	m	class:llvm::LiveIntervalUnion
Tag	DebugInfo/DWARFAbbreviationDeclaration.h	/^  uint32_t Tag;$/;"	m	class:llvm::DWARFAbbreviationDeclaration
Tag	Target/ARM/ARMAsmPrinter.cpp	/^      unsigned Tag;$/;"	m	struct:__anon313::ObjectAttributeEmitter::AttributeItemType	file:
TagString	Support/Dwarf.cpp	/^const char *llvm::dwarf::TagString(unsigned Tag) {$/;"	f	class:llvm::dwarf
TagType	MC/MCDisassembler/Disassembler.h	/^  int TagType;$/;"	m	class:llvm::LLVMDisasmContext
Tail	CodeGen/EarlyIfConversion.cpp	/^  MachineBasicBlock *Tail;$/;"	m	class:__anon91::SSAIfConv	file:
Tail	CodeGen/MachineTraceMetrics.h	/^    unsigned Tail;$/;"	m	struct:llvm::MachineTraceMetrics::TraceBlockInfo
TailCall	Target/Mips/MipsISelLowering.h	/^      TailCall,$/;"	e	enum:llvm::MipsISD::NodeType
TailCallArgumentInfo	Target/PowerPC/PPCISelLowering.cpp	/^  TailCallArgumentInfo() : FrameIdx(0) {}$/;"	f	struct:__anon328::TailCallArgumentInfo
TailCallArgumentInfo	Target/PowerPC/PPCISelLowering.cpp	/^struct TailCallArgumentInfo {$/;"	s	namespace:__anon328	file:
TailCallElim	Transforms/Scalar/TailRecursionElimination.cpp	/^    TailCallElim() : FunctionPass(ID) {$/;"	f	struct:__anon511::TailCallElim
TailCallElim	Transforms/Scalar/TailRecursionElimination.cpp	/^  struct TailCallElim : public FunctionPass {$/;"	s	namespace:__anon511	file:
TailCallReturnAddrDelta	Target/X86/X86MachineFunctionInfo.h	/^  int TailCallReturnAddrDelta;$/;"	m	class:llvm::X86MachineFunctionInfo
TailCallSPDelta	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int TailCallSPDelta;$/;"	m	class:llvm::PPCFunctionInfo
TailDuplicate	CodeGen/TailDuplication.cpp	/^TailDuplicatePass::TailDuplicate(MachineBasicBlock *TailBB,$/;"	f	class:TailDuplicatePass
TailDuplicateAndUpdate	CodeGen/TailDuplication.cpp	/^TailDuplicatePass::TailDuplicateAndUpdate(MachineBasicBlock *MBB,$/;"	f	class:TailDuplicatePass
TailDuplicateBlocks	CodeGen/TailDuplication.cpp	/^bool TailDuplicatePass::TailDuplicateBlocks(MachineFunction &MF) {$/;"	f	class:TailDuplicatePass
TailDuplicateID	CodeGen/TailDuplication.cpp	/^char &llvm::TailDuplicateID = TailDuplicatePass::ID;$/;"	m	class:llvm	file:
TailDuplicatePass	CodeGen/TailDuplication.cpp	/^    explicit TailDuplicatePass() :$/;"	f	class:__anon167::TailDuplicatePass
TailDuplicatePass	CodeGen/TailDuplication.cpp	/^  class TailDuplicatePass : public MachineFunctionPass {$/;"	c	namespace:__anon167	file:
TailMergeBlocks	CodeGen/BranchFolding.cpp	/^bool BranchFolder::TailMergeBlocks(MachineFunction &MF) {$/;"	f	class:BranchFolder
TailStartPos	CodeGen/BranchFolding.h	/^      MachineBasicBlock::iterator TailStartPos;$/;"	m	class:llvm::BranchFolder::SameTailElt
TargetABI	Target/ARM/ARMSubtarget.h	/^  } TargetABI;$/;"	m	class:llvm::ARMSubtarget	typeref:enum:llvm::ARMSubtarget::__anon299
TargetArraySortFn	Support/TargetRegistry.cpp	/^static int TargetArraySortFn(const void *LHS, const void *RHS) {$/;"	f	file:
TargetBB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *TargetBB;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestCase
TargetELFWriterInfo	Target/TargetELFWriterInfo.cpp	/^TargetELFWriterInfo::TargetELFWriterInfo(bool is64Bit_, bool isLittleEndian_) :$/;"	f	class:TargetELFWriterInfo
TargetIntrinsicInfo	Target/TargetIntrinsicInfo.cpp	/^TargetIntrinsicInfo::TargetIntrinsicInfo() {$/;"	f	class:TargetIntrinsicInfo
TargetLibraryInfo	Target/TargetLibraryInfo.cpp	/^TargetLibraryInfo::TargetLibraryInfo() : ImmutablePass(ID) {$/;"	f	class:TargetLibraryInfo
TargetLibraryInfo	Target/TargetLibraryInfo.cpp	/^TargetLibraryInfo::TargetLibraryInfo(const TargetLibraryInfo &TLI)$/;"	f	class:TargetLibraryInfo
TargetLibraryInfo	Target/TargetLibraryInfo.cpp	/^TargetLibraryInfo::TargetLibraryInfo(const Triple &T) : ImmutablePass(ID) {$/;"	f	class:TargetLibraryInfo
TargetLowering	CodeGen/SelectionDAG/TargetLowering.cpp	/^TargetLowering::TargetLowering(const TargetMachine &tm,$/;"	f	class:TargetLowering
TargetMachine	Target/TargetMachine.cpp	/^TargetMachine::TargetMachine(const Target &T,$/;"	f	class:TargetMachine
TargetMaterializeAlloca	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::TargetMaterializeAlloca(const AllocaInst *AI) {$/;"	f	class:ARMFastISel
TargetMaterializeAlloca	Target/X86/X86FastISel.cpp	/^unsigned X86FastISel::TargetMaterializeAlloca(const AllocaInst *C) {$/;"	f	class:X86FastISel
TargetMaterializeConstant	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::TargetMaterializeConstant(const Constant *C) {$/;"	f	class:ARMFastISel
TargetMaterializeConstant	Target/X86/X86FastISel.cpp	/^unsigned X86FastISel::TargetMaterializeConstant(const Constant *C) {$/;"	f	class:X86FastISel
TargetMaterializeFloatZero	Target/X86/X86FastISel.cpp	/^unsigned X86FastISel::TargetMaterializeFloatZero(const ConstantFP *CF) {$/;"	f	class:X86FastISel
TargetName	Target/NVPTX/NVPTXSubtarget.h	/^  std::string TargetName;$/;"	m	class:llvm::NVPTXSubtarget
TargetObjectWriter	MC/ELFObjectWriter.cpp	/^    llvm::OwningPtr<MCELFObjectTargetWriter> TargetObjectWriter;$/;"	m	class:__anon225::ELFObjectWriter	file:
TargetObjectWriter	MC/WinCOFFObjectWriter.cpp	/^  llvm::OwningPtr<MCWinCOFFObjectTargetWriter> TargetObjectWriter;$/;"	m	class:__anon222::WinCOFFObjectWriter	file:
TargetPassConfig	CodeGen/Passes.cpp	/^TargetPassConfig::TargetPassConfig()$/;"	f	class:TargetPassConfig
TargetPassConfig	CodeGen/Passes.cpp	/^TargetPassConfig::TargetPassConfig(TargetMachine *tm, PassManagerBase &pm)$/;"	f	class:TargetPassConfig
TargetPasses	CodeGen/Passes.cpp	/^  DenseMap<AnalysisID,AnalysisID> TargetPasses;$/;"	m	class:llvm::PassConfigImpl	file:
TargetRegisterInfo	Target/TargetRegisterInfo.cpp	/^TargetRegisterInfo::TargetRegisterInfo(const TargetRegisterInfoDesc *ID,$/;"	f	class:TargetRegisterInfo
TargetSelectInstruction	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::TargetSelectInstruction(const Instruction *I) {$/;"	f	class:ARMFastISel
TargetSelectInstruction	Target/X86/X86FastISel.cpp	/^X86FastISel::TargetSelectInstruction(const Instruction *I)  {$/;"	f	class:X86FastISel
TargetSelectionDAGInfo	CodeGen/SelectionDAG/TargetSelectionDAGInfo.cpp	/^TargetSelectionDAGInfo::TargetSelectionDAGInfo(const TargetMachine &TM)$/;"	f	class:TargetSelectionDAGInfo
TargetSubtargetInfo	Target/TargetSubtargetInfo.cpp	/^TargetSubtargetInfo::TargetSubtargetInfo() {}$/;"	f	class:TargetSubtargetInfo
TargetSupportsJumpTables	Transforms/Scalar/CodeGenPrepare.cpp	/^static bool TargetSupportsJumpTables(const TargetLowering &TLI) {$/;"	f	file:
TargetTransformInfo	VMCore/TargetTransformInfo.cpp	/^TargetTransformInfo::TargetTransformInfo() : ImmutablePass(ID) {$/;"	f	class:TargetTransformInfo
TargetTriple	Target/ARM/ARMSubtarget.h	/^  Triple TargetTriple;$/;"	m	class:llvm::ARMSubtarget
TargetTriple	Target/PowerPC/PPCSubtarget.h	/^  Triple TargetTriple;$/;"	m	class:llvm::PPCSubtarget
TargetTriple	Target/X86/X86Subtarget.h	/^  Triple TargetTriple;$/;"	m	class:llvm::X86Subtarget
TargetType	Target/ARM/ARMSubtarget.h	/^  } TargetType;$/;"	m	class:llvm::ARMSubtarget	typeref:enum:llvm::ARMSubtarget::__anon298
TemplateArgs	TableGen/TGParser.cpp	/^  std::vector<Init*> TemplateArgs;$/;"	m	struct:llvm::SubClassReference	file:
TemplateArgs	TableGen/TGParser.cpp	/^  std::vector<Init*> TemplateArgs;$/;"	m	struct:llvm::SubMultiClassReference	file:
TenPercentVectorBonus	Analysis/InlineCost.cpp	/^  int FiftyPercentVectorBonus, TenPercentVectorBonus;$/;"	m	class:__anon28::CallAnalyzer	file:
Terminator	Object/Archive.cpp	/^  char Terminator[2];$/;"	m	struct:__anon228::ArchiveMemberHeader	file:
TextAttribute	Target/ARM/ARMAsmPrinter.cpp	/^        TextAttribute$/;"	e	enum:__anon313::ObjectAttributeEmitter::AttributeItemType::__anon314	file:
TextSectionSym	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *DwarfStrSectionSym, *TextSectionSym, *DwarfDebugRangeSectionSym;$/;"	m	class:llvm::DwarfDebug
Tgt	MC/MCDisassembler/EDDisassembler.h	/^  const llvm::Target *Tgt;$/;"	m	struct:llvm::EDDisassembler
TgtTriple	MC/MCDisassembler/EDDisassembler.h	/^  Triple TgtTriple;$/;"	m	struct:llvm::EDDisassembler
TheCondStack	MC/MCParser/AsmParser.cpp	/^  std::vector<AsmCond> TheCondStack;$/;"	m	class:__anon211::AsmParser	file:
TheCondState	MC/MCParser/AsmParser.cpp	/^  AsmCond TheCondState;$/;"	m	class:__anon211::AsmParser	file:
TheDIE	CodeGen/AsmPrinter/DwarfDebug.h	/^  DIE *TheDIE;                       \/\/ Variable DIE.$/;"	m	class:llvm::DbgVariable
TheFalseVal	VMCore/LLVMContextImpl.h	/^  ConstantInt *TheFalseVal;$/;"	m	class:llvm::LLVMContextImpl
TheFunction	VMCore/AsmWriter.cpp	/^  const Function* TheFunction;$/;"	m	class:__anon612::SlotTracker	file:
TheInterpreter	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static Interpreter *TheInterpreter;$/;"	v	file:
TheJIT	ExecutionEngine/JIT/JITEmitter.cpp	/^    JIT *TheJIT;$/;"	m	class:__anon182::JITEmitter	file:
TheJIT	ExecutionEngine/JIT/JITEmitter.cpp	/^    JIT *TheJIT;$/;"	m	class:__anon182::JITResolver	file:
TheJIT	ExecutionEngine/JIT/JITEmitter.cpp	/^    JIT *TheJIT;$/;"	m	class:__anon182::JITResolverState	file:
TheLoop	Transforms/Vectorize/LoopVectorize.cpp	/^  Loop *TheLoop;$/;"	m	class:__anon605::LoopVectorizationLegality	file:
TheMacro	MC/MCParser/AsmParser.cpp	/^  const Macro *TheMacro;$/;"	m	struct:__anon211::MacroInstantiation	file:
TheMips64Target	Target/Mips/TargetInfo/MipsTargetInfo.cpp	/^Target llvm::TheMips64Target, llvm::TheMips64elTarget;$/;"	m	class:llvm	file:
TheMips64elTarget	Target/Mips/TargetInfo/MipsTargetInfo.cpp	/^Target llvm::TheMips64Target, llvm::TheMips64elTarget;$/;"	m	class:llvm	file:
TheModule	Bitcode/Reader/BitcodeReader.h	/^  Module *TheModule;$/;"	m	class:llvm::BitcodeReader
TheModule	Target/CppBackend/CPPBackend.cpp	/^    const Module *TheModule;$/;"	m	class:__anon412::CppWriter	file:
TheModule	VMCore/AsmWriter.cpp	/^  const Module *TheModule;$/;"	m	class:__anon613::AssemblyWriter	file:
TheModule	VMCore/AsmWriter.cpp	/^  const Module* TheModule;$/;"	m	class:__anon612::SlotTracker	file:
TheNVPTXTarget64	Target/NVPTX/TargetInfo/NVPTXTargetInfo.cpp	/^Target llvm::TheNVPTXTarget64;$/;"	m	class:llvm	file:
ThePair	Transforms/Scalar/JumpThreading.cpp	/^      std::pair<Value*, BasicBlock*> ThePair;$/;"	m	struct:__anon542::JumpThreading::RecursionSetRemover	file:
TheSet	Transforms/Scalar/JumpThreading.cpp	/^      DenseSet<std::pair<Value*, BasicBlock*> > &TheSet;$/;"	m	struct:__anon542::JumpThreading::RecursionSetRemover	file:
TheSparcV9Target	Target/Sparc/TargetInfo/SparcTargetInfo.cpp	/^Target llvm::TheSparcV9Target;$/;"	m	class:llvm	file:
TheStores	Transforms/Scalar/MemCpyOptimizer.cpp	/^  SmallVector<Instruction*, 16> TheStores;$/;"	m	struct:__anon573::MemsetRange	file:
TheTarget	MC/MCDisassembler/Disassembler.h	/^  const Target *TheTarget;$/;"	m	class:llvm::LLVMDisasmContext
TheTarget	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^const Target &TheTarget;$/;"	m	class:__anon320::PPCAsmBackend	file:
TheTimeInfo	VMCore/PassManager.cpp	/^static TimingInfo *TheTimeInfo;$/;"	v	file:
TheTrueVal	VMCore/LLVMContextImpl.h	/^  ConstantInt *TheTrueVal;$/;"	m	class:llvm::LLVMContextImpl
ThisAllocated	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    unsigned ThisAllocated : 1;$/;"	m	struct:__anon189::MemoryRangeHeader	file:
ThisBB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *ThisBB;$/;"	m	struct:llvm::SelectionDAGBuilder::BitTestCase
ThisBB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *ThisBB;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBlock
ThisInstInfo	MC/MCDisassembler/EDInst.h	/^  const llvm::EDInstInfo *ThisInstInfo;$/;"	m	struct:llvm::EDInst
ThreadBinOpOverPHI	Analysis/InstructionSimplify.cpp	/^static Value *ThreadBinOpOverPHI(unsigned Opcode, Value *LHS, Value *RHS,$/;"	f	file:
ThreadBinOpOverSelect	Analysis/InstructionSimplify.cpp	/^static Value *ThreadBinOpOverSelect(unsigned Opcode, Value *LHS, Value *RHS,$/;"	f	file:
ThreadCallback	Support/Threading.cpp	/^static unsigned __stdcall ThreadCallback(void *param) {$/;"	f	file:
ThreadCmpOverPHI	Analysis/InstructionSimplify.cpp	/^static Value *ThreadCmpOverPHI(CmpInst::Predicate Pred, Value *LHS, Value *RHS,$/;"	f	file:
ThreadCmpOverSelect	Analysis/InstructionSimplify.cpp	/^static Value *ThreadCmpOverSelect(CmpInst::Predicate Pred, Value *LHS,$/;"	f	file:
ThreadEdge	Transforms/Scalar/JumpThreading.cpp	/^bool JumpThreading::ThreadEdge(BasicBlock *BB,$/;"	f	class:JumpThreading
ThreadInfo	Support/Threading.cpp	/^struct ThreadInfo {$/;"	s	file:
ThreadLocalImpl	Support/ThreadLocal.cpp	/^ThreadLocalImpl::ThreadLocalImpl() { }$/;"	f	class:llvm::ThreadLocalImpl
ThreadPointer	Target/Mips/MipsISelLowering.h	/^      ThreadPointer,$/;"	e	enum:llvm::MipsISD::NodeType
ThreadSanitizer	Transforms/Instrumentation/ThreadSanitizer.cpp	/^ThreadSanitizer::ThreadSanitizer()$/;"	f	class:ThreadSanitizer
ThreadSanitizer	Transforms/Instrumentation/ThreadSanitizer.cpp	/^struct ThreadSanitizer : public FunctionPass {$/;"	s	namespace:__anon486	file:
ThreadStack	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^} ThreadStack, *pThreadStack;$/;"	t	typeref:struct:__anon195	file:
ThreeDNow	Target/X86/X86Subtarget.h	/^    NoThreeDNow, ThreeDNow, ThreeDNowA$/;"	e	enum:llvm::X86Subtarget::X863DNowEnum
ThreeDNowA	Target/X86/X86Subtarget.h	/^    NoThreeDNow, ThreeDNow, ThreeDNowA$/;"	e	enum:llvm::X86Subtarget::X863DNowEnum
Threshold	Analysis/CaptureTracking.cpp	/^static int const Threshold = 20;$/;"	v	file:
Threshold	Analysis/InlineCost.cpp	/^  int Threshold;$/;"	m	class:__anon28::CallAnalyzer	file:
ThroughBlocks	CodeGen/SplitKit.h	/^  BitVector ThroughBlocks;$/;"	m	class:llvm::SplitAnalysis
Thumb1FrameLowering	Target/ARM/Thumb1FrameLowering.h	/^  explicit Thumb1FrameLowering(const ARMSubtarget &sti)$/;"	f	class:llvm::Thumb1FrameLowering
Thumb1FrameLowering	Target/ARM/Thumb1FrameLowering.h	/^class Thumb1FrameLowering : public ARMFrameLowering {$/;"	c	namespace:llvm
Thumb1InstrInfo	Target/ARM/Thumb1InstrInfo.cpp	/^Thumb1InstrInfo::Thumb1InstrInfo(const ARMSubtarget &STI)$/;"	f	class:Thumb1InstrInfo
Thumb1InstrInfo	Target/ARM/Thumb1InstrInfo.h	/^class Thumb1InstrInfo : public ARMBaseInstrInfo {$/;"	c	namespace:llvm
Thumb1RegisterInfo	Target/ARM/Thumb1RegisterInfo.cpp	/^Thumb1RegisterInfo::Thumb1RegisterInfo(const ARMBaseInstrInfo &tii,$/;"	f	class:Thumb1RegisterInfo
Thumb1RegisterInfo	Target/ARM/Thumb1RegisterInfo.h	/^struct Thumb1RegisterInfo : public ARMBaseRegisterInfo {$/;"	s	namespace:llvm
Thumb2DSP	Target/ARM/ARMSubtarget.h	/^  bool Thumb2DSP;$/;"	m	class:llvm::ARMSubtarget
Thumb2ITBlockPass	Target/ARM/Thumb2ITBlockPass.cpp	/^    Thumb2ITBlockPass() : MachineFunctionPass(ID) {}$/;"	f	class:__anon306::Thumb2ITBlockPass
Thumb2ITBlockPass	Target/ARM/Thumb2ITBlockPass.cpp	/^  class Thumb2ITBlockPass : public MachineFunctionPass {$/;"	c	namespace:__anon306	file:
Thumb2InstrInfo	Target/ARM/Thumb2InstrInfo.cpp	/^Thumb2InstrInfo::Thumb2InstrInfo(const ARMSubtarget &STI)$/;"	f	class:Thumb2InstrInfo
Thumb2InstrInfo	Target/ARM/Thumb2InstrInfo.h	/^class Thumb2InstrInfo : public ARMBaseInstrInfo {$/;"	c	namespace:llvm
Thumb2RegisterInfo	Target/ARM/Thumb2RegisterInfo.cpp	/^Thumb2RegisterInfo::Thumb2RegisterInfo(const ARMBaseInstrInfo &tii,$/;"	f	class:Thumb2RegisterInfo
Thumb2RegisterInfo	Target/ARM/Thumb2RegisterInfo.h	/^struct Thumb2RegisterInfo : public ARMBaseRegisterInfo {$/;"	s	namespace:llvm
Thumb2SizeReduce	Target/ARM/Thumb2SizeReduction.cpp	/^  class Thumb2SizeReduce : public MachineFunctionPass {$/;"	c	namespace:__anon300	file:
Thumb2SizeReduce	Target/ARM/Thumb2SizeReduction.cpp	/^Thumb2SizeReduce::Thumb2SizeReduce() : MachineFunctionPass(ID) {$/;"	f	class:Thumb2SizeReduce
ThumbArithFlagSetting	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ThumbArithFlagSetting = 1 << 18,$/;"	e	enum:llvm::ARMII::__anon288
ThumbAsmLexer	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  ThumbAsmLexer(const Target &T, const MCRegisterInfo &MRI,const MCAsmInfo &MAI)$/;"	f	class:__anon258::ThumbAsmLexer
ThumbAsmLexer	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^class ThumbAsmLexer : public ARMBaseAsmLexer {$/;"	c	namespace:__anon258	file:
ThumbDisassembler	Target/ARM/Disassembler/ARMDisassembler.cpp	/^  ThumbDisassembler(const MCSubtargetInfo &STI) :$/;"	f	class:__anon291::ThumbDisassembler
ThumbDisassembler	Target/ARM/Disassembler/ARMDisassembler.cpp	/^class ThumbDisassembler : public MCDisassembler {$/;"	c	namespace:__anon291	file:
ThumbFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    ThumbFrm      = 25 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
ThumbTargetMachine	Target/ARM/ARMTargetMachine.cpp	/^ThumbTargetMachine::ThumbTargetMachine(const Target &T, StringRef TT,$/;"	f	class:ThumbTargetMachine
ThumbTargetMachine	Target/ARM/ARMTargetMachine.h	/^class ThumbTargetMachine : public ARMBaseTargetMachine {$/;"	c	namespace:llvm
TidyLandingPads	CodeGen/MachineModuleInfo.cpp	/^void MachineModuleInfo::TidyLandingPads(DenseMap<MCSymbol*, uintptr_t> *LPMap) {$/;"	f	class:MachineModuleInfo
TiedMax	CodeGen/MachineInstr.cpp	/^const unsigned TiedMax = 15;$/;"	v
TiedOperandMap	CodeGen/TwoAddressInstructionPass.cpp	/^    typedef SmallDenseMap<unsigned, TiedPairList> TiedOperandMap;$/;"	t	class:__anon104::TwoAddressInstructionPass	file:
TiedPairList	CodeGen/TwoAddressInstructionPass.cpp	/^    typedef SmallVector<std::pair<unsigned, unsigned>, 4> TiedPairList;$/;"	t	class:__anon104::TwoAddressInstructionPass	file:
TimePassesIsEnabled	VMCore/PassManager.cpp	/^bool llvm::TimePassesIsEnabled = false;$/;"	m	class:llvm	file:
TimerGroup	Support/Timer.cpp	/^TimerGroup::TimerGroup(StringRef name)$/;"	f	class:TimerGroup
TimerGroupList	Support/Timer.cpp	/^static TimerGroup *TimerGroupList = 0;$/;"	v	file:
TimerGroupName	CodeGen/RegAllocBase.cpp	/^const char *RegAllocBase::TimerGroupName = "Register Allocation";$/;"	m	class:RegAllocBase	file:
TimerGroupName	CodeGen/RegAllocBase.h	/^  static const char *TimerGroupName;$/;"	m	class:llvm::RegAllocBase
TimerLock	Support/Timer.cpp	/^static ManagedStatic<sys::SmartMutex<true> > TimerLock;$/;"	v	file:
TimingData	VMCore/PassManager.cpp	/^  DenseMap<Pass*, Timer*> TimingData;$/;"	m	class:__anon615::TimingInfo	file:
TimingInfo	VMCore/PassManager.cpp	/^  TimingInfo() : TG("... Pass execution timing report ...") {}$/;"	f	class:__anon615::TimingInfo
TimingInfo	VMCore/PassManager.cpp	/^class TimingInfo {$/;"	c	namespace:__anon615	file:
TimingInfoMutex	VMCore/PassManager.cpp	/^static ManagedStatic<sys::SmartMutex<true> > TimingInfoMutex;$/;"	m	namespace:__anon615	file:
ToAscii	Transforms/Scalar/SimplifyLibCalls.cpp	/^    ToAsciiOpt ToAscii;$/;"	m	class:__anon546::SimplifyLibCalls	file:
ToAsciiOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct ToAsciiOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
ToFree	VMCore/PassRegistry.cpp	/^  std::vector<const PassInfo*> ToFree;$/;"	m	struct:__anon607::PassRegistryImpl	file:
ToHeader	Object/Archive.cpp	/^static const ArchiveMemberHeader *ToHeader(const char *base) {$/;"	f	file:
ToggleFeature	MC/MCSubtargetInfo.cpp	/^uint64_t MCSubtargetInfo::ToggleFeature(StringRef FS) {$/;"	f	class:MCSubtargetInfo
ToggleFeature	MC/MCSubtargetInfo.cpp	/^uint64_t MCSubtargetInfo::ToggleFeature(uint64_t FB) {$/;"	f	class:MCSubtargetInfo
ToggleFeature	MC/SubtargetFeature.cpp	/^SubtargetFeatures::ToggleFeature(uint64_t Bits, const StringRef Feature,$/;"	f	class:SubtargetFeatures
ToggleKillFlag	CodeGen/PostRASchedulerList.cpp	/^bool SchedulePostRATDList::ToggleKillFlag(MachineInstr *MI,$/;"	f	class:SchedulePostRATDList
Tok	Support/YAMLParser.cpp	/^  TokenQueueT::iterator Tok;$/;"	m	struct:__anon244::SimpleKey	file:
Tok	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } Tok;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon270	file:
Tok	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    } Tok;$/;"	m	union:__anon446::MBlazeOperand::__anon447	typeref:struct:__anon446::MBlazeOperand::__anon447::__anon448	file:
Tok	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    } Tok;$/;"	m	union:__anon423::MipsOperand::__anon424	typeref:struct:__anon423::MipsOperand::__anon424::__anon425	file:
Tok	Target/X86/AsmParser/X86AsmParser.cpp	/^    } Tok;$/;"	m	union:__anon336::X86Operand::__anon337	typeref:struct:__anon336::X86Operand::__anon337::__anon338	file:
TokError	AsmParser/LLParser.h	/^    bool TokError(const Twine &Msg) const {$/;"	f	class:llvm::LLParser
TokError	MC/MCParser/MCAsmParser.cpp	/^bool MCAsmParser::TokError(const Twine &Msg, ArrayRef<SMRange> Ranges) {$/;"	f	class:MCAsmParser
TokError	TableGen/TGParser.h	/^  bool TokError(const Twine &Msg) const {$/;"	f	class:llvm::TGParser
TokKind	TableGen/TGLexer.h	/^  enum TokKind {$/;"	g	namespace:llvm::tgtok
TokStart	AsmParser/LLLexer.h	/^    const char *TokStart;$/;"	m	class:llvm::LLLexer
TokStart	TableGen/TGLexer.h	/^  const char *TokStart;$/;"	m	class:llvm::TGLexer
Token	Support/YAMLParser.cpp	/^  Token() : Kind(TK_Error) {}$/;"	f	struct:llvm::yaml::Token
Token	Support/YAMLParser.cpp	/^struct Token : ilist_node<Token> {$/;"	s	namespace:llvm::yaml	file:
Token	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^    Token,$/;"	e	enum:__anon446::MBlazeOperand::KindTy	file:
Token	Target/X86/AsmParser/X86AsmParser.cpp	/^    Token,$/;"	e	enum:__anon336::X86Operand::KindTy	file:
TokenKind	Support/YAMLParser.cpp	/^  enum TokenKind {$/;"	g	struct:llvm::yaml::Token	file:
TokenQueue	Support/YAMLParser.cpp	/^  TokenQueueT TokenQueue;$/;"	m	class:llvm::yaml::Scanner	file:
TokenQueueT	Support/YAMLParser.cpp	/^typedef ilist<Token> TokenQueueT;$/;"	t	file:
TokenizeResult	MC/MCDisassembler/EDInst.h	/^  CachedResult TokenizeResult;$/;"	m	struct:llvm::EDInst
Tokens	MC/MCDisassembler/EDInst.h	/^  tokvec_t Tokens;$/;"	m	struct:llvm::EDInst
TombstoneKey	Transforms/IPO/MergeFunctions.cpp	/^  static const ComparableFunction TombstoneKey;$/;"	m	class:__anon596::ComparableFunction	file:
TombstoneKey	Transforms/IPO/MergeFunctions.cpp	/^const ComparableFunction ComparableFunction::TombstoneKey =$/;"	m	class:__anon596::ComparableFunction	file:
Top	CodeGen/MachineScheduler.cpp	/^  SchedBoundary Top;$/;"	m	class:__anon126::ConvergingScheduler	file:
Top	Target/Hexagon/HexagonMachineScheduler.h	/^  SchedBoundary Top;$/;"	m	class:llvm::ConvergingVLIWScheduler
TopDownPathCount	Transforms/Scalar/ObjCARC.cpp	/^    unsigned TopDownPathCount;$/;"	m	class:__anon507::BBState	file:
TopQ	CodeGen/MachineScheduler.cpp	/^    TopQ;$/;"	m	class:__anon129::InstructionShuffler	file:
TopQID	CodeGen/MachineScheduler.cpp	/^    TopQID = 1,$/;"	e	enum:__anon126::ConvergingScheduler::__anon127	file:
TopQID	Target/Hexagon/HexagonMachineScheduler.h	/^    TopQID = 1,$/;"	e	enum:llvm::ConvergingVLIWScheduler::__anon405
TopStack	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^    unsigned int TopStack;$/;"	m	struct:__anon195	file:
Topo	CodeGen/PostRASchedulerList.cpp	/^    ScheduleDAGTopologicalSort Topo;$/;"	m	class:__anon102::SchedulePostRATDList	file:
Topo	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  ScheduleDAGTopologicalSort Topo;$/;"	m	class:__anon76::ScheduleDAGRRList	file:
TotalLength	DebugInfo/DWARFDebugLine.h	/^    uint32_t TotalLength;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
TotalPackets	Target/Hexagon/HexagonMachineScheduler.h	/^  unsigned TotalPackets;$/;"	m	class:llvm::VLIWResourceModel
Trace	CodeGen/MachineTraceMetrics.h	/^    explicit Trace(Ensemble &te, TraceBlockInfo &tbi) : TE(te), TBI(tbi) {}$/;"	f	class:llvm::MachineTraceMetrics::Trace
Trace	CodeGen/MachineTraceMetrics.h	/^  class Trace {$/;"	c	class:llvm::MachineTraceMetrics
TraceBlockInfo	CodeGen/MachineTraceMetrics.h	/^    TraceBlockInfo() :$/;"	f	struct:llvm::MachineTraceMetrics::TraceBlockInfo
TraceBlockInfo	CodeGen/MachineTraceMetrics.h	/^  struct TraceBlockInfo {$/;"	s	class:llvm::MachineTraceMetrics
Traces	CodeGen/EarlyIfConversion.cpp	/^  MachineTraceMetrics *Traces;$/;"	m	class:__anon92::EarlyIfConverter	file:
TrackDefUses	Target/ARM/Thumb2ITBlockPass.cpp	/^static void TrackDefUses(MachineInstr *MI,$/;"	f	file:
TrackValueOfGlobalVariable	Transforms/Scalar/SCCP.cpp	/^  void TrackValueOfGlobalVariable(GlobalVariable *GV) {$/;"	f	class:__anon531::SCCPSolver
TrackedGlobals	Transforms/Scalar/SCCP.cpp	/^  DenseMap<GlobalVariable*, LatticeVal> TrackedGlobals;$/;"	m	class:__anon531::SCCPSolver	file:
TrackedMultipleRetVals	Transforms/Scalar/SCCP.cpp	/^  DenseMap<std::pair<Function*, unsigned>, LatticeVal> TrackedMultipleRetVals;$/;"	m	class:__anon531::SCCPSolver	file:
TrackedRetVals	Transforms/Scalar/SCCP.cpp	/^  DenseMap<Function*, LatticeVal> TrackedRetVals;$/;"	m	class:__anon531::SCCPSolver	file:
Tracker	Analysis/AliasSetTracker.cpp	/^    AliasSetTracker *Tracker;$/;"	m	class:__anon35::AliasSetPrinter	file:
TrackingIncomingArguments	Transforms/Scalar/SCCP.cpp	/^  SmallPtrSet<Function*, 16> TrackingIncomingArguments;$/;"	m	class:__anon531::SCCPSolver	file:
TracksRegPressure	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool TracksRegPressure;$/;"	m	class:__anon77::RegReductionPQBase	file:
TransferDbgValues	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::TransferDbgValues(SDValue From, SDValue To) {$/;"	f	class:SelectionDAG
TransferDeadFlag	CodeGen/ExpandPostRAPseudos.cpp	/^ExpandPostRA::TransferDeadFlag(MachineInstr *MI, unsigned DstReg,$/;"	f	class:ExpandPostRA
TransferImpOps	Target/ARM/ARMExpandPseudoInsts.cpp	/^void ARMExpandPseudo::TransferImpOps(MachineInstr &OldMI,$/;"	f	class:ARMExpandPseudo
TransferImplicitDefs	CodeGen/ExpandPostRAPseudos.cpp	/^ExpandPostRA::TransferImplicitDefs(MachineInstr *MI) {$/;"	f	class:ExpandPostRA
TransformFPLoadStorePair	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::TransformFPLoadStorePair(SDNode *N) {$/;"	f	class:DAGCombiner
TransformForPostIncUse	Analysis/ScalarEvolutionNormalization.cpp	/^const SCEV *llvm::TransformForPostIncUse(TransformKind Kind,$/;"	f	class:llvm
TransformImpl	Analysis/ScalarEvolutionNormalization.cpp	/^TransformImpl(const SCEV *S, Instruction *User, Value *OperandValToReplace) {$/;"	f	class:PostIncTransform
TransformSubExpr	Analysis/ScalarEvolutionNormalization.cpp	/^TransformSubExpr(const SCEV *S, Instruction *User, Value *OperandValToReplace) {$/;"	f	class:PostIncTransform
Transformed	Analysis/ScalarEvolutionNormalization.cpp	/^  DenseMap<const SCEV*, const SCEV*> Transformed;$/;"	m	class:__anon48::PostIncTransform	file:
TranslateLegalizeResults	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::TranslateLegalizeResults(SDValue Op, SDValue Result) {$/;"	f	class:__anon72::VectorLegalizer
TranslateMachineLocation	MC/MCDwarf.cpp	/^static const MachineLocation TranslateMachineLocation($/;"	f	file:
TranslateX86CC	Target/X86/X86ISelLowering.cpp	/^static unsigned TranslateX86CC(ISD::CondCode SetCCOpcode, bool isFP,$/;"	f	file:
TrapBB	Transforms/Instrumentation/BoundsChecking.cpp	/^    BasicBlock *TrapBB;$/;"	m	struct:__anon493::BoundsChecking	file:
TriedMerging	CodeGen/BranchFolding.h	/^    SmallPtrSet<const MachineBasicBlock*, 2> TriedMerging;$/;"	m	class:llvm::BranchFolder
TrimAllocationToSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^TrimAllocationToSize(FreeRangeHeader *FreeList, uint64_t NewSize) {$/;"	f	class:MemoryRangeHeader
Triple	MC/MCDisassembler/EDDisassembler.h	/^    std::string Triple;$/;"	m	struct:llvm::EDDisassembler::CPUKey
Triple	Support/Triple.cpp	/^Triple::Triple(const Twine &ArchStr, const Twine &VendorStr, const Twine &OSStr)$/;"	f	class:Triple
Triple	Support/Triple.cpp	/^Triple::Triple(const Twine &ArchStr, const Twine &VendorStr, const Twine &OSStr,$/;"	f	class:Triple
Triple	Support/Triple.cpp	/^Triple::Triple(const Twine &Str)$/;"	f	class:Triple
TripleMap	MC/MCDisassembler/EDDisassembler.cpp	/^struct TripleMap {$/;"	s	file:
TripleName	MC/MCDisassembler/Disassembler.h	/^  std::string TripleName;$/;"	m	class:llvm::LLVMDisasmContext
TrivialSpiller	CodeGen/Spiller.cpp	/^  TrivialSpiller(MachineFunctionPass &pass, MachineFunction &mf,$/;"	f	class:__anon144::TrivialSpiller
TrivialSpiller	CodeGen/Spiller.cpp	/^class TrivialSpiller : public SpillerBase {$/;"	c	namespace:__anon144	file:
TrueBB	CodeGen/IfConversion.cpp	/^      MachineBasicBlock *TrueBB;$/;"	m	struct:__anon99::IfConverter::BBInfo	file:
TrueBB	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    MachineBasicBlock *TrueBB, *FalseBB;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBlock
TrueWeight	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    uint32_t TrueWeight, FalseWeight;$/;"	m	struct:llvm::SelectionDAGBuilder::CaseBlock
TruncInst	VMCore/Instructions.cpp	/^TruncInst::TruncInst($/;"	f	class:TruncInst
TryConvert	Transforms/Scalar/ScalarReplAggregates.cpp	/^AllocaInst *ConvertToScalarInfo::TryConvert(AllocaInst *AI) {$/;"	f	class:ConvertToScalarInfo
TryEmitSmallMemcpy	Target/X86/X86FastISel.cpp	/^bool X86FastISel::TryEmitSmallMemcpy(X86AddressMode DestAM,$/;"	f	class:X86FastISel
TryExpandADDWithMul	Target/XCore/XCoreISelLowering.cpp	/^TryExpandADDWithMul(SDNode *N, SelectionDAG &DAG) const$/;"	f	class:XCoreTargetLowering
TryFoldLoad	Target/X86/X86ISelDAGToDAG.cpp	/^bool X86DAGToDAGISel::TryFoldLoad(SDNode *P, SDValue N,$/;"	f	class:X86DAGToDAGISel
TryInstructionTransform	CodeGen/TwoAddressInstructionPass.cpp	/^TryInstructionTransform(MachineBasicBlock::iterator &mi,$/;"	f	class:TwoAddressInstructionPass
TryTailMergeBlocks	CodeGen/BranchFolding.cpp	/^bool BranchFolder::TryTailMergeBlocks(MachineBasicBlock *SuccBB,$/;"	f	class:BranchFolder
TryToFoldFastISelLoad	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^bool SelectionDAGISel::TryToFoldFastISelLoad(const LoadInst *LI,$/;"	f	class:SelectionDAGISel
TryToFoldLoad	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::TryToFoldLoad(MachineInstr *MI, unsigned OpNo,$/;"	f	class:ARMFastISel
TryToFoldLoad	Target/X86/X86FastISel.cpp	/^bool X86FastISel::TryToFoldLoad(MachineInstr *MI, unsigned OpNo,$/;"	f	class:X86FastISel
TryToOptimizeStoreOfMallocToGlobal	Transforms/IPO/GlobalOpt.cpp	/^static bool TryToOptimizeStoreOfMallocToGlobal(GlobalVariable *GV,$/;"	f	file:
TryToShrinkGlobalToBoolean	Transforms/IPO/GlobalOpt.cpp	/^static bool TryToShrinkGlobalToBoolean(GlobalVariable *GV, Constant *OtherVal) {$/;"	f	file:
TryToSimplifyUncondBranchFromEmptyBlock	Transforms/Utils/Local.cpp	/^bool llvm::TryToSimplifyUncondBranchFromEmptyBlock(BasicBlock *BB) {$/;"	f	class:llvm
TryToSimplifyUncondBranchWithICmpInIt	Transforms/Utils/SimplifyCFG.cpp	/^static bool TryToSimplifyUncondBranchWithICmpInIt(ICmpInst *ICI,$/;"	f	file:
TryToSinkInstruction	Transforms/InstCombine/InstructionCombining.cpp	/^static bool TryToSinkInstruction(Instruction *I, BasicBlock *DestBlock) {$/;"	f	file:
Ts	VMCore/LeaksContext.h	/^  SmallPtrSet<const T*, 8> Ts;$/;"	m	struct:llvm::LeakDetectorImpl
TsanAtomicLoad	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  Function *TsanAtomicLoad[kNumberOfAccessSizes];$/;"	m	struct:__anon486::ThreadSanitizer	file:
TsanAtomicStore	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  Function *TsanAtomicStore[kNumberOfAccessSizes];$/;"	m	struct:__anon486::ThreadSanitizer	file:
TsanFuncEntry	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  Function *TsanFuncEntry;$/;"	m	struct:__anon486::ThreadSanitizer	file:
TsanFuncExit	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  Function *TsanFuncExit;$/;"	m	struct:__anon486::ThreadSanitizer	file:
TsanRead	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  Function *TsanRead[kNumberOfAccessSizes];$/;"	m	struct:__anon486::ThreadSanitizer	file:
TsanVptrUpdate	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  Function *TsanVptrUpdate;$/;"	m	struct:__anon486::ThreadSanitizer	file:
TsanWrite	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  Function *TsanWrite[kNumberOfAccessSizes];$/;"	m	struct:__anon486::ThreadSanitizer	file:
TurnSwitchRangeIntoICmp	Transforms/Utils/SimplifyCFG.cpp	/^static bool TurnSwitchRangeIntoICmp(SwitchInst *SI, IRBuilder<> &Builder) {$/;"	f	file:
TwoAddressInstructionPass	CodeGen/TwoAddressInstructionPass.cpp	/^    TwoAddressInstructionPass() : MachineFunctionPass(ID) {$/;"	f	class:__anon104::TwoAddressInstructionPass
TwoAddressInstructionPass	CodeGen/TwoAddressInstructionPass.cpp	/^  class TwoAddressInstructionPass : public MachineFunctionPass {$/;"	c	namespace:__anon104	file:
TwoAddressInstructionPassID	CodeGen/TwoAddressInstructionPass.cpp	/^char &llvm::TwoAddressInstructionPassID = TwoAddressInstructionPass::ID;$/;"	m	class:llvm	file:
TwoArgFP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    TwoArgFP   = 4 << FPTypeShift,$/;"	e	enum:llvm::X86II::__anon350
Ty	AsmParser/LLParser.h	/^      Type *Ty;$/;"	m	struct:llvm::LLParser::ArgInfo
TyVal	AsmParser/LLLexer.h	/^    Type *TyVal;$/;"	m	class:llvm::LLLexer
Type	AsmParser/LLToken.h	/^    Type,$/;"	e	enum:llvm::lltok::Kind
Type	CodeGen/AsmPrinter/DIE.h	/^    unsigned Type;$/;"	m	class:llvm::DIEValue
Type	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uint64_t  Type;$/;"	m	class:llvm::ObjRelocationInfo
Type	MC/MCDisassembler/EDToken.h	/^  enum tokenType Type;$/;"	m	struct:llvm::EDToken	typeref:enum:llvm::EDToken::tokenType
Type	Target/ARM/ARMAsmPrinter.cpp	/^      } Type;$/;"	m	struct:__anon313::ObjectAttributeEmitter::AttributeItemType	typeref:enum:__anon313::ObjectAttributeEmitter::AttributeItemType::__anon314	file:
Type	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^  enum Type {$/;"	g	namespace:llvm::HexagonII
TypeALU32	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeALU32  = 1,$/;"	e	enum:llvm::HexagonII::Type
TypeAllocator	VMCore/LLVMContextImpl.h	/^  BumpPtrAllocator TypeAllocator;$/;"	m	class:llvm::LLVMContextImpl
TypeBasedAliasAnalysis	Analysis/TypeBasedAliasAnalysis.cpp	/^    TypeBasedAliasAnalysis() : ImmutablePass(ID) {$/;"	f	class:__anon13::TypeBasedAliasAnalysis
TypeBasedAliasAnalysis	Analysis/TypeBasedAliasAnalysis.cpp	/^  class TypeBasedAliasAnalysis : public ImmutablePass,$/;"	c	namespace:__anon13	file:
TypeBuilder	Transforms/Instrumentation/PathProfiling.cpp	/^  template<bool xcompile> class TypeBuilder<PathProfilingFunctionTable,$/;"	c	namespace:llvm	file:
TypeCR	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeCR     = 2,$/;"	e	enum:llvm::HexagonII::Type
TypeClassInfo	VMCore/ConstantsContext.h	/^    typedef DenseMapInfo<TypeClass*> TypeClassInfo;$/;"	t	struct:llvm::ConstantAggrUniqueMap::MapInfo
TypeFlags	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  enum TypeFlags {$/;"	g	class:llvm::DwarfAccelTable
TypeHasComponent	Transforms/Scalar/ScalarReplAggregates.cpp	/^bool SROA::TypeHasComponent(Type *T, uint64_t Offset, uint64_t Size) {$/;"	f	class:SROA
TypeIsImmutable	Analysis/TypeBasedAliasAnalysis.cpp	/^    bool TypeIsImmutable() const {$/;"	f	class:__anon12::TBAANode
TypeJ	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeJ      = 4,$/;"	e	enum:llvm::HexagonII::Type
TypeJR	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeJR     = 3,$/;"	e	enum:llvm::HexagonII::Type
TypeLD	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeLD     = 5,$/;"	e	enum:llvm::HexagonII::Type
TypeList	Bitcode/Reader/BitcodeReader.h	/^  std::vector<Type*> TypeList;$/;"	m	class:llvm::BitcodeReader
TypeList	Bitcode/Writer/ValueEnumerator.h	/^  typedef std::vector<Type*> TypeList;$/;"	t	class:llvm::ValueEnumerator
TypeList	Target/CppBackend/CPPBackend.cpp	/^  typedef std::vector<Type*> TypeList;$/;"	t	namespace:__anon412	file:
TypeMARKER	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeMARKER = 31  \/\/ Such as end of a HW loop.$/;"	e	enum:llvm::HexagonII::Type
TypeMEMOP	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeMEMOP  = 9,$/;"	e	enum:llvm::HexagonII::Type
TypeMap	Bitcode/Writer/ValueEnumerator.h	/^  TypeMapType TypeMap;$/;"	m	class:llvm::ValueEnumerator
TypeMap	Linker/LinkModules.cpp	/^    TypeMapTy TypeMap; $/;"	m	class:__anon202::ModuleLinker	file:
TypeMap	Target/CppBackend/CPPBackend.cpp	/^  typedef std::map<Type*,std::string> TypeMap;$/;"	t	namespace:__anon412	file:
TypeMapTy	Linker/LinkModules.cpp	/^class TypeMapTy : public ValueMapTypeRemapper {$/;"	c	namespace:__anon201	file:
TypeMapType	Bitcode/Writer/ValueEnumerator.h	/^  typedef DenseMap<Type*, unsigned> TypeMapType;$/;"	t	class:llvm::ValueEnumerator
TypeMask	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeMask = 0x1f,$/;"	e	enum:llvm::HexagonII::__anon399
TypeNV	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeNV     = 10,$/;"	e	enum:llvm::HexagonII::Type
TypeNameMap	Target/NVPTX/NVPTXAsmPrinter.h	/^  std::map<const Type *, std::string> TypeNameMap;$/;"	m	class:llvm::NVPTXAsmPrinter
TypeNames	Target/CppBackend/CPPBackend.cpp	/^    TypeMap TypeNames;$/;"	m	class:__anon412::CppWriter	file:
TypePREFIX	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypePREFIX = 30, \/\/ Such as extenders.$/;"	e	enum:llvm::HexagonII::Type
TypePSEUDO	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypePSEUDO = 0,$/;"	e	enum:llvm::HexagonII::Type
TypePos	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypePos  = 0,$/;"	e	enum:llvm::HexagonII::__anon399
TypePrinter	VMCore/AsmWriter.cpp	/^  TypePrinting TypePrinter;$/;"	m	class:__anon613::AssemblyWriter	file:
TypePrinting	VMCore/AsmWriter.cpp	/^  TypePrinting() {}$/;"	f	class:__anon611::TypePrinting
TypePrinting	VMCore/AsmWriter.cpp	/^class TypePrinting {$/;"	c	namespace:__anon611	file:
TypeST	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeST     = 6,$/;"	e	enum:llvm::HexagonII::Type
TypeSYSTEM	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeSYSTEM = 7,$/;"	e	enum:llvm::HexagonII::Type
TypeSet	Target/CppBackend/CPPBackend.cpp	/^  typedef std::set<Type*> TypeSet;$/;"	t	namespace:__anon412	file:
TypeSizeToSizeIndex	Transforms/Instrumentation/AddressSanitizer.cpp	/^static size_t TypeSizeToSizeIndex(uint32_t TypeSize) {$/;"	f	file:
TypeToFloatSemantics	VMCore/Constants.cpp	/^static const fltSemantics *TypeToFloatSemantics(Type *Ty) {$/;"	f	file:
TypeXTYPE	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^    TypeXTYPE  = 8,$/;"	e	enum:llvm::HexagonII::Type
Types	Bitcode/Writer/ValueEnumerator.h	/^  TypeList Types;$/;"	m	class:llvm::ValueEnumerator
Types	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallSetVector<Type *, 4> Types;$/;"	m	class:__anon518::LSRInstance	file:
U	Transforms/Scalar/SROA.cpp	/^    Use *U;$/;"	m	struct:AllocaPartitioning::BuilderBase::OffsetUse	file:
U	Transforms/Scalar/SROA.cpp	/^    Use *U;$/;"	m	struct:__anon557::AllocaPartitioning::PartitionUse	file:
U	Transforms/Scalar/SROA.cpp	/^  Use *U;$/;"	m	class:AllocaPartitioning::BuilderBase	file:
U	Transforms/Scalar/SROA.cpp	/^  Use *U;$/;"	m	class:__anon562::AggLoadStoreRewriter	file:
UCOMI	Target/X86/X86ISelLowering.h	/^      CMP, COMI, UCOMI,$/;"	e	enum:llvm::X86ISD::NodeType
UE	CodeGen/SelectionDAG/SelectionDAG.cpp	/^  SDNode::use_iterator &UE;$/;"	m	class:__anon73::RAUWUpdateListener	file:
UEF_UTF16_BE	Support/YAMLParser.cpp	/^  UEF_UTF16_BE, \/\/\/< UTF-16 Big Endian$/;"	e	enum:UnicodeEncodingForm	file:
UEF_UTF16_LE	Support/YAMLParser.cpp	/^  UEF_UTF16_LE, \/\/\/< UTF-16 Little Endian$/;"	e	enum:UnicodeEncodingForm	file:
UEF_UTF32_BE	Support/YAMLParser.cpp	/^  UEF_UTF32_BE, \/\/\/< UTF-32 Big Endian$/;"	e	enum:UnicodeEncodingForm	file:
UEF_UTF32_LE	Support/YAMLParser.cpp	/^  UEF_UTF32_LE, \/\/\/< UTF-32 Little Endian$/;"	e	enum:UnicodeEncodingForm	file:
UEF_UTF8	Support/YAMLParser.cpp	/^  UEF_UTF8,     \/\/\/< UTF-8 or ascii.$/;"	e	enum:UnicodeEncodingForm	file:
UEF_Unknown	Support/YAMLParser.cpp	/^  UEF_Unknown   \/\/\/< Not a valid Unicode encoding.$/;"	e	enum:UnicodeEncodingForm	file:
UI	CodeGen/SelectionDAG/SelectionDAG.cpp	/^  SDNode::use_iterator &UI;$/;"	m	class:__anon73::RAUWUpdateListener	file:
UID	Object/Archive.cpp	/^  char UID[6];$/;"	m	struct:__anon228::ArchiveMemberHeader	file:
UITOF	Target/ARM/ARMISelLowering.h	/^      UITOF,        \/\/ uint to FP within a FP register.$/;"	e	enum:llvm::ARMISD::NodeType
UIToFPInst	VMCore/Instructions.cpp	/^UIToFPInst::UIToFPInst($/;"	f	class:UIToFPInst
UIntVal	AsmParser/LLLexer.h	/^    unsigned UIntVal;$/;"	m	class:llvm::LLLexer
UIntVal	AsmParser/LLParser.h	/^    unsigned UIntVal;$/;"	m	struct:llvm::ValID
UMLAL	Target/ARM/ARMISelLowering.h	/^      UMLAL,        \/\/ 64bit Unsigned Accumulate Multiply$/;"	e	enum:llvm::ARMISD::NodeType
UMUL	Target/X86/X86ISelLowering.h	/^      UMUL, \/\/ LOW, HI, FLAGS = umul LHS, RHS$/;"	e	enum:llvm::X86ISD::NodeType
UNICODE	ExecutionEngine/IntelJITEvents/ittnotify_config.h	62;"	d
UNPCKH	Target/X86/X86ISelLowering.h	/^      UNPCKH,$/;"	e	enum:llvm::X86ISD::NodeType
UNPCKL	Target/X86/X86ISelLowering.h	/^      UNPCKL,$/;"	e	enum:llvm::X86ISD::NodeType
UNSUPPORTED	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^const uint16_t UNSUPPORTED = -1;$/;"	v
UR_NONTAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t UR_NONTAKEN_WEIGHT = 1024*1024 - 1;$/;"	v	file:
UR_TAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t UR_TAKEN_WEIGHT = 1;$/;"	v	file:
USEBOL	Support/regex2.h	139;"	d
USEDLIBS	Transforms/DDA/Makefile	/^USEDLIBS =$/;"	m
USEDLIBS	Transforms/Hello/Makefile	/^USEDLIBS =$/;"	m
USEEOL	Support/regex2.h	140;"	d
USE_KEYMGR	ExecutionEngine/JIT/JIT.cpp	101;"	d	file:
USE_KEYMGR	ExecutionEngine/JIT/JIT.cpp	103;"	d	file:
USE_LIBFFI	ExecutionEngine/Interpreter/ExternalFunctions.cpp	40;"	d	file:
USE_LIBFFI	ExecutionEngine/Interpreter/ExternalFunctions.cpp	43;"	d	file:
UTF8Decoded	Support/YAMLParser.cpp	/^typedef std::pair<uint32_t, unsigned> UTF8Decoded;$/;"	t	file:
UVConstants	VMCore/LLVMContextImpl.h	/^  DenseMap<Type*, UndefValue*> UVConstants;$/;"	m	class:llvm::LLVMContextImpl
UVMap	CodeGen/LiveDebugVariables.cpp	/^  typedef DenseMap<const MDNode *, UserValue*> UVMap;$/;"	t	class:__anon153::LDVImpl	file:
U_BitShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    U_BitShift     = 23,$/;"	e	enum:llvm::ARMII::__anon288
UnEscapeLexed	AsmParser/LLLexer.cpp	/^static void UnEscapeLexed(std::string &Str) {$/;"	f	file:
Unalign	Target/ARM/ARMConstantIslandPass.cpp	/^      uint8_t Unalign;$/;"	m	struct:__anon310::ARMConstantIslands::BasicBlockInfo	file:
Unanalyzed	CodeGen/SelectionDAG/LegalizeTypes.h	/^    Unanalyzed = -2,$/;"	e	enum:llvm::DAGTypeLegalizer::NodeIdFlags
UnaryConstantExpr	VMCore/ConstantsContext.h	/^  UnaryConstantExpr(unsigned Opcode, Constant *C, Type *Ty)$/;"	f	class:llvm::UnaryConstantExpr
UnaryConstantExpr	VMCore/ConstantsContext.h	/^class UnaryConstantExpr : public ConstantExpr {$/;"	c	namespace:llvm
UnaryDP	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    UnaryDP       = 1 << 13,$/;"	e	enum:llvm::ARMII::__anon288
UnaryDoubleFP	Transforms/Scalar/SimplifyLibCalls.cpp	/^    UnaryDoubleFPOpt UnaryDoubleFP, UnsafeUnaryDoubleFP;$/;"	m	class:__anon546::SimplifyLibCalls	file:
UnaryDoubleFPOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^  UnaryDoubleFPOpt(bool CheckReturnType): CheckRetType(CheckReturnType) {}$/;"	f	struct:__anon545::UnaryDoubleFPOpt
UnaryDoubleFPOpt	Transforms/Scalar/SimplifyLibCalls.cpp	/^struct UnaryDoubleFPOpt : public LibCallOptimization {$/;"	s	namespace:__anon545	file:
UncondBr	Target/ARM/ARMConstantIslandPass.cpp	/^      int UncondBr;$/;"	m	struct:__anon310::ARMConstantIslands::ImmBranch	file:
UncondBrOpc	Target/Mips/MipsInstrInfo.h	/^  unsigned UncondBrOpc;$/;"	m	class:llvm::MipsInstrInfo
Uncounted	Analysis/ProfileDataLoader.cpp	/^const unsigned ProfileDataLoader::Uncounted = ~0U;$/;"	m	class:ProfileDataLoader	file:
Uncounted	Analysis/ProfileInfoLoader.cpp	/^const unsigned ProfileInfoLoader::Uncounted = ~0U;$/;"	m	class:ProfileInfoLoader	file:
UndefOrImm	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^bool NVPTXDAGToDAGISel::UndefOrImm(SDValue Op, SDValue N,$/;"	f	class:NVPTXDAGToDAGISel
UndefinedSymbolData	MC/ELFObjectWriter.cpp	/^    std::vector<ELFSymbolData> UndefinedSymbolData;$/;"	m	class:__anon225::ELFObjectWriter	file:
UnderlyingObjectsAlias	Analysis/LoopDependenceAnalysis.cpp	/^static AliasAnalysis::AliasResult UnderlyingObjectsAlias(AliasAnalysis *AA,$/;"	f	file:
UnfoldedOffset	Transforms/Scalar/LoopStrengthReduce.cpp	/^  int64_t UnfoldedOffset;$/;"	m	struct:__anon514::Formula	file:
UnicodeEncodingForm	Support/YAMLParser.cpp	/^enum UnicodeEncodingForm {$/;"	g	file:
UnionGroups	CodeGen/AggressiveAntiDepBreaker.cpp	/^unsigned AggressiveAntiDepState::UnionGroups(unsigned Reg1, unsigned Reg2)$/;"	f	class:AggressiveAntiDepState
Uniquifier	Transforms/Scalar/LoopStrengthReduce.cpp	/^  DenseSet<SmallVector<const SCEV *, 2>, UniquifierDenseMapInfo> Uniquifier;$/;"	m	class:__anon517::LSRUse	file:
UniquifierDenseMapInfo	Transforms/Scalar/LoopStrengthReduce.cpp	/^struct UniquifierDenseMapInfo {$/;"	s	namespace:__anon517	file:
Unknown	Analysis/MemDepPrinter.cpp	/^      Unknown$/;"	e	enum:__anon33::MemDepPrinter::DepType	file:
Unknown	Transforms/Scalar/ScalarReplAggregates.cpp	/^    Unknown,$/;"	e	enum:__anon522::ConvertToScalarInfo::__anon523	file:
UnknownABI	Target/Mips/MipsSubtarget.h	/^    UnknownABI, O32, N32, N64, EABI$/;"	e	enum:llvm::MipsSubtarget::MipsABIEnum
UnknownPadding	Target/ARM/ARMConstantIslandPass.cpp	/^static inline unsigned UnknownPadding(unsigned LogAlign, unsigned KnownBits) {$/;"	f	file:
Unknown_Personality	Transforms/InstCombine/InstructionCombining.cpp	/^  Unknown_Personality,$/;"	e	enum:Personality_Type	file:
Unloop	Analysis/LoopInfo.cpp	/^  Loop *Unloop;$/;"	m	class:__anon37::UnloopUpdater	file:
UnloopUpdater	Analysis/LoopInfo.cpp	/^  UnloopUpdater(Loop *UL, LoopInfo *LInfo) :$/;"	f	class:__anon37::UnloopUpdater
UnloopUpdater	Analysis/LoopInfo.cpp	/^class UnloopUpdater {$/;"	c	namespace:__anon37	file:
UnpackMachineBundles	CodeGen/MachineInstrBundle.cpp	/^    UnpackMachineBundles() : MachineFunctionPass(ID) {$/;"	f	class:__anon111::UnpackMachineBundles
UnpackMachineBundles	CodeGen/MachineInstrBundle.cpp	/^  class UnpackMachineBundles : public MachineFunctionPass {$/;"	c	namespace:__anon111	file:
UnpackMachineBundlesID	CodeGen/MachineInstrBundle.cpp	/^char &llvm::UnpackMachineBundlesID = UnpackMachineBundles::ID;$/;"	m	class:llvm	file:
UnreachableBlockElim	CodeGen/UnreachableBlockElim.cpp	/^    UnreachableBlockElim() : FunctionPass(ID) {$/;"	f	class:__anon168::UnreachableBlockElim
UnreachableBlockElim	CodeGen/UnreachableBlockElim.cpp	/^  class UnreachableBlockElim : public FunctionPass {$/;"	c	namespace:__anon168	file:
UnreachableInst	VMCore/Instructions.cpp	/^UnreachableInst::UnreachableInst(LLVMContext &Context, $/;"	f	class:UnreachableInst
UnreachableInst	VMCore/Instructions.cpp	/^UnreachableInst::UnreachableInst(LLVMContext &Context, BasicBlock *InsertAtEnd)$/;"	f	class:UnreachableInst
UnreachableMachineBlockElim	CodeGen/UnreachableBlockElim.cpp	/^    UnreachableMachineBlockElim() : MachineFunctionPass(ID) {}$/;"	f	class:__anon169::UnreachableMachineBlockElim
UnreachableMachineBlockElim	CodeGen/UnreachableBlockElim.cpp	/^  class UnreachableMachineBlockElim : public MachineFunctionPass {$/;"	c	namespace:__anon169	file:
UnreachableMachineBlockElimID	CodeGen/UnreachableBlockElim.cpp	/^char &llvm::UnreachableMachineBlockElimID = UnreachableMachineBlockElim::ID;$/;"	m	class:llvm	file:
UnregisterFn	CodeGen/SjLjEHPrepare.cpp	/^    Constant *UnregisterFn;$/;"	m	class:__anon123::SjLjEHPrepare	file:
UnregisterJITEventListener	ExecutionEngine/JIT/JIT.cpp	/^void JIT::UnregisterJITEventListener(JITEventListener *L) {$/;"	f	class:JIT
UnregisterStubResolver	ExecutionEngine/JIT/JITEmitter.cpp	/^    void UnregisterStubResolver(void *Stub) {$/;"	f	class:__anon182::StubToResolverMapTy
UnrollLoop	Transforms/Utils/LoopUnroll.cpp	/^bool llvm::UnrollLoop(Loop *L, unsigned Count, unsigned TripCount,$/;"	f	class:llvm
UnrollRuntimeCount	Transforms/Scalar/LoopUnrollPass.cpp	/^    static const unsigned UnrollRuntimeCount = 8;$/;"	m	class:__anon571::LoopUnroll	file:
UnrollRuntimeLoopProlog	Transforms/Utils/LoopUnrollRuntime.cpp	/^bool llvm::UnrollRuntimeLoopProlog(Loop *L, unsigned Count, LoopInfo *LI,$/;"	f	class:llvm
UnrollVSETCC	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^SDValue VectorLegalizer::UnrollVSETCC(SDValue Op) {$/;"	f	class:__anon72::VectorLegalizer
UnrollVectorOp	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::UnrollVectorOp(SDNode *N, unsigned ResNE) {$/;"	f	class:SelectionDAG
UnsafeUnaryDoubleFP	Transforms/Scalar/SimplifyLibCalls.cpp	/^    UnaryDoubleFPOpt UnaryDoubleFP, UnsafeUnaryDoubleFP;$/;"	m	class:__anon546::SimplifyLibCalls	file:
UnscheduleNodeBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void ScheduleDAGRRList::UnscheduleNodeBottomUp(SUnit *SU) {$/;"	f	class:ScheduleDAGRRList
Unsigned	Target/NVPTX/NVPTX.h	/^  Unsigned = 0,$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::FromType
UnswitchIfProfitable	Transforms/Scalar/LoopUnswitch.cpp	/^bool LoopUnswitch::UnswitchIfProfitable(Value *LoopCond, Constant *Val) {$/;"	f	class:LoopUnswitch
UnswitchNontrivialCondition	Transforms/Scalar/LoopUnswitch.cpp	/^void LoopUnswitch::UnswitchNontrivialCondition(Value *LIC, Constant *Val,$/;"	f	class:LoopUnswitch
UnswitchTrivialCondition	Transforms/Scalar/LoopUnswitch.cpp	/^void LoopUnswitch::UnswitchTrivialCondition(Loop *L, Value *Cond,$/;"	f	class:LoopUnswitch
UnswitchedVals	Transforms/Scalar/LoopUnswitch.cpp	/^      UnswitchedValsMap UnswitchedVals;$/;"	m	struct:__anon494::LUAnalysisCache::LoopProperties	file:
UnswitchedValsIt	Transforms/Scalar/LoopUnswitch.cpp	/^    typedef UnswitchedValsMap::iterator UnswitchedValsIt;$/;"	t	class:__anon494::LUAnalysisCache	file:
UnswitchedValsMap	Transforms/Scalar/LoopUnswitch.cpp	/^      UnswitchedValsMap;$/;"	t	class:__anon494::LUAnalysisCache	file:
UnusedArgNodeMap	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  DenseMap<const Value*, SDValue> UnusedArgNodeMap;$/;"	m	class:llvm::SelectionDAGBuilder
UnwindDestPHIValues	Transforms/Utils/InlineFunction.cpp	/^    SmallVector<Value*, 8> UnwindDestPHIValues;$/;"	m	class:__anon468::InvokeInliningInfo	file:
UpdadeDebugLocOnMergedSDNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDNode *SelectionDAG::UpdadeDebugLocOnMergedSDNode(SDNode *N, DebugLoc OLoc) {$/;"	f	class:SelectionDAG
UpdateAnalysisInformation	Transforms/Utils/BasicBlockUtils.cpp	/^static void UpdateAnalysisInformation(BasicBlock *OldBB, BasicBlock *NewBB,$/;"	f	file:
UpdateBackTraceRegPressure	CodeGen/MachineLICM.cpp	/^void MachineLICM::UpdateBackTraceRegPressure(const MachineInstr *MI) {$/;"	f	class:MachineLICM
UpdateCPSRDef	Target/ARM/Thumb2SizeReduction.cpp	/^static bool UpdateCPSRDef(MachineInstr &MI, bool LiveCPSR, bool &DefCPSR) {$/;"	f	file:
UpdateCPSRUse	Target/ARM/Thumb2SizeReduction.cpp	/^static bool UpdateCPSRUse(MachineInstr &MI, bool LiveCPSR) {$/;"	f	file:
UpdateCallGraphAfterInlining	Transforms/Utils/InlineFunction.cpp	/^static void UpdateCallGraphAfterInlining(CallSite CS,$/;"	f	file:
UpdateChainsAndGlue	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^UpdateChainsAndGlue(SDNode *NodeToMatch, SDValue InputChain,$/;"	f	class:SelectionDAGISel
UpdateDbgValue	CodeGen/AntiDepBreaker.h	/^  void UpdateDbgValue(MachineInstr *MI, unsigned OldReg, unsigned NewReg) {$/;"	f	class:llvm::AntiDepBreaker
UpdateFlags	CodeGen/LiveIntervalAnalysis.cpp	/^  bool UpdateFlags;$/;"	m	class:LiveIntervals::HMEditor	file:
UpdateForDeletedBlock	CodeGen/MachineModuleInfo.cpp	/^void MMIAddrLabelMap::UpdateForDeletedBlock(BasicBlock *BB) {$/;"	f	class:MMIAddrLabelMap
UpdateForRAUWBlock	CodeGen/MachineModuleInfo.cpp	/^void MMIAddrLabelMap::UpdateForRAUWBlock(BasicBlock *Old, BasicBlock *New) {$/;"	f	class:MMIAddrLabelMap
UpdateNodeOperands	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDNode *SelectionDAG::UpdateNodeOperands(SDNode *N, SDValue Op) {$/;"	f	class:SelectionDAG
UpdateNodeOperands	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDNode *SelectionDAG::UpdateNodeOperands(SDNode *N, SDValue Op1, SDValue Op2) {$/;"	f	class:SelectionDAG
UpdateNodeOperands	CodeGen/SelectionDAG/SelectionDAG.cpp	/^UpdateNodeOperands(SDNode *N, SDValue Op1, SDValue Op2, SDValue Op3) {$/;"	f	class:SelectionDAG
UpdateNodeOperands	CodeGen/SelectionDAG/SelectionDAG.cpp	/^UpdateNodeOperands(SDNode *N, SDValue Op1, SDValue Op2,$/;"	f	class:SelectionDAG
UpdateNodeOperands	CodeGen/SelectionDAG/SelectionDAG.cpp	/^UpdateNodeOperands(SDNode *N, const SDValue *Ops, unsigned NumOps) {$/;"	f	class:SelectionDAG
UpdateOp	Target/X86/X86CodeEmitter.cpp	/^static const MCInstrDesc *UpdateOp(MachineInstr &MI, const X86InstrInfo *II,$/;"	f	file:
UpdatePHINodes	Transforms/Utils/BasicBlockUtils.cpp	/^static void UpdatePHINodes(BasicBlock *OrigBB, BasicBlock *NewBB,$/;"	f	file:
UpdatePhysRegDefs	CodeGen/LiveVariables.cpp	/^void LiveVariables::UpdatePhysRegDefs(MachineInstr *MI,$/;"	f	class:LiveVariables
UpdatePredRedefs	CodeGen/IfConversion.cpp	/^static void UpdatePredRedefs(MachineBasicBlock::iterator I,$/;"	f	file:
UpdatePredRedefs	CodeGen/IfConversion.cpp	/^static void UpdatePredRedefs(MachineInstr *MI, SmallSet<unsigned,4> &Redefs,$/;"	f	file:
UpdateRegAllocHint	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::UpdateRegAllocHint(unsigned Reg, unsigned NewReg,$/;"	f	class:ARMBaseRegisterInfo
UpdateRegPressure	CodeGen/MachineLICM.cpp	/^void MachineLICM::UpdateRegPressure(const MachineInstr *MI) {$/;"	f	class:MachineLICM
UpdateRegSequenceSrcs	CodeGen/TwoAddressInstructionPass.cpp	/^static void UpdateRegSequenceSrcs(unsigned SrcReg,$/;"	f	file:
UpdateSplitBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::UpdateSplitBlock(MachineBasicBlock *First,$/;"	f	class:SelectionDAGBuilder
UpdateState	Analysis/SparsePropagation.cpp	/^void SparseSolver::UpdateState(Instruction &Inst, LatticeVal V) {$/;"	f	class:SparseSolver
UpdateSuccessorsPHIs	CodeGen/TailDuplication.cpp	/^TailDuplicatePass::UpdateSuccessorsPHIs(MachineBasicBlock *FromBB, bool isDead,$/;"	f	class:TailDuplicatePass
UpdateThumbVFPPredicate	Target/ARM/Disassembler/ARMDisassembler.cpp	/^void ThumbDisassembler::UpdateThumbVFPPredicate(MCInst &MI) const {$/;"	f	class:ThumbDisassembler
UpdateValueMap	CodeGen/SelectionDAG/FastISel.cpp	/^void FastISel::UpdateValueMap(const Value *I, unsigned Reg, unsigned NumRegs) {$/;"	f	class:FastISel
Updated	CodeGen/LiveIntervalAnalysis.cpp	/^  SmallPtrSet<LiveInterval*, 8> Updated;$/;"	m	class:LiveIntervals::HMEditor	file:
UpdatedSearchState	Support/DAGDeltaAlgorithm.cpp	/^  void UpdatedSearchState(const changeset_ty &Changes,$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
UpgradeCallsToIntrinsic	VMCore/AutoUpgrade.cpp	/^void llvm::UpgradeCallsToIntrinsic(Function* F) {$/;"	f	class:llvm
UpgradeGlobalVariable	VMCore/AutoUpgrade.cpp	/^bool llvm::UpgradeGlobalVariable(GlobalVariable *GV) {$/;"	f	class:llvm
UpgradeIntrinsicCall	VMCore/AutoUpgrade.cpp	/^void llvm::UpgradeIntrinsicCall(CallInst *CI, Function *NewFn) {$/;"	f	class:llvm
UpgradeIntrinsicFunction	VMCore/AutoUpgrade.cpp	/^bool llvm::UpgradeIntrinsicFunction(Function *F, Function *&NewFn) {$/;"	f	class:llvm
UpgradeIntrinsicFunction1	VMCore/AutoUpgrade.cpp	/^static bool UpgradeIntrinsicFunction1(Function *F, Function *&NewFn) {$/;"	f	file:
UpgradeSSE41Function	VMCore/AutoUpgrade.cpp	/^static bool UpgradeSSE41Function(Function* F, Intrinsic::ID IID,$/;"	f	file:
UpgradedIntrinsicMap	Bitcode/Reader/BitcodeReader.h	/^  typedef std::vector<std::pair<Function*, Function*> > UpgradedIntrinsicMap;$/;"	t	class:llvm::BitcodeReader
UpgradedIntrinsics	Bitcode/Reader/BitcodeReader.h	/^  UpgradedIntrinsicMap UpgradedIntrinsics;$/;"	m	class:llvm::BitcodeReader
UsableRegs	CodeGen/RegAllocBasic.cpp	/^  BitVector UsableRegs;$/;"	m	class:__anon122::RABasic	file:
Use	CodeGen/SelectionDAG/SelectionDAG.cpp	/^    SDUse *Use;$/;"	m	struct:__anon74::UseMemo	file:
Use402Format	Transforms/Instrumentation/GCOVProfiling.cpp	/^    bool Use402Format;$/;"	m	class:__anon489::GCOVProfiler	file:
Use64BitRegs	Target/PowerPC/PPCSubtarget.h	/^  bool Use64BitRegs;$/;"	m	class:llvm::PPCSubtarget
UseBlocks	CodeGen/SplitKit.h	/^  SmallVector<BlockInfo, 8> UseBlocks;$/;"	m	class:llvm::SplitAnalysis
UseBuilder	Transforms/Scalar/SROA.cpp	/^  UseBuilder(const DataLayout &TD, AllocaInst &AI, AllocaPartitioning &P)$/;"	f	class:AllocaPartitioning::UseBuilder
UseBuilder	Transforms/Scalar/SROA.cpp	/^class AllocaPartitioning::UseBuilder : public BuilderBase<UseBuilder> {$/;"	c	class:AllocaPartitioning	file:
UseCodeAlign	MC/MCSectionCOFF.cpp	/^bool MCSectionCOFF::UseCodeAlign() const {$/;"	f	class:MCSectionCOFF
UseCodeAlign	MC/MCSectionELF.cpp	/^bool MCSectionELF::UseCodeAlign() const {$/;"	f	class:MCSectionELF
UseCodeAlign	MC/MCSectionMachO.cpp	/^bool MCSectionMachO::UseCodeAlign() const {$/;"	f	class:MCSectionMachO
UseCodeAlign	Target/NVPTX/NVPTXSection.h	/^  virtual bool UseCodeAlign() const { return false; }$/;"	f	class:llvm::NVPTXSection
UseExtraChecksum	Transforms/Instrumentation/GCOVProfiling.cpp	/^    bool UseExtraChecksum;$/;"	m	class:__anon489::GCOVProfiler	file:
UseF32FTZ	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  bool UseF32FTZ;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
UseLargeMem	Target/CellSPU/SPUSubtarget.h	/^    bool UseLargeMem;$/;"	m	class:llvm::SPUSubtarget
UseLeaForSP	Target/X86/X86Subtarget.h	/^  bool UseLeaForSP;$/;"	m	class:llvm::X86Subtarget
UseListRecords	Bitcode/Reader/BitcodeReader.h	/^  SmallVector<SmallVector<uint64_t, 64>, 64> UseListRecords;$/;"	m	class:llvm::BitcodeReader
UseMap	Transforms/IPO/DeadArgumentElimination.cpp	/^    typedef std::multimap<RetOrArg, RetOrArg> UseMap;$/;"	t	class:__anon600::DAE	file:
UseMap	Transforms/Scalar/LoopStrengthReduce.cpp	/^  UseMapTy UseMap;$/;"	m	class:__anon518::LSRInstance	file:
UseMapDenseMapInfo	Transforms/Scalar/LoopStrengthReduce.cpp	/^struct UseMapDenseMapInfo {$/;"	s	namespace:__anon518	file:
UseMapTy	Transforms/Scalar/LoopStrengthReduce.cpp	/^                   UseMapDenseMapInfo> UseMapTy;$/;"	t	class:__anon518::LSRInstance	file:
UseMemOps	Target/Hexagon/HexagonSubtarget.h	/^  bool UseMemOps;$/;"	m	class:llvm::HexagonSubtarget
UseMemo	CodeGen/SelectionDAG/SelectionDAG.cpp	/^  struct UseMemo {$/;"	s	namespace:__anon74	file:
UseMovt	Target/ARM/ARMSubtarget.h	/^  bool UseMovt;$/;"	m	class:llvm::ARMSubtarget
UseMulOps	Target/ARM/ARMSubtarget.h	/^  bool UseMulOps;$/;"	m	class:llvm::ARMSubtarget
UseNEONForSinglePrecisionFP	Target/ARM/ARMSubtarget.h	/^  bool UseNEONForSinglePrecisionFP;$/;"	m	class:llvm::ARMSubtarget
UseOp	CodeGen/MachineTraceMetrics.cpp	/^  unsigned UseOp;$/;"	m	struct:__anon133::DataDep	file:
UseRelativeIDs	Bitcode/Reader/BitcodeReader.h	/^  bool UseRelativeIDs;$/;"	m	class:llvm::BitcodeReader
UseSlots	CodeGen/SplitKit.h	/^  SmallVector<SlotIndex, 8> UseSlots;$/;"	m	class:llvm::SplitAnalysis
UseSmallSection	Target/Mips/MipsSubtarget.h	/^  bool UseSmallSection;$/;"	m	class:llvm::MipsSubtarget
UseVector	Transforms/IPO/DeadArgumentElimination.cpp	/^    typedef SmallVector<RetOrArg, 5> UseVector;$/;"	t	class:__anon600::DAE	file:
UsedByIndices	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallBitVector UsedByIndices;$/;"	m	class:__anon512::RegSortData	file:
UsedCSRegs	CodeGen/PrologEpilogInserter.h	/^    CSRegSet UsedCSRegs;$/;"	m	class:llvm::PEI
UsedColors	CodeGen/StackSlotColoring.cpp	/^    BitVector UsedColors;$/;"	m	class:__anon94::StackSlotColoring	file:
UsedInInstr	CodeGen/RegAllocFast.cpp	/^    UsedInInstrSet UsedInInstr;$/;"	m	class:__anon140::RAFast	file:
UsedInInstrSet	CodeGen/RegAllocFast.cpp	/^    typedef SparseSet<unsigned> UsedInInstrSet;$/;"	t	class:__anon140::RAFast	file:
UsedInReloc	MC/ELFObjectWriter.cpp	/^    SmallPtrSet<const MCSymbol *, 16> UsedInReloc;$/;"	m	class:__anon225::ELFObjectWriter	file:
UsedInThisFunction	Transforms/Scalar/ObjCARC.cpp	/^    unsigned UsedInThisFunction;$/;"	m	class:__anon508::ObjCARCOpt	file:
UsedNames	Target/CppBackend/CPPBackend.cpp	/^    NameSet UsedNames;$/;"	m	class:__anon412::CppWriter	file:
UsedRegs	Target/Hexagon/HexagonCallingConvLower.h	/^  SmallVector<uint32_t, 16> UsedRegs;$/;"	m	class:llvm::Hexagon_CCState
UsedValues	CodeGen/InlineSpiller.cpp	/^  SmallPtrSet<VNInfo*, 8> UsedValues;$/;"	m	class:__anon155::InlineSpiller	file:
User	CodeGen/SelectionDAG/SelectionDAG.cpp	/^    SDNode *User;$/;"	m	struct:__anon74::UseMemo	file:
UserData	Support/CrashRecoveryContext.cpp	/^  void *UserData;$/;"	m	struct:__anon256::RunSafelyOnThreadInfo	file:
UserData	Support/Threading.cpp	/^  void *UserData;$/;"	m	struct:ThreadInfo	file:
UserFn	Support/CrashRecoveryContext.cpp	/^  void (*UserFn)(void*);$/;"	m	struct:__anon256::RunSafelyOnThreadInfo	file:
UserFn	Support/Threading.cpp	/^  void (*UserFn)(void *);$/;"	m	struct:ThreadInfo	file:
UserInst	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Instruction *UserInst;$/;"	m	struct:__anon516::LSRFixup	file:
UserInst	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Instruction *UserInst;$/;"	m	struct:__anon518::IVInc	file:
UserTag	CodeGen/LiveIntervalUnion.h	/^    unsigned Tag, UserTag;$/;"	m	class:llvm::LiveIntervalUnion::Query
UserTag	CodeGen/LiveRegMatrix.h	/^  unsigned UserTag;$/;"	m	class:llvm::LiveRegMatrix
UserThreshold	Transforms/Scalar/LoopUnrollPass.cpp	/^    bool     UserThreshold;        \/\/ CurrentThreshold is user-specified.$/;"	m	class:__anon571::LoopUnroll	file:
UserValue	CodeGen/LiveDebugVariables.cpp	/^  UserValue(const MDNode *var, unsigned o, DebugLoc L,$/;"	f	class:__anon152::UserValue
UserValue	CodeGen/LiveDebugVariables.cpp	/^class UserValue {$/;"	c	namespace:__anon152	file:
UserValueScopes	CodeGen/LiveDebugVariables.cpp	/^  UserValueScopes(DebugLoc D, LexicalScopes &L) : DL(D), LS(L) {}$/;"	f	class:__anon151::UserValueScopes
UserValueScopes	CodeGen/LiveDebugVariables.cpp	/^class UserValueScopes {$/;"	c	namespace:__anon151	file:
UserVariables	CodeGen/AsmPrinter/DwarfDebug.h	/^  SmallVector<const MDNode*, 8> UserVariables;$/;"	m	class:llvm::DwarfDebug
Uses	CodeGen/RegisterPressure.cpp	/^  SmallVector<unsigned, 8> Uses;$/;"	m	struct:RegisterOperands	file:
Uses	Transforms/IPO/DeadArgumentElimination.cpp	/^    UseMap Uses;$/;"	m	class:__anon600::DAE	file:
Uses	Transforms/IPO/FunctionAttrs.cpp	/^    SmallVector<Argument*, 4> Uses;  \/\/ Uses within our SCC.$/;"	m	struct:__anon579::ArgumentUsesTracker	file:
Uses	Transforms/IPO/FunctionAttrs.cpp	/^    SmallVector<ArgumentGraphNode*, 4> Uses;$/;"	m	struct:__anon579::ArgumentGraphNode	file:
Uses	Transforms/Scalar/LoopStrengthReduce.cpp	/^  SmallVector<LSRUse, 16> Uses;$/;"	m	class:__anon518::LSRInstance	file:
Uses	Transforms/Scalar/SROA.cpp	/^  SmallVector<SmallVector<PartitionUse, 2>, 8> Uses;$/;"	m	class:__anon557::AllocaPartitioning	file:
UsesAlloca	Transforms/Scalar/TailRecursionElimination.cpp	/^  SmallVector<WeakVH, 64> UsesAlloca;$/;"	m	struct:AllocaCaptureTracker	file:
UsesLR	Target/CellSPU/SPUMachineFunction.h	/^  bool UsesLR;$/;"	m	class:llvm::SPUFunctionInfo
UsesLR	Target/XCore/XCoreMachineFunctionInfo.h	/^  bool UsesLR;$/;"	m	class:llvm::XCoreFunctionInfo
UsingBlocks	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    SmallVector<BasicBlock*, 32> UsingBlocks;$/;"	m	struct:__anon469::AllocaInfo	file:
UsingCFI	MC/MCDwarf.cpp	/^    bool UsingCFI;$/;"	m	class:__anon223::FrameEmitterImpl	file:
V	Analysis/BasicAliasAnalysis.cpp	/^    const Value *V;$/;"	m	struct:__anon14::VariableGEPIndex	file:
V	AsmParser/LLParser.h	/^      Value *V;$/;"	m	struct:llvm::LLParser::ParamInfo
V1	Target/Hexagon/HexagonSubtarget.h	/^    V1, V2, V3, V4, V5$/;"	e	enum:llvm::HexagonSubtarget::HexagonArchEnum
V2	Target/Hexagon/HexagonSubtarget.h	/^    V1, V2, V3, V4, V5$/;"	e	enum:llvm::HexagonSubtarget::HexagonArchEnum
V2	Target/NVPTX/NVPTX.h	/^  V2 = 2,$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::VecType
V3	Target/Hexagon/HexagonSubtarget.h	/^    V1, V2, V3, V4, V5$/;"	e	enum:llvm::HexagonSubtarget::HexagonArchEnum
V4	Target/Hexagon/HexagonSubtarget.h	/^    V1, V2, V3, V4, V5$/;"	e	enum:llvm::HexagonSubtarget::HexagonArchEnum
V4	Target/NVPTX/NVPTX.h	/^  V4 = 4$/;"	e	enum:llvm::NVPTX::PTXLdStInstCode::VecType
V5	Target/Hexagon/HexagonSubtarget.h	/^    V1, V2, V3, V4, V5$/;"	e	enum:llvm::HexagonSubtarget::HexagonArchEnum
V8DeprecatedInsts	Target/Sparc/SparcSubtarget.h	/^  bool V8DeprecatedInsts;$/;"	m	class:llvm::SparcSubtarget
VAARG_64	Target/X86/X86ISelLowering.h	/^      VAARG_64$/;"	e	enum:llvm::X86ISD::NodeType
VALUE_ENUMERATOR_H	Bitcode/Writer/ValueEnumerator.h	15;"	d
VASTART_SAVE_XMM_REGS	Target/X86/X86ISelLowering.h	/^      VASTART_SAVE_XMM_REGS,$/;"	e	enum:llvm::X86ISD::NodeType
VBICIMM	Target/ARM/ARMISelLowering.h	/^      VBICIMM,$/;"	e	enum:llvm::ARMISD::NodeType
VBROADCAST	Target/X86/X86ISelLowering.h	/^      VBROADCAST,$/;"	e	enum:llvm::X86ISD::NodeType
VBSL	Target/ARM/ARMISelLowering.h	/^      VBSL,$/;"	e	enum:llvm::ARMISD::NodeType
VC	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VC,            \/\/ No overflow                Not unordered$/;"	e	enum:llvm::ARMCC::CondCodes
VCEQ	Target/ARM/ARMISelLowering.h	/^      VCEQ,         \/\/ Vector compare equal.$/;"	e	enum:llvm::ARMISD::NodeType
VCEQZ	Target/ARM/ARMISelLowering.h	/^      VCEQZ,        \/\/ Vector compare equal to zero.$/;"	e	enum:llvm::ARMISD::NodeType
VCGE	Target/ARM/ARMISelLowering.h	/^      VCGE,         \/\/ Vector compare greater than or equal.$/;"	e	enum:llvm::ARMISD::NodeType
VCGEU	Target/ARM/ARMISelLowering.h	/^      VCGEU,        \/\/ Vector compare unsigned greater than or equal.$/;"	e	enum:llvm::ARMISD::NodeType
VCGEZ	Target/ARM/ARMISelLowering.h	/^      VCGEZ,        \/\/ Vector compare greater than or equal to zero.$/;"	e	enum:llvm::ARMISD::NodeType
VCGT	Target/ARM/ARMISelLowering.h	/^      VCGT,         \/\/ Vector compare greater than.$/;"	e	enum:llvm::ARMISD::NodeType
VCGTU	Target/ARM/ARMISelLowering.h	/^      VCGTU,        \/\/ Vector compare unsigned greater than.$/;"	e	enum:llvm::ARMISD::NodeType
VCGTZ	Target/ARM/ARMISelLowering.h	/^      VCGTZ,        \/\/ Vector compare greater than zero.$/;"	e	enum:llvm::ARMISD::NodeType
VCLEZ	Target/ARM/ARMISelLowering.h	/^      VCLEZ,        \/\/ Vector compare less than or equal to zero.$/;"	e	enum:llvm::ARMISD::NodeType
VCLTZ	Target/ARM/ARMISelLowering.h	/^      VCLTZ,        \/\/ Vector compare less than zero.$/;"	e	enum:llvm::ARMISD::NodeType
VCMP	Target/PowerPC/PPCISelLowering.h	/^      VCMP,$/;"	e	enum:llvm::PPCISD::NodeType
VCMPo	Target/PowerPC/PPCISelLowering.h	/^      VCMPo,$/;"	e	enum:llvm::PPCISD::NodeType
VDUP	Target/ARM/ARMISelLowering.h	/^      VDUP,$/;"	e	enum:llvm::ARMISD::NodeType
VDUPLANE	Target/ARM/ARMISelLowering.h	/^      VDUPLANE,$/;"	e	enum:llvm::ARMISD::NodeType
VE	Bitcode/Writer/ValueEnumerator.cpp	/^    ValueEnumerator &VE;$/;"	m	struct:__anon56::CstSortPredicate	file:
VEC2PREFSLOT	Target/CellSPU/SPUISelLowering.h	/^      VEC2PREFSLOT,             \/\/\/< Extract element 0$/;"	e	enum:llvm::SPUISD::NodeType
VECINST	Target/NVPTX/VectorElementize.cpp	133;"	d	file:
VEC_ROTL	Target/CellSPU/SPUISelLowering.h	/^      VEC_ROTL,                 \/\/\/< Vector rotate left$/;"	e	enum:llvm::SPUISD::NodeType
VEC_ROTR	Target/CellSPU/SPUISelLowering.h	/^      VEC_ROTR,                 \/\/\/< Vector rotate right$/;"	e	enum:llvm::SPUISD::NodeType
VEX	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    VEX         = 1U << 0,$/;"	e	enum:llvm::X86II::__anon350
VEXLeadingOpcodeByte	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^} VEXLeadingOpcodeByte;$/;"	t	typeref:enum:__anon360
VEXPrefixCode	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^} VEXPrefixCode;$/;"	t	typeref:enum:__anon361
VEXShift	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    VEXShift = OpcodeShift + 8,$/;"	e	enum:llvm::X86II::__anon350
VEXT	Target/ARM/ARMISelLowering.h	/^      VEXT,         \/\/ extract$/;"	e	enum:llvm::ARMISD::NodeType
VEX_4V	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    VEX_4V      = 1U << 2,$/;"	e	enum:llvm::X86II::__anon350
VEX_4VOp3	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    VEX_4VOp3   = 1U << 3,$/;"	e	enum:llvm::X86II::__anon350
VEX_I8IMM	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    VEX_I8IMM   = 1U << 4,$/;"	e	enum:llvm::X86II::__anon350
VEX_L	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    VEX_L       = 1U << 5,$/;"	e	enum:llvm::X86II::__anon350
VEX_LIG	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    VEX_LIG     = 1U << 6,$/;"	e	enum:llvm::X86II::__anon350
VEX_LOB_0F	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  VEX_LOB_0F = 0x1,$/;"	e	enum:__anon360
VEX_LOB_0F38	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  VEX_LOB_0F38 = 0x2,$/;"	e	enum:__anon360
VEX_LOB_0F3A	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  VEX_LOB_0F3A = 0x3$/;"	e	enum:__anon360
VEX_PREFIX_66	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  VEX_PREFIX_66 = 0x1,$/;"	e	enum:__anon361
VEX_PREFIX_F2	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  VEX_PREFIX_F2 = 0x3$/;"	e	enum:__anon361
VEX_PREFIX_F3	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  VEX_PREFIX_F3 = 0x2,$/;"	e	enum:__anon361
VEX_PREFIX_NONE	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  VEX_PREFIX_NONE = 0x0,$/;"	e	enum:__anon361
VEX_W	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    VEX_W       = 1U << 1,$/;"	e	enum:llvm::X86II::__anon350
VF	Transforms/Vectorize/LoopVectorize.cpp	/^  unsigned VF;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
VFPBinaryFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPBinaryFrm  = 16 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFPConv1Frm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPConv1Frm   = 17 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFPConv2Frm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPConv2Frm   = 18 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFPConv3Frm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPConv3Frm   = 19 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFPConv4Frm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPConv4Frm   = 20 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFPConv5Frm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPConv5Frm   = 21 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFPEXT	Target/X86/X86ISelLowering.h	/^      VFPEXT,$/;"	e	enum:llvm::X86ISD::NodeType
VFPLdStFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPLdStFrm    = 22 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFPLdStMulFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPLdStMulFrm = 23 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFPMiscFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPMiscFrm    = 24 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFPROUND	Target/X86/X86ISelLowering.h	/^      VFPROUND,$/;"	e	enum:llvm::X86ISD::NodeType
VFPThumb2PostEncoder	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned VFPThumb2PostEncoder(const MachineInstr&MI, unsigned Val)$/;"	f	class:__anon297::ARMCodeEmitter	file:
VFPThumb2PostEncoder	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^VFPThumb2PostEncoder(const MCInst &MI, unsigned EncodedValue) const {$/;"	f	class:ARMMCCodeEmitter
VFPUnaryFrm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VFPUnaryFrm   = 15 << FormShift,$/;"	e	enum:llvm::ARMII::__anon288
VFP_HP_extension	Target/ARM/ARMBuildAttrs.h	/^    VFP_HP_extension          = 36,$/;"	e	enum:ARMBuildAttrs::AttrType
VFP_arch	Target/ARM/ARMBuildAttrs.h	/^    VFP_arch                  = 10,$/;"	e	enum:ARMBuildAttrs::AttrType
VGETLANEs	Target/ARM/ARMISelLowering.h	/^      VGETLANEs,    \/\/ sign-extend vector extract element$/;"	e	enum:llvm::ARMISD::NodeType
VGETLANEu	Target/ARM/ARMISelLowering.h	/^      VGETLANEu,    \/\/ zero-extend vector extract element$/;"	e	enum:llvm::ARMISD::NodeType
VK_ARM_HI16	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^    VK_ARM_HI16,  \/\/ The R_ARM_MOVT_ABS relocation (:upper16: in the .s file)$/;"	e	enum:llvm::ARMMCExpr::VariantKind
VK_ARM_LO16	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^    VK_ARM_LO16   \/\/ The R_ARM_MOVW_ABS_NC relocation (:lower16: in the .s file)$/;"	e	enum:llvm::ARMMCExpr::VariantKind
VK_ARM_None	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^    VK_ARM_None,$/;"	e	enum:llvm::ARMMCExpr::VariantKind
VLD1_UPD	Target/ARM/ARMISelLowering.h	/^      VLD1_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLD2DUP	Target/ARM/ARMISelLowering.h	/^      VLD2DUP = ISD::FIRST_TARGET_MEMORY_OPCODE,$/;"	e	enum:llvm::ARMISD::NodeType
VLD2DUP_UPD	Target/ARM/ARMISelLowering.h	/^      VLD2DUP_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLD2LN_UPD	Target/ARM/ARMISelLowering.h	/^      VLD2LN_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLD2_UPD	Target/ARM/ARMISelLowering.h	/^      VLD2_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLD3DUP	Target/ARM/ARMISelLowering.h	/^      VLD3DUP,$/;"	e	enum:llvm::ARMISD::NodeType
VLD3DUP_UPD	Target/ARM/ARMISelLowering.h	/^      VLD3DUP_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLD3LN_UPD	Target/ARM/ARMISelLowering.h	/^      VLD3LN_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLD3_UPD	Target/ARM/ARMISelLowering.h	/^      VLD3_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLD4DUP	Target/ARM/ARMISelLowering.h	/^      VLD4DUP,$/;"	e	enum:llvm::ARMISD::NodeType
VLD4DUP_UPD	Target/ARM/ARMISelLowering.h	/^      VLD4DUP_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLD4LN_UPD	Target/ARM/ARMISelLowering.h	/^      VLD4LN_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLD4_UPD	Target/ARM/ARMISelLowering.h	/^      VLD4_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VLIWMachineScheduler	Target/Hexagon/HexagonMachineScheduler.h	/^  VLIWMachineScheduler(MachineSchedContext *C, MachineSchedStrategy *S):$/;"	f	class:llvm::VLIWMachineScheduler
VLIWMachineScheduler	Target/Hexagon/HexagonMachineScheduler.h	/^class VLIWMachineScheduler : public ScheduleDAGMI {$/;"	c	namespace:llvm
VLIWPacketizerList	CodeGen/DFAPacketizer.cpp	/^VLIWPacketizerList::VLIWPacketizerList($/;"	f	class:VLIWPacketizerList
VLIWResourceModel	Target/Hexagon/HexagonMachineScheduler.h	/^VLIWResourceModel(const TargetMachine &TM, const TargetSchedModel *SM) :$/;"	f	class:llvm::VLIWResourceModel
VLIWResourceModel	Target/Hexagon/HexagonMachineScheduler.h	/^class VLIWResourceModel {$/;"	c	namespace:llvm
VMADDFP	Target/PowerPC/PPCISelLowering.h	/^      VMADDFP, VNMSUBFP,$/;"	e	enum:llvm::PPCISD::NodeType
VMOVDRR	Target/ARM/ARMISelLowering.h	/^      VMOVDRR,      \/\/ Two gprs to double.$/;"	e	enum:llvm::ARMISD::NodeType
VMOVFPIMM	Target/ARM/ARMISelLowering.h	/^      VMOVFPIMM,$/;"	e	enum:llvm::ARMISD::NodeType
VMOVIMM	Target/ARM/ARMISelLowering.h	/^      VMOVIMM,$/;"	e	enum:llvm::ARMISD::NodeType
VMOVModImm	Target/ARM/ARMISelLowering.h	/^    VMOVModImm,$/;"	e	enum:llvm::NEONModImmType
VMOVRRD	Target/ARM/ARMISelLowering.h	/^      VMOVRRD,      \/\/ double to two gprs.$/;"	e	enum:llvm::ARMISD::NodeType
VMULLs	Target/ARM/ARMISelLowering.h	/^      VMULLs,       \/\/ ...signed$/;"	e	enum:llvm::ARMISD::NodeType
VMULLu	Target/ARM/ARMISelLowering.h	/^      VMULLu,       \/\/ ...unsigned$/;"	e	enum:llvm::ARMISD::NodeType
VMVNIMM	Target/ARM/ARMISelLowering.h	/^      VMVNIMM,$/;"	e	enum:llvm::ARMISD::NodeType
VMVNModImm	Target/ARM/ARMISelLowering.h	/^    VMVNModImm,$/;"	e	enum:llvm::NEONModImmType
VMap	Transforms/Utils/CloneFunction.cpp	/^    ValueToValueMapTy &VMap;$/;"	m	struct:__anon465::PruningFunctionCloner	file:
VN	Transforms/Scalar/GVN.cpp	/^    ValueTable VN;$/;"	m	class:__anon537::GVN	file:
VNInfoAllocator	CodeGen/StackColoring.cpp	/^  VNInfo::Allocator VNInfoAllocator;$/;"	m	class:__anon113::StackColoring	file:
VNMSUBFP	Target/PowerPC/PPCISelLowering.h	/^      VMADDFP, VNMSUBFP,$/;"	e	enum:llvm::PPCISD::NodeType
VNT	CodeGen/MachineCSE.cpp	/^    ScopedHTType VNT;$/;"	m	class:__anon161::MachineCSE	file:
VORRIMM	Target/ARM/ARMISelLowering.h	/^      VORRIMM,$/;"	e	enum:llvm::ARMISD::NodeType
VPERM	Target/PowerPC/PPCISelLowering.h	/^      VPERM,$/;"	e	enum:llvm::PPCISD::NodeType
VPERM2X128	Target/X86/X86ISelLowering.h	/^      VPERM2X128,$/;"	e	enum:llvm::X86ISD::NodeType
VPERMI	Target/X86/X86ISelLowering.h	/^      VPERMI,$/;"	e	enum:llvm::X86ISD::NodeType
VPERMILP	Target/X86/X86ISelLowering.h	/^      VPERMILP,$/;"	e	enum:llvm::X86ISD::NodeType
VPERMV	Target/X86/X86ISelLowering.h	/^      VPERMV,$/;"	e	enum:llvm::X86ISD::NodeType
VPIteratorPair	Transforms/Vectorize/BBVectorize.cpp	/^              std::multimap<Value *, Value *>::iterator> VPIteratorPair;$/;"	t	struct:__anon604::BBVectorize	file:
VPPIteratorPair	Transforms/Vectorize/BBVectorize.cpp	/^                VPPIteratorPair;$/;"	t	struct:__anon604::BBVectorize	file:
VPPair	Transforms/Vectorize/BBVectorize.cpp	/^    typedef std::pair<ValuePair, ValuePair> VPPair; \/\/ A ValuePair pair$/;"	t	struct:__anon604::BBVectorize	file:
VQRSHRNs	Target/ARM/ARMISelLowering.h	/^      VQRSHRNs,     \/\/ ...right narrow (signed)$/;"	e	enum:llvm::ARMISD::NodeType
VQRSHRNsu	Target/ARM/ARMISelLowering.h	/^      VQRSHRNsu,    \/\/ ...right narrow (signed to unsigned)$/;"	e	enum:llvm::ARMISD::NodeType
VQRSHRNu	Target/ARM/ARMISelLowering.h	/^      VQRSHRNu,     \/\/ ...right narrow (unsigned)$/;"	e	enum:llvm::ARMISD::NodeType
VQSHLs	Target/ARM/ARMISelLowering.h	/^      VQSHLs,       \/\/ ...left (signed)$/;"	e	enum:llvm::ARMISD::NodeType
VQSHLsu	Target/ARM/ARMISelLowering.h	/^      VQSHLsu,      \/\/ ...left (signed to unsigned)$/;"	e	enum:llvm::ARMISD::NodeType
VQSHLu	Target/ARM/ARMISelLowering.h	/^      VQSHLu,       \/\/ ...left (unsigned)$/;"	e	enum:llvm::ARMISD::NodeType
VQSHRNs	Target/ARM/ARMISelLowering.h	/^      VQSHRNs,      \/\/ ...right narrow (signed)$/;"	e	enum:llvm::ARMISD::NodeType
VQSHRNsu	Target/ARM/ARMISelLowering.h	/^      VQSHRNsu,     \/\/ ...right narrow (signed to unsigned)$/;"	e	enum:llvm::ARMISD::NodeType
VQSHRNu	Target/ARM/ARMISelLowering.h	/^      VQSHRNu,      \/\/ ...right narrow (unsigned)$/;"	e	enum:llvm::ARMISD::NodeType
VREV16	Target/ARM/ARMISelLowering.h	/^      VREV16,       \/\/ reverse elements within 16-bit halfwords$/;"	e	enum:llvm::ARMISD::NodeType
VREV32	Target/ARM/ARMISelLowering.h	/^      VREV32,       \/\/ reverse elements within 32-bit words$/;"	e	enum:llvm::ARMISD::NodeType
VREV64	Target/ARM/ARMISelLowering.h	/^      VREV64,       \/\/ reverse elements within 64-bit doublewords$/;"	e	enum:llvm::ARMISD::NodeType
VRM	CodeGen/InlineSpiller.cpp	/^  VirtRegMap &VRM;$/;"	m	class:__anon155::InlineSpiller	file:
VRM	CodeGen/LiveRegMatrix.h	/^  VirtRegMap *VRM;$/;"	m	class:llvm::LiveRegMatrix
VRM	CodeGen/RegAllocBase.h	/^  VirtRegMap *VRM;$/;"	m	class:llvm::RegAllocBase
VRM	CodeGen/SplitKit.h	/^  VirtRegMap &VRM;$/;"	m	class:llvm::SplitEditor
VRM	CodeGen/SplitKit.h	/^  const VirtRegMap &VRM;$/;"	m	class:llvm::SplitAnalysis
VRM	CodeGen/VirtRegMap.cpp	/^  VirtRegMap *VRM;$/;"	m	class:__anon97::VirtRegRewriter	file:
VRMap	CodeGen/LiveDebugVariables.cpp	/^  typedef DenseMap<unsigned, UserValue*> VRMap;$/;"	t	class:__anon153::LDVImpl	file:
VRRegNo	Target/PowerPC/PPCFrameLowering.cpp	/^static const uint16_t VRRegNo[] = {$/;"	v	file:
VRSHRN	Target/ARM/ARMISelLowering.h	/^      VRSHRN,       \/\/ ...right narrow$/;"	e	enum:llvm::ARMISD::NodeType
VRSHRs	Target/ARM/ARMISelLowering.h	/^      VRSHRs,       \/\/ ...right (signed)$/;"	e	enum:llvm::ARMISD::NodeType
VRSHRu	Target/ARM/ARMISelLowering.h	/^      VRSHRu,       \/\/ ...right (unsigned)$/;"	e	enum:llvm::ARMISD::NodeType
VRegPHIUse	CodeGen/PHIElimination.cpp	/^    typedef DenseMap<BBVRegPair, unsigned> VRegPHIUse;$/;"	t	class:__anon164::PHIElimination	file:
VRegPHIUseCount	CodeGen/PHIElimination.cpp	/^    VRegPHIUse VRegPHIUseCount;$/;"	m	class:__anon164::PHIElimination	file:
VRidGlobal2LocalMap	Target/NVPTX/NVPTXAsmPrinter.h	/^  std::map<unsigned, unsigned> *VRidGlobal2LocalMap;$/;"	m	class:llvm::NVPTXAsmPrinter
VS	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    VS,            \/\/ Overflow                   Unordered$/;"	e	enum:llvm::ARMCC::CondCodes
VSEXT_MOVL	Target/X86/X86ISelLowering.h	/^      VSEXT_MOVL,$/;"	e	enum:llvm::X86ISD::NodeType
VSHL	Target/ARM/ARMISelLowering.h	/^      VSHL,         \/\/ ...left$/;"	e	enum:llvm::ARMISD::NodeType
VSHL	Target/X86/X86ISelLowering.h	/^      VSHL, VSRL, VSRA,$/;"	e	enum:llvm::X86ISD::NodeType
VSHLDQ	Target/X86/X86ISelLowering.h	/^      VSHLDQ, VSRLDQ,$/;"	e	enum:llvm::X86ISD::NodeType
VSHLI	Target/X86/X86ISelLowering.h	/^      VSHLI, VSRLI, VSRAI,$/;"	e	enum:llvm::X86ISD::NodeType
VSHLLi	Target/ARM/ARMISelLowering.h	/^      VSHLLi,       \/\/ ...left long (with maximum shift count)$/;"	e	enum:llvm::ARMISD::NodeType
VSHLLs	Target/ARM/ARMISelLowering.h	/^      VSHLLs,       \/\/ ...left long (signed)$/;"	e	enum:llvm::ARMISD::NodeType
VSHLLu	Target/ARM/ARMISelLowering.h	/^      VSHLLu,       \/\/ ...left long (unsigned)$/;"	e	enum:llvm::ARMISD::NodeType
VSHRN	Target/ARM/ARMISelLowering.h	/^      VSHRN,        \/\/ ...right narrow$/;"	e	enum:llvm::ARMISD::NodeType
VSHRs	Target/ARM/ARMISelLowering.h	/^      VSHRs,        \/\/ ...right (signed)$/;"	e	enum:llvm::ARMISD::NodeType
VSHRu	Target/ARM/ARMISelLowering.h	/^      VSHRu,        \/\/ ...right (unsigned)$/;"	e	enum:llvm::ARMISD::NodeType
VSLI	Target/ARM/ARMISelLowering.h	/^      VSLI,         \/\/ ...left$/;"	e	enum:llvm::ARMISD::NodeType
VSRA	Target/X86/X86ISelLowering.h	/^      VSHL, VSRL, VSRA,$/;"	e	enum:llvm::X86ISD::NodeType
VSRAI	Target/X86/X86ISelLowering.h	/^      VSHLI, VSRLI, VSRAI,$/;"	e	enum:llvm::X86ISD::NodeType
VSRI	Target/ARM/ARMISelLowering.h	/^      VSRI,         \/\/ ...right$/;"	e	enum:llvm::ARMISD::NodeType
VSRL	Target/X86/X86ISelLowering.h	/^      VSHL, VSRL, VSRA,$/;"	e	enum:llvm::X86ISD::NodeType
VSRLDQ	Target/X86/X86ISelLowering.h	/^      VSHLDQ, VSRLDQ,$/;"	e	enum:llvm::X86ISD::NodeType
VSRLI	Target/X86/X86ISelLowering.h	/^      VSHLI, VSRLI, VSRAI,$/;"	e	enum:llvm::X86ISD::NodeType
VST1_UPD	Target/ARM/ARMISelLowering.h	/^      VST1_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VST2LN_UPD	Target/ARM/ARMISelLowering.h	/^      VST2LN_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VST2_UPD	Target/ARM/ARMISelLowering.h	/^      VST2_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VST3LN_UPD	Target/ARM/ARMISelLowering.h	/^      VST3LN_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VST3_UPD	Target/ARM/ARMISelLowering.h	/^      VST3_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VST4LN_UPD	Target/ARM/ARMISelLowering.h	/^      VST4LN_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VST4_UPD	Target/ARM/ARMISelLowering.h	/^      VST4_UPD,$/;"	e	enum:llvm::ARMISD::NodeType
VST_BBENTRY_6_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  VST_BBENTRY_6_ABBREV,$/;"	e	enum:__anon57	file:
VST_ENTRY_6_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  VST_ENTRY_6_ABBREV,$/;"	e	enum:__anon57	file:
VST_ENTRY_7_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  VST_ENTRY_7_ABBREV,$/;"	e	enum:__anon57	file:
VST_ENTRY_8_ABBREV	Bitcode/Writer/BitcodeWriter.cpp	/^  VST_ENTRY_8_ABBREV = bitc::FIRST_APPLICATION_ABBREV,$/;"	e	enum:__anon57	file:
VTBL1	Target/ARM/ARMISelLowering.h	/^      VTBL1,        \/\/ 1-register shuffle with mask$/;"	e	enum:llvm::ARMISD::NodeType
VTBL2	Target/ARM/ARMISelLowering.h	/^      VTBL2,        \/\/ 2-register shuffle with mask$/;"	e	enum:llvm::ARMISD::NodeType
VTMutex	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static ManagedStatic<sys::SmartMutex<true> > VTMutex;$/;"	v	file:
VTRN	Target/ARM/ARMISelLowering.h	/^      VTRN,         \/\/ transpose$/;"	e	enum:llvm::ARMISD::NodeType
VTST	Target/ARM/ARMISelLowering.h	/^      VTST,         \/\/ Vector test bits.$/;"	e	enum:llvm::ARMISD::NodeType
VTTI	Target/ARM/ARMTargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::ARMTargetMachine
VTTI	Target/ARM/ARMTargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::ThumbTargetMachine
VTTI	Target/CellSPU/SPUTargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::SPUTargetMachine
VTTI	Target/Hexagon/HexagonTargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::HexagonTargetMachine
VTTI	Target/MBlaze/MBlazeTargetMachine.h	/^    VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::MBlazeTargetMachine
VTTI	Target/MSP430/MSP430TargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::MSP430TargetMachine
VTTI	Target/Mips/MipsTargetMachine.h	/^  VectorTargetTransformInfo VTTI; $/;"	m	class:llvm::MipsTargetMachine
VTTI	Target/NVPTX/NVPTXTargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::NVPTXTargetMachine
VTTI	Target/PowerPC/PPCTargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::PPCTargetMachine
VTTI	Target/Sparc/SparcTargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::SparcTargetMachine
VTTI	Target/X86/X86TargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::X86_32TargetMachine
VTTI	Target/X86/X86TargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::X86_64TargetMachine
VTTI	Target/XCore/XCoreTargetMachine.h	/^  VectorTargetTransformImpl VTTI;$/;"	m	class:llvm::XCoreTargetMachine
VTs	CodeGen/SelectionDAG/SelectionDAG.cpp	/^    std::vector<EVT> VTs;$/;"	m	struct:__anon75::EVTArray	file:
VUZP	Target/ARM/ARMISelLowering.h	/^      VUZP,         \/\/ unzip (deinterleave)$/;"	e	enum:llvm::ARMISD::NodeType
VZEXT_LOAD	Target/X86/X86ISelLowering.h	/^      VZEXT_LOAD,$/;"	e	enum:llvm::X86ISD::NodeType
VZEXT_MOVL	Target/X86/X86ISelLowering.h	/^      VZEXT_MOVL,$/;"	e	enum:llvm::X86ISD::NodeType
VZIP	Target/ARM/ARMISelLowering.h	/^      VZIP,         \/\/ zip (interleave)$/;"	e	enum:llvm::ARMISD::NodeType
VZeroUpperInserter	Target/X86/X86VZeroUpper.cpp	/^    VZeroUpperInserter() : MachineFunctionPass(ID) {}$/;"	f	struct:__anon382::VZeroUpperInserter
VZeroUpperInserter	Target/X86/X86VZeroUpper.cpp	/^  struct VZeroUpperInserter : public MachineFunctionPass {$/;"	s	namespace:__anon382	file:
Val	Analysis/LazyValueInfo.cpp	/^      Value *Val;$/;"	m	struct:__anon20::LazyValueInfoCache::OverDefinedCacheUpdater	file:
Val	Analysis/LazyValueInfo.cpp	/^  Constant *Val;$/;"	m	class:__anon18::LVILatticeVal	file:
Val	CodeGen/RegisterCoalescer.cpp	/^    Val() : Resolution(CR_Keep), WriteLanes(0), ValidLanes(0),$/;"	f	struct:__anon115::JoinVals::Val
Val	CodeGen/RegisterCoalescer.cpp	/^  struct Val {$/;"	s	class:__anon115::JoinVals	file:
Val	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      ARMCC::CondCodes Val;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon263	file:
Val	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      ARM_MB::MemBOpt Val;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon267	file:
Val	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      ARM_PROC::IFlags Val;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon268	file:
Val	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      const MCExpr *Val;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon274	file:
Val	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Val;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon264	file:
Val	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Val;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon265	file:
Val	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Val;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon269	file:
Val	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Val;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon273	file:
Val	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^      const MCExpr *Val;$/;"	m	struct:__anon446::MBlazeOperand::__anon447::__anon450	file:
Val	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^      const MCExpr *Val;$/;"	m	struct:__anon446::MBlazeOperand::__anon447::__anon452	file:
Val	Target/Mips/AsmParser/MipsAsmParser.cpp	/^      const MCExpr *Val;$/;"	m	struct:__anon423::MipsOperand::__anon424::__anon427	file:
Val	Target/X86/AsmParser/X86AsmParser.cpp	/^      const MCExpr *Val;$/;"	m	struct:__anon336::X86Operand::__anon337::__anon340	file:
Val	Transforms/Scalar/GVN.cpp	/^      Value *Val;$/;"	m	struct:__anon537::GVN::LeaderTableEntry	file:
Val	Transforms/Scalar/GVN.cpp	/^  PointerIntPair<Value *, 2, ValType> Val;$/;"	m	struct:__anon538::AvailableValueInBlock	file:
Val	Transforms/Scalar/SCCP.cpp	/^  PointerIntPair<Constant *, 2, LatticeValueTy> Val;$/;"	m	class:__anon530::LatticeVal	file:
ValID	AsmParser/LLParser.h	/^    ValID() : Kind(t_LocalID), APFloatVal(0.0) {}$/;"	f	struct:llvm::ValID
ValID	AsmParser/LLParser.h	/^  struct ValID {$/;"	s	namespace:llvm
ValT	CodeGen/MachineSSAUpdater.cpp	/^  typedef unsigned ValT;$/;"	t	class:llvm::SSAUpdaterTraits	file:
ValT	Transforms/Utils/SSAUpdater.cpp	/^  typedef Value *ValT;$/;"	t	class:llvm::SSAUpdaterTraits	file:
ValType	Transforms/Scalar/GVN.cpp	/^  enum ValType {$/;"	g	struct:__anon538::AvailableValueInBlock	file:
ValType	VMCore/ConstantsContext.h	/^  typedef ExprMapKeyType ValType;$/;"	t	struct:llvm::ConstantKeyData
ValType	VMCore/ConstantsContext.h	/^  typedef InlineAsmKeyType ValType;$/;"	t	struct:llvm::ConstantKeyData
ValType	VMCore/ConstantsContext.h	/^  typedef void ValType;$/;"	t	struct:llvm::ConstantKeyData
ValVector	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    typedef std::vector<Value *> ValVector;$/;"	t	class:__anon469::RenamePassData	file:
ValgrindDiscardTranslations	Support/Valgrind.cpp	/^void llvm::sys::ValgrindDiscardTranslations(const void *Addr, size_t Len) {$/;"	f	class:llvm::sys
Valid	MC/MCDisassembler/EDDisassembler.h	/^  bool Valid;$/;"	m	struct:llvm::EDDisassembler
Valid	MC/MCDisassembler/EDInst.h	/^  bool Valid;$/;"	m	struct:llvm::CachedResult
ValidDiamond	CodeGen/IfConversion.cpp	/^bool IfConverter::ValidDiamond(BBInfo &TrueBBI, BBInfo &FalseBBI,$/;"	f	class:IfConverter
ValidLanes	CodeGen/RegisterCoalescer.cpp	/^    unsigned ValidLanes;$/;"	m	struct:__anon115::JoinVals::Val	file:
ValidLookupTableConstant	Transforms/Utils/SimplifyCFG.cpp	/^static bool ValidLookupTableConstant(Constant *C) {$/;"	f	file:
ValidSimple	CodeGen/IfConversion.cpp	/^bool IfConverter::ValidSimple(BBInfo &TrueBBI, unsigned &Dups,$/;"	f	class:IfConverter
ValidTriangle	CodeGen/IfConversion.cpp	/^bool IfConverter::ValidTriangle(BBInfo &TrueBBI, BBInfo &FalseBBI,$/;"	f	class:IfConverter
ValidateEndOfModule	AsmParser/LLParser.cpp	/^bool LLParser::ValidateEndOfModule() {$/;"	f	class:LLParser
Vals	Analysis/AliasDebugger.cpp	/^    std::set<const Value*> Vals;$/;"	m	class:__anon44::AliasDebugger	file:
Vals	CodeGen/RegisterCoalescer.cpp	/^  SmallVector<Val, 8> Vals;$/;"	m	class:__anon115::JoinVals	file:
Value	CodeGen/ExecutionDepsFix.cpp	/^  DomainValue *Value;$/;"	m	struct:__anon119::LiveReg	file:
Value	CodeGen/LiveRangeCalc.h	/^    VNInfo *Value;$/;"	m	struct:llvm::LiveRangeCalc::LiveInBlock
Value	CodeGen/SpillPlacement.cpp	/^  float Value;$/;"	m	struct:SpillPlacement::Node	file:
Value	DebugInfo/DWARFFormValue.h	/^  ValueType Value; \/\/ Contains all data for the form.$/;"	m	class:llvm::DWARFFormValue
Value	TableGen/TGParser.h	/^    Init *Value;$/;"	m	struct:llvm::LetRecord
Value	Transforms/Utils/SimplifyCFG.cpp	/^    ConstantInt *Value;$/;"	m	struct:__anon478::ValueEqualityComparisonCase	file:
Value	VMCore/Value.cpp	/^Value::Value(Type *ty, unsigned scid)$/;"	f	class:Value
ValueAlreadyLiveAtInst	Transforms/Utils/AddrModeMatcher.cpp	/^bool AddressingModeMatcher::ValueAlreadyLiveAtInst(Value *Val,Value *KnownLive1,$/;"	f	class:AddressingModeMatcher
ValueCache	Analysis/LazyValueInfo.cpp	/^    std::map<LVIValueHandle, ValueCacheEntryTy> ValueCache;$/;"	m	class:__anon20::LazyValueInfoCache	file:
ValueCacheEntryTy	Analysis/LazyValueInfo.cpp	/^    typedef std::map<AssertingVH<BasicBlock>, LVILatticeVal> ValueCacheEntryTy;$/;"	t	class:__anon20::LazyValueInfoCache	file:
ValueDominatesPHI	Analysis/InstructionSimplify.cpp	/^static bool ValueDominatesPHI(Value *V, PHINode *P, const DominatorTree *DT) {$/;"	f	file:
ValueEntry	Transforms/Scalar/Reassociate.cpp	/^    ValueEntry(unsigned R, Value *O) : Rank(R), Op(O) {}$/;"	f	struct:__anon547::ValueEntry
ValueEntry	Transforms/Scalar/Reassociate.cpp	/^  struct ValueEntry {$/;"	s	namespace:__anon547	file:
ValueEnumerator	Bitcode/Writer/ValueEnumerator.cpp	/^ValueEnumerator::ValueEnumerator(const Module *M) {$/;"	f	class:ValueEnumerator
ValueEnumerator	Bitcode/Writer/ValueEnumerator.h	/^class ValueEnumerator {$/;"	c	namespace:llvm
ValueEqualityComparisonCase	Transforms/Utils/SimplifyCFG.cpp	/^    ValueEqualityComparisonCase(ConstantInt *Value, BasicBlock *Dest)$/;"	f	struct:__anon478::ValueEqualityComparisonCase
ValueEqualityComparisonCase	Transforms/Utils/SimplifyCFG.cpp	/^  struct ValueEqualityComparisonCase {$/;"	s	namespace:__anon478	file:
ValueForPoison	Transforms/Instrumentation/AddressSanitizer.cpp	/^static uint64_t ValueForPoison(uint64_t PoisonByte, size_t ShadowRedzoneSize) {$/;"	f	file:
ValueForTypeID	CodeGen/AsmPrinter/DwarfException.h	/^    int ValueForTypeID; \/\/ The value to write - may not be equal to the type id.$/;"	m	struct:llvm::DwarfException::ActionEntry
ValueForTypeID	ExecutionEngine/JIT/JITDwarfEmitter.cpp	/^  int ValueForTypeID; \/\/ The value to write - may not be equal to the type id.$/;"	m	struct:__anon183::ActionEntry	file:
ValueForcePair	CodeGen/SplitKit.h	/^  typedef PointerIntPair<VNInfo*, 1> ValueForcePair;$/;"	t	class:llvm::SplitEditor
ValueHandles	VMCore/LLVMContextImpl.h	/^  ValueHandlesTy ValueHandles;$/;"	m	class:llvm::LLVMContextImpl
ValueHandlesTy	VMCore/LLVMContextImpl.h	/^  typedef DenseMap<Value*, ValueHandleBase*> ValueHandlesTy;$/;"	t	class:llvm::LLVMContextImpl
ValueHasExactlyOneBitSet	CodeGen/SelectionDAG/TargetLowering.cpp	/^static bool ValueHasExactlyOneBitSet(SDValue Val, const SelectionDAG &DAG) {$/;"	f	file:
ValueIsDeleted	VMCore/Value.cpp	/^void ValueHandleBase::ValueIsDeleted(Value *V) {$/;"	f	class:ValueHandleBase
ValueIsNewPHI	CodeGen/MachineSSAUpdater.cpp	/^  static MachineInstr *ValueIsNewPHI(unsigned Val, MachineSSAUpdater *Updater) {$/;"	f	class:llvm::SSAUpdaterTraits
ValueIsNewPHI	Transforms/Utils/SSAUpdater.cpp	/^  static PHINode *ValueIsNewPHI(Value *Val, SSAUpdater *Updater) {$/;"	f	class:llvm::SSAUpdaterTraits
ValueIsOnlyUsedLocallyOrStoredToOneGlobal	Transforms/IPO/GlobalOpt.cpp	/^static bool ValueIsOnlyUsedLocallyOrStoredToOneGlobal(const Instruction *V,$/;"	f	file:
ValueIsPHI	CodeGen/MachineSSAUpdater.cpp	/^  static MachineInstr *ValueIsPHI(unsigned Val, MachineSSAUpdater *Updater) {$/;"	f	class:llvm::SSAUpdaterTraits
ValueIsPHI	Transforms/Utils/SSAUpdater.cpp	/^  static PHINode *ValueIsPHI(Value *Val, SSAUpdater *Updater) {$/;"	f	class:llvm::SSAUpdaterTraits
ValueIsRAUWd	VMCore/Value.cpp	/^void ValueHandleBase::ValueIsRAUWd(Value *Old, Value *New) {$/;"	f	class:ValueHandleBase
ValueList	Bitcode/Reader/BitcodeReader.h	/^  BitcodeReaderValueList ValueList;$/;"	m	class:llvm::BitcodeReader
ValueList	Bitcode/Writer/ValueEnumerator.h	/^  typedef std::vector<std::pair<const Value*, unsigned> > ValueList;$/;"	t	class:llvm::ValueEnumerator
ValueMap	Bitcode/Writer/ValueEnumerator.h	/^  ValueMapType ValueMap;$/;"	m	class:llvm::ValueEnumerator
ValueMap	CodeGen/SplitKit.h	/^  typedef DenseMap<std::pair<unsigned, unsigned>, ValueForcePair> ValueMap;$/;"	t	class:llvm::SplitEditor
ValueMap	Linker/LinkModules.cpp	/^    ValueToValueMapTy ValueMap;$/;"	m	class:__anon202::ModuleLinker	file:
ValueMap	Target/CppBackend/CPPBackend.cpp	/^  typedef std::map<const Value*,std::string> ValueMap;$/;"	t	namespace:__anon412	file:
ValueMap	Transforms/Vectorize/LoopVectorize.cpp	/^  typedef DenseMap<Value*, Value*> ValueMap;$/;"	t	class:__anon605::SingleBlockLoopVectorizer	file:
ValueMap	VMCore/AsmWriter.cpp	/^  typedef DenseMap<const Value*, unsigned> ValueMap;$/;"	t	class:__anon612::SlotTracker	file:
ValueMapType	Bitcode/Writer/ValueEnumerator.h	/^  typedef DenseMap<const Value*, unsigned> ValueMapType;$/;"	t	class:llvm::ValueEnumerator
ValueNames	Target/CppBackend/CPPBackend.cpp	/^    ValueMap ValueNames;$/;"	m	class:__anon412::CppWriter	file:
ValuePair	Transforms/Vectorize/BBVectorize.cpp	/^    typedef std::pair<Value *, Value *> ValuePair;$/;"	t	struct:__anon604::BBVectorize	file:
ValuePairTy	Transforms/Scalar/ObjCARC.cpp	/^    typedef std::pair<const Value *, const Value *> ValuePairTy;$/;"	t	class:__anon503::ProvenanceAnalysis	file:
ValuePairWithDepth	Transforms/Vectorize/BBVectorize.cpp	/^    typedef std::pair<ValuePair, size_t> ValuePairWithDepth;$/;"	t	struct:__anon604::BBVectorize	file:
ValuePlaneTy	ExecutionEngine/Interpreter/Interpreter.h	/^typedef std::vector<GenericValue> ValuePlaneTy;$/;"	t	namespace:llvm
ValuePtrs	Bitcode/Reader/BitcodeReader.h	/^  std::vector<WeakVH> ValuePtrs;$/;"	m	class:llvm::BitcodeReaderValueList
ValueRankMap	Transforms/Scalar/Reassociate.cpp	/^    DenseMap<AssertingVH<Value>, unsigned> ValueRankMap;$/;"	m	class:__anon549::Reassociate	file:
ValueSet	Target/CppBackend/CPPBackend.cpp	/^  typedef std::set<const Value*> ValueSet;$/;"	t	namespace:__anon412	file:
ValueStack	Transforms/IPO/GlobalOpt.cpp	/^  SmallVector<DenseMap<Value*, Constant*>*, 4> ValueStack;$/;"	m	class:__anon591::Evaluator	file:
ValueState	Transforms/Scalar/SCCP.cpp	/^  DenseMap<Value*, LatticeVal> ValueState;  \/\/ The state each value is in.$/;"	m	class:__anon531::SCCPSolver	file:
ValueTable	Transforms/Scalar/GVN.cpp	/^    ValueTable() : nextValueNumber(1) { }$/;"	f	class:__anon536::ValueTable
ValueTable	Transforms/Scalar/GVN.cpp	/^  class ValueTable {$/;"	c	namespace:__anon536	file:
ValueType	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^      EVT ValueType;$/;"	m	class:llvm::ScheduleDAGSDNodes::RegDefIter
ValueType	DebugInfo/DWARFFormValue.h	/^    ValueType() : data(NULL) {$/;"	f	struct:llvm::DWARFFormValue::ValueType
ValueType	DebugInfo/DWARFFormValue.h	/^  struct ValueType {$/;"	s	class:llvm::DWARFFormValue
ValueTypeActions	CodeGen/SelectionDAG/LegalizeTypes.h	/^  TargetLowering::ValueTypeActionImpl ValueTypeActions;$/;"	m	class:llvm::DAGTypeLegalizer
ValueVTs	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^    SmallVector<EVT, 4> ValueVTs;$/;"	m	struct:__anon82::RegsForValue	file:
Values	Bitcode/Writer/ValueEnumerator.h	/^  ValueList Values;$/;"	m	class:llvm::ValueEnumerator
Values	CodeGen/AsmPrinter/DIE.h	/^    SmallVector<DIEValue*, 32> Values;$/;"	m	class:llvm::DIE
Values	CodeGen/SplitKit.h	/^  ValueMap Values;$/;"	m	class:llvm::SplitEditor
Values	ExecutionEngine/ExecutionEngine.cpp	/^  std::vector<char*> Values;$/;"	m	class:__anon200::ArgvArray	file:
Values	ExecutionEngine/Interpreter/Interpreter.h	/^  std::map<Value *, GenericValue> Values; \/\/ LLVM values used in this invocation$/;"	m	struct:llvm::ExecutionContext
Values	Target/Hexagon/HexagonHardwareLoops.cpp	/^      Values(int64_t i) : ImmVal(i) {}$/;"	f	union:__anon408::CountValue::Values
Values	Target/Hexagon/HexagonHardwareLoops.cpp	/^      Values(unsigned r) : RegNum(r) {}$/;"	f	union:__anon408::CountValue::Values
Values	Target/Hexagon/HexagonHardwareLoops.cpp	/^    union Values {$/;"	u	class:__anon408::CountValue	file:
Values	Target/PowerPC/PPCCTRLoops.cpp	/^      Values(int64_t i) : ImmVal(i) {}$/;"	f	union:__anon325::CountValue::Values
Values	Target/PowerPC/PPCCTRLoops.cpp	/^      Values(unsigned r) : RegNum(r) {}$/;"	f	union:__anon325::CountValue::Values
Values	Target/PowerPC/PPCCTRLoops.cpp	/^    union Values {$/;"	u	class:__anon325::CountValue	file:
Values	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    ValVector Values;$/;"	m	class:__anon469::RenamePassData	file:
ValuesOverlap	Transforms/Utils/SimplifyCFG.cpp	/^ValuesOverlap(std::vector<ValueEqualityComparisonCase> &C1,$/;"	f	file:
Var	CodeGen/AsmPrinter/DwarfDebug.h	/^  DIVariable Var;                    \/\/ Variable Descriptor.$/;"	m	class:llvm::DbgVariable
VarArgStyleRegisters	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::VarArgStyleRegisters(CCState &CCInfo, SelectionDAG &DAG,$/;"	f	class:ARMTargetLowering
VarArgs	ExecutionEngine/Interpreter/Interpreter.h	/^  std::vector<GenericValue>  VarArgs; \/\/ Values passed through an ellipsis$/;"	m	struct:llvm::ExecutionContext
VarArgsFPOffset	Target/X86/X86MachineFunctionInfo.h	/^  unsigned VarArgsFPOffset;$/;"	m	class:llvm::X86MachineFunctionInfo
VarArgsFrameIndex	Target/ARM/ARMMachineFunctionInfo.h	/^  int VarArgsFrameIndex;$/;"	m	class:llvm::ARMFunctionInfo
VarArgsFrameIndex	Target/CellSPU/SPUMachineFunction.h	/^  int VarArgsFrameIndex;$/;"	m	class:llvm::SPUFunctionInfo
VarArgsFrameIndex	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  int VarArgsFrameIndex;$/;"	m	class:llvm::HexagonMachineFunctionInfo
VarArgsFrameIndex	Target/MBlaze/MBlazeMachineFunction.h	/^  int VarArgsFrameIndex;$/;"	m	class:llvm::MBlazeFunctionInfo
VarArgsFrameIndex	Target/Mips/MipsMachineFunction.h	/^  int VarArgsFrameIndex;$/;"	m	class:llvm::MipsFunctionInfo
VarArgsFrameIndex	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int VarArgsFrameIndex;$/;"	m	class:llvm::PPCFunctionInfo
VarArgsFrameIndex	Target/X86/X86MachineFunctionInfo.h	/^  int VarArgsFrameIndex;$/;"	m	class:llvm::X86MachineFunctionInfo
VarArgsFrameIndex	Target/XCore/XCoreMachineFunctionInfo.h	/^  int VarArgsFrameIndex;$/;"	m	class:llvm::XCoreFunctionInfo
VarArgsFrameOffset	Target/Hexagon/HexagonISelLowering.h	/^    int VarArgsFrameOffset;   \/\/ Frame offset to start of varargs area.$/;"	m	class:llvm::HexagonTargetLowering
VarArgsFrameOffset	Target/Sparc/SparcMachineFunctionInfo.h	/^    int VarArgsFrameOffset;$/;"	m	class:llvm::SparcMachineFunctionInfo
VarArgsGPOffset	Target/X86/X86MachineFunctionInfo.h	/^  unsigned VarArgsGPOffset;$/;"	m	class:llvm::X86MachineFunctionInfo
VarArgsNumFPR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  unsigned VarArgsNumFPR;$/;"	m	class:llvm::PPCFunctionInfo
VarArgsNumGPR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  unsigned VarArgsNumGPR;$/;"	m	class:llvm::PPCFunctionInfo
VarArgsRegSaveSize	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned VarArgsRegSaveSize;$/;"	m	class:llvm::ARMFunctionInfo
VarArgsStackOffset	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int VarArgsStackOffset;$/;"	m	class:llvm::PPCFunctionInfo
VarName	TableGen/TGLexer.h	/^    Id, StrVal, VarName, CodeFragment$/;"	e	enum:llvm::tgtok::TokKind
Variable	CodeGen/AsmPrinter/DwarfDebug.h	/^  const MDNode *Variable;$/;"	m	struct:llvm::DotDebugLocEntry
VariableGEPIndex	Analysis/BasicAliasAnalysis.cpp	/^  struct VariableGEPIndex {$/;"	s	namespace:__anon14	file:
VariantKind	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  enum VariantKind {$/;"	g	class:llvm::ARMMCExpr
VecBuild	Target/NVPTX/NVPTX.h	/^  VecBuild = 3,$/;"	e	enum:llvm::NVPTX::VecInstType
VecDest	Target/NVPTX/NVPTX.h	/^  VecDest = 7,$/;"	e	enum:llvm::NVPTX::VecInstType
VecExtract	Target/NVPTX/NVPTX.h	/^  VecExtract = 5,$/;"	e	enum:llvm::NVPTX::VecInstType
VecInsert	Target/NVPTX/NVPTX.h	/^  VecInsert = 6,$/;"	e	enum:llvm::NVPTX::VecInstType
VecInstType	Target/NVPTX/NVPTX.h	/^enum VecInstType {$/;"	g	namespace:llvm::NVPTX
VecInstTypeMask	Target/NVPTX/NVPTX.h	/^  VecInstTypeMask = 0xF,$/;"	e	enum:llvm::NVPTX::VecInstType
VecInstTypeShift	Target/NVPTX/NVPTX.h	/^  VecInstTypeShift = 0,$/;"	e	enum:llvm::NVPTX::VecInstType
VecLoad	Target/NVPTX/NVPTX.h	/^  VecLoad = 1,$/;"	e	enum:llvm::NVPTX::VecInstType
VecNOP	Target/NVPTX/NVPTX.h	/^  VecNOP = 0,$/;"	e	enum:llvm::NVPTX::VecInstType
VecOther	Target/NVPTX/NVPTX.h	/^  VecOther = 15$/;"	e	enum:llvm::NVPTX::VecInstType
VecShuffle	Target/NVPTX/NVPTX.h	/^  VecShuffle = 4,$/;"	e	enum:llvm::NVPTX::VecInstType
VecStore	Target/NVPTX/NVPTX.h	/^  VecStore = 2,$/;"	e	enum:llvm::NVPTX::VecInstType
VecTy	Transforms/Scalar/SROA.cpp	/^  VectorType *VecTy;$/;"	m	class:__anon561::AllocaPartitionRewriter	file:
VecType	Target/NVPTX/NVPTX.h	/^enum VecType {$/;"	g	namespace:llvm::NVPTX::PTXLdStInstCode
Vector	Transforms/Scalar/ObjCARC.cpp	/^    VectorTy Vector;$/;"	m	class:__anon498::MapVector	file:
Vector	Transforms/Scalar/ScalarReplAggregates.cpp	/^    Vector,$/;"	e	enum:__anon522::ConvertToScalarInfo::__anon523	file:
VectorBonus	Analysis/InlineCost.cpp	/^  int VectorBonus;$/;"	m	class:__anon28::CallAnalyzer	file:
VectorConstants	VMCore/LLVMContextImpl.h	/^  VectorConstantsTy VectorConstants;$/;"	m	class:llvm::LLVMContextImpl
VectorConstantsTy	VMCore/LLVMContextImpl.h	/^  typedef ConstantAggrUniqueMap<VectorType, ConstantVector> VectorConstantsTy;$/;"	t	class:llvm::LLVMContextImpl
VectorElementize	Target/NVPTX/VectorElementize.cpp	/^  VectorElementize(NVPTXTargetMachine &tm)$/;"	f	class:__anon316::VectorElementize
VectorElementize	Target/NVPTX/VectorElementize.cpp	/^class LLVM_LIBRARY_VISIBILITY VectorElementize : public MachineFunctionPass {$/;"	c	namespace:__anon316	file:
VectorIndex	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } VectorIndex;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon273	file:
VectorLaneTy	Target/ARM/AsmParser/ARMAsmParser.cpp	/^enum VectorLaneTy { NoLanes, AllLanes, IndexedLane };$/;"	g	namespace:__anon259	file:
VectorLegalizer	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^  VectorLegalizer(SelectionDAG& dag) :$/;"	f	class:__anon72::VectorLegalizer
VectorLegalizer	CodeGen/SelectionDAG/LegalizeVectorOps.cpp	/^class VectorLegalizer {$/;"	c	namespace:__anon72	file:
VectorList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    } VectorList;$/;"	m	union:__anon261::ARMOperand::__anon262	typeref:struct:__anon261::ARMOperand::__anon262::__anon272	file:
VectorToScalarMap	Target/NVPTX/VectorElementize.cpp	/^  llvm::DenseMap<unsigned, SmallVector<unsigned, 4> > VectorToScalarMap;$/;"	m	class:__anon316::VectorElementize	file:
VectorTy	Transforms/Scalar/ObjCARC.cpp	/^    typedef std::vector<std::pair<KeyT, ValueT> > VectorTy;$/;"	t	class:__anon498::MapVector	file:
VectorTy	Transforms/Scalar/ScalarReplAggregates.cpp	/^  VectorType *VectorTy;$/;"	m	class:__anon522::ConvertToScalarInfo	file:
VectorType	VMCore/Pass.cpp	/^    typedef AnalysisUsage::VectorType VectorType;$/;"	t	struct:__anon616::GetCFGOnlyPasses	file:
VectorType	VMCore/Type.cpp	/^VectorType::VectorType(Type *ElType, unsigned NumEl)$/;"	f	class:VectorType
VectorTypes	VMCore/LLVMContextImpl.h	/^  DenseMap<std::pair<Type *, unsigned>, VectorType*> VectorTypes;$/;"	m	class:llvm::LLVMContextImpl
VectorizeConfig	Transforms/Vectorize/BBVectorize.cpp	/^VectorizeConfig::VectorizeConfig() {$/;"	f	class:VectorizeConfig
Verifier	VMCore/Verifier.cpp	/^    Verifier()$/;"	f	struct:__anon610::Verifier
Verifier	VMCore/Verifier.cpp	/^    explicit Verifier(VerifierFailureAction ctn)$/;"	f	struct:__anon610::Verifier
Verifier	VMCore/Verifier.cpp	/^  struct Verifier : public FunctionPass, public InstVisitor<Verifier> {$/;"	s	namespace:__anon610	file:
Verify	Analysis/PHITransAddr.cpp	/^bool PHITransAddr::Verify() const {$/;"	f	class:PHITransAddr
Verify	VMCore/DebugInfo.cpp	/^bool DIBasicType::Verify() const {$/;"	f	class:DIBasicType
Verify	VMCore/DebugInfo.cpp	/^bool DICompileUnit::Verify() const {$/;"	f	class:DICompileUnit
Verify	VMCore/DebugInfo.cpp	/^bool DICompositeType::Verify() const {$/;"	f	class:DICompositeType
Verify	VMCore/DebugInfo.cpp	/^bool DIDerivedType::Verify() const {$/;"	f	class:DIDerivedType
Verify	VMCore/DebugInfo.cpp	/^bool DIGlobalVariable::Verify() const {$/;"	f	class:DIGlobalVariable
Verify	VMCore/DebugInfo.cpp	/^bool DILocation::Verify() const {$/;"	f	class:DILocation
Verify	VMCore/DebugInfo.cpp	/^bool DINameSpace::Verify() const {$/;"	f	class:DINameSpace
Verify	VMCore/DebugInfo.cpp	/^bool DIObjCProperty::Verify() const {$/;"	f	class:DIObjCProperty
Verify	VMCore/DebugInfo.cpp	/^bool DISubprogram::Verify() const {$/;"	f	class:DISubprogram
Verify	VMCore/DebugInfo.cpp	/^bool DIType::Verify() const {$/;"	f	class:DIType
Verify	VMCore/DebugInfo.cpp	/^bool DIVariable::Verify() const {$/;"	f	class:DIVariable
Verify	VMCore/InlineAsm.cpp	/^bool InlineAsm::Verify(FunctionType *Ty, StringRef ConstStr) {$/;"	f	class:InlineAsm
VerifyAttributeCount	VMCore/Verifier.cpp	/^static bool VerifyAttributeCount(const AttrListPtr &Attrs, unsigned Params) {$/;"	f	file:
VerifyCallSite	VMCore/Verifier.cpp	/^void Verifier::VerifyCallSite(CallSite CS) {$/;"	f	class:Verifier
VerifyDomInfo	VMCore/Dominators.cpp	/^static bool VerifyDomInfo = true;$/;"	v	file:
VerifyEnabled	CodeGen/RegAllocBase.cpp	/^bool RegAllocBase::VerifyEnabled = false;$/;"	m	class:RegAllocBase	file:
VerifyEnabled	CodeGen/RegAllocBase.h	/^  static bool VerifyEnabled;$/;"	m	class:llvm::RegAllocBase
VerifyFunctionAttrs	VMCore/Verifier.cpp	/^void Verifier::VerifyFunctionAttrs(FunctionType *FT,$/;"	f	class:Verifier
VerifyIntrinsicType	VMCore/Verifier.cpp	/^bool Verifier::VerifyIntrinsicType(Type *Ty,$/;"	f	class:Verifier
VerifyLoopInfo	Analysis/LoopInfo.cpp	/^static bool VerifyLoopInfo = false;$/;"	v	file:
VerifyLoopInfo	Analysis/LoopInfo.cpp	/^static bool VerifyLoopInfo = true;$/;"	v	file:
VerifyLowRegs	Target/ARM/Thumb2SizeReduction.cpp	/^static bool VerifyLowRegs(MachineInstr *MI) {$/;"	f	file:
VerifyMachineNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void VerifyMachineNode(SDNode *N) {$/;"	f	file:
VerifyNodeCommon	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void VerifyNodeCommon(SDNode *N) {$/;"	f	file:
VerifyPHIs	CodeGen/TailDuplication.cpp	/^static void VerifyPHIs(MachineFunction &MF, bool CheckExtra) {$/;"	f	file:
VerifyParameterAttrs	VMCore/Verifier.cpp	/^void Verifier::VerifyParameterAttrs(Attributes Attrs, Type *Ty,$/;"	f	class:Verifier
VerifyPredAndCC	Target/ARM/Thumb2SizeReduction.cpp	/^Thumb2SizeReduce::VerifyPredAndCC(MachineInstr *MI, const ReduceEntry &Entry,$/;"	f	class:Thumb2SizeReduce
VerifyRegionInfo	Analysis/RegionInfo.cpp	/^static bool VerifyRegionInfo = true;$/;"	v	file:
VerifySDNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void VerifySDNode(SDNode *N) {$/;"	f	file:
VerifyScheduledDAG	CodeGen/ScheduleDAG.cpp	/^unsigned ScheduleDAG::VerifyScheduledDAG(bool isBottomUp) {$/;"	f	class:ScheduleDAG
VerifyScheduledSequence	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::VerifyScheduledSequence(bool isBottomUp) {$/;"	f	class:ScheduleDAGSDNodes
VerifySubExpr	Analysis/PHITransAddr.cpp	/^static bool VerifySubExpr(Value *Expr,$/;"	f	file:
Version	DebugInfo/DWARFCompileUnit.h	/^  uint16_t Version;$/;"	m	class:llvm::DWARFCompileUnit
Version	DebugInfo/DWARFDebugArangeSet.h	/^    uint16_t Version;$/;"	m	struct:llvm::DWARFDebugArangeSet::Header
Version	DebugInfo/DWARFDebugLine.h	/^    uint16_t Version;$/;"	m	struct:llvm::DWARFDebugLine::Prologue
VersionPrinter	Support/CommandLine.cpp	/^class VersionPrinter {$/;"	c	namespace:__anon248	file:
VersionPrinterInstance	Support/CommandLine.cpp	/^static VersionPrinter VersionPrinterInstance;$/;"	v	file:
ViewDAGCombine1	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^static const bool ViewDAGCombine1 = false,$/;"	v	file:
ViewDAGCombine2	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^                  ViewDAGCombine2 = false,$/;"	v	file:
ViewDAGCombineLT	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^                  ViewDAGCombineLT = false,$/;"	v	file:
ViewISelDAGs	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^                  ViewISelDAGs = false, ViewSchedDAGs = false,$/;"	v	file:
ViewLegalizeDAGs	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^                  ViewLegalizeTypesDAGs = false, ViewLegalizeDAGs = false,$/;"	v	file:
ViewLegalizeTypesDAGs	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^                  ViewLegalizeTypesDAGs = false, ViewLegalizeDAGs = false,$/;"	v	file:
ViewSUnitDAGs	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^                  ViewSUnitDAGs = false;$/;"	v	file:
ViewSchedDAGs	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^                  ViewISelDAGs = false, ViewSchedDAGs = false,$/;"	v	file:
Virt2PhysMap	CodeGen/VirtRegMap.h	/^    IndexedMap<unsigned, VirtReg2IndexFunctor> Virt2PhysMap;$/;"	m	class:llvm::VirtRegMap
Virt2SplitMap	CodeGen/VirtRegMap.h	/^    IndexedMap<unsigned, VirtReg2IndexFunctor> Virt2SplitMap;$/;"	m	class:llvm::VirtRegMap
Virt2StackSlotMap	CodeGen/VirtRegMap.h	/^    IndexedMap<int, VirtReg2IndexFunctor> Virt2StackSlotMap;$/;"	m	class:llvm::VirtRegMap
VirtI	CodeGen/InterferenceCache.h	/^      LiveIntervalUnion::SegmentIter VirtI;$/;"	m	struct:llvm::InterferenceCache::Entry::RegUnitInfo
VirtReg	CodeGen/LiveIntervalUnion.h	/^    LiveInterval *VirtReg;$/;"	m	class:llvm::LiveIntervalUnion::Query
VirtReg	CodeGen/RegAllocFast.cpp	/^      unsigned VirtReg;         \/\/ Virtual register number.$/;"	m	struct:__anon140::RAFast::LiveReg	file:
VirtRegI	CodeGen/LiveIntervalUnion.h	/^    LiveInterval::iterator VirtRegI; \/\/ current position in VirtReg$/;"	m	class:llvm::LiveIntervalUnion::Query
VirtRegMap	CodeGen/VirtRegMap.h	/^    VirtRegMap() : MachineFunctionPass(ID), Virt2PhysMap(NO_PHYS_REG),$/;"	f	class:llvm::VirtRegMap
VirtRegMap	CodeGen/VirtRegMap.h	/^  class VirtRegMap : public MachineFunctionPass {$/;"	c	namespace:llvm
VirtRegOperands	CodeGen/RegisterPressure.cpp	/^typedef RegisterOperands<true> VirtRegOperands;$/;"	t	file:
VirtRegRewriter	CodeGen/VirtRegMap.cpp	/^  VirtRegRewriter() : MachineFunctionPass(ID) {}$/;"	f	class:__anon97::VirtRegRewriter
VirtRegRewriter	CodeGen/VirtRegMap.cpp	/^class VirtRegRewriter : public MachineFunctionPass {$/;"	c	namespace:__anon97	file:
VirtRegRewriterID	CodeGen/VirtRegMap.cpp	/^char &llvm::VirtRegRewriterID = VirtRegRewriter::ID;$/;"	m	class:llvm	file:
VirtTag	CodeGen/InterferenceCache.h	/^      unsigned VirtTag;$/;"	m	struct:llvm::InterferenceCache::Entry::RegUnitInfo
VirtualityString	Support/Dwarf.cpp	/^const char *llvm::dwarf::VirtualityString(unsigned Virtuality) {$/;"	f	class:llvm::dwarf
Virtualization_use	Target/ARM/ARMBuildAttrs.h	/^    Virtualization_use        = 68,$/;"	e	enum:ARMBuildAttrs::AttrType
VisibilityString	Support/Dwarf.cpp	/^const char *llvm::dwarf::VisibilityString(unsigned Visibility) {$/;"	f	class:llvm::dwarf
Visit	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::Visit(Function &F,$/;"	f	class:ObjCARCOpt
VisitBottomUp	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::VisitBottomUp(BasicBlock *BB,$/;"	f	class:ObjCARCOpt
VisitCallPoint	CodeGen/GCStrategy.cpp	/^void GCMachineCodeAnalysis::VisitCallPoint(MachineBasicBlock::iterator CI) {$/;"	f	class:GCMachineCodeAnalysis
VisitInstructionBottomUp	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::VisitInstructionBottomUp(Instruction *Inst,$/;"	f	class:ObjCARCOpt
VisitInstructionTopDown	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::VisitInstructionTopDown(Instruction *Inst,$/;"	f	class:ObjCARCOpt
VisitNode	Target/X86/X86InstrInfo.cpp	/^    bool VisitNode(MachineDomTreeNode *Node, unsigned TLSBaseAddrReg) {$/;"	f	struct:__anon376::LDTLSCleanup
VisitTopDown	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCOpt::VisitTopDown(BasicBlock *BB,$/;"	f	class:ObjCARCOpt
Visited	Analysis/BasicAliasAnalysis.cpp	/^    SmallPtrSet<const Value*, 16> Visited;$/;"	m	struct:__anon15::BasicAliasAnalysis	file:
Visited	CodeGen/MachineTraceMetrics.cpp	/^  SmallPtrSet<const MachineBasicBlock*, 8> Visited;$/;"	m	struct:__anon132::LoopBounds	file:
Visited	Transforms/Scalar/SROA.cpp	/^  SmallPtrSet<User *, 8> Visited;$/;"	m	class:__anon562::AggLoadStoreRewriter	file:
Visited	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    SmallPtrSet<BasicBlock*, 16> Visited;$/;"	m	struct:__anon469::PromoteMem2Reg	file:
VisitedDeadInsts	Transforms/Scalar/SROA.cpp	/^  SmallPtrSet<Instruction *, 4> VisitedDeadInsts;$/;"	m	class:AllocaPartitioning::UseBuilder	file:
VisitedSDNodeSet	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^typedef SmallPtrSet<const SDNode *, 128> VisitedSDNodeSet;$/;"	t	file:
VisitedUses	Transforms/Scalar/SROA.cpp	/^  SmallPtrSet<Use *, 8> VisitedUses;$/;"	m	class:AllocaPartitioning::BuilderBase	file:
VoidTy	VMCore/LLVMContextImpl.h	/^  Type VoidTy, LabelTy, HalfTy, FloatTy, DoubleTy, MetadataTy;$/;"	m	class:llvm::LLVMContextImpl
WEXITSTATUS	Support/Unix/Unix.h	57;"	d
WI	Transforms/Scalar/IndVarSimplify.cpp	/^    WideIVInfo WI;$/;"	m	class:__anon496::WideIVVisitor	file:
WIFEXITED	Support/Unix/Unix.h	61;"	d
WIN32_LEAN_AND_MEAN	Support/Windows/Windows.h	25;"	d
WIN_ALLOCA	Target/X86/X86ISelLowering.h	/^      WIN_ALLOCA,$/;"	e	enum:llvm::X86ISD::NodeType
WIN_FTOL	Target/X86/X86ISelLowering.h	/^      WIN_FTOL,$/;"	e	enum:llvm::X86ISD::NodeType
WMMX_arch	Target/ARM/ARMBuildAttrs.h	/^    WMMX_arch                 = 11,$/;"	e	enum:ARMBuildAttrs::AttrType
W_BitShift	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    W_BitShift     = 21,$/;"	e	enum:llvm::ARMII::__anon288
WalkChainUsers	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^WalkChainUsers(const SDNode *ChainedNode,$/;"	f	file:
WantBlockAddress	Transforms/Scalar/JumpThreading.cpp	/^    WantBlockAddress$/;"	e	enum:__anon542::ConstantPreference	file:
WantInteger	Transforms/Scalar/JumpThreading.cpp	/^    WantInteger,$/;"	e	enum:__anon542::ConstantPreference	file:
Warning	MC/MCParser/AsmParser.cpp	/^bool AsmParser::Warning(SMLoc L, const Twine &Msg, ArrayRef<SMRange> Ranges) {$/;"	f	class:AsmParser
Warning	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool Warning(SMLoc L, const Twine &Msg,$/;"	f	class:__anon259::ARMAsmParser	file:
Warning	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  void Warning(SMLoc L, const Twine &Msg) { Parser.Warning(L, Msg); }$/;"	f	class:__anon446::MBlazeAsmParser	file:
WaterList	Target/ARM/ARMConstantIslandPass.cpp	/^    std::vector<MachineBasicBlock*> WaterList;$/;"	m	class:__anon310::ARMConstantIslands	file:
WeakrefUsedInReloc	MC/ELFObjectWriter.cpp	/^    SmallPtrSet<const MCSymbol *, 16> WeakrefUsedInReloc;$/;"	m	class:__anon225::ELFObjectWriter	file:
WhatToGenerate	Target/CppBackend/CPPBackend.cpp	/^enum WhatToGenerate {$/;"	g	file:
WideDef	Transforms/Scalar/IndVarSimplify.cpp	/^  Instruction *WideDef;$/;"	m	struct:__anon497::NarrowIVDefUse	file:
WideIVInfo	Transforms/Scalar/IndVarSimplify.cpp	/^    WideIVInfo() : NarrowIV(0), WidestNativeType(0), IsSigned(false) {}$/;"	f	struct:__anon496::WideIVInfo
WideIVInfo	Transforms/Scalar/IndVarSimplify.cpp	/^  struct WideIVInfo {$/;"	s	namespace:__anon496	file:
WideIVVisitor	Transforms/Scalar/IndVarSimplify.cpp	/^    WideIVVisitor(PHINode *NarrowIV, ScalarEvolution *SCEV,$/;"	f	class:__anon496::WideIVVisitor
WideIVVisitor	Transforms/Scalar/IndVarSimplify.cpp	/^  class WideIVVisitor : public IVVisitor {$/;"	c	namespace:__anon496	file:
WideInc	Transforms/Scalar/IndVarSimplify.cpp	/^  Instruction *WideInc;$/;"	m	class:__anon497::WidenIV	file:
WideIncExpr	Transforms/Scalar/IndVarSimplify.cpp	/^  const SCEV *WideIncExpr;$/;"	m	class:__anon497::WidenIV	file:
WideOpc	Target/ARM/Thumb2SizeReduction.cpp	/^    uint16_t WideOpc;      \/\/ Wide opcode$/;"	m	struct:__anon300::ReduceEntry	file:
WidePhi	Transforms/Scalar/IndVarSimplify.cpp	/^  PHINode *WidePhi;$/;"	m	class:__anon497::WidenIV	file:
WideType	Transforms/Scalar/IndVarSimplify.cpp	/^  Type *WideType;$/;"	m	class:__anon497::WidenIV	file:
WidenIV	Transforms/Scalar/IndVarSimplify.cpp	/^  WidenIV(const WideIVInfo &WI, LoopInfo *LInfo,$/;"	f	class:__anon497::WidenIV
WidenIV	Transforms/Scalar/IndVarSimplify.cpp	/^class WidenIV {$/;"	c	namespace:__anon497	file:
WidenIVUse	Transforms/Scalar/IndVarSimplify.cpp	/^Instruction *WidenIV::WidenIVUse(NarrowIVDefUse DU, SCEVExpander &Rewriter) {$/;"	f	class:WidenIV
WidenMap	Transforms/Vectorize/LoopVectorize.cpp	/^  ValueMap WidenMap;$/;"	m	class:__anon605::SingleBlockLoopVectorizer	file:
WidenVecOp_BITCAST	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecOp_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecOp_CONCAT_VECTORS	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecOp_CONCAT_VECTORS(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecOp_Convert	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecOp_Convert(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecOp_EXTRACT_SUBVECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecOp_EXTRACT_SUBVECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecOp_EXTRACT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecOp_EXTRACT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecOp_SETCC	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecOp_SETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecOp_STORE	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecOp_STORE(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_BITCAST	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_BITCAST(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_BUILD_VECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_BUILD_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_Binary	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_Binary(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_CONCAT_VECTORS	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_CONCAT_VECTORS(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_CONVERT_RNDSAT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_CONVERT_RNDSAT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_Convert	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_Convert(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_EXTRACT_SUBVECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_EXTRACT_SUBVECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_INSERT_VECTOR_ELT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_INSERT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_InregOp	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_InregOp(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_LOAD	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_LOAD(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_MERGE_VALUES	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_MERGE_VALUES(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_POWI	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_POWI(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_SCALAR_TO_VECTOR	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_SCALAR_TO_VECTOR(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_SELECT	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_SELECT(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_SELECT_CC	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_SELECT_CC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_SETCC	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_SETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_Shift	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_Shift(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_Ternary	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_Ternary(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_UNDEF	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_UNDEF(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_Unary	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_Unary(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_VECTOR_SHUFFLE	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_VECTOR_SHUFFLE(ShuffleVectorSDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVecRes_VSETCC	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^SDValue DAGTypeLegalizer::WidenVecRes_VSETCC(SDNode *N) {$/;"	f	class:DAGTypeLegalizer
WidenVectorOperand	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^bool DAGTypeLegalizer::WidenVectorOperand(SDNode *N, unsigned OpNo) {$/;"	f	class:DAGTypeLegalizer
WidenVectorResult	CodeGen/SelectionDAG/LegalizeVectorTypes.cpp	/^void DAGTypeLegalizer::WidenVectorResult(SDNode *N, unsigned ResNo) {$/;"	f	class:DAGTypeLegalizer
Widened	Transforms/Scalar/IndVarSimplify.cpp	/^  SmallPtrSet<Instruction*,16> Widened;$/;"	m	class:__anon497::WidenIV	file:
WidenedVectors	CodeGen/SelectionDAG/LegalizeTypes.h	/^  DenseMap<SDValue, SDValue> WidenedVectors;$/;"	m	class:llvm::DAGTypeLegalizer
WidestFixupType	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Type *WidestFixupType;$/;"	m	class:__anon517::LSRUse	file:
WidestNativeType	Transforms/Scalar/IndVarSimplify.cpp	/^    Type *WidestNativeType; \/\/ Widest integer type created [sz]ext$/;"	m	struct:__anon496::WideIVInfo	file:
Width	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned Width;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon281	file:
Width	Transforms/InstCombine/InstCombinePHI.cpp	/^  unsigned Width;     \/\/ The width extracted.$/;"	m	struct:__anon603::LoweredPHIRecord	file:
WillBeConstantPoolLoad	Target/X86/X86ISelLowering.cpp	/^static bool WillBeConstantPoolLoad(SDNode *N) {$/;"	f	file:
WillCreateCycle	CodeGen/ScheduleDAG.cpp	/^bool ScheduleDAGTopologicalSort::WillCreateCycle(SUnit *SU, SUnit *TargetSU) {$/;"	f	class:ScheduleDAGTopologicalSort
WillCreateCycle	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool WillCreateCycle(SUnit *SU, SUnit *TargetSU) {$/;"	f	class:__anon76::ScheduleDAGRRList
WillNotOverflowSignedAdd	Transforms/InstCombine/InstCombineAddSub.cpp	/^bool InstCombiner::WillNotOverflowSignedAdd(Value *LHS, Value *RHS) {$/;"	f	class:InstCombiner
Win32ZeroTime	Support/TimeValue.cpp	/^const TimeValue TimeValue::Win32ZeroTime = TimeValue ( -12591158400ULL,0 );$/;"	m	class:llvm::TimeValue	file:
Win64Exception	CodeGen/AsmPrinter/DwarfException.h	/^class Win64Exception : public DwarfException {$/;"	c	namespace:llvm
Win64Exception	CodeGen/AsmPrinter/Win64Exception.cpp	/^Win64Exception::Win64Exception(AsmPrinter *A)$/;"	f	class:Win64Exception
WinCOFFObjectWriter	MC/WinCOFFObjectWriter.cpp	/^WinCOFFObjectWriter::WinCOFFObjectWriter(MCWinCOFFObjectTargetWriter *MOTW,$/;"	f	class:WinCOFFObjectWriter
WinCOFFObjectWriter	MC/WinCOFFObjectWriter.cpp	/^class WinCOFFObjectWriter : public MCObjectWriter {$/;"	c	namespace:__anon222	file:
WinCOFFStreamer	MC/WinCOFFStreamer.cpp	/^WinCOFFStreamer::WinCOFFStreamer(MCContext &Context,$/;"	f	class:WinCOFFStreamer
WinCOFFStreamer	MC/WinCOFFStreamer.cpp	/^class WinCOFFStreamer : public MCObjectStreamer {$/;"	c	namespace:__anon218	file:
WindowsX86AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  WindowsX86AsmBackend(const Target &T, bool is64Bit, StringRef CPU)$/;"	f	class:__anon345::WindowsX86AsmBackend
WindowsX86AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^class WindowsX86AsmBackend : public X86AsmBackend {$/;"	c	namespace:__anon345	file:
WorkItem	Transforms/Scalar/LoopStrengthReduce.cpp	/^  WorkItem(size_t LI, int64_t I, const SCEV *R)$/;"	f	struct:__anon519::WorkItem
WorkItem	Transforms/Scalar/LoopStrengthReduce.cpp	/^struct WorkItem {$/;"	s	namespace:__anon519	file:
WorkList	CodeGen/ProcessImplicitDefs.cpp	/^  SmallSetVector<MachineInstr*, 16> WorkList;$/;"	m	class:__anon166::ProcessImplicitDefs	file:
WorkList	CodeGen/RegisterCoalescer.cpp	/^    SmallVector<MachineInstr*, 8> WorkList;$/;"	m	class:__anon114::RegisterCoalescer	file:
WorkListContents	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    SmallPtrSet<SDNode*, 64> WorkListContents;$/;"	m	class:__anon68::DAGCombiner	file:
WorkListOrder	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    SmallVector<SDNode*, 64> WorkListOrder;$/;"	m	class:__anon68::DAGCombiner	file:
WorkListRemover	CodeGen/SelectionDAG/DAGCombiner.cpp	/^  explicit WorkListRemover(DAGCombiner &dc)$/;"	f	class:__anon69::WorkListRemover
WorkListRemover	CodeGen/SelectionDAG/DAGCombiner.cpp	/^class WorkListRemover : public SelectionDAG::DAGUpdateListener {$/;"	c	namespace:__anon69	file:
Worklist	CodeGen/SelectionDAG/LegalizeTypes.h	/^  SmallVector<SDNode*, 128> Worklist;$/;"	m	class:llvm::DAGTypeLegalizer
Worklist	Transforms/InstCombine/InstCombine.h	/^  InstCombineWorklist &Worklist;$/;"	m	class:llvm::InstCombineIRInserter
Worklist	Transforms/InstCombine/InstCombine.h	/^  InstCombineWorklist Worklist;$/;"	m	class:llvm::InstCombiner
Worklist	Transforms/InstCombine/InstCombineWorklist.h	/^  SmallVector<Instruction*, 256> Worklist;$/;"	m	class:llvm::InstCombineWorklist
Worklist	Transforms/Scalar/SROA.cpp	/^  SetVector<AllocaInst *, SmallVector<AllocaInst *, 16> > Worklist;$/;"	m	class:__anon559::SROA	file:
WorklistMap	Transforms/InstCombine/InstCombineWorklist.h	/^  DenseMap<Instruction*, unsigned> WorklistMap;$/;"	m	class:llvm::InstCombineWorklist
WouldFitInRegister	Transforms/Utils/SimplifyCFG.cpp	/^bool SwitchLookupTable::WouldFitInRegister(const DataLayout *TD,$/;"	f	class:SwitchLookupTable
Wrap	Target/MBlaze/MBlazeISelLowering.h	/^      Wrap,$/;"	e	enum:llvm::MBlazeISD::NodeType
Wrapper	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^  OwningPtr<IntelJITEventsWrapper> Wrapper;$/;"	m	class:__anon198::IntelJITEventListener	file:
Wrapper	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^  OProfileWrapper& Wrapper;$/;"	m	class:__anon193::OProfileJITEventListener	file:
Wrapper	Target/ARM/ARMISelLowering.h	/^      Wrapper,      \/\/ Wrapper - A wrapper node for TargetConstantPool,$/;"	e	enum:llvm::ARMISD::NodeType
Wrapper	Target/MSP430/MSP430ISelLowering.h	/^      Wrapper,$/;"	e	enum:llvm::MSP430ISD::__anon397
Wrapper	Target/Mips/MipsISelLowering.h	/^      Wrapper,$/;"	e	enum:llvm::MipsISD::NodeType
Wrapper	Target/NVPTX/NVPTXISelLowering.h	/^  Wrapper,$/;"	e	enum:llvm::NVPTXISD::NodeType
Wrapper	Target/X86/X86ISelLowering.h	/^      Wrapper,$/;"	e	enum:llvm::X86ISD::NodeType
WrapperCP	Target/Hexagon/HexagonISelLowering.h	/^      WrapperCP,$/;"	e	enum:llvm::HexagonISD::__anon404
WrapperDYN	Target/ARM/ARMISelLowering.h	/^      WrapperDYN,   \/\/ WrapperDYN - A wrapper node for TargetGlobalAddress in$/;"	e	enum:llvm::ARMISD::NodeType
WrapperJT	Target/ARM/ARMISelLowering.h	/^      WrapperJT,    \/\/ WrapperJT - A wrapper node for TargetJumpTable$/;"	e	enum:llvm::ARMISD::NodeType
WrapperJT	Target/Hexagon/HexagonISelLowering.h	/^      WrapperJT,$/;"	e	enum:llvm::HexagonISD::__anon404
WrapperPIC	Target/ARM/ARMISelLowering.h	/^      WrapperPIC,   \/\/ WrapperPIC - A wrapper node for TargetGlobalAddress in$/;"	e	enum:llvm::ARMISD::NodeType
WrapperRIP	Target/X86/X86ISelLowering.h	/^      WrapperRIP,$/;"	e	enum:llvm::X86ISD::NodeType
Write	Analysis/Lint.cpp	/^    static unsigned Write    = 2;$/;"	m	namespace:__anon5::MemRef	file:
Write	MC/MCDwarf.cpp	/^void MCDwarfLineAddr::Write(MCObjectWriter *OW, int64_t LineDelta,$/;"	f	class:MCDwarfLineAddr
WriteAsOperand	CodeGen/MachineBasicBlock.cpp	/^void llvm::WriteAsOperand(raw_ostream &OS, const MachineBasicBlock *MBB,$/;"	f	class:llvm
WriteAsOperand	VMCore/AsmWriter.cpp	/^void llvm::WriteAsOperand(raw_ostream &Out, const Value *V,$/;"	f	class:llvm
WriteAsOperandInternal	VMCore/AsmWriter.cpp	/^static void WriteAsOperandInternal(raw_ostream &Out, const Value *V,$/;"	f	file:
WriteAttributeTable	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteAttributeTable(const ValueEnumerator &VE,$/;"	f	file:
WriteAuxiliarySymbols	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::WriteAuxiliarySymbols($/;"	f	class:WinCOFFObjectWriter
WriteBitcodePass	Bitcode/Writer/BitcodeWriterPass.cpp	/^    explicit WriteBitcodePass(raw_ostream &o)$/;"	f	class:__anon59::WriteBitcodePass
WriteBitcodePass	Bitcode/Writer/BitcodeWriterPass.cpp	/^  class WriteBitcodePass : public ModulePass {$/;"	c	namespace:__anon59	file:
WriteBitcodeToFile	Bitcode/Writer/BitcodeWriter.cpp	/^void llvm::WriteBitcodeToFile(const Module *M, raw_ostream &Out) {$/;"	f	class:llvm
WriteBlockInfo	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteBlockInfo(const ValueEnumerator &VE, BitstreamWriter &Stream) {$/;"	f	file:
WriteByValArg	Target/Mips/MipsISelLowering.cpp	/^WriteByValArg(SDValue Chain, DebugLoc dl,$/;"	f	file:
WriteConstantInternal	VMCore/AsmWriter.cpp	/^static void WriteConstantInternal(raw_ostream &Out, const Constant *CV,$/;"	f	file:
WriteConstants	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteConstants(unsigned FirstVal, unsigned LastVal,$/;"	f	file:
WriteDataSectionData	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteDataSectionData(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
WriteDysymtabLoadCommand	MC/MachObjectWriter.cpp	/^void MachObjectWriter::WriteDysymtabLoadCommand(uint32_t FirstLocalSymbol,$/;"	f	class:MachObjectWriter
WriteFileHeader	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::WriteFileHeader(const COFF::header &Header) {$/;"	f	class:WinCOFFObjectWriter
WriteFragmentData	MC/MCAssembler.cpp	/^static void WriteFragmentData(const MCAssembler &Asm, const MCAsmLayout &Layout,$/;"	f	file:
WriteFunction	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteFunction(const Function &F, ValueEnumerator &VE,$/;"	f	file:
WriteFunctionLocalMetadata	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteFunctionLocalMetadata(const Function &F,$/;"	f	file:
WriteFunctionUseList	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteFunctionUseList(const Function *F, ValueEnumerator &VE,$/;"	f	file:
WriteGraph	CodeGen/EdgeBundles.cpp	/^raw_ostream &llvm::WriteGraph(raw_ostream &O, const EdgeBundles &G,$/;"	f	class:llvm
WriteHeader	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteHeader(uint64_t SectionDataSize,$/;"	f	class:ELFObjectWriter
WriteHeader	MC/MachObjectWriter.cpp	/^void MachObjectWriter::WriteHeader(unsigned NumLoadCommands,$/;"	f	class:MachObjectWriter
WriteInstruction	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteInstruction(const Instruction &I, unsigned InstID,$/;"	f	file:
WriteInt32ToBuffer	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteInt32ToBuffer(uint32_t Value, SmallVectorImpl<char> &Buffer,$/;"	f	file:
WriteLanes	CodeGen/RegisterCoalescer.cpp	/^    unsigned WriteLanes;$/;"	m	struct:__anon115::JoinVals::Val	file:
WriteLinkeditLoadCommand	MC/MachObjectWriter.cpp	/^void MachObjectWriter::WriteLinkeditLoadCommand(uint32_t Type,$/;"	f	class:MachObjectWriter
WriteMDNode	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteMDNode(const MDNode *N,$/;"	f	file:
WriteMDNodeBodyInternal	VMCore/AsmWriter.cpp	/^static void WriteMDNodeBodyInternal(raw_ostream &Out, const MDNode *Node,$/;"	f	file:
WriteMDNodeComment	VMCore/AsmWriter.cpp	/^static void WriteMDNodeComment(const MDNode *Node,$/;"	f	file:
WriteMetadataAttachment	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteMetadataAttachment(const Function &F,$/;"	f	file:
WriteModule	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteModule(const Module *M, BitstreamWriter &Stream) {$/;"	f	file:
WriteModuleConstants	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteModuleConstants(const ValueEnumerator &VE,$/;"	f	file:
WriteModuleInfo	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteModuleInfo(const Module *M, const ValueEnumerator &VE,$/;"	f	file:
WriteModuleMetadata	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteModuleMetadata(const Module *M,$/;"	f	file:
WriteModuleMetadataStore	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteModuleMetadataStore(const Module *M, BitstreamWriter &Stream) {$/;"	f	file:
WriteModuleUseLists	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteModuleUseLists(const Module *M, ValueEnumerator &VE,$/;"	f	file:
WriteNlist	MC/MachObjectWriter.cpp	/^void MachObjectWriter::WriteNlist(MachSymbolData &MSD,$/;"	f	class:MachObjectWriter
WriteObject	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteObject(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
WriteObject	MC/MachObjectWriter.cpp	/^void MachObjectWriter::WriteObject(MCAssembler &Asm,$/;"	f	class:MachObjectWriter
WriteObject	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::WriteObject(MCAssembler &Asm,$/;"	f	class:WinCOFFObjectWriter
WriteOptimizationInfo	VMCore/AsmWriter.cpp	/^static void WriteOptimizationInfo(raw_ostream &Out, const User *U) {$/;"	f	file:
WriteRelocation	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::WriteRelocation(const COFF::relocation &R) {$/;"	f	class:WinCOFFObjectWriter
WriteRelocations	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteRelocations(MCAssembler &Asm, MCAsmLayout &Layout,$/;"	f	class:ELFObjectWriter
WriteRelocationsFragment	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteRelocationsFragment(const MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
WriteSecHdrEntry	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteSecHdrEntry(uint32_t Name, uint32_t Type,$/;"	f	class:ELFObjectWriter
WriteSection	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteSection(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
WriteSection	MC/MachObjectWriter.cpp	/^void MachObjectWriter::WriteSection(const MCAssembler &Asm,$/;"	f	class:MachObjectWriter
WriteSectionHeader	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteSectionHeader(MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
WriteSectionHeader	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::WriteSectionHeader(const COFF::section &S) {$/;"	f	class:WinCOFFObjectWriter
WriteSegmentLoadCommand	MC/MachObjectWriter.cpp	/^void MachObjectWriter::WriteSegmentLoadCommand(unsigned NumSections,$/;"	f	class:MachObjectWriter
WriteStringRecord	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteStringRecord(unsigned Code, StringRef Str,$/;"	f	file:
WriteSymbol	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteSymbol(MCDataFragment *SymtabF,$/;"	f	class:ELFObjectWriter
WriteSymbol	MC/WinCOFFObjectWriter.cpp	/^void WinCOFFObjectWriter::WriteSymbol(const COFFSymbol *S) {$/;"	f	class:WinCOFFObjectWriter
WriteSymbolEntry	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteSymbolEntry(MCDataFragment *SymtabF,$/;"	f	class:ELFObjectWriter
WriteSymbolTable	MC/ELFObjectWriter.cpp	/^void ELFObjectWriter::WriteSymbolTable(MCDataFragment *SymtabF,$/;"	f	class:ELFObjectWriter
WriteSymtabLoadCommand	MC/MachObjectWriter.cpp	/^void MachObjectWriter::WriteSymtabLoadCommand(uint32_t SymbolOffset,$/;"	f	class:MachObjectWriter
WriteType	VMCore/Verifier.cpp	/^    void WriteType(Type *T) {$/;"	f	struct:__anon610::Verifier
WriteTypeTable	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteTypeTable(const ValueEnumerator &VE, BitstreamWriter &Stream) {$/;"	f	file:
WriteUseList	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteUseList(const Value *V, const ValueEnumerator &VE,$/;"	f	file:
WriteValue	Analysis/Lint.cpp	/^    void WriteValue(const Value *V) {$/;"	f	class:__anon5::Lint
WriteValue	VMCore/Verifier.cpp	/^    void WriteValue(const Value *V) {$/;"	f	struct:__anon610::Verifier
WriteValueSymbolTable	Bitcode/Writer/BitcodeWriter.cpp	/^static void WriteValueSymbolTable(const ValueSymbolTable &VST,$/;"	f	file:
WriteWord	MC/ELFObjectWriter.cpp	/^    void WriteWord(uint64_t W) {$/;"	f	class:__anon225::ELFObjectWriter
X86	Target/X86/Disassembler/X86Disassembler.cpp	/^namespace X86 {$/;"	n	namespace:llvm	file:
X86	Target/X86/MCTargetDesc/X86BaseInfo.h	/^namespace X86 {$/;"	n	namespace:llvm
X86	Target/X86/MCTargetDesc/X86FixupKinds.h	/^namespace X86 {$/;"	n	namespace:llvm
X86	Target/X86/X86ISelLowering.h	/^  namespace X86 {$/;"	n	namespace:llvm
X86	Target/X86/X86InstrInfo.h	/^namespace X86 {$/;"	n	namespace:llvm
X86	Target/X86/X86Relocations.h	/^  namespace X86 {$/;"	n	namespace:llvm
X863DNowEnum	Target/X86/X86Subtarget.h	/^  enum X863DNowEnum {$/;"	g	class:llvm::X86Subtarget
X863DNowLevel	Target/X86/X86Subtarget.h	/^  X863DNowEnum X863DNowLevel;$/;"	m	class:llvm::X86Subtarget
X86ASMPRINTER_H	Target/X86/X86AsmPrinter.h	15;"	d
X86ATTInstPrinter	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  X86ATTInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,$/;"	f	class:llvm::X86ATTInstPrinter
X86ATTInstPrinter	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^class X86ATTInstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
X86AddressMode	Target/X86/X86InstrBuilder.h	/^  X86AddressMode()$/;"	f	struct:llvm::X86AddressMode
X86AddressMode	Target/X86/X86InstrBuilder.h	/^struct X86AddressMode {$/;"	s	namespace:llvm
X86AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  X86AsmBackend(const Target &T, StringRef _CPU)$/;"	f	class:__anon344::X86AsmBackend
X86AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^class X86AsmBackend : public MCAsmBackend {$/;"	c	namespace:__anon344	file:
X86AsmLexer	Target/X86/AsmParser/X86AsmLexer.cpp	/^  X86AsmLexer(const Target &T, const MCRegisterInfo &MRI, const MCAsmInfo &MAI)$/;"	f	class:__anon342::X86AsmLexer
X86AsmLexer	Target/X86/AsmParser/X86AsmLexer.cpp	/^class X86AsmLexer : public MCTargetAsmLexer {$/;"	c	namespace:__anon342	file:
X86AsmParser	Target/X86/AsmParser/X86AsmParser.cpp	/^  X86AsmParser(MCSubtargetInfo &sti, MCAsmParser &parser)$/;"	f	class:__anon335::X86AsmParser
X86AsmParser	Target/X86/AsmParser/X86AsmParser.cpp	/^class X86AsmParser : public MCTargetAsmParser {$/;"	c	namespace:__anon335	file:
X86AsmPrinter	Target/X86/X86AsmPrinter.h	/^  explicit X86AsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:llvm::X86AsmPrinter
X86AsmPrinter	Target/X86/X86AsmPrinter.h	/^class LLVM_LIBRARY_VISIBILITY X86AsmPrinter : public AsmPrinter {$/;"	c	namespace:llvm
X86BASEINFO_H	Target/X86/MCTargetDesc/X86BaseInfo.h	18;"	d
X86COFFMachineModuleInfo	Target/X86/X86COFFMachineModuleInfo.h	/^  X86COFFMachineModuleInfo(const MachineModuleInfo &) {}$/;"	f	class:llvm::X86COFFMachineModuleInfo
X86COFFMachineModuleInfo	Target/X86/X86COFFMachineModuleInfo.h	/^class X86COFFMachineModuleInfo : public MachineModuleInfoImpl {$/;"	c	namespace:llvm
X86COFF_MACHINEMODULEINFO_H	Target/X86/X86COFFMachineModuleInfo.h	15;"	d
X86ChooseCmpImmediateOpcode	Target/X86/X86FastISel.cpp	/^static unsigned X86ChooseCmpImmediateOpcode(EVT VT, const ConstantInt *RHSC) {$/;"	f	file:
X86ChooseCmpOpcode	Target/X86/X86FastISel.cpp	/^static unsigned X86ChooseCmpOpcode(EVT VT, const X86Subtarget *Subtarget) {$/;"	f	file:
X86CompilationCallback	Target/X86/X86CompilationCallback_Win64.asm	/^X86CompilationCallback proc$/;"	l
X86CompilationCallback	Target/X86/X86JITInfo.cpp	/^  _declspec(naked) void X86CompilationCallback(void) {$/;"	f
X86CompilationCallback	Target/X86/X86JITInfo.cpp	/^  void X86CompilationCallback() {$/;"	f
X86CompilationCallback2	Target/X86/X86JITInfo.cpp	/^X86CompilationCallback2(intptr_t *StackPtr, intptr_t RetAddr) {$/;"	f	file:
X86DAGToDAGISel	Target/X86/X86ISelDAGToDAG.cpp	/^    explicit X86DAGToDAGISel(X86TargetMachine &tm, CodeGenOpt::Level OptLevel)$/;"	f	class:__anon373::X86DAGToDAGISel
X86DAGToDAGISel	Target/X86/X86ISelDAGToDAG.cpp	/^  class X86DAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon373	file:
X86DISASSEMBLERDECODERCOMMON_H	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	23;"	d
X86DISASSEMBLERDECODER_H	Target/X86/Disassembler/X86DisassemblerDecoder.h	17;"	d
X86DISASSEMBLER_H	Target/X86/Disassembler/X86Disassembler.h	75;"	d
X86Disassembler	Target/X86/Disassembler/X86Disassembler.h	/^namespace X86Disassembler {$/;"	n	namespace:llvm
X86ELFMCAsmInfo	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^X86ELFMCAsmInfo::X86ELFMCAsmInfo(const Triple &T) {$/;"	f	class:X86ELFMCAsmInfo
X86ELFMCAsmInfo	Target/X86/MCTargetDesc/X86MCAsmInfo.h	/^  class X86ELFMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
X86ELFObjectWriter	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  X86ELFObjectWriter(bool is64Bit, uint8_t OSABI, uint16_t EMachine,$/;"	f	class:__anon344::X86ELFObjectWriter
X86ELFObjectWriter	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^class X86ELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anon344	file:
X86ELFObjectWriter	Target/X86/MCTargetDesc/X86ELFObjectWriter.cpp	/^  class X86ELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anon346	file:
X86ELFObjectWriter	Target/X86/MCTargetDesc/X86ELFObjectWriter.cpp	/^X86ELFObjectWriter::X86ELFObjectWriter(bool Is64Bit, uint8_t OSABI)$/;"	f	class:X86ELFObjectWriter
X86ELFWriterInfo	Target/X86/X86ELFWriterInfo.cpp	/^X86ELFWriterInfo::X86ELFWriterInfo(bool is64Bit_, bool isLittleEndian_)$/;"	f	class:X86ELFWriterInfo
X86ELFWriterInfo	Target/X86/X86ELFWriterInfo.h	/^  class X86ELFWriterInfo : public TargetELFWriterInfo {$/;"	c	namespace:llvm
X86FastEmitCompare	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86FastEmitCompare(const Value *Op0, const Value *Op1,$/;"	f	class:X86FastISel
X86FastEmitExtend	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86FastEmitExtend(ISD::NodeType Opc, EVT DstVT,$/;"	f	class:X86FastISel
X86FastEmitLoad	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86FastEmitLoad(EVT VT, const X86AddressMode &AM,$/;"	f	class:X86FastISel
X86FastEmitStore	Target/X86/X86FastISel.cpp	/^X86FastISel::X86FastEmitStore(EVT VT, unsigned Val, const X86AddressMode &AM) {$/;"	f	class:X86FastISel
X86FastEmitStore	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86FastEmitStore(EVT VT, const Value *Val,$/;"	f	class:X86FastISel
X86FastISel	Target/X86/X86FastISel.cpp	/^  explicit X86FastISel(FunctionLoweringInfo &funcInfo,$/;"	f	class:__anon381::X86FastISel
X86FastISel	Target/X86/X86FastISel.cpp	/^class X86FastISel : public FastISel {$/;"	c	namespace:__anon381	file:
X86FrameLowering	Target/X86/X86FrameLowering.h	/^  explicit X86FrameLowering(const X86TargetMachine &tm, const X86Subtarget &sti)$/;"	f	class:llvm::X86FrameLowering
X86FrameLowering	Target/X86/X86FrameLowering.h	/^class X86FrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
X86GenericDisassembler	Target/X86/Disassembler/X86Disassembler.cpp	/^X86GenericDisassembler::X86GenericDisassembler(const MCSubtargetInfo &STI,$/;"	f	class:X86GenericDisassembler
X86GenericDisassembler	Target/X86/Disassembler/X86Disassembler.h	/^class X86GenericDisassembler : public MCDisassembler {$/;"	c	namespace:llvm::X86Disassembler
X86II	Target/X86/MCTargetDesc/X86BaseInfo.h	/^namespace X86II {$/;"	n	namespace:llvm
X86INSTRBUILDER_H	Target/X86/X86InstrBuilder.h	25;"	d
X86INSTRUCTIONINFO_H	Target/X86/X86InstrInfo.h	15;"	d
X86ISD	Target/X86/X86ISelLowering.h	/^  namespace X86ISD {$/;"	n	namespace:llvm
X86ISELLOWERING_H	Target/X86/X86ISelLowering.h	16;"	d
X86ISelAddressMode	Target/X86/X86ISelDAGToDAG.cpp	/^    X86ISelAddressMode()$/;"	f	struct:__anon371::X86ISelAddressMode
X86ISelAddressMode	Target/X86/X86ISelDAGToDAG.cpp	/^  struct X86ISelAddressMode {$/;"	s	namespace:__anon371	file:
X86InstrInfo	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::X86InstrInfo(X86TargetMachine &tm)$/;"	f	class:X86InstrInfo
X86InstrInfo	Target/X86/X86InstrInfo.h	/^class X86InstrInfo : public X86GenInstrInfo {$/;"	c	namespace:llvm
X86IntelInstPrinter	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  X86IntelInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,$/;"	f	class:llvm::X86IntelInstPrinter
X86IntelInstPrinter	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^class X86IntelInstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
X86JITINFO_H	Target/X86/X86JITInfo.h	15;"	d
X86JITInfo	Target/X86/X86JITInfo.cpp	/^X86JITInfo::X86JITInfo(X86TargetMachine &tm) : TM(tm) {$/;"	f	class:X86JITInfo
X86JITInfo	Target/X86/X86JITInfo.h	/^  class X86JITInfo : public TargetJITInfo {$/;"	c	namespace:llvm
X86LinuxTargetObjectFile	Target/X86/X86TargetObjectFile.h	/^  class X86LinuxTargetObjectFile : public TargetLoweringObjectFileELF {$/;"	c	namespace:llvm
X86Lowering	Target/X86/X86ISelDAGToDAG.cpp	/^    const X86TargetLowering &X86Lowering;$/;"	m	class:__anon373::X86DAGToDAGISel	file:
X86MACHINEFUNCTIONINFO_H	Target/X86/X86MachineFunctionInfo.h	15;"	d
X86MCAsmInfoDarwin	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^X86MCAsmInfoDarwin::X86MCAsmInfoDarwin(const Triple &T) {$/;"	f	class:X86MCAsmInfoDarwin
X86MCAsmInfoDarwin	Target/X86/MCTargetDesc/X86MCAsmInfo.h	/^  class X86MCAsmInfoDarwin : public MCAsmInfoDarwin {$/;"	c	namespace:llvm
X86MCAsmInfoGNUCOFF	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^X86MCAsmInfoGNUCOFF::X86MCAsmInfoGNUCOFF(const Triple &Triple) {$/;"	f	class:X86MCAsmInfoGNUCOFF
X86MCAsmInfoGNUCOFF	Target/X86/MCTargetDesc/X86MCAsmInfo.h	/^  class X86MCAsmInfoGNUCOFF : public MCAsmInfoGNUCOFF {$/;"	c	namespace:llvm
X86MCAsmInfoMicrosoft	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^X86MCAsmInfoMicrosoft::X86MCAsmInfoMicrosoft(const Triple &Triple) {$/;"	f	class:X86MCAsmInfoMicrosoft
X86MCAsmInfoMicrosoft	Target/X86/MCTargetDesc/X86MCAsmInfo.h	/^  class X86MCAsmInfoMicrosoft : public MCAsmInfoMicrosoft {$/;"	c	namespace:llvm
X86MCCodeEmitter	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  X86MCCodeEmitter(const MCInstrInfo &mcii, const MCSubtargetInfo &sti,$/;"	f	class:__anon353::X86MCCodeEmitter
X86MCCodeEmitter	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^class X86MCCodeEmitter : public MCCodeEmitter {$/;"	c	namespace:__anon353	file:
X86MCInstLower	Target/X86/X86MCInstLower.cpp	/^X86MCInstLower::X86MCInstLower(Mangler *mang, const MachineFunction &mf,$/;"	f	class:X86MCInstLower
X86MCInstLower	Target/X86/X86MCInstLower.cpp	/^class X86MCInstLower {$/;"	c	namespace:__anon380	file:
X86MCTARGETDESC_H	Target/X86/MCTargetDesc/X86MCTargetDesc.h	15;"	d
X86MachObjectWriter	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^  X86MachObjectWriter(bool Is64Bit, uint32_t CPUType,$/;"	f	class:__anon351::X86MachObjectWriter
X86MachObjectWriter	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^class X86MachObjectWriter : public MCMachObjectTargetWriter {$/;"	c	namespace:__anon351	file:
X86MachineFunctionInfo	Target/X86/X86MachineFunctionInfo.h	/^  X86MachineFunctionInfo() : ForceFramePointer(false),$/;"	f	class:llvm::X86MachineFunctionInfo
X86MachineFunctionInfo	Target/X86/X86MachineFunctionInfo.h	/^  explicit X86MachineFunctionInfo(MachineFunction &MF)$/;"	f	class:llvm::X86MachineFunctionInfo
X86MachineFunctionInfo	Target/X86/X86MachineFunctionInfo.h	/^class X86MachineFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
X86OpTblEntry	Target/X86/X86InstrInfo.cpp	/^struct X86OpTblEntry {$/;"	s	file:
X86Operand	Target/X86/AsmParser/X86AsmParser.cpp	/^  X86Operand(KindTy K, SMLoc Start, SMLoc End)$/;"	f	struct:__anon336::X86Operand
X86Operand	Target/X86/AsmParser/X86AsmParser.cpp	/^struct X86Operand : public MCParsedAsmOperand {$/;"	s	namespace:__anon336	file:
X86PassConfig	Target/X86/X86TargetMachine.cpp	/^  X86PassConfig(X86TargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon377::X86PassConfig
X86PassConfig	Target/X86/X86TargetMachine.cpp	/^class X86PassConfig : public TargetPassConfig {$/;"	c	namespace:__anon377	file:
X86ProcFamily	Target/X86/X86Subtarget.h	/^  X86ProcFamilyEnum X86ProcFamily;$/;"	m	class:llvm::X86Subtarget
X86ProcFamilyEnum	Target/X86/X86Subtarget.h	/^  enum X86ProcFamilyEnum {$/;"	g	class:llvm::X86Subtarget
X86REGISTERINFO_H	Target/X86/X86RegisterInfo.h	15;"	d
X86RELOCATIONS_H	Target/X86/X86Relocations.h	15;"	d
X86RegisterInfo	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::X86RegisterInfo(X86TargetMachine &tm,$/;"	f	class:X86RegisterInfo
X86RegisterInfo	Target/X86/X86RegisterInfo.h	/^class X86RegisterInfo : public X86GenRegisterInfo {$/;"	c	namespace:llvm
X86SELECTIONDAGINFO_H	Target/X86/X86SelectionDAGInfo.h	15;"	d
X86SSEEnum	Target/X86/X86Subtarget.h	/^  enum X86SSEEnum {$/;"	g	class:llvm::X86Subtarget
X86SSELevel	Target/X86/X86Subtarget.h	/^  X86SSEEnum X86SSELevel;$/;"	m	class:llvm::X86Subtarget
X86SUBTARGET_H	Target/X86/X86Subtarget.h	15;"	d
X86ScalarSSEf32	Target/X86/X86FastISel.cpp	/^  bool X86ScalarSSEf32;$/;"	m	class:__anon381::X86FastISel	file:
X86ScalarSSEf32	Target/X86/X86ISelLowering.h	/^    bool X86ScalarSSEf32;$/;"	m	class:llvm::X86TargetLowering
X86ScalarSSEf64	Target/X86/X86FastISel.cpp	/^  bool X86ScalarSSEf64;$/;"	m	class:__anon381::X86FastISel	file:
X86ScalarSSEf64	Target/X86/X86ISelLowering.h	/^    bool X86ScalarSSEf64;$/;"	m	class:llvm::X86TargetLowering
X86SelectAddress	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectAddress(const Value *V, X86AddressMode &AM) {$/;"	f	class:X86FastISel
X86SelectBranch	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectBranch(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectCall	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectCall(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectCallAddress	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectCallAddress(const Value *V, X86AddressMode &AM) {$/;"	f	class:X86FastISel
X86SelectCmp	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectCmp(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectFPExt	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectFPExt(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectFPTrunc	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectFPTrunc(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectLoad	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectLoad(const Instruction *I)  {$/;"	f	class:X86FastISel
X86SelectRet	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectRet(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectSelect	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectSelect(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectShift	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectShift(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectStore	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectStore(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectTrunc	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectTrunc(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectZExt	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86SelectZExt(const Instruction *I) {$/;"	f	class:X86FastISel
X86SelectionDAGInfo	Target/X86/X86SelectionDAGInfo.cpp	/^X86SelectionDAGInfo::X86SelectionDAGInfo(const X86TargetMachine &TM) :$/;"	f	class:X86SelectionDAGInfo
X86SelectionDAGInfo	Target/X86/X86SelectionDAGInfo.h	/^class X86SelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
X86StackPtr	Target/X86/X86ISelLowering.h	/^    unsigned X86StackPtr;$/;"	m	class:llvm::X86TargetLowering
X86Subtarget	Target/X86/X86Subtarget.cpp	/^X86Subtarget::X86Subtarget(const std::string &TT, const std::string &CPU,$/;"	f	class:X86Subtarget
X86Subtarget	Target/X86/X86Subtarget.h	/^class X86Subtarget : public X86GenSubtargetInfo {$/;"	c	namespace:llvm
X86TARGETASMINFO_H	Target/X86/MCTargetDesc/X86MCAsmInfo.h	15;"	d
X86TARGETMACHINE_H	Target/X86/X86TargetMachine.h	15;"	d
X86TargetLowering	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::X86TargetLowering(X86TargetMachine &TM)$/;"	f	class:X86TargetLowering
X86TargetLowering	Target/X86/X86ISelLowering.h	/^  class X86TargetLowering : public TargetLowering {$/;"	c	namespace:llvm
X86TargetMachine	Target/X86/X86TargetMachine.cpp	/^X86TargetMachine::X86TargetMachine(const Target &T, StringRef TT,$/;"	f	class:X86TargetMachine
X86TargetMachine	Target/X86/X86TargetMachine.h	/^class X86TargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
X86VisitIntrinsicCall	Target/X86/X86FastISel.cpp	/^bool X86FastISel::X86VisitIntrinsicCall(const IntrinsicInst &I) {$/;"	f	class:X86FastISel
X86WinCOFFObjectWriter	Target/X86/MCTargetDesc/X86WinCOFFObjectWriter.cpp	/^  class X86WinCOFFObjectWriter : public MCWinCOFFObjectTargetWriter {$/;"	c	namespace:__anon352	file:
X86WinCOFFObjectWriter	Target/X86/MCTargetDesc/X86WinCOFFObjectWriter.cpp	/^X86WinCOFFObjectWriter::X86WinCOFFObjectWriter(bool Is64Bit_)$/;"	f	class:X86WinCOFFObjectWriter
X86_32TargetMachine	Target/X86/X86TargetMachine.cpp	/^X86_32TargetMachine::X86_32TargetMachine(const Target &T, StringRef TT,$/;"	f	class:X86_32TargetMachine
X86_32TargetMachine	Target/X86/X86TargetMachine.h	/^class X86_32TargetMachine : public X86TargetMachine {$/;"	c	namespace:llvm
X86_32_DarwinEH	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    X86_64 = 0, X86_32_DarwinEH = 1, X86_32_Generic = 2$/;"	e	enum:llvm::DWARFFlavour::__anon347
X86_32_Generic	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    X86_64 = 0, X86_32_DarwinEH = 1, X86_32_Generic = 2$/;"	e	enum:llvm::DWARFFlavour::__anon347
X86_64	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^    X86_64 = 0, X86_32_DarwinEH = 1, X86_32_Generic = 2$/;"	e	enum:llvm::DWARFFlavour::__anon347
X86_64MCAsmInfoDarwin	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^X86_64MCAsmInfoDarwin::X86_64MCAsmInfoDarwin(const Triple &Triple)$/;"	f	class:X86_64MCAsmInfoDarwin
X86_64MCAsmInfoDarwin	Target/X86/MCTargetDesc/X86MCAsmInfo.h	/^  struct X86_64MCAsmInfoDarwin : public X86MCAsmInfoDarwin {$/;"	s	namespace:llvm
X86_64MachoTargetObjectFile	Target/X86/X86TargetObjectFile.h	/^  class X86_64MachoTargetObjectFile : public TargetLoweringObjectFileMachO {$/;"	c	namespace:llvm
X86_64TargetMachine	Target/X86/X86TargetMachine.cpp	/^X86_64TargetMachine::X86_64TargetMachine(const Target &T, StringRef TT,$/;"	f	class:X86_64TargetMachine
X86_64TargetMachine	Target/X86/X86TargetMachine.h	/^class X86_64TargetMachine : public X86TargetMachine {$/;"	c	namespace:llvm
X86_64_JIT	Target/X86/X86JITInfo.cpp	29;"	d	file:
X86_ATT_INST_PRINTER_H	Target/X86/InstPrinter/X86ATTInstPrinter.h	15;"	d
X86_ELF_WRITER_INFO_H	Target/X86/X86ELFWriterInfo.h	15;"	d
X86_FP80Ty	VMCore/LLVMContextImpl.h	/^  Type X86_FP80Ty, FP128Ty, PPC_FP128Ty, X86_MMXTy;$/;"	m	class:llvm::LLVMContextImpl
X86_FRAMELOWERING_H	Target/X86/X86FrameLowering.h	15;"	d
X86_INST_COMMENTS_H	Target/X86/InstPrinter/X86InstComments.h	16;"	d
X86_INTEL_INST_PRINTER_H	Target/X86/InstPrinter/X86IntelInstPrinter.h	15;"	d
X86_MAX_OPERANDS	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	373;"	d
X86_MC	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^namespace X86_MC {$/;"	n	namespace:llvm
X86_MMXTy	VMCore/LLVMContextImpl.h	/^  Type X86_FP80Ty, FP128Ty, PPC_FP128Ty, X86_MMXTy;$/;"	m	class:llvm::LLVMContextImpl
X86_SHUFFLE_DECODE_H	Target/X86/Utils/X86ShuffleDecode.h	16;"	d
XCOREFRAMEINFO_H	Target/XCore/XCoreFrameLowering.h	16;"	d
XCOREINSTRUCTIONINFO_H	Target/XCore/XCoreInstrInfo.h	15;"	d
XCOREISELLOWERING_H	Target/XCore/XCoreISelLowering.h	16;"	d
XCOREMACHINEFUNCTIONINFO_H	Target/XCore/XCoreMachineFunctionInfo.h	15;"	d
XCOREMCTARGETDESC_H	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.h	15;"	d
XCOREREGISTERINFO_H	Target/XCore/XCoreRegisterInfo.h	15;"	d
XCORESELECTIONDAGINFO_H	Target/XCore/XCoreSelectionDAGInfo.h	15;"	d
XCORESUBTARGET_H	Target/XCore/XCoreSubtarget.h	15;"	d
XCORETARGETASMINFO_H	Target/XCore/MCTargetDesc/XCoreMCAsmInfo.h	15;"	d
XCORETARGETMACHINE_H	Target/XCore/XCoreTargetMachine.h	15;"	d
XCast	TableGen/TGLexer.h	/^    XConcat, XSRA, XSRL, XSHL, XStrConcat, XCast, XSubst,$/;"	e	enum:llvm::tgtok::TokKind
XConcat	TableGen/TGLexer.h	/^    XConcat, XSRA, XSRL, XSHL, XStrConcat, XCast, XSubst,$/;"	e	enum:llvm::tgtok::TokKind
XCore	Target/XCore/XCoreInstrInfo.cpp	/^namespace XCore {$/;"	n	namespace:llvm	file:
XCoreAsmPrinter	Target/XCore/XCoreAsmPrinter.cpp	/^    explicit XCoreAsmPrinter(TargetMachine &TM, MCStreamer &Streamer)$/;"	f	class:__anon333::XCoreAsmPrinter
XCoreAsmPrinter	Target/XCore/XCoreAsmPrinter.cpp	/^  class XCoreAsmPrinter : public AsmPrinter {$/;"	c	namespace:__anon333	file:
XCoreDAGToDAGISel	Target/XCore/XCoreISelDAGToDAG.cpp	/^    XCoreDAGToDAGISel(XCoreTargetMachine &TM, CodeGenOpt::Level OptLevel)$/;"	f	class:__anon334::XCoreDAGToDAGISel
XCoreDAGToDAGISel	Target/XCore/XCoreISelDAGToDAG.cpp	/^  class XCoreDAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon334	file:
XCoreFrameLowering	Target/XCore/XCoreFrameLowering.cpp	/^XCoreFrameLowering::XCoreFrameLowering(const XCoreSubtarget &sti)$/;"	f	class:XCoreFrameLowering
XCoreFrameLowering	Target/XCore/XCoreFrameLowering.h	/^  class XCoreFrameLowering: public TargetFrameLowering {$/;"	c	namespace:llvm
XCoreFunctionInfo	Target/XCore/XCoreMachineFunctionInfo.h	/^  XCoreFunctionInfo() :$/;"	f	class:llvm::XCoreFunctionInfo
XCoreFunctionInfo	Target/XCore/XCoreMachineFunctionInfo.h	/^  explicit XCoreFunctionInfo(MachineFunction &MF) :$/;"	f	class:llvm::XCoreFunctionInfo
XCoreFunctionInfo	Target/XCore/XCoreMachineFunctionInfo.h	/^class XCoreFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
XCoreISD	Target/XCore/XCoreISelLowering.h	/^  namespace XCoreISD {$/;"	n	namespace:llvm
XCoreInstrInfo	Target/XCore/XCoreInstrInfo.cpp	/^XCoreInstrInfo::XCoreInstrInfo()$/;"	f	class:XCoreInstrInfo
XCoreInstrInfo	Target/XCore/XCoreInstrInfo.h	/^class XCoreInstrInfo : public XCoreGenInstrInfo {$/;"	c	namespace:llvm
XCoreMCAsmInfo	Target/XCore/MCTargetDesc/XCoreMCAsmInfo.cpp	/^XCoreMCAsmInfo::XCoreMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	class:XCoreMCAsmInfo
XCoreMCAsmInfo	Target/XCore/MCTargetDesc/XCoreMCAsmInfo.h	/^  class XCoreMCAsmInfo : public MCAsmInfo {$/;"	c	namespace:llvm
XCorePassConfig	Target/XCore/XCoreTargetMachine.cpp	/^  XCorePassConfig(XCoreTargetMachine *TM, PassManagerBase &PM)$/;"	f	class:__anon332::XCorePassConfig
XCorePassConfig	Target/XCore/XCoreTargetMachine.cpp	/^class XCorePassConfig : public TargetPassConfig {$/;"	c	namespace:__anon332	file:
XCoreRegisterInfo	Target/XCore/XCoreRegisterInfo.cpp	/^XCoreRegisterInfo::XCoreRegisterInfo(const TargetInstrInfo &tii)$/;"	f	class:XCoreRegisterInfo
XCoreRegisterInfo	Target/XCore/XCoreRegisterInfo.h	/^struct XCoreRegisterInfo : public XCoreGenRegisterInfo {$/;"	s	namespace:llvm
XCoreSelectionDAGInfo	Target/XCore/XCoreSelectionDAGInfo.cpp	/^XCoreSelectionDAGInfo::XCoreSelectionDAGInfo(const XCoreTargetMachine &TM)$/;"	f	class:XCoreSelectionDAGInfo
XCoreSelectionDAGInfo	Target/XCore/XCoreSelectionDAGInfo.h	/^class XCoreSelectionDAGInfo : public TargetSelectionDAGInfo {$/;"	c	namespace:llvm
XCoreSubtarget	Target/XCore/XCoreSubtarget.cpp	/^XCoreSubtarget::XCoreSubtarget(const std::string &TT,$/;"	f	class:XCoreSubtarget
XCoreSubtarget	Target/XCore/XCoreSubtarget.h	/^class XCoreSubtarget : public XCoreGenSubtargetInfo {$/;"	c	namespace:llvm
XCoreTargetLowering	Target/XCore/XCoreISelLowering.cpp	/^XCoreTargetLowering::XCoreTargetLowering(XCoreTargetMachine &XTM)$/;"	f	class:XCoreTargetLowering
XCoreTargetLowering	Target/XCore/XCoreISelLowering.h	/^  class XCoreTargetLowering : public TargetLowering$/;"	c	namespace:llvm
XCoreTargetMachine	Target/XCore/XCoreTargetMachine.cpp	/^XCoreTargetMachine::XCoreTargetMachine(const Target &T, StringRef TT,$/;"	f	class:XCoreTargetMachine
XCoreTargetMachine	Target/XCore/XCoreTargetMachine.h	/^class XCoreTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
XCoreTargetObjectFile	Target/XCore/XCoreTargetObjectFile.h	/^  class XCoreTargetObjectFile : public TargetLoweringObjectFileELF {$/;"	c	namespace:llvm
XD	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    XD = 11 << Op0Shift,  XS = 12 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
XEmpty	TableGen/TGLexer.h	/^    XForEach, XHead, XTail, XEmpty, XIf, XEq,$/;"	e	enum:llvm::tgtok::TokKind
XEq	TableGen/TGLexer.h	/^    XForEach, XHead, XTail, XEmpty, XIf, XEq,$/;"	e	enum:llvm::tgtok::TokKind
XForEach	TableGen/TGLexer.h	/^    XForEach, XHead, XTail, XEmpty, XIf, XEq,$/;"	e	enum:llvm::tgtok::TokKind
XFormVExtractWithShuffleIntoLoad	Target/X86/X86ISelLowering.cpp	/^static SDValue XFormVExtractWithShuffleIntoLoad(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
XHead	TableGen/TGLexer.h	/^    XForEach, XHead, XTail, XEmpty, XIf, XEq,$/;"	e	enum:llvm::tgtok::TokKind
XIf	TableGen/TGLexer.h	/^    XForEach, XHead, XTail, XEmpty, XIf, XEq,$/;"	e	enum:llvm::tgtok::TokKind
XOP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    XOP = 1U << 9$/;"	e	enum:llvm::X86II::__anon350
XOP8	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    XOP8 = 20 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
XOP9	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    XOP9 = 21 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
XOR	Target/X86/X86ISelDAGToDAG.cpp	/^  XOR,$/;"	e	enum:AtomicOpc	file:
XOR	Target/X86/X86ISelLowering.h	/^      INC, DEC, OR, XOR, AND,$/;"	e	enum:llvm::X86ISD::NodeType
XS	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    XD = 11 << Op0Shift,  XS = 12 << Op0Shift,$/;"	e	enum:llvm::X86II::__anon350
XSHL	TableGen/TGLexer.h	/^    XConcat, XSRA, XSRL, XSHL, XStrConcat, XCast, XSubst,$/;"	e	enum:llvm::tgtok::TokKind
XSRA	TableGen/TGLexer.h	/^    XConcat, XSRA, XSRL, XSHL, XStrConcat, XCast, XSubst,$/;"	e	enum:llvm::tgtok::TokKind
XSRL	TableGen/TGLexer.h	/^    XConcat, XSRA, XSRL, XSHL, XStrConcat, XCast, XSubst,$/;"	e	enum:llvm::tgtok::TokKind
XStrConcat	TableGen/TGLexer.h	/^    XConcat, XSRA, XSRL, XSHL, XStrConcat, XCast, XSubst,$/;"	e	enum:llvm::tgtok::TokKind
XSubst	TableGen/TGLexer.h	/^    XConcat, XSRA, XSRL, XSHL, XStrConcat, XCast, XSubst,$/;"	e	enum:llvm::tgtok::TokKind
XTail	TableGen/TGLexer.h	/^    XForEach, XHead, XTail, XEmpty, XIf, XEq,$/;"	e	enum:llvm::tgtok::TokKind
Xform16Bit	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^    Xform16Bit    = 1 << 14,$/;"	e	enum:llvm::ARMII::__anon288
XformToShuffleWithZero	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::XformToShuffleWithZero(SDNode *N) {$/;"	f	class:DAGCombiner
XorSlowCase	Support/APInt.cpp	/^APInt APInt::XorSlowCase(const APInt& RHS) const {$/;"	f	class:APInt
ZExtInst	VMCore/Instructions.cpp	/^ZExtInst::ZExtInst($/;"	f	class:ZExtInst
ZExtPromoteOperand	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::ZExtPromoteOperand(SDValue Op, EVT PVT) {$/;"	f	class:DAGCombiner
ZExtPromotedInteger	CodeGen/SelectionDAG/LegalizeTypes.h	/^  SDValue ZExtPromotedInteger(SDValue Op) {$/;"	f	class:llvm::DAGTypeLegalizer
ZH_NONTAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t ZH_NONTAKEN_WEIGHT = 12;$/;"	v	file:
ZH_TAKEN_WEIGHT	Analysis/BranchProbabilityInfo.cpp	/^static const uint32_t ZH_TAKEN_WEIGHT = 20;$/;"	v	file:
Zap	Transforms/InstCombine/InstCombineWorklist.h	/^  void Zap() {$/;"	f	class:llvm::InstCombineWorklist
ZeroArgFP	Target/X86/MCTargetDesc/X86BaseInfo.h	/^    ZeroArgFP  = 1 << FPTypeShift,$/;"	e	enum:llvm::X86II::__anon350
ZeroTime	Support/TimeValue.cpp	/^const TimeValue TimeValue::ZeroTime      = TimeValue ( 0,0 );$/;"	m	class:llvm::TimeValue	file:
_GNU_SOURCE	ExecutionEngine/IntelJITEvents/ittnotify_config.h	189;"	d
_ITTNOTIFY_CONFIG_H_	ExecutionEngine/IntelJITEvents/ittnotify_config.h	20;"	d
_ITTNOTIFY_TYPES_H_	ExecutionEngine/IntelJITEvents/ittnotify_types.h	17;"	d
_ITT_BUILD_ASSERT	ExecutionEngine/IntelJITEvents/ittnotify_config.h	160;"	d
_LineNumberInfo	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^typedef struct _LineNumberInfo$/;"	s
_REGEX_H_	Support/regex_impl.h	39;"	d
_WIN32_IE	Support/Windows/Windows.h	24;"	d
_WIN32_WINNT	Support/Windows/Windows.h	20;"	d
_WIN32_WINNT	Support/Windows/Windows.h	23;"	d
__CLK_ADDRESS_BASE	Target/NVPTX/cl_common_defines.h	/^    __CLK_ADDRESS_BASE             = 0,$/;"	e	enum:clk_sampler_type
__CLK_ADDRESS_BITS	Target/NVPTX/cl_common_defines.h	/^    __CLK_ADDRESS_BITS             = 3,        \/\/ number of bits required to$/;"	e	enum:clk_sampler_type
__CLK_ADDRESS_MASK	Target/NVPTX/cl_common_defines.h	/^    __CLK_ADDRESS_MASK             = CLK_ADDRESS_NONE | CLK_ADDRESS_CLAMP |$/;"	e	enum:clk_sampler_type
__CLK_ANISOTROPIC_RATIO_BITS	Target/NVPTX/cl_common_defines.h	/^    __CLK_ANISOTROPIC_RATIO_BITS   = 5,$/;"	e	enum:clk_sampler_type
__CLK_ANISOTROPIC_RATIO_MASK	Target/NVPTX/cl_common_defines.h	/^    __CLK_ANISOTROPIC_RATIO_MASK   = (int) 0x80000000 >>$/;"	e	enum:clk_sampler_type
__CLK_FILTER_BASE	Target/NVPTX/cl_common_defines.h	/^    __CLK_FILTER_BASE              = __CLK_NORMALIZED_BASE +$/;"	e	enum:clk_sampler_type
__CLK_FILTER_BITS	Target/NVPTX/cl_common_defines.h	/^    __CLK_FILTER_BITS              = 2,        \/\/ number of bits required to$/;"	e	enum:clk_sampler_type
__CLK_FILTER_MASK	Target/NVPTX/cl_common_defines.h	/^    __CLK_FILTER_MASK              = CLK_FILTER_NEAREST | CLK_FILTER_LINEAR |$/;"	e	enum:clk_sampler_type
__CLK_INVALID_IMAGE_TYPE	Target/NVPTX/cl_common_defines.h	/^  __CLK_INVALID_IMAGE_TYPE = __CLK_VALID_IMAGE_TYPE_COUNT,$/;"	e	enum:clk_channel_type
__CLK_MIP_BASE	Target/NVPTX/cl_common_defines.h	/^    __CLK_MIP_BASE                 = __CLK_FILTER_BASE + __CLK_FILTER_BITS,$/;"	e	enum:clk_sampler_type
__CLK_MIP_BITS	Target/NVPTX/cl_common_defines.h	/^    __CLK_MIP_BITS                 = 2,$/;"	e	enum:clk_sampler_type
__CLK_MIP_MASK	Target/NVPTX/cl_common_defines.h	/^    __CLK_MIP_MASK                 = CLK_MIP_NEAREST | CLK_MIP_LINEAR |$/;"	e	enum:clk_sampler_type
__CLK_NORMALIZED_BASE	Target/NVPTX/cl_common_defines.h	/^    __CLK_NORMALIZED_BASE          = __CLK_ADDRESS_BITS,$/;"	e	enum:clk_sampler_type
__CLK_NORMALIZED_BITS	Target/NVPTX/cl_common_defines.h	/^    __CLK_NORMALIZED_BITS          = 1,        \/\/ number of bits required to$/;"	e	enum:clk_sampler_type
__CLK_NORMALIZED_MASK	Target/NVPTX/cl_common_defines.h	/^    __CLK_NORMALIZED_MASK          = CLK_NORMALIZED_COORDS_FALSE |$/;"	e	enum:clk_sampler_type
__CLK_SAMPLER_BITS	Target/NVPTX/cl_common_defines.h	/^    __CLK_SAMPLER_BITS             = __CLK_MIP_BASE + __CLK_MIP_BITS,$/;"	e	enum:clk_sampler_type
__CLK_SAMPLER_MASK	Target/NVPTX/cl_common_defines.h	/^    __CLK_SAMPLER_MASK             = __CLK_MIP_MASK | __CLK_FILTER_MASK |$/;"	e	enum:clk_sampler_type
__CLK_UNORM_INT8888	Target/NVPTX/cl_common_defines.h	/^  __CLK_UNORM_INT8888 ,         \/\/ four channel ARGB unorm8$/;"	e	enum:clk_channel_type
__CLK_UNORM_INT8888R	Target/NVPTX/cl_common_defines.h	/^  __CLK_UNORM_INT8888R,        \/\/ four channel BGRA unorm8$/;"	e	enum:clk_channel_type
__CLK_VALID_IMAGE_TYPE_COUNT	Target/NVPTX/cl_common_defines.h	/^  __CLK_VALID_IMAGE_TYPE_COUNT,$/;"	e	enum:clk_channel_type
__CLK_VALID_IMAGE_TYPE_MASK	Target/NVPTX/cl_common_defines.h	/^  __CLK_VALID_IMAGE_TYPE_MASK = ( 1 << __CLK_VALID_IMAGE_TYPE_MASK_BITS ) - 1$/;"	e	enum:clk_channel_type
__CLK_VALID_IMAGE_TYPE_MASK_BITS	Target/NVPTX/cl_common_defines.h	/^  __CLK_VALID_IMAGE_TYPE_MASK_BITS = 4,         \/\/ number of bits required to$/;"	e	enum:clk_channel_type
__CL_COMMON_DEFINES_H__	Target/NVPTX/cl_common_defines.h	2;"	d
__ITT_BUILD_ASSERT	ExecutionEngine/IntelJITEvents/ittnotify_config.h	156;"	d
__JITPROFILING_H__	ExecutionEngine/IntelJITEvents/jitprofiling.h	20;"	d
__TARGET_ARMBUILDATTRS_H__	Target/ARM/ARMBuildAttrs.h	16;"	d
__TBB_machine_fetchadd4	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^ITT_INLINE long __TBB_machine_fetchadd4(volatile void* ptr, long addend)$/;"	f
__TBB_machine_fetchadd4	ExecutionEngine/IntelJITEvents/ittnotify_config.h	258;"	d
__THUMB_FRAMEINFO_H_	Target/ARM/Thumb1FrameLowering.h	15;"	d
__USER_LABEL_PREFIX__	Target/ARM/ARMJITInfo.cpp	39;"	d	file:
__USER_LABEL_PREFIX__	Target/Mips/MipsJITInfo.cpp	84;"	d	file:
__USER_LABEL_PREFIX__	Target/X86/X86JITInfo.cpp	54;"	d	file:
___itt_api_info	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef struct ___itt_api_info$/;"	s
___itt_api_info_20101001	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef struct ___itt_api_info_20101001$/;"	s
___itt_global	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef struct ___itt_global$/;"	s
___itt_group_id	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^typedef enum ___itt_group_id$/;"	g
___itt_group_list	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^typedef struct ___itt_group_list$/;"	s
___itt_thread_info	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef struct ___itt_thread_info$/;"	s
__crashreporter_info__	Support/PrettyStackTrace.cpp	/^static const char *__crashreporter_info__ = 0;$/;"	v	file:
__itt_api_info	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^}  __itt_api_info;$/;"	t	typeref:struct:___itt_api_info
__itt_api_info_20101001	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^}  __itt_api_info_20101001;$/;"	t	typeref:struct:___itt_api_info_20101001
__itt_collection_normal	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_collection_normal = 0,$/;"	e	enum:__anon196
__itt_collection_paused	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_collection_paused = 1$/;"	e	enum:__anon196
__itt_collection_state	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^} __itt_collection_state;$/;"	t	typeref:enum:__anon196
__itt_fstrcmp	ExecutionEngine/IntelJITEvents/ittnotify_config.h	209;"	d
__itt_fstrcmp	ExecutionEngine/IntelJITEvents/ittnotify_config.h	250;"	d
__itt_fstrcpyn	ExecutionEngine/IntelJITEvents/ittnotify_config.h	211;"	d
__itt_fstrcpyn	ExecutionEngine/IntelJITEvents/ittnotify_config.h	252;"	d
__itt_fstrdup	ExecutionEngine/IntelJITEvents/ittnotify_config.h	212;"	d
__itt_fstrdup	ExecutionEngine/IntelJITEvents/ittnotify_config.h	253;"	d
__itt_fstrlen	ExecutionEngine/IntelJITEvents/ittnotify_config.h	210;"	d
__itt_fstrlen	ExecutionEngine/IntelJITEvents/ittnotify_config.h	251;"	d
__itt_get_proc	ExecutionEngine/IntelJITEvents/ittnotify_config.h	202;"	d
__itt_get_proc	ExecutionEngine/IntelJITEvents/ittnotify_config.h	224;"	d
__itt_global	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^} __itt_global;$/;"	t	typeref:struct:___itt_global
__itt_group_all	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_all       = -1$/;"	e	enum:___itt_group_id
__itt_group_control	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_control   = 1<<1,$/;"	e	enum:___itt_group_id
__itt_group_counter	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_counter   = 1<<8,$/;"	e	enum:___itt_group_id
__itt_group_frame	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_frame     = 1<<9,$/;"	e	enum:___itt_group_id
__itt_group_fsync	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_fsync     = 1<<5,$/;"	e	enum:___itt_group_id
__itt_group_heap	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_heap      = 1<<11,$/;"	e	enum:___itt_group_id
__itt_group_id	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^} __itt_group_id;$/;"	t	typeref:enum:___itt_group_id
__itt_group_jit	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_jit       = 1<<6,$/;"	e	enum:___itt_group_id
__itt_group_legacy	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_legacy    = 1<<0,$/;"	e	enum:___itt_group_id
__itt_group_list	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^} __itt_group_list;$/;"	t	typeref:struct:___itt_group_list
__itt_group_mark	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_mark      = 1<<3,$/;"	e	enum:___itt_group_id
__itt_group_model	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_model     = 1<<7,$/;"	e	enum:___itt_group_id
__itt_group_none	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_none      = 0,$/;"	e	enum:___itt_group_id
__itt_group_splitter_max	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_splitter_max = 1<<12,$/;"	e	enum:___itt_group_id
__itt_group_splitter_min	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_splitter_min = 1<<7,$/;"	e	enum:___itt_group_id
__itt_group_stitch	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_stitch    = 1<<10,$/;"	e	enum:___itt_group_id
__itt_group_structure	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_structure = 1<<12,$/;"	e	enum:___itt_group_id
__itt_group_suppress	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_suppress = 1<<13,$/;"	e	enum:___itt_group_id
__itt_group_sync	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_sync      = 1<<4,$/;"	e	enum:___itt_group_id
__itt_group_thread	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_thread    = 1<<2,$/;"	e	enum:___itt_group_id
__itt_interlocked_increment	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^ITT_INLINE long __itt_interlocked_increment(volatile long* ptr)$/;"	f
__itt_load_lib	ExecutionEngine/IntelJITEvents/ittnotify_config.h	206;"	d
__itt_load_lib	ExecutionEngine/IntelJITEvents/ittnotify_config.h	247;"	d
__itt_mutex_init	ExecutionEngine/IntelJITEvents/ittnotify_config.h	203;"	d
__itt_mutex_init	ExecutionEngine/IntelJITEvents/ittnotify_config.h	225;"	d
__itt_mutex_lock	ExecutionEngine/IntelJITEvents/ittnotify_config.h	204;"	d
__itt_mutex_lock	ExecutionEngine/IntelJITEvents/ittnotify_config.h	245;"	d
__itt_mutex_unlock	ExecutionEngine/IntelJITEvents/ittnotify_config.h	205;"	d
__itt_mutex_unlock	ExecutionEngine/IntelJITEvents/ittnotify_config.h	246;"	d
__itt_system_error	ExecutionEngine/IntelJITEvents/ittnotify_config.h	208;"	d
__itt_system_error	ExecutionEngine/IntelJITEvents/ittnotify_config.h	249;"	d
__itt_thread_id	ExecutionEngine/IntelJITEvents/ittnotify_config.h	213;"	d
__itt_thread_id	ExecutionEngine/IntelJITEvents/ittnotify_config.h	254;"	d
__itt_thread_ignored	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_thread_ignored = 1$/;"	e	enum:__anon197
__itt_thread_info	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^} __itt_thread_info;$/;"	t	typeref:struct:___itt_thread_info
__itt_thread_normal	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_thread_normal  = 0,$/;"	e	enum:__anon197
__itt_thread_state	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^} __itt_thread_state;$/;"	t	typeref:enum:__anon197
__itt_thread_yield	ExecutionEngine/IntelJITEvents/ittnotify_config.h	214;"	d
__itt_thread_yield	ExecutionEngine/IntelJITEvents/ittnotify_config.h	255;"	d
__itt_unload_lib	ExecutionEngine/IntelJITEvents/ittnotify_config.h	207;"	d
__itt_unload_lib	ExecutionEngine/IntelJITEvents/ittnotify_config.h	248;"	d
__jit_debug_descriptor	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^  static struct jit_descriptor __jit_debug_descriptor = { 1, 0, 0, 0 };$/;"	v	typeref:struct:jit_descriptor	file:
__jit_debug_register_code	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^  LLVM_ATTRIBUTE_NOINLINE void __jit_debug_register_code() { }$/;"	f
_chordEdges	Transforms/Instrumentation/PathProfiling.cpp	/^  BLEdgeVector _chordEdges; \/\/ All edges not in the spanning tree.$/;"	m	class:__anon488::BLInstrumentationDag	file:
_counterArray	Transforms/Instrumentation/PathProfiling.cpp	/^  GlobalVariable* _counterArray; \/\/ Array to store path counters$/;"	m	class:__anon488::BLInstrumentationDag	file:
_endingPathNumber	Transforms/Instrumentation/PathProfiling.cpp	/^  Value* _endingPathNumber; \/\/ The Value for the current pathNumber.$/;"	m	class:__anon488::BLInstrumentationNode	file:
_file	Analysis/PathProfileInfo.cpp	/^    FILE* _file;$/;"	m	class:__anon40::PathProfileLoaderPass	file:
_filename	Analysis/PathProfileInfo.cpp	/^    std::string _filename;$/;"	m	class:__anon40::PathProfileLoaderPass	file:
_functions	Analysis/PathProfileInfo.cpp	/^    std::vector<Function*> _functions;$/;"	m	class:__anon40::PathProfileLoaderPass	file:
_generic_error_category	Support/system_error.cpp	/^class _generic_error_category : public _do_message {$/;"	c	namespace:llvm	file:
_hasInstrumentation	Transforms/Instrumentation/PathProfiling.cpp	/^  bool _hasInstrumentation;$/;"	m	class:__anon488::BLInstrumentationEdge	file:
_iJDEnvironmentType	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^typedef enum _iJDEnvironmentType$/;"	g
_iJIT_IsProfilingActiveFlags	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^typedef enum _iJIT_IsProfilingActiveFlags$/;"	g
_iJIT_Method_Id	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^typedef struct _iJIT_Method_Id$/;"	s
_iJIT_Method_Load	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^typedef struct _iJIT_Method_Load$/;"	s
_iJIT_Method_NIDS	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^typedef struct _iJIT_Method_NIDS$/;"	s
_iJIT_ModeFlags	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^typedef enum _iJIT_ModeFlags$/;"	g
_increment	Transforms/Instrumentation/PathProfiling.cpp	/^  long long _increment;$/;"	m	class:__anon488::BLInstrumentationEdge	file:
_isCounterIncrement	Transforms/Instrumentation/PathProfiling.cpp	/^  bool _isCounterIncrement;$/;"	m	class:__anon488::BLInstrumentationEdge	file:
_isInSpanningTree	Transforms/Instrumentation/PathProfiling.cpp	/^  bool _isInSpanningTree;$/;"	m	class:__anon488::BLInstrumentationEdge	file:
_isInitialization	Transforms/Instrumentation/PathProfiling.cpp	/^  bool _isInitialization;$/;"	m	class:__anon488::BLInstrumentationEdge	file:
_object_error_category	Object/Error.cpp	/^class _object_error_category : public _do_message {$/;"	c	namespace:__anon231	file:
_pathPHI	Transforms/Instrumentation/PathProfiling.cpp	/^  PHINode* _pathPHI; \/\/ The PHINode for current pathNumber.$/;"	m	class:__anon488::BLInstrumentationNode	file:
_startingPathNumber	Transforms/Instrumentation/PathProfiling.cpp	/^  Value* _startingPathNumber; \/\/ The Value for the current pathNumber.$/;"	m	class:__anon488::BLInstrumentationNode	file:
_strong_alias	ExecutionEngine/IntelJITEvents/ittnotify_config.h	196;"	d
_system_error_category	Support/system_error.cpp	/^class _system_error_category : public _do_message {$/;"	c	namespace:llvm	file:
_treeEdges	Transforms/Instrumentation/PathProfiling.cpp	/^  BLEdgeVector _treeEdges; \/\/ All edges in the spanning tree.$/;"	m	class:__anon488::BLInstrumentationDag	file:
aTReg	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  unsigned aTReg;$/;"	m	class:__anon421::MipsAssemblerOptions	file:
abortIfBroken	VMCore/Verifier.cpp	/^    bool abortIfBroken() {$/;"	f	struct:__anon610::Verifier
accumulateGEPOffset	Analysis/InlineCost.cpp	/^bool CallAnalyzer::accumulateGEPOffset(GEPOperator &GEP, APInt &Offset) {$/;"	f	class:CallAnalyzer
accumulateGEPOffset	Analysis/InstructionSimplify.cpp	/^static bool accumulateGEPOffset(const DataLayout &TD, GEPOperator *GEP,$/;"	f	file:
accumulateGEPOffsets	Transforms/Scalar/SROA.cpp	/^static bool accumulateGEPOffsets(const DataLayout &TD, GEPOperator &GEP,$/;"	f	file:
accumulateSROACost	Analysis/InlineCost.cpp	/^void CallAnalyzer::accumulateSROACost(DenseMap<Value *, int>::iterator CostIt,$/;"	f	class:CallAnalyzer
acquire	Support/Mutex.cpp	/^bool MutexImpl::acquire() { return true; }$/;"	f	class:llvm::MutexImpl
action	VMCore/Verifier.cpp	/^    VerifierFailureAction action;$/;"	m	struct:__anon610::Verifier	file:
action_flag	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    uint32_t action_flag;$/;"	m	struct:jit_descriptor	file:
activate	CodeGen/SpillPlacement.cpp	/^void SpillPlacement::activate(unsigned n) {$/;"	f	class:SpillPlacement
add	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::add(Instruction *I) {$/;"	f	class:AliasSetTracker
add	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::add(LoadInst *LI) {$/;"	f	class:AliasSetTracker
add	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::add(StoreInst *SI) {$/;"	f	class:AliasSetTracker
add	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::add(VAArgInst *VAAI) {$/;"	f	class:AliasSetTracker
add	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::add(Value *Ptr, uint64_t Size, const MDNode *TBAAInfo) {$/;"	f	class:AliasSetTracker
add	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::add(BasicBlock &BB) {$/;"	f	class:AliasSetTracker
add	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::add(const AliasSetTracker &AST) {$/;"	f	class:AliasSetTracker
add	CodeGen/SelectionDAG/SDNodeOrdering.h	/^  void add(const SDNode *Node, unsigned O) {$/;"	f	class:llvm::SDNodeOrdering
add	ExecutionEngine/Interpreter/Interpreter.h	/^  void add(void *mem) { Allocations.push_back(mem); }$/;"	f	class:llvm::AllocaHolder
add	ExecutionEngine/Interpreter/Interpreter.h	/^  void add(void *mem) { H->add(mem); }$/;"	f	class:llvm::AllocaHolderHandle
add	Support/APFloat.cpp	/^APFloat::add(const APFloat &rhs, roundingMode rounding_mode)$/;"	f	class:APFloat
add	Support/APInt.cpp	/^static bool add(uint64_t *dest, const uint64_t *x, const uint64_t *y,$/;"	f	file:
add	Support/ConstantRange.cpp	/^ConstantRange::add(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
add	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    add$/;"	e	enum:llvm::ARM_AM::AddrOpc
add	Transforms/Scalar/GVN.cpp	/^void ValueTable::add(Value *V, uint32_t num) {$/;"	f	class:ValueTable
add	Transforms/Scalar/LoopStrengthReduce.cpp	/^  void add(const IVInc &X) { Incs.push_back(X); }$/;"	f	struct:__anon518::IVChain
add	VMCore/PassManager.cpp	/^  void add(Pass *P) {$/;"	f	class:llvm::FunctionPassManagerImpl
add	VMCore/PassManager.cpp	/^  void add(Pass *P) {$/;"	f	class:llvm::PassManagerImpl
add	VMCore/PassManager.cpp	/^void FunctionPassManager::add(Pass *P) {$/;"	f	class:FunctionPassManager
add	VMCore/PassManager.cpp	/^void PMDataManager::add(Pass *P, bool ProcessAnalysis) {$/;"	f	class:PMDataManager
add	VMCore/PassManager.cpp	/^void PassManager::add(Pass *P) {$/;"	f	class:PassManager
addAM2OffsetImmOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addAM2OffsetImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addAM3OffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addAM3OffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addARMSOImmNegOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addARMSOImmNegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addARMSOImmNotOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addARMSOImmNotOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addAbsMemOperands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addAbsMemOperands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addAccelName	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  void addAccelName(StringRef Name, DIE *Die) {$/;"	f	class:llvm::CompileUnit
addAccelNamespace	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  void addAccelNamespace(StringRef Name, DIE *Die) {$/;"	f	class:llvm::CompileUnit
addAccelObjC	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  void addAccelObjC(StringRef Name, DIE *Die) {$/;"	f	class:llvm::CompileUnit
addAccelType	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  void addAccelType(StringRef Name, std::pair<DIE *, unsigned> Die) {$/;"	f	class:llvm::CompileUnit
addAddrMode2Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addAddrMode2Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addAddrMode3Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addAddrMode3Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addAddrMode5Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addAddrMode5Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addAddress	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addAddress(DIE *Die, unsigned Attribute,$/;"	f	class:CompileUnit
addAdrLabelOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addAdrLabelOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addAlignedMemoryOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addAlignedMemoryOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addAlignmentAttr	VMCore/Attributes.cpp	/^AttrBuilder &AttrBuilder::addAlignmentAttr(unsigned Align) {$/;"	f	class:AttrBuilder
addAllocaAdjustInst	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  void addAllocaAdjustInst(MachineInstr* MI) {$/;"	f	class:llvm::HexagonMachineFunctionInfo
addArgument	Support/CommandLine.cpp	/^void Option::addArgument() {$/;"	f	class:Option
addAtExitHandler	ExecutionEngine/Interpreter/Interpreter.h	/^  void addAtExitHandler(Function *F) {$/;"	f	class:llvm::Interpreter
addAttr	VMCore/Attributes.cpp	/^AttrListPtr AttrListPtr::addAttr(LLVMContext &C, unsigned Idx,$/;"	f	class:AttrListPtr
addAttr	VMCore/Function.cpp	/^void Argument::addAttr(Attributes attr) {$/;"	f	class:Argument
addAttribute	VMCore/Attributes.cpp	/^AttrBuilder &AttrBuilder::addAttribute(Attributes::AttrVal Val){$/;"	f	class:AttrBuilder
addAttribute	VMCore/Function.cpp	/^void Function::addAttribute(unsigned i, Attributes attr) {$/;"	f	class:Function
addAttribute	VMCore/Instructions.cpp	/^void CallInst::addAttribute(unsigned i, Attributes attr) {$/;"	f	class:CallInst
addAttribute	VMCore/Instructions.cpp	/^void InvokeInst::addAttribute(unsigned i, Attributes attr) {$/;"	f	class:InvokeInst
addAttributes	VMCore/Attributes.cpp	/^AttrBuilder &AttrBuilder::addAttributes(const Attributes &A) {$/;"	f	class:AttrBuilder
addBackedge	Analysis/PathNumbering.cpp	/^void BallLarusDag::addBackedge(BallLarusNode* source, BallLarusNode* target,$/;"	f	class:BallLarusDag
addBias	CodeGen/SpillPlacement.cpp	/^  void addBias(float w, bool out) {$/;"	f	struct:SpillPlacement::Node
addBitfieldOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addBitfieldOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addBlock	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addBlock(DIE *Die, unsigned Attribute, unsigned Form,$/;"	f	class:CompileUnit
addBlockByrefAddress	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addBlockByrefAddress(DbgVariable *&DV, DIE *Die,$/;"	f	class:CompileUnit
addBlockPlacement	CodeGen/Passes.cpp	/^void TargetPassConfig::addBlockPlacement() {$/;"	f	class:TargetPassConfig
addBytes	Target/NVPTX/NVPTXAsmPrinter.h	/^    unsigned addBytes(unsigned char *Ptr, int Num, int Bytes) {$/;"	f	class:llvm::NVPTXAsmPrinter::AggBuffer
addCCOutOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addCCOutOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addCase	VMCore/Instructions.cpp	/^void SwitchInst::addCase(ConstantInt *OnVal, BasicBlock *Dest) {$/;"	f	class:SwitchInst
addCase	VMCore/Instructions.cpp	/^void SwitchInst::addCase(IntegersSubset& OnVal, BasicBlock *Dest) {$/;"	f	class:SwitchInst
addCatchTypeInfo	CodeGen/MachineModuleInfo.cpp	/^addCatchTypeInfo(MachineBasicBlock *LandingPad,$/;"	f	class:MachineModuleInfo
addChainDependency	CodeGen/ScheduleDAGInstrs.cpp	/^void addChainDependency (AliasAnalysis *AA, const MachineFrameInfo *MFI,$/;"	f	file:
addChild	CodeGen/AsmPrinter/DIE.h	/^    void addChild(DIE *Child) {$/;"	f	class:llvm::DIE
addClause	VMCore/Instructions.cpp	/^void LandingPadInst::addClause(Value *Val) {$/;"	f	class:LandingPadInst
addCleanup	CodeGen/MachineModuleInfo.cpp	/^void MachineModuleInfo::addCleanup(MachineBasicBlock *LandingPad) {$/;"	f	class:MachineModuleInfo
addCodeEmitter	Target/ARM/ARMTargetMachine.cpp	/^bool ARMBaseTargetMachine::addCodeEmitter(PassManagerBase &PM,$/;"	f	class:ARMBaseTargetMachine
addCodeEmitter	Target/Mips/MipsTargetMachine.cpp	/^bool MipsTargetMachine::addCodeEmitter(PassManagerBase &PM,$/;"	f	class:MipsTargetMachine
addCodeEmitter	Target/PowerPC/PPCTargetMachine.cpp	/^bool PPCTargetMachine::addCodeEmitter(PassManagerBase &PM,$/;"	f	class:PPCTargetMachine
addCodeEmitter	Target/X86/X86TargetMachine.cpp	/^bool X86TargetMachine::addCodeEmitter(PassManagerBase &PM,$/;"	f	class:X86TargetMachine
addCompileUnit	VMCore/DebugInfo.cpp	/^bool DebugInfoFinder::addCompileUnit(DICompileUnit CU) {$/;"	f	class:DebugInfoFinder
addComplexAddress	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addComplexAddress(DbgVariable *&DV, DIE *Die,$/;"	f	class:CompileUnit
addCondCodeOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addCondCodeOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addConstantFPValue	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^bool CompileUnit::addConstantFPValue(DIE *Die, const MachineOperand &MO) {$/;"	f	class:CompileUnit
addConstantPoolEntryAddr	Target/ARM/ARMJITInfo.h	/^    void addConstantPoolEntryAddr(unsigned CPI, intptr_t Addr) {$/;"	f	class:llvm::ARMJITInfo
addConstantPoolReference	Target/X86/X86InstrBuilder.h	/^addConstantPoolReference(const MachineInstrBuilder &MIB, unsigned CPI,$/;"	f	namespace:llvm
addConstantValue	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^bool CompileUnit::addConstantValue(DIE *Die, const ConstantInt *CI,$/;"	f	class:CompileUnit
addConstantValue	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^bool CompileUnit::addConstantValue(DIE *Die, const MachineOperand &MO,$/;"	f	class:CompileUnit
addConstraints	CodeGen/SpillPlacement.cpp	/^void SpillPlacement::addConstraints(ArrayRef<BlockConstraint> LiveBlocks) {$/;"	f	class:SpillPlacement
addCoprocNumOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addCoprocNumOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addCoprocOptionOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addCoprocOptionOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addCoprocRegOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addCoprocRegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addCurrentFnArgument	CodeGen/AsmPrinter/DwarfDebug.cpp	/^bool DwarfDebug::addCurrentFnArgument(const MachineFunction *MF,$/;"	f	class:DwarfDebug
addCustomGraphFeatures	Analysis/RegionPrinter.cpp	/^  static void addCustomGraphFeatures(const RegionInfo* RI,$/;"	f	struct:llvm::DOTGraphTraits
addCustomGraphFeatures	CodeGen/ScheduleDAGPrinter.cpp	/^    static void addCustomGraphFeatures(ScheduleDAG *G,$/;"	f	struct:llvm::DOTGraphTraits
addCustomGraphFeatures	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static void addCustomGraphFeatures(SelectionDAG *G,$/;"	f	struct:llvm::DOTGraphTraits
addDIE	DebugInfo/DWARFCompileUnit.h	/^  void addDIE(DWARFDebugInfoEntryMinimal &die) {$/;"	f	class:llvm::DWARFCompileUnit
addDIEEntry	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addDIEEntry(DIE *Die, unsigned Attribute, unsigned Form,$/;"	f	class:CompileUnit
addDPRCalleeSavedAreaFrame	Target/ARM/ARMMachineFunctionInfo.h	/^  void addDPRCalleeSavedAreaFrame(int fi) {$/;"	f	class:llvm::ARMFunctionInfo
addDPRRegListOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addDPRRegListOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addDRTypeForNEON	Target/ARM/ARMISelLowering.cpp	/^void ARMTargetLowering::addDRTypeForNEON(MVT VT) {$/;"	f	class:ARMTargetLowering
addData	MC/MCAtom.cpp	/^void MCAtom::addData(const MCData &D) {$/;"	f	class:MCAtom
addDef	CodeGen/LiveDebugVariables.cpp	/^  void addDef(SlotIndex Idx, const MachineOperand &LocMO) {$/;"	f	class:__anon152::UserValue
addDefsFromCopies	CodeGen/LiveDebugVariables.cpp	/^UserValue::addDefsFromCopies(LiveInterval *LI, unsigned LocNo,$/;"	f	class:UserValue
addDelta	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addDelta(DIE *Die, unsigned Attribute, unsigned Form,$/;"	f	class:CompileUnit
addDestination	VMCore/Instructions.cpp	/^void IndirectBrInst::addDestination(BasicBlock *DestBB) {$/;"	f	class:IndirectBrInst
addDie	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  void addDie(DIE *Buffer) {$/;"	f	class:llvm::CompileUnit
addDirectMem	Target/X86/X86InstrBuilder.h	/^addDirectMem(const MachineInstrBuilder &MIB, unsigned Reg) {$/;"	f	namespace:llvm
addDomain	CodeGen/ExecutionDepsFix.cpp	/^  void addDomain(unsigned domain) {$/;"	f	struct:__anon118::DomainValue
addEdge	Analysis/PathNumbering.cpp	/^BallLarusEdge* BallLarusDag::addEdge(BallLarusNode* source,$/;"	f	class:BallLarusDag
addEdge	Transforms/Instrumentation/GCOVProfiling.cpp	/^    void addEdge(GCOVBlock &Successor) {$/;"	f	class:__anon490::GCOVBlock
addEdgeWeight	Analysis/ProfileInfo.cpp	/^void ProfileInfoT<Function,BasicBlock>::addEdgeWeight(Edge e, double w) {$/;"	f	class:llvm::ProfileInfoT
addEscapingUse	Analysis/AliasAnalysis.cpp	/^void AliasAnalysis::addEscapingUse(Use &U) {$/;"	f	class:AliasAnalysis
addEscapingUse	Analysis/IPA/GlobalsModRef.cpp	/^void GlobalsModRef::addEscapingUse(Use &U) {$/;"	f	class:GlobalsModRef
addEscapingUse	Analysis/NoAliasAnalysis.cpp	/^    virtual void addEscapingUse(Use &U) {}$/;"	f	struct:__anon42::NoAA
addExecutionCount	Analysis/ProfileInfo.cpp	/^        addExecutionCount(const BasicBlock *BB, double w) {$/;"	f	class:llvm::ProfileInfoT
addExpr	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addExpr(MCInst &Inst, const MCExpr *Expr) const {$/;"	f	class:__anon261::ARMOperand
addExpr	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  void addExpr(MCInst &Inst, const MCExpr *Expr) const {$/;"	f	struct:__anon446::MBlazeOperand
addExpr	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  void addExpr(MCInst &Inst, const MCExpr *Expr) const{$/;"	f	class:__anon423::MipsOperand
addExpr	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addExpr(MCInst &Inst, const MCExpr *Expr) const {$/;"	f	struct:__anon336::X86Operand
addExtension	Transforms/IPO/PassManagerBuilder.cpp	/^void PassManagerBuilder::addExtension(ExtensionPointTy Ty, ExtensionFn Fn) {$/;"	f	class:PassManagerBuilder
addExtensionsToPM	Transforms/IPO/PassManagerBuilder.cpp	/^void PassManagerBuilder::addExtensionsToPM(ExtensionPointTy ETy,$/;"	f	class:PassManagerBuilder
addExternalFunction	Target/X86/X86COFFMachineModuleInfo.h	/^  void addExternalFunction(MCSymbol* Symbol) {$/;"	f	class:llvm::X86COFFMachineModuleInfo
addFBits16Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addFBits16Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addFBits32Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addFBits32Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addFPImmOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addFPImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addFastRegAlloc	CodeGen/Passes.cpp	/^void TargetPassConfig::addFastRegAlloc(FunctionPass *RegAllocPass) {$/;"	f	class:TargetPassConfig
addFileBefore	Archive/ArchiveWriter.cpp	/^Archive::addFileBefore(const sys::Path& filePath, iterator where,$/;"	f	class:Archive
addFilterTypeInfo	CodeGen/MachineModuleInfo.cpp	/^addFilterTypeInfo(MachineBasicBlock *LandingPad,$/;"	f	class:MachineModuleInfo
addFlag	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addFlag(DIE *Die, unsigned Attribute) {$/;"	f	class:CompileUnit
addFrameReference	Target/CellSPU/SPUInstrBuilder.h	/^addFrameReference(const MachineInstrBuilder &MIB, int FI, int Offset = 0,$/;"	f	namespace:llvm
addFrameReference	Target/PowerPC/PPCInstrBuilder.h	/^addFrameReference(const MachineInstrBuilder &MIB, int FI, int Offset = 0,$/;"	f	namespace:llvm
addFrameReference	Target/X86/X86InstrBuilder.h	/^addFrameReference(const MachineInstrBuilder &MIB, int FI, int Offset = 0) {$/;"	f	namespace:llvm
addFslOperands	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  void addFslOperands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon446::MBlazeOperand
addFullAddress	Target/X86/X86InstrBuilder.h	/^addFullAddress(const MachineInstrBuilder &MIB,$/;"	f	namespace:llvm
addGPRCalleeSavedArea1Frame	Target/ARM/ARMMachineFunctionInfo.h	/^  void addGPRCalleeSavedArea1Frame(int fi) {$/;"	f	class:llvm::ARMFunctionInfo
addGPRCalleeSavedArea2Frame	Target/ARM/ARMMachineFunctionInfo.h	/^  void addGPRCalleeSavedArea2Frame(int fi) {$/;"	f	class:llvm::ARMFunctionInfo
addGarbage	VMCore/LeaksContext.h	/^  void addGarbage(const T* o) {$/;"	f	struct:llvm::LeakDetectorImpl
addGarbageObjectImpl	VMCore/LeakDetector.cpp	/^void LeakDetector::addGarbageObjectImpl(const Value *Object) {$/;"	f	class:LeakDetector
addGarbageObjectImpl	VMCore/LeakDetector.cpp	/^void LeakDetector::addGarbageObjectImpl(void *Object) {$/;"	f	class:LeakDetector
addGlobalExtension	Transforms/IPO/PassManagerBuilder.cpp	/^void PassManagerBuilder::addGlobalExtension($/;"	f	class:PassManagerBuilder
addGlobalMapping	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::addGlobalMapping(const GlobalValue *GV, void *Addr) {$/;"	f	class:ExecutionEngine
addGlobalType	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addGlobalType(DIType Ty) {$/;"	f	class:CompileUnit
addGlobalVariable	VMCore/DebugInfo.cpp	/^bool DebugInfoFinder::addGlobalVariable(DIGlobalVariable DIG) {$/;"	f	class:DebugInfoFinder
addIRPasses	CodeGen/Passes.cpp	/^void TargetPassConfig::addIRPasses() {$/;"	f	class:TargetPassConfig
addISelPrepare	CodeGen/Passes.cpp	/^void TargetPassConfig::addISelPrepare() {$/;"	f	class:TargetPassConfig
addITCondCodeOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addITCondCodeOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addITMaskOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addITMaskOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImm0_1020s4Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addImm0_1020s4Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImm0_4095NegOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addImm0_4095NegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImm0_508s4NegOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addImm0_508s4NegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImm0_508s4Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addImm0_508s4Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImm1_16Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addImm1_16Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImm1_32Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addImm1_32Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImm8s4Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addImm8s4Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImmOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImmOperands	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  void addImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon446::MBlazeOperand
addImmOperands	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  void addImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon423::MipsOperand
addImmOperands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addImmThumbSROperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addImmThumbSROperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addImplicitDefUseOperands	CodeGen/MachineInstr.cpp	/^void MachineInstr::addImplicitDefUseOperands() {$/;"	f	class:MachineInstr
addIncomingPHIValuesFor	Transforms/Utils/InlineFunction.cpp	/^    void addIncomingPHIValuesFor(BasicBlock *BB) const {$/;"	f	class:__anon468::InvokeInliningInfo
addIncomingPHIValuesForInto	Transforms/Utils/InlineFunction.cpp	/^    void addIncomingPHIValuesForInto(BasicBlock *src, BasicBlock *dest) const {$/;"	f	class:__anon468::InvokeInliningInfo
addIndirectSymAddr	Target/ARM/ARMJITInfo.h	/^    void addIndirectSymAddr(void *SymAddr, intptr_t IndSymAddr) {$/;"	f	class:llvm::ARMJITInfo
addInitialAliasAnalysisPasses	Transforms/IPO/PassManagerBuilder.cpp	/^PassManagerBuilder::addInitialAliasAnalysisPasses(PassManagerBase &PM) const {$/;"	f	class:PassManagerBuilder
addInst	MC/MCAtom.cpp	/^void MCAtom::addInst(const MCInst &I, uint64_t Address, unsigned Size) {$/;"	f	class:MCAtom
addInst	Transforms/Scalar/MemCpyOptimizer.cpp	/^  void addInst(int64_t OffsetFromFirst, Instruction *Inst) {$/;"	f	class:__anon574::MemsetRanges
addInstSelector	Target/ARM/ARMTargetMachine.cpp	/^bool ARMPassConfig::addInstSelector() {$/;"	f	class:ARMPassConfig
addInstSelector	Target/CellSPU/SPUTargetMachine.cpp	/^bool SPUPassConfig::addInstSelector() {$/;"	f	class:SPUPassConfig
addInstSelector	Target/Hexagon/HexagonTargetMachine.cpp	/^bool HexagonPassConfig::addInstSelector() {$/;"	f	class:HexagonPassConfig
addInstSelector	Target/MBlaze/MBlazeTargetMachine.cpp	/^bool MBlazePassConfig::addInstSelector() {$/;"	f	class:MBlazePassConfig
addInstSelector	Target/MSP430/MSP430TargetMachine.cpp	/^bool MSP430PassConfig::addInstSelector() {$/;"	f	class:MSP430PassConfig
addInstSelector	Target/Mips/MipsTargetMachine.cpp	/^bool MipsPassConfig::addInstSelector() {$/;"	f	class:MipsPassConfig
addInstSelector	Target/NVPTX/NVPTXTargetMachine.cpp	/^bool NVPTXPassConfig::addInstSelector() {$/;"	f	class:NVPTXPassConfig
addInstSelector	Target/PowerPC/PPCTargetMachine.cpp	/^bool PPCPassConfig::addInstSelector() {$/;"	f	class:PPCPassConfig
addInstSelector	Target/Sparc/SparcTargetMachine.cpp	/^bool SparcPassConfig::addInstSelector() {$/;"	f	class:SparcPassConfig
addInstSelector	Target/X86/X86TargetMachine.cpp	/^bool X86PassConfig::addInstSelector() {$/;"	f	class:X86PassConfig
addInstSelector	Target/XCore/XCoreTargetMachine.cpp	/^bool XCorePassConfig::addInstSelector() {$/;"	f	class:XCorePassConfig
addInterferenceCosts	CodeGen/RegAllocPBQP.cpp	/^void PBQPBuilder::addInterferenceCosts($/;"	f	class:PBQPBuilder
addIntervalToPartition	Analysis/IntervalPartition.cpp	/^void IntervalPartition::addIntervalToPartition(Interval *I) {$/;"	f	class:IntervalPartition
addInvoke	CodeGen/MachineModuleInfo.cpp	/^void MachineModuleInfo::addInvoke(MachineBasicBlock *LandingPad,$/;"	f	class:MachineModuleInfo
addJumpTableBaseAddr	Target/ARM/ARMJITInfo.h	/^    void addJumpTableBaseAddr(unsigned JTI, intptr_t Addr) {$/;"	f	class:llvm::ARMJITInfo
addKillFlag	CodeGen/RegAllocFast.cpp	/^void RAFast::addKillFlag(const LiveReg &LR) {$/;"	f	class:RAFast
addKillFlags	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::addKillFlags(const VirtRegMap *VRM) {$/;"	f	class:LiveIntervals
addLabel	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addLabel(DIE *Die, unsigned Attribute, unsigned Form,$/;"	f	class:CompileUnit
addLandingPad	CodeGen/MachineModuleInfo.cpp	/^MCSymbol *MachineModuleInfo::addLandingPad(MachineBasicBlock *LandingPad) {$/;"	f	class:MachineModuleInfo
addLegalFPImmediate	Target/X86/X86ISelLowering.h	/^    void addLegalFPImmediate(const APFloat& Imm) {$/;"	f	class:llvm::X86TargetLowering
addLibrary	VMCore/Module.cpp	/^void Module::addLibrary(StringRef Lib) {$/;"	f	class:Module
addLine	Transforms/Instrumentation/GCOVProfiling.cpp	/^    void addLine(uint32_t Line) {$/;"	f	class:__anon490::GCOVLines
addLine	VMCore/GCOV.cpp	/^void GCOVBlock::addLine(StringRef Filename, uint32_t LineNo) {$/;"	f	class:GCOVBlock
addLineCount	VMCore/GCOV.cpp	/^void FileInfo::addLineCount(StringRef Filename, uint32_t Line, uint32_t Count) {$/;"	f	class:FileInfo
addLink	CodeGen/SpillPlacement.cpp	/^  void addLink(unsigned b, float w, bool out) {$/;"	f	struct:SpillPlacement::Node
addLinks	CodeGen/SpillPlacement.cpp	/^void SpillPlacement::addLinks(ArrayRef<unsigned> Links) {$/;"	f	class:SpillPlacement
addLiveIn	CodeGen/MachineFunction.cpp	/^unsigned MachineFunction::addLiveIn(unsigned PReg,$/;"	f	class:MachineFunction
addLiveInBlock	CodeGen/LiveRangeCalc.h	/^  void addLiveInBlock(LiveInterval *LI,$/;"	f	class:llvm::LiveRangeCalc
addLiveIns	CodeGen/MachineTraceMetrics.cpp	/^addLiveIns(const MachineInstr *DefMI, unsigned DefOp,$/;"	f	class:MachineTraceMetrics::Ensemble
addLiveRangeToEndOfBlock	CodeGen/LiveIntervalAnalysis.cpp	/^LiveRange LiveIntervals::addLiveRangeToEndOfBlock(unsigned reg,$/;"	f	class:LiveIntervals
addLiveRegs	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::addLiveRegs(ArrayRef<unsigned> Regs) {$/;"	f	class:RegPressureTracker
addLoc	Target/Hexagon/HexagonCallingConvLower.h	/^  void addLoc(const CCValAssign &V) {$/;"	f	class:llvm::Hexagon_CCState
addLoopIntoQueue	Analysis/LoopPass.cpp	/^static void addLoopIntoQueue(Loop *L, std::deque<Loop *> &LQ) {$/;"	f	file:
addLowerLevelRequiredPass	VMCore/PassManager.cpp	/^void MPPassManager::addLowerLevelRequiredPass(Pass *P, Pass *RequiredPass) {$/;"	f	class:MPPassManager
addLowerLevelRequiredPass	VMCore/PassManager.cpp	/^void PMDataManager::addLowerLevelRequiredPass(Pass *P, Pass *RequiredPass) {$/;"	f	class:PMDataManager
addMBBLiveIns	CodeGen/VirtRegMap.cpp	/^void VirtRegRewriter::addMBBLiveIns() {$/;"	f	class:VirtRegRewriter
addMSRMaskOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMSRMaskOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMachineLateOptimization	CodeGen/Passes.cpp	/^void TargetPassConfig::addMachineLateOptimization() {$/;"	f	class:TargetPassConfig
addMachinePasses	CodeGen/Passes.cpp	/^void TargetPassConfig::addMachinePasses() {$/;"	f	class:TargetPassConfig
addMachineSSAOptimization	CodeGen/Passes.cpp	/^void TargetPassConfig::addMachineSSAOptimization() {$/;"	f	class:TargetPassConfig
addMem128Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMem128Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMem16Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMem16Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMem256Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMem256Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMem32Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMem32Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMem64Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMem64Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMem80Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMem80Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMem8Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMem8Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMemBarrierOptOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemBarrierOptOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemImm0_1020s4OffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemImm0_1020s4OffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemImm12OffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemImm12OffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemImm8OffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemImm8OffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemImm8s4OffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemImm8s4OffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemNegImm8OffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemNegImm8OffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemNoOffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemNoOffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemOperand	CodeGen/MachineInstr.cpp	/^void MachineInstr::addMemOperand(MachineFunction &MF,$/;"	f	class:MachineInstr
addMemOperands	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  void addMemOperands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon446::MBlazeOperand
addMemOperands	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  void addMemOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon423::MipsOperand
addMemOperands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMemOperands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMemPCRelImm12Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemPCRelImm12Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemPosImm8OffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemPosImm8OffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemRegOffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemRegOffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemSet	Transforms/Scalar/MemCpyOptimizer.cpp	/^  void addMemSet(int64_t OffsetFromFirst, MemSetInst *MSI) {$/;"	f	class:__anon574::MemsetRanges
addMemTBBOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemTBBOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemTBHOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemTBHOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemThumbRIs1Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemThumbRIs1Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemThumbRIs2Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemThumbRIs2Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemThumbRIs4Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemThumbRIs4Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemThumbRROperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemThumbRROperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemThumbSPIOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemThumbSPIOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemUImm12OffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addMemUImm12OffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addMemVX32Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMemVX32Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMemVX64Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMemVX64Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMemVY32Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMemVY32Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addMemVY64Operands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addMemVY64Operands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addModule	ExecutionEngine/JIT/JIT.cpp	/^void JIT::addModule(Module *M) {$/;"	f	class:JIT
addModule	VMCore/LLVMContext.cpp	/^void LLVMContext::addModule(Module *M) {$/;"	f	class:LLVMContext
addModuleFlag	VMCore/Module.cpp	/^void Module::addModuleFlag(MDNode *Node) {$/;"	f	class:Module
addModuleFlag	VMCore/Module.cpp	/^void Module::addModuleFlag(ModFlagBehavior Behavior, StringRef Key,$/;"	f	class:Module
addNEONi16splatOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addNEONi16splatOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addNEONi32splatOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addNEONi32splatOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addNEONi32vmovNegOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addNEONi32vmovNegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addNEONi32vmovOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addNEONi32vmovOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addNEONi64splatOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addNEONi64splatOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addNEONi8splatOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addNEONi8splatOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addNewBlock	CodeGen/LiveVariables.cpp	/^void LiveVariables::addNewBlock(MachineBasicBlock *BB,$/;"	f	class:LiveVariables
addNode	Analysis/PathNumbering.cpp	/^BallLarusNode* BallLarusDag::addNode(BasicBlock* BB) {$/;"	f	class:BallLarusDag
addNode	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void RegReductionPQBase::addNode(const SUnit *SU) {$/;"	f	class:RegReductionPQBase
addNodeToList	CodeGen/MachineBasicBlock.cpp	/^void ilist_traits<MachineBasicBlock>::addNodeToList(MachineBasicBlock *N) {$/;"	f	class:ilist_traits
addNodeToList	CodeGen/MachineBasicBlock.cpp	/^void ilist_traits<MachineInstr>::addNodeToList(MachineInstr *N) {$/;"	f	class:ilist_traits
addNodeToList	Support/YAMLParser.cpp	/^  void addNodeToList(Token *) {}$/;"	f	struct:llvm::ilist_node_traits
addNodeToList	VMCore/SymbolTableListTraitsImpl.h	/^::addNodeToList(ValueSubClass *V) {$/;"	f	class:llvm::SymbolTableListTraits
addOccurrence	Support/CommandLine.cpp	/^bool Option::addOccurrence(unsigned pos, StringRef ArgName,$/;"	f	class:Option
addOffset	Target/X86/X86InstrBuilder.h	/^addOffset(const MachineInstrBuilder &MIB, int Offset) {$/;"	f	namespace:llvm
addOperand	CodeGen/MachineInstr.cpp	/^void MachineInstr::addOperand(const MachineOperand &Op) {$/;"	f	class:MachineInstr
addOperand	VMCore/Metadata.cpp	/^void NamedMDNode::addOperand(MDNode *M) {$/;"	f	class:NamedMDNode
addOptimizedRegAlloc	CodeGen/Passes.cpp	/^void TargetPassConfig::addOptimizedRegAlloc(FunctionPass *RegAllocPass) {$/;"	f	class:TargetPassConfig
addOrSubtract	Support/APFloat.cpp	/^APFloat::addOrSubtract(const APFloat &rhs, roundingMode rounding_mode,$/;"	f	class:APFloat
addOrSubtractSignificand	Support/APFloat.cpp	/^APFloat::addOrSubtractSignificand(const APFloat &rhs, bool subtract)$/;"	f	class:APFloat
addOrSubtractSpecials	Support/APFloat.cpp	/^APFloat::addOrSubtractSpecials(const APFloat &rhs, bool subtract)$/;"	f	class:APFloat
addPCLabel	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::addPCLabel(unsigned LabelID) {$/;"	f	class:ARMCodeEmitter
addPCLabelAddr	Target/ARM/ARMJITInfo.h	/^    void addPCLabelAddr(unsigned Id, intptr_t Addr) {$/;"	f	class:llvm::ARMJITInfo
addPKHASRImmOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addPKHASRImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addPass	CodeGen/Passes.cpp	/^AnalysisID TargetPassConfig::addPass(AnalysisID PassID) {$/;"	f	class:TargetPassConfig
addPass	CodeGen/Passes.cpp	/^void TargetPassConfig::addPass(Pass *P) {$/;"	f	class:TargetPassConfig
addPassed	CodeGen/MachineVerifier.cpp	/^      bool addPassed(const RegSet &RS) {$/;"	f	struct:__anon139::MachineVerifier::BBInfo
addPassed	CodeGen/MachineVerifier.cpp	/^      bool addPassed(unsigned Reg) {$/;"	f	struct:__anon139::MachineVerifier::BBInfo
addPassesForOptimizations	Target/Hexagon/HexagonTargetMachine.cpp	/^bool HexagonTargetMachine::addPassesForOptimizations(PassManagerBase &PM) {$/;"	f	class:HexagonTargetMachine
addPassesToEmitFile	CodeGen/LLVMTargetMachine.cpp	/^bool LLVMTargetMachine::addPassesToEmitFile(PassManagerBase &PM,$/;"	f	class:LLVMTargetMachine
addPassesToEmitFile	Target/CppBackend/CPPBackend.cpp	/^bool CPPTargetMachine::addPassesToEmitFile(PassManagerBase &PM,$/;"	f	class:CPPTargetMachine
addPassesToEmitMC	CodeGen/LLVMTargetMachine.cpp	/^bool LLVMTargetMachine::addPassesToEmitMC(PassManagerBase &PM,$/;"	f	class:LLVMTargetMachine
addPassesToEmitMC	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual bool addPassesToEmitMC(PassManagerBase &,$/;"	f	class:llvm::NVPTXTargetMachine
addPassesToEmitMachineCode	CodeGen/LLVMTargetMachine.cpp	/^bool LLVMTargetMachine::addPassesToEmitMachineCode(PassManagerBase &PM,$/;"	f	class:LLVMTargetMachine
addPassesToEmitMachineCode	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual bool addPassesToEmitMachineCode(PassManagerBase &,$/;"	f	class:llvm::NVPTXTargetMachine
addPassesToGenerateCode	CodeGen/LLVMTargetMachine.cpp	/^static MCContext *addPassesToGenerateCode(LLVMTargetMachine *TM,$/;"	f	file:
addPassesToHandleExceptions	CodeGen/Passes.cpp	/^void TargetPassConfig::addPassesToHandleExceptions() {$/;"	f	class:TargetPassConfig
addPath	Linker/Linker.cpp	/^Linker::addPath(const sys::Path& path) {$/;"	f	class:Linker
addPaths	Linker/Linker.cpp	/^Linker::addPaths(const std::vector<std::string>& paths) {$/;"	f	class:Linker
addPendingFunction	ExecutionEngine/JIT/JIT.cpp	/^void JIT::addPendingFunction(Function *F) {$/;"	f	class:JIT
addPersonality	CodeGen/MachineModuleInfo.cpp	/^void MachineModuleInfo::addPersonality(MachineBasicBlock *LandingPad,$/;"	f	class:MachineModuleInfo
addPhysRegCoalesce	CodeGen/RegAllocPBQP.cpp	/^void PBQPBuilderWithCoalescing::addPhysRegCoalesce(PBQP::Vector &costVec,$/;"	f	class:PBQPBuilderWithCoalescing
addPhysRegDataDeps	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::addPhysRegDataDeps(SUnit *SU, unsigned OperIdx) {$/;"	f	class:ScheduleDAGInstrs
addPhysRegDeps	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::addPhysRegDeps(SUnit *SU, unsigned OperIdx) {$/;"	f	class:ScheduleDAGInstrs
addPointer	Analysis/AliasSetTracker.cpp	/^void AliasSet::addPointer(AliasSetTracker &AST, PointerRec &Entry,$/;"	f	class:AliasSet
addPointerToBasicBlock	ExecutionEngine/JIT/JIT.cpp	/^void JIT::addPointerToBasicBlock(const BasicBlock *BB, void *Addr) {$/;"	f	class:JIT
addPostIdxImm8Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addPostIdxImm8Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addPostIdxImm8s4Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addPostIdxImm8s4Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addPostIdxRegOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addPostIdxRegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addPostIdxRegShiftedOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addPostIdxRegShiftedOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addPostRegAlloc	Target/Hexagon/HexagonTargetMachine.cpp	/^bool HexagonPassConfig::addPostRegAlloc() {$/;"	f	class:HexagonPassConfig
addPostRegAlloc	Target/X86/X86TargetMachine.cpp	/^bool X86PassConfig::addPostRegAlloc() {$/;"	f	class:X86PassConfig
addPreEmitPass	Target/ARM/ARMTargetMachine.cpp	/^bool ARMPassConfig::addPreEmitPass() {$/;"	f	class:ARMPassConfig
addPreEmitPass	Target/CellSPU/SPUTargetMachine.cpp	/^bool SPUPassConfig::addPreEmitPass() {$/;"	f	class:SPUPassConfig
addPreEmitPass	Target/Hexagon/HexagonTargetMachine.cpp	/^bool HexagonPassConfig::addPreEmitPass() {$/;"	f	class:HexagonPassConfig
addPreEmitPass	Target/MBlaze/MBlazeTargetMachine.cpp	/^bool MBlazePassConfig::addPreEmitPass() {$/;"	f	class:MBlazePassConfig
addPreEmitPass	Target/MSP430/MSP430TargetMachine.cpp	/^bool MSP430PassConfig::addPreEmitPass() {$/;"	f	class:MSP430PassConfig
addPreEmitPass	Target/Mips/MipsTargetMachine.cpp	/^bool MipsPassConfig::addPreEmitPass() {$/;"	f	class:MipsPassConfig
addPreEmitPass	Target/PowerPC/PPCTargetMachine.cpp	/^bool PPCPassConfig::addPreEmitPass() {$/;"	f	class:PPCPassConfig
addPreEmitPass	Target/Sparc/SparcTargetMachine.cpp	/^bool SparcPassConfig::addPreEmitPass(){$/;"	f	class:SparcPassConfig
addPreEmitPass	Target/X86/X86TargetMachine.cpp	/^bool X86PassConfig::addPreEmitPass() {$/;"	f	class:X86PassConfig
addPreISel	Target/ARM/ARMTargetMachine.cpp	/^bool ARMPassConfig::addPreISel() {$/;"	f	class:ARMPassConfig
addPreRegAlloc	Target/ARM/ARMTargetMachine.cpp	/^bool ARMPassConfig::addPreRegAlloc() {$/;"	f	class:ARMPassConfig
addPreRegAlloc	Target/Hexagon/HexagonTargetMachine.cpp	/^bool HexagonPassConfig::addPreRegAlloc() {$/;"	f	class:HexagonPassConfig
addPreRegAlloc	Target/NVPTX/NVPTXTargetMachine.cpp	/^bool NVPTXPassConfig::addPreRegAlloc() {$/;"	f	class:NVPTXPassConfig
addPreRegAlloc	Target/PowerPC/PPCTargetMachine.cpp	/^bool PPCPassConfig::addPreRegAlloc() {$/;"	f	class:PPCPassConfig
addPreRegAlloc	Target/X86/X86TargetMachine.cpp	/^bool X86PassConfig::addPreRegAlloc() {$/;"	f	class:X86PassConfig
addPreSched2	Target/ARM/ARMTargetMachine.cpp	/^bool ARMPassConfig::addPreSched2() {$/;"	f	class:ARMPassConfig
addPreSched2	Target/Hexagon/HexagonTargetMachine.cpp	/^bool HexagonPassConfig::addPreSched2() {$/;"	f	class:HexagonPassConfig
addPred	CodeGen/ScheduleDAG.cpp	/^bool SUnit::addPred(const SDep &D) {$/;"	f	class:SUnit
addPred	Transforms/Scalar/ObjCARC.cpp	/^    void addPred(BasicBlock *Pred) { Preds.push_back(Pred); }$/;"	f	class:__anon507::BBState
addPredEdge	Analysis/PathNumbering.cpp	/^void BallLarusNode::addPredEdge(BallLarusEdge* edge) {$/;"	f	class:BallLarusNode
addPredecessor	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::addPredecessor(MachineBasicBlock *pred) {$/;"	f	class:MachineBasicBlock
addPrefSpill	CodeGen/SpillPlacement.cpp	/^void SpillPlacement::addPrefSpill(ArrayRef<unsigned> Blocks, bool Strong) {$/;"	f	class:SpillPlacement
addPreserved	VMCore/Pass.cpp	/^AnalysisUsage &AnalysisUsage::addPreserved(StringRef Arg) {$/;"	f	class:AnalysisUsage
addProcIFlagsOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addProcIFlagsOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addPubTypes	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addPubTypes(DISubprogram SP) {$/;"	f	class:CompileUnit
addQRTypeForNEON	Target/ARM/ARMISelLowering.cpp	/^void ARMTargetLowering::addQRTypeForNEON(MVT VT) {$/;"	f	class:ARMTargetLowering
addRange	Transforms/Scalar/MemCpyOptimizer.cpp	/^void MemsetRanges::addRange(int64_t Start, int64_t Size, Value *Ptr,$/;"	f	class:MemsetRanges
addRange	VMCore/Metadata.cpp	/^static void addRange(SmallVector<Value*, 4> &EndPoints, ConstantInt *Low,$/;"	f	file:
addRangeFrom	CodeGen/LiveInterval.cpp	/^LiveInterval::addRangeFrom(LiveRange LR, iterator From) {$/;"	f	class:LiveInterval
addRawValue	VMCore/Attributes.cpp	/^AttrBuilder &AttrBuilder::addRawValue(uint64_t Val) {$/;"	f	class:AttrBuilder
addRef	CodeGen/InterferenceCache.h	/^    void addRef(int Delta) { RefCount += Delta; }$/;"	f	class:llvm::InterferenceCache::Entry
addReg	CodeGen/StrongPHIElimination.cpp	/^void StrongPHIElimination::addReg(unsigned Reg) {$/;"	f	class:StrongPHIElimination
addRegListOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addRegListOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addRegOffset	Target/X86/X86InstrBuilder.h	/^addRegOffset(const MachineInstrBuilder &MIB,$/;"	f	namespace:llvm
addRegOperandToUseList	CodeGen/MachineRegisterInfo.cpp	/^void MachineRegisterInfo::addRegOperandToUseList(MachineOperand *MO) {$/;"	f	class:MachineRegisterInfo
addRegOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addRegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addRegOperands	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  void addRegOperands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon446::MBlazeOperand
addRegOperands	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  void addRegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon423::MipsOperand
addRegOperands	Target/X86/AsmParser/X86AsmParser.cpp	/^  void addRegOperands(MCInst &Inst, unsigned N) const {$/;"	f	struct:__anon336::X86Operand
addRegReg	Target/X86/X86InstrBuilder.h	/^static inline const MachineInstrBuilder &addRegReg(const MachineInstrBuilder &MIB,$/;"	f	namespace:llvm
addRegShiftedImmOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addRegShiftedImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addRegShiftedRegOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addRegShiftedRegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addRegWithSubRegs	CodeGen/MachineVerifier.cpp	/^    void addRegWithSubRegs(RegVector &RV, unsigned Reg) {$/;"	f	struct:__anon139::MachineVerifier
addRegWithSubRegs	CodeGen/RegisterScavenging.cpp	/^void RegScavenger::addRegWithSubRegs(BitVector &BV, unsigned Reg) {$/;"	f	class:RegScavenger
addRegionIntoQueue	Analysis/RegionPass.cpp	/^static void addRegionIntoQueue(Region *R, std::deque<Region *> &RQ) {$/;"	f	file:
addRegisterDead	CodeGen/MachineInstr.cpp	/^bool MachineInstr::addRegisterDead(unsigned IncomingReg,$/;"	f	class:MachineInstr
addRegisterDefined	CodeGen/MachineInstr.cpp	/^void MachineInstr::addRegisterDefined(unsigned IncomingReg,$/;"	f	class:MachineInstr
addRegisterKilled	CodeGen/MachineInstr.cpp	/^bool MachineInstr::addRegisterKilled(unsigned IncomingReg,$/;"	f	class:MachineInstr
addRegisterOffset	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addRegisterOffset(DIE *TheDie, unsigned Reg,$/;"	f	class:CompileUnit
addRegisterOp	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addRegisterOp(DIE *TheDie, unsigned Reg) {$/;"	f	class:CompileUnit
addRegistrationListener	VMCore/PassRegistry.cpp	/^void PassRegistry::addRegistrationListener(PassRegistrationListener *L) {$/;"	f	class:PassRegistry
addRelocation	ExecutionEngine/JIT/JITEmitter.cpp	/^    virtual void addRelocation(const MachineRelocation &MR) {$/;"	f	class:__anon182::JITEmitter
addRelocationForSection	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyldImpl::addRelocationForSection(const RelocationEntry &RE,$/;"	f	class:llvm::RuntimeDyldImpl
addRelocationForSymbol	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyldImpl::addRelocationForSymbol(const RelocationEntry &RE,$/;"	f	class:llvm::RuntimeDyldImpl
addRequired	CodeGen/MachineVerifier.cpp	/^      bool addRequired(const RegMap &RM) {$/;"	f	struct:__anon139::MachineVerifier::BBInfo
addRequired	CodeGen/MachineVerifier.cpp	/^      bool addRequired(const RegSet &RS) {$/;"	f	struct:__anon139::MachineVerifier::BBInfo
addRequired	CodeGen/MachineVerifier.cpp	/^      bool addRequired(unsigned Reg) {$/;"	f	struct:__anon139::MachineVerifier::BBInfo
addRequiredID	VMCore/Pass.cpp	/^AnalysisUsage &AnalysisUsage::addRequiredID(char &ID) {$/;"	f	class:AnalysisUsage
addRequiredID	VMCore/Pass.cpp	/^AnalysisUsage &AnalysisUsage::addRequiredID(const void *ID) {$/;"	f	class:AnalysisUsage
addRequiredTransitiveID	VMCore/Pass.cpp	/^AnalysisUsage &AnalysisUsage::addRequiredTransitiveID(char &ID) {$/;"	f	class:AnalysisUsage
addRetOperands	CodeGen/RegAllocFast.cpp	/^void RAFast::addRetOperands(MachineBasicBlock *MBB) {$/;"	f	class:RAFast
addRotImmOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addRotImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addSInt	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addSInt(DIE *Die, unsigned Attribute,$/;"	f	class:CompileUnit
addSPRRegListOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addSPRRegListOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addSchedBarrierDeps	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::addSchedBarrierDeps() {$/;"	f	class:ScheduleDAGInstrs
addScopeVariable	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::addScopeVariable(LexicalScope *LS, DbgVariable *Var) {$/;"	f	class:DwarfDebug
addSelectionDAGCSEId	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolValue::addSelectionDAGCSEId(FoldingSetNodeID &ID) {$/;"	f	class:ARMConstantPoolValue
addSelectionDAGCSEId	Target/ARM/ARMConstantPoolValue.cpp	/^void ARMConstantPoolConstant::addSelectionDAGCSEId(FoldingSetNodeID &ID) {$/;"	f	class:ARMConstantPoolConstant
addSelectionDAGCSEId	Target/ARM/ARMConstantPoolValue.cpp	/^void ARMConstantPoolMBB::addSelectionDAGCSEId(FoldingSetNodeID &ID) {$/;"	f	class:ARMConstantPoolMBB
addSelectionDAGCSEId	Target/ARM/ARMConstantPoolValue.cpp	/^void ARMConstantPoolSymbol::addSelectionDAGCSEId(FoldingSetNodeID &ID) {$/;"	f	class:ARMConstantPoolSymbol
addShifterImmOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addShifterImmOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addSignificand	Support/APFloat.cpp	/^APFloat::addSignificand(const APFloat &rhs)$/;"	f	class:APFloat
addSourceLine	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addSourceLine(DIE *Die, DIGlobalVariable G) {$/;"	f	class:CompileUnit
addSourceLine	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addSourceLine(DIE *Die, DINameSpace NS) {$/;"	f	class:CompileUnit
addSourceLine	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addSourceLine(DIE *Die, DIObjCProperty Ty) {$/;"	f	class:CompileUnit
addSourceLine	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addSourceLine(DIE *Die, DISubprogram SP) {$/;"	f	class:CompileUnit
addSourceLine	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addSourceLine(DIE *Die, DIType Ty) {$/;"	f	class:CompileUnit
addSourceLine	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addSourceLine(DIE *Die, DIVariable V) {$/;"	f	class:CompileUnit
addSpillCosts	CodeGen/RegAllocPBQP.cpp	/^void PBQPBuilder::addSpillCosts(PBQP::Vector &costVec,$/;"	f	class:PBQPBuilder
addSplitConstraints	CodeGen/RegAllocGreedy.cpp	/^bool RAGreedy::addSplitConstraints(InterferenceCache::Cursor Intf,$/;"	f	class:RAGreedy
addStackAlignmentAttr	VMCore/Attributes.cpp	/^AttrBuilder &AttrBuilder::addStackAlignmentAttr(unsigned Align){$/;"	f	class:AttrBuilder
addStatistic	Support/Statistic.cpp	/^  void addStatistic(const Statistic *S) {$/;"	f	class:__anon240::StatisticInfo
addStore	Transforms/Scalar/MemCpyOptimizer.cpp	/^  void addStore(int64_t OffsetFromFirst, StoreInst *SI) {$/;"	f	class:__anon574::MemsetRanges
addString	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addString(DIE *Die, unsigned Attribute, StringRef String) {$/;"	f	class:CompileUnit
addSubRegion	Analysis/RegionInfo.cpp	/^void Region::addSubRegion(Region *SubRegion, bool moveChildren) {$/;"	f	class:Region
addSubprogram	VMCore/DebugInfo.cpp	/^bool DebugInfoFinder::addSubprogram(DISubprogram SP) {$/;"	f	class:DebugInfoFinder
addSubprogramNames	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static void addSubprogramNames(CompileUnit *TheCU, DISubprogram SP,$/;"	f	file:
addSucc	Transforms/Scalar/ObjCARC.cpp	/^    void addSucc(BasicBlock *Succ) { Succs.push_back(Succ); }$/;"	f	class:__anon507::BBState
addSuccEdge	Analysis/PathNumbering.cpp	/^void BallLarusNode::addSuccEdge(BallLarusEdge* edge) {$/;"	f	class:BallLarusNode
addSuccessor	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::addSuccessor(MachineBasicBlock *succ, uint32_t weight) {$/;"	f	class:MachineBasicBlock
addSuccessorWithWeight	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^addSuccessorWithWeight(MachineBasicBlock *Src, MachineBasicBlock *Dst,$/;"	f	class:SelectionDAGBuilder
addSymbol	Target/NVPTX/NVPTXAsmPrinter.h	/^    void addSymbol(Value *GVar) {$/;"	f	class:llvm::NVPTXAsmPrinter::AggBuffer
addSystemPaths	Linker/Linker.cpp	/^Linker::addSystemPaths() {$/;"	f	class:Linker
addT2MemRegOffsetOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addT2MemRegOffsetOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addT2SOImmNegOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addT2SOImmNegOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addT2SOImmNotOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addT2SOImmNotOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addTemplateParams	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addTemplateParams(DIE &Buffer, DIArray TParams) {$/;"	f	class:CompileUnit
addThroughConstraints	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::addThroughConstraints(InterferenceCache::Cursor Intf,$/;"	f	class:RAGreedy
addTimer	Support/Timer.cpp	/^void TimerGroup::addTimer(Timer &T) {$/;"	f	class:TimerGroup
addToCallGraph	Analysis/IPA/CallGraph.cpp	/^  void addToCallGraph(Function *F) {$/;"	f	class:__anon2::BasicCallGraph	file:
addToCoefficient	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::addToCoefficient(const SCEV *Expr,$/;"	f	class:DependenceAnalysis
addToContextOwner	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addToContextOwner(DIE *Die, DIDescriptor Context) {$/;"	f	class:CompileUnit
addToLeaderTable	Transforms/Scalar/GVN.cpp	/^    void addToLeaderTable(uint32_t N, Value *V, const BasicBlock *BB) {$/;"	f	class:__anon537::GVN	file:
addToPacket	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^HexagonPacketizerList::addToPacket(MachineInstr *MI) {$/;"	f	class:HexagonPacketizerList
addType	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addType(DIE *Entity, DIType Ty, unsigned Attribute) {$/;"	f	class:CompileUnit
addType	VMCore/DebugInfo.cpp	/^bool DebugInfoFinder::addType(DIType DT) {$/;"	f	class:DebugInfoFinder
addTypeForNEON	Target/ARM/ARMISelLowering.cpp	/^void ARMTargetLowering::addTypeForNEON(MVT VT, MVT PromotedLdStVT,$/;"	f	class:ARMTargetLowering
addTypeMapping	Linker/LinkModules.cpp	/^void TypeMapTy::addTypeMapping(Type *DstTy, Type *SrcTy) {$/;"	f	class:TypeMapTy
addUInt	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addUInt(DIE *Die, unsigned Attribute,$/;"	f	class:CompileUnit
addUnaligned	Target/X86/X86JITInfo.cpp	/^template<typename T> static void addUnaligned(void *Pos, T Delta) {$/;"	f	file:
addUnknown	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::addUnknown(Instruction *Inst) {$/;"	f	class:AliasSetTracker
addUnknownInst	Analysis/AliasSetTracker.cpp	/^void AliasSet::addUnknownInst(Instruction *I, AliasAnalysis &AA) {$/;"	f	class:AliasSet
addUsesForMEMERegion	CodeGen/ShrinkWrapping.cpp	/^bool PEI::addUsesForMEMERegion(MachineBasicBlock* MBB,$/;"	f	class:PEI
addUsesForTopLevelLoops	CodeGen/ShrinkWrapping.cpp	/^bool PEI::addUsesForTopLevelLoops(SmallVector<MachineBasicBlock*, 4>& blks) {$/;"	f	class:PEI
addVRegDefDeps	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::addVRegDefDeps(SUnit *SU, unsigned OperIdx) {$/;"	f	class:ScheduleDAGInstrs
addVRegUseDeps	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::addVRegUseDeps(SUnit *SU, unsigned OperIdx) {$/;"	f	class:ScheduleDAGInstrs
addValue	CodeGen/AsmPrinter/DIE.h	/^    void addValue(unsigned Attribute, unsigned Form, DIEValue *Value) {$/;"	f	class:llvm::DIE
addVariableAddress	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::addVariableAddress(DbgVariable *&DV, DIE *Die, $/;"	f	class:CompileUnit
addVecListIndexedOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addVecListIndexedOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addVecListOperands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addVecListOperands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addVectorIndex16Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addVectorIndex16Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addVectorIndex32Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addVectorIndex32Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addVectorIndex8Operands	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void addVectorIndex8Operands(MCInst &Inst, unsigned N) const {$/;"	f	class:__anon261::ARMOperand
addVirtRegCoalesce	CodeGen/RegAllocPBQP.cpp	/^void PBQPBuilderWithCoalescing::addVirtRegCoalesce($/;"	f	class:PBQPBuilderWithCoalescing
addZeros	Target/NVPTX/NVPTXAsmPrinter.h	/^    unsigned addZeros(int Num) {$/;"	f	class:llvm::NVPTXAsmPrinter::AggBuffer
add_1	Support/APInt.cpp	/^static bool add_1(uint64_t dest[], uint64_t x[], unsigned len, uint64_t y) {$/;"	f	file:
addrPointsToConstantData	Transforms/Instrumentation/ThreadSanitizer.cpp	/^bool ThreadSanitizer::addrPointsToConstantData(Value *Addr) {$/;"	f	class:ThreadSanitizer
addr_type	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^          target_endianness, is64Bits>::value_type addr_type;$/;"	t	class:__anon180::DyldELFObject	file:
addressRangeContainsAddress	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::addressRangeContainsAddress($/;"	f	class:DWARFDebugInfoEntryMinimal
addressSize	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t addressSize;$/;"	m	struct:InternalInstruction
adjCycles	CodeGen/EarlyIfConversion.cpp	/^static unsigned adjCycles(unsigned Cyc, int Delta) {$/;"	f	file:
adjustBBOffsetsAfter	Target/ARM/ARMConstantIslandPass.cpp	/^void ARMConstantIslands::adjustBBOffsetsAfter(MachineBasicBlock *BB) {$/;"	f	class:ARMConstantIslands
adjustChainDeps	CodeGen/ScheduleDAGInstrs.cpp	/^static void adjustChainDeps(AliasAnalysis *AA, const MachineFrameInfo *MFI,$/;"	f	file:
adjustCopiesBackFrom	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::adjustCopiesBackFrom(const CoalescerPair &CP,$/;"	f	class:RegisterCoalescer
adjustDefLatency	Target/ARM/ARMBaseInstrInfo.cpp	/^static int adjustDefLatency(const ARMSubtarget &Subtarget,$/;"	f	file:
adjustFixupOffset	MC/MCELFObjectTargetWriter.cpp	/^void MCELFObjectTargetWriter::adjustFixupOffset(const MCFixup &Fixup,$/;"	f	class:MCELFObjectTargetWriter
adjustFixupOffset	Target/PowerPC/MCTargetDesc/PPCELFObjectWriter.cpp	/^adjustFixupOffset(const MCFixup &Fixup, uint64_t &RelocOffset) {$/;"	f	class:PPCELFObjectWriter
adjustFixupValue	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^static unsigned adjustFixupValue(const MCFixup &Fixup, uint64_t Value,$/;"	f	file:
adjustFixupValue	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^static unsigned adjustFixupValue(unsigned Kind, uint64_t Value) {$/;"	f	file:
adjustFixupValue	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^static unsigned adjustFixupValue(unsigned Kind, uint64_t Value) {$/;"	f	file:
adjustForSegmentedStacks	Target/X86/X86FrameLowering.cpp	/^X86FrameLowering::adjustForSegmentedStacks(MachineFunction &MF) const {$/;"	f	class:X86FrameLowering
adjustJTTargetBlockForward	Target/ARM/ARMConstantIslandPass.cpp	/^adjustJTTargetBlockForward(MachineBasicBlock *BB, MachineBasicBlock *JTBB) {$/;"	f	class:ARMConstantIslands
adjustLiveRegs	Target/X86/X86FloatingPoint.cpp	/^void FPS::adjustLiveRegs(unsigned Mask, MachineBasicBlock::iterator I) {$/;"	f	class:FPS
adjustLoadArgsFI	Target/MBlaze/MBlazeMachineFunction.h	/^  void adjustLoadArgsFI(MachineFrameInfo *MFI) const {$/;"	f	class:llvm::MBlazeFunctionInfo
adjustPriorityOfUnscheduledPreds	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^void ResourcePriorityQueue::adjustPriorityOfUnscheduledPreds(SUnit *SU) {$/;"	f	class:ResourcePriorityQueue
adjustStackPtr	Target/Mips/MipsSEInstrInfo.cpp	/^void MipsSEInstrInfo::adjustStackPtr(unsigned SP, int64_t Amount,$/;"	f	class:MipsSEInstrInfo
adjustStoreVarArgsFI	Target/MBlaze/MBlazeMachineFunction.h	/^  void adjustStoreVarArgsFI(MachineFrameInfo *MFI) const {$/;"	f	class:llvm::MBlazeFunctionInfo
advance	CodeGen/RegisterPressure.cpp	/^bool RegPressureTracker::advance() {$/;"	f	class:RegPressureTracker
advance	CodeGen/ScheduleDAGInstrs.cpp	/^  void advance() { ++DFSStack.back().second; }$/;"	f	class:__anon110::SchedDAGReverseDFS
advance	Object/MachOObjectFile.cpp	/^error_code advance(T &it, size_t Val) {$/;"	f	namespace:llvm::object
advance	Support/FoldingSet.cpp	/^void FoldingSetIteratorImpl::advance() {$/;"	f	class:FoldingSetIteratorImpl
advanceITState	Target/ARM/Disassembler/ARMDisassembler.cpp	/^      void advanceITState() {$/;"	f	class:__anon290::ITStatus
advanceTo	Object/MachOObjectFile.cpp	/^void advanceTo(T &it, size_t Val) {$/;"	f	namespace:llvm::object
alias	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::alias(const Location &LocA, const Location &LocB) {$/;"	f	class:AliasAnalysis
alias	Analysis/AliasAnalysisCounter.cpp	/^AliasAnalysisCounter::alias(const Location &LocA, const Location &LocB) {$/;"	f	class:AliasAnalysisCounter
alias	Analysis/AliasDebugger.cpp	/^    AliasResult alias(const Location &LocA, const Location &LocB) {$/;"	f	class:__anon44::AliasDebugger
alias	Analysis/BasicAliasAnalysis.cpp	/^    virtual AliasResult alias(const Location &LocA,$/;"	f	struct:__anon15::BasicAliasAnalysis
alias	Analysis/IPA/GlobalsModRef.cpp	/^GlobalsModRef::alias(const Location &LocA,$/;"	f	class:GlobalsModRef
alias	Analysis/NoAliasAnalysis.cpp	/^    virtual AliasResult alias(const Location &LocA, const Location &LocB) {$/;"	f	struct:__anon42::NoAA
alias	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^ScalarEvolutionAliasAnalysis::alias(const Location &LocA,$/;"	f	class:ScalarEvolutionAliasAnalysis
alias	Analysis/TypeBasedAliasAnalysis.cpp	/^TypeBasedAliasAnalysis::alias(const Location &LocA,$/;"	f	class:TypeBasedAliasAnalysis
alias	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCAliasAnalysis::alias(const Location &LocA, const Location &LocB) {$/;"	f	class:ObjCARCAliasAnalysis
aliasCheck	Analysis/BasicAliasAnalysis.cpp	/^BasicAliasAnalysis::aliasCheck(const Value *V1, uint64_t V1Size,$/;"	f	class:BasicAliasAnalysis
aliasGEP	Analysis/BasicAliasAnalysis.cpp	/^BasicAliasAnalysis::aliasGEP(const GEPOperator *GEP1, uint64_t V1Size,$/;"	f	class:BasicAliasAnalysis
aliasPHI	Analysis/BasicAliasAnalysis.cpp	/^BasicAliasAnalysis::aliasPHI(const PHINode *PN, uint64_t PNSize,$/;"	f	class:BasicAliasAnalysis
aliasSelect	Analysis/BasicAliasAnalysis.cpp	/^BasicAliasAnalysis::aliasSelect(const SelectInst *SI, uint64_t SISize,$/;"	f	class:BasicAliasAnalysis
aliasesPointer	Analysis/AliasSetTracker.cpp	/^bool AliasSet::aliasesPointer(const Value *Ptr, uint64_t Size,$/;"	f	class:AliasSet
aliasesUnknownInst	Analysis/AliasSetTracker.cpp	/^bool AliasSet::aliasesUnknownInst(Instruction *Inst, AliasAnalysis &AA) const {$/;"	f	class:AliasSet
align	Analysis/MemoryBuiltins.cpp	/^APInt ObjectSizeOffsetVisitor::align(APInt Size, uint64_t Align) {$/;"	f	class:ObjectSizeOffsetVisitor
allDefsAreDead	CodeGen/MachineInstr.cpp	/^bool MachineInstr::allDefsAreDead() const {$/;"	f	class:MachineInstr
allOperandsUndef	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool ISD::allOperandsUndef(const SDNode *N) {$/;"	f	class:ISD
allRangesAreContiguous	DebugInfo/DWARFDebugAranges.cpp	/^DWARFDebugAranges::allRangesAreContiguous(uint64_t &LoPC, uint64_t &HiPC) const{$/;"	f	class:DWARFDebugAranges
allUsesAvailableAt	CodeGen/LiveRangeEdit.cpp	/^bool LiveRangeEdit::allUsesAvailableAt(const MachineInstr *OrigMI,$/;"	f	class:LiveRangeEdit
allUsesReplacedWith	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::ASTCallbackVH::allUsesReplacedWith(Value *V) {$/;"	f	class:AliasSetTracker::ASTCallbackVH
allUsesReplacedWith	Analysis/LazyValueInfo.cpp	/^    void allUsesReplacedWith(Value *V) {$/;"	f	struct:__anon19::LVIValueHandle
allUsesReplacedWith	Analysis/ScalarEvolution.cpp	/^void SCEVUnknown::allUsesReplacedWith(Value *New) {$/;"	f	class:SCEVUnknown
allUsesReplacedWith	Analysis/ScalarEvolution.cpp	/^void ScalarEvolution::SCEVCallbackVH::allUsesReplacedWith(Value *V) {$/;"	f	class:ScalarEvolution::SCEVCallbackVH
allUsesReplacedWith	CodeGen/MachineModuleInfo.cpp	/^void MMIAddrLabelMapCallbackPtr::allUsesReplacedWith(Value *V2) {$/;"	f	class:MMIAddrLabelMapCallbackPtr
allUsesReplacedWith	VMCore/DebugLoc.cpp	/^void DebugRecVH::allUsesReplacedWith(Value *NewVa) {$/;"	f	class:DebugRecVH
allUsesReplacedWith	VMCore/Metadata.cpp	/^void MDNodeOperand::allUsesReplacedWith(Value *NV) {$/;"	f	class:MDNodeOperand
allUsesReplacedWith	VMCore/Value.cpp	/^void CallbackVH::allUsesReplacedWith(Value *) {}$/;"	f	class:CallbackVH
allnodes_clear	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::allnodes_clear() {$/;"	f	class:SelectionDAG
alloc	CodeGen/ExecutionDepsFix.cpp	/^DomainValue *ExeDepsFix::alloc(int domain) {$/;"	f	class:ExeDepsFix
allocHungoffUses	VMCore/Instructions.cpp	/^Use *PHINode::allocHungoffUses(unsigned N) const {$/;"	f	class:PHINode
allocHungoffUses	VMCore/User.cpp	/^Use *User::allocHungoffUses(unsigned N) const {$/;"	f	class:llvm::User
allocIndirectGV	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITEmitter::allocIndirectGV(const GlobalValue *GV,$/;"	f	class:JITEmitter
allocVirtReg	CodeGen/RegAllocFast.cpp	/^RAFast::LiveRegMap::iterator RAFast::allocVirtReg(MachineInstr *MI,$/;"	f	class:RAFast
allocateCodeSection	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uint8_t *allocateCodeSection(uintptr_t Size, unsigned Alignment,$/;"	f	class:__anon190::DefaultJITMemoryManager
allocateCodeSection	ExecutionEngine/MCJIT/MCJITMemoryManager.h	/^  uint8_t *allocateCodeSection(uintptr_t Size, unsigned Alignment,$/;"	f	class:llvm::MCJITMemoryManager
allocateDataSection	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uint8_t *allocateDataSection(uintptr_t Size, unsigned Alignment,$/;"	f	class:__anon190::DefaultJITMemoryManager
allocateDataSection	ExecutionEngine/MCJIT/MCJITMemoryManager.h	/^  uint8_t *allocateDataSection(uintptr_t Size, unsigned Alignment,$/;"	f	class:llvm::MCJITMemoryManager
allocateGlobal	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITEmitter::allocateGlobal(uintptr_t Size, unsigned Alignment) {$/;"	f	class:JITEmitter
allocateGlobal	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uint8_t *allocateGlobal(uintptr_t Size, unsigned Alignment) {$/;"	f	class:__anon190::DefaultJITMemoryManager
allocateMemRefsArray	CodeGen/MachineFunction.cpp	/^MachineFunction::allocateMemRefsArray(unsigned long Num) {$/;"	f	class:MachineFunction
allocateNewCodeSlab	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    FreeRangeHeader *allocateNewCodeSlab(size_t MinSize) {$/;"	f	class:__anon190::DefaultJITMemoryManager
allocateNewSlab	ExecutionEngine/JIT/JITMemoryManager.cpp	/^sys::MemoryBlock DefaultJITMemoryManager::allocateNewSlab(size_t size) {$/;"	f	class:DefaultJITMemoryManager
allocatePhysRegs	CodeGen/RegAllocBase.cpp	/^void RegAllocBase::allocatePhysRegs() {$/;"	f	class:RegAllocBase
allocateSeparateGVMemory	Target/ARM/ARMJITInfo.h	/^    virtual bool allocateSeparateGVMemory() const {$/;"	f	class:llvm::ARMJITInfo
allocateSpace	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITEmitter::allocateSpace(uintptr_t Size, unsigned Alignment) {$/;"	f	class:JITEmitter
allocateSpace	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uint8_t *allocateSpace(intptr_t Size, unsigned Alignment) {$/;"	f	class:__anon190::DefaultJITMemoryManager
allocateStub	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uint8_t *allocateStub(const GlobalValue* F, unsigned StubSize,$/;"	f	class:__anon190::DefaultJITMemoryManager
allocateThreadLocalMemory	Target/X86/X86JITInfo.cpp	/^char* X86JITInfo::allocateThreadLocalMemory(size_t size) {$/;"	f	class:X86JITInfo
allocator	CodeGen/LiveDebugVariables.cpp	/^  LocMap::Allocator allocator;$/;"	m	class:__anon153::LDVImpl	file:
allocset	Support/regcomp.c	/^allocset(struct parse *p)$/;"	f	file:
allowFMA	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  bool allowFMA;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
allowsUnalignedMem	Target/ARM/ARMSubtarget.h	/^  bool allowsUnalignedMem() const { return AllowsUnalignedMem; }$/;"	f	class:llvm::ARMSubtarget
allowsUnalignedMemoryAccesses	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::allowsUnalignedMemoryAccesses(EVT VT) const {$/;"	f	class:ARMTargetLowering
allowsUnalignedMemoryAccesses	Target/Mips/MipsISelLowering.cpp	/^bool MipsTargetLowering::allowsUnalignedMemoryAccesses(EVT VT) const {$/;"	f	class:MipsTargetLowering
allowsUnalignedMemoryAccesses	Target/X86/X86ISelLowering.h	/^    virtual bool allowsUnalignedMemoryAccesses(EVT VT) const {$/;"	f	class:llvm::X86TargetLowering
also_compatible_with	Target/ARM/ARMBuildAttrs.h	/^    also_compatible_with      = 65,$/;"	e	enum:ARMBuildAttrs::AttrType
analyseMIV	Analysis/LoopDependenceAnalysis.cpp	/^LoopDependenceAnalysis::analyseMIV(const SCEV *A,$/;"	f	class:LoopDependenceAnalysis
analysePair	Analysis/LoopDependenceAnalysis.cpp	/^LoopDependenceAnalysis::analysePair(DependencePair *P) const {$/;"	f	class:LoopDependenceAnalysis
analyseSIV	Analysis/LoopDependenceAnalysis.cpp	/^LoopDependenceAnalysis::analyseSIV(const SCEV *A,$/;"	f	class:LoopDependenceAnalysis
analyseSubscript	Analysis/LoopDependenceAnalysis.cpp	/^LoopDependenceAnalysis::analyseSubscript(const SCEV *A,$/;"	f	class:LoopDependenceAnalysis
analyseZIV	Analysis/LoopDependenceAnalysis.cpp	/^LoopDependenceAnalysis::analyseZIV(const SCEV *A,$/;"	f	class:LoopDependenceAnalysis
analyze	CodeGen/SplitKit.cpp	/^void SplitAnalysis::analyze(const LiveInterval *li) {$/;"	f	class:SplitAnalysis
analyzeBasicBlock	Analysis/CodeMetrics.cpp	/^void CodeMetrics::analyzeBasicBlock(const BasicBlock *BB,$/;"	f	class:CodeMetrics
analyzeBlock	Analysis/InlineCost.cpp	/^bool CallAnalyzer::analyzeBlock(BasicBlock *BB) {$/;"	f	class:CallAnalyzer
analyzeCall	Analysis/InlineCost.cpp	/^bool CallAnalyzer::analyzeCall(CallSite CS) {$/;"	f	class:CallAnalyzer
analyzeCompare	Target/ARM/ARMBaseInstrInfo.cpp	/^analyzeCompare(const MachineInstr *MI, unsigned &SrcReg, unsigned &SrcReg2,$/;"	f	class:ARMBaseInstrInfo
analyzeCompare	Target/X86/X86InstrInfo.cpp	/^analyzeCompare(const MachineInstr *MI, unsigned &SrcReg, unsigned &SrcReg2,$/;"	f	class:X86InstrInfo
analyzeFrameIndexes	Target/MBlaze/MBlazeFrameLowering.cpp	/^static void analyzeFrameIndexes(MachineFunction &MF) {$/;"	f	file:
analyzeFunction	Analysis/CodeMetrics.cpp	/^void CodeMetrics::analyzeFunction(Function *F, const DataLayout *TD) {$/;"	f	class:CodeMetrics
analyzePHINodes	CodeGen/LiveVariables.cpp	/^void LiveVariables::analyzePHINodes(const MachineFunction& Fn) {$/;"	f	class:LiveVariables
analyzePHINodes	CodeGen/PHIElimination.cpp	/^void PHIElimination::analyzePHINodes(const MachineFunction& MF) {$/;"	f	class:PHIElimination
analyzePhysReg	CodeGen/MachineInstrBundle.cpp	/^MachineOperandIteratorBase::analyzePhysReg(unsigned Reg,$/;"	f	class:MachineOperandIteratorBase
analyzeSelect	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::analyzeSelect(const MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
analyzeSiblingValues	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::analyzeSiblingValues() {$/;"	f	class:InlineSpiller
analyzeUses	CodeGen/SplitKit.cpp	/^void SplitAnalysis::analyzeUses() {$/;"	f	class:SplitAnalysis
analyzeValue	CodeGen/RegisterCoalescer.cpp	/^JoinVals::analyzeValue(unsigned ValNo, JoinVals &Other) {$/;"	f	class:JoinVals
analyzeVirtReg	CodeGen/MachineInstrBundle.cpp	/^MachineOperandIteratorBase::analyzeVirtReg(unsigned Reg,$/;"	f	class:MachineOperandIteratorBase
anchor	Analysis/DominanceFrontier.cpp	/^void DominanceFrontier::anchor() { }$/;"	f	class:DominanceFrontier
anchor	CodeGen/AsmPrinter/DIE.cpp	/^void DIEValue::anchor() { }$/;"	f	class:DIEValue
anchor	CodeGen/JITCodeEmitter.cpp	/^void JITCodeEmitter::anchor() { }$/;"	f	class:JITCodeEmitter
anchor	CodeGen/LexicalScopes.cpp	/^void LexicalScope::anchor() { }$/;"	f	class:LexicalScope
anchor	CodeGen/LiveRangeEdit.cpp	/^void LiveRangeEdit::Delegate::anchor() { }$/;"	f	class:LiveRangeEdit::Delegate
anchor	CodeGen/MachineBranchProbabilityInfo.cpp	/^void MachineBranchProbabilityInfo::anchor() { }$/;"	f	class:MachineBranchProbabilityInfo
anchor	CodeGen/MachineCodeEmitter.cpp	/^void MachineCodeEmitter::anchor() { }$/;"	f	class:MachineCodeEmitter
anchor	CodeGen/MachineFunction.cpp	/^void MachineConstantPoolValue::anchor() { }$/;"	f	class:MachineConstantPoolValue
anchor	CodeGen/MachineModuleInfoImpls.cpp	/^void MachineModuleInfoELF::anchor() {}$/;"	f	class:MachineModuleInfoELF
anchor	CodeGen/MachineModuleInfoImpls.cpp	/^void MachineModuleInfoMachO::anchor() {}$/;"	f	class:MachineModuleInfoMachO
anchor	CodeGen/MachinePassRegistry.cpp	/^void MachinePassRegistryListener::anchor() { }$/;"	f	class:MachinePassRegistryListener
anchor	CodeGen/ScheduleDAG.cpp	/^void SchedulingPriorityQueue::anchor() { }$/;"	f	class:SchedulingPriorityQueue
anchor	CodeGen/Spiller.cpp	/^void Spiller::anchor() { }$/;"	f	class:Spiller
anchor	DebugInfo/DWARFContext.cpp	/^void DWARFContextInMemory::anchor() { }$/;"	f	class:DWARFContextInMemory
anchor	ExecutionEngine/MCJIT/MCJITMemoryManager.cpp	/^void MCJITMemoryManager::anchor() { }$/;"	f	class:MCJITMemoryManager
anchor	MC/MCAsmInfoCOFF.cpp	/^void MCAsmInfoCOFF::anchor() { }$/;"	f	class:MCAsmInfoCOFF
anchor	MC/MCAsmInfoCOFF.cpp	/^void MCAsmInfoGNUCOFF::anchor() { }$/;"	f	class:MCAsmInfoGNUCOFF
anchor	MC/MCAsmInfoCOFF.cpp	/^void MCAsmInfoMicrosoft::anchor() { }$/;"	f	class:MCAsmInfoMicrosoft
anchor	MC/MCAsmInfoDarwin.cpp	/^void MCAsmInfoDarwin::anchor() { }$/;"	f	class:MCAsmInfoDarwin
anchor	MC/MCAssembler.cpp	/^void MCAlignFragment::anchor() { }$/;"	f	class:MCAlignFragment
anchor	MC/MCAssembler.cpp	/^void MCDataFragment::anchor() { }$/;"	f	class:MCDataFragment
anchor	MC/MCAssembler.cpp	/^void MCDwarfCallFrameFragment::anchor() { }$/;"	f	class:MCDwarfCallFrameFragment
anchor	MC/MCAssembler.cpp	/^void MCDwarfLineAddrFragment::anchor() { }$/;"	f	class:MCDwarfLineAddrFragment
anchor	MC/MCAssembler.cpp	/^void MCFillFragment::anchor() { }$/;"	f	class:MCFillFragment
anchor	MC/MCAssembler.cpp	/^void MCInstFragment::anchor() { }$/;"	f	class:MCInstFragment
anchor	MC/MCAssembler.cpp	/^void MCLEBFragment::anchor() { }$/;"	f	class:MCLEBFragment
anchor	MC/MCAssembler.cpp	/^void MCOrgFragment::anchor() { }$/;"	f	class:MCOrgFragment
anchor	MC/MCExpr.cpp	/^void MCTargetExpr::anchor() {}$/;"	f	class:MCTargetExpr
anchor	Object/Archive.cpp	/^void Archive::anchor() { }$/;"	f	class:Archive
anchor	Object/ObjectFile.cpp	/^void ObjectFile::anchor() { }$/;"	f	class:ObjectFile
anchor	Support/CommandLine.cpp	/^void GenericOptionValue::anchor() {}$/;"	f	class:GenericOptionValue
anchor	Support/CommandLine.cpp	/^void Option::anchor() {}$/;"	f	class:Option
anchor	Support/CommandLine.cpp	/^void OptionValue<boolOrDefault>::anchor() {}$/;"	f	class:OptionValue
anchor	Support/CommandLine.cpp	/^void OptionValue<std::string>::anchor() {}$/;"	f	class:OptionValue
anchor	Support/CommandLine.cpp	/^void basic_parser_impl::anchor() {}$/;"	f	class:basic_parser_impl
anchor	Support/CommandLine.cpp	/^void parser<bool>::anchor() {}$/;"	f	class:parser
anchor	Support/CommandLine.cpp	/^void parser<boolOrDefault>::anchor() {}$/;"	f	class:parser
anchor	Support/CommandLine.cpp	/^void parser<char>::anchor() {}$/;"	f	class:parser
anchor	Support/CommandLine.cpp	/^void parser<double>::anchor() {}$/;"	f	class:parser
anchor	Support/CommandLine.cpp	/^void parser<float>::anchor() {}$/;"	f	class:parser
anchor	Support/CommandLine.cpp	/^void parser<int>::anchor() {}$/;"	f	class:parser
anchor	Support/CommandLine.cpp	/^void parser<std::string>::anchor() {}$/;"	f	class:parser
anchor	Support/CommandLine.cpp	/^void parser<unsigned long long>::anchor() {}$/;"	f	class:parser
anchor	Support/CommandLine.cpp	/^void parser<unsigned>::anchor() {}$/;"	f	class:parser
anchor	Support/DAGDeltaAlgorithm.cpp	/^void DAGDeltaAlgorithm::anchor() {$/;"	f	class:DAGDeltaAlgorithm
anchor	Support/IntrusiveRefCntPtr.cpp	/^void RefCountedBaseVPTR::anchor() { }$/;"	f	class:RefCountedBaseVPTR
anchor	TableGen/Record.cpp	/^void BitInit::anchor() { }$/;"	f	class:BitInit
anchor	TableGen/Record.cpp	/^void Init::anchor() { }$/;"	f	class:Init
anchor	TableGen/Record.cpp	/^void RecTy::anchor() { }$/;"	f	class:RecTy
anchor	TableGen/Record.cpp	/^void StringInit::anchor() { }$/;"	f	class:StringInit
anchor	TableGen/Record.cpp	/^void UnsetInit::anchor() { }$/;"	f	class:UnsetInit
anchor	Target/ARM/ARMMachineFunctionInfo.cpp	/^void ARMFunctionInfo::anchor() { }$/;"	f	class:ARMFunctionInfo
anchor	Target/ARM/ARMRegisterInfo.cpp	/^void ARMRegisterInfo::anchor() { }$/;"	f	class:ARMRegisterInfo
anchor	Target/ARM/ARMTargetMachine.cpp	/^void ARMTargetMachine::anchor() { }$/;"	f	class:ARMTargetMachine
anchor	Target/ARM/ARMTargetMachine.cpp	/^void ThumbTargetMachine::anchor() { }$/;"	f	class:ThumbTargetMachine
anchor	Target/ARM/MCTargetDesc/ARMMCAsmInfo.cpp	/^void ARMELFMCAsmInfo::anchor() { }$/;"	f	class:ARMELFMCAsmInfo
anchor	Target/ARM/MCTargetDesc/ARMMCAsmInfo.cpp	/^void ARMMCAsmInfoDarwin::anchor() { }$/;"	f	class:ARMMCAsmInfoDarwin
anchor	Target/CellSPU/MCTargetDesc/SPUMCAsmInfo.cpp	/^void SPULinuxMCAsmInfo::anchor() { }$/;"	f	class:SPULinuxMCAsmInfo
anchor	Target/CellSPU/SPUMachineFunction.cpp	/^void SPUFunctionInfo::anchor() { }$/;"	f	class:SPUFunctionInfo
anchor	Target/MBlaze/MBlazeMachineFunction.cpp	/^void MBlazeFunctionInfo::anchor() { }$/;"	f	class:MBlazeFunctionInfo
anchor	Target/MBlaze/MCTargetDesc/MBlazeMCAsmInfo.cpp	/^void MBlazeMCAsmInfo::anchor() { }$/;"	f	class:MBlazeMCAsmInfo
anchor	Target/MSP430/MCTargetDesc/MSP430MCAsmInfo.cpp	/^void MSP430MCAsmInfo::anchor() { }$/;"	f	class:MSP430MCAsmInfo
anchor	Target/MSP430/MSP430MachineFunctionInfo.cpp	/^void MSP430MachineFunctionInfo::anchor() { }$/;"	f	class:MSP430MachineFunctionInfo
anchor	Target/MSP430/MSP430Subtarget.cpp	/^void MSP430Subtarget::anchor() { }$/;"	f	class:MSP430Subtarget
anchor	Target/Mips/MCTargetDesc/MipsMCAsmInfo.cpp	/^void MipsMCAsmInfo::anchor() { }$/;"	f	class:MipsMCAsmInfo
anchor	Target/Mips/MipsMachineFunction.cpp	/^void MipsFunctionInfo::anchor() { }$/;"	f	class:MipsFunctionInfo
anchor	Target/Mips/MipsSubtarget.cpp	/^void MipsSubtarget::anchor() { }$/;"	f	class:MipsSubtarget
anchor	Target/Mips/MipsTargetMachine.cpp	/^void MipsebTargetMachine::anchor() { }$/;"	f	class:MipsebTargetMachine
anchor	Target/Mips/MipsTargetMachine.cpp	/^void MipselTargetMachine::anchor() { }$/;"	f	class:MipselTargetMachine
anchor	Target/NVPTX/MCTargetDesc/NVPTXMCAsmInfo.cpp	/^void NVPTXMCAsmInfo::anchor() { }$/;"	f	class:NVPTXMCAsmInfo
anchor	Target/NVPTX/NVPTXTargetMachine.cpp	/^void NVPTXTargetMachine32::anchor() {}$/;"	f	class:NVPTXTargetMachine32
anchor	Target/NVPTX/NVPTXTargetMachine.cpp	/^void NVPTXTargetMachine64::anchor() {}$/;"	f	class:NVPTXTargetMachine64
anchor	Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.cpp	/^void PPCLinuxMCAsmInfo::anchor() { }$/;"	f	class:PPCLinuxMCAsmInfo
anchor	Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.cpp	/^void PPCMCAsmInfoDarwin::anchor() { }$/;"	f	class:PPCMCAsmInfoDarwin
anchor	Target/PowerPC/PPCMachineFunctionInfo.cpp	/^void PPCFunctionInfo::anchor() { }$/;"	f	class:PPCFunctionInfo
anchor	Target/PowerPC/PPCTargetMachine.cpp	/^void PPC32TargetMachine::anchor() { }$/;"	f	class:PPC32TargetMachine
anchor	Target/PowerPC/PPCTargetMachine.cpp	/^void PPC64TargetMachine::anchor() { }$/;"	f	class:PPC64TargetMachine
anchor	Target/Sparc/MCTargetDesc/SparcMCAsmInfo.cpp	/^void SparcELFMCAsmInfo::anchor() { }$/;"	f	class:SparcELFMCAsmInfo
anchor	Target/Sparc/SparcMachineFunctionInfo.cpp	/^void SparcMachineFunctionInfo::anchor() { }$/;"	f	class:SparcMachineFunctionInfo
anchor	Target/Sparc/SparcSubtarget.cpp	/^void SparcSubtarget::anchor() { }$/;"	f	class:SparcSubtarget
anchor	Target/Sparc/SparcTargetMachine.cpp	/^void SparcV8TargetMachine::anchor() { }$/;"	f	class:SparcV8TargetMachine
anchor	Target/Sparc/SparcTargetMachine.cpp	/^void SparcV9TargetMachine::anchor() { }$/;"	f	class:SparcV9TargetMachine
anchor	Target/TargetJITInfo.cpp	/^void TargetJITInfo::anchor() { }$/;"	f	class:TargetJITInfo
anchor	Target/TargetLibraryInfo.cpp	/^void TargetLibraryInfo::anchor() { }$/;"	f	class:TargetLibraryInfo
anchor	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^void X86ELFMCAsmInfo::anchor() { }$/;"	f	class:X86ELFMCAsmInfo
anchor	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^void X86MCAsmInfoDarwin::anchor() { }$/;"	f	class:X86MCAsmInfoDarwin
anchor	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^void X86MCAsmInfoGNUCOFF::anchor() { }$/;"	f	class:X86MCAsmInfoGNUCOFF
anchor	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^void X86MCAsmInfoMicrosoft::anchor() { }$/;"	f	class:X86MCAsmInfoMicrosoft
anchor	Target/X86/X86MachineFunctionInfo.cpp	/^void X86MachineFunctionInfo::anchor() { }$/;"	f	class:X86MachineFunctionInfo
anchor	Target/X86/X86TargetMachine.cpp	/^void X86_32TargetMachine::anchor() { }$/;"	f	class:X86_32TargetMachine
anchor	Target/X86/X86TargetMachine.cpp	/^void X86_64TargetMachine::anchor() { }$/;"	f	class:X86_64TargetMachine
anchor	Target/XCore/MCTargetDesc/XCoreMCAsmInfo.cpp	/^void XCoreMCAsmInfo::anchor() { }$/;"	f	class:XCoreMCAsmInfo
anchor	Target/XCore/XCoreMachineFunctionInfo.cpp	/^void XCoreFunctionInfo::anchor() { }$/;"	f	class:XCoreFunctionInfo
anchor	Target/XCore/XCoreSubtarget.cpp	/^void XCoreSubtarget::anchor() { }$/;"	f	class:XCoreSubtarget
anchor	Transforms/Utils/SimplifyIndVar.cpp	/^void IVVisitor::anchor() { }$/;"	f	class:llvm::IVVisitor
anchor	Transforms/Utils/ValueMapper.cpp	/^void ValueMapTypeRemapper::anchor() {}$/;"	f	class:ValueMapTypeRemapper
anchor	VMCore/Constants.cpp	/^void Constant::anchor() { }$/;"	f	class:Constant
anchor	VMCore/Constants.cpp	/^void ConstantDataArray::anchor() {}$/;"	f	class:ConstantDataArray
anchor	VMCore/Constants.cpp	/^void ConstantDataVector::anchor() {}$/;"	f	class:ConstantDataVector
anchor	VMCore/Constants.cpp	/^void ConstantFP::anchor() { }$/;"	f	class:ConstantFP
anchor	VMCore/Constants.cpp	/^void ConstantInt::anchor() { }$/;"	f	class:ConstantInt
anchor	VMCore/Function.cpp	/^void Argument::anchor() { }$/;"	f	class:Argument
anchor	VMCore/Instructions.cpp	/^void CastInst::anchor() {}$/;"	f	class:CastInst
anchor	VMCore/Instructions.cpp	/^void CmpInst::anchor() {}$/;"	f	class:CmpInst
anchor	VMCore/LLVMContextImpl.cpp	/^void BinaryConstantExpr::anchor() { }$/;"	f	class:BinaryConstantExpr
anchor	VMCore/LLVMContextImpl.cpp	/^void CompareConstantExpr::anchor() { }$/;"	f	class:CompareConstantExpr
anchor	VMCore/LLVMContextImpl.cpp	/^void ExtractElementConstantExpr::anchor() { }$/;"	f	class:ExtractElementConstantExpr
anchor	VMCore/LLVMContextImpl.cpp	/^void ExtractValueConstantExpr::anchor() { }$/;"	f	class:ExtractValueConstantExpr
anchor	VMCore/LLVMContextImpl.cpp	/^void GetElementPtrConstantExpr::anchor() { }$/;"	f	class:GetElementPtrConstantExpr
anchor	VMCore/LLVMContextImpl.cpp	/^void InsertElementConstantExpr::anchor() { }$/;"	f	class:InsertElementConstantExpr
anchor	VMCore/LLVMContextImpl.cpp	/^void InsertValueConstantExpr::anchor() { }$/;"	f	class:InsertValueConstantExpr
anchor	VMCore/LLVMContextImpl.cpp	/^void SelectConstantExpr::anchor() { }$/;"	f	class:SelectConstantExpr
anchor	VMCore/LLVMContextImpl.cpp	/^void ShuffleVectorConstantExpr::anchor() { }$/;"	f	class:ShuffleVectorConstantExpr
anchor	VMCore/LLVMContextImpl.cpp	/^void UnaryConstantExpr::anchor() { }$/;"	f	class:UnaryConstantExpr
anchor	VMCore/Metadata.cpp	/^void MDString::anchor() { }$/;"	f	class:MDString
anchor	VMCore/PassManager.cpp	/^void FunctionPassManagerImpl::anchor() {}$/;"	f	class:llvm::FunctionPassManagerImpl
anchor	VMCore/PassManager.cpp	/^void PassManagerImpl::anchor() {}$/;"	f	class:llvm::PassManagerImpl
anchor	VMCore/User.cpp	/^void User::anchor() {}$/;"	f	class:llvm::User
annotationCache	Target/NVPTX/NVPTXUtilities.cpp	/^ManagedStatic<per_module_annot_t> annotationCache;$/;"	v
anyRematerializable	CodeGen/LiveRangeEdit.cpp	/^bool LiveRangeEdit::anyRematerializable(AliasAnalysis *aa) {$/;"	f	class:LiveRangeEdit
api_initialized	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    volatile long          api_initialized;$/;"	m	struct:___itt_global
api_list_ptr	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_api_info*        api_list_ptr;$/;"	m	struct:___itt_global
append	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^    void append(const RegsForValue &RHS) {$/;"	f	struct:__anon82::RegsForValue
append	Support/APFloat.cpp	/^  void append(SmallVectorImpl<char> &Buffer, StringRef Str) {$/;"	f	namespace:__anon235
append	Support/PathV2.cpp	/^void append(SmallVectorImpl<char> &path, const Twine &a,$/;"	f	namespace:llvm::sys::path
append	Support/PathV2.cpp	/^void append(SmallVectorImpl<char> &path,$/;"	f	namespace:llvm::sys::path
appendMangledName	Target/Mangler.cpp	/^static void appendMangledName(SmallVectorImpl<char> &OutName, StringRef Str,$/;"	f	file:
appendMangledQuotedName	Target/Mangler.cpp	/^static void appendMangledQuotedName(SmallVectorImpl<char> &OutName,$/;"	f	file:
appendRange	DebugInfo/DWARFDebugAranges.cpp	/^void DWARFDebugAranges::appendRange(uint32_t offset, uint64_t low_pc,$/;"	f	class:DWARFDebugAranges
appendRow	DebugInfo/DWARFDebugLine.h	/^    void appendRow(const DWARFDebugLine::Row &state) { Rows.push_back(state); }$/;"	f	struct:llvm::DWARFDebugLine::LineTable
appendRowToMatrix	DebugInfo/DWARFDebugLine.cpp	/^void DWARFDebugLine::State::appendRowToMatrix(uint32_t offset) {$/;"	f	class:DWARFDebugLine::State
appendSequence	DebugInfo/DWARFDebugLine.h	/^    void appendSequence(const DWARFDebugLine::Sequence &sequence) {$/;"	f	struct:llvm::DWARFDebugLine::LineTable
appendSuffix	Support/Path.cpp	/^Path::appendSuffix(StringRef suffix) {$/;"	f	class:Path
appendToGlobalArray	Transforms/Utils/ModuleUtils.cpp	/^static void appendToGlobalArray(const char *Array, $/;"	f	file:
appendToGlobalCtors	Transforms/Utils/ModuleUtils.cpp	/^void llvm::appendToGlobalCtors(Module &M, Function *F, int Priority) {$/;"	f	class:llvm
appendToGlobalDtors	Transforms/Utils/ModuleUtils.cpp	/^void llvm::appendToGlobalDtors(Module &M, Function *F, int Priority) {$/;"	f	class:llvm
applyDisable	CodeGen/Passes.cpp	/^static AnalysisID applyDisable(AnalysisID PassID, bool Override) {$/;"	f	file:
applyFixup	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^void DarwinARMAsmBackend::applyFixup(const MCFixup &Fixup, char *Data,$/;"	f	class:__anon285::DarwinARMAsmBackend
applyFixup	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^void ELFARMAsmBackend::applyFixup(const MCFixup &Fixup, char *Data,$/;"	f	class:__anon285::ELFARMAsmBackend
applyFixup	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^void ELFMBlazeAsmBackend::applyFixup(const MCFixup &Fixup, char *Data,$/;"	f	class:__anon456::ELFMBlazeAsmBackend
applyFixup	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  void applyFixup(const MCFixup &Fixup, char *Data, unsigned DataSize,$/;"	f	class:__anon429::MipsAsmBackend
applyFixup	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^    void applyFixup(const MCFixup &Fixup, char *Data, unsigned DataSize,$/;"	f	class:__anon321::DarwinPPCAsmBackend
applyFixup	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^    void applyFixup(const MCFixup &Fixup, char *Data, unsigned DataSize,$/;"	f	class:__anon321::ELFPPCAsmBackend
applyFixup	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  void applyFixup(const MCFixup &Fixup, char *Data, unsigned DataSize,$/;"	f	class:__anon344::X86AsmBackend
applyOverride	CodeGen/Passes.cpp	/^static AnalysisID applyOverride(AnalysisID TargetID, cl::boolOrDefault Override,$/;"	f	file:
areAllUsesEqual	Transforms/Utils/Local.cpp	/^static bool areAllUsesEqual(Instruction *I) {$/;"	f	file:
areInstsCompatible	Transforms/Vectorize/BBVectorize.cpp	/^  bool BBVectorize::areInstsCompatible(Instruction *I, Instruction *J,$/;"	f	class:__anon604::BBVectorize
areInvalidOperands	VMCore/Instructions.cpp	/^const char *SelectInst::areInvalidOperands(Value *Op0, Value *Op1, Value *Op2) {$/;"	f	class:SelectInst
areJTsAllowed	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static inline bool areJTsAllowed(const TargetLowering &TLI) {$/;"	f	file:
areLoadsFromSameBasePtr	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::areLoadsFromSameBasePtr(SDNode *Load1, SDNode *Load2,$/;"	f	class:ARMBaseInstrInfo
areLoadsFromSameBasePtr	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::areLoadsFromSameBasePtr(SDNode *Load1, SDNode *Load2,$/;"	f	class:X86InstrInfo
areTypesIsomorphic	Linker/LinkModules.cpp	/^bool TypeMapTy::areTypesIsomorphic(Type *DstTy, Type *SrcTy) {$/;"	f	class:TypeMapTy
areValueTypesLegal	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^    bool areValueTypesLegal(const TargetLowering &TLI) {$/;"	f	struct:__anon82::RegsForValue
areVarIndicesEqual	Analysis/BasicAliasAnalysis.cpp	/^static bool areVarIndicesEqual(SmallVector<VariableGEPIndex, 4> &Indices1,$/;"	f	file:
arg_empty	VMCore/Function.cpp	/^bool Function::arg_empty() const {$/;"	f	class:Function
arg_size	VMCore/Function.cpp	/^size_t Function::arg_size() const {$/;"	f	class:Function
argsAreStructReturn	Target/X86/X86ISelLowering.cpp	/^argsAreStructReturn(const SmallVectorImpl<ISD::InputArg> &Ins) {$/;"	f	file:
argument_type	Transforms/Scalar/DeadStoreElimination.cpp	/^    typedef Value *argument_type;$/;"	t	struct:__anon554::CouldRef	file:
argument_type	Transforms/Scalar/DeadStoreElimination.cpp	/^    typedef Value *argument_type;$/;"	t	struct:__anon555::CouldAlias	file:
argument_type	Transforms/Scalar/SROA.cpp	/^    typedef AllocaInst *argument_type;$/;"	t	class:__anon563::IsAllocaInSet	file:
arithmeticOK	Support/APFloat.cpp	/^    unsigned int arithmeticOK;$/;"	m	struct:llvm::fltSemantics	file:
ascii_isdigit	Support/StringRef.cpp	/^static bool ascii_isdigit(char x) {$/;"	f	file:
ascii_tolower	Support/StringRef.cpp	/^static char ascii_tolower(char x) {$/;"	f	file:
ascii_toupper	Support/StringRef.cpp	/^static char ascii_toupper(char x) {$/;"	f	file:
ashr	Support/APInt.cpp	/^APInt APInt::ashr(const APInt &shiftAmt) const {$/;"	f	class:APInt
ashr	Support/APInt.cpp	/^APInt APInt::ashr(unsigned shiftAmt) const {$/;"	f	class:APInt
asm_dialect	VMCore/ConstantsContext.h	/^  InlineAsm::AsmDialect asm_dialect;$/;"	m	struct:llvm::InlineAsmKeyType
asm_string	VMCore/ConstantsContext.h	/^  std::string asm_string;$/;"	m	struct:llvm::InlineAsmKeyType
asr	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    asr,$/;"	e	enum:llvm::ARM_AM::ShiftOpc
assertArithmeticOK	Support/APFloat.cpp	/^assertArithmeticOK(const llvm::fltSemantics &semantics) {$/;"	f	file:
assertLocalFunction	VMCore/Metadata.cpp	/^static const Function *assertLocalFunction(const MDNode *N) {$/;"	f	file:
assign	CodeGen/LiveRegMatrix.cpp	/^void LiveRegMatrix::assign(LiveInterval &VirtReg, unsigned PhysReg) {$/;"	f	class:LiveRegMatrix
assign	Support/APFloat.cpp	/^APFloat::assign(const APFloat &rhs)$/;"	f	class:APFloat
assignAbbrevNumber	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::assignAbbrevNumber(DIEAbbrev &Abbrev) {$/;"	f	class:DwarfDebug
assignInstructionRanges	CodeGen/LexicalScopes.cpp	/^assignInstructionRanges(SmallVectorImpl<InsnRange> &MIRanges,$/;"	f	class:LexicalScopes
assignPassManager	Analysis/IPA/CallGraphSCCPass.cpp	/^void CallGraphSCCPass::assignPassManager(PMStack &PMS,$/;"	f	class:CallGraphSCCPass
assignPassManager	Analysis/LoopPass.cpp	/^void LoopPass::assignPassManager(PMStack &PMS,$/;"	f	class:LoopPass
assignPassManager	Analysis/RegionPass.cpp	/^void RegionPass::assignPassManager(PMStack &PMS,$/;"	f	class:RegionPass
assignPassManager	VMCore/PassManager.cpp	/^void BasicBlockPass::assignPassManager(PMStack &PMS,$/;"	f	class:BasicBlockPass
assignPassManager	VMCore/PassManager.cpp	/^void FunctionPass::assignPassManager(PMStack &PMS,$/;"	f	class:FunctionPass
assignPassManager	VMCore/PassManager.cpp	/^void ModulePass::assignPassManager(PMStack &PMS,$/;"	f	class:ModulePass
assignVirt2Phys	CodeGen/VirtRegMap.h	/^    void assignVirt2Phys(unsigned virtReg, unsigned physReg) {$/;"	f	class:llvm::VirtRegMap
assignVirt2StackSlot	CodeGen/VirtRegMap.cpp	/^int VirtRegMap::assignVirt2StackSlot(unsigned virtReg) {$/;"	f	class:VirtRegMap
assignVirt2StackSlot	CodeGen/VirtRegMap.cpp	/^void VirtRegMap::assignVirt2StackSlot(unsigned virtReg, int SS) {$/;"	f	class:VirtRegMap
assignVirtToPhysReg	CodeGen/RegAllocFast.cpp	/^RAFast::assignVirtToPhysReg(unsigned VirtReg, unsigned PhysReg) {$/;"	f	class:RAFast
assignVirtToPhysReg	CodeGen/RegAllocFast.cpp	/^void RAFast::assignVirtToPhysReg(LiveReg &LR, unsigned PhysReg) {$/;"	f	class:RAFast
atIssueLimit	CodeGen/ScoreboardHazardRecognizer.cpp	/^bool ScoreboardHazardRecognizer::atIssueLimit() const {$/;"	f	class:ScoreboardHazardRecognizer
atomic_counter	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    volatile long          atomic_counter;$/;"	m	struct:___itt_global
atoull	AsmParser/LLLexer.cpp	/^uint64_t LLLexer::atoull(const char *Buffer, const char *End) {$/;"	f	class:LLLexer
attributeBits	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^enum attributeBits {$/;"	g
avoidCPSRPartialUpdate	Target/ARM/ARMSubtarget.h	/^  bool avoidCPSRPartialUpdate() const { return AvoidCPSRPartialUpdate; }$/;"	f	class:llvm::ARMSubtarget
avoidWriteAfterWrite	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::avoidWriteAfterWrite(const TargetRegisterClass *RC) const {$/;"	f	class:ARMBaseRegisterInfo
avoidWriteAfterWrite	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::avoidWriteAfterWrite(const TargetRegisterClass *RC) const {$/;"	f	class:PPCRegisterInfo
b	ExecutionEngine/JIT/JIT.cpp	/^    } b;$/;"	m	union:__anon185::LibgccObject::__anon186	typeref:struct:__anon185::LibgccObject::__anon186::__anon187	file:
bFromREX	Target/X86/Disassembler/X86DisassemblerDecoder.h	46;"	d
bFromVEX2of3	Target/X86/Disassembler/X86DisassemblerDecoder.h	50;"	d
back	Bitcode/Reader/BitcodeReader.h	/^  Value *back() const         { return MDValuePtrs.back(); }$/;"	f	class:llvm::BitcodeReaderMDValueList
back	Bitcode/Reader/BitcodeReader.h	/^  Value *back() const { return ValuePtrs.back(); }$/;"	f	class:llvm::BitcodeReaderValueList
backrefs	Support/regex2.h	/^	int backrefs;		\/* does it use back references? *\/$/;"	m	struct:re_guts
backslash	AsmParser/LLToken.h	/^    backslash,         \/\/ \\    (not \/)$/;"	e	enum:llvm::lltok::Kind
backtrack	CodeGen/ScheduleDAGInstrs.cpp	/^  void backtrack() { DFSStack.pop_back(); }$/;"	f	class:__anon110::SchedDAGReverseDFS
bad_am_submode	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    bad_am_submode = 0,$/;"	e	enum:llvm::ARM_AM::AMSubMode
banerjeeMIVtest	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::banerjeeMIVtest(const SCEV *Src,$/;"	f	class:DependenceAnalysis
baseClassOf	TableGen/Record.cpp	/^bool BitRecTy::baseClassOf(const BitsRecTy *RHS) const {$/;"	f	class:BitRecTy
baseClassOf	TableGen/Record.cpp	/^bool RecordRecTy::baseClassOf(const RecordRecTy *RHS) const {$/;"	f	class:RecordRecTy
baseFromSIB	Target/X86/Disassembler/X86DisassemblerDecoder.h	42;"	d
bb_vectorize_name	Transforms/Vectorize/BBVectorize.cpp	/^static const char bb_vectorize_name[] = "Basic-Block Vectorization";$/;"	v	file:
begin	CodeGen/LiveIntervalUnion.h	/^  SegmentIter begin() { return Segments.begin(); }$/;"	f	class:llvm::LiveIntervalUnion
begin	CodeGen/MachineBlockPlacement.cpp	/^  iterator begin() { return Blocks.begin(); }$/;"	f	class:__anon106::BlockChain
begin	Support/PathV2.cpp	/^const_iterator begin(StringRef path) {$/;"	f	namespace:llvm::sys::path
begin	Support/TargetRegistry.cpp	/^TargetRegistry::iterator TargetRegistry::begin() {$/;"	f	class:TargetRegistry
begin	Support/YAMLParser.cpp	/^document_iterator Stream::begin() {$/;"	f	class:Stream
begin	Transforms/IPO/FunctionAttrs.cpp	/^    iterator begin() { return SyntheticRoot.Uses.begin(); }$/;"	f	class:__anon579::ArgumentGraph
begin	Transforms/Instrumentation/MaximumSpanningTree.h	/^    typename MaxSpanTree::iterator begin() {$/;"	f	class:llvm::MaximumSpanningTree
begin	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const_iterator begin() const { return RegSequence.begin(); }$/;"	f	class:__anon513::RegUseTracker
begin	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const_iterator begin() const {$/;"	f	struct:__anon518::IVChain
begin	Transforms/Scalar/LoopStrengthReduce.cpp	/^  iterator begin() { return RegSequence.begin(); }$/;"	f	class:__anon513::RegUseTracker
begin	Transforms/Scalar/MemCpyOptimizer.cpp	/^  const_iterator begin() const { return Ranges.begin(); }$/;"	f	class:__anon574::MemsetRanges
begin	Transforms/Scalar/ObjCARC.cpp	/^    const_iterator begin() const { return Vector.begin(); }$/;"	f	class:__anon498::MapVector
begin	Transforms/Scalar/ObjCARC.cpp	/^    iterator begin() { return Vector.begin(); }$/;"	f	class:__anon498::MapVector
begin	Transforms/Scalar/SROA.cpp	/^  const_iterator begin() const { return Partitions.begin(); }$/;"	f	class:__anon557::AllocaPartitioning
begin	Transforms/Scalar/SROA.cpp	/^  iterator begin() { return Partitions.begin(); }$/;"	f	class:__anon557::AllocaPartitioning
beginAssembly	CodeGen/AsmPrinter/OcamlGCPrinter.cpp	/^void OcamlGCMetadataPrinter::beginAssembly(AsmPrinter &AP) {$/;"	f	class:OcamlGCMetadataPrinter
beginAssembly	CodeGen/GCMetadataPrinter.cpp	/^void GCMetadataPrinter::beginAssembly(AsmPrinter &AP) {$/;"	f	class:GCMetadataPrinter
beginFunction	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::beginFunction(const MachineFunction *MF) {$/;"	f	class:DwarfDebug
beginInstruction	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::beginInstruction(const MachineInstr *MI) {$/;"	f	class:DwarfDebug
beginModule	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::beginModule(Module *M) {$/;"	f	class:DwarfDebug
begin_children	Object/Archive.cpp	/^Archive::child_iterator Archive::begin_children(bool skip_internal) const {$/;"	f	class:Archive
begin_dynamic_symbols	Object/COFFObjectFile.cpp	/^symbol_iterator COFFObjectFile::begin_dynamic_symbols() const {$/;"	f	class:COFFObjectFile
begin_dynamic_symbols	Object/MachOObjectFile.cpp	/^symbol_iterator MachOObjectFile::begin_dynamic_symbols() const {$/;"	f	class:llvm::object::MachOObjectFile
begin_libraries_needed	Object/COFFObjectFile.cpp	/^library_iterator COFFObjectFile::begin_libraries_needed() const {$/;"	f	class:COFFObjectFile
begin_libraries_needed	Object/MachOObjectFile.cpp	/^library_iterator MachOObjectFile::begin_libraries_needed() const {$/;"	f	class:llvm::object::MachOObjectFile
begin_sections	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual object::section_iterator begin_sections() const$/;"	f	class:llvm::ObjectImageCommon
begin_sections	Object/COFFObjectFile.cpp	/^section_iterator COFFObjectFile::begin_sections() const {$/;"	f	class:COFFObjectFile
begin_sections	Object/MachOObjectFile.cpp	/^section_iterator MachOObjectFile::begin_sections() const {$/;"	f	class:llvm::object::MachOObjectFile
begin_symbols	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual object::symbol_iterator begin_symbols() const$/;"	f	class:llvm::ObjectImageCommon
begin_symbols	Object/Archive.cpp	/^Archive::symbol_iterator Archive::begin_symbols() const {$/;"	f	class:Archive
begin_symbols	Object/COFFObjectFile.cpp	/^symbol_iterator COFFObjectFile::begin_symbols() const {$/;"	f	class:COFFObjectFile
begin_symbols	Object/MachOObjectFile.cpp	/^symbol_iterator MachOObjectFile::begin_symbols() const {$/;"	f	class:llvm::object::MachOObjectFile
binaryAnd	Support/ConstantRange.cpp	/^ConstantRange::binaryAnd(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
binaryOr	Support/ConstantRange.cpp	/^ConstantRange::binaryOr(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
bitcastToAPInt	Support/APFloat.cpp	/^APFloat::bitcastToAPInt() const$/;"	f	class:APFloat
bitcastf32Toi32	Target/ARM/ARMISelLowering.cpp	/^static SDValue bitcastf32Toi32(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
bitcodereader_order	Bitcode/Writer/BitcodeWriter.cpp	/^static bool bitcodereader_order(const User *lhs, const User *rhs) {$/;"	f	file:
bitwiseIsEqual	Support/APFloat.cpp	/^APFloat::bitwiseIsEqual(const APFloat &rhs) const {$/;"	f	class:APFloat
blockAlwaysFallThrough	CodeGen/IfConversion.cpp	/^    bool blockAlwaysFallThrough(BBInfo &BBI) const {$/;"	f	class:__anon99::IfConverter	file:
blot	Transforms/Scalar/ObjCARC.cpp	/^    void blot(const KeyT &Key) {$/;"	f	class:__anon498::MapVector
bool	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^typedef int8_t bool;$/;"	t	file:
bothUsedInPHI	CodeGen/TailDuplication.cpp	/^bothUsedInPHI(const MachineBasicBlock &A,$/;"	f	file:
bothcases	Support/regcomp.c	/^bothcases(struct parse *p, int ch)$/;"	f	file:
bottom_up_ptr_begin	Transforms/Scalar/ObjCARC.cpp	/^    ptr_const_iterator bottom_up_ptr_begin() const {$/;"	f	class:__anon507::BBState
bottom_up_ptr_begin	Transforms/Scalar/ObjCARC.cpp	/^    ptr_iterator bottom_up_ptr_begin() { return PerPtrBottomUp.begin(); }$/;"	f	class:__anon507::BBState
bottom_up_ptr_end	Transforms/Scalar/ObjCARC.cpp	/^    ptr_const_iterator bottom_up_ptr_end() const {$/;"	f	class:__anon507::BBState
bottom_up_ptr_end	Transforms/Scalar/ObjCARC.cpp	/^    ptr_iterator bottom_up_ptr_end() { return PerPtrBottomUp.end(); }$/;"	f	class:__anon507::BBState
branchTargetID	MC/MCDisassembler/EDInst.cpp	/^int EDInst::branchTargetID() {$/;"	f	class:EDInst
breakPartialRegDependency	Target/ARM/ARMBaseInstrInfo.cpp	/^breakPartialRegDependency(MachineBasicBlock::iterator MI,$/;"	f	class:ARMBaseInstrInfo
breakPartialRegDependency	Target/X86/X86InstrInfo.cpp	/^breakPartialRegDependency(MachineBasicBlock::iterator MI, unsigned OpNum,$/;"	f	class:X86InstrInfo
bu_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bu_ls_rr_sort(RegReductionPQBase *spq) : SPQ(spq) {}$/;"	f	struct:__anon77::bu_ls_rr_sort
bu_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bu_ls_rr_sort(const bu_ls_rr_sort &RHS) : SPQ(RHS.SPQ) {}$/;"	f	struct:__anon77::bu_ls_rr_sort
bu_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^struct bu_ls_rr_sort : public queue_sort {$/;"	s	namespace:__anon77	file:
bucket_count	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    uint32_t   bucket_count;    \/\/ The number of buckets in this hash table.$/;"	m	struct:llvm::DwarfAccelTable::TableHeader
buff	Target/NVPTX/NVPTXAsmPrinter.h	/^  char buff[512];$/;"	m	class:llvm::LineReader
buffer	Target/NVPTX/NVPTXAsmPrinter.h	/^    unsigned char *buffer; \/\/ the buffer$/;"	m	class:llvm::NVPTXAsmPrinter::AggBuffer
bufferAggregateConstant	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::bufferAggregateConstant(Constant *CPV,$/;"	f	class:NVPTXAsmPrinter
bufferLEByte	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::bufferLEByte(Constant *CPV, int Bytes,$/;"	f	class:NVPTXAsmPrinter
build	CodeGen/RegAllocPBQP.cpp	/^std::auto_ptr<PBQPRAProblem> PBQPBuilder::build(MachineFunction *mf,$/;"	f	class:PBQPBuilder
build	CodeGen/RegAllocPBQP.cpp	/^std::auto_ptr<PBQPRAProblem> PBQPBuilderWithCoalescing::build($/;"	f	class:PBQPBuilderWithCoalescing
buildAddressRangeTable	DebugInfo/DWARFCompileUnit.cpp	/^DWARFCompileUnit::buildAddressRangeTable(DWARFDebugAranges *debug_aranges,$/;"	f	class:DWARFCompileUnit
buildAddressRangeTable	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::buildAddressRangeTable(const DWARFCompileUnit *CU,$/;"	f	class:DWARFDebugInfoEntryMinimal
buildCFGChains	CodeGen/MachineBlockPlacement.cpp	/^void MachineBlockPlacement::buildCFGChains(MachineFunction &F) {$/;"	f	class:MachineBlockPlacement
buildChain	CodeGen/MachineBlockPlacement.cpp	/^void MachineBlockPlacement::buildChain($/;"	f	class:MachineBlockPlacement
buildDAGWithRegPressure	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::buildDAGWithRegPressure() {$/;"	f	class:ScheduleDAGMI
buildDepMap	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::buildDepMap($/;"	f	class:__anon604::BBVectorize
buildEdge	Analysis/PathNumbering.cpp	/^void BallLarusDag::buildEdge(BLBlockNodeMap& inDag, std::stack<BallLarusNode*>&$/;"	f	class:BallLarusDag
buildEdgeLookupTable	Transforms/Instrumentation/GCOVProfiling.cpp	/^GlobalVariable *GCOVProfiler::buildEdgeLookupTable($/;"	f	class:GCOVProfiler
buildExtractionBlockSet	Transforms/Utils/CodeExtractor.cpp	/^buildExtractionBlockSet(ArrayRef<BasicBlock *> BBs) {$/;"	f	file:
buildExtractionBlockSet	Transforms/Utils/CodeExtractor.cpp	/^buildExtractionBlockSet(const RegionNode &RN) {$/;"	f	file:
buildExtractionBlockSet	Transforms/Utils/CodeExtractor.cpp	/^static SetVector<BasicBlock *> buildExtractionBlockSet(IteratorT BBBegin,$/;"	f	file:
buildFromShuffleMostly	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::buildFromShuffleMostly(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
buildFunctionRefs	Analysis/PathProfileInfo.cpp	/^void PathProfileLoaderPass::buildFunctionRefs (Module &M) {$/;"	f	class:PathProfileLoaderPass
buildGEP	Transforms/Scalar/SROA.cpp	/^static Value *buildGEP(IRBuilder<> &IRB, Value *BasePtr,$/;"	f	file:
buildInitialTreeFor	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::buildInitialTreeFor($/;"	f	class:__anon604::BBVectorize
buildLoopChains	CodeGen/MachineBlockPlacement.cpp	/^void MachineBlockPlacement::buildLoopChains(MachineFunction &F,$/;"	f	class:MachineBlockPlacement
buildMinimalMultiplyDAG	Transforms/Scalar/Reassociate.cpp	/^Value *Reassociate::buildMinimalMultiplyDAG(IRBuilder<> &Builder,$/;"	f	class:Reassociate
buildMultiplyTree	Transforms/Scalar/Reassociate.cpp	/^static Value *buildMultiplyTree(IRBuilder<> &Builder,$/;"	f	file:
buildNode	Analysis/PathNumbering.cpp	/^void BallLarusDag::buildNode(BLBlockNodeMap& inDag, BLNodeStack& dfsStack) {$/;"	f	class:BallLarusDag
buildRegionsTree	Analysis/RegionInfo.cpp	/^void RegionInfo::buildRegionsTree(DomTreeNode *N, Region *region) {$/;"	f	class:RegionInfo
buildSchedGraph	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::buildSchedGraph(AliasAnalysis *AA,$/;"	f	class:ScheduleDAGInstrs
builder	CodeGen/RegAllocPBQP.cpp	/^  std::auto_ptr<PBQPBuilder> builder;$/;"	m	class:__anon135::RegAllocPBQP	file:
bumpCycle	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::SchedBoundary::bumpCycle() {$/;"	f	class:ConvergingScheduler::SchedBoundary
bumpCycle	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::SchedBoundary::bumpCycle() {$/;"	f	class:ConvergingVLIWScheduler::SchedBoundary
bumpDownwardPressure	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::bumpDownwardPressure(const MachineInstr *MI) {$/;"	f	class:RegPressureTracker
bumpNode	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::SchedBoundary::bumpNode(SUnit *SU) {$/;"	f	class:ConvergingScheduler::SchedBoundary
bumpNode	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::SchedBoundary::bumpNode(SUnit *SU) {$/;"	f	class:ConvergingVLIWScheduler::SchedBoundary
bumpUpwardPressure	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::bumpUpwardPressure(const MachineInstr *MI) {$/;"	f	class:RegPressureTracker
bundleCFG	Target/X86/X86FloatingPoint.cpp	/^void FPS::bundleCFG(MachineFunction &MF) {$/;"	f	class:FPS
bundles	CodeGen/SpillPlacement.h	/^  const EdgeBundles *bundles;$/;"	m	class:llvm::SpillPlacement
byAreaDesc	CodeGen/MachineLoopRanges.cpp	/^int MachineLoopRange::byAreaDesc(const void *pa, const void *pb) {$/;"	f	class:MachineLoopRange
byNumber	CodeGen/MachineLoopRanges.cpp	/^int MachineLoopRange::byNumber(const void *pa, const void *pb) {$/;"	f	class:MachineLoopRange
bypassSlowDivision	Transforms/Utils/BypassSlowDivision.cpp	/^bool llvm::bypassSlowDivision(Function &F,$/;"	f	class:llvm
byteBlock	MC/MCDisassembler/EDMain.cpp	/^  EDByteBlock_t byteBlock;$/;"	m	struct:ByteReaderWrapper	file:
byteReader_t	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^typedef int (*byteReader_t)(const void* arg, uint8_t* byte, uint64_t address);$/;"	t
byteSize	MC/MCDisassembler/EDInst.cpp	/^uint64_t EDInst::byteSize() {$/;"	f	class:EDInst
byteSwap	Support/APInt.cpp	/^APInt APInt::byteSwap() const {$/;"	f	class:APInt
c_str	Support/Windows/Windows.h	/^c_str(SmallVectorImpl<T> &str) {$/;"	f	namespace:llvm
cacheAnnotationFromMD	Target/NVPTX/NVPTXUtilities.cpp	/^static void cacheAnnotationFromMD(const MDNode *md, key_val_pair_t &retval) {$/;"	f	file:
cacheAnnotationFromMD	Target/NVPTX/NVPTXUtilities.cpp	/^static void cacheAnnotationFromMD(const Module *m, const GlobalValue *gv) {$/;"	f	file:
calcAnticInOut	CodeGen/ShrinkWrapping.cpp	/^bool PEI::calcAnticInOut(MachineBasicBlock* MBB) {$/;"	f	class:PEI
calcAvailInOut	CodeGen/ShrinkWrapping.cpp	/^bool PEI::calcAvailInOut(MachineBasicBlock* MBB) {$/;"	f	class:PEI
calcCompactRegion	CodeGen/RegAllocGreedy.cpp	/^bool RAGreedy::calcCompactRegion(GlobalSplitCandidate &Cand) {$/;"	f	class:RAGreedy
calcFloatingPointHeuristics	Analysis/BranchProbabilityInfo.cpp	/^bool BranchProbabilityInfo::calcFloatingPointHeuristics(BasicBlock *BB) {$/;"	f	class:BranchProbabilityInfo
calcGapWeights	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::calcGapWeights(unsigned PhysReg,$/;"	f	class:RAGreedy
calcGlobalSplitCost	CodeGen/RegAllocGreedy.cpp	/^float RAGreedy::calcGlobalSplitCost(GlobalSplitCandidate &Cand) {$/;"	f	class:RAGreedy
calcInvokeHeuristics	Analysis/BranchProbabilityInfo.cpp	/^bool BranchProbabilityInfo::calcInvokeHeuristics(BasicBlock *BB) {$/;"	f	class:BranchProbabilityInfo
calcLiveBlockInfo	CodeGen/SplitKit.cpp	/^bool SplitAnalysis::calcLiveBlockInfo() {$/;"	f	class:SplitAnalysis
calcLiveInMask	Target/X86/X86FloatingPoint.cpp	/^    unsigned calcLiveInMask(MachineBasicBlock *MBB) {$/;"	f	struct:__anon386::FPS	file:
calcLoopBranchHeuristics	Analysis/BranchProbabilityInfo.cpp	/^bool BranchProbabilityInfo::calcLoopBranchHeuristics(BasicBlock *BB) {$/;"	f	class:BranchProbabilityInfo
calcMaxScratches	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static unsigned calcMaxScratches(const SUnit *SU) {$/;"	f	file:
calcMetadataWeights	Analysis/BranchProbabilityInfo.cpp	/^bool BranchProbabilityInfo::calcMetadataWeights(BasicBlock *BB) {$/;"	f	class:BranchProbabilityInfo
calcNumMI	Target/ARM/Thumb1RegisterInfo.cpp	/^static unsigned calcNumMI(int Opc, int ExtraOpc, unsigned Bytes,$/;"	f	file:
calcPointerHeuristics	Analysis/BranchProbabilityInfo.cpp	/^bool BranchProbabilityInfo::calcPointerHeuristics(BasicBlock *BB) {$/;"	f	class:BranchProbabilityInfo
calcRegsPassed	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::calcRegsPassed() {$/;"	f	class:MachineVerifier
calcRegsRequired	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::calcRegsRequired() {$/;"	f	class:MachineVerifier
calcRestorePlacements	CodeGen/ShrinkWrapping.cpp	/^bool PEI::calcRestorePlacements(MachineBasicBlock* MBB,$/;"	f	class:PEI
calcSpillCost	CodeGen/RegAllocFast.cpp	/^unsigned RAFast::calcSpillCost(unsigned PhysReg) const {$/;"	f	class:RAFast
calcSpillCost	CodeGen/RegAllocGreedy.cpp	/^float RAGreedy::calcSpillCost() {$/;"	f	class:RAGreedy
calcSpillPlacements	CodeGen/ShrinkWrapping.cpp	/^bool PEI::calcSpillPlacements(MachineBasicBlock* MBB,$/;"	f	class:PEI
calcUnreachableHeuristics	Analysis/BranchProbabilityInfo.cpp	/^bool BranchProbabilityInfo::calcUnreachableHeuristics(BasicBlock *BB) {$/;"	f	class:BranchProbabilityInfo
calcZeroHeuristics	Analysis/BranchProbabilityInfo.cpp	/^bool BranchProbabilityInfo::calcZeroHeuristics(BasicBlock *BB) {$/;"	f	class:BranchProbabilityInfo
calculate	Analysis/DominanceFrontier.cpp	/^DominanceFrontier::calculate(const DominatorTree &DT,$/;"	f	class:DominanceFrontier
calculateAnticAvail	CodeGen/ShrinkWrapping.cpp	/^void PEI::calculateAnticAvail(MachineFunction &Fn) {$/;"	f	class:PEI
calculateCalleeSavedRegisters	CodeGen/PrologEpilogInserter.cpp	/^void PEI::calculateCalleeSavedRegisters(MachineFunction &Fn) {$/;"	f	class:PEI
calculateCallsInformation	CodeGen/PrologEpilogInserter.cpp	/^void PEI::calculateCallsInformation(MachineFunction &Fn) {$/;"	f	class:PEI
calculateChordIncrements	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::calculateChordIncrements() {$/;"	f	class:BLInstrumentationDag
calculateChordIncrementsDfs	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::calculateChordIncrementsDfs(long weight,$/;"	f	class:BLInstrumentationDag
calculateChordIncrementsDir	Transforms/Instrumentation/PathProfiling.cpp	/^int BLInstrumentationDag::calculateChordIncrementsDir(BallLarusEdge* e,$/;"	f	class:BLInstrumentationDag
calculateFrameObjectOffsets	CodeGen/LocalStackSlotAllocation.cpp	/^void LocalStackSlotPass::calculateFrameObjectOffsets(MachineFunction &Fn) {$/;"	f	class:LocalStackSlotPass
calculateFrameObjectOffsets	CodeGen/PrologEpilogInserter.cpp	/^void PEI::calculateFrameObjectOffsets(MachineFunction &Fn) {$/;"	f	class:PEI
calculateLiveIntervals	CodeGen/StackColoring.cpp	/^void StackColoring::calculateLiveIntervals(unsigned NumSlots) {$/;"	f	class:StackColoring
calculateLocalLiveness	CodeGen/StackColoring.cpp	/^void StackColoring::calculateLocalLiveness() {$/;"	f	class:StackColoring
calculatePathNumbers	Analysis/PathNumbering.cpp	/^void BallLarusDag::calculatePathNumbers() {$/;"	f	class:BallLarusDag
calculatePathNumbersFrom	Analysis/PathNumbering.cpp	/^void BallLarusDag::calculatePathNumbersFrom(BallLarusNode* node) {$/;"	f	class:BallLarusDag
calculateRegClassAndHint	CodeGen/LiveRangeEdit.cpp	/^void LiveRangeEdit::calculateRegClassAndHint(MachineFunction &MF,$/;"	f	class:LiveRangeEdit
calculateSets	CodeGen/ShrinkWrapping.cpp	/^bool PEI::calculateSets(MachineFunction &Fn) {$/;"	f	class:PEI
calculateSpanningTree	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::calculateSpanningTree() {$/;"	f	class:BLInstrumentationDag
calculateValues	CodeGen/LiveRangeCalc.cpp	/^void LiveRangeCalc::calculateValues() {$/;"	f	class:LiveRangeCalc
callCapturesBefore	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::callCapturesBefore(const Instruction *I,$/;"	f	class:AliasAnalysis
callExternalFunction	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^GenericValue Interpreter::callExternalFunction(Function *F,$/;"	f	class:Interpreter
callFunction	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::callFunction(Function *F,$/;"	f	class:Interpreter
callIsSmall	Analysis/CodeMetrics.cpp	/^bool llvm::callIsSmall(ImmutableCallSite CS) {$/;"	f	class:llvm
callIsStructReturn	Target/X86/X86ISelLowering.cpp	/^callIsStructReturn(const SmallVectorImpl<ISD::OutputArg> &Outs) {$/;"	f	file:
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::MemCpyChkOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::MemMoveChkOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::MemSetChkOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::StrCatOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::StrChrOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::StrCmpOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::StrCpyChkOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::StrCpyOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::StrNCatOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::StrNCmpOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::StrNCpyChkOpt
callOptimizer	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual Value *callOptimizer(Function *Callee, CallInst *CI, IRBuilder<> &B) {$/;"	f	struct:__anon473::StrRChrOpt
callsFunctionThatReturnsTwice	VMCore/Function.cpp	/^bool Function::callsFunctionThatReturnsTwice() const {$/;"	f	class:Function
canAddPseudoFlagDep	Target/ARM/Thumb2SizeReduction.cpp	/^Thumb2SizeReduce::canAddPseudoFlagDep(MachineInstr *Def, MachineInstr *Use,$/;"	f	class:Thumb2SizeReduce
canBasicBlockModify	Analysis/AliasAnalysis.cpp	/^bool AliasAnalysis::canBasicBlockModify(const BasicBlock &BB,$/;"	f	class:AliasAnalysis
canBeFeederToNewValueJump	Target/Hexagon/HexagonNewValueJump.cpp	/^static bool canBeFeederToNewValueJump(const HexagonInstrInfo *QII,$/;"	f	file:
canBeMerged	VMCore/Metadata.cpp	/^static bool canBeMerged(const ConstantRange &A, const ConstantRange &B) {$/;"	f	file:
canCauseFpMLxStall	Target/ARM/ARMBaseInstrInfo.h	/^  bool canCauseFpMLxStall(unsigned Opcode) const {$/;"	f	class:llvm::ARMBaseInstrInfo
canChangeToInt	Target/ARM/ARMISelLowering.cpp	/^static bool canChangeToInt(SDValue Op, bool &SeenZero,$/;"	f	file:
canClobber	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^bool RegReductionPQBase::canClobber(const SUnit *SU, const SUnit *Op) {$/;"	f	class:RegReductionPQBase
canClobberPhysRegDefs	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool canClobberPhysRegDefs(const SUnit *SuccSU, const SUnit *SU,$/;"	f	file:
canClobberReachingPhysRegUse	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool canClobberReachingPhysRegUse(const SUnit *DepSU, const SUnit *SU,$/;"	f	file:
canCombineSubRegIndices	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::canCombineSubRegIndices(const TargetRegisterClass *RC,$/;"	f	class:ARMBaseRegisterInfo
canCompareBeNewValueJump	Target/Hexagon/HexagonNewValueJump.cpp	/^static bool canCompareBeNewValueJump(const HexagonInstrInfo *QII,$/;"	f	file:
canCompletelyDuplicateBB	CodeGen/TailDuplication.cpp	/^TailDuplicatePass::canCompletelyDuplicateBB(MachineBasicBlock &BB) {$/;"	f	class:TailDuplicatePass
canConstantEvolve	Analysis/ScalarEvolution.cpp	/^static bool canConstantEvolve(Instruction *I, const Loop *L) {$/;"	f	file:
canConstantFoldCallTo	Analysis/ConstantFolding.cpp	/^llvm::canConstantFoldCallTo(const Function *F) {$/;"	f	class:llvm
canConvertIf	CodeGen/EarlyIfConversion.cpp	/^bool SSAIfConv::canConvertIf(MachineBasicBlock *MBB) {$/;"	f	class:SSAIfConv
canConvertValue	Transforms/Scalar/SROA.cpp	/^static bool canConvertValue(const DataLayout &DL, Type *OldTy, Type *NewTy) {$/;"	f	file:
canDemoteGlobalVar	Target/NVPTX/NVPTXAsmPrinter.cpp	/^static bool canDemoteGlobalVar(const GlobalVariable *gv, Function const *&f) {$/;"	f	file:
canEnableCoalescing	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool canEnableCoalescing(SUnit *SU) {$/;"	f	file:
canEvictInterference	CodeGen/RegAllocGreedy.cpp	/^bool RAGreedy::canEvictInterference(LiveInterval &VirtReg, unsigned PhysReg,$/;"	f	class:RAGreedy
canExpandBackedgeTakenCount	Transforms/Scalar/IndVarSimplify.cpp	/^static bool canExpandBackedgeTakenCount(Loop *L, ScalarEvolution *SE) {$/;"	f	file:
canFallThrough	CodeGen/MachineBasicBlock.cpp	/^bool MachineBasicBlock::canFallThrough() {$/;"	f	class:MachineBasicBlock
canFallThroughTo	CodeGen/IfConversion.cpp	/^static bool canFallThroughTo(MachineBasicBlock *BB, MachineBasicBlock *ToBB) {$/;"	f	file:
canFitInBitfield	TableGen/Record.cpp	/^static bool canFitInBitfield(int64_t Value, unsigned NumBits) {$/;"	f	file:
canFoldCopy	CodeGen/TargetInstrInfoImpl.cpp	/^static const TargetRegisterClass *canFoldCopy(const MachineInstr *MI,$/;"	f	file:
canFoldIVIncExpr	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool canFoldIVIncExpr(const SCEV *IncExpr, Instruction *UserInst,$/;"	f	file:
canFoldInAddressingMode	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static bool canFoldInAddressingMode(SDNode *N, SDNode *Use,$/;"	f	file:
canFoldIntoMOVCC	Target/ARM/ARMBaseInstrInfo.cpp	/^static MachineInstr *canFoldIntoMOVCC(unsigned Reg,$/;"	f	file:
canFoldMemoryOperand	CodeGen/TargetInstrInfoImpl.cpp	/^canFoldMemoryOperand(const MachineInstr *MI,$/;"	f	class:TargetInstrInfoImpl
canFoldMemoryOperand	Target/X86/X86InstrInfo.cpp	/^bool X86InstrInfo::canFoldMemoryOperand(const MachineInstr *MI,$/;"	f	class:X86InstrInfo
canHandle	Transforms/Scalar/EarlyCSE.cpp	/^    static bool canHandle(Instruction *Inst) {$/;"	f	struct:__anon564::SimpleValue
canHandle	Transforms/Scalar/EarlyCSE.cpp	/^    static bool canHandle(Instruction *Inst) {$/;"	f	struct:__anon565::CallValue
canInsertSelect	Target/X86/X86InstrInfo.cpp	/^canInsertSelect(const MachineBasicBlock &MBB,$/;"	f	class:X86InstrInfo
canInstructionRangeModify	Analysis/AliasAnalysis.cpp	/^bool AliasAnalysis::canInstructionRangeModify(const Instruction &I1,$/;"	f	class:AliasAnalysis
canJoinPhys	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::canJoinPhys(CoalescerPair &CP) {$/;"	f	class:RegisterCoalescer
canLosslesslyBitCastTo	VMCore/Type.cpp	/^bool Type::canLosslesslyBitCastTo(Type *Ty) const {$/;"	f	class:Type
canMoveUsesOfIAfterJ	Transforms/Vectorize/BBVectorize.cpp	/^  bool BBVectorize::canMoveUsesOfIAfterJ(BasicBlock &BB,$/;"	f	class:__anon604::BBVectorize
canOpTrap	CodeGen/SelectionDAG/TargetLowering.cpp	/^bool TargetLowering::canOpTrap(unsigned Op, EVT VT) const {$/;"	f	class:TargetLowering
canRealignStack	Target/ARM/ARMBaseRegisterInfo.cpp	/^bool ARMBaseRegisterInfo::canRealignStack(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
canRealignStack	Target/X86/X86RegisterInfo.cpp	/^bool X86RegisterInfo::canRealignStack(const MachineFunction &MF) const {$/;"	f	class:X86RegisterInfo
canRematerializeAt	CodeGen/LiveRangeEdit.cpp	/^bool LiveRangeEdit::canRematerializeAt(Remat &RM,$/;"	f	class:LiveRangeEdit
canReserveResources	CodeGen/DFAPacketizer.cpp	/^bool DFAPacketizer::canReserveResources(const llvm::MCInstrDesc *MID) {$/;"	f	class:DFAPacketizer
canReserveResources	CodeGen/DFAPacketizer.cpp	/^bool DFAPacketizer::canReserveResources(llvm::MachineInstr *MI) {$/;"	f	class:DFAPacketizer
canReserveResourcesForConstExt	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::canReserveResourcesForConstExt(MachineInstr *MI) {$/;"	f	class:HexagonPacketizerList
canSimplifyCallFramePseudos	Target/ARM/ARMFrameLowering.cpp	/^ARMFrameLowering::canSimplifyCallFramePseudos(const MachineFunction &MF) const {$/;"	f	class:ARMFrameLowering
canSinkOrHoistInst	Transforms/Scalar/LICM.cpp	/^bool LICM::canSinkOrHoistInst(Instruction &I) {$/;"	f	class:LICM
canSpeculateInstrs	CodeGen/EarlyIfConversion.cpp	/^bool SSAIfConv::canSpeculateInstrs(MachineBasicBlock *MBB) {$/;"	f	class:SSAIfConv
canTrap	VMCore/Constants.cpp	/^bool Constant::canTrap() const {$/;"	f	class:Constant
canTurnIntoImplicitDef	CodeGen/ProcessImplicitDefs.cpp	/^bool ProcessImplicitDefs::canTurnIntoImplicitDef(MachineInstr *MI) {$/;"	f	class:ProcessImplicitDefs
canVectorizeBlock	Transforms/Vectorize/LoopVectorize.cpp	/^bool LoopVectorizationLegality::canVectorizeBlock(BasicBlock &BB) {$/;"	f	class:__anon605::LoopVectorizationLegality
canVectorizeMemory	Transforms/Vectorize/LoopVectorize.cpp	/^bool LoopVectorizationLegality::canVectorizeMemory(BasicBlock &BB) {$/;"	f	class:__anon605::LoopVectorizationLegality
cannotEliminateFrame	Target/ARM/ARMBaseRegisterInfo.cpp	/^cannotEliminateFrame(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
captured	Analysis/AliasAnalysis.cpp	/^    bool captured(Use *U) {$/;"	f	struct:__anon21::CapturesBefore
captured	Analysis/CaptureTracking.cpp	/^    bool captured(Use *U) {$/;"	f	struct:__anon10::SimpleCaptureTracker
captured	Transforms/IPO/FunctionAttrs.cpp	/^    bool captured(Use *U) {$/;"	f	struct:__anon579::ArgumentUsesTracker
captured	Transforms/Scalar/TailRecursionElimination.cpp	/^  bool captured(Use *U) {$/;"	f	struct:AllocaCaptureTracker
castIsValid	VMCore/Instructions.cpp	/^CastInst::castIsValid(Instruction::CastOps op, Value *S, Type *DstTy) {$/;"	f	class:CastInst
cat_t	Support/regex2.h	/^typedef unsigned char cat_t;$/;"	t
categories	Support/regex2.h	/^	cat_t *categories;	\/* ->catspace[-CHAR_MIN] *\/$/;"	m	struct:re_guts
categorize	Support/regcomp.c	/^categorize(struct parse *p, struct re_guts *g)$/;"	f	file:
categorizeModuleFlagNodes	Linker/LinkModules.cpp	/^categorizeModuleFlagNodes(const NamedMDNode *ModFlags,$/;"	f	class:ModuleLinker
catspace	Support/regex2.h	/^	cat_t catspace[1];	\/* actually [NC] *\/$/;"	m	struct:re_guts
cclass	Support/regcclass.h	/^static struct cclass {$/;"	s
cclasses	Support/regcclass.h	/^} cclasses[] = {$/;"	v	typeref:struct:cclass
ceilingOfQuotient	Analysis/DependenceAnalysis.cpp	/^APInt ceilingOfQuotient(APInt A, APInt B) {$/;"	f	file:
cflags	Support/regex2.h	/^	int cflags;		\/* copy of llvm_regcomp() cflags argument *\/$/;"	m	struct:re_guts
changeColor	Support/raw_ostream.cpp	/^raw_ostream &raw_fd_ostream::changeColor(enum Colors colors, bool bold,$/;"	f	class:raw_fd_ostream
changeExtendedVectorElementTypeToInteger	VMCore/ValueTypes.cpp	/^EVT EVT::changeExtendedVectorElementTypeToInteger() const {$/;"	f	class:EVT
changeSign	Support/APFloat.cpp	/^APFloat::changeSign()$/;"	f	class:APFloat
changeToCall	Transforms/Scalar/SimplifyCFGPass.cpp	/^static void changeToCall(InvokeInst *II) {$/;"	f	file:
changeToUnreachable	Transforms/Scalar/SimplifyCFGPass.cpp	/^static void changeToUnreachable(Instruction *I, bool UseLLVMTrap) {$/;"	f	file:
change_ty	Support/DAGDeltaAlgorithm.cpp	/^  typedef DAGDeltaAlgorithm::change_ty change_ty;$/;"	t	class:__anon233::DAGDeltaAlgorithmImpl	file:
changedSince	CodeGen/LiveIntervalUnion.h	/^  bool changedSince(unsigned tag) const { return tag != Tag; }$/;"	f	class:llvm::LiveIntervalUnion
changeset_ty	Support/DAGDeltaAlgorithm.cpp	/^  typedef DAGDeltaAlgorithm::changeset_ty changeset_ty;$/;"	t	class:__anon233::DAGDeltaAlgorithmImpl	file:
changesetlist_ty	Support/DAGDeltaAlgorithm.cpp	/^  typedef DAGDeltaAlgorithm::changesetlist_ty changesetlist_ty;$/;"	t	class:__anon233::DAGDeltaAlgorithmImpl	file:
chars	Support/regcclass.h	/^	const char *chars;$/;"	m	struct:cclass
checkAddr	Object/COFFObjectFile.cpp	/^bool checkAddr(const MemoryBuffer *m,$/;"	f	namespace:__anon230
checkAndUpdateEFLAGSKill	Target/X86/X86ISelLowering.cpp	/^static bool checkAndUpdateEFLAGSKill(MachineBasicBlock::iterator SelectItr,$/;"	f	file:
checkBoolTestSetCCCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue checkBoolTestSetCCCombine(SDValue Cmp, X86::CondCode &CC) {$/;"	f	file:
checkCSEInPredecessor	Transforms/Utils/SimplifyCFG.cpp	/^static bool checkCSEInPredecessor(Instruction *Inst, BasicBlock *PB) {$/;"	f	file:
checkDstSubscript	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::checkDstSubscript(const SCEV *Dst,$/;"	f	class:DependenceAnalysis
checkFnHasLiveInYmm	Target/X86/X86VZeroUpper.cpp	/^static bool checkFnHasLiveInYmm(MachineRegisterInfo &MRI) {$/;"	f	file:
checkForCycles	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void llvm::checkForCycles(const llvm::SDNode *N) {$/;"	f	class:llvm
checkForCycles	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void llvm::checkForCycles(const llvm::SelectionDAG *DAG) {$/;"	f	class:llvm
checkForCyclesHelper	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void checkForCyclesHelper(const SDNode *N,$/;"	f	file:
checkForGarbageImpl	VMCore/LeakDetector.cpp	/^void LeakDetector::checkForGarbageImpl(LLVMContext &Context, $/;"	f	class:LeakDetector
checkForOProfileProcEntry	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^bool OProfileWrapper::checkForOProfileProcEntry() {$/;"	f	class:llvm::OProfileWrapper
checkHazard	CodeGen/MachineScheduler.cpp	/^bool ConvergingScheduler::SchedBoundary::checkHazard(SUnit *SU) {$/;"	f	class:ConvergingScheduler::SchedBoundary
checkHazard	Target/Hexagon/HexagonMachineScheduler.cpp	/^bool ConvergingVLIWScheduler::SchedBoundary::checkHazard(SUnit *SU) {$/;"	f	class:ConvergingVLIWScheduler::SchedBoundary
checkInterfaceFunction	Transforms/Instrumentation/AddressSanitizer.cpp	/^Function *AddressSanitizer::checkInterfaceFunction(Constant *FuncOrBitcast) {$/;"	f	class:AddressSanitizer
checkInterfaceFunction	Transforms/Instrumentation/ThreadSanitizer.cpp	/^static Function *checkInterfaceFunction(Constant *FuncOrBitcast) {$/;"	f	file:
checkInterference	CodeGen/LiveIntervalUnion.h	/^    bool checkInterference() { return collectInterferingVRegs(1); }$/;"	f	class:llvm::LiveIntervalUnion::Query
checkInterference	CodeGen/LiveRegMatrix.cpp	/^LiveRegMatrix::checkInterference(LiveInterval &VirtReg, unsigned PhysReg) {$/;"	f	class:LiveRegMatrix
checkLiveness	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::checkLiveness(const MachineOperand *MO, unsigned MONum) {$/;"	f	class:MachineVerifier
checkLoopInterference	CodeGen/LiveIntervalUnion.cpp	/^bool LiveIntervalUnion::Query::checkLoopInterference(MachineLoopRange *Loop) {$/;"	f	class:LiveIntervalUnion::Query
checkLowRegisterList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static bool checkLowRegisterList(MCInst Inst, unsigned OpNo, unsigned Reg,$/;"	f	file:
checkName	TableGen/Record.cpp	/^void Record::checkName() {$/;"	f	class:Record
checkNumAlignedDPRCS2Regs	Target/ARM/ARMFrameLowering.cpp	/^static void checkNumAlignedDPRCS2Regs(MachineFunction &MF) {$/;"	f	file:
checkPHIOps	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::checkPHIOps(const MachineBasicBlock *MBB) {$/;"	f	class:MachineVerifier
checkRegMaskInterference	CodeGen/LiveIntervalAnalysis.cpp	/^bool LiveIntervals::checkRegMaskInterference(LiveInterval &LI,$/;"	f	class:LiveIntervals
checkRegMaskInterference	CodeGen/LiveRegMatrix.cpp	/^bool LiveRegMatrix::checkRegMaskInterference(LiveInterval &VirtReg,$/;"	f	class:LiveRegMatrix
checkRegUnitInterference	CodeGen/LiveRegMatrix.cpp	/^bool LiveRegMatrix::checkRegUnitInterference(LiveInterval &VirtReg,$/;"	f	class:LiveRegMatrix
checkRematerializable	CodeGen/LiveRangeEdit.cpp	/^bool LiveRangeEdit::checkRematerializable(VNInfo *VNI,$/;"	f	class:LiveRangeEdit
checkSchedLimit	CodeGen/MachineScheduler.cpp	/^bool ScheduleDAGMI::checkSchedLimit() {$/;"	f	class:ScheduleDAGMI
checkSignature	Archive/ArchiveInternals.h	/^    bool checkSignature() const {$/;"	f	class:llvm::ArchiveMemberHeader
checkSignature	Archive/ArchiveReader.cpp	/^Archive::checkSignature(std::string* error) {$/;"	f	class:Archive
checkSize	Object/COFFObjectFile.cpp	/^bool checkSize(const MemoryBuffer *m, error_code &ec, uint64_t size) {$/;"	f	namespace:__anon230
checkSpecialNodes	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static int checkSpecialNodes(const SUnit *left, const SUnit *right) {$/;"	f	file:
checkSrcSubscript	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::checkSrcSubscript(const SCEV *Src,$/;"	f	class:DependenceAnalysis
checkTargetMatchPredicate	Target/ARM/AsmParser/ARMAsmParser.cpp	/^unsigned ARMAsmParser::checkTargetMatchPredicate(MCInst &Inst) {$/;"	f	class:ARMAsmParser
checkType	VMCore/Value.cpp	/^static inline Type *checkType(Type *Ty) {$/;"	f	file:
childGeneration	Transforms/Scalar/EarlyCSE.cpp	/^    unsigned childGeneration() { return ChildGeneration; }$/;"	f	class:__anon566::EarlyCSE::StackNode
childGeneration	Transforms/Scalar/EarlyCSE.cpp	/^    void childGeneration(unsigned generation) { ChildGeneration = generation; }$/;"	f	class:__anon566::EarlyCSE::StackNode
childIter	Transforms/Scalar/EarlyCSE.cpp	/^    DomTreeNode::iterator childIter() { return ChildIter; }$/;"	f	class:__anon566::EarlyCSE::StackNode
child_begin	Transforms/IPO/FunctionAttrs.cpp	/^    static inline ChildIteratorType child_begin(NodeType *N) {$/;"	f	struct:llvm::GraphTraits
child_end	Transforms/IPO/FunctionAttrs.cpp	/^    static inline ChildIteratorType child_end(NodeType *N) {$/;"	f	struct:llvm::GraphTraits
chooseInstructionsToInstrument	Transforms/Instrumentation/ThreadSanitizer.cpp	/^void ThreadSanitizer::chooseInstructionsToInstrument($/;"	f	class:ThreadSanitizer
choosePairs	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::choosePairs($/;"	f	class:__anon604::BBVectorize
cl	Support/CommandLine.cpp	/^namespace llvm { namespace cl {$/;"	n	namespace:llvm	file:
clEnumValEnd	Target/NVPTX/NVPTXSubtarget.cpp	/^                    clEnumValEnd),$/;"	m	namespace:__anon315	file:
class_file_name	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    char*               class_file_name;        $/;"	m	struct:_iJIT_Method_Load
class_id	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int        class_id;               $/;"	m	struct:_iJIT_Method_Load
classifyPair	Analysis/DependenceAnalysis.cpp	/^DependenceAnalysis::classifyPair(const SCEV *Src, const Loop *SrcLoopNest,$/;"	f	class:DependenceAnalysis
classof	Analysis/ScalarEvolution.cpp	/^bool SCEVCouldNotCompute::classof(const SCEV *S) {$/;"	f	class:SCEVCouldNotCompute
classof	Bitcode/Reader/BitcodeReader.cpp	/^    static bool classof(const Value *V) {$/;"	f	class:llvm::__anon55::ConstantPlaceHolder
classof	CodeGen/AsmPrinter/DIE.h	/^    static bool classof(const DIEValue *D) { return D->getType() == isDelta; }$/;"	f	class:llvm::DIEDelta
classof	CodeGen/AsmPrinter/DIE.h	/^    static bool classof(const DIEValue *E) { return E->getType() == isBlock; }$/;"	f	class:llvm::DIEBlock
classof	CodeGen/AsmPrinter/DIE.h	/^    static bool classof(const DIEValue *E) { return E->getType() == isEntry; }$/;"	f	class:llvm::DIEEntry
classof	CodeGen/AsmPrinter/DIE.h	/^    static bool classof(const DIEValue *I) { return I->getType() == isInteger; }$/;"	f	class:llvm::DIEInteger
classof	CodeGen/AsmPrinter/DIE.h	/^    static bool classof(const DIEValue *L) { return L->getType() == isLabel; }$/;"	f	class:llvm::DIELabel
classof	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^  static inline bool classof($/;"	f	class:__anon180::DyldELFObject
classof	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^  static inline bool classof(const Binary *v) {$/;"	f	class:__anon180::DyldELFObject
classof	Target/ARM/ARMConstantPoolValue.h	/^  static bool classof(const ARMConstantPoolValue *ACPV) {$/;"	f	class:llvm::ARMConstantPoolMBB
classof	Target/ARM/ARMConstantPoolValue.h	/^  static bool classof(const ARMConstantPoolValue *ACPV) {$/;"	f	class:llvm::ARMConstantPoolSymbol
classof	Target/ARM/ARMConstantPoolValue.h	/^  static bool classof(const ARMConstantPoolValue *APV) {$/;"	f	class:llvm::ARMConstantPoolConstant
classof	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  static bool classof(const MCExpr *E) {$/;"	f	class:llvm::ARMMCExpr
cleanUpMemory	Archive/Archive.cpp	/^void Archive::cleanUpMemory() {$/;"	f	class:Archive
cleanseInlinedVariable	VMCore/DebugInfo.cpp	/^DIVariable llvm::cleanseInlinedVariable(MDNode *DV, LLVMContext &VMContext) {$/;"	f	class:llvm
cleanup	Transforms/Vectorize/LoopVectorize.cpp	/^void SingleBlockLoopVectorizer::cleanup() {$/;"	f	class:__anon605::SingleBlockLoopVectorizer
cleanup	VMCore/PassManager.cpp	/^void FPPassManager::cleanup() {$/;"	f	class:FPPassManager
cleanupGlobalSets	Transforms/Scalar/GVN.cpp	/^void GVN::cleanupGlobalSets() {$/;"	f	class:GVN
clear	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::clear() {$/;"	f	class:AliasSetTracker
clear	Analysis/LazyValueInfo.cpp	/^    void clear() {$/;"	f	class:__anon20::LazyValueInfoCache
clear	Analysis/ScalarEvolution.cpp	/^void ScalarEvolution::BackedgeTakenInfo::clear() {$/;"	f	class:ScalarEvolution::BackedgeTakenInfo
clear	Bitcode/Reader/BitcodeReader.h	/^  void clear()                { MDValuePtrs.clear();  }$/;"	f	class:llvm::BitcodeReaderMDValueList
clear	Bitcode/Reader/BitcodeReader.h	/^  void clear() {$/;"	f	class:llvm::BitcodeReaderValueList
clear	CodeGen/ExecutionDepsFix.cpp	/^  void clear() {$/;"	f	struct:__anon118::DomainValue
clear	CodeGen/GCMetadata.cpp	/^void GCModuleInfo::clear() {$/;"	f	class:GCModuleInfo
clear	CodeGen/InterferenceCache.h	/^    void clear(MachineFunction *mf, SlotIndexes *indexes, LiveIntervals *lis) {$/;"	f	class:llvm::InterferenceCache::Entry
clear	CodeGen/LiveDebugVariables.cpp	/^  void clear() {$/;"	f	class:__anon153::LDVImpl
clear	CodeGen/LiveIntervalUnion.cpp	/^void LiveIntervalUnion::Array::clear() {$/;"	f	class:LiveIntervalUnion::Array
clear	CodeGen/LiveIntervalUnion.h	/^    void clear() {$/;"	f	class:llvm::LiveIntervalUnion::Query
clear	CodeGen/LiveIntervalUnion.h	/^  void clear() { Segments.clear(); ++Tag; }$/;"	f	class:llvm::LiveIntervalUnion
clear	CodeGen/ScheduleDAGInstrs.cpp	/^void Reg2SUnitsMap::clear() {$/;"	f	class:Reg2SUnitsMap
clear	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^void FunctionLoweringInfo::clear() {$/;"	f	class:FunctionLoweringInfo
clear	CodeGen/SelectionDAG/SDNodeOrdering.h	/^  void clear() {$/;"	f	class:llvm::SDNodeOrdering
clear	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::clear() {$/;"	f	class:SelectionDAG
clear	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::clear() {$/;"	f	class:SelectionDAGBuilder
clear	CodeGen/SpillPlacement.cpp	/^  void clear() {$/;"	f	struct:SpillPlacement::Node
clear	CodeGen/SplitKit.cpp	/^void SplitAnalysis::clear() {$/;"	f	class:SplitAnalysis
clear	DebugInfo/DWARFCompileUnit.cpp	/^void DWARFCompileUnit::clear() {$/;"	f	class:DWARFCompileUnit
clear	DebugInfo/DWARFDebugAbbrev.h	/^  void clear() {$/;"	f	class:llvm::DWARFAbbreviationDeclarationSet
clear	DebugInfo/DWARFDebugArangeSet.cpp	/^void DWARFDebugArangeSet::clear() {$/;"	f	class:DWARFDebugArangeSet
clear	DebugInfo/DWARFDebugAranges.h	/^    void clear() {$/;"	f	struct:llvm::DWARFDebugAranges::Range
clear	DebugInfo/DWARFDebugAranges.h	/^  void clear() { Aranges.clear(); }$/;"	f	class:llvm::DWARFDebugAranges
clear	DebugInfo/DWARFDebugLine.h	/^    void clear() {$/;"	f	struct:llvm::DWARFDebugLine::LineTable
clear	DebugInfo/DWARFDebugLine.h	/^    void clear() {$/;"	f	struct:llvm::DWARFDebugLine::Prologue
clear	DebugInfo/DWARFDebugRangeList.cpp	/^void DWARFDebugRangeList::clear() {$/;"	f	class:DWARFDebugRangeList
clear	ExecutionEngine/ExecutionEngine.cpp	/^  void clear() {$/;"	f	class:__anon200::ArgvArray
clear	Support/FoldingSet.cpp	/^void FoldingSetImpl::clear() {$/;"	f	class:FoldingSetImpl
clear	Transforms/Scalar/GVN.cpp	/^void ValueTable::clear() {$/;"	f	class:ValueTable
clear	Transforms/Scalar/LoopStrengthReduce.cpp	/^void RegUseTracker::clear() {$/;"	f	class:RegUseTracker
clear	Transforms/Scalar/ObjCARC.cpp	/^    void clear() {$/;"	f	class:__anon498::MapVector
clear	Transforms/Scalar/ObjCARC.cpp	/^    void clear() {$/;"	f	class:__anon503::ProvenanceAnalysis
clear	Transforms/Scalar/ObjCARC.cpp	/^void RRInfo::clear() {$/;"	f	class:RRInfo
clear	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    void clear() {$/;"	f	class:__anon469::LargeBlockInfo
clear	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    void clear() {$/;"	f	struct:__anon469::AllocaInfo
clear	VMCore/LeaksContext.h	/^  void clear() {$/;"	f	struct:llvm::LeakDetectorImpl
clear	VMCore/TypeFinder.cpp	/^void TypeFinder::clear() {$/;"	f	class:TypeFinder
clearAllGlobalMappings	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::clearAllGlobalMappings() {$/;"	f	class:ExecutionEngine
clearAllSets	CodeGen/ShrinkWrapping.cpp	/^void PEI::clearAllSets() {$/;"	f	class:PEI
clearAllVirt	CodeGen/VirtRegMap.h	/^    void clearAllVirt() {$/;"	f	class:llvm::VirtRegMap
clearAnticAvailSets	CodeGen/ShrinkWrapping.cpp	/^void PEI::clearAnticAvailSets() {$/;"	f	class:PEI
clearBit	Support/APInt.cpp	/^void APInt::clearBit(unsigned bitPosition) {$/;"	f	class:APInt
clearBottomUpPointers	Transforms/Scalar/ObjCARC.cpp	/^    void clearBottomUpPointers() {$/;"	f	class:__anon507::BBState
clearColors	Analysis/PathNumbering.cpp	/^void BallLarusDag::clearColors(BallLarusNode::NodeColor color) {$/;"	f	class:BallLarusDag
clearDAG	CodeGen/ScheduleDAG.cpp	/^void ScheduleDAG::clearDAG() {$/;"	f	class:ScheduleDAG
clearDIEs	DebugInfo/DWARFCompileUnit.cpp	/^void DWARFCompileUnit::clearDIEs(bool keep_compile_unit_die) {$/;"	f	class:DWARFCompileUnit
clearDanglingDebugInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::clearDanglingDebugInfo() {$/;"	f	class:SelectionDAGBuilder
clearError	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  void clearError() { HasError = false; }$/;"	f	class:llvm::RuntimeDyldImpl
clearGC	VMCore/Function.cpp	/^void Function::clearGC() {$/;"	f	class:Function
clearGarbage	VMCore/LeakDetector.cpp	/^static void clearGarbage(LLVMContext &Context) {$/;"	f	file:
clearGlobalMappingsFromModule	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::clearGlobalMappingsFromModule(Module *M) {$/;"	f	class:ExecutionEngine
clearGraphAttrs	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^void SelectionDAG::clearGraphAttrs() {$/;"	f	class:SelectionDAG
clearKillFlags	CodeGen/MachineRegisterInfo.cpp	/^void MachineRegisterInfo::clearKillFlags(unsigned Reg) const {$/;"	f	class:MachineRegisterInfo
clearKillInfo	CodeGen/MachineInstr.cpp	/^void MachineInstr::clearKillInfo() {$/;"	f	class:MachineInstr
clearMetadataHashEntries	VMCore/Metadata.cpp	/^void Instruction::clearMetadataHashEntries() {$/;"	f	class:Instruction
clearNodeCache	Analysis/RegionInfo.cpp	/^void Region::clearNodeCache() {$/;"	f	class:Region
clearPointerToBasicBlock	ExecutionEngine/JIT/JIT.cpp	/^void JIT::clearPointerToBasicBlock(const BasicBlock *BB) {$/;"	f	class:JIT
clearRegisterKills	CodeGen/MachineInstr.cpp	/^void MachineInstr::clearRegisterKills(unsigned Reg,$/;"	f	class:MachineInstr
clearSign	Support/APFloat.cpp	/^APFloat::clearSign()$/;"	f	class:APFloat
clearStack	Target/ARM/MLxExpansionPass.cpp	/^void MLxExpansion::clearStack() {$/;"	f	class:MLxExpansion
clearTopDownPointers	Transforms/Scalar/ObjCARC.cpp	/^    void clearTopDownPointers() {$/;"	f	class:__anon507::BBState
clearVirt	CodeGen/VirtRegMap.h	/^    void clearVirt(unsigned virtReg) {$/;"	f	class:llvm::VirtRegMap
clearVirtRegs	CodeGen/MachineRegisterInfo.cpp	/^void MachineRegisterInfo::clearVirtRegs() {$/;"	f	class:MachineRegisterInfo
clk_channel_type	Target/NVPTX/cl_common_defines.h	/^typedef enum clk_channel_type {$/;"	g
clk_channel_type	Target/NVPTX/cl_common_defines.h	/^}clk_channel_type;$/;"	t	typeref:enum:clk_channel_type
clk_sampler_type	Target/NVPTX/cl_common_defines.h	/^typedef enum clk_sampler_type {$/;"	g
clk_sampler_type	Target/NVPTX/cl_common_defines.h	/^} clk_sampler_type;$/;"	t	typeref:enum:clk_sampler_type
clone	VMCore/Instruction.cpp	/^Instruction *Instruction::clone() const {$/;"	f	class:Instruction
cloneBasicBlockAnalysis	Transforms/Scalar/LICM.cpp	/^void LICM::cloneBasicBlockAnalysis(BasicBlock *From, BasicBlock *To, Loop *L) {$/;"	f	class:LICM
cloneBasicBlockSimpleAnalysis	Analysis/LoopPass.cpp	/^void LPPassManager::cloneBasicBlockSimpleAnalysis(BasicBlock *From,$/;"	f	class:LPPassManager
cloneData	Transforms/Scalar/LoopUnswitch.cpp	/^void LUAnalysisCache::cloneData(const Loop* NewLoop, const Loop* OldLoop,$/;"	f	class:LUAnalysisCache
clone_impl	VMCore/Instructions.cpp	/^AllocaInst *AllocaInst::clone_impl() const {$/;"	f	class:AllocaInst
clone_impl	VMCore/Instructions.cpp	/^AtomicCmpXchgInst *AtomicCmpXchgInst::clone_impl() const {$/;"	f	class:AtomicCmpXchgInst
clone_impl	VMCore/Instructions.cpp	/^AtomicRMWInst *AtomicRMWInst::clone_impl() const {$/;"	f	class:AtomicRMWInst
clone_impl	VMCore/Instructions.cpp	/^BinaryOperator *BinaryOperator::clone_impl() const {$/;"	f	class:BinaryOperator
clone_impl	VMCore/Instructions.cpp	/^BitCastInst *BitCastInst::clone_impl() const {$/;"	f	class:BitCastInst
clone_impl	VMCore/Instructions.cpp	/^BranchInst *BranchInst::clone_impl() const {$/;"	f	class:BranchInst
clone_impl	VMCore/Instructions.cpp	/^CallInst *CallInst::clone_impl() const {$/;"	f	class:CallInst
clone_impl	VMCore/Instructions.cpp	/^ExtractElementInst *ExtractElementInst::clone_impl() const {$/;"	f	class:ExtractElementInst
clone_impl	VMCore/Instructions.cpp	/^ExtractValueInst *ExtractValueInst::clone_impl() const {$/;"	f	class:ExtractValueInst
clone_impl	VMCore/Instructions.cpp	/^FCmpInst* FCmpInst::clone_impl() const {$/;"	f	class:FCmpInst
clone_impl	VMCore/Instructions.cpp	/^FPExtInst *FPExtInst::clone_impl() const {$/;"	f	class:FPExtInst
clone_impl	VMCore/Instructions.cpp	/^FPToSIInst *FPToSIInst::clone_impl() const {$/;"	f	class:FPToSIInst
clone_impl	VMCore/Instructions.cpp	/^FPToUIInst *FPToUIInst::clone_impl() const {$/;"	f	class:FPToUIInst
clone_impl	VMCore/Instructions.cpp	/^FPTruncInst *FPTruncInst::clone_impl() const {$/;"	f	class:FPTruncInst
clone_impl	VMCore/Instructions.cpp	/^FenceInst *FenceInst::clone_impl() const {$/;"	f	class:FenceInst
clone_impl	VMCore/Instructions.cpp	/^GetElementPtrInst *GetElementPtrInst::clone_impl() const {$/;"	f	class:GetElementPtrInst
clone_impl	VMCore/Instructions.cpp	/^ICmpInst* ICmpInst::clone_impl() const {$/;"	f	class:ICmpInst
clone_impl	VMCore/Instructions.cpp	/^IndirectBrInst *IndirectBrInst::clone_impl() const {$/;"	f	class:IndirectBrInst
clone_impl	VMCore/Instructions.cpp	/^InsertElementInst *InsertElementInst::clone_impl() const {$/;"	f	class:InsertElementInst
clone_impl	VMCore/Instructions.cpp	/^InsertValueInst *InsertValueInst::clone_impl() const {$/;"	f	class:InsertValueInst
clone_impl	VMCore/Instructions.cpp	/^IntToPtrInst *IntToPtrInst::clone_impl() const {$/;"	f	class:IntToPtrInst
clone_impl	VMCore/Instructions.cpp	/^InvokeInst *InvokeInst::clone_impl() const {$/;"	f	class:InvokeInst
clone_impl	VMCore/Instructions.cpp	/^LandingPadInst *LandingPadInst::clone_impl() const {$/;"	f	class:LandingPadInst
clone_impl	VMCore/Instructions.cpp	/^LoadInst *LoadInst::clone_impl() const {$/;"	f	class:LoadInst
clone_impl	VMCore/Instructions.cpp	/^PHINode *PHINode::clone_impl() const {$/;"	f	class:PHINode
clone_impl	VMCore/Instructions.cpp	/^PtrToIntInst *PtrToIntInst::clone_impl() const {$/;"	f	class:PtrToIntInst
clone_impl	VMCore/Instructions.cpp	/^ResumeInst *ResumeInst::clone_impl() const {$/;"	f	class:ResumeInst
clone_impl	VMCore/Instructions.cpp	/^ReturnInst *ReturnInst::clone_impl() const {$/;"	f	class:ReturnInst
clone_impl	VMCore/Instructions.cpp	/^SExtInst *SExtInst::clone_impl() const {$/;"	f	class:SExtInst
clone_impl	VMCore/Instructions.cpp	/^SIToFPInst *SIToFPInst::clone_impl() const {$/;"	f	class:SIToFPInst
clone_impl	VMCore/Instructions.cpp	/^SelectInst *SelectInst::clone_impl() const {$/;"	f	class:SelectInst
clone_impl	VMCore/Instructions.cpp	/^ShuffleVectorInst *ShuffleVectorInst::clone_impl() const {$/;"	f	class:ShuffleVectorInst
clone_impl	VMCore/Instructions.cpp	/^StoreInst *StoreInst::clone_impl() const {$/;"	f	class:StoreInst
clone_impl	VMCore/Instructions.cpp	/^SwitchInst *SwitchInst::clone_impl() const {$/;"	f	class:SwitchInst
clone_impl	VMCore/Instructions.cpp	/^TruncInst *TruncInst::clone_impl() const {$/;"	f	class:TruncInst
clone_impl	VMCore/Instructions.cpp	/^UIToFPInst *UIToFPInst::clone_impl() const {$/;"	f	class:UIToFPInst
clone_impl	VMCore/Instructions.cpp	/^UnreachableInst *UnreachableInst::clone_impl() const {$/;"	f	class:UnreachableInst
clone_impl	VMCore/Instructions.cpp	/^VAArgInst *VAArgInst::clone_impl() const {$/;"	f	class:VAArgInst
clone_impl	VMCore/Instructions.cpp	/^ZExtInst *ZExtInst::clone_impl() const {$/;"	f	class:ZExtInst
close	Support/raw_ostream.cpp	/^void raw_fd_ostream::close() {$/;"	f	class:raw_fd_ostream
closeBottom	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::closeBottom() {$/;"	f	class:RegPressureTracker
closeRegion	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::closeRegion() {$/;"	f	class:RegPressureTracker
closeTop	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::closeTop() {$/;"	f	class:RegPressureTracker
closestSucc	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static unsigned closestSucc(const SUnit *SU) {$/;"	f	file:
cname	Support/regcname.h	/^static struct cname {$/;"	s
cnames	Support/regcname.h	/^} cnames[] = {$/;"	v	typeref:struct:cname
coalesceLocation	CodeGen/LiveDebugVariables.cpp	/^void UserValue::coalesceLocation(unsigned LocNo) {$/;"	f	class:UserValue
coalesceStackAccess	CodeGen/InlineSpiller.cpp	/^bool InlineSpiller::coalesceStackAccess(MachineInstr *MI, unsigned Reg) {$/;"	f	class:InlineSpiller
code	Support/regcname.h	/^	char code;$/;"	m	struct:cname
code	Support/regerror.c	/^	int code;$/;"	m	struct:rerr	file:
collapse	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::collapse(DomainValue *dv, unsigned domain) {$/;"	f	class:ExeDepsFix
collect	CodeGen/RegisterPressure.cpp	/^  void collect(const MachineOperand &MO, const TargetRegisterInfo *TRI) {$/;"	f	struct:RegisterOperands
collectCoeffInfo	Analysis/DependenceAnalysis.cpp	/^DependenceAnalysis::collectCoeffInfo(const SCEV *Subscript,$/;"	f	class:DependenceAnalysis
collectCommonLoops	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::collectCommonLoops(const SCEV *Expression,$/;"	f	class:DependenceAnalysis
collectConstantUpperBound	Analysis/DependenceAnalysis.cpp	/^const SCEVConstant *DependenceAnalysis::collectConstantUpperBound(const Loop *L,$/;"	f	class:DependenceAnalysis
collectDebugValues	CodeGen/LiveDebugVariables.cpp	/^bool LDVImpl::collectDebugValues(MachineFunction &mf) {$/;"	f	class:LDVImpl
collectDebugValues	CodeGen/MachineSink.cpp	/^static void collectDebugValues(MachineInstr *MI,$/;"	f	file:
collectFailStats	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^static void collectFailStats(const Instruction *I) {$/;"	f	file:
collectInfoFromNamedMDNodes	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::collectInfoFromNamedMDNodes(Module *M) {$/;"	f	class:DwarfDebug
collectInterferingVRegs	CodeGen/LiveIntervalUnion.cpp	/^collectInterferingVRegs(unsigned MaxInterferingRegs) {$/;"	f	class:LiveIntervalUnion::Query
collectLastUses	VMCore/PassManager.cpp	/^void PMTopLevelManager::collectLastUses(SmallVectorImpl<Pass *> &LastUses,$/;"	f	class:PMTopLevelManager
collectLegacyDebugInfo	CodeGen/AsmPrinter/DwarfDebug.cpp	/^bool DwarfDebug::collectLegacyDebugInfo(Module *M) {$/;"	f	class:DwarfDebug
collectLineCounts	VMCore/GCOV.cpp	/^void GCOVBlock::collectLineCounts(FileInfo &FI) {$/;"	f	class:GCOVBlock
collectLineCounts	VMCore/GCOV.cpp	/^void GCOVFile::collectLineCounts(FileInfo &FI) {$/;"	f	class:GCOVFile
collectLineCounts	VMCore/GCOV.cpp	/^void GCOVFunction::collectLineCounts(FileInfo &FI) {$/;"	f	class:GCOVFunction
collectLineCounts	VMCore/GCOV.cpp	/^void GCOVLines::collectLineCounts(FileInfo &FI, StringRef Filename, $/;"	f	class:GCOVLines
collectLoadMoveSet	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::collectLoadMoveSet(BasicBlock &BB,$/;"	f	class:__anon604::BBVectorize
collectMarkers	CodeGen/StackColoring.cpp	/^unsigned StackColoring::collectMarkers(unsigned NumSlot) {$/;"	f	class:StackColoring
collectMultiplyFactors	Transforms/Scalar/Reassociate.cpp	/^bool Reassociate::collectMultiplyFactors(SmallVectorImpl<ValueEntry> &Ops,$/;"	f	class:Reassociate
collectOperands	CodeGen/RegisterPressure.cpp	/^static void collectOperands(const MachineInstr *MI,$/;"	f	file:
collectPairLoadMoveSet	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::collectPairLoadMoveSet(BasicBlock &BB,$/;"	f	class:__anon604::BBVectorize
collectPtrInfo	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::collectPtrInfo(std::vector<Value *> &PairableInsts,$/;"	f	class:__anon604::BBVectorize
collectRegsToSpill	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::collectRegsToSpill() {$/;"	f	class:InlineSpiller
collectRequiredAnalysis	VMCore/PassManager.cpp	/^void PMDataManager::collectRequiredAnalysis(SmallVectorImpl<Pass *> &RP,$/;"	f	class:PMDataManager
collectTiedOperands	CodeGen/TwoAddressInstructionPass.cpp	/^collectTiedOperands(MachineInstr *MI, TiedOperandMap &TiedOperands) {$/;"	f	class:TwoAddressInstructionPass
collectUpperBound	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::collectUpperBound(const Loop *L,$/;"	f	class:DependenceAnalysis
collectVariableInfo	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DwarfDebug::collectVariableInfo(const MachineFunction *MF,$/;"	f	class:DwarfDebug
collectVariableInfoFromMMITable	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DwarfDebug::collectVariableInfoFromMMITable(const MachineFunction *MF,$/;"	f	class:DwarfDebug
colon	TableGen/TGLexer.h	/^    colon, semi,        \/\/ : ;$/;"	e	enum:llvm::tgtok::TokKind
combine	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::combine(SDNode *N) {$/;"	f	class:DAGCombiner
combineLostFractions	Support/APFloat.cpp	/^combineLostFractions(lostFraction moreSignificant,$/;"	f	file:
combineMetadata	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::combineMetadata(Instruction *K, const Instruction *J) {$/;"	f	class:__anon604::BBVectorize
combineSelectAndUse	Target/ARM/ARMISelLowering.cpp	/^SDValue combineSelectAndUse(SDNode *N, SDValue Slct, SDValue OtherOp,$/;"	f	file:
combineSelectAndUseCommutative	Target/ARM/ARMISelLowering.cpp	/^SDValue combineSelectAndUseCommutative(SDNode *N, bool AllOnes,$/;"	f	file:
combineShlAddConstant	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue combineShlAddConstant(DebugLoc DL, SDValue N0, SDValue N1,$/;"	f	file:
comma	AsmParser/LLToken.h	/^    equal, comma,      \/\/ =  ,$/;"	e	enum:llvm::lltok::Kind
comma	TableGen/TGLexer.h	/^    comma, period,      \/\/ , .$/;"	e	enum:llvm::tgtok::TokKind
commit	Support/FileOutputBuffer.cpp	/^error_code FileOutputBuffer::commit(int64_t NewSmallerSize) {$/;"	f	class:llvm::FileOutputBuffer
commonCastTransforms	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::commonCastTransforms(CastInst &CI) {$/;"	f	class:InstCombiner
commonChecksToProhibitNewValueJump	Target/Hexagon/HexagonNewValueJump.cpp	/^static bool commonChecksToProhibitNewValueJump(bool afterRA,$/;"	f	file:
commonIDivTransforms	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::commonIDivTransforms(BinaryOperator &I) {$/;"	f	class:InstCombiner
commonIRemTransforms	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::commonIRemTransforms(BinaryOperator &I) {$/;"	f	class:InstCombiner
commonPointerCastTransforms	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::commonPointerCastTransforms(CastInst &CI) {$/;"	f	class:InstCombiner
commonShiftTransforms	Transforms/InstCombine/InstCombineShifts.cpp	/^Instruction *InstCombiner::commonShiftTransforms(BinaryOperator &I) {$/;"	f	class:InstCombiner
commuteInstruction	CodeGen/TargetInstrInfoImpl.cpp	/^MachineInstr *TargetInstrInfoImpl::commuteInstruction(MachineInstr *MI,$/;"	f	class:TargetInstrInfoImpl
commuteInstruction	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::commuteInstruction(MachineInstr *MI, bool NewMI) const {$/;"	f	class:ARMBaseInstrInfo
commuteInstruction	Target/PowerPC/PPCInstrInfo.cpp	/^PPCInstrInfo::commuteInstruction(MachineInstr *MI, bool NewMI) const {$/;"	f	class:PPCInstrInfo
commuteInstruction	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::commuteInstruction(MachineInstr *MI, bool NewMI) const {$/;"	f	class:X86InstrInfo
commuteShuffle	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static void commuteShuffle(SDValue &N1, SDValue &N2, SmallVectorImpl<int> &M) {$/;"	f	file:
compact	DebugInfo/DWARFDebugArangeSet.cpp	/^void DWARFDebugArangeSet::compact() {$/;"	f	class:DWARFDebugArangeSet
compare	Analysis/ScalarEvolution.cpp	/^    int compare(const SCEV *LHS, const SCEV *RHS) const {$/;"	f	class:__anon30::SCEVComplexityCompare
compare	Support/APFloat.cpp	/^APFloat::compare(const APFloat &rhs) const$/;"	f	class:APFloat
compare	Transforms/IPO/MergeFunctions.cpp	/^bool FunctionComparator::compare() {$/;"	f	class:FunctionComparator
compare	Transforms/IPO/MergeFunctions.cpp	/^bool FunctionComparator::compare(const BasicBlock *BB1, const BasicBlock *BB2) {$/;"	f	class:FunctionComparator
compareAbsoluteValue	Support/APFloat.cpp	/^APFloat::compareAbsoluteValue(const APFloat &rhs) const$/;"	f	class:APFloat
compareBySuffix	MC/ELFObjectWriter.cpp	/^static int compareBySuffix(const void *a, const void *b) {$/;"	f	file:
compareDIEs	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^static bool compareDIEs(const DwarfAccelTable::HashDataContents *A,$/;"	f	file:
compareRPDelta	CodeGen/MachineScheduler.cpp	/^static bool compareRPDelta(const RegPressureDelta &LHS,$/;"	f	file:
compare_lower	Support/StringRef.cpp	/^int StringRef::compare_lower(StringRef RHS) const {$/;"	f	class:StringRef
compare_numeric	Support/StringRef.cpp	/^int StringRef::compare_numeric(StringRef RHS) const {$/;"	f	class:StringRef
compatibility	Target/ARM/ARMBuildAttrs.h	/^    compatibility             = 32,$/;"	e	enum:ARMBuildAttrs::AttrType
compose	CodeGen/RegisterCoalescer.cpp	/^static unsigned compose(const TargetRegisterInfo &tri, unsigned a, unsigned b) {$/;"	f	file:
compress	Support/IntEqClasses.cpp	/^void IntEqClasses::compress() {$/;"	f	class:IntEqClasses
compute	Analysis/MemoryBuiltins.cpp	/^SizeOffsetEvalType ObjectSizeOffsetEvaluator::compute(Value *V) {$/;"	f	class:ObjectSizeOffsetEvaluator
compute	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::compute(Value *V) {$/;"	f	class:ObjectSizeOffsetVisitor
compute	CodeGen/RegisterClassInfo.cpp	/^void RegisterClassInfo::compute(const TargetRegisterClass *RC) const {$/;"	f	class:RegisterClassInfo
computeArraySize	Analysis/MemoryBuiltins.cpp	/^static Value *computeArraySize(const CallInst *CI, const DataLayout *TD,$/;"	f	file:
computeAssignment	CodeGen/RegisterCoalescer.cpp	/^void JoinVals::computeAssignment(unsigned ValNo, JoinVals &Other) {$/;"	f	class:JoinVals
computeBlockDisposition	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::computeBlockDisposition(const SCEV *S, const BasicBlock *BB) {$/;"	f	class:ScalarEvolution
computeBlockSize	Target/ARM/ARMConstantIslandPass.cpp	/^void ARMConstantIslands::computeBlockSize(MachineBasicBlock *MBB) {$/;"	f	class:ARMConstantIslands
computeBytesPoppedByCallee	Target/X86/X86FastISel.cpp	/^static unsigned computeBytesPoppedByCallee(const X86Subtarget &Subtarget,$/;"	f	file:
computeConnectedPairs	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::computeConnectedPairs($/;"	f	class:__anon604::BBVectorize
computeConstantGEPOffset	Transforms/Scalar/SROA.cpp	/^  bool computeConstantGEPOffset(GetElementPtrInst &GEPI, int64_t &GEPOffset) {$/;"	f	class:AllocaPartitioning::BuilderBase
computeCrossBlockCriticalPath	CodeGen/MachineTraceMetrics.cpp	/^computeCrossBlockCriticalPath(const TraceBlockInfo &TBI) {$/;"	f	class:MachineTraceMetrics::Ensemble
computeDefOperandLatency	CodeGen/TargetInstrInfoImpl.cpp	/^int TargetInstrInfo::computeDefOperandLatency($/;"	f	class:TargetInstrInfo
computeDepthResources	CodeGen/MachineTraceMetrics.cpp	/^computeDepthResources(const MachineBasicBlock *MBB) {$/;"	f	class:MachineTraceMetrics::Ensemble
computeExcessPressureDelta	CodeGen/RegisterPressure.cpp	/^static void computeExcessPressureDelta(ArrayRef<unsigned> OldPressureVec,$/;"	f	file:
computeFragmentSize	MC/MCAssembler.cpp	/^uint64_t MCAssembler::computeFragmentSize(const MCAsmLayout &Layout,$/;"	f	class:MCAssembler
computeHeightResources	CodeGen/MachineTraceMetrics.cpp	/^computeHeightResources(const MachineBasicBlock *MBB) {$/;"	f	class:MachineTraceMetrics::Ensemble
computeILP	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGILP::computeILP(const SUnit *Root) {$/;"	f	class:ScheduleDAGILP
computeInstrDepths	CodeGen/MachineTraceMetrics.cpp	/^computeInstrDepths(const MachineBasicBlock *MBB) {$/;"	f	class:MachineTraceMetrics::Ensemble
computeInstrHeights	CodeGen/MachineTraceMetrics.cpp	/^computeInstrHeights(const MachineBasicBlock *MBB) {$/;"	f	class:MachineTraceMetrics::Ensemble
computeInstrLatency	CodeGen/TargetSchedule.cpp	/^unsigned TargetSchedModel::computeInstrLatency(const MachineInstr *MI) const {$/;"	f	class:TargetSchedModel
computeIntervals	CodeGen/LiveDebugVariables.cpp	/^UserValue::computeIntervals(MachineRegisterInfo &MRI,$/;"	f	class:UserValue
computeIntervals	CodeGen/LiveDebugVariables.cpp	/^void LDVImpl::computeIntervals() {$/;"	f	class:LDVImpl
computeIntervals	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::computeIntervals() {$/;"	f	class:LiveIntervals
computeLastSplitPoint	CodeGen/SplitKit.cpp	/^SlotIndex SplitAnalysis::computeLastSplitPoint(unsigned Num) {$/;"	f	class:SplitAnalysis
computeLatency	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::computeLatency(SUnit *SU) {$/;"	f	class:ScheduleDAGSDNodes
computeLiveInRegUnits	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::computeLiveInRegUnits() {$/;"	f	class:LiveIntervals
computeLoopDisposition	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::computeLoopDisposition(const SCEV *S, const Loop *L) {$/;"	f	class:ScalarEvolution
computeMaskedBitsForTargetNode	CodeGen/SelectionDAG/TargetLowering.cpp	/^void TargetLowering::computeMaskedBitsForTargetNode(const SDValue Op,$/;"	f	class:TargetLowering
computeMaskedBitsForTargetNode	Target/ARM/ARMISelLowering.cpp	/^void ARMTargetLowering::computeMaskedBitsForTargetNode(const SDValue Op,$/;"	f	class:ARMTargetLowering
computeMaskedBitsForTargetNode	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::computeMaskedBitsForTargetNode(const SDValue Op,$/;"	f	class:SPUTargetLowering
computeMaskedBitsForTargetNode	Target/PowerPC/PPCISelLowering.cpp	/^void PPCTargetLowering::computeMaskedBitsForTargetNode(const SDValue Op,$/;"	f	class:PPCTargetLowering
computeMaskedBitsForTargetNode	Target/Sparc/SparcISelLowering.cpp	/^void SparcTargetLowering::computeMaskedBitsForTargetNode(const SDValue Op,$/;"	f	class:SparcTargetLowering
computeMaskedBitsForTargetNode	Target/X86/X86ISelLowering.cpp	/^void X86TargetLowering::computeMaskedBitsForTargetNode(const SDValue Op,$/;"	f	class:X86TargetLowering
computeMaskedBitsForTargetNode	Target/XCore/XCoreISelLowering.cpp	/^void XCoreTargetLowering::computeMaskedBitsForTargetNode(const SDValue Op,$/;"	f	class:XCoreTargetLowering
computeMaskedBitsLoad	Analysis/ValueTracking.cpp	/^void llvm::computeMaskedBitsLoad(const MDNode &Ranges, APInt &KnownZero) {$/;"	f	class:llvm
computeMaxPressureDelta	CodeGen/RegisterPressure.cpp	/^static void computeMaxPressureDelta(ArrayRef<unsigned> OldMaxPressureVec,$/;"	f	file:
computeOffset	Target/Mips/MipsLongBranch.cpp	/^int64_t MipsLongBranch::computeOffset(const MachineInstr *Br) {$/;"	f	class:MipsLongBranch
computeOperandLatency	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::computeOperandLatency(SDNode *Def, SDNode *Use,$/;"	f	class:ScheduleDAGSDNodes
computeOperandLatency	CodeGen/TargetInstrInfoImpl.cpp	/^computeOperandLatency(const InstrItineraryData *ItinData,$/;"	f	class:TargetInstrInfo
computeOperandLatency	CodeGen/TargetSchedule.cpp	/^unsigned TargetSchedModel::computeOperandLatency($/;"	f	class:TargetSchedModel
computeOutputLatency	CodeGen/TargetSchedule.cpp	/^computeOutputLatency(const MachineInstr *DefMI, unsigned DefOperIdx,$/;"	f	class:TargetSchedModel
computePairsConnectedTo	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::computePairsConnectedTo($/;"	f	class:__anon604::BBVectorize
computePointerDifference	Analysis/InstructionSimplify.cpp	/^static Constant *computePointerDifference(const DataLayout &TD,$/;"	f	file:
computePointerICmp	Analysis/InstructionSimplify.cpp	/^static Constant *computePointerICmp(const DataLayout &TD,$/;"	f	file:
computeRegArea	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::computeRegArea(CCState &CCInfo, MachineFunction &MF,$/;"	f	class:ARMTargetLowering
computeRegMasks	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::computeRegMasks() {$/;"	f	class:LiveIntervals
computeRegUnitInterval	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::computeRegUnitInterval(LiveInterval *LI) {$/;"	f	class:LiveIntervals
computeRegisterLiveness	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::computeRegisterLiveness(const TargetRegisterInfo *TRI,$/;"	f	class:MachineBasicBlock
computeRegisterProperties	CodeGen/SelectionDAG/TargetLowering.cpp	/^void TargetLowering::computeRegisterProperties() {$/;"	f	class:TargetLowering
computeRelocation	Target/ARM/ARMELFWriterInfo.cpp	/^long int ARMELFWriterInfo::computeRelocation(unsigned SymOffset,$/;"	f	class:ARMELFWriterInfo
computeRelocation	Target/MBlaze/MBlazeELFWriterInfo.cpp	/^long int MBlazeELFWriterInfo::computeRelocation(unsigned SymOffset,$/;"	f	class:MBlazeELFWriterInfo
computeRelocation	Target/Mips/MipsELFWriterInfo.cpp	/^long int MipsELFWriterInfo::computeRelocation(unsigned SymOffset,$/;"	f	class:MipsELFWriterInfo
computeRelocation	Target/X86/X86ELFWriterInfo.cpp	/^long int X86ELFWriterInfo::computeRelocation(unsigned SymOffset,$/;"	f	class:X86ELFWriterInfo
computeSCEVAtScope	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::computeSCEVAtScope(const SCEV *V, const Loop *L) {$/;"	f	class:ScalarEvolution
computeSectionAddresses	MC/MachObjectWriter.cpp	/^void MachObjectWriter::computeSectionAddresses(const MCAssembler &Asm,$/;"	f	class:MachObjectWriter
computeSectionKind	MC/MCParser/ELFAsmParser.cpp	/^static SectionKind computeSectionKind(unsigned Flags) {$/;"	f	file:
computeSizeAndOffset	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DwarfDebug::computeSizeAndOffset(DIE *Die, unsigned Offset, bool Last) {$/;"	f	class:DwarfDebug
computeSizeAndOffsets	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::computeSizeAndOffsets() {$/;"	f	class:DwarfDebug
computeState	Target/X86/X86VZeroUpper.cpp	/^    static unsigned computeState(unsigned PrevState, unsigned CurState) {$/;"	f	struct:__anon382::VZeroUpperInserter	file:
computeTrace	CodeGen/MachineTraceMetrics.cpp	/^void MachineTraceMetrics::Ensemble::computeTrace(const MachineBasicBlock *MBB) {$/;"	f	class:MachineTraceMetrics::Ensemble
computeTypeMapping	Linker/LinkModules.cpp	/^void ModuleLinker::computeTypeMapping() {$/;"	f	class:ModuleLinker
computeVirtRegInterval	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::computeVirtRegInterval(LiveInterval *LI) {$/;"	f	class:LiveIntervals
computeVirtRegs	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::computeVirtRegs() {$/;"	f	class:LiveIntervals
computeWriteLanes	CodeGen/RegisterCoalescer.cpp	/^unsigned JoinVals::computeWriteLanes(const MachineInstr *DefMI, bool &Redef) {$/;"	f	class:JoinVals
compute_	Analysis/MemoryBuiltins.cpp	/^SizeOffsetEvalType ObjectSizeOffsetEvaluator::compute_(Value *V) {$/;"	f	class:ObjectSizeOffsetEvaluator
concatenateMemOperands	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static void concatenateMemOperands(MachineInstr *MI, MachineInstr *Op0,$/;"	f	file:
conformance	Target/ARM/ARMBuildAttrs.h	/^    conformance               = 67,$/;"	e	enum:ARMBuildAttrs::AttrType
const_iterator	Transforms/Scalar/LoopStrengthReduce.cpp	/^  typedef SmallVectorImpl<IVInc>::const_iterator const_iterator;$/;"	t	struct:__anon518::IVChain	file:
const_iterator	Transforms/Scalar/LoopStrengthReduce.cpp	/^  typedef SmallVectorImpl<const SCEV *>::const_iterator const_iterator;$/;"	t	class:__anon513::RegUseTracker	file:
const_iterator	Transforms/Scalar/MemCpyOptimizer.cpp	/^  typedef std::list<MemsetRange>::const_iterator const_iterator;$/;"	t	class:__anon574::MemsetRanges	file:
const_iterator	Transforms/Scalar/ObjCARC.cpp	/^    typedef typename VectorTy::const_iterator const_iterator;$/;"	t	class:__anon498::MapVector	file:
const_iterator	Transforms/Scalar/SROA.cpp	/^  typedef SmallVectorImpl<Partition>::const_iterator const_iterator;$/;"	t	class:__anon557::AllocaPartitioning	file:
const_use_iterator	Transforms/Scalar/SROA.cpp	/^  typedef SmallVectorImpl<PartitionUse>::const_iterator const_use_iterator;$/;"	t	class:__anon557::AllocaPartitioning	file:
constant	Analysis/LazyValueInfo.cpp	/^    constant,$/;"	e	enum:__anon18::LVILatticeVal::LatticeValueTy	file:
constant	Transforms/Scalar/SCCP.cpp	/^    constant,$/;"	e	enum:__anon530::LatticeVal::LatticeValueTy	file:
constantrange	Analysis/LazyValueInfo.cpp	/^    constantrange,$/;"	e	enum:__anon18::LVILatticeVal::LatticeValueTy	file:
constrainRegClass	CodeGen/MachineRegisterInfo.cpp	/^MachineRegisterInfo::constrainRegClass(unsigned Reg,$/;"	f	class:MachineRegisterInfo
constraints	VMCore/ConstantsContext.h	/^  std::string constraints;$/;"	m	struct:llvm::InlineAsmKeyType
constructArrayTypeDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::constructArrayTypeDIE(DIE &Buffer,$/;"	f	class:CompileUnit
constructCompileUnit	CodeGen/AsmPrinter/DwarfDebug.cpp	/^CompileUnit *DwarfDebug::constructCompileUnit(const MDNode *N) {$/;"	f	class:DwarfDebug
constructContainingTypeDIEs	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::constructContainingTypeDIEs() {$/;"	f	class:CompileUnit
constructEnumTypeDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^DIE *CompileUnit::constructEnumTypeDIE(DIEnumerator ETy) {$/;"	f	class:CompileUnit
constructFunction	Transforms/Utils/CodeExtractor.cpp	/^Function *CodeExtractor::constructFunction(const ValueSet &inputs,$/;"	f	class:CodeExtractor
constructInlinedScopeDIE	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DIE *DwarfDebug::constructInlinedScopeDIE(CompileUnit *TheCU,$/;"	f	class:DwarfDebug
constructLexicalScopeDIE	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DIE *DwarfDebug::constructLexicalScopeDIE(CompileUnit *TheCU, $/;"	f	class:DwarfDebug
constructScopeDIE	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DIE *DwarfDebug::constructScopeDIE(CompileUnit *TheCU, LexicalScope *Scope) {$/;"	f	class:DwarfDebug
constructScopeNest	CodeGen/LexicalScopes.cpp	/^void LexicalScopes::constructScopeNest(LexicalScope *Scope) {$/;"	f	class:LexicalScopes
constructSubprogramDIE	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::constructSubprogramDIE(CompileUnit *TheCU, $/;"	f	class:DwarfDebug
constructSubrangeDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::constructSubrangeDIE(DIE &Buffer, DISubrange SR,$/;"	f	class:CompileUnit
constructTypeDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::constructTypeDIE(DIE &Buffer, DIBasicType BTy) {$/;"	f	class:CompileUnit
constructTypeDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::constructTypeDIE(DIE &Buffer, DICompositeType CTy) {$/;"	f	class:CompileUnit
constructTypeDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::constructTypeDIE(DIE &Buffer, DIDerivedType DTy) {$/;"	f	class:CompileUnit
constructVariableDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^DIE *CompileUnit::constructVariableDIE(DbgVariable *DV, bool isScopeAbstract) {$/;"	f	class:CompileUnit
consume	Support/YAMLParser.cpp	/^bool Scanner::consume(uint32_t Expected) {$/;"	f	class:Scanner
consumeByte	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int consumeByte(struct InternalInstruction* insn, uint8_t* byte) {$/;"	f	file:
consumedDisplacement	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  BOOL                          consumedDisplacement;$/;"	m	struct:InternalInstruction
consumedModRM	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  BOOL                          consumedModRM;$/;"	m	struct:InternalInstruction
consumedOpcodeModifier	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  BOOL                          consumedOpcodeModifier;$/;"	m	struct:InternalInstruction
consumedSIB	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  BOOL                          consumedSIB;$/;"	m	struct:InternalInstruction
contains	Analysis/RegionInfo.cpp	/^bool Region::contains(const BasicBlock *B) const {$/;"	f	class:Region
contains	Analysis/RegionInfo.cpp	/^bool Region::contains(const Loop *L) const {$/;"	f	class:Region
contains	DebugInfo/DWARFDebugAranges.h	/^    bool contains(const Range &range) const {$/;"	f	struct:llvm::DWARFDebugAranges::Range
contains	Support/ConstantRange.cpp	/^bool ConstantRange::contains(const APInt &V) const {$/;"	f	class:ConstantRange
contains	Support/ConstantRange.cpp	/^bool ConstantRange::contains(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
containsAddress	DebugInfo/DWARFDebugRangeList.cpp	/^bool DWARFDebugRangeList::containsAddress(uint64_t BaseAddress,$/;"	f	class:DWARFDebugRangeList
containsAddress	DebugInfo/DWARFDebugRangeList.h	/^    bool containsAddress(uint64_t BaseAddress, uint64_t Address) const {$/;"	f	struct:llvm::DWARFDebugRangeList::RangeListEntry
containsDIEOffset	DebugInfo/DWARFCompileUnit.h	/^  bool containsDIEOffset(uint32_t die_offset) const {$/;"	f	class:llvm::DWARFCompileUnit
containsInvalidInstruction	Target/Hexagon/HexagonHardwareLoops.cpp	/^bool HexagonHardwareLoops::containsInvalidInstruction(MachineLoop *L) const {$/;"	f	class:HexagonHardwareLoops
containsInvalidInstruction	Target/PowerPC/PPCCTRLoops.cpp	/^bool PPCCTRLoops::containsInvalidInstruction(MachineLoop *L) const {$/;"	f	class:PPCCTRLoops
containsPC	DebugInfo/DWARFDebugLine.h	/^    bool containsPC(uint64_t pc) const {$/;"	f	struct:llvm::DWARFDebugLine::Sequence
containsPointer	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::containsPointer(Value *Ptr, uint64_t Size,$/;"	f	class:AliasSetTracker
contextForAttrs	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static InstructionContext contextForAttrs(uint8_t attrMask) {$/;"	f	file:
convert	Support/APFloat.cpp	/^APFloat::convert(const fltSemantics &toSemantics,$/;"	f	class:APFloat
convertAddSubFlagsOpcode	Target/ARM/ARMBaseInstrInfo.cpp	/^unsigned llvm::convertAddSubFlagsOpcode(unsigned OldOpc) {$/;"	f	class:llvm
convertDFormToXForm	Target/CellSPU/SPURegisterInfo.cpp	/^SPURegisterInfo::convertDFormToXForm(int dFormOpcode) const$/;"	f	class:SPURegisterInfo
convertDoubleAPFloatToAPInt	Support/APFloat.cpp	/^APFloat::convertDoubleAPFloatToAPInt() const$/;"	f	class:APFloat
convertF80LongDoubleAPFloatToAPInt	Support/APFloat.cpp	/^APFloat::convertF80LongDoubleAPFloatToAPInt() const$/;"	f	class:APFloat
convertFloatAPFloatToAPInt	Support/APFloat.cpp	/^APFloat::convertFloatAPFloatToAPInt() const$/;"	f	class:APFloat
convertFromAPInt	Support/APFloat.cpp	/^APFloat::convertFromAPInt(const APInt &Val,$/;"	f	class:APFloat
convertFromDecimalString	Support/APFloat.cpp	/^APFloat::convertFromDecimalString(StringRef str, roundingMode rounding_mode)$/;"	f	class:APFloat
convertFromHexadecimalString	Support/APFloat.cpp	/^APFloat::convertFromHexadecimalString(StringRef s, roundingMode rounding_mode)$/;"	f	class:APFloat
convertFromSignExtendedInteger	Support/APFloat.cpp	/^APFloat::convertFromSignExtendedInteger(const integerPart *src,$/;"	f	class:APFloat
convertFromString	Support/APFloat.cpp	/^APFloat::convertFromString(StringRef str, roundingMode rounding_mode)$/;"	f	class:APFloat
convertFromUnsignedParts	Support/APFloat.cpp	/^APFloat::convertFromUnsignedParts(const integerPart *src,$/;"	f	class:APFloat
convertFromZeroExtendedInteger	Support/APFloat.cpp	/^APFloat::convertFromZeroExtendedInteger(const integerPart *parts,$/;"	f	class:APFloat
convertHalfAPFloatToAPInt	Support/APFloat.cpp	/^APFloat::convertHalfAPFloatToAPInt() const$/;"	f	class:APFloat
convertIf	CodeGen/EarlyIfConversion.cpp	/^void SSAIfConv::convertIf(SmallVectorImpl<MachineBasicBlock*> &RemovedBlocks) {$/;"	f	class:SSAIfConv
convertInitListSlice	TableGen/Record.cpp	/^ListInit::convertInitListSlice(const std::vector<unsigned> &Elements) const {$/;"	f	class:ListInit
convertInitListSlice	TableGen/Record.cpp	/^TypedInit::convertInitListSlice(const std::vector<unsigned> &Elements) const {$/;"	f	class:TypedInit
convertInitializerBitRange	TableGen/Record.cpp	/^BitsInit::convertInitializerBitRange(const std::vector<unsigned> &Bits) const {$/;"	f	class:BitsInit
convertInitializerBitRange	TableGen/Record.cpp	/^IntInit::convertInitializerBitRange(const std::vector<unsigned> &Bits) const {$/;"	f	class:IntInit
convertInitializerBitRange	TableGen/Record.cpp	/^TypedInit::convertInitializerBitRange(const std::vector<unsigned> &Bits) const {$/;"	f	class:TypedInit
convertLatency	CodeGen/TargetSchedule.cpp	/^static unsigned convertLatency(int Cycles) {$/;"	f	file:
convertLoopInstr	Target/Hexagon/HexagonHardwareLoops.cpp	/^void HexagonFixupHwLoops::convertLoopInstr(MachineFunction &MF,$/;"	f	class:HexagonFixupHwLoops
convertMemSetToLoop	Target/NVPTX/NVPTXLowerAggrCopies.cpp	/^static void convertMemSetToLoop(Instruction *splitAt, Value *dstAddr,$/;"	f	file:
convertNEONDataProcToThumb	Target/ARM/ARMCodeEmitter.cpp	/^static unsigned convertNEONDataProcToThumb(unsigned Binary) {$/;"	f	file:
convertNormalToHexString	Support/APFloat.cpp	/^APFloat::convertNormalToHexString(char *dst, unsigned int hexDigits,$/;"	f	class:APFloat
convertPPCDoubleDoubleAPFloatToAPInt	Support/APFloat.cpp	/^APFloat::convertPPCDoubleDoubleAPFloatToAPInt() const$/;"	f	class:APFloat
convertQuadrupleAPFloatToAPInt	Support/APFloat.cpp	/^APFloat::convertQuadrupleAPFloatToAPInt() const$/;"	f	class:APFloat
convertToCTRLoop	Target/PowerPC/PPCCTRLoops.cpp	/^bool PPCCTRLoops::convertToCTRLoop(MachineLoop *L) {$/;"	f	class:PPCCTRLoops
convertToDouble	Support/APFloat.cpp	/^APFloat::convertToDouble() const$/;"	f	class:APFloat
convertToFloat	Support/APFloat.cpp	/^APFloat::convertToFloat() const$/;"	f	class:APFloat
convertToHardwareLoop	Target/Hexagon/HexagonHardwareLoops.cpp	/^bool HexagonHardwareLoops::convertToHardwareLoop(MachineLoop *L) {$/;"	f	class:HexagonHardwareLoops
convertToHexString	Support/APFloat.cpp	/^APFloat::convertToHexString(char *dst, unsigned int hexDigits,$/;"	f	class:APFloat
convertToInteger	Support/APFloat.cpp	/^APFloat::convertToInteger(APSInt &result,$/;"	f	class:APFloat
convertToInteger	Support/APFloat.cpp	/^APFloat::convertToInteger(integerPart *parts, unsigned int width,$/;"	f	class:APFloat
convertToNonSPOpcode	Target/ARM/Thumb1RegisterInfo.cpp	/^static unsigned convertToNonSPOpcode(unsigned Opcode) {$/;"	f	file:
convertToSignExtendedInteger	Support/APFloat.cpp	/^APFloat::convertToSignExtendedInteger(integerPart *parts, unsigned int width,$/;"	f	class:APFloat
convertToThreeAddress	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::convertToThreeAddress(MachineFunction::iterator &MFI,$/;"	f	class:ARMBaseInstrInfo
convertToThreeAddress	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::convertToThreeAddress(MachineFunction::iterator &MFI,$/;"	f	class:X86InstrInfo
convertToThreeAddressWithLEA	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::convertToThreeAddressWithLEA(unsigned MIOpc,$/;"	f	class:X86InstrInfo
convertTransferToLoop	Target/NVPTX/NVPTXLowerAggrCopies.cpp	/^static void convertTransferToLoop(Instruction *splitAt, Value *srcAddr,$/;"	f	file:
convertValue	TableGen/Record.cpp	/^Init *BitRecTy::convertValue(BitsInit *BI) {$/;"	f	class:BitRecTy
convertValue	TableGen/Record.cpp	/^Init *BitRecTy::convertValue(IntInit *II) {$/;"	f	class:BitRecTy
convertValue	TableGen/Record.cpp	/^Init *BitRecTy::convertValue(TypedInit *VI) {$/;"	f	class:BitRecTy
convertValue	TableGen/Record.cpp	/^Init *BitsRecTy::convertValue(BitInit *UI) {$/;"	f	class:BitsRecTy
convertValue	TableGen/Record.cpp	/^Init *BitsRecTy::convertValue(BitsInit *BI) {$/;"	f	class:BitsRecTy
convertValue	TableGen/Record.cpp	/^Init *BitsRecTy::convertValue(IntInit *II) {$/;"	f	class:BitsRecTy
convertValue	TableGen/Record.cpp	/^Init *BitsRecTy::convertValue(TypedInit *VI) {$/;"	f	class:BitsRecTy
convertValue	TableGen/Record.cpp	/^Init *BitsRecTy::convertValue(UnsetInit *UI) {$/;"	f	class:BitsRecTy
convertValue	TableGen/Record.cpp	/^Init *DagRecTy::convertValue(BinOpInit *BO) {$/;"	f	class:DagRecTy
convertValue	TableGen/Record.cpp	/^Init *DagRecTy::convertValue(TypedInit *TI) {$/;"	f	class:DagRecTy
convertValue	TableGen/Record.cpp	/^Init *DagRecTy::convertValue(UnOpInit *BO) {$/;"	f	class:DagRecTy
convertValue	TableGen/Record.cpp	/^Init *IntRecTy::convertValue(BitInit *BI) {$/;"	f	class:IntRecTy
convertValue	TableGen/Record.cpp	/^Init *IntRecTy::convertValue(BitsInit *BI) {$/;"	f	class:IntRecTy
convertValue	TableGen/Record.cpp	/^Init *IntRecTy::convertValue(TypedInit *TI) {$/;"	f	class:IntRecTy
convertValue	TableGen/Record.cpp	/^Init *ListRecTy::convertValue(ListInit *LI) {$/;"	f	class:ListRecTy
convertValue	TableGen/Record.cpp	/^Init *ListRecTy::convertValue(TypedInit *TI) {$/;"	f	class:ListRecTy
convertValue	TableGen/Record.cpp	/^Init *RecordRecTy::convertValue(DefInit *DI) {$/;"	f	class:RecordRecTy
convertValue	TableGen/Record.cpp	/^Init *RecordRecTy::convertValue(TypedInit *TI) {$/;"	f	class:RecordRecTy
convertValue	TableGen/Record.cpp	/^Init *StringRecTy::convertValue(BinOpInit *BO) {$/;"	f	class:StringRecTy
convertValue	TableGen/Record.cpp	/^Init *StringRecTy::convertValue(TypedInit *TI) {$/;"	f	class:StringRecTy
convertValue	TableGen/Record.cpp	/^Init *StringRecTy::convertValue(UnOpInit *BO) {$/;"	f	class:StringRecTy
convertValue	Transforms/Scalar/SROA.cpp	/^static Value *convertValue(const DataLayout &DL, IRBuilder<> &IRB, Value *V,$/;"	f	file:
convolve	Support/APFloat.cpp	27;"	d	file:
copyAllListRegs	Target/ARM/ARMExpandPseudoInsts.cpp	/^    bool copyAllListRegs;$/;"	m	struct:__anon312::NEONLdStTableEntry	file:
copyAttributesFrom	VMCore/Function.cpp	/^void Function::copyAttributesFrom(const GlobalValue *Src) {$/;"	f	class:Function
copyAttributesFrom	VMCore/Globals.cpp	/^void GlobalValue::copyAttributesFrom(const GlobalValue *Src) {$/;"	f	class:GlobalValue
copyAttributesFrom	VMCore/Globals.cpp	/^void GlobalVariable::copyAttributesFrom(const GlobalValue *Src) {$/;"	f	class:GlobalVariable
copyCoalesceInMBB	CodeGen/RegisterCoalescer.cpp	/^RegisterCoalescer::copyCoalesceInMBB(MachineBasicBlock *MBB) {$/;"	f	class:RegisterCoalescer
copyCoalesceWorkList	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::copyCoalesceWorkList(unsigned From) {$/;"	f	class:RegisterCoalescer
copyGVAttributes	Linker/LinkModules.cpp	/^static void copyGVAttributes(GlobalValue *DestGV, const GlobalValue *SrcGV) {$/;"	f	file:
copyHint	CodeGen/CalcSpillWeights.cpp	/^static unsigned copyHint(const MachineInstr *mi, unsigned reg,$/;"	f	file:
copyImplicitOps	CodeGen/MachineInstr.cpp	/^void MachineInstr::copyImplicitOps(const MachineInstr *MI) {$/;"	f	class:MachineInstr
copyKillDeadInfo	CodeGen/MachineInstr.cpp	/^void MachineInstr::copyKillDeadInfo(const MachineInstr *MI) {$/;"	f	class:MachineInstr
copyPhysReg	Target/ARM/ARMBaseInstrInfo.cpp	/^void ARMBaseInstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:ARMBaseInstrInfo
copyPhysReg	Target/ARM/Thumb1InstrInfo.cpp	/^void Thumb1InstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:Thumb1InstrInfo
copyPhysReg	Target/ARM/Thumb2InstrInfo.cpp	/^void Thumb2InstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:Thumb2InstrInfo
copyPhysReg	Target/CellSPU/SPUInstrInfo.cpp	/^void SPUInstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:SPUInstrInfo
copyPhysReg	Target/Hexagon/HexagonInstrInfo.cpp	/^void HexagonInstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:HexagonInstrInfo
copyPhysReg	Target/MBlaze/MBlazeInstrInfo.cpp	/^copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:MBlazeInstrInfo
copyPhysReg	Target/MSP430/MSP430InstrInfo.cpp	/^void MSP430InstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:MSP430InstrInfo
copyPhysReg	Target/Mips/Mips16InstrInfo.cpp	/^void Mips16InstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:Mips16InstrInfo
copyPhysReg	Target/Mips/MipsSEInstrInfo.cpp	/^void MipsSEInstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:MipsSEInstrInfo
copyPhysReg	Target/NVPTX/NVPTXInstrInfo.cpp	/^void NVPTXInstrInfo::copyPhysReg (MachineBasicBlock &MBB,$/;"	f	class:NVPTXInstrInfo
copyPhysReg	Target/PowerPC/PPCInstrInfo.cpp	/^void PPCInstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:PPCInstrInfo
copyPhysReg	Target/Sparc/SparcInstrInfo.cpp	/^void SparcInstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:SparcInstrInfo
copyPhysReg	Target/X86/X86InstrInfo.cpp	/^void X86InstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:X86InstrInfo
copyPhysReg	Target/XCore/XCoreInstrInfo.cpp	/^void XCoreInstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:XCoreInstrInfo
copyPredicates	CodeGen/MachineInstr.cpp	/^void MachineInstr::copyPredicates(const MachineInstr *MI) {$/;"	f	class:MachineInstr
copyProp	Target/NVPTX/VectorElementize.cpp	/^unsigned VectorElementize::copyProp(MachineFunction &F) {$/;"	f	class:VectorElementize
copySign	Support/APFloat.cpp	/^APFloat::copySign(const APFloat &rhs)$/;"	f	class:APFloat
copySignificand	Support/APFloat.cpp	/^APFloat::copySignificand(const APFloat &rhs)$/;"	f	class:APFloat
copyValue	Analysis/AliasAnalysis.cpp	/^void AliasAnalysis::copyValue(Value *From, Value *To) {$/;"	f	class:AliasAnalysis
copyValue	Analysis/AliasDebugger.cpp	/^    virtual void copyValue(Value *From, Value *To) {$/;"	f	class:__anon44::AliasDebugger
copyValue	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::copyValue(Value *From, Value *To) {$/;"	f	class:AliasSetTracker
copyValue	Analysis/IPA/GlobalsModRef.cpp	/^void GlobalsModRef::copyValue(Value *From, Value *To) {$/;"	f	class:GlobalsModRef
copyValue	Analysis/NoAliasAnalysis.cpp	/^    virtual void copyValue(Value *From, Value *To) {}$/;"	f	struct:__anon42::NoAA
copy_to_buffer	Support/raw_ostream.cpp	/^void raw_ostream::copy_to_buffer(const char *Ptr, size_t Size) {$/;"	f	class:raw_ostream
count	ExecutionEngine/JIT/JIT.cpp	/^      unsigned long count : 21;$/;"	m	struct:__anon185::LibgccObject::__anon186::__anon187	file:
count	Support/StringRef.cpp	/^size_t StringRef::count(StringRef Str) const {$/;"	f	class:StringRef
countLeadingOnes	Support/APInt.cpp	/^unsigned APInt::countLeadingOnes() const {$/;"	f	class:APInt
countLeadingZerosSlowCase	Support/APInt.cpp	/^unsigned APInt::countLeadingZerosSlowCase() const {$/;"	f	class:APInt
countLiveBlocks	CodeGen/SplitKit.cpp	/^unsigned SplitAnalysis::countLiveBlocks(const LiveInterval *cli) const {$/;"	f	class:SplitAnalysis
countLoop	Transforms/Scalar/LoopUnswitch.cpp	/^bool LUAnalysisCache::countLoop(const Loop* L) {$/;"	f	class:LUAnalysisCache
countOperands	CodeGen/SelectionDAG/InstrEmitter.cpp	/^static unsigned countOperands(SDNode *Node, unsigned NumExpUses,$/;"	f	file:
countPopulationSlowCase	Support/APInt.cpp	/^unsigned APInt::countPopulationSlowCase() const {$/;"	f	class:APInt
countTrailingOnesSlowCase	Support/APInt.cpp	/^unsigned APInt::countTrailingOnesSlowCase() const {$/;"	f	class:APInt
countTrailingZeros	Support/APInt.cpp	/^unsigned APInt::countTrailingZeros() const {$/;"	f	class:APInt
create	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngine *EngineBuilder::create(TargetMachine *TM) {$/;"	f	class:EngineBuilder
create	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngine *ExecutionEngine::create(Module *M,$/;"	f	class:ExecutionEngine
create	ExecutionEngine/Interpreter/Interpreter.cpp	/^ExecutionEngine *Interpreter::create(Module *M, std::string* ErrStr) {$/;"	f	class:Interpreter
create	ExecutionEngine/JIT/JIT.h	/^  static ExecutionEngine *create(Module *M,$/;"	f	class:llvm::JIT
create	Support/FileOutputBuffer.cpp	/^error_code FileOutputBuffer::create(StringRef FilePath, $/;"	f	class:llvm::FileOutputBuffer
create	Target/Mips/MipsFrameLowering.cpp	/^const MipsFrameLowering *MipsFrameLowering::create(MipsTargetMachine &TM,$/;"	f	class:MipsFrameLowering
create	Target/Mips/MipsInstrInfo.cpp	/^const MipsInstrInfo *MipsInstrInfo::create(MipsTargetMachine &TM) {$/;"	f	class:MipsInstrInfo
create	VMCore/ConstantsContext.h	/^  static ConstantClass *create(TypeClass *Ty, ArrayRef<Constant*> V) {$/;"	f	struct:llvm::ConstantArrayCreator
create	VMCore/ConstantsContext.h	/^  static ConstantClass *create(TypeClass *Ty, const ValType &V) {$/;"	f	struct:llvm::ConstantCreator
create	VMCore/ConstantsContext.h	/^  static ConstantExpr *create(Type *Ty, const ExprMapKeyType &V,$/;"	f	struct:llvm::ConstantCreator
create	VMCore/ConstantsContext.h	/^  static InlineAsm *create(PointerType *Ty, const InlineAsmKeyType &Key) {$/;"	f	struct:llvm::ConstantCreator
create	VMCore/Type.cpp	/^StructType *StructType::create(ArrayRef<Type*> Elements) {$/;"	f	class:StructType
create	VMCore/Type.cpp	/^StructType *StructType::create(ArrayRef<Type*> Elements, StringRef Name,$/;"	f	class:StructType
create	VMCore/Type.cpp	/^StructType *StructType::create(LLVMContext &Context) {$/;"	f	class:StructType
create	VMCore/Type.cpp	/^StructType *StructType::create(LLVMContext &Context, ArrayRef<Type*> Elements) {$/;"	f	class:StructType
create	VMCore/Type.cpp	/^StructType *StructType::create(LLVMContext &Context, ArrayRef<Type*> Elements,$/;"	f	class:StructType
create	VMCore/Type.cpp	/^StructType *StructType::create(LLVMContext &Context, StringRef Name) {$/;"	f	class:StructType
create	VMCore/Type.cpp	/^StructType *StructType::create(StringRef Name, Type *type, ...) {$/;"	f	class:StructType
createAAEvalPass	Analysis/AliasAnalysisEvaluator.cpp	/^FunctionPass *llvm::createAAEvalPass() { return new AAEval(); }$/;"	f	class:llvm
createARMAsmBackend	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^MCAsmBackend *llvm::createARMAsmBackend(const Target &T, StringRef TT, StringRef CPU) {$/;"	f	class:llvm
createARMConstantIslandPass	Target/ARM/ARMConstantIslandPass.cpp	/^FunctionPass *llvm::createARMConstantIslandPass() {$/;"	f	class:llvm
createARMDisassembler	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static MCDisassembler *createARMDisassembler(const Target &T, const MCSubtargetInfo &STI) {$/;"	f	file:
createARMELFObjectWriter	Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp	/^MCObjectWriter *llvm::createARMELFObjectWriter(raw_ostream &OS,$/;"	f	class:llvm
createARMExpandPseudoPass	Target/ARM/ARMExpandPseudoInsts.cpp	/^FunctionPass *llvm::createARMExpandPseudoPass() {$/;"	f	class:llvm
createARMGlobalBaseRegPass	Target/ARM/ARMInstrInfo.cpp	/^llvm::createARMGlobalBaseRegPass() { return new ARMCGBR(); }$/;"	f	class:llvm
createARMISelDag	Target/ARM/ARMISelDAGToDAG.cpp	/^FunctionPass *llvm::createARMISelDag(ARMBaseTargetMachine &TM,$/;"	f	class:llvm
createARMJITCodeEmitterPass	Target/ARM/ARMCodeEmitter.cpp	/^FunctionPass *llvm::createARMJITCodeEmitterPass(ARMBaseTargetMachine &TM,$/;"	f	class:llvm
createARMLoadStoreOptimizationPass	Target/ARM/ARMLoadStoreOptimizer.cpp	/^FunctionPass *llvm::createARMLoadStoreOptimizationPass(bool PreAlloc) {$/;"	f	class:llvm
createARMMCAsmInfo	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^static MCAsmInfo *createARMMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	file:
createARMMCCodeEmitter	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^MCCodeEmitter *llvm::createARMMCCodeEmitter(const MCInstrInfo &MCII,$/;"	f	class:llvm
createARMMCCodeGenInfo	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^static MCCodeGenInfo *createARMMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createARMMCInstPrinter	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^static MCInstPrinter *createARMMCInstPrinter(const Target &T,$/;"	f	file:
createARMMCInstrAnalysis	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^static MCInstrAnalysis *createARMMCInstrAnalysis(const MCInstrInfo *Info) {$/;"	f	file:
createARMMCInstrInfo	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^static MCInstrInfo *createARMMCInstrInfo() {$/;"	f	file:
createARMMCRegisterInfo	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^static MCRegisterInfo *createARMMCRegisterInfo(StringRef Triple) {$/;"	f	file:
createARMMCSubtargetInfo	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^MCSubtargetInfo *ARM_MC::createARMMCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	class:ARM_MC
createARMMachObjectWriter	Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp	/^MCObjectWriter *llvm::createARMMachObjectWriter(raw_ostream &OS,$/;"	f	class:llvm
createAddressSanitizerPass	Transforms/Instrumentation/AddressSanitizer.cpp	/^FunctionPass *llvm::createAddressSanitizerPass() {$/;"	f	class:llvm
createAggressiveDCEPass	Transforms/Scalar/ADCE.cpp	/^FunctionPass *llvm::createAggressiveDCEPass() {$/;"	f	class:llvm
createAliasAnalysisCounterPass	Analysis/AliasAnalysisCounter.cpp	/^ModulePass *llvm::createAliasAnalysisCounterPass() {$/;"	f	class:llvm
createAliasDebugger	Analysis/AliasDebugger.cpp	/^Pass *llvm::createAliasDebugger() { return new AliasDebugger(); }$/;"	f	class:llvm
createAllocaHoisting	Target/NVPTX/NVPTXAllocaHoisting.cpp	/^FunctionPass *createAllocaHoisting() {$/;"	f	namespace:llvm
createAlwaysInlinerPass	Transforms/IPO/InlineAlways.cpp	/^Pass *llvm::createAlwaysInlinerPass() { return new AlwaysInliner(); }$/;"	f	class:llvm
createAlwaysInlinerPass	Transforms/IPO/InlineAlways.cpp	/^Pass *llvm::createAlwaysInlinerPass(bool InsertLifetime) {$/;"	f	class:llvm
createArgumentPromotionPass	Transforms/IPO/ArgumentPromotion.cpp	/^Pass *llvm::createArgumentPromotionPass(unsigned maxElements) {$/;"	f	class:llvm
createArrayType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createArrayType(uint64_t Size, uint64_t AlignInBits,$/;"	f	class:DIBuilder
createArtificialType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createArtificialType(DIType Ty) {$/;"	f	class:DIBuilder
createAsmStreamer	MC/MCAsmStreamer.cpp	/^MCStreamer *llvm::createAsmStreamer(MCContext &Context,$/;"	f	class:llvm
createAtom	MC/MCModule.cpp	/^MCAtom *MCModule::createAtom(MCAtom::AtomType Type,$/;"	f	class:MCModule
createBBVectorizePass	Transforms/Vectorize/BBVectorize.cpp	/^BasicBlockPass *llvm::createBBVectorizePass(const VectorizeConfig &C) {$/;"	f	class:llvm
createBURRListDAGScheduler	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^llvm::createBURRListDAGScheduler(SelectionDAGISel *IS,$/;"	f	class:llvm
createBarrierNoopPass	Transforms/IPO/BarrierNoopPass.cpp	/^ModulePass *llvm::createBarrierNoopPass() { return new BarrierNoop(); }$/;"	f	class:llvm
createBasicAliasAnalysisPass	Analysis/BasicAliasAnalysis.cpp	/^ImmutablePass *llvm::createBasicAliasAnalysisPass() {$/;"	f	class:llvm
createBasicRegisterAllocator	CodeGen/RegAllocBasic.cpp	/^FunctionPass* llvm::createBasicRegisterAllocator()$/;"	f	class:llvm
createBasicType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createBasicType(StringRef Name, uint64_t SizeInBits,$/;"	f	class:DIBuilder
createBinary	Object/Binary.cpp	/^error_code object::createBinary(MemoryBuffer *Source,$/;"	f	class:object
createBinary	Object/Binary.cpp	/^error_code object::createBinary(StringRef Path, OwningPtr<Binary> &Result) {$/;"	f	class:object
createBitcodeWriterPass	Bitcode/Writer/BitcodeWriterPass.cpp	/^ModulePass *llvm::createBitcodeWriterPass(raw_ostream &Str) {$/;"	f	class:llvm
createBlockExtractorPass	Transforms/IPO/LoopExtractor.cpp	/^ModulePass *llvm::createBlockExtractorPass() {$/;"	f	class:llvm
createBlockPlacementPass	Transforms/Scalar/BasicBlockPlacement.cpp	/^FunctionPass *llvm::createBlockPlacementPass() { return new BlockPlacement(); }$/;"	f	class:llvm
createBoundsCheckingPass	Transforms/Instrumentation/BoundsChecking.cpp	/^FunctionPass *llvm::createBoundsCheckingPass(unsigned Penalty) {$/;"	f	class:llvm
createBreakCriticalEdgesPass	Transforms/Utils/BreakCriticalEdges.cpp	/^FunctionPass *llvm::createBreakCriticalEdgesPass() {$/;"	f	class:llvm
createCFGOnlyPrinterPass	Analysis/CFGPrinter.cpp	/^FunctionPass *llvm::createCFGOnlyPrinterPass () {$/;"	f	class:llvm
createCFGPrinterPass	Analysis/CFGPrinter.cpp	/^FunctionPass *llvm::createCFGPrinterPass () {$/;"	f	class:llvm
createCFGSimplificationPass	Transforms/Scalar/SimplifyCFGPass.cpp	/^FunctionPass *llvm::createCFGSimplificationPass() {$/;"	f	class:llvm
createCOFFAsmParser	MC/MCParser/COFFAsmParser.cpp	/^MCAsmParserExtension *createCOFFAsmParser() {$/;"	f	namespace:llvm
createCOFFEntity	MC/WinCOFFObjectWriter.cpp	/^object_t *WinCOFFObjectWriter::createCOFFEntity(llvm::StringRef Name,$/;"	f	class:WinCOFFObjectWriter
createCOFFObjectFile	Object/COFFObjectFile.cpp	/^  ObjectFile *ObjectFile::createCOFFObjectFile(MemoryBuffer *Object) {$/;"	f	class:llvm::ObjectFile
createCallHelper	VMCore/IRBuilder.cpp	/^static CallInst *createCallHelper(Value *Callee, ArrayRef<Value *> Ops,$/;"	f	file:
createCellSPUMCRegisterInfo	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp	/^static MCRegisterInfo *createCellSPUMCRegisterInfo(StringRef TT) {$/;"	f	file:
createClassType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createClassType(DIDescriptor Context, StringRef Name,$/;"	f	class:DIBuilder
createCleanupLocalDynamicTLSPass	Target/X86/X86InstrInfo.cpp	/^llvm::createCleanupLocalDynamicTLSPass() { return new LDTLSCleanup(); }$/;"	f	class:llvm
createCodeGenPreparePass	Transforms/Scalar/CodeGenPrepare.cpp	/^FunctionPass *llvm::createCodeGenPreparePass(const TargetLowering *TLI) {$/;"	f	class:llvm
createCompileUnit	VMCore/DIBuilder.cpp	/^void DIBuilder::createCompileUnit(unsigned Lang, StringRef Filename,$/;"	f	class:DIBuilder
createComplexVariable	VMCore/DIBuilder.cpp	/^DIVariable DIBuilder::createComplexVariable(unsigned Tag, DIDescriptor Scope,$/;"	f	class:DIBuilder
createConstantMergePass	Transforms/IPO/ConstantMerge.cpp	/^ModulePass *llvm::createConstantMergePass() { return new ConstantMerge(); }$/;"	f	class:llvm
createConstantPropagationPass	Transforms/Scalar/ConstantProp.cpp	/^FunctionPass *llvm::createConstantPropagationPass() {$/;"	f	class:llvm
createConvergingSched	CodeGen/MachineScheduler.cpp	/^static ScheduleDAGInstrs *createConvergingSched(MachineSchedContext *C) {$/;"	f	file:
createCopies	Target/NVPTX/VectorElementize.cpp	/^void VectorElementize::createCopies(MachineFunction& F, MachineInstr *Instr,$/;"	f	class:VectorElementize
createCorrelatedValuePropagationPass	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^Pass *llvm::createCorrelatedValuePropagationPass() {$/;"	f	class:llvm
createDAGLinearizer	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^llvm::createDAGLinearizer(SelectionDAGISel *IS, CodeGenOpt::Level) {$/;"	f	class:llvm
createDIEEntry	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^DIEEntry *CompileUnit::createDIEEntry(DIE *Entry) {$/;"	f	class:CompileUnit
createDarwinAsmParser	MC/MCParser/DarwinAsmParser.cpp	/^MCAsmParserExtension *createDarwinAsmParser() {$/;"	f	namespace:llvm
createDbgInfoPrinterPass	Analysis/DbgInfoPrinter.cpp	/^FunctionPass *llvm::createDbgInfoPrinterPass() { return new PrintDbgInfo(); }$/;"	f	class:llvm
createDeadArgEliminationPass	Transforms/IPO/DeadArgumentElimination.cpp	/^ModulePass *llvm::createDeadArgEliminationPass() { return new DAE(); }$/;"	f	class:llvm
createDeadArgHackingPass	Transforms/IPO/DeadArgumentElimination.cpp	/^ModulePass *llvm::createDeadArgHackingPass() { return new DAH(); }$/;"	f	class:llvm
createDeadCodeEliminationPass	Transforms/Scalar/DCE.cpp	/^FunctionPass *llvm::createDeadCodeEliminationPass() {$/;"	f	class:llvm
createDeadDef	CodeGen/LiveInterval.cpp	/^VNInfo *LiveInterval::createDeadDef(SlotIndex Def,$/;"	f	class:LiveInterval
createDeadDefs	CodeGen/LiveRangeCalc.cpp	/^void LiveRangeCalc::createDeadDefs(LiveInterval *LI, unsigned Reg) {$/;"	f	class:LiveRangeCalc
createDeadDefs	CodeGen/LiveRangeCalc.h	/^  void createDeadDefs(LiveInterval *LI) {$/;"	f	class:llvm::LiveRangeCalc
createDeadInstEliminationPass	Transforms/Scalar/DCE.cpp	/^Pass *llvm::createDeadInstEliminationPass() {$/;"	f	class:llvm
createDeadStoreEliminationPass	Transforms/Scalar/DeadStoreElimination.cpp	/^FunctionPass *llvm::createDeadStoreEliminationPass() { return new DSE(); }$/;"	f	class:llvm
createDefaultPBQPRegisterAllocator	CodeGen/RegAllocPBQP.cpp	/^FunctionPass* llvm::createDefaultPBQPRegisterAllocator() {$/;"	f	class:llvm
createDefaultScheduler	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^  ScheduleDAGSDNodes* createDefaultScheduler(SelectionDAGISel *IS,$/;"	f	namespace:llvm
createDemoteRegisterToMemoryPass	Transforms/Scalar/Reg2Mem.cpp	/^FunctionPass *llvm::createDemoteRegisterToMemoryPass() {$/;"	f	class:llvm
createDependenceAnalysisPass	Analysis/DependenceAnalysis.cpp	/^FunctionPass *llvm::createDependenceAnalysisPass() {$/;"	f	class:llvm
createDependencyFile	TableGen/Main.cpp	/^static int createDependencyFile(const TGParser &Parser, const char *argv0) {$/;"	f	file:
createDomOnlyPrinterPass	Analysis/DomPrinter.cpp	/^FunctionPass *llvm::createDomOnlyPrinterPass() {$/;"	f	class:llvm
createDomOnlyViewerPass	Analysis/DomPrinter.cpp	/^FunctionPass *llvm::createDomOnlyViewerPass() {$/;"	f	class:llvm
createDomPrinterPass	Analysis/DomPrinter.cpp	/^FunctionPass *llvm::createDomPrinterPass() {$/;"	f	class:llvm
createDomViewerPass	Analysis/DomPrinter.cpp	/^FunctionPass *llvm::createDomViewerPass() {$/;"	f	class:llvm
createDwarfEHPass	CodeGen/DwarfEHPrepare.cpp	/^FunctionPass *llvm::createDwarfEHPass(const TargetMachine *tm) {$/;"	f	class:llvm
createELFAsmParser	MC/MCParser/ELFAsmParser.cpp	/^MCAsmParserExtension *createELFAsmParser() {$/;"	f	namespace:llvm
createELFObjectFile	Object/ELFObjectFile.cpp	/^ObjectFile *ObjectFile::createELFObjectFile(MemoryBuffer *Object) {$/;"	f	class:llvm::ObjectFile
createELFObjectWriter	MC/ELFObjectWriter.cpp	/^MCObjectWriter *llvm::createELFObjectWriter(MCELFObjectTargetWriter *MOTW,$/;"	f	class:llvm
createELFStreamer	MC/MCELFStreamer.cpp	/^MCStreamer *llvm::createELFStreamer(MCContext &Context, MCAsmBackend &MAB,$/;"	f	class:llvm
createEarlyCSEPass	Transforms/Scalar/EarlyCSE.cpp	/^FunctionPass *llvm::createEarlyCSEPass() {$/;"	f	class:llvm
createEdge	Analysis/PathNumbering.cpp	/^BallLarusEdge* BallLarusDag::createEdge(BallLarusNode* source,$/;"	f	class:BallLarusDag
createEdge	Transforms/Instrumentation/PathProfiling.cpp	/^BallLarusEdge* BLInstrumentationDag::createEdge(BallLarusNode* source,$/;"	f	class:BLInstrumentationDag
createEdgeProfilerPass	Transforms/Instrumentation/EdgeProfiling.cpp	/^ModulePass *llvm::createEdgeProfilerPass() { return new EdgeProfiler(); }$/;"	f	class:llvm
createEmitter	ExecutionEngine/JIT/JITEmitter.cpp	/^JITCodeEmitter *JIT::createEmitter(JIT &jit, JITMemoryManager *JMM,$/;"	f	class:JIT
createEmptyLoop	Transforms/Vectorize/LoopVectorize.cpp	/^void SingleBlockLoopVectorizer::createEmptyLoop(LoopVectorizationLegality *Legal) {$/;"	f	class:__anon605::SingleBlockLoopVectorizer
createEnumerationType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createEnumerationType(DIDescriptor Scope, StringRef Name,$/;"	f	class:DIBuilder
createEnumerator	VMCore/DIBuilder.cpp	/^DIEnumerator DIBuilder::createEnumerator(StringRef Name, uint64_t Val) {$/;"	f	class:DIBuilder
createExecutionDependencyFixPass	CodeGen/ExecutionDepsFix.cpp	/^llvm::createExecutionDependencyFixPass(const TargetRegisterClass *RC) {$/;"	f	class:llvm
createFastDAGScheduler	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^llvm::createFastDAGScheduler(SelectionDAGISel *IS, CodeGenOpt::Level) {$/;"	f	class:llvm
createFastISel	Target/ARM/ARMFastISel.cpp	/^  FastISel *ARM::createFastISel(FunctionLoweringInfo &funcInfo,$/;"	f	class:llvm::ARM
createFastISel	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::createFastISel(FunctionLoweringInfo &funcInfo,$/;"	f	class:ARMTargetLowering
createFastISel	Target/X86/X86FastISel.cpp	/^  FastISel *X86::createFastISel(FunctionLoweringInfo &funcInfo,$/;"	f	class:llvm::X86
createFastISel	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::createFastISel(FunctionLoweringInfo &funcInfo,$/;"	f	class:X86TargetLowering
createFastRegisterAllocator	CodeGen/RegAllocFast.cpp	/^FunctionPass *llvm::createFastRegisterAllocator() {$/;"	f	class:llvm
createFile	VMCore/DIBuilder.cpp	/^DIFile DIBuilder::createFile(StringRef Filename, StringRef Directory) {$/;"	f	class:DIBuilder
createForwardDecl	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createForwardDecl(unsigned Tag, StringRef Name,$/;"	f	class:DIBuilder
createFree	VMCore/Instructions.cpp	/^static Instruction* createFree(Value* Source, Instruction *InsertBefore,$/;"	f	file:
createFriend	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createFriend(DIType Ty, DIType FriendTy) {$/;"	f	class:DIBuilder
createFrom	CodeGen/LiveRangeEdit.cpp	/^LiveInterval &LiveRangeEdit::createFrom(unsigned OldReg) {$/;"	f	class:LiveRangeEdit
createFunction	VMCore/DIBuilder.cpp	/^DISubprogram DIBuilder::createFunction(DIDescriptor Context,$/;"	f	class:DIBuilder
createFunctionAttrsPass	Transforms/IPO/FunctionAttrs.cpp	/^Pass *llvm::createFunctionAttrsPass() { return new FunctionAttrs(); }$/;"	f	class:llvm
createFunctionInliningPass	Transforms/IPO/InlineSimple.cpp	/^Pass *llvm::createFunctionInliningPass() { return new SimpleInliner(); }$/;"	f	class:llvm
createFunctionInliningPass	Transforms/IPO/InlineSimple.cpp	/^Pass *llvm::createFunctionInliningPass(int Threshold) {$/;"	f	class:llvm
createGCInfoDeleter	CodeGen/GCMetadata.cpp	/^FunctionPass *llvm::createGCInfoDeleter() {$/;"	f	class:llvm
createGCInfoPrinter	CodeGen/GCMetadata.cpp	/^FunctionPass *llvm::createGCInfoPrinter(raw_ostream &OS) {$/;"	f	class:llvm
createGCLoweringPass	CodeGen/GCStrategy.cpp	/^FunctionPass *llvm::createGCLoweringPass() {$/;"	f	class:llvm
createGCOVProfilerPass	Transforms/Instrumentation/GCOVProfiling.cpp	/^ModulePass *llvm::createGCOVProfilerPass(bool EmitNotes, bool EmitData,$/;"	f	class:llvm
createGVExtractionPass	Transforms/IPO/ExtractGV.cpp	/^ModulePass *llvm::createGVExtractionPass(std::vector<GlobalValue*>& GVs, $/;"	f	class:llvm
createGVNPass	Transforms/Scalar/GVN.cpp	/^FunctionPass *llvm::createGVNPass(bool NoLoads) {$/;"	f	class:llvm
createGlobalBaseRegPass	Target/X86/X86InstrInfo.cpp	/^llvm::createGlobalBaseRegPass() { return new CGBR(); }$/;"	f	class:llvm
createGlobalDCEPass	Transforms/IPO/GlobalDCE.cpp	/^ModulePass *llvm::createGlobalDCEPass() { return new GlobalDCE(); }$/;"	f	class:llvm
createGlobalMergePass	Transforms/Scalar/GlobalMerge.cpp	/^Pass *llvm::createGlobalMergePass(const TargetLowering *tli) {$/;"	f	class:llvm
createGlobalOptimizerPass	Transforms/IPO/GlobalOpt.cpp	/^ModulePass *llvm::createGlobalOptimizerPass() { return new GlobalOpt(); }$/;"	f	class:llvm
createGlobalVariable	VMCore/DIBuilder.cpp	/^createGlobalVariable(StringRef Name, DIFile F, unsigned LineNumber,$/;"	f	class:DIBuilder
createGlobalVariableDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^void CompileUnit::createGlobalVariableDIE(const MDNode *N) {$/;"	f	class:CompileUnit
createGlobalsModRefPass	Analysis/IPA/GlobalsModRef.cpp	/^Pass *llvm::createGlobalsModRefPass() { return new GlobalsModRef(); }$/;"	f	class:llvm
createGreedyRegisterAllocator	CodeGen/RegAllocGreedy.cpp	/^FunctionPass* llvm::createGreedyRegisterAllocator() {$/;"	f	class:llvm
createHexagonCFGOptimizer	Target/Hexagon/HexagonCFGOptimizer.cpp	/^FunctionPass *llvm::createHexagonCFGOptimizer(HexagonTargetMachine &TM) {$/;"	f	class:llvm
createHexagonExpandPredSpillCode	Target/Hexagon/HexagonExpandPredSpillCode.cpp	/^FunctionPass *llvm::createHexagonExpandPredSpillCode(HexagonTargetMachine &TM) {$/;"	f	class:llvm
createHexagonFixupHwLoops	Target/Hexagon/HexagonHardwareLoops.cpp	/^FunctionPass *llvm::createHexagonFixupHwLoops() {$/;"	f	class:llvm
createHexagonHardwareLoops	Target/Hexagon/HexagonHardwareLoops.cpp	/^FunctionPass *llvm::createHexagonHardwareLoops() {$/;"	f	class:llvm
createHexagonISelDag	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^FunctionPass *llvm::createHexagonISelDag(HexagonTargetMachine &TM) {$/;"	f	class:llvm
createHexagonMCAsmInfo	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp	/^static MCAsmInfo *createHexagonMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	file:
createHexagonMCCodeGenInfo	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp	/^static MCCodeGenInfo *createHexagonMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createHexagonMCInstPrinter	Target/Hexagon/HexagonAsmPrinter.cpp	/^static MCInstPrinter *createHexagonMCInstPrinter(const Target &T,$/;"	f	file:
createHexagonMCInstrInfo	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp	/^static MCInstrInfo *createHexagonMCInstrInfo() {$/;"	f	file:
createHexagonMCRegisterInfo	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp	/^static MCRegisterInfo *createHexagonMCRegisterInfo(StringRef TT) {$/;"	f	file:
createHexagonMCSubtargetInfo	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp	/^static MCSubtargetInfo *createHexagonMCSubtargetInfo(StringRef TT,$/;"	f	file:
createHexagonNewValueJump	Target/Hexagon/HexagonNewValueJump.cpp	/^FunctionPass *llvm::createHexagonNewValueJump() {$/;"	f	class:llvm
createHexagonPacketizer	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^FunctionPass *llvm::createHexagonPacketizer() {$/;"	f	class:llvm
createHexagonPeephole	Target/Hexagon/HexagonPeephole.cpp	/^FunctionPass *llvm::createHexagonPeephole() {$/;"	f	class:llvm
createHexagonRemoveExtendOps	Target/Hexagon/HexagonRemoveSZExtArgs.cpp	/^FunctionPass *llvm::createHexagonRemoveExtendOps(HexagonTargetMachine &TM) {$/;"	f	class:llvm
createHexagonSplitTFRCondSets	Target/Hexagon/HexagonSplitTFRCondSets.cpp	/^FunctionPass *llvm::createHexagonSplitTFRCondSets(HexagonTargetMachine &TM) {$/;"	f	class:llvm
createHybridListDAGScheduler	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^llvm::createHybridListDAGScheduler(SelectionDAGISel *IS,$/;"	f	class:llvm
createILPListDAGScheduler	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^llvm::createILPListDAGScheduler(SelectionDAGISel *IS,$/;"	f	class:llvm
createILPMaxScheduler	CodeGen/MachineScheduler.cpp	/^static ScheduleDAGInstrs *createILPMaxScheduler(MachineSchedContext *C) {$/;"	f	file:
createILPMinScheduler	CodeGen/MachineScheduler.cpp	/^static ScheduleDAGInstrs *createILPMinScheduler(MachineSchedContext *C) {$/;"	f	file:
createIPConstantPropagationPass	Transforms/IPO/IPConstantPropagation.cpp	/^ModulePass *llvm::createIPConstantPropagationPass() { return new IPCP(); }$/;"	f	class:llvm
createIPSCCPPass	Transforms/Scalar/SCCP.cpp	/^ModulePass *llvm::createIPSCCPPass() {$/;"	f	class:llvm
createIVUsersPass	Analysis/IVUsers.cpp	/^Pass *llvm::createIVUsersPass() {$/;"	f	class:llvm
createIncrementConstant	Transforms/Instrumentation/PathProfiling.cpp	/^ConstantInt* PathProfiler::createIncrementConstant($/;"	f	class:PathProfiler
createIncrementConstant	Transforms/Instrumentation/PathProfiling.cpp	/^ConstantInt* PathProfiler::createIncrementConstant(long incr,$/;"	f	class:PathProfiler
createIndVarSimplifyPass	Transforms/Scalar/IndVarSimplify.cpp	/^Pass *llvm::createIndVarSimplifyPass() {$/;"	f	class:llvm
createInheritance	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createInheritance(DIType Ty, DIType BaseTy,$/;"	f	class:DIBuilder
createInitializerPoisonCalls	Transforms/Instrumentation/AddressSanitizer.cpp	/^void AddressSanitizer::createInitializerPoisonCalls(Module &M,$/;"	f	class:AddressSanitizer
createInlineSpiller	CodeGen/InlineSpiller.cpp	/^Spiller *createInlineSpiller(MachineFunctionPass &pass,$/;"	f	namespace:llvm
createInlinedVariable	VMCore/DebugInfo.cpp	/^DIVariable llvm::createInlinedVariable(MDNode *DV, MDNode *InlinedScope,$/;"	f	class:llvm
createInst	MC/MCDisassembler/EDDisassembler.cpp	/^EDInst *EDDisassembler::createInst(EDByteReaderCallback byteReader, $/;"	f	class:EDDisassembler
createInstCountPass	Analysis/InstCount.cpp	/^FunctionPass *llvm::createInstCountPass() { return new InstCount(); }$/;"	f	class:llvm
createInstructionCombiningPass	Transforms/InstCombine/InstructionCombining.cpp	/^FunctionPass *llvm::createInstructionCombiningPass() {$/;"	f	class:llvm
createInstructionNamerPass	Transforms/Utils/InstructionNamer.cpp	/^FunctionPass *llvm::createInstructionNamerPass() {$/;"	f	class:llvm
createInstructionShuffler	CodeGen/MachineScheduler.cpp	/^static ScheduleDAGInstrs *createInstructionShuffler(MachineSchedContext *C) {$/;"	f	file:
createInstructionSimplifierPass	Transforms/Utils/SimplifyInstructions.cpp	/^FunctionPass *llvm::createInstructionSimplifierPass() {$/;"	f	class:llvm
createIntelJITEventListener	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^JITEventListener *JITEventListener::createIntelJITEventListener($/;"	f	class:llvm::JITEventListener
createIntelJITEventListener	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^JITEventListener *JITEventListener::createIntelJITEventListener() {$/;"	f	class:llvm::JITEventListener
createInternalizePass	Transforms/IPO/Internalize.cpp	/^ModulePass *llvm::createInternalizePass(bool AllButMain) {$/;"	f	class:llvm
createInternalizePass	Transforms/IPO/Internalize.cpp	/^ModulePass *llvm::createInternalizePass(const std::vector <const char *> &el) {$/;"	f	class:llvm
createInterval	CodeGen/LiveIntervalAnalysis.cpp	/^LiveInterval* LiveIntervals::createInterval(unsigned reg) {$/;"	f	class:LiveIntervals
createJIT	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngine *ExecutionEngine::createJIT(Module *M,$/;"	f	class:ExecutionEngine
createJIT	ExecutionEngine/JIT/JIT.cpp	/^ExecutionEngine *JIT::createJIT(Module *M,$/;"	f	class:JIT
createJIT	ExecutionEngine/MCJIT/MCJIT.cpp	/^ExecutionEngine *MCJIT::createJIT(Module *M,$/;"	f	class:MCJIT
createJumpTableIndex	CodeGen/MachineFunction.cpp	/^unsigned MachineJumpTableInfo::createJumpTableIndex($/;"	f	class:MachineJumpTableInfo
createJumpTableUId	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned createJumpTableUId() {$/;"	f	class:llvm::ARMFunctionInfo
createJumpThreadingPass	Transforms/Scalar/JumpThreading.cpp	/^FunctionPass *llvm::createJumpThreadingPass() { return new JumpThreading(); }$/;"	f	class:llvm
createLCSSAPass	Transforms/Utils/LCSSA.cpp	/^Pass *llvm::createLCSSAPass() { return new LCSSA(); }$/;"	f	class:llvm
createLICMPass	Transforms/Scalar/LICM.cpp	/^Pass *llvm::createLICMPass() { return new LICM(); }$/;"	f	class:llvm
createLazyValueInfoPass	Analysis/LazyValueInfo.cpp	/^  FunctionPass *createLazyValueInfoPass() { return new LazyValueInfo(); }$/;"	f	namespace:llvm
createLexicalBlock	VMCore/DIBuilder.cpp	/^DILexicalBlock DIBuilder::createLexicalBlock(DIDescriptor Scope, DIFile File,$/;"	f	class:DIBuilder
createLexicalBlockFile	VMCore/DIBuilder.cpp	/^DILexicalBlockFile DIBuilder::createLexicalBlockFile(DIDescriptor Scope,$/;"	f	class:DIBuilder
createLibCallAliasAnalysisPass	Analysis/LibCallAliasAnalysis.cpp	/^FunctionPass *llvm::createLibCallAliasAnalysisPass(LibCallInfo *LCI) {$/;"	f	class:llvm
createLintPass	Analysis/Lint.cpp	/^FunctionPass *llvm::createLintPass() {$/;"	f	class:llvm
createLoadCopy	Target/NVPTX/VectorElementize.cpp	/^void VectorElementize::createLoadCopy(MachineFunction& F, MachineInstr *Instr,$/;"	f	class:VectorElementize
createLocalVariable	VMCore/DIBuilder.cpp	/^DIVariable DIBuilder::createLocalVariable(unsigned Tag, DIDescriptor Scope,$/;"	f	class:DIBuilder
createLoopDeletionPass	Transforms/Scalar/LoopDeletion.cpp	/^Pass* llvm::createLoopDeletionPass() {$/;"	f	class:llvm
createLoopDependenceAnalysisPass	Analysis/LoopDependenceAnalysis.cpp	/^LoopPass *llvm::createLoopDependenceAnalysisPass() {$/;"	f	class:llvm
createLoopExtractorPass	Transforms/IPO/LoopExtractor.cpp	/^Pass *llvm::createLoopExtractorPass() { return new LoopExtractor(); }$/;"	f	class:llvm
createLoopIdiomPass	Transforms/Scalar/LoopIdiomRecognize.cpp	/^Pass *llvm::createLoopIdiomPass() { return new LoopIdiomRecognize(); }$/;"	f	class:llvm
createLoopInstSimplifyPass	Transforms/Scalar/LoopInstSimplify.cpp	/^Pass *llvm::createLoopInstSimplifyPass() {$/;"	f	class:llvm
createLoopRotatePass	Transforms/Scalar/LoopRotation.cpp	/^Pass *llvm::createLoopRotatePass() { return new LoopRotate(); }$/;"	f	class:llvm
createLoopSimplifyPass	Transforms/Utils/LoopSimplify.cpp	/^Pass *llvm::createLoopSimplifyPass() { return new LoopSimplify(); }$/;"	f	class:llvm
createLoopStrengthReducePass	Transforms/Scalar/LoopStrengthReduce.cpp	/^Pass *llvm::createLoopStrengthReducePass(const TargetLowering *TLI) {$/;"	f	class:llvm
createLoopUnrollPass	Transforms/Scalar/LoopUnrollPass.cpp	/^Pass *llvm::createLoopUnrollPass(int Threshold, int Count, int AllowPartial) {$/;"	f	class:llvm
createLoopUnswitchPass	Transforms/Scalar/LoopUnswitch.cpp	/^Pass *llvm::createLoopUnswitchPass(bool Os) {$/;"	f	class:llvm
createLoopVectorizePass	Transforms/Vectorize/LoopVectorize.cpp	/^  Pass *createLoopVectorizePass() {$/;"	f	namespace:llvm
createLowerAggrCopies	Target/NVPTX/NVPTXLowerAggrCopies.cpp	/^FunctionPass *llvm::createLowerAggrCopies() {$/;"	f	class:llvm
createLowerAtomicPass	Transforms/Scalar/LowerAtomic.cpp	/^Pass *llvm::createLowerAtomicPass() { return new LowerAtomic(); }$/;"	f	class:llvm
createLowerExpectIntrinsicPass	Transforms/Utils/LowerExpectIntrinsic.cpp	/^FunctionPass *llvm::createLowerExpectIntrinsicPass() {$/;"	f	class:llvm
createLowerInvokePass	Transforms/Utils/LowerInvoke.cpp	/^FunctionPass *llvm::createLowerInvokePass(const TargetLowering *TLI) {$/;"	f	class:llvm
createLowerInvokePass	Transforms/Utils/LowerInvoke.cpp	/^FunctionPass *llvm::createLowerInvokePass(const TargetLowering *TLI,$/;"	f	class:llvm
createLowerSwitchPass	Transforms/Utils/LowerSwitch.cpp	/^FunctionPass *llvm::createLowerSwitchPass() {$/;"	f	class:llvm
createMBlazeAsmBackend	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^MCAsmBackend *llvm::createMBlazeAsmBackend(const Target &T, StringRef TT,$/;"	f	class:llvm
createMBlazeDelaySlotFillerPass	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^FunctionPass *llvm::createMBlazeDelaySlotFillerPass(MBlazeTargetMachine &tm) {$/;"	f	class:llvm
createMBlazeDisassembler	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static MCDisassembler *createMBlazeDisassembler(const Target &T,$/;"	f	file:
createMBlazeELFObjectWriter	Target/MBlaze/MCTargetDesc/MBlazeELFObjectWriter.cpp	/^MCObjectWriter *llvm::createMBlazeELFObjectWriter(raw_ostream &OS,$/;"	f	class:llvm
createMBlazeISelDag	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^FunctionPass *llvm::createMBlazeISelDag(MBlazeTargetMachine &TM) {$/;"	f	class:llvm
createMBlazeMCCodeEmitter	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^MCCodeEmitter *llvm::createMBlazeMCCodeEmitter(const MCInstrInfo &MCII,$/;"	f	class:llvm
createMBlazeMCCodeGenInfo	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	/^static MCCodeGenInfo *createMBlazeMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createMBlazeMCInstPrinter	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	/^static MCInstPrinter *createMBlazeMCInstPrinter(const Target &T,$/;"	f	file:
createMBlazeMCInstrInfo	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	/^static MCInstrInfo *createMBlazeMCInstrInfo() {$/;"	f	file:
createMBlazeMCRegisterInfo	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	/^static MCRegisterInfo *createMBlazeMCRegisterInfo(StringRef TT) {$/;"	f	file:
createMBlazeMCSubtargetInfo	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	/^static MCSubtargetInfo *createMBlazeMCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	file:
createMCAsmInfo	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	/^static MCAsmInfo *createMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	file:
createMCAsmParser	MC/MCParser/AsmParser.cpp	/^MCAsmParser *llvm::createMCAsmParser(SourceMgr &SM,$/;"	f	class:llvm
createMCStreamer	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^static MCStreamer *createMCStreamer(const Target &T, StringRef TT,$/;"	f	file:
createMCStreamer	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp	/^static MCStreamer *createMCStreamer(const Target &T, StringRef TT,$/;"	f	file:
createMCStreamer	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	/^static MCStreamer *createMCStreamer(const Target &T, StringRef TT,$/;"	f	file:
createMCStreamer	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	/^static MCStreamer *createMCStreamer(const Target &T, StringRef TT,$/;"	f	file:
createMCStreamer	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^static MCStreamer *createMCStreamer(const Target &T, StringRef TT,$/;"	f	file:
createMLxExpansionPass	Target/ARM/MLxExpansionPass.cpp	/^FunctionPass *llvm::createMLxExpansionPass() {$/;"	f	class:llvm
createMSP430BranchSelectionPass	Target/MSP430/MSP430BranchSelector.cpp	/^FunctionPass *llvm::createMSP430BranchSelectionPass() {$/;"	f	class:llvm
createMSP430ISelDag	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^FunctionPass *llvm::createMSP430ISelDag(MSP430TargetMachine &TM,$/;"	f	class:llvm
createMSP430MCCodeGenInfo	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp	/^static MCCodeGenInfo *createMSP430MCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createMSP430MCInstPrinter	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp	/^static MCInstPrinter *createMSP430MCInstPrinter(const Target &T,$/;"	f	file:
createMSP430MCInstrInfo	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp	/^static MCInstrInfo *createMSP430MCInstrInfo() {$/;"	f	file:
createMSP430MCRegisterInfo	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp	/^static MCRegisterInfo *createMSP430MCRegisterInfo(StringRef TT) {$/;"	f	file:
createMSP430MCSubtargetInfo	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp	/^static MCSubtargetInfo *createMSP430MCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	file:
createMachOObjectFile	Object/MachOObjectFile.cpp	/^ObjectFile *ObjectFile::createMachOObjectFile(MemoryBuffer *Buffer) {$/;"	f	class:llvm::object::ObjectFile
createMachOStreamer	MC/MCMachOStreamer.cpp	/^MCStreamer *llvm::createMachOStreamer(MCContext &Context, MCAsmBackend &MAB,$/;"	f	class:llvm
createMachObjectWriter	MC/MachObjectWriter.cpp	/^MCObjectWriter *llvm::createMachObjectWriter(MCMachObjectTargetWriter *MOTW,$/;"	f	class:llvm
createMachineFunctionPrinterPass	CodeGen/MachineFunctionPrinterPass.cpp	/^MachineFunctionPass *createMachineFunctionPrinterPass(raw_ostream &OS,$/;"	f	namespace:llvm
createMachinePostDominatorTreePass	CodeGen/MachinePostDominators.cpp	/^MachinePostDominatorTree::createMachinePostDominatorTreePass() {$/;"	f	class:MachinePostDominatorTree
createMachineVerifierPass	CodeGen/MachineVerifier.cpp	/^FunctionPass *llvm::createMachineVerifierPass(const char *Banner) {$/;"	f	class:llvm
createMalloc	VMCore/Instructions.cpp	/^static Instruction *createMalloc(Instruction *InsertBefore,$/;"	f	file:
createMemCpyOptPass	Transforms/Scalar/MemCpyOptimizer.cpp	/^FunctionPass *llvm::createMemCpyOptPass() { return new MemCpyOpt(); }$/;"	f	class:llvm
createMemDepPrinter	Analysis/MemDepPrinter.cpp	/^FunctionPass *llvm::createMemDepPrinter() {$/;"	f	class:llvm
createMemberDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^DIE *CompileUnit::createMemberDIE(DIDerivedType DT) {$/;"	f	class:CompileUnit
createMemberType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createMemberType(DIDescriptor Scope, StringRef Name,$/;"	f	class:DIBuilder
createMergeFunctionsPass	Transforms/IPO/MergeFunctions.cpp	/^ModulePass *llvm::createMergeFunctionsPass() {$/;"	f	class:llvm
createMetaRenamerPass	Transforms/Utils/MetaRenamer.cpp	/^ModulePass *llvm::createMetaRenamerPass() {$/;"	f	class:llvm
createMethod	VMCore/DIBuilder.cpp	/^DISubprogram DIBuilder::createMethod(DIDescriptor Context,$/;"	f	class:DIBuilder
createMips16FrameLowering	Target/Mips/Mips16FrameLowering.cpp	/^llvm::createMips16FrameLowering(const MipsSubtarget &ST) {$/;"	f	class:llvm
createMips16InstrInfo	Target/Mips/Mips16InstrInfo.cpp	/^const MipsInstrInfo *llvm::createMips16InstrInfo(MipsTargetMachine &TM) {$/;"	f	class:llvm
createMips64Disassembler	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static MCDisassembler *createMips64Disassembler($/;"	f	file:
createMips64elDisassembler	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static MCDisassembler *createMips64elDisassembler($/;"	f	file:
createMipsAsmBackendEB32	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^MCAsmBackend *llvm::createMipsAsmBackendEB32(const Target &T, StringRef TT,$/;"	f	class:llvm
createMipsAsmBackendEB64	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^MCAsmBackend *llvm::createMipsAsmBackendEB64(const Target &T, StringRef TT,$/;"	f	class:llvm
createMipsAsmBackendEL32	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^MCAsmBackend *llvm::createMipsAsmBackendEL32(const Target &T, StringRef TT,$/;"	f	class:llvm
createMipsAsmBackendEL64	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^MCAsmBackend *llvm::createMipsAsmBackendEL64(const Target &T, StringRef TT,$/;"	f	class:llvm
createMipsDelaySlotFillerPass	Target/Mips/MipsDelaySlotFiller.cpp	/^FunctionPass *llvm::createMipsDelaySlotFillerPass(MipsTargetMachine &tm) {$/;"	f	class:llvm
createMipsDisassembler	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static MCDisassembler *createMipsDisassembler($/;"	f	file:
createMipsELFObjectWriter	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^MCObjectWriter *llvm::createMipsELFObjectWriter(raw_ostream &OS,$/;"	f	class:llvm
createMipsISelDag	Target/Mips/MipsISelDAGToDAG.cpp	/^FunctionPass *llvm::createMipsISelDag(MipsTargetMachine &TM) {$/;"	f	class:llvm
createMipsJITCodeEmitterPass	Target/Mips/MipsCodeEmitter.cpp	/^FunctionPass *llvm::createMipsJITCodeEmitterPass(MipsTargetMachine &TM,$/;"	f	class:llvm
createMipsLongBranchPass	Target/Mips/MipsLongBranch.cpp	/^FunctionPass *llvm::createMipsLongBranchPass(MipsTargetMachine &tm) {$/;"	f	class:llvm
createMipsMCAsmInfo	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	/^static MCAsmInfo *createMipsMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	file:
createMipsMCCodeEmitterEB	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^MCCodeEmitter *llvm::createMipsMCCodeEmitterEB(const MCInstrInfo &MCII,$/;"	f	class:llvm
createMipsMCCodeEmitterEL	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^MCCodeEmitter *llvm::createMipsMCCodeEmitterEL(const MCInstrInfo &MCII,$/;"	f	class:llvm
createMipsMCCodeGenInfo	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	/^static MCCodeGenInfo *createMipsMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createMipsMCInstPrinter	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	/^static MCInstPrinter *createMipsMCInstPrinter(const Target &T,$/;"	f	file:
createMipsMCInstrInfo	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	/^static MCInstrInfo *createMipsMCInstrInfo() {$/;"	f	file:
createMipsMCRegisterInfo	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	/^static MCRegisterInfo *createMipsMCRegisterInfo(StringRef TT) {$/;"	f	file:
createMipsMCSubtargetInfo	Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp	/^static MCSubtargetInfo *createMipsMCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	file:
createMipsSEFrameLowering	Target/Mips/MipsSEFrameLowering.cpp	/^llvm::createMipsSEFrameLowering(const MipsSubtarget &ST) {$/;"	f	class:llvm
createMipsSEInstrInfo	Target/Mips/MipsSEInstrInfo.cpp	/^const MipsInstrInfo *llvm::createMipsSEInstrInfo(MipsTargetMachine &TM) {$/;"	f	class:llvm
createMipselDisassembler	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static MCDisassembler *createMipselDisassembler($/;"	f	file:
createModuleDebugInfoPrinterPass	Analysis/ModuleDebugInfoPrinter.cpp	/^ModulePass *llvm::createModuleDebugInfoPrinterPass() {$/;"	f	class:llvm
createNEONModImm	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned createNEONModImm(unsigned OpCmode, unsigned Val) {$/;"	f	namespace:llvm::ARM_AM
createNVPTXISelDag	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^FunctionPass *llvm::createNVPTXISelDag(NVPTXTargetMachine &TM,$/;"	f	class:llvm
createNVPTXMCCodeGenInfo	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.cpp	/^static MCCodeGenInfo *createNVPTXMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createNVPTXMCInstrInfo	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.cpp	/^static MCInstrInfo *createNVPTXMCInstrInfo() {$/;"	f	file:
createNVPTXMCRegisterInfo	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.cpp	/^static MCRegisterInfo *createNVPTXMCRegisterInfo(StringRef TT) {$/;"	f	file:
createNVPTXMCSubtargetInfo	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.cpp	/^static MCSubtargetInfo *createNVPTXMCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	file:
createNameSpace	VMCore/DIBuilder.cpp	/^DINameSpace DIBuilder::createNameSpace(DIDescriptor Scope, StringRef Name,$/;"	f	class:DIBuilder
createNewWater	Target/ARM/ARMConstantIslandPass.cpp	/^void ARMConstantIslands::createNewWater(unsigned CPUserIndex,$/;"	f	class:ARMConstantIslands
createNoAAPass	Analysis/NoAliasAnalysis.cpp	/^ImmutablePass *llvm::createNoAAPass() { return new NoAA(); }$/;"	f	class:llvm
createNoPathProfileInfoPass	Analysis/PathProfileInfo.cpp	/^ImmutablePass *llvm::createNoPathProfileInfoPass() { return new NoPathProfileInfo(); }$/;"	f	class:llvm
createNoProfileInfoPass	Analysis/ProfileInfo.cpp	/^ImmutablePass *llvm::createNoProfileInfoPass() { return new NoProfileInfo(); }$/;"	f	class:llvm
createNode	Analysis/PathNumbering.cpp	/^BallLarusNode* BallLarusDag::createNode(BasicBlock* BB) {$/;"	f	class:BallLarusDag
createNode	Support/YAMLParser.cpp	/^  Token *createNode(const Token &V) {$/;"	f	struct:llvm::ilist_node_traits
createNode	Transforms/Instrumentation/PathProfiling.cpp	/^BallLarusNode* BLInstrumentationDag::createNode(BasicBlock* BB) {$/;"	f	class:BLInstrumentationDag
createNodeForGEP	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::createNodeForGEP(GEPOperator *GEP) {$/;"	f	class:ScalarEvolution
createNodeForPHI	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::createNodeForPHI(PHINode *PN) {$/;"	f	class:ScalarEvolution
createNullPtrType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createNullPtrType(StringRef Name) {$/;"	f	class:DIBuilder
createNullStreamer	MC/MCNullStreamer.cpp	/^MCStreamer *llvm::createNullStreamer(MCContext &Context) {$/;"	f	class:llvm
createOProfileJITEventListener	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^JITEventListener *JITEventListener::createOProfileJITEventListener($/;"	f	class:llvm::JITEventListener
createOProfileJITEventListener	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^JITEventListener *JITEventListener::createOProfileJITEventListener() {$/;"	f	class:llvm::JITEventListener
createObjCARCAPElimPass	Transforms/Scalar/ObjCARC.cpp	/^Pass *llvm::createObjCARCAPElimPass() {$/;"	f	class:llvm
createObjCARCAliasAnalysisPass	Transforms/Scalar/ObjCARC.cpp	/^ImmutablePass *llvm::createObjCARCAliasAnalysisPass() {$/;"	f	class:llvm
createObjCARCContractPass	Transforms/Scalar/ObjCARC.cpp	/^Pass *llvm::createObjCARCContractPass() {$/;"	f	class:llvm
createObjCARCExpandPass	Transforms/Scalar/ObjCARC.cpp	/^Pass *llvm::createObjCARCExpandPass() {$/;"	f	class:llvm
createObjCARCOptPass	Transforms/Scalar/ObjCARC.cpp	/^Pass *llvm::createObjCARCOptPass() {$/;"	f	class:llvm
createObjCIVar	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createObjCIVar(StringRef Name,$/;"	f	class:DIBuilder
createObjCProperty	VMCore/DIBuilder.cpp	/^DIObjCProperty DIBuilder::createObjCProperty(StringRef Name,$/;"	f	class:DIBuilder
createObjectFile	Object/ObjectFile.cpp	/^ObjectFile *ObjectFile::createObjectFile(MemoryBuffer *Object) {$/;"	f	class:ObjectFile
createObjectFile	Object/ObjectFile.cpp	/^ObjectFile *ObjectFile::createObjectFile(StringRef ObjectPath) {$/;"	f	class:ObjectFile
createObjectImage	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^ObjectImage *RuntimeDyldImpl::createObjectImage(ObjectBuffer *InputBuffer) {$/;"	f	class:llvm::RuntimeDyldImpl
createObjectImage	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^ObjectImage *RuntimeDyldELF::createObjectImage(ObjectBuffer *Buffer) {$/;"	f	class:llvm::RuntimeDyldELF
createObjectPointerType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createObjectPointerType(DIType Ty) {$/;"	f	class:DIBuilder
createObjectWriter	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon285::DarwinARMAsmBackend
createObjectWriter	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon285::ELFARMAsmBackend
createObjectWriter	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon456::ELFMBlazeAsmBackend
createObjectWriter	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon429::MipsAsmBackend
createObjectWriter	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^    MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon321::DarwinPPCAsmBackend
createObjectWriter	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^    MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon321::ELFPPCAsmBackend
createObjectWriter	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon345::DarwinX86_32AsmBackend
createObjectWriter	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon345::DarwinX86_64AsmBackend
createObjectWriter	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon345::ELFX86_32AsmBackend
createObjectWriter	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon345::ELFX86_64AsmBackend
createObjectWriter	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  MCObjectWriter *createObjectWriter(raw_ostream &OS) const {$/;"	f	class:__anon345::WindowsX86AsmBackend
createOptimalEdgeProfilerPass	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	/^ModulePass *llvm::createOptimalEdgeProfilerPass() {$/;"	f	class:llvm
createOrdering	Transforms/Instrumentation/ThreadSanitizer.cpp	/^static ConstantInt *createOrdering(IRBuilder<> *IRB, AtomicOrdering ord) {$/;"	f	file:
createPBQPRegisterAllocator	CodeGen/RegAllocPBQP.cpp	/^FunctionPass* llvm::createPBQPRegisterAllocator($/;"	f	class:llvm
createPHIsForSplitLoopExit	Transforms/Utils/BreakCriticalEdges.cpp	/^static void createPHIsForSplitLoopExit(ArrayRef<BasicBlock *> Preds,$/;"	f	file:
createPICLabelUId	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned createPICLabelUId() {$/;"	f	class:llvm::ARMFunctionInfo
createPPCAsmBackend	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^MCAsmBackend *llvm::createPPCAsmBackend(const Target &T, StringRef TT, StringRef CPU) {$/;"	f	class:llvm
createPPCAsmPrinterPass	Target/PowerPC/PPCAsmPrinter.cpp	/^static AsmPrinter *createPPCAsmPrinterPass(TargetMachine &tm,$/;"	f	file:
createPPCBranchSelectionPass	Target/PowerPC/PPCBranchSelector.cpp	/^FunctionPass *llvm::createPPCBranchSelectionPass() {$/;"	f	class:llvm
createPPCCTRLoops	Target/PowerPC/PPCCTRLoops.cpp	/^FunctionPass *llvm::createPPCCTRLoops() {$/;"	f	class:llvm
createPPCELFObjectWriter	Target/PowerPC/MCTargetDesc/PPCELFObjectWriter.cpp	/^MCObjectWriter *llvm::createPPCELFObjectWriter(raw_ostream &OS,$/;"	f	class:llvm
createPPCISelDag	Target/PowerPC/PPCISelDAGToDAG.cpp	/^FunctionPass *llvm::createPPCISelDag(PPCTargetMachine &TM) {$/;"	f	class:llvm
createPPCJITCodeEmitterPass	Target/PowerPC/PPCCodeEmitter.cpp	/^FunctionPass *llvm::createPPCJITCodeEmitterPass(PPCTargetMachine &TM,$/;"	f	class:llvm
createPPCMCAsmInfo	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	/^static MCAsmInfo *createPPCMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	file:
createPPCMCCodeEmitter	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^MCCodeEmitter *llvm::createPPCMCCodeEmitter(const MCInstrInfo &MCII,$/;"	f	class:llvm
createPPCMCCodeGenInfo	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	/^static MCCodeGenInfo *createPPCMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createPPCMCInstPrinter	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	/^static MCInstPrinter *createPPCMCInstPrinter(const Target &T,$/;"	f	file:
createPPCMCInstrInfo	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	/^static MCInstrInfo *createPPCMCInstrInfo() {$/;"	f	file:
createPPCMCRegisterInfo	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	/^static MCRegisterInfo *createPPCMCRegisterInfo(StringRef TT) {$/;"	f	file:
createPPCMCSubtargetInfo	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp	/^static MCSubtargetInfo *createPPCMCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	file:
createPartialInliningPass	Transforms/IPO/PartialInlining.cpp	/^ModulePass* llvm::createPartialInliningPass() { return new PartialInliner(); }$/;"	f	class:llvm
createPass	VMCore/Pass.cpp	/^Pass *Pass::createPass(AnalysisID ID) {$/;"	f	class:Pass
createPass	VMCore/Pass.cpp	/^Pass *PassInfo::createPass() const {$/;"	f	class:PassInfo
createPassConfig	CodeGen/Passes.cpp	/^TargetPassConfig *LLVMTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:LLVMTargetMachine
createPassConfig	Target/ARM/ARMTargetMachine.cpp	/^TargetPassConfig *ARMBaseTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:ARMBaseTargetMachine
createPassConfig	Target/CellSPU/SPUTargetMachine.cpp	/^TargetPassConfig *SPUTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:SPUTargetMachine
createPassConfig	Target/Hexagon/HexagonTargetMachine.cpp	/^TargetPassConfig *HexagonTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:HexagonTargetMachine
createPassConfig	Target/MBlaze/MBlazeTargetMachine.cpp	/^TargetPassConfig *MBlazeTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:MBlazeTargetMachine
createPassConfig	Target/MSP430/MSP430TargetMachine.cpp	/^TargetPassConfig *MSP430TargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:MSP430TargetMachine
createPassConfig	Target/Mips/MipsTargetMachine.cpp	/^TargetPassConfig *MipsTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:MipsTargetMachine
createPassConfig	Target/NVPTX/NVPTXTargetMachine.cpp	/^TargetPassConfig *NVPTXTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:NVPTXTargetMachine
createPassConfig	Target/PowerPC/PPCTargetMachine.cpp	/^TargetPassConfig *PPCTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:PPCTargetMachine
createPassConfig	Target/Sparc/SparcTargetMachine.cpp	/^TargetPassConfig *SparcTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:SparcTargetMachine
createPassConfig	Target/X86/X86TargetMachine.cpp	/^TargetPassConfig *X86TargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:X86TargetMachine
createPassConfig	Target/XCore/XCoreTargetMachine.cpp	/^TargetPassConfig *XCoreTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:XCoreTargetMachine
createPathProfileLoaderPass	Analysis/PathProfileInfo.cpp	/^ModulePass *llvm::createPathProfileLoaderPass() {$/;"	f	class:llvm
createPathProfileVerifierPass	Analysis/PathProfileVerifier.cpp	/^ModulePass *llvm::createPathProfileVerifierPass() {$/;"	f	class:llvm
createPathProfilerPass	Transforms/Instrumentation/PathProfiling.cpp	/^ModulePass *llvm::createPathProfilerPass() { return new PathProfiler(); }$/;"	f	class:llvm
createPointerType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createPointerType(DIType PointeeTy, uint64_t SizeInBits,$/;"	f	class:DIBuilder
createPostDomOnlyPrinterPass	Analysis/DomPrinter.cpp	/^FunctionPass *llvm::createPostDomOnlyPrinterPass() {$/;"	f	class:llvm
createPostDomOnlyViewerPass	Analysis/DomPrinter.cpp	/^FunctionPass *llvm::createPostDomOnlyViewerPass() {$/;"	f	class:llvm
createPostDomPrinterPass	Analysis/DomPrinter.cpp	/^FunctionPass *llvm::createPostDomPrinterPass() {$/;"	f	class:llvm
createPostDomTree	Analysis/PostDominators.cpp	/^FunctionPass* llvm::createPostDomTree() {$/;"	f	class:llvm
createPostDomViewerPass	Analysis/DomPrinter.cpp	/^FunctionPass *llvm::createPostDomViewerPass() {$/;"	f	class:llvm
createPrintFunctionPass	VMCore/PrintModulePass.cpp	/^FunctionPass *llvm::createPrintFunctionPass(const std::string &Banner,$/;"	f	class:llvm
createPrintModulePass	VMCore/PrintModulePass.cpp	/^ModulePass *llvm::createPrintModulePass(llvm::raw_ostream *OS, $/;"	f	class:llvm
createPrinterPass	Analysis/IPA/CallGraphSCCPass.cpp	/^Pass *CallGraphSCCPass::createPrinterPass(raw_ostream &O,$/;"	f	class:CallGraphSCCPass
createPrinterPass	Analysis/LoopPass.cpp	/^Pass *LoopPass::createPrinterPass(raw_ostream &O,$/;"	f	class:LoopPass
createPrinterPass	Analysis/RegionPass.cpp	/^Pass *RegionPass::createPrinterPass(raw_ostream &O,$/;"	f	class:RegionPass
createPrinterPass	CodeGen/MachineFunctionPass.cpp	/^Pass *MachineFunctionPass::createPrinterPass(raw_ostream &O,$/;"	f	class:MachineFunctionPass
createPrinterPass	VMCore/Pass.cpp	/^Pass *BasicBlockPass::createPrinterPass(raw_ostream &O,$/;"	f	class:BasicBlockPass
createPrinterPass	VMCore/Pass.cpp	/^Pass *FunctionPass::createPrinterPass(raw_ostream &O,$/;"	f	class:FunctionPass
createPrinterPass	VMCore/Pass.cpp	/^Pass *ModulePass::createPrinterPass(raw_ostream &O,$/;"	f	class:ModulePass
createPrinterPass	VMCore/PassManager.cpp	/^  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const {$/;"	f	class:llvm::FunctionPassManagerImpl
createPrinterPass	VMCore/PassManager.cpp	/^  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const {$/;"	f	class:llvm::MPPassManager
createPrinterPass	VMCore/PassManager.cpp	/^  Pass *createPrinterPass(raw_ostream &O, const std::string &Banner) const {$/;"	f	class:llvm::PassManagerImpl
createPrivateGlobalForString	Transforms/Instrumentation/AddressSanitizer.cpp	/^static GlobalVariable *createPrivateGlobalForString(Module &M, StringRef Str) {$/;"	f	file:
createProfileEstimatorPass	Analysis/ProfileEstimatorPass.cpp	/^  FunctionPass *createProfileEstimatorPass() {$/;"	f	namespace:llvm
createProfileEstimatorPass	Analysis/ProfileEstimatorPass.cpp	/^  Pass *createProfileEstimatorPass(const unsigned execcount) {$/;"	f	namespace:llvm
createProfileLoaderPass	Analysis/ProfileInfoLoaderPass.cpp	/^ModulePass *llvm::createProfileLoaderPass() { return new LoaderPass(); }$/;"	f	class:llvm
createProfileLoaderPass	Analysis/ProfileInfoLoaderPass.cpp	/^Pass *llvm::createProfileLoaderPass(const std::string &Filename) {$/;"	f	class:llvm
createProfileMetadataLoaderPass	Analysis/ProfileDataLoaderPass.cpp	/^ModulePass *llvm::createProfileMetadataLoaderPass() { $/;"	f	class:llvm
createProfileMetadataLoaderPass	Analysis/ProfileDataLoaderPass.cpp	/^ModulePass *llvm::createProfileMetadataLoaderPass(const std::string &Filename) {$/;"	f	class:llvm
createProfileVerifierPass	Analysis/ProfileVerifierPass.cpp	/^  FunctionPass *createProfileVerifierPass() {$/;"	f	namespace:llvm
createPromoteMemoryToRegisterPass	Transforms/Utils/Mem2Reg.cpp	/^FunctionPass *llvm::createPromoteMemoryToRegisterPass() {$/;"	f	class:llvm
createPruneEHPass	Transforms/IPO/PruneEH.cpp	/^Pass *llvm::createPruneEHPass() { return new PruneEH(); }$/;"	f	class:llvm
createPureStreamer	MC/MCPureStreamer.cpp	/^MCStreamer *llvm::createPureStreamer(MCContext &Context, MCAsmBackend &MAB,$/;"	f	class:llvm
createQualifiedType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createQualifiedType(unsigned Tag, DIType FromTy) {$/;"	f	class:DIBuilder
createReassociatePass	Transforms/Scalar/Reassociate.cpp	/^FunctionPass *llvm::createReassociatePass() { return new Reassociate(); }$/;"	f	class:llvm
createReferenceType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createReferenceType(unsigned Tag, DIType RTy) {$/;"	f	class:DIBuilder
createRegAllocPass	CodeGen/Passes.cpp	/^FunctionPass *TargetPassConfig::createRegAllocPass(bool Optimized) {$/;"	f	class:TargetPassConfig
createRegion	Analysis/RegionInfo.cpp	/^Region *RegionInfo::createRegion(BasicBlock *entry, BasicBlock *exit) {$/;"	f	class:RegionInfo
createRegionInfoPass	Analysis/RegionInfo.cpp	/^  FunctionPass *createRegionInfoPass() {$/;"	f	namespace:llvm
createRegionOnlyPrinterPass	Analysis/RegionPrinter.cpp	/^FunctionPass* llvm::createRegionOnlyPrinterPass() {$/;"	f	class:llvm
createRegionOnlyViewerPass	Analysis/RegionPrinter.cpp	/^FunctionPass* llvm::createRegionOnlyViewerPass() {$/;"	f	class:llvm
createRegionPrinterPass	Analysis/RegionPrinter.cpp	/^FunctionPass* llvm::createRegionPrinterPass() {$/;"	f	class:llvm
createRegionViewerPass	Analysis/RegionPrinter.cpp	/^FunctionPass* llvm::createRegionViewerPass() {$/;"	f	class:llvm
createResultReg	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::createResultReg(const TargetRegisterClass* RC) {$/;"	f	class:FastISel
createSCCPPass	Transforms/Scalar/SCCP.cpp	/^FunctionPass *llvm::createSCCPPass() {$/;"	f	class:llvm
createSCEV	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::createSCEV(Value *V) {$/;"	f	class:ScalarEvolution
createSPUISelDag	Target/CellSPU/SPUISelDAGToDAG.cpp	/^FunctionPass *llvm::createSPUISelDag(SPUTargetMachine &TM) {$/;"	f	class:llvm
createSPUMCAsmInfo	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp	/^static MCAsmInfo *createSPUMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	file:
createSPUMCCodeGenInfo	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp	/^static MCCodeGenInfo *createSPUMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createSPUMCInstrInfo	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp	/^static MCInstrInfo *createSPUMCInstrInfo() {$/;"	f	file:
createSPUMCSubtargetInfo	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp	/^static MCSubtargetInfo *createSPUMCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	file:
createSPUNopFillerPass	Target/CellSPU/SPUNopFiller.cpp	/^FunctionPass *llvm::createSPUNopFillerPass(SPUTargetMachine &tm) {$/;"	f	class:llvm
createSROAPass	Transforms/Scalar/SROA.cpp	/^FunctionPass *llvm::createSROAPass(bool RequiresDomTree) {$/;"	f	class:llvm
createScalarEvolutionAliasAnalysisPass	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^FunctionPass *llvm::createScalarEvolutionAliasAnalysisPass() {$/;"	f	class:llvm
createScalarReplAggregatesPass	Transforms/Scalar/ScalarReplAggregates.cpp	/^FunctionPass *llvm::createScalarReplAggregatesPass(int Threshold,$/;"	f	class:llvm
createSection	MC/WinCOFFObjectWriter.cpp	/^COFFSection *WinCOFFObjectWriter::createSection(llvm::StringRef Name) {$/;"	f	class:WinCOFFObjectWriter
createSentinel	Support/YAMLParser.cpp	/^  Token *createSentinel() const {$/;"	f	struct:llvm::ilist_sentinel_traits
createSimplifyLibCallsPass	Transforms/Scalar/SimplifyLibCalls.cpp	/^FunctionPass *llvm::createSimplifyLibCallsPass() {$/;"	f	class:llvm
createSingleLoopExtractorPass	Transforms/IPO/LoopExtractor.cpp	/^Pass *llvm::createSingleLoopExtractorPass() {$/;"	f	class:llvm
createSinkingPass	Transforms/Scalar/Sink.cpp	/^FunctionPass *llvm::createSinkingPass() { return new Sinking(); }$/;"	f	class:llvm
createSjLjEHPreparePass	CodeGen/SjLjEHPrepare.cpp	/^FunctionPass *llvm::createSjLjEHPreparePass(const TargetLowering *TLI) {$/;"	f	class:llvm
createSlotTracker	VMCore/AsmWriter.cpp	/^static SlotTracker *createSlotTracker(const Value *V) {$/;"	f	file:
createSlowPathCmp	Transforms/Instrumentation/AddressSanitizer.cpp	/^Value *AddressSanitizer::createSlowPathCmp(IRBuilder<> &IRB, Value *AddrLong,$/;"	f	class:AddressSanitizer
createSourceListDAGScheduler	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^llvm::createSourceListDAGScheduler(SelectionDAGISel *IS,$/;"	f	class:llvm
createSparcDelaySlotFillerPass	Target/Sparc/DelaySlotFiller.cpp	/^FunctionPass *llvm::createSparcDelaySlotFillerPass(TargetMachine &tm) {$/;"	f	class:llvm
createSparcFPMoverPass	Target/Sparc/FPMover.cpp	/^FunctionPass *llvm::createSparcFPMoverPass(TargetMachine &tm) {$/;"	f	class:llvm
createSparcISelDag	Target/Sparc/SparcISelDAGToDAG.cpp	/^FunctionPass *llvm::createSparcISelDag(SparcTargetMachine &TM) {$/;"	f	class:llvm
createSparcMCCodeGenInfo	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.cpp	/^static MCCodeGenInfo *createSparcMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createSparcMCInstrInfo	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.cpp	/^static MCInstrInfo *createSparcMCInstrInfo() {$/;"	f	file:
createSparcMCRegisterInfo	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.cpp	/^static MCRegisterInfo *createSparcMCRegisterInfo(StringRef TT) {$/;"	f	file:
createSparcMCSubtargetInfo	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.cpp	/^static MCSubtargetInfo *createSparcMCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	file:
createSpillSlot	CodeGen/VirtRegMap.cpp	/^unsigned VirtRegMap::createSpillSlot(const TargetRegisterClass *RC) {$/;"	f	class:VirtRegMap
createSpiller	CodeGen/Spiller.cpp	/^llvm::Spiller* llvm::createSpiller(MachineFunctionPass &pass,$/;"	f	class:llvm
createSplitBBatBarPass	Target/NVPTX/NVPTXSplitBBatBar.cpp	/^FunctionPass *llvm::createSplitBBatBarPass() {$/;"	f	class:llvm
createStackProtectorPass	CodeGen/StackProtector.cpp	/^FunctionPass *llvm::createStackProtectorPass(const TargetLowering *tli) {$/;"	f	class:llvm
createStaticVariable	VMCore/DIBuilder.cpp	/^createStaticVariable(DIDescriptor Context, StringRef Name,$/;"	f	class:DIBuilder
createStoreCopy	Target/NVPTX/VectorElementize.cpp	/^void VectorElementize::createStoreCopy(MachineFunction& F, MachineInstr *Instr,$/;"	f	class:VectorElementize
createStripDeadDebugInfoPass	Transforms/IPO/StripSymbols.cpp	/^ModulePass *llvm::createStripDeadDebugInfoPass() {$/;"	f	class:llvm
createStripDeadPrototypesPass	Transforms/IPO/StripDeadPrototypes.cpp	/^ModulePass *llvm::createStripDeadPrototypesPass() {$/;"	f	class:llvm
createStripDebugDeclarePass	Transforms/IPO/StripSymbols.cpp	/^ModulePass *llvm::createStripDebugDeclarePass() {$/;"	f	class:llvm
createStripNonDebugSymbolsPass	Transforms/IPO/StripSymbols.cpp	/^ModulePass *llvm::createStripNonDebugSymbolsPass() {$/;"	f	class:llvm
createStripSymbolsPass	Transforms/IPO/StripSymbols.cpp	/^ModulePass *llvm::createStripSymbolsPass(bool OnlyDebugInfo) {$/;"	f	class:llvm
createStructType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createStructType(DIDescriptor Context, StringRef Name,$/;"	f	class:DIBuilder
createStubFunction	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^uint8_t *RuntimeDyldImpl::createStubFunction(uint8_t *Addr) {$/;"	f	class:llvm::RuntimeDyldImpl
createSubroutineType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createSubroutineType(DIFile File, DIArray ParameterTypes) {$/;"	f	class:DIBuilder
createSymbol	MC/WinCOFFObjectWriter.cpp	/^COFFSymbol *WinCOFFObjectWriter::createSymbol(StringRef Name) {$/;"	f	class:WinCOFFObjectWriter
createTLOF	Target/ARM/ARMISelLowering.cpp	/^static TargetLoweringObjectFile *createTLOF(TargetMachine &TM) {$/;"	f	file:
createTLOF	Target/X86/X86ISelLowering.cpp	/^static TargetLoweringObjectFile *createTLOF(X86TargetMachine &TM) {$/;"	f	file:
createTailCallEliminationPass	Transforms/Scalar/TailRecursionElimination.cpp	/^FunctionPass *llvm::createTailCallEliminationPass() {$/;"	f	class:llvm
createTargetRegisterAllocator	CodeGen/Passes.cpp	/^FunctionPass *TargetPassConfig::createTargetRegisterAllocator(bool Optimized) {$/;"	f	class:TargetPassConfig
createTemplateTypeParameter	VMCore/DIBuilder.cpp	/^DIBuilder::createTemplateTypeParameter(DIDescriptor Context, StringRef Name,$/;"	f	class:DIBuilder
createTemplateValueParameter	VMCore/DIBuilder.cpp	/^DIBuilder::createTemplateValueParameter(DIDescriptor Context, StringRef Name,$/;"	f	class:DIBuilder
createTemporaryType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createTemporaryType() {$/;"	f	class:DIBuilder
createTemporaryType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createTemporaryType(DIFile F) {$/;"	f	class:DIBuilder
createTheTimeInfo	VMCore/PassManager.cpp	/^void TimingInfo::createTheTimeInfo() {$/;"	f	class:TimingInfo
createThreadSanitizerPass	Transforms/Instrumentation/ThreadSanitizer.cpp	/^FunctionPass *llvm::createThreadSanitizerPass() {$/;"	f	class:llvm
createThumb2ITBlockPass	Target/ARM/Thumb2ITBlockPass.cpp	/^FunctionPass *llvm::createThumb2ITBlockPass() {$/;"	f	class:llvm
createThumb2SizeReductionPass	Target/ARM/Thumb2SizeReduction.cpp	/^FunctionPass *llvm::createThumb2SizeReductionPass() {$/;"	f	class:llvm
createThumbDisassembler	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static MCDisassembler *createThumbDisassembler(const Target &T, const MCSubtargetInfo &STI) {$/;"	f	file:
createTypeBasedAliasAnalysisPass	Analysis/TypeBasedAliasAnalysis.cpp	/^ImmutablePass *llvm::createTypeBasedAliasAnalysisPass() {$/;"	f	class:llvm
createTypedef	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createTypedef(DIType Ty, StringRef Name, DIFile File,$/;"	f	class:DIBuilder
createUnifyFunctionExitNodesPass	Transforms/Utils/UnifyFunctionExitNodes.cpp	/^Pass *llvm::createUnifyFunctionExitNodesPass() {$/;"	f	class:llvm
createUnionType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createUnionType(DIDescriptor Scope, StringRef Name,$/;"	f	class:DIBuilder
createUnreachableBlockEliminationPass	CodeGen/UnreachableBlockElim.cpp	/^FunctionPass *llvm::createUnreachableBlockEliminationPass() {$/;"	f	class:llvm
createUnspecifiedParameter	VMCore/DIBuilder.cpp	/^DIDescriptor DIBuilder::createUnspecifiedParameter() {$/;"	f	class:DIBuilder
createVLIWDAGScheduler	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^llvm::createVLIWDAGScheduler(SelectionDAGISel *IS, CodeGenOpt::Level) {$/;"	f	class:llvm
createVLIWMachineSched	Target/Hexagon/HexagonTargetMachine.cpp	/^static ScheduleDAGInstrs *createVLIWMachineSched(MachineSchedContext *C) {$/;"	f	file:
createVR	Target/Hexagon/HexagonInstrInfo.cpp	/^unsigned HexagonInstrInfo::createVR(MachineFunction* MF, MVT VT) const {$/;"	f	class:HexagonInstrInfo
createValueName	VMCore/ValueSymbolTable.cpp	/^ValueName *ValueSymbolTable::createValueName(StringRef Name, Value *V) {$/;"	f	class:ValueSymbolTable
createVecBuild	Target/NVPTX/VectorElementize.cpp	/^void VectorElementize::createVecBuild(MachineFunction& F, MachineInstr *Instr,$/;"	f	class:VectorElementize
createVecDest	Target/NVPTX/VectorElementize.cpp	/^void VectorElementize::createVecDest(MachineFunction& F, MachineInstr *Instr,$/;"	f	class:VectorElementize
createVecExtract	Target/NVPTX/VectorElementize.cpp	/^void VectorElementize::createVecExtract(MachineFunction& F, MachineInstr *Instr,$/;"	f	class:VectorElementize
createVecInsert	Target/NVPTX/VectorElementize.cpp	/^void VectorElementize::createVecInsert(MachineFunction& F, MachineInstr *Instr,$/;"	f	class:VectorElementize
createVecShuffle	Target/NVPTX/VectorElementize.cpp	/^void VectorElementize::createVecShuffle(MachineFunction& F, MachineInstr *Instr,$/;"	f	class:VectorElementize
createVectorElementizePass	Target/NVPTX/VectorElementize.cpp	/^FunctionPass *llvm::createVectorElementizePass(NVPTXTargetMachine &tm) {$/;"	f	class:llvm
createVectorType	VMCore/DIBuilder.cpp	/^DIType DIBuilder::createVectorType(uint64_t Size, uint64_t AlignInBits,$/;"	f	class:DIBuilder
createVerifierPass	VMCore/Verifier.cpp	/^FunctionPass *llvm::createVerifierPass(VerifierFailureAction action) {$/;"	f	class:llvm
createVirtualRegister	CodeGen/MachineRegisterInfo.cpp	/^MachineRegisterInfo::createVirtualRegister(const TargetRegisterClass *RegClass){$/;"	f	class:MachineRegisterInfo
createWinCOFFObjectWriter	MC/WinCOFFObjectWriter.cpp	/^  MCObjectWriter *createWinCOFFObjectWriter(MCWinCOFFObjectTargetWriter *MOTW,$/;"	f	namespace:llvm
createWinCOFFStreamer	MC/WinCOFFStreamer.cpp	/^  MCStreamer *createWinCOFFStreamer(MCContext &Context,$/;"	f	namespace:llvm
createX86ELFObjectWriter	Target/X86/MCTargetDesc/X86ELFObjectWriter.cpp	/^MCObjectWriter *llvm::createX86ELFObjectWriter(raw_ostream &OS,$/;"	f	class:llvm
createX86FloatingPointStackifierPass	Target/X86/X86FloatingPoint.cpp	/^FunctionPass *llvm::createX86FloatingPointStackifierPass() { return new FPS(); }$/;"	f	class:llvm
createX86ISelDag	Target/X86/X86ISelDAGToDAG.cpp	/^FunctionPass *llvm::createX86ISelDag(X86TargetMachine &TM,$/;"	f	class:llvm
createX86IssueVZeroUpperPass	Target/X86/X86VZeroUpper.cpp	/^FunctionPass *llvm::createX86IssueVZeroUpperPass() {$/;"	f	class:llvm
createX86JITCodeEmitterPass	Target/X86/X86CodeEmitter.cpp	/^FunctionPass *llvm::createX86JITCodeEmitterPass(X86TargetMachine &TM,$/;"	f	class:llvm
createX86MCAsmInfo	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^static MCAsmInfo *createX86MCAsmInfo(const Target &T, StringRef TT) {$/;"	f	file:
createX86MCCodeEmitter	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^MCCodeEmitter *llvm::createX86MCCodeEmitter(const MCInstrInfo &MCII,$/;"	f	class:llvm
createX86MCCodeGenInfo	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^static MCCodeGenInfo *createX86MCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createX86MCInstPrinter	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^static MCInstPrinter *createX86MCInstPrinter(const Target &T,$/;"	f	file:
createX86MCInstrAnalysis	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^static MCInstrAnalysis *createX86MCInstrAnalysis(const MCInstrInfo *Info) {$/;"	f	file:
createX86MCInstrInfo	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^static MCInstrInfo *createX86MCInstrInfo() {$/;"	f	file:
createX86MCRegisterInfo	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^static MCRegisterInfo *createX86MCRegisterInfo(StringRef TT) {$/;"	f	file:
createX86MCSubtargetInfo	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^MCSubtargetInfo *X86_MC::createX86MCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	class:X86_MC
createX86MachObjectWriter	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^MCObjectWriter *llvm::createX86MachObjectWriter(raw_ostream &OS,$/;"	f	class:llvm
createX86MaxStackAlignmentHeuristicPass	Target/X86/X86RegisterInfo.cpp	/^llvm::createX86MaxStackAlignmentHeuristicPass() { return new MSAH(); }$/;"	f	class:llvm
createX86WinCOFFObjectWriter	Target/X86/MCTargetDesc/X86WinCOFFObjectWriter.cpp	/^MCObjectWriter *llvm::createX86WinCOFFObjectWriter(raw_ostream &OS,$/;"	f	class:llvm
createX86_32AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^MCAsmBackend *llvm::createX86_32AsmBackend(const Target &T, StringRef TT, StringRef CPU) {$/;"	f	class:llvm
createX86_32Disassembler	Target/X86/Disassembler/X86Disassembler.cpp	/^static MCDisassembler *createX86_32Disassembler(const Target &T,$/;"	f	file:
createX86_64AsmBackend	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^MCAsmBackend *llvm::createX86_64AsmBackend(const Target &T, StringRef TT, StringRef CPU) {$/;"	f	class:llvm
createX86_64Disassembler	Target/X86/Disassembler/X86Disassembler.cpp	/^static MCDisassembler *createX86_64Disassembler(const Target &T,$/;"	f	file:
createXCoreISelDag	Target/XCore/XCoreISelDAGToDAG.cpp	/^FunctionPass *llvm::createXCoreISelDag(XCoreTargetMachine &TM,$/;"	f	class:llvm
createXCoreMCAsmInfo	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp	/^static MCAsmInfo *createXCoreMCAsmInfo(const Target &T, StringRef TT) {$/;"	f	file:
createXCoreMCCodeGenInfo	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp	/^static MCCodeGenInfo *createXCoreMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createXCoreMCInstrInfo	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp	/^static MCInstrInfo *createXCoreMCInstrInfo() {$/;"	f	file:
createXCoreMCRegisterInfo	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp	/^static MCRegisterInfo *createXCoreMCRegisterInfo(StringRef TT) {$/;"	f	file:
createXCoreMCSubtargetInfo	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp	/^static MCSubtargetInfo *createXCoreMCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	file:
create_cmp_expression	Transforms/Scalar/GVN.cpp	/^Expression ValueTable::create_cmp_expression(unsigned Opcode,$/;"	f	class:ValueTable
create_directories	Support/PathV2.cpp	/^error_code create_directories(const Twine &path, bool &existed) {$/;"	f	namespace:llvm::sys::fs
create_expression	Transforms/Scalar/GVN.cpp	/^Expression ValueTable::create_expression(Instruction *I) {$/;"	f	class:ValueTable
create_extractvalue_expression	Transforms/Scalar/GVN.cpp	/^Expression ValueTable::create_extractvalue_expression(ExtractValueInst *EI) {$/;"	f	class:ValueTable
cset	Support/regex2.h	/^} cset;$/;"	t	typeref:struct:__anon232
csetsize	Support/regex2.h	/^	int csetsize;		\/* number of bits in a cset vector *\/$/;"	m	struct:re_guts
cstr	DebugInfo/DWARFFormValue.h	/^      const char* cstr;$/;"	m	union:llvm::DWARFFormValue::ValueType::__anon175
curpos	Target/NVPTX/NVPTXAsmPrinter.h	/^    unsigned curpos;$/;"	m	class:llvm::NVPTXAsmPrinter::AggBuffer
currentBB	Analysis/DominanceFrontier.cpp	/^    BasicBlock *currentBB;$/;"	m	class:__anon6::DFCalculateWorkObject	file:
currentFunctionNumber	Transforms/Instrumentation/PathProfiling.cpp	/^  unsigned currentFunctionNumber;$/;"	m	class:__anon488::PathProfiler	file:
currentGeneration	Transforms/Scalar/EarlyCSE.cpp	/^    unsigned currentGeneration() { return CurrentGeneration; }$/;"	f	class:__anon566::EarlyCSE::StackNode
currentInput	Support/YAMLParser.cpp	/^  StringRef currentInput() {$/;"	f	class:llvm::yaml::Scanner	file:
currentIntv	CodeGen/SplitKit.h	/^  unsigned currentIntv() const { return OpenIdx; }$/;"	f	class:llvm::SplitEditor
currentLoop	Transforms/Scalar/LoopUnswitch.cpp	/^    Loop *currentLoop;$/;"	m	class:__anon494::LoopUnswitch	file:
current_pos	Support/raw_os_ostream.cpp	/^uint64_t raw_os_ostream::current_pos() const { return OS.tellp(); }$/;"	f	class:raw_os_ostream
current_pos	Support/raw_ostream.cpp	/^uint64_t raw_null_ostream::current_pos() const {$/;"	f	class:raw_null_ostream
current_pos	Support/raw_ostream.cpp	/^uint64_t raw_svector_ostream::current_pos() const {$/;"	f	class:raw_svector_ostream
customPassID	CodeGen/RegAllocPBQP.cpp	/^  char *customPassID;$/;"	m	class:__anon135::RegAllocPBQP	file:
cvtLdExtTWriteBackImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtLdExtTWriteBackImm(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtLdExtTWriteBackReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtLdExtTWriteBackReg(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtLdWriteBackRegAddrMode2	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtLdWriteBackRegAddrMode2(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtLdWriteBackRegAddrMode3	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtLdWriteBackRegAddrMode3(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtLdWriteBackRegAddrModeImm12	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtLdWriteBackRegAddrModeImm12(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtLdWriteBackRegT2AddrModeImm8	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtLdWriteBackRegT2AddrModeImm8(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtLdrdPre	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtLdrdPre(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtStExtTWriteBackImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtStExtTWriteBackImm(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtStExtTWriteBackReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtStExtTWriteBackReg(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtStWriteBackRegAddrMode2	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtStWriteBackRegAddrMode2(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtStWriteBackRegAddrMode3	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtStWriteBackRegAddrMode3(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtStWriteBackRegAddrModeImm12	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtStWriteBackRegAddrModeImm12(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtStWriteBackRegT2AddrModeImm8	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtStWriteBackRegT2AddrModeImm8(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtStrdPre	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtStrdPre(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtT2LdrdPre	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtT2LdrdPre(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtT2StrdPre	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtT2StrdPre(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtThumbMultiply	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtThumbMultiply(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtVLDwbFixed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtVLDwbFixed(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtVLDwbRegister	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtVLDwbRegister(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtVSTwbFixed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtVSTwbFixed(MCInst &Inst,$/;"	f	class:ARMAsmParser
cvtVSTwbRegister	Target/ARM/AsmParser/ARMAsmParser.cpp	/^cvtVSTwbRegister(MCInst &Inst,$/;"	f	class:ARMAsmParser
cxxDtorIsEmpty	Transforms/IPO/GlobalOpt.cpp	/^static bool cxxDtorIsEmpty(const Function &Fn,$/;"	f	file:
da	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    da,$/;"	e	enum:llvm::ARM_AM::AMSubMode
data	DebugInfo/DWARFFormValue.h	/^    const uint8_t* data;$/;"	m	struct:llvm::DWARFFormValue::ValueType
data	TableGen/Record.cpp	/^  std::string data;$/;"	m	class:llvm::TableGenStringKey	file:
date	Archive/ArchiveInternals.h	/^      char date[12];  \/\/\/< File date, decimal seconds since Epoch$/;"	m	class:llvm::ArchiveMemberHeader
db	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    db$/;"	e	enum:llvm::ARM_AM::AMSubMode
dbgprintf	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static void dbgprintf(struct InternalInstruction* insn,$/;"	f	file:
dbgs	Support/Debug.cpp	/^raw_ostream &llvm::dbgs() {$/;"	f	class:llvm
dead_op_begin	Transforms/Scalar/SROA.cpp	/^  dead_op_iterator dead_op_begin() const { return DeadOperands.begin(); }$/;"	f	class:__anon557::AllocaPartitioning
dead_op_end	Transforms/Scalar/SROA.cpp	/^  dead_op_iterator dead_op_end() const { return DeadOperands.end(); }$/;"	f	class:__anon557::AllocaPartitioning
dead_op_iterator	Transforms/Scalar/SROA.cpp	/^  typedef SmallVectorImpl<Use *>::const_iterator dead_op_iterator;$/;"	t	class:__anon557::AllocaPartitioning	file:
dead_user_begin	Transforms/Scalar/SROA.cpp	/^  dead_user_iterator dead_user_begin() const { return DeadUsers.begin(); }$/;"	f	class:__anon557::AllocaPartitioning
dead_user_end	Transforms/Scalar/SROA.cpp	/^  dead_user_iterator dead_user_end() const { return DeadUsers.end(); }$/;"	f	class:__anon557::AllocaPartitioning
dead_user_iterator	Transforms/Scalar/SROA.cpp	/^  typedef SmallVectorImpl<Instruction *>::const_iterator dead_user_iterator;$/;"	t	class:__anon557::AllocaPartitioning	file:
deallocateBlock	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void deallocateBlock(void *Block) {$/;"	f	class:__anon190::DefaultJITMemoryManager
deallocateExceptionTable	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void deallocateExceptionTable(void *ET) {$/;"	f	class:__anon190::DefaultJITMemoryManager
deallocateFunctionBody	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void deallocateFunctionBody(void *Body) {$/;"	f	class:__anon190::DefaultJITMemoryManager
deallocateMemForFunction	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::deallocateMemForFunction(const Function *F) {$/;"	f	class:JITEmitter
debug	Target/X86/Disassembler/X86Disassembler.cpp	52;"	d	file:
debug	Target/X86/Disassembler/X86DisassemblerDecoder.c	31;"	d	file:
debug	Target/X86/Disassembler/X86DisassemblerDecoder.c	33;"	d	file:
debugEntry	Analysis/ProfileVerifierPass.cpp	/^  void ProfileVerifierPassT<FType, BType>::debugEntry (DetailedBlockInfo *DI) {$/;"	f	class:__anon36::ProfileVerifierPassT
debug_user_sig_handler	Support/Debug.cpp	/^static void debug_user_sig_handler(void *Cookie) {$/;"	f	file:
decDigitValue	Support/APFloat.cpp	/^decDigitValue(unsigned int c)$/;"	f	file:
decimalInfo	Support/APFloat.cpp	/^struct decimalInfo {$/;"	s	file:
decode	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static InstrUID decode(OpcodeType type,$/;"	f	file:
decodeANDN	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeANDN(uint32_t insn) {$/;"	f	file:
decodeBEQ	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeBEQ(uint32_t insn) {$/;"	f	file:
decodeBEQI	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeBEQI(uint32_t insn) {$/;"	f	file:
decodeBR	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeBR(uint32_t insn) {$/;"	f	file:
decodeBRI	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeBRI(uint32_t insn) {$/;"	f	file:
decodeBSRL	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeBSRL(uint32_t insn) {$/;"	f	file:
decodeBSRLI	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeBSRLI(uint32_t insn) {$/;"	f	file:
decodeFADD	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeFADD(uint32_t insn) {$/;"	f	file:
decodeGET	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeGET(uint32_t insn) {$/;"	f	file:
decodeGETD	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeGETD(uint32_t insn) {$/;"	f	file:
decodeIDIV	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeIDIV(uint32_t insn) {$/;"	f	file:
decodeInstruction	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^int decodeInstruction(struct InternalInstruction* insn,$/;"	f
decodeLBU	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeLBU(uint32_t insn) {$/;"	f	file:
decodeLHU	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeLHU(uint32_t insn) {$/;"	f	file:
decodeLLVMAttributesForBitcode	VMCore/Attributes.cpp	/^Attributes Attributes::decodeLLVMAttributesForBitcode(LLVMContext &C,$/;"	f	class:Attributes
decodeLW	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeLW(uint32_t insn) {$/;"	f	file:
decodeMFS	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeMFS(uint32_t insn) {$/;"	f	file:
decodeMUL	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeMUL(uint32_t insn) {$/;"	f	file:
decodeNEONModImm	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline uint64_t decodeNEONModImm(unsigned ModImm, unsigned &EltBits) {$/;"	f	namespace:llvm::ARM_AM
decodeOR	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeOR(uint32_t insn) {$/;"	f	file:
decodeRSUBK	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeRSUBK(uint32_t insn) {$/;"	f	file:
decodeRTSD	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeRTSD(uint32_t insn) {$/;"	f	file:
decodeSB	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeSB(uint32_t insn) {$/;"	f	file:
decodeSEXT	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeSEXT(uint32_t insn) {$/;"	f	file:
decodeSH	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeSH(uint32_t insn) {$/;"	f	file:
decodeSW	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeSW(uint32_t insn) {$/;"	f	file:
decodeSignRotatedValue	Bitcode/Reader/BitcodeReader.cpp	/^uint64_t BitcodeReader::decodeSignRotatedValue(uint64_t V) {$/;"	f	class:BitcodeReader
decodeUTF8	Support/YAMLParser.cpp	/^  UTF8Decoded decodeUTF8(StringRef::iterator Position) {$/;"	f	class:llvm::yaml::Scanner	file:
decodeUTF8	Support/YAMLParser.cpp	/^static UTF8Decoded decodeUTF8(StringRef Range) {$/;"	f	file:
decodeXOR	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned decodeXOR(uint32_t insn) {$/;"	f	file:
decomposeBitTestICmp	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static bool decomposeBitTestICmp(const ICmpInst *I, ICmpInst::Predicate &Pred,$/;"	f	file:
decrease	CodeGen/RegisterPressure.cpp	/^void RegisterPressure::decrease(const TargetRegisterClass *RC,$/;"	f	class:RegisterPressure
decreasePhysRegPressure	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::decreasePhysRegPressure(ArrayRef<unsigned> Regs) {$/;"	f	class:RegPressureTracker
decreaseSetPressure	CodeGen/RegisterPressure.cpp	/^static void decreaseSetPressure(std::vector<unsigned> &CurrSetPressure,$/;"	f	file:
decreaseVirtRegPressure	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::decreaseVirtRegPressure(ArrayRef<unsigned> Regs) {$/;"	f	class:RegPressureTracker
decrementCPEReferenceCount	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::decrementCPEReferenceCount(unsigned CPI,$/;"	f	class:ARMConstantIslands
defFromParent	CodeGen/SplitKit.cpp	/^VNInfo *SplitEditor::defFromParent(unsigned RegIdx,$/;"	f	class:SplitEditor
defValue	CodeGen/SplitKit.cpp	/^VNInfo *SplitEditor::defValue(unsigned RegIdx,$/;"	f	class:SplitEditor
defaultDefLatency	CodeGen/TargetInstrInfoImpl.cpp	/^unsigned TargetInstrInfo::defaultDefLatency(const MCSchedModel *SchedModel,$/;"	f	class:TargetInstrInfo
default_error_condition	Object/Error.cpp	/^error_condition _object_error_category::default_error_condition(int ev) const {$/;"	f	class:_object_error_category
default_error_condition	Support/system_error.cpp	/^error_category::default_error_condition(int ev) const {$/;"	f	class:llvm::error_category
definePhysReg	CodeGen/RegAllocFast.cpp	/^void RAFast::definePhysReg(MachineInstr *MI, unsigned PhysReg,$/;"	f	class:RAFast
defineVirtReg	CodeGen/RegAllocFast.cpp	/^RAFast::defineVirtReg(MachineInstr *MI, unsigned OpNum,$/;"	f	class:RAFast
definedInCaller	Transforms/Utils/CodeExtractor.cpp	/^static bool definedInCaller(const SetVector<BasicBlock *> &Blocks, Value *V) {$/;"	f	file:
definedInRegion	Transforms/Utils/CodeExtractor.cpp	/^static bool definedInRegion(const SetVector<BasicBlock *> &Blocks, Value *V) {$/;"	f	file:
definesCPSR	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static bool definesCPSR(MachineInstr *MI) {$/;"	f	file:
delayHasHazard	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^static bool delayHasHazard(MachineBasicBlock::iterator &candidate,$/;"	f	file:
delayHasHazard	Target/Mips/MipsDelaySlotFiller.cpp	/^bool Filler::delayHasHazard(InstrIter candidate,$/;"	f	class:Filler
delayHasHazard	Target/Sparc/DelaySlotFiller.cpp	/^bool Filler::delayHasHazard(MachineBasicBlock::iterator candidate,$/;"	f	class:Filler
deleteAnalysisValue	Transforms/Scalar/LICM.cpp	/^void LICM::deleteAnalysisValue(Value *V, Loop *L) {$/;"	f	class:LICM
deleteDeadInstruction	Transforms/Scalar/LoopIdiomRecognize.cpp	/^static void deleteDeadInstruction(Instruction *I, ScalarEvolution &SE,$/;"	f	file:
deleteDeadInstructions	Transforms/Scalar/SROA.cpp	/^void SROA::deleteDeadInstructions(SmallPtrSet<AllocaInst*, 4> &DeletedAllocas) {$/;"	f	class:SROA
deleteIfDeadInstruction	Transforms/Scalar/LoopIdiomRecognize.cpp	/^static void deleteIfDeadInstruction(Value *V, ScalarEvolution &SE,$/;"	f	file:
deleteIfTriviallyDead	Transforms/Scalar/SROA.cpp	/^  void deleteIfTriviallyDead(Value *V) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
deleteLoopFromQueue	Analysis/LoopPass.cpp	/^void LPPassManager::deleteLoopFromQueue(Loop *L) {$/;"	f	class:LPPassManager
deleteNode	CodeGen/MachineBasicBlock.cpp	/^void ilist_traits<MachineInstr>::deleteNode(MachineInstr* MI) {$/;"	f	class:ilist_traits
deleteNode	CodeGen/MachineFunction.cpp	/^void ilist_traits<MachineBasicBlock>::deleteNode(MachineBasicBlock *MBB) {$/;"	f	class:ilist_traits
deleteNode	Support/YAMLParser.cpp	/^  static void deleteNode(Token *V) {}$/;"	f	struct:llvm::ilist_node_traits
deleteRematVictims	CodeGen/SplitKit.cpp	/^void SplitEditor::deleteRematVictims() {$/;"	f	class:SplitEditor
deleteSimpleAnalysisValue	Analysis/LoopPass.cpp	/^void LPPassManager::deleteSimpleAnalysisValue(Value *V, Loop *L) {$/;"	f	class:LPPassManager
deleteStuff	Transforms/IPO/ExtractGV.cpp	/^    bool deleteStuff;$/;"	m	class:__anon584::GVExtractorPass	file:
deleteTemporary	VMCore/Metadata.cpp	/^void MDNode::deleteTemporary(MDNode *N) {$/;"	f	class:MDNode
deleteValue	Analysis/AliasAnalysis.cpp	/^void AliasAnalysis::deleteValue(Value *V) {$/;"	f	class:AliasAnalysis
deleteValue	Analysis/AliasDebugger.cpp	/^    virtual void deleteValue(Value *V) {$/;"	f	class:__anon44::AliasDebugger
deleteValue	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::deleteValue(Value *PtrVal) {$/;"	f	class:AliasSetTracker
deleteValue	Analysis/IPA/GlobalsModRef.cpp	/^void GlobalsModRef::deleteValue(Value *V) {$/;"	f	class:GlobalsModRef
deleteValue	Analysis/NoAliasAnalysis.cpp	/^    virtual void deleteValue(Value *V) {}$/;"	f	struct:__anon42::NoAA
deleteValue	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    void deleteValue(const Instruction *I) {$/;"	f	class:__anon469::LargeBlockInfo
deleted	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::ASTCallbackVH::deleted() {$/;"	f	class:AliasSetTracker::ASTCallbackVH
deleted	Analysis/IVUsers.cpp	/^void IVStrideUse::deleted() {$/;"	f	class:IVStrideUse
deleted	Analysis/LazyValueInfo.cpp	/^void LVIValueHandle::deleted() {$/;"	f	class:LVIValueHandle
deleted	Analysis/ScalarEvolution.cpp	/^void SCEVUnknown::deleted() {$/;"	f	class:SCEVUnknown
deleted	Analysis/ScalarEvolution.cpp	/^void ScalarEvolution::SCEVCallbackVH::deleted() {$/;"	f	class:ScalarEvolution::SCEVCallbackVH
deleted	CodeGen/MachineModuleInfo.cpp	/^void MMIAddrLabelMapCallbackPtr::deleted() {$/;"	f	class:MMIAddrLabelMapCallbackPtr
deleted	ExecutionEngine/ExecutionEngine.cpp	/^  virtual void deleted() {$/;"	f	class:__anon199::GVMemoryBlock
deleted	VMCore/DebugLoc.cpp	/^void DebugRecVH::deleted() {$/;"	f	class:DebugRecVH
deleted	VMCore/Metadata.cpp	/^void MDNodeOperand::deleted() {$/;"	f	class:MDNodeOperand
deleted	VMCore/Value.cpp	/^void CallbackVH::deleted() {$/;"	f	class:CallbackVH
depends	Analysis/DependenceAnalysis.cpp	/^Dependence *DependenceAnalysis::depends(const Instruction *Src,$/;"	f	class:DependenceAnalysis
depends	Analysis/LoopDependenceAnalysis.cpp	/^bool LoopDependenceAnalysis::depends(Value *A, Value *B) {$/;"	f	class:LoopDependenceAnalysis
dequeue	CodeGen/RegAllocBasic.cpp	/^  virtual LiveInterval *dequeue() {$/;"	f	class:__anon122::RABasic
dequeue	CodeGen/RegAllocGreedy.cpp	/^LiveInterval *RAGreedy::dequeue() {$/;"	f	class:RAGreedy
deregisterObject	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^bool GDBJITRegistrar::deregisterObject(const ObjectBuffer& Object) {$/;"	f	class:__anon178::GDBJITRegistrar
deregisterObjectInternal	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^void GDBJITRegistrar::deregisterObjectInternal($/;"	f	class:__anon178::GDBJITRegistrar
deregisterWithDebugger	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual void deregisterWithDebugger() {}$/;"	f	class:llvm::ObjectImageCommon
deregisterWithDebugger	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^    virtual void deregisterWithDebugger()$/;"	f	class:__anon180::ELFObjectImage
describes	VMCore/DebugInfo.cpp	/^bool DISubprogram::describes(const Function *F) {$/;"	f	class:DISubprogram
destroy	Analysis/IPA/CallGraph.cpp	/^  virtual void destroy() {$/;"	f	class:__anon2::BasicCallGraph	file:
destroy	Analysis/IPA/CallGraph.cpp	/^void CallGraph::destroy() {$/;"	f	class:CallGraph
destroy	Support/ManagedStatic.cpp	/^void ManagedStaticBase::destroy() const {$/;"	f	class:ManagedStaticBase
destroy	VMCore/Metadata.cpp	/^void MDNode::destroy() {$/;"	f	class:MDNode
destroyConstant	VMCore/Constants.cpp	/^void BlockAddress::destroyConstant() {$/;"	f	class:BlockAddress
destroyConstant	VMCore/Constants.cpp	/^void ConstantAggregateZero::destroyConstant() {$/;"	f	class:ConstantAggregateZero
destroyConstant	VMCore/Constants.cpp	/^void ConstantArray::destroyConstant() {$/;"	f	class:ConstantArray
destroyConstant	VMCore/Constants.cpp	/^void ConstantDataSequential::destroyConstant() {$/;"	f	class:ConstantDataSequential
destroyConstant	VMCore/Constants.cpp	/^void ConstantExpr::destroyConstant() {$/;"	f	class:ConstantExpr
destroyConstant	VMCore/Constants.cpp	/^void ConstantPointerNull::destroyConstant() {$/;"	f	class:ConstantPointerNull
destroyConstant	VMCore/Constants.cpp	/^void ConstantStruct::destroyConstant() {$/;"	f	class:ConstantStruct
destroyConstant	VMCore/Constants.cpp	/^void ConstantVector::destroyConstant() {$/;"	f	class:ConstantVector
destroyConstant	VMCore/Constants.cpp	/^void UndefValue::destroyConstant() {$/;"	f	class:UndefValue
destroyConstant	VMCore/Globals.cpp	/^void GlobalValue::destroyConstant() {$/;"	f	class:GlobalValue
destroyConstant	VMCore/InlineAsm.cpp	/^void InlineAsm::destroyConstant() {$/;"	f	class:InlineAsm
destroyConstantImpl	VMCore/Constants.cpp	/^void Constant::destroyConstantImpl() {$/;"	f	class:Constant
destroySentinel	Support/YAMLParser.cpp	/^  static void destroySentinel(Token*) {}$/;"	f	struct:llvm::ilist_sentinel_traits
determineFrameLayout	Target/CellSPU/SPUFrameLowering.cpp	/^void SPUFrameLowering::determineFrameLayout(MachineFunction &MF) const {$/;"	f	class:SPUFrameLowering
determineFrameLayout	Target/Hexagon/HexagonFrameLowering.cpp	/^void HexagonFrameLowering::determineFrameLayout(MachineFunction &MF) const {$/;"	f	class:HexagonFrameLowering
determineFrameLayout	Target/MBlaze/MBlazeFrameLowering.cpp	/^static void determineFrameLayout(MachineFunction &MF) {$/;"	f	file:
determineFrameLayout	Target/PowerPC/PPCFrameLowering.cpp	/^void PPCFrameLowering::determineFrameLayout(MachineFunction &MF) const {$/;"	f	class:PPCFrameLowering
determineREX	Target/X86/X86CodeEmitter.cpp	/^static unsigned determineREX(const MachineInstr &MI) {$/;"	f	file:
diag_handler	MC/MCDisassembler/EDDisassembler.cpp	/^static void diag_handler(const SMDiagnostic &diag, void *context) {$/;"	f	file:
didRepairRange	CodeGen/SplitKit.h	/^  bool didRepairRange() const { return DidRepairRange; }$/;"	f	class:llvm::SplitAnalysis
die_offset_base	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    uint32_t die_offset_base;$/;"	m	struct:llvm::DwarfAccelTable::TableHeaderData
difference	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::difference(const ConstantRange &CR) const {$/;"	f	class:ConstantRange
disableAllFunctions	Target/TargetLibraryInfo.cpp	/^void TargetLibraryInfo::disableAllFunctions() {$/;"	f	class:TargetLibraryInfo
disableSROA	Analysis/InlineCost.cpp	/^void CallAnalyzer::disableSROA(DenseMap<Value *, int>::iterator CostIt) {$/;"	f	class:CallAnalyzer
disableSROA	Analysis/InlineCost.cpp	/^void CallAnalyzer::disableSROA(Value *V) {$/;"	f	class:CallAnalyzer
disassembleBuffer	Support/Disassembler.cpp	/^std::string llvm::sys::disassembleBuffer(uint8_t* start, size_t length,$/;"	f	class:llvm::sys
discoverPhysLiveIn	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::discoverPhysLiveIn(unsigned Reg) {$/;"	f	class:RegPressureTracker
discoverPhysLiveOut	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::discoverPhysLiveOut(unsigned Reg) {$/;"	f	class:RegPressureTracker
discoverVirtLiveIn	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::discoverVirtLiveIn(unsigned Reg) {$/;"	f	class:RegPressureTracker
discoverVirtLiveOut	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::discoverVirtLiveOut(unsigned Reg) {$/;"	f	class:RegPressureTracker
displacement	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  int32_t                       displacement;$/;"	m	struct:InternalInstruction
displacementOffset	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t displacementOffset;$/;"	m	struct:InternalInstruction
displacementSize	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t displacementSize;$/;"	m	struct:InternalInstruction
distribute	Support/IntervalMap.cpp	/^IdxPair distribute(unsigned Nodes, unsigned Elements, unsigned Capacity,$/;"	f	namespace:llvm::IntervalMapImpl
div96bit	Support/BlockFrequency.cpp	/^uint64_t div96bit(uint64_t W[2], uint32_t D) {$/;"	f	namespace:__anon254
divertFlow	Analysis/ProfileInfo.cpp	/^        divertFlow(const Edge &oldedge, const Edge &newedge) {$/;"	f	class:llvm::ProfileInfoT
divide	Support/APFloat.cpp	/^APFloat::divide(const APFloat &rhs, roundingMode rounding_mode)$/;"	f	class:APFloat
divide	Support/APInt.cpp	/^void APInt::divide(const APInt LHS, unsigned lhsWords,$/;"	f	class:APInt
divideSignificand	Support/APFloat.cpp	/^APFloat::divideSignificand(const APFloat &rhs)$/;"	f	class:APFloat
divideSpecials	Support/APFloat.cpp	/^APFloat::divideSpecials(const APFloat &rhs)$/;"	f	class:APFloat
dl	CodeGen/LiveDebugVariables.cpp	/^  DebugLoc dl;            \/\/\/< The debug location for the variable. This is$/;"	m	class:__anon152::UserValue	file:
dl	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    DebugLoc dl;$/;"	m	class:llvm::SelectionDAGBuilder::DanglingDebugInfo
dll_path_ptr	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    const char**           dll_path_ptr;$/;"	m	struct:___itt_global
dlog	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  dlog_t dlog;$/;"	m	struct:InternalInstruction
dlogArg	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  void* dlogArg;$/;"	m	struct:InternalInstruction
dlog_t	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^typedef void (*dlog_t)(void* arg, const char *log);$/;"	t
doExtraRewritesBeforeFinalDeletion	Transforms/Scalar/LICM.cpp	/^    virtual void doExtraRewritesBeforeFinalDeletion() const {$/;"	f	class:__anon569::LoopPromoter
doFMADF32	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  bool doFMADF32;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
doFMAF32	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  bool doFMAF32;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
doFMAF32AGG	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  bool doFMAF32AGG;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
doFMAF64	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  bool doFMAF64;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
doFMAF64AGG	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  bool doFMAF64AGG;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
doFinalization	Analysis/AliasAnalysisEvaluator.cpp	/^bool AAEval::doFinalization(Module &M) {$/;"	f	class:AAEval
doFinalization	Analysis/IPA/CallGraphSCCPass.cpp	/^bool CGPassManager::doFinalization(CallGraph &CG) {$/;"	f	class:CGPassManager
doFinalization	CodeGen/AsmPrinter/AsmPrinter.cpp	/^bool AsmPrinter::doFinalization(Module &M) {$/;"	f	class:AsmPrinter
doFinalization	CodeGen/GCMetadata.cpp	/^bool Deleter::doFinalization(Module &M) {$/;"	f	class:Deleter
doFinalization	CodeGen/MachineModuleInfo.cpp	/^bool MachineModuleInfo::doFinalization() {$/;"	f	class:MachineModuleInfo
doFinalization	Target/NVPTX/NVPTXAsmPrinter.cpp	/^bool NVPTXAsmPrinter::doFinalization(Module &M) {$/;"	f	class:NVPTXAsmPrinter
doFinalization	Target/PowerPC/PPCAsmPrinter.cpp	/^bool PPCDarwinAsmPrinter::doFinalization(Module &M) {$/;"	f	class:PPCDarwinAsmPrinter
doFinalization	Target/PowerPC/PPCAsmPrinter.cpp	/^bool PPCLinuxAsmPrinter::doFinalization(Module &M) {$/;"	f	class:PPCLinuxAsmPrinter
doFinalization	Transforms/IPO/InlineAlways.cpp	/^    virtual bool doFinalization(CallGraph &CG) {$/;"	f	class:__anon577::AlwaysInliner
doFinalization	Transforms/IPO/Inliner.cpp	/^bool Inliner::doFinalization(CallGraph &CG) {$/;"	f	class:Inliner
doFinalization	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::doFinalization(Module &M) {$/;"	f	class:AddressSanitizer
doFinalization	Transforms/Scalar/LICM.cpp	/^    bool doFinalization() {$/;"	f	struct:__anon568::LICM
doFinalization	VMCore/Pass.cpp	/^bool BasicBlockPass::doFinalization(Function &) {$/;"	f	class:BasicBlockPass
doFinalization	VMCore/Pass.cpp	/^bool BasicBlockPass::doFinalization(Module &) {$/;"	f	class:BasicBlockPass
doFinalization	VMCore/Pass.cpp	/^bool FunctionPass::doFinalization(Module &) {$/;"	f	class:FunctionPass
doFinalization	VMCore/PassManager.cpp	/^bool BBPassManager::doFinalization(Function &F) {$/;"	f	class:BBPassManager
doFinalization	VMCore/PassManager.cpp	/^bool BBPassManager::doFinalization(Module &M) {$/;"	f	class:BBPassManager
doFinalization	VMCore/PassManager.cpp	/^bool FPPassManager::doFinalization(Module &M) {$/;"	f	class:FPPassManager
doFinalization	VMCore/PassManager.cpp	/^bool FunctionPassManager::doFinalization() {$/;"	f	class:FunctionPassManager
doFinalization	VMCore/PassManager.cpp	/^bool FunctionPassManagerImpl::doFinalization(Module &M) {$/;"	f	class:FunctionPassManagerImpl
doFinalization	VMCore/Verifier.cpp	/^    bool doFinalization(Module &M) {$/;"	f	struct:__anon610::Verifier
doInitialPlacement	Target/ARM/ARMConstantIslandPass.cpp	/^ARMConstantIslands::doInitialPlacement(std::vector<MachineInstr*> &CPEMIs) {$/;"	f	class:ARMConstantIslands
doInitialization	Analysis/AliasAnalysisEvaluator.cpp	/^    bool doInitialization(Module &M) {$/;"	f	class:__anon47::AAEval
doInitialization	Analysis/IPA/CallGraphSCCPass.cpp	/^bool CGPassManager::doInitialization(CallGraph &CG) {$/;"	f	class:CGPassManager
doInitialization	CodeGen/AsmPrinter/AsmPrinter.cpp	/^bool AsmPrinter::doInitialization(Module &M) {$/;"	f	class:AsmPrinter
doInitialization	CodeGen/GCStrategy.cpp	/^bool LowerIntrinsics::doInitialization(Module &M) {$/;"	f	class:LowerIntrinsics
doInitialization	CodeGen/MachineFunctionAnalysis.cpp	/^bool MachineFunctionAnalysis::doInitialization(Module &M) {$/;"	f	class:MachineFunctionAnalysis
doInitialization	CodeGen/MachineModuleInfo.cpp	/^bool MachineModuleInfo::doInitialization() {$/;"	f	class:MachineModuleInfo
doInitialization	CodeGen/SjLjEHPrepare.cpp	/^bool SjLjEHPrepare::doInitialization(Module &M) {$/;"	f	class:SjLjEHPrepare
doInitialization	Target/NVPTX/NVPTXAsmPrinter.cpp	/^bool NVPTXAsmPrinter::doInitialization (Module &M) {$/;"	f	class:NVPTXAsmPrinter
doInitialization	Transforms/IPO/InlineAlways.cpp	/^bool AlwaysInliner::doInitialization(CallGraph &CG) {$/;"	f	class:AlwaysInliner
doInitialization	Transforms/IPO/InlineSimple.cpp	/^bool SimpleInliner::doInitialization(CallGraph &CG) {$/;"	f	class:SimpleInliner
doInitialization	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::doInitialization(Module &M) {$/;"	f	class:AddressSanitizer
doInitialization	Transforms/Instrumentation/ThreadSanitizer.cpp	/^bool ThreadSanitizer::doInitialization(Module &M) {$/;"	f	class:ThreadSanitizer
doInitialization	Transforms/Scalar/GlobalMerge.cpp	/^bool GlobalMerge::doInitialization(Module &M) {$/;"	f	class:GlobalMerge
doInitialization	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCContract::doInitialization(Module &M) {$/;"	f	class:ObjCARCContract
doInitialization	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCExpand::doInitialization(Module &M) {$/;"	f	class:ObjCARCExpand
doInitialization	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCOpt::doInitialization(Module &M) {$/;"	f	class:ObjCARCOpt
doInitialization	Transforms/Scalar/SimplifyLibCalls.cpp	/^bool SimplifyLibCalls::doInitialization(Module &M) {$/;"	f	class:SimplifyLibCalls
doInitialization	Transforms/Utils/LowerInvoke.cpp	/^bool LowerInvoke::doInitialization(Module &M) {$/;"	f	class:LowerInvoke
doInitialization	VMCore/Pass.cpp	/^bool BasicBlockPass::doInitialization(Function &) {$/;"	f	class:BasicBlockPass
doInitialization	VMCore/Pass.cpp	/^bool BasicBlockPass::doInitialization(Module &) {$/;"	f	class:BasicBlockPass
doInitialization	VMCore/Pass.cpp	/^bool FunctionPass::doInitialization(Module &) {$/;"	f	class:FunctionPass
doInitialization	VMCore/PassManager.cpp	/^bool BBPassManager::doInitialization(Function &F) {$/;"	f	class:BBPassManager
doInitialization	VMCore/PassManager.cpp	/^bool BBPassManager::doInitialization(Module &M) {$/;"	f	class:BBPassManager
doInitialization	VMCore/PassManager.cpp	/^bool FPPassManager::doInitialization(Module &M) {$/;"	f	class:FPPassManager
doInitialization	VMCore/PassManager.cpp	/^bool FunctionPassManager::doInitialization() {$/;"	f	class:FunctionPassManager
doInitialization	VMCore/PassManager.cpp	/^bool FunctionPassManagerImpl::doInitialization(Module &M) {$/;"	f	class:FunctionPassManagerImpl
doInitialization	VMCore/Verifier.cpp	/^    bool doInitialization(Module &M) {$/;"	f	struct:__anon610::Verifier
doMerge	Transforms/Scalar/GlobalMerge.cpp	/^bool GlobalMerge::doMerge(SmallVectorImpl<GlobalVariable*> &Globals,$/;"	f	class:GlobalMerge
doMulWide	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  bool doMulWide;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
doNotCSE	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static bool doNotCSE(SDNode *N) {$/;"	f	file:
do_DIVF32_PREC	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  int do_DIVF32_PREC;$/;"	m	class:__anon317::NVPTXDAGToDAGISel
doemit	Support/regcomp.c	/^doemit(struct parse *p, sop op, size_t opnd)$/;"	f	file:
doesIgnoreDataTypeSuffix	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static bool doesIgnoreDataTypeSuffix(StringRef Mnemonic, StringRef DT) {$/;"	f	file:
doesIntrinsicContainPredicate	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static unsigned doesIntrinsicContainPredicate(unsigned ID)$/;"	f	file:
doesIntrinsicReturnPredicate	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^static unsigned doesIntrinsicReturnPredicate(unsigned ID)$/;"	f	file:
doesSectionRequireSymbols	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  virtual bool doesSectionRequireSymbols(const MCSection &Section) const {$/;"	f	class:__anon285::DarwinARMAsmBackend
doesSectionRequireSymbols	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^    virtual bool doesSectionRequireSymbols(const MCSection &Section) const {$/;"	f	class:__anon321::DarwinPPCAsmBackend
doesSectionRequireSymbols	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^    virtual bool doesSectionRequireSymbols(const MCSection &Section) const {$/;"	f	class:__anon321::ELFPPCAsmBackend
doesSectionRequireSymbols	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  virtual bool doesSectionRequireSymbols(const MCSection &Section) const {$/;"	f	class:__anon345::DarwinX86_64AsmBackend
doesSectionRequireSymbols	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  virtual bool doesSectionRequireSymbols(const MCSection &Section) const {$/;"	f	class:__anon345::ELFX86AsmBackend
doesSymbolRequireExternRelocation	MC/MachObjectWriter.cpp	/^doesSymbolRequireExternRelocation(const MCSymbolData *SD) {$/;"	f	class:MachObjectWriter
dofwd	Support/regcomp.c	/^dofwd(struct parse *p, sopno pos, sop value)$/;"	f	file:
doinsert	Support/regcomp.c	/^doinsert(struct parse *p, sop op, size_t opnd, sopno pos)$/;"	f	file:
domain_list	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    struct ___itt_domain*  domain_list;$/;"	m	struct:___itt_global	typeref:struct:___itt_global::___itt_domain
dominates	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::dominates(const SCEV *S, const BasicBlock *BB) {$/;"	f	class:ScalarEvolution
dominates	CodeGen/LexicalScopes.cpp	/^bool LexicalScopes::dominates(DebugLoc DL, MachineBasicBlock *MBB) {$/;"	f	class:LexicalScopes
dominates	CodeGen/LiveDebugVariables.cpp	/^  bool dominates(MachineBasicBlock *MBB) {$/;"	f	class:__anon151::UserValueScopes
dominates	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    bool dominates(BasicBlock *BB1, BasicBlock *BB2) const {$/;"	f	struct:__anon469::PromoteMem2Reg
dominates	VMCore/Dominators.cpp	/^bool DominatorTree::dominates(const BasicBlockEdge &BBE,$/;"	f	class:DominatorTree
dominates	VMCore/Dominators.cpp	/^bool DominatorTree::dominates(const Instruction *Def,$/;"	f	class:DominatorTree
dotdotdot	AsmParser/LLToken.h	/^    dotdotdot,         \/\/ ...$/;"	e	enum:llvm::lltok::Kind
dropAllReferences	VMCore/BasicBlock.cpp	/^void BasicBlock::dropAllReferences() {$/;"	f	class:BasicBlock
dropAllReferences	VMCore/Function.cpp	/^void Function::dropAllReferences() {$/;"	f	class:Function
dropAllReferences	VMCore/Metadata.cpp	/^void NamedMDNode::dropAllReferences() {$/;"	f	class:NamedMDNode
dropAllReferences	VMCore/Module.cpp	/^void Module::dropAllReferences() {$/;"	f	class:Module
dropLeadingBytes	Support/StreamableMemoryObject.cpp	/^bool StreamingMemoryObject::dropLeadingBytes(size_t s) {$/;"	f	class:llvm::StreamingMemoryObject
drvInterface	Target/NVPTX/NVPTXSubtarget.h	/^  NVPTX::DrvInterface drvInterface;$/;"	m	class:llvm::NVPTXSubtarget
dummy	Target/NVPTX/NVPTXSubtarget.h	/^  bool dummy; \/\/ For the 'dummy' feature, see NVPTX.td$/;"	m	class:llvm::NVPTXSubtarget
dump	Analysis/AliasSetTracker.cpp	/^void AliasSet::dump() const { print(dbgs()); }$/;"	f	class:AliasSet
dump	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::dump() const { print(dbgs()); }$/;"	f	class:AliasSetTracker
dump	Analysis/DependenceAnalysis.cpp	/^void Dependence::dump(raw_ostream &OS) const {$/;"	f	class:Dependence
dump	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::Constraint::dump(raw_ostream &OS) const {$/;"	f	class:DependenceAnalysis::Constraint
dump	Analysis/DominanceFrontier.cpp	/^void DominanceFrontierBase::dump() const {$/;"	f	class:DominanceFrontierBase
dump	Analysis/IPA/CallGraph.cpp	/^void CallGraph::dump() const {$/;"	f	class:CallGraph
dump	Analysis/IPA/CallGraph.cpp	/^void CallGraphNode::dump() const { print(dbgs()); }$/;"	f	class:CallGraphNode
dump	Analysis/IVUsers.cpp	/^void IVUsers::dump() const {$/;"	f	class:IVUsers
dump	Analysis/InlineCost.cpp	/^void CallAnalyzer::dump() {$/;"	f	class:CallAnalyzer
dump	Analysis/LoopInfo.cpp	/^void Loop::dump() const {$/;"	f	class:Loop
dump	Analysis/PHITransAddr.cpp	/^void PHITransAddr::dump() const {$/;"	f	class:PHITransAddr
dump	Analysis/RegionInfo.cpp	/^void Region::dump() const {$/;"	f	class:Region
dump	Analysis/ScalarEvolution.cpp	/^void SCEV::dump() const {$/;"	f	class:SCEV
dump	Analysis/Trace.cpp	/^void Trace::dump() const {$/;"	f	class:Trace
dump	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::dump() const {$/;"	f	class:ValueEnumerator
dump	CodeGen/AsmPrinter/DIE.cpp	/^void DIE::dump() {$/;"	f	class:DIE
dump	CodeGen/AsmPrinter/DIE.cpp	/^void DIEAbbrev::dump() { print(dbgs()); }$/;"	f	class:DIEAbbrev
dump	CodeGen/AsmPrinter/DIE.cpp	/^void DIEValue::dump() {$/;"	f	class:DIEValue
dump	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    void dump() { print(dbgs()); }$/;"	f	struct:llvm::DwarfAccelTable::TableHeader
dump	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    void dump() {$/;"	f	struct:llvm::DwarfAccelTable::Atom
dump	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    void dump() {$/;"	f	struct:llvm::DwarfAccelTable::HashData
dump	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    void dump() {$/;"	f	struct:llvm::DwarfAccelTable::TableHeaderData
dump	CodeGen/AsmPrinter/DwarfAccelTable.h	/^  void dump() { print(dbgs()); }$/;"	f	class:llvm::DwarfAccelTable
dump	CodeGen/LatencyPriorityQueue.cpp	/^void LatencyPriorityQueue::dump(ScheduleDAG *DAG) const {$/;"	f	class:LatencyPriorityQueue
dump	CodeGen/LatencyPriorityQueue.cpp	/^void LatencyPriorityQueue::dump(ScheduleDAG *DAG) const {}$/;"	f	class:LatencyPriorityQueue
dump	CodeGen/LexicalScopes.cpp	/^void LexicalScope::dump() const {$/;"	f	class:LexicalScope
dump	CodeGen/LiveDebugVariables.cpp	/^void LiveDebugVariables::dump() {$/;"	f	class:LiveDebugVariables
dump	CodeGen/LiveInterval.cpp	/^void LiveInterval::dump() const {$/;"	f	class:LiveInterval
dump	CodeGen/LiveInterval.cpp	/^void LiveRange::dump() const {$/;"	f	class:LiveRange
dump	CodeGen/LiveVariables.cpp	/^void LiveVariables::VarInfo::dump() const {$/;"	f	class:LiveVariables::VarInfo
dump	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::dump() const {$/;"	f	class:MachineBasicBlock
dump	CodeGen/MachineFunction.cpp	/^void MachineConstantPool::dump() const { print(dbgs()); }$/;"	f	class:MachineConstantPool
dump	CodeGen/MachineFunction.cpp	/^void MachineFrameInfo::dump(const MachineFunction &MF) const {$/;"	f	class:MachineFrameInfo
dump	CodeGen/MachineFunction.cpp	/^void MachineFunction::dump() const {$/;"	f	class:MachineFunction
dump	CodeGen/MachineFunction.cpp	/^void MachineJumpTableInfo::dump() const { print(dbgs()); }$/;"	f	class:MachineJumpTableInfo
dump	CodeGen/MachineInstr.cpp	/^void MachineInstr::dump() const {$/;"	f	class:MachineInstr
dump	CodeGen/MachineLoopInfo.cpp	/^void MachineLoop::dump() const {$/;"	f	class:MachineLoop
dump	CodeGen/MachineScheduler.cpp	/^void ReadyQueue::dump() {$/;"	f	class:ReadyQueue
dump	CodeGen/RegisterPressure.cpp	/^void RegisterPressure::dump(const TargetRegisterInfo *TRI) {$/;"	f	class:RegisterPressure
dump	CodeGen/ScheduleDAG.cpp	/^void SUnit::dump(const ScheduleDAG *G) const {$/;"	f	class:SUnit
dump	CodeGen/ScheduleDAGInstrs.cpp	/^void ILPValue::dump() const {$/;"	f	class:ILPValue
dump	CodeGen/ScoreboardHazardRecognizer.cpp	/^void ScoreboardHazardRecognizer::Scoreboard::dump() const {$/;"	f	class:ScoreboardHazardRecognizer::Scoreboard
dump	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^void ResourcePriorityQueue::dump(ScheduleDAG *DAG) const {$/;"	f	class:ResourcePriorityQueue
dump	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^void ResourcePriorityQueue::dump(ScheduleDAG *DAG) const {}$/;"	f	class:ResourcePriorityQueue
dump	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  void dump(ScheduleDAG *DAG) const {$/;"	f	class:__anon77::RegReductionPriorityQueue
dump	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::dump() const { dump(0); }$/;"	f	class:SDNode
dump	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::dump(const SelectionDAG *G) const {$/;"	f	class:SDNode
dump	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SelectionDAG::dump() const {$/;"	f	class:SelectionDAG
dump	CodeGen/SlotIndexes.cpp	/^void SlotIndex::dump() const {$/;"	f	class:SlotIndex
dump	CodeGen/SlotIndexes.cpp	/^void SlotIndexes::dump() const {$/;"	f	class:SlotIndexes
dump	CodeGen/SplitKit.cpp	/^void SplitEditor::dump() const {$/;"	f	class:SplitEditor
dump	CodeGen/StackColoring.cpp	/^void StackColoring::dump() {$/;"	f	class:StackColoring
dump	CodeGen/VirtRegMap.cpp	/^void VirtRegMap::dump() const {$/;"	f	class:VirtRegMap
dump	DebugInfo/DWARFAbbreviationDeclaration.cpp	/^void DWARFAbbreviationDeclaration::dump(raw_ostream &OS) const {$/;"	f	class:DWARFAbbreviationDeclaration
dump	DebugInfo/DWARFCompileUnit.cpp	/^void DWARFCompileUnit::dump(raw_ostream &OS) {$/;"	f	class:DWARFCompileUnit
dump	DebugInfo/DWARFContext.cpp	/^void DWARFContext::dump(raw_ostream &OS) {$/;"	f	class:DWARFContext
dump	DebugInfo/DWARFDebugAbbrev.cpp	/^void DWARFAbbreviationDeclarationSet::dump(raw_ostream &OS) const {$/;"	f	class:DWARFAbbreviationDeclarationSet
dump	DebugInfo/DWARFDebugAbbrev.cpp	/^void DWARFDebugAbbrev::dump(raw_ostream &OS) const {$/;"	f	class:DWARFDebugAbbrev
dump	DebugInfo/DWARFDebugArangeSet.cpp	/^void DWARFDebugArangeSet::dump(raw_ostream &OS) const {$/;"	f	class:DWARFDebugArangeSet
dump	DebugInfo/DWARFDebugAranges.cpp	/^void DWARFDebugAranges::Range::dump(raw_ostream &OS) const {$/;"	f	class:DWARFDebugAranges::Range
dump	DebugInfo/DWARFDebugAranges.cpp	/^void DWARFDebugAranges::dump(raw_ostream &OS) const {$/;"	f	class:DWARFDebugAranges
dump	DebugInfo/DWARFDebugInfoEntry.cpp	/^void DWARFDebugInfoEntryMinimal::dump(raw_ostream &OS,$/;"	f	class:DWARFDebugInfoEntryMinimal
dump	DebugInfo/DWARFDebugLine.cpp	/^void DWARFDebugLine::LineTable::dump(raw_ostream &OS) const {$/;"	f	class:DWARFDebugLine::LineTable
dump	DebugInfo/DWARFDebugLine.cpp	/^void DWARFDebugLine::Prologue::dump(raw_ostream &OS) const {$/;"	f	class:DWARFDebugLine::Prologue
dump	DebugInfo/DWARFDebugLine.cpp	/^void DWARFDebugLine::Row::dump(raw_ostream &OS) const {$/;"	f	class:DWARFDebugLine::Row
dump	DebugInfo/DWARFDebugRangeList.cpp	/^void DWARFDebugRangeList::dump(raw_ostream &OS) const {$/;"	f	class:DWARFDebugRangeList
dump	DebugInfo/DWARFFormValue.cpp	/^DWARFFormValue::dump(raw_ostream &OS, const DWARFCompileUnit *cu) const {$/;"	f	class:DWARFFormValue
dump	Linker/LinkModules.cpp	/^  void dump() const {$/;"	f	class:__anon201::TypeMapTy
dump	MC/MCAssembler.cpp	/^void MCAssembler::dump() {$/;"	f	class:MCAssembler
dump	MC/MCAssembler.cpp	/^void MCFragment::dump() {$/;"	f	class:MCFragment
dump	MC/MCAssembler.cpp	/^void MCSectionData::dump() {$/;"	f	class:MCSectionData
dump	MC/MCAssembler.cpp	/^void MCSymbolData::dump() {$/;"	f	class:MCSymbolData
dump	MC/MCDwarf.cpp	/^void MCDwarfFile::dump() const {$/;"	f	class:MCDwarfFile
dump	MC/MCExpr.cpp	/^void MCExpr::dump() const {$/;"	f	class:MCExpr
dump	MC/MCInst.cpp	/^void MCInst::dump() const {$/;"	f	class:MCInst
dump	MC/MCInst.cpp	/^void MCOperand::dump() const {$/;"	f	class:MCOperand
dump	MC/MCLabel.cpp	/^void MCLabel::dump() const {$/;"	f	class:MCLabel
dump	MC/MCParser/MCAsmParser.cpp	/^void MCParsedAsmOperand::dump() const {$/;"	f	class:MCParsedAsmOperand
dump	MC/MCSymbol.cpp	/^void MCSymbol::dump() const {$/;"	f	class:MCSymbol
dump	MC/MCValue.cpp	/^void MCValue::dump() const {$/;"	f	class:MCValue
dump	MC/SubtargetFeature.cpp	/^void SubtargetFeatures::dump() const {$/;"	f	class:SubtargetFeatures
dump	Object/MachOObject.cpp	/^void MachOObject::dump() const { print(dbgs()); dbgs() << '\\n'; }$/;"	f	class:MachOObject
dump	Support/APInt.cpp	/^void APInt::dump() const {$/;"	f	class:APInt
dump	Support/BranchProbability.cpp	/^void BranchProbability::dump() const {$/;"	f	class:BranchProbability
dump	Support/ConstantRange.cpp	/^void ConstantRange::dump() const {$/;"	f	class:ConstantRange
dump	Support/Twine.cpp	/^void Twine::dump() const {$/;"	f	class:Twine
dump	TableGen/Record.cpp	/^void Init::dump() const { return print(errs()); }$/;"	f	class:Init
dump	TableGen/Record.cpp	/^void MultiClass::dump() const {$/;"	f	class:MultiClass
dump	TableGen/Record.cpp	/^void RecTy::dump() const { print(errs()); }$/;"	f	class:RecTy
dump	TableGen/Record.cpp	/^void Record::dump() const { errs() << *this; }$/;"	f	class:Record
dump	TableGen/Record.cpp	/^void RecordKeeper::dump() const { errs() << *this; }$/;"	f	class:RecordKeeper
dump	TableGen/Record.cpp	/^void RecordVal::dump() const { errs() << *this; }$/;"	f	class:RecordVal
dump	TableGen/TGParser.cpp	/^void SubMultiClassReference::dump() const {$/;"	f	class:llvm::SubMultiClassReference
dump	Target/ARM/ARMConstantPoolValue.cpp	/^void ARMConstantPoolValue::dump() const {$/;"	f	class:ARMConstantPoolValue
dump	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    void dump() {$/;"	f	struct:__anon392::MSP430ISelAddressMode
dump	Target/X86/X86ISelDAGToDAG.cpp	/^    void dump() {$/;"	f	struct:__anon371::X86ISelAddressMode
dump	Transforms/Scalar/GVN.cpp	/^void GVN::dump(DenseMap<uint32_t, Value*>& d) {$/;"	f	class:GVN
dump	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Cost::dump() const {$/;"	f	class:Cost
dump	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Formula::dump() const {$/;"	f	class:Formula
dump	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRFixup::dump() const {$/;"	f	class:LSRFixup
dump	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::dump() const {$/;"	f	class:LSRInstance
dump	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRUse::dump() const {$/;"	f	class:LSRUse
dump	Transforms/Scalar/LoopStrengthReduce.cpp	/^void RegSortData::dump() const {$/;"	f	class:RegSortData
dump	Transforms/Scalar/LoopStrengthReduce.cpp	/^void WorkItem::dump() const {$/;"	f	class:WorkItem
dump	Transforms/Scalar/SROA.cpp	/^void AllocaPartitioning::dump() const { print(dbgs()); }$/;"	f	class:AllocaPartitioning
dump	Transforms/Scalar/SROA.cpp	/^void AllocaPartitioning::dump(const_iterator I) const { print(dbgs(), I); }$/;"	f	class:AllocaPartitioning
dump	Transforms/Utils/AddrModeMatcher.cpp	/^void ExtAddrMode::dump() const {$/;"	f	class:ExtAddrMode
dump	VMCore/AsmWriter.cpp	/^void Module::dump() const { print(dbgs(), 0); }$/;"	f	class:Module
dump	VMCore/AsmWriter.cpp	/^void NamedMDNode::dump() const { print(dbgs(), 0); }$/;"	f	class:NamedMDNode
dump	VMCore/AsmWriter.cpp	/^void Type::dump() const { print(dbgs()); }$/;"	f	class:Type
dump	VMCore/AsmWriter.cpp	/^void Value::dump() const { print(dbgs()); dbgs() << '\\n'; }$/;"	f	class:Value
dump	VMCore/Attributes.cpp	/^void AttrListPtr::dump() const {$/;"	f	class:AttrListPtr
dump	VMCore/ConstantsContext.h	/^  void dump() const {$/;"	f	class:llvm::ConstantAggrUniqueMap
dump	VMCore/ConstantsContext.h	/^  void dump() const {$/;"	f	class:llvm::ConstantUniqueMap
dump	VMCore/DataLayout.cpp	/^  virtual void dump() const {}$/;"	f	class:__anon617::StructLayoutMap
dump	VMCore/DebugInfo.cpp	/^void DIDescriptor::dump() const {$/;"	f	class:DIDescriptor
dump	VMCore/DebugLoc.cpp	/^void DebugLoc::dump(const LLVMContext &Ctx) const {$/;"	f	class:DebugLoc
dump	VMCore/GCOV.cpp	/^void GCOVBlock::dump() {$/;"	f	class:GCOVBlock
dump	VMCore/GCOV.cpp	/^void GCOVFile::dump() {$/;"	f	class:GCOVFile
dump	VMCore/GCOV.cpp	/^void GCOVFunction::dump() {$/;"	f	class:GCOVFunction
dump	VMCore/GCOV.cpp	/^void GCOVLines::dump() {$/;"	f	class:GCOVLines
dump	VMCore/Pass.cpp	/^void Pass::dump() const {$/;"	f	class:Pass
dump	VMCore/PassManager.cpp	/^void PMStack::dump() const {$/;"	f	class:PMStack
dump	VMCore/ValueSymbolTable.cpp	/^void ValueSymbolTable::dump() const {$/;"	f	class:ValueSymbolTable
dumpAll	CodeGen/ScheduleDAG.cpp	/^void SUnit::dumpAll(const ScheduleDAG *G) const {$/;"	f	class:SUnit
dumpAllSets	CodeGen/ShrinkWrapping.cpp	/^void PEI::dumpAllSets() {$/;"	f	class:PEI
dumpAllUsed	CodeGen/ShrinkWrapping.cpp	/^void PEI::dumpAllUsed() {$/;"	f	class:PEI
dumpAnalysisUsage	VMCore/PassManager.cpp	/^void PMDataManager::dumpAnalysisUsage(StringRef Msg, const Pass *P,$/;"	f	class:PMDataManager
dumpArguments	VMCore/PassManager.cpp	/^void PMTopLevelManager::dumpArguments() const {$/;"	f	class:PMTopLevelManager
dumpAttribute	DebugInfo/DWARFDebugInfoEntry.cpp	/^void DWARFDebugInfoEntryMinimal::dumpAttribute(raw_ostream &OS,$/;"	f	class:DWARFDebugInfoEntryMinimal
dumpBBs	Target/ARM/ARMConstantIslandPass.cpp	/^void ARMConstantIslands::dumpBBs() {$/;"	f	class:ARMConstantIslands
dumpBlock	Target/NVPTX/NVPTXUtilities.cpp	/^void llvm::dumpBlock(Value *v, char *blockName) {$/;"	f	class:llvm
dumpExampleDependence	Analysis/DependenceAnalysis.cpp	/^void dumpExampleDependence(raw_ostream &OS, Function *F,$/;"	f	file:
dumpHeader	Object/MachOObject.cpp	/^void MachOObject::dumpHeader() const { printHeader(dbgs()); dbgs() << '\\n'; }$/;"	f	class:MachOObject
dumpInst	Target/NVPTX/NVPTXUtilities.cpp	/^void llvm::dumpInst(Value *base, char *instName) {$/;"	f	class:llvm
dumpInstRec	Target/NVPTX/NVPTXUtilities.cpp	/^void llvm::dumpInstRec(Value *v) {$/;"	f	class:llvm
dumpInstRec	Target/NVPTX/NVPTXUtilities.cpp	/^void llvm::dumpInstRec(Value *v, std::set<Instruction *> *visited) {$/;"	f	class:llvm
dumpInstrs	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::dumpInstrs() const {$/;"	f	class:LiveIntervals
dumpLastUses	VMCore/PassManager.cpp	/^void PMDataManager::dumpLastUses(Pass *P, unsigned Offset) const{$/;"	f	class:PMDataManager
dumpNode	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::dumpNode(const SUnit *SU) const {$/;"	f	class:ScheduleDAGInstrs
dumpNode	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::dumpNode(const SUnit *SU) const {$/;"	f	class:ScheduleDAGSDNodes
dumpParent	Target/NVPTX/NVPTXUtilities.cpp	/^void llvm::dumpParent(Value *v) {$/;"	f	class:llvm
dumpPassArguments	VMCore/PassManager.cpp	/^void PMDataManager::dumpPassArguments() const {$/;"	f	class:PMDataManager
dumpPassInfo	VMCore/PassManager.cpp	/^void PMDataManager::dumpPassInfo(Pass *P, enum PassDebuggingString S1,$/;"	f	class:PMDataManager
dumpPassStructure	Analysis/IPA/CallGraphSCCPass.cpp	/^  void dumpPassStructure(unsigned Offset) {$/;"	f	class:__anon3::CGPassManager
dumpPassStructure	Analysis/LoopPass.cpp	/^void LPPassManager::dumpPassStructure(unsigned Offset) {$/;"	f	class:LPPassManager
dumpPassStructure	Analysis/RegionPass.cpp	/^void RGPassManager::dumpPassStructure(unsigned Offset) {$/;"	f	class:RGPassManager
dumpPassStructure	VMCore/Pass.cpp	/^void Pass::dumpPassStructure(unsigned Offset) {$/;"	f	class:Pass
dumpPassStructure	VMCore/PassManager.cpp	/^  void dumpPassStructure(unsigned Offset) {$/;"	f	class:__anon614::BBPassManager
dumpPassStructure	VMCore/PassManager.cpp	/^  void dumpPassStructure(unsigned Offset) {$/;"	f	class:llvm::MPPassManager
dumpPassStructure	VMCore/PassManager.cpp	/^void FPPassManager::dumpPassStructure(unsigned Offset) {$/;"	f	class:FPPassManager
dumpPasses	VMCore/PassManager.cpp	/^void PMTopLevelManager::dumpPasses() const {$/;"	f	class:PMTopLevelManager
dumpPreservedSet	VMCore/PassManager.cpp	/^void PMDataManager::dumpPreservedSet(const Pass *P) const {$/;"	f	class:PMDataManager
dumpRegPressure	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void RegReductionPQBase::dumpRegPressure() const {$/;"	f	class:RegReductionPQBase
dumpRepr	Support/Twine.cpp	/^void Twine::dumpRepr() const {$/;"	f	class:Twine
dumpRequiredSet	VMCore/PassManager.cpp	/^void PMDataManager::dumpRequiredSet(const Pass *P) const {$/;"	f	class:PMDataManager
dumpSRSets	CodeGen/ShrinkWrapping.cpp	/^void PEI::dumpSRSets() {$/;"	f	class:PEI
dumpSchedule	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::dumpSchedule() const {$/;"	f	class:SchedulePostRATDList
dumpSchedule	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^void ScheduleDAGSDNodes::dumpSchedule() const {$/;"	f	class:ScheduleDAGSDNodes
dumpSet	CodeGen/ShrinkWrapping.cpp	/^void PEI::dumpSet(const CSRegSet& s) {$/;"	f	class:PEI
dumpSets	CodeGen/ShrinkWrapping.cpp	/^void PEI::dumpSets(MachineBasicBlock* MBB) {$/;"	f	class:PEI
dumpSets1	CodeGen/ShrinkWrapping.cpp	/^void PEI::dumpSets1(MachineBasicBlock* MBB) {$/;"	f	class:PEI
dumpSmallBitVector	Analysis/DependenceAnalysis.cpp	/^static void dumpSmallBitVector(SmallBitVector &BV) {$/;"	f	file:
dumpStack	Target/X86/X86FloatingPoint.cpp	/^    void dumpStack() const {$/;"	f	struct:__anon386::FPS	file:
dumpTokens	Support/YAMLParser.cpp	/^bool yaml::dumpTokens(StringRef Input, raw_ostream &OS) {$/;"	f	class:yaml
dumpUsed	CodeGen/ShrinkWrapping.cpp	/^void PEI::dumpUsed(MachineBasicBlock* MBB) {$/;"	f	class:PEI
dumpUses	CodeGen/MachineRegisterInfo.cpp	/^void MachineRegisterInfo::dumpUses(unsigned Reg) const {$/;"	f	class:MachineRegisterInfo
dump_pretty	MC/MCInst.cpp	/^void MCInst::dump_pretty(raw_ostream &OS, const MCAsmInfo *MAI,$/;"	f	class:MCInst
dumpr	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::dumpr() const {$/;"	f	class:SDNode
dumpr	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::dumpr(const SelectionDAG *G) const {$/;"	f	class:SDNode
dumprFull	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::dumprFull(const SelectionDAG *G) const {$/;"	f	class:SDNode
dumprWithDepth	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::dumprWithDepth(const SelectionDAG *G, unsigned depth) const {$/;"	f	class:SDNode
dupl	Support/regcomp.c	/^dupl(struct parse *p,$/;"	f	file:
duplicate	CodeGen/TargetInstrInfoImpl.cpp	/^MachineInstr *TargetInstrInfoImpl::duplicate(MachineInstr *Orig,$/;"	f	class:TargetInstrInfoImpl
duplicate	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::duplicate(MachineInstr *Orig, MachineFunction &MF) const {$/;"	f	class:ARMBaseInstrInfo
duplicateCPV	Target/ARM/ARMBaseInstrInfo.cpp	/^static unsigned duplicateCPV(MachineFunction &MF, unsigned &CPI) {$/;"	f	file:
duplicateCmp	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::duplicateCmp(SDValue Cmp, SelectionDAG &DAG) const {$/;"	f	class:ARMTargetLowering
duplicatePendingSTBeforeKill	Target/X86/X86FloatingPoint.cpp	/^    void duplicatePendingSTBeforeKill(unsigned RegNo, MachineInstr *I) {$/;"	f	struct:__anon386::FPS	file:
duplicateSimpleBB	CodeGen/TailDuplication.cpp	/^TailDuplicatePass::duplicateSimpleBB(MachineBasicBlock *TailBB,$/;"	f	class:TailDuplicatePass
duplicateToTop	Target/X86/X86FloatingPoint.cpp	/^    void duplicateToTop(unsigned RegNo, unsigned AsReg, MachineInstr *I) {$/;"	f	struct:__anon386::FPS	file:
dyn_castFNegVal	Transforms/InstCombine/InstructionCombining.cpp	/^Value *InstCombiner::dyn_castFNegVal(Value *V) const {$/;"	f	class:InstCombiner
dyn_castFoldableMul	Transforms/InstCombine/InstCombineAddSub.cpp	/^static inline Value *dyn_castFoldableMul(Value *V, ConstantInt *&CST) {$/;"	f	file:
dyn_castNegVal	Transforms/InstCombine/InstructionCombining.cpp	/^Value *InstCombiner::dyn_castNegVal(Value *V) const {$/;"	f	class:InstCombiner
dyn_castNotVal	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static inline Value *dyn_castNotVal(Value *V) {$/;"	f	file:
dyn_castZExtVal	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^static Value *dyn_castZExtVal(Value *V, Type *Ty) {$/;"	f	file:
eAtomTypeCUOffset	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    eAtomTypeCUOffset   = 2u,   \/\/ DIE offset of the compiler unit header that$/;"	e	enum:llvm::DwarfAccelTable::AtomType
eAtomTypeDIEOffset	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    eAtomTypeDIEOffset  = 1u,   \/\/ DIE offset, check form for encoding$/;"	e	enum:llvm::DwarfAccelTable::AtomType
eAtomTypeNULL	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    eAtomTypeNULL       = 0u,$/;"	e	enum:llvm::DwarfAccelTable::AtomType
eAtomTypeNameFlags	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    eAtomTypeNameFlags  = 4u,   \/\/ Flags from enum NameFlags$/;"	e	enum:llvm::DwarfAccelTable::AtomType
eAtomTypeTag	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    eAtomTypeTag        = 3u,   \/\/ DW_TAG_xxx value, should be encoded as$/;"	e	enum:llvm::DwarfAccelTable::AtomType
eAtomTypeTypeFlags	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    eAtomTypeTypeFlags  = 5u    \/\/ Flags from enum TypeFlags$/;"	e	enum:llvm::DwarfAccelTable::AtomType
eHashFunctionDJB	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    eHashFunctionDJB = 0u$/;"	e	enum:llvm::DwarfAccelTable::HashFunctionType
eTypeFlagClassIsImplementation	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    eTypeFlagClassIsImplementation  = ( 1u << 1 )$/;"	e	enum:llvm::DwarfAccelTable::TypeFlags
eTypeFlagClassMask	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    eTypeFlagClassMask = 0x0000000fu,$/;"	e	enum:llvm::DwarfAccelTable::TypeFlags
eValueTypeBlock	DebugInfo/DWARFFormValue.h	/^    eValueTypeBlock$/;"	e	enum:llvm::DWARFFormValue::__anon176
eValueTypeCStr	DebugInfo/DWARFFormValue.h	/^    eValueTypeCStr,$/;"	e	enum:llvm::DWARFFormValue::__anon176
eValueTypeInvalid	DebugInfo/DWARFFormValue.h	/^    eValueTypeInvalid = 0,$/;"	e	enum:llvm::DWARFFormValue::__anon176
eValueTypeSigned	DebugInfo/DWARFFormValue.h	/^    eValueTypeSigned,$/;"	e	enum:llvm::DWARFFormValue::__anon176
eValueTypeUnsigned	DebugInfo/DWARFFormValue.h	/^    eValueTypeUnsigned,$/;"	e	enum:llvm::DWARFFormValue::__anon176
eaBase	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EABase                        eaBase;$/;"	m	struct:InternalInstruction
eaBaseBase	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EABase                        eaBaseBase;$/;"	m	struct:InternalInstruction
eaDisplacement	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EADisplacement                eaDisplacement;$/;"	m	struct:InternalInstruction
eaRegBase	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  EABase                        eaRegBase;$/;"	m	struct:InternalInstruction
edgeTargetsEdgeSource	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static bool edgeTargetsEdgeSource(const void *Node, EdgeIter I) {$/;"	f	struct:llvm::DOTGraphTraits
edge_iterator	Transforms/Scalar/ObjCARC.cpp	/^    typedef SmallVectorImpl<BasicBlock *>::const_iterator edge_iterator;$/;"	t	class:__anon507::BBState	file:
edge_ty	Support/DAGDeltaAlgorithm.cpp	/^  typedef DAGDeltaAlgorithm::edge_ty edge_ty;$/;"	t	class:__anon233::DAGDeltaAlgorithmImpl	file:
edit_distance	Support/StringRef.cpp	/^unsigned StringRef::edit_distance(llvm::StringRef Other,$/;"	f	class:StringRef
element_begin	Analysis/RegionInfo.cpp	/^Region::const_element_iterator Region::element_begin() const {$/;"	f	class:Region
element_begin	Analysis/RegionInfo.cpp	/^Region::element_iterator Region::element_begin() {$/;"	f	class:Region
element_end	Analysis/RegionInfo.cpp	/^Region::const_element_iterator Region::element_end() const {$/;"	f	class:Region
element_end	Analysis/RegionInfo.cpp	/^Region::element_iterator Region::element_end() {$/;"	f	class:Region
elementize	Target/NVPTX/VectorElementize.cpp	/^void VectorElementize::elementize(MachineFunction &F) {$/;"	f	class:VectorElementize
eliminateCallFramePseudoInstr	Target/ARM/ARMBaseRegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:ARMBaseRegisterInfo
eliminateCallFramePseudoInstr	Target/ARM/Thumb1RegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:Thumb1RegisterInfo
eliminateCallFramePseudoInstr	Target/CellSPU/SPURegisterInfo.cpp	/^SPURegisterInfo::eliminateCallFramePseudoInstr(MachineFunction &MF,$/;"	f	class:SPURegisterInfo
eliminateCallFramePseudoInstr	Target/Hexagon/HexagonRegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:HexagonRegisterInfo
eliminateCallFramePseudoInstr	Target/MBlaze/MBlazeRegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:MBlazeRegisterInfo
eliminateCallFramePseudoInstr	Target/MSP430/MSP430RegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:MSP430RegisterInfo
eliminateCallFramePseudoInstr	Target/Mips/Mips16RegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:Mips16RegisterInfo
eliminateCallFramePseudoInstr	Target/Mips/MipsSERegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:MipsSERegisterInfo
eliminateCallFramePseudoInstr	Target/NVPTX/NVPTXRegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:NVPTXRegisterInfo
eliminateCallFramePseudoInstr	Target/PowerPC/PPCRegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:PPCRegisterInfo
eliminateCallFramePseudoInstr	Target/Sparc/SparcRegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:SparcRegisterInfo
eliminateCallFramePseudoInstr	Target/X86/X86RegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:X86RegisterInfo
eliminateCallFramePseudoInstr	Target/XCore/XCoreRegisterInfo.cpp	/^eliminateCallFramePseudoInstr(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	class:XCoreRegisterInfo
eliminateDeadDefs	CodeGen/LiveRangeEdit.cpp	/^void LiveRangeEdit::eliminateDeadDefs(SmallVectorImpl<MachineInstr*> &Dead,$/;"	f	class:LiveRangeEdit
eliminateDeadDefs	CodeGen/RegisterCoalescer.cpp	/^void RegisterCoalescer::eliminateDeadDefs() {$/;"	f	class:RegisterCoalescer
eliminateFI	Target/Mips/Mips16RegisterInfo.cpp	/^void Mips16RegisterInfo::eliminateFI(MachineBasicBlock::iterator II,$/;"	f	class:Mips16RegisterInfo
eliminateFI	Target/Mips/MipsSERegisterInfo.cpp	/^void MipsSERegisterInfo::eliminateFI(MachineBasicBlock::iterator II,$/;"	f	class:MipsSERegisterInfo
eliminateFrameIndex	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:ARMBaseRegisterInfo
eliminateFrameIndex	Target/ARM/Thumb1RegisterInfo.cpp	/^Thumb1RegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:Thumb1RegisterInfo
eliminateFrameIndex	Target/CellSPU/SPURegisterInfo.cpp	/^SPURegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II, int SPAdj,$/;"	f	class:SPURegisterInfo
eliminateFrameIndex	Target/Hexagon/HexagonRegisterInfo.cpp	/^void HexagonRegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:HexagonRegisterInfo
eliminateFrameIndex	Target/MBlaze/MBlazeRegisterInfo.cpp	/^eliminateFrameIndex(MachineBasicBlock::iterator II, int SPAdj,$/;"	f	class:MBlazeRegisterInfo
eliminateFrameIndex	Target/MSP430/MSP430RegisterInfo.cpp	/^MSP430RegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:MSP430RegisterInfo
eliminateFrameIndex	Target/Mips/MipsRegisterInfo.cpp	/^eliminateFrameIndex(MachineBasicBlock::iterator II, int SPAdj,$/;"	f	class:MipsRegisterInfo
eliminateFrameIndex	Target/NVPTX/NVPTXRegisterInfo.cpp	/^eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:NVPTXRegisterInfo
eliminateFrameIndex	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:PPCRegisterInfo
eliminateFrameIndex	Target/Sparc/SparcRegisterInfo.cpp	/^SparcRegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:SparcRegisterInfo
eliminateFrameIndex	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:X86RegisterInfo
eliminateFrameIndex	Target/XCore/XCoreRegisterInfo.cpp	/^XCoreRegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:XCoreRegisterInfo
eliminateIVComparison	Transforms/Utils/SimplifyIndVar.cpp	/^void SimplifyIndvar::eliminateIVComparison(ICmpInst *ICmp, Value *IVOperand) {$/;"	f	class:SimplifyIndvar
eliminateIVRemainder	Transforms/Utils/SimplifyIndVar.cpp	/^void SimplifyIndvar::eliminateIVRemainder(BinaryOperator *Rem,$/;"	f	class:SimplifyIndvar
eliminateIVUser	Transforms/Utils/SimplifyIndVar.cpp	/^bool SimplifyIndvar::eliminateIVUser(Instruction *UseInst,$/;"	f	class:SimplifyIndvar
eliminateRedundantSpills	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::eliminateRedundantSpills(LiveInterval &SLI, VNInfo *VNI) {$/;"	f	class:InlineSpiller
eliminateUndefCopy	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::eliminateUndefCopy(MachineInstr *CopyMI,$/;"	f	class:RegisterCoalescer
emitARMAttributeSection	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::emitARMAttributeSection() {$/;"	f	class:ARMAsmPrinter
emitARMRegPlusImmediate	Target/ARM/ARMBaseInstrInfo.cpp	/^void llvm::emitARMRegPlusImmediate(MachineBasicBlock &MBB,$/;"	f	class:llvm
emitAbbreviations	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitAbbreviations() const {$/;"	f	class:DwarfDebug
emitAccelNames	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitAccelNames() {$/;"	f	class:DwarfDebug
emitAccelNamespaces	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitAccelNamespaces() {$/;"	f	class:DwarfDebug
emitAccelObjC	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitAccelObjC() {$/;"	f	class:DwarfDebug
emitAccelTypes	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitAccelTypes() {$/;"	f	class:DwarfDebug
emitAlignedDPRCS2Restores	Target/ARM/ARMFrameLowering.cpp	/^static void emitAlignedDPRCS2Restores(MachineBasicBlock &MBB,$/;"	f	file:
emitAlignedDPRCS2Spills	Target/ARM/ARMFrameLowering.cpp	/^static void emitAlignedDPRCS2Spills(MachineBasicBlock &MBB,$/;"	f	file:
emitArrayBound	Target/XCore/XCoreAsmPrinter.cpp	/^void XCoreAsmPrinter::emitArrayBound(MCSymbol *Sym, const GlobalVariable *GV) {$/;"	f	class:XCoreAsmPrinter
emitAttributes	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::emitAttributes() {$/;"	f	class:ARMAsmPrinter
emitBasicBlock	Target/PowerPC/PPCCodeEmitter.cpp	/^void PPCCodeEmitter::emitBasicBlock(MachineBasicBlock &MBB) {$/;"	f	class:PPCCodeEmitter
emitBasicBlockLoopComments	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitBasicBlockLoopComments(const MachineBasicBlock &MBB,$/;"	f	file:
emitBranchInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitBranchInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitBranchToTrap	Transforms/Instrumentation/BoundsChecking.cpp	/^void BoundsChecking::emitBranchToTrap(Value *Cmp) {$/;"	f	class:BoundsChecking
emitBuildVector	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    SDNode *emitBuildVector(SDNode *bvNode) {$/;"	f	class:__anon414::SPUDAGToDAGISel
emitCallAndSwitchStatement	Transforms/Utils/CodeExtractor.cpp	/^emitCallAndSwitchStatement(Function *newFunction, BasicBlock *codeReplacer,$/;"	f	class:CodeExtractor
emitCalleeSavedFrameMoves	Target/X86/X86FrameLowering.cpp	/^void X86FrameLowering::emitCalleeSavedFrameMoves(MachineFunction &MF,$/;"	f	class:X86FrameLowering
emitComments	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitComments(const MachineInstr &MI, raw_ostream &CommentOS) {$/;"	f	file:
emitCommonSymbols	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyldImpl::emitCommonSymbols(ObjectImage &Obj,$/;"	f	class:llvm::RuntimeDyldImpl
emitConstPoolAddress	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitConstPoolAddress(unsigned CPI, unsigned Reloc) const {$/;"	f	class:ARMCodeEmitter
emitConstPoolAddress	Target/Mips/MipsCodeEmitter.cpp	/^void MipsCodeEmitter::emitConstPoolAddress(unsigned CPI, unsigned Reloc) const {$/;"	f	class:MipsCodeEmitter
emitConstPoolAddress	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitConstPoolAddress(unsigned CPI, unsigned Reloc,$/;"	f	class:Emitter
emitConstPoolInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitConstPoolInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitConstant	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitConstant(uint64_t Val, unsigned Size) {$/;"	f	class:Emitter
emitConstantPool	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::emitConstantPool(MachineConstantPool *MCP) {$/;"	f	class:JITEmitter
emitDIE	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitDIE(DIE *Die) {$/;"	f	class:DwarfDebug
emitDWordLE	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitDWordLE(uint64_t Binary) {$/;"	f	class:ARMCodeEmitter
emitDataProcessingInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitDataProcessingInstruction(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
emitDebugInfo	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitDebugInfo() {$/;"	f	class:DwarfDebug
emitDebugInlineInfo	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitDebugInlineInfo() {$/;"	f	class:DwarfDebug
emitDebugLoc	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitDebugLoc() {$/;"	f	class:DwarfDebug
emitDebugMacInfo	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitDebugMacInfo() {$/;"	f	class:DwarfDebug
emitDebugPubTypes	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitDebugPubTypes() {$/;"	f	class:DwarfDebug
emitDebugRanges	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitDebugRanges() {$/;"	f	class:DwarfDebug
emitDebugStr	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitDebugStr() {$/;"	f	class:DwarfDebug
emitDebugValueComment	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static bool emitDebugValueComment(const MachineInstr *MI, AsmPrinter &AP) {$/;"	f	file:
emitDebugValues	CodeGen/LiveDebugVariables.cpp	/^void LDVImpl::emitDebugValues(VirtRegMap *VRM) {$/;"	f	class:LDVImpl
emitDebugValues	CodeGen/LiveDebugVariables.cpp	/^void LiveDebugVariables::emitDebugValues(VirtRegMap *VRM) {$/;"	f	class:LiveDebugVariables
emitDebugValues	CodeGen/LiveDebugVariables.cpp	/^void UserValue::emitDebugValues(VirtRegMap *VRM, LiveIntervals &LIS,$/;"	f	class:UserValue
emitDeclaration	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitDeclaration (const Function *F, raw_ostream &O) {$/;"	f	class:NVPTXAsmPrinter
emitDeclarations	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitDeclarations (Module &M, raw_ostream &O) {$/;"	f	class:NVPTXAsmPrinter
emitDemotedVars	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitDemotedVars(const Function *f, raw_ostream &O) {$/;"	f	class:NVPTXAsmPrinter
emitDisplacementField	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitDisplacementField(const MachineOperand *RelocOp,$/;"	f	class:Emitter
emitEHSjLjLongJmp	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::emitEHSjLjLongJmp(MachineInstr *MI,$/;"	f	class:X86TargetLowering
emitEHSjLjSetJmp	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::emitEHSjLjSetJmp(MachineInstr *MI,$/;"	f	class:X86TargetLowering
emitEndOfLineMatrix	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::emitEndOfLineMatrix(unsigned SectionEnd) {$/;"	f	class:DwarfDebug
emitEpilogue	Target/ARM/ARMFrameLowering.cpp	/^void ARMFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:ARMFrameLowering
emitEpilogue	Target/ARM/Thumb1FrameLowering.cpp	/^void Thumb1FrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:Thumb1FrameLowering
emitEpilogue	Target/CellSPU/SPUFrameLowering.cpp	/^void SPUFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:SPUFrameLowering
emitEpilogue	Target/Hexagon/HexagonFrameLowering.cpp	/^void HexagonFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:HexagonFrameLowering
emitEpilogue	Target/MBlaze/MBlazeFrameLowering.cpp	/^void MBlazeFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:MBlazeFrameLowering
emitEpilogue	Target/MSP430/MSP430FrameLowering.cpp	/^void MSP430FrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:MSP430FrameLowering
emitEpilogue	Target/Mips/Mips16FrameLowering.cpp	/^void Mips16FrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:Mips16FrameLowering
emitEpilogue	Target/Mips/MipsSEFrameLowering.cpp	/^void MipsSEFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:MipsSEFrameLowering
emitEpilogue	Target/NVPTX/NVPTXFrameLowering.cpp	/^void NVPTXFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:NVPTXFrameLowering
emitEpilogue	Target/PowerPC/PPCFrameLowering.cpp	/^void PPCFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:PPCFrameLowering
emitEpilogue	Target/Sparc/SparcFrameLowering.cpp	/^void SparcFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:SparcFrameLowering
emitEpilogue	Target/X86/X86FrameLowering.cpp	/^void X86FrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:X86FrameLowering
emitEpilogue	Target/XCore/XCoreFrameLowering.cpp	/^void XCoreFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:XCoreFrameLowering
emitError	CodeGen/MachineInstr.cpp	/^void MachineInstr::emitError(StringRef Msg) const {$/;"	f	class:MachineInstr
emitError	Linker/LinkModules.cpp	/^    bool emitError(const Twine &Message) {$/;"	f	class:__anon202::ModuleLinker	file:
emitError	VMCore/LLVMContext.cpp	/^void LLVMContext::emitError(const Instruction *I, const Twine &ErrorStr) {$/;"	f	class:LLVMContext
emitError	VMCore/LLVMContext.cpp	/^void LLVMContext::emitError(const Twine &ErrorStr) {$/;"	f	class:LLVMContext
emitError	VMCore/LLVMContext.cpp	/^void LLVMContext::emitError(unsigned LocCookie, const Twine &ErrorStr) {$/;"	f	class:LLVMContext
emitExtendInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitExtendInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitExternalSymbolAddress	Target/ARM/ARMCodeEmitter.cpp	/^emitExternalSymbolAddress(const char *ES, unsigned Reloc) const {$/;"	f	class:ARMCodeEmitter
emitExternalSymbolAddress	Target/Mips/MipsCodeEmitter.cpp	/^emitExternalSymbolAddress(const char *ES, unsigned Reloc) const {$/;"	f	class:MipsCodeEmitter
emitExternalSymbolAddress	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitExternalSymbolAddress(const char *ES,$/;"	f	class:Emitter
emitFrameDirective	Target/MBlaze/MBlazeAsmPrinter.cpp	/^void MBlazeAsmPrinter::emitFrameDirective() {$/;"	f	class:MBlazeAsmPrinter
emitFrameDirective	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::emitFrameDirective() {$/;"	f	class:MipsAsmPrinter
emitFrameIndexDebugValue	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::emitFrameIndexDebugValue(MachineFunction &MF,$/;"	f	class:ARMBaseInstrInfo
emitFrameIndexDebugValue	Target/Mips/MipsInstrInfo.cpp	/^MipsInstrInfo::emitFrameIndexDebugValue(MachineFunction &MF, int FrameIx,$/;"	f	class:MipsInstrInfo
emitFrameIndexDebugValue	Target/PowerPC/PPCInstrInfo.cpp	/^PPCInstrInfo::emitFrameIndexDebugValue(MachineFunction &MF,$/;"	f	class:PPCInstrInfo
emitFrameIndexDebugValue	Target/Sparc/SparcInstrInfo.cpp	/^SparcInstrInfo::emitFrameIndexDebugValue(MachineFunction &MF,$/;"	f	class:SparcInstrInfo
emitFrameIndexDebugValue	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::emitFrameIndexDebugValue(MachineFunction &MF,$/;"	f	class:X86InstrInfo
emitFrameIndexDebugValue	Target/XCore/XCoreInstrInfo.cpp	/^XCoreInstrInfo::emitFrameIndexDebugValue(MachineFunction &MF, int FrameIx,$/;"	f	class:XCoreInstrInfo
emitFunc	Transforms/Scalar/SROA.cpp	/^    void emitFunc(Type *Ty, Value *&Agg, const Twine &Name) {$/;"	f	struct:__anon562::AggLoadStoreRewriter::LoadOpSplitter
emitFunc	Transforms/Scalar/SROA.cpp	/^    void emitFunc(Type *Ty, Value *&Agg, const Twine &Name) {$/;"	f	struct:__anon562::AggLoadStoreRewriter::StoreOpSplitter
emitFunctionParamList	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitFunctionParamList(const Function *F,$/;"	f	class:NVPTXAsmPrinter
emitFunctionParamList	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitFunctionParamList(const MachineFunction &MF,$/;"	f	class:NVPTXAsmPrinter
emitFunctionStub	Target/ARM/ARMJITInfo.cpp	/^void *ARMJITInfo::emitFunctionStub(const Function* F, void *Fn,$/;"	f	class:ARMJITInfo
emitFunctionStub	Target/Mips/MipsJITInfo.cpp	/^void *MipsJITInfo::emitFunctionStub(const Function *F, void *Fn,$/;"	f	class:MipsJITInfo
emitFunctionStub	Target/PowerPC/PPCJITInfo.cpp	/^void *PPCJITInfo::emitFunctionStub(const Function* F, void *Fn,$/;"	f	class:PPCJITInfo
emitFunctionStub	Target/X86/X86JITInfo.cpp	/^void *X86JITInfo::emitFunctionStub(const Function* F, void *Target,$/;"	f	class:X86JITInfo
emitGCNO	Transforms/Instrumentation/GCOVProfiling.cpp	/^void GCOVProfiler::emitGCNO() {$/;"	f	class:GCOVProfiler
emitGPDisp	Target/Mips/MipsLongBranch.cpp	/^static void emitGPDisp(MachineFunction &F, const MipsInstrInfo *TII) {$/;"	f	file:
emitGlobalAddress	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitGlobalAddress(const GlobalValue *GV, unsigned Reloc,$/;"	f	class:ARMCodeEmitter
emitGlobalAddress	Target/Mips/MipsCodeEmitter.cpp	/^void MipsCodeEmitter::emitGlobalAddress(const GlobalValue *GV, unsigned Reloc,$/;"	f	class:MipsCodeEmitter
emitGlobalAddress	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitGlobalAddress(const GlobalValue *GV,$/;"	f	class:Emitter
emitGlobalAddressUnaligned	Target/Mips/MipsCodeEmitter.cpp	/^void MipsCodeEmitter::emitGlobalAddressUnaligned(const GlobalValue *GV,$/;"	f	class:MipsCodeEmitter
emitGlobalConstantArray	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitGlobalConstantArray(const ConstantArray *CA, unsigned AddrSpace,$/;"	f	file:
emitGlobalConstantDataSequential	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitGlobalConstantDataSequential(const ConstantDataSequential *CDS,$/;"	f	file:
emitGlobalConstantFP	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitGlobalConstantFP(const ConstantFP *CFP, unsigned AddrSpace,$/;"	f	file:
emitGlobalConstantImpl	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitGlobalConstantImpl(const Constant *CV, unsigned AddrSpace,$/;"	f	file:
emitGlobalConstantLargeInt	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitGlobalConstantLargeInt(const ConstantInt *CI,$/;"	f	file:
emitGlobalConstantStruct	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitGlobalConstantStruct(const ConstantStruct *CS,$/;"	f	file:
emitGlobalConstantVector	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitGlobalConstantVector(const ConstantVector *CV,$/;"	f	file:
emitGlobalValueIndirectSym	Target/ARM/ARMJITInfo.cpp	/^void *ARMJITInfo::emitGlobalValueIndirectSym(const GlobalValue *GV, void *Ptr,$/;"	f	class:ARMJITInfo
emitGlobalValueIndirectSym	Target/X86/X86JITInfo.cpp	/^void *X86JITInfo::emitGlobalValueIndirectSym(const GlobalValue* GV, void *ptr,$/;"	f	class:X86JITInfo
emitGlobals	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::emitGlobals() {$/;"	f	class:ExecutionEngine
emitHeader	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitHeader (Module &M, raw_ostream &O) {$/;"	f	class:NVPTXAsmPrinter
emitImplicitDef	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitImplicitDef(const MachineInstr *MI, AsmPrinter &AP) {$/;"	f	file:
emitInlineJumpTable	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitInlineJumpTable(unsigned JTIndex) {$/;"	f	class:ARMCodeEmitter
emitInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitInstruction	Target/Mips/MipsCodeEmitter.cpp	/^void MipsCodeEmitter::emitInstruction(const MachineInstr &MI) {$/;"	f	class:MipsCodeEmitter
emitInstruction	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitInstruction(MachineInstr &MI,$/;"	f	class:Emitter
emitJumpTableAddress	Target/ARM/ARMCodeEmitter.cpp	/^emitJumpTableAddress(unsigned JTIndex, unsigned Reloc) const {$/;"	f	class:ARMCodeEmitter
emitJumpTableAddress	Target/Mips/MipsCodeEmitter.cpp	/^emitJumpTableAddress(unsigned JTIndex, unsigned Reloc) const {$/;"	f	class:MipsCodeEmitter
emitJumpTableAddress	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitJumpTableAddress(unsigned JTI, unsigned Reloc,$/;"	f	class:Emitter
emitJumpTableInfo	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::emitJumpTableInfo(MachineJumpTableInfo *MJTI) {$/;"	f	class:JITEmitter
emitKernelFunctionDirectives	Target/NVPTX/NVPTXAsmPrinter.cpp	/^NVPTXAsmPrinter::emitKernelFunctionDirectives(const Function& F,$/;"	f	class:NVPTXAsmPrinter
emitKill	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static void emitKill(const MachineInstr *MI, AsmPrinter &AP) {$/;"	f	file:
emitLEApcrelJTInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitLEApcrelJTInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitLabel	ExecutionEngine/JIT/JITEmitter.cpp	/^    virtual void emitLabel(MCSymbol *Label) {$/;"	f	class:__anon182::JITEmitter
emitLineNumberAsDotLoc	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitLineNumberAsDotLoc(const MachineInstr &MI)$/;"	f	class:NVPTXAsmPrinter
emitLinkageDirective	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitLinkageDirective(const GlobalValue* V, raw_ostream &O)$/;"	f	class:NVPTXAsmPrinter
emitLoadConstPool	Target/ARM/ARMBaseRegisterInfo.cpp	/^emitLoadConstPool(MachineBasicBlock &MBB,$/;"	f	class:ARMBaseRegisterInfo
emitLoadConstPool	Target/ARM/Thumb1RegisterInfo.cpp	/^Thumb1RegisterInfo::emitLoadConstPool(MachineBasicBlock &MBB,$/;"	f	class:Thumb1RegisterInfo
emitLoadConstPool	Target/ARM/Thumb2RegisterInfo.cpp	/^Thumb2RegisterInfo::emitLoadConstPool(MachineBasicBlock &MBB,$/;"	f	class:Thumb2RegisterInfo
emitLoadStoreInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitLoadStoreInstruction(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
emitLoadStoreMultipleInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitLoadStoreMultipleInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitMOVi2piecesInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitMOVi2piecesInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitMOVi32immInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitMOVi32immInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitMachineBasicBlock	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitMachineBasicBlock(MachineBasicBlock *BB,$/;"	f	class:ARMCodeEmitter
emitMachineBasicBlock	Target/Mips/MipsCodeEmitter.cpp	/^void MipsCodeEmitter::emitMachineBasicBlock(MachineBasicBlock *BB,$/;"	f	class:MipsCodeEmitter
emitMemModRMByte	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitMemModRMByte(const MachineInstr &MI,$/;"	f	class:Emitter
emitMiscArithInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitMiscArithInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitMiscBranchInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitMiscBranchInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitMiscLoadStoreInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitMiscLoadStoreInstruction(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
emitModuleFlags	CodeGen/TargetLoweringObjectFileImpl.cpp	/^emitModuleFlags(MCStreamer &Streamer,$/;"	f	class:TargetLoweringObjectFileMachO
emitMulFrmInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitMulFrmInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitNEON1RegModImmInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitNEON1RegModImmInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitNEON2RegInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitNEON2RegInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitNEON3RegInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitNEON3RegInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitNEONDupInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitNEONDupInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitNEONLaneInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitNEONLaneInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitObject	ExecutionEngine/MCJIT/MCJIT.cpp	/^void MCJIT::emitObject(Module *m) {$/;"	f	class:MCJIT
emitOpcodePrefix	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitOpcodePrefix(uint64_t TSFlags,$/;"	f	class:Emitter
emitPCRelativeBlockAddress	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitPCRelativeBlockAddress(MachineBasicBlock *MBB) {$/;"	f	class:Emitter
emitPTXAddressSpace	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitPTXAddressSpace(unsigned int AddressSpace,$/;"	f	class:NVPTXAsmPrinter
emitPTXGlobalVariable	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitPTXGlobalVariable(const GlobalVariable* GVar,$/;"	f	class:NVPTXAsmPrinter
emitPersonalityValue	CodeGen/TargetLoweringObjectFileImpl.cpp	/^void TargetLoweringObjectFileELF::emitPersonalityValue(MCStreamer &Streamer,$/;"	f	class:TargetLoweringObjectFileELF
emitPersonalityValue	Target/TargetLoweringObjectFile.cpp	/^void TargetLoweringObjectFile::emitPersonalityValue(MCStreamer &Streamer,$/;"	f	class:TargetLoweringObjectFile
emitPopInst	Target/ARM/ARMFrameLowering.cpp	/^void ARMFrameLowering::emitPopInst(MachineBasicBlock &MBB,$/;"	f	class:ARMFrameLowering
emitProfileArcs	Transforms/Instrumentation/GCOVProfiling.cpp	/^bool GCOVProfiler::emitProfileArcs() {$/;"	f	class:GCOVProfiler
emitPrologLabel	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::emitPrologLabel(const MachineInstr &MI) {$/;"	f	class:AsmPrinter
emitPrologue	Target/ARM/ARMFrameLowering.cpp	/^void ARMFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:ARMFrameLowering
emitPrologue	Target/ARM/Thumb1FrameLowering.cpp	/^void Thumb1FrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:Thumb1FrameLowering
emitPrologue	Target/CellSPU/SPUFrameLowering.cpp	/^void SPUFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:SPUFrameLowering
emitPrologue	Target/Hexagon/HexagonFrameLowering.cpp	/^void HexagonFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:HexagonFrameLowering
emitPrologue	Target/MBlaze/MBlazeFrameLowering.cpp	/^void MBlazeFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:MBlazeFrameLowering
emitPrologue	Target/MSP430/MSP430FrameLowering.cpp	/^void MSP430FrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:MSP430FrameLowering
emitPrologue	Target/Mips/Mips16FrameLowering.cpp	/^void Mips16FrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:Mips16FrameLowering
emitPrologue	Target/Mips/MipsSEFrameLowering.cpp	/^void MipsSEFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:MipsSEFrameLowering
emitPrologue	Target/NVPTX/NVPTXFrameLowering.cpp	/^void NVPTXFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:NVPTXFrameLowering
emitPrologue	Target/PowerPC/PPCFrameLowering.cpp	/^void PPCFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:PPCFrameLowering
emitPrologue	Target/Sparc/SparcFrameLowering.cpp	/^void SparcFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:SparcFrameLowering
emitPrologue	Target/X86/X86FrameLowering.cpp	/^void X86FrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:X86FrameLowering
emitPrologue	Target/XCore/XCoreFrameLowering.cpp	/^void XCoreFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:XCoreFrameLowering
emitPseudoInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitPseudoInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitPseudoMoveInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitPseudoMoveInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitPushInst	Target/ARM/ARMFrameLowering.cpp	/^void ARMFrameLowering::emitPushInst(MachineBasicBlock &MBB,$/;"	f	class:ARMFrameLowering
emitRegModRMByte	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitRegModRMByte(unsigned ModRMReg,$/;"	f	class:Emitter
emitRegModRMByte	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitRegModRMByte(unsigned RegOpcodeFld) {$/;"	f	class:Emitter
emitSIBByte	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitSIBByte(unsigned SS,$/;"	f	class:Emitter
emitSPUpdate	Target/ARM/ARMBaseRegisterInfo.cpp	/^emitSPUpdate(bool isARM,$/;"	f	file:
emitSPUpdate	Target/ARM/ARMFrameLowering.cpp	/^emitSPUpdate(bool isARM,$/;"	f	file:
emitSPUpdate	Target/ARM/Thumb1FrameLowering.cpp	/^emitSPUpdate(MachineBasicBlock &MBB,$/;"	f	file:
emitSPUpdate	Target/ARM/Thumb1RegisterInfo.cpp	/^static void emitSPUpdate(MachineBasicBlock &MBB,$/;"	f	file:
emitSPUpdate	Target/X86/X86FrameLowering.cpp	/^void emitSPUpdate(MachineBasicBlock &MBB, MachineBasicBlock::iterator &MBBI,$/;"	f	file:
emitSaturateInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitSaturateInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitSection	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^unsigned RuntimeDyldImpl::emitSection(ObjectImage &Obj,$/;"	f	class:llvm::RuntimeDyldImpl
emitSegmentOverridePrefix	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitSegmentOverridePrefix(uint64_t TSFlags,$/;"	f	class:Emitter
emitSignedInt64	Bitcode/Writer/BitcodeWriter.cpp	/^static void emitSignedInt64(SmallVectorImpl<uint64_t> &Vals, uint64_t V) {$/;"	f	file:
emitSourceFileHeader	TableGen/TableGenBackend.cpp	/^void llvm::emitSourceFileHeader(StringRef Desc, raw_ostream &OS) {$/;"	f	class:llvm
emitSplitOps	Transforms/Scalar/SROA.cpp	/^    void emitSplitOps(Type *Ty, Value *&Agg, const Twine &Name) {$/;"	f	class:__anon562::AggLoadStoreRewriter::OpSplitter
emitSrcInText	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::emitSrcInText(StringRef filename, unsigned line) {$/;"	f	class:NVPTXAsmPrinter
emitStrLenMemCpy	Transforms/Utils/SimplifyLibCalls.cpp	/^  Value *emitStrLenMemCpy(Value *Src, Value *Dst, uint64_t Len,$/;"	f	struct:__anon473::StrCatOpt
emitT2RegPlusImmediate	Target/ARM/Thumb2InstrInfo.cpp	/^void llvm::emitT2RegPlusImmediate(MachineBasicBlock &MBB,$/;"	f	class:llvm
emitThumbConstant	Target/ARM/Thumb1RegisterInfo.cpp	/^static void emitThumbConstant(MachineBasicBlock &MBB,$/;"	f	file:
emitThumbRegPlusImmInReg	Target/ARM/Thumb1RegisterInfo.cpp	/^void emitThumbRegPlusImmInReg(MachineBasicBlock &MBB,$/;"	f	file:
emitThumbRegPlusImmediate	Target/ARM/Thumb1RegisterInfo.cpp	/^void llvm::emitThumbRegPlusImmediate(MachineBasicBlock &MBB,$/;"	f	class:llvm
emitULH	Target/Mips/MipsCodeEmitter.cpp	/^int MipsCodeEmitter::emitULH(const MachineInstr &MI) {$/;"	f	class:MipsCodeEmitter
emitULHu	Target/Mips/MipsCodeEmitter.cpp	/^int MipsCodeEmitter::emitULHu(const MachineInstr &MI) {$/;"	f	class:MipsCodeEmitter
emitULW	Target/Mips/MipsCodeEmitter.cpp	/^int MipsCodeEmitter::emitULW(const MachineInstr &MI) {$/;"	f	class:MipsCodeEmitter
emitUSH	Target/Mips/MipsCodeEmitter.cpp	/^int MipsCodeEmitter::emitUSH(const MachineInstr &MI) {$/;"	f	class:MipsCodeEmitter
emitUSW	Target/Mips/MipsCodeEmitter.cpp	/^int MipsCodeEmitter::emitUSW(const MachineInstr &MI) {$/;"	f	class:MipsCodeEmitter
emitVEXOpcodePrefix	Target/X86/X86CodeEmitter.cpp	/^void Emitter<CodeEmitter>::emitVEXOpcodePrefix(uint64_t TSFlags,$/;"	f	class:Emitter
emitVFPArithInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitVFPArithInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitVFPConversionInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitVFPConversionInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitVFPLoadStoreInstruction	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitVFPLoadStoreInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitVFPLoadStoreMultipleInstruction	Target/ARM/ARMCodeEmitter.cpp	/^ARMCodeEmitter::emitVFPLoadStoreMultipleInstruction(const MachineInstr &MI) {$/;"	f	class:ARMCodeEmitter
emitVirtualRegister	Target/NVPTX/NVPTXAsmPrinter.cpp	/^NVPTXAsmPrinter::emitVirtualRegister(unsigned int vr, bool isVec,$/;"	f	class:NVPTXAsmPrinter
emitWordLE	Target/ARM/ARMCodeEmitter.cpp	/^void ARMCodeEmitter::emitWordLE(unsigned Binary) {$/;"	f	class:ARMCodeEmitter
emitWordLE	Target/Mips/MipsCodeEmitter.cpp	/^void MipsCodeEmitter::emitWordLE(unsigned Word) {$/;"	f	class:MipsCodeEmitter
empty	Bitcode/Reader/BitcodeReader.h	/^  bool empty() const          { return MDValuePtrs.empty(); }$/;"	f	class:llvm::BitcodeReaderMDValueList
empty	Bitcode/Reader/BitcodeReader.h	/^  bool empty() const { return ValuePtrs.empty(); }$/;"	f	class:llvm::BitcodeReaderValueList
empty	CodeGen/LiveIntervalUnion.h	/^  bool empty() const { return Segments.empty(); }$/;"	f	class:llvm::LiveIntervalUnion
empty	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^    bool empty() const { return Queue.empty(); }$/;"	f	struct:__anon86::FastPriorityQueue
empty	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool empty() const { return Queue.empty(); }$/;"	f	class:__anon77::RegReductionPQBase
empty	Transforms/Scalar/MemCpyOptimizer.cpp	/^  bool empty() const { return Ranges.empty(); }$/;"	f	class:__anon574::MemsetRanges
emptyIntervalVRegs	CodeGen/RegAllocPBQP.cpp	/^  RegSet vregsToAlloc, emptyIntervalVRegs;$/;"	m	class:__anon135::RegAllocPBQP	file:
enablePostRAScheduler	Target/ARM/ARMSubtarget.cpp	/^bool ARMSubtarget::enablePostRAScheduler($/;"	f	class:ARMSubtarget
enablePostRAScheduler	Target/CellSPU/SPUSubtarget.cpp	/^bool SPUSubtarget::enablePostRAScheduler($/;"	f	class:SPUSubtarget
enablePostRAScheduler	Target/MBlaze/MBlazeSubtarget.cpp	/^enablePostRAScheduler(CodeGenOpt::Level OptLevel,$/;"	f	class:MBlazeSubtarget
enablePostRAScheduler	Target/Mips/MipsSubtarget.cpp	/^MipsSubtarget::enablePostRAScheduler(CodeGenOpt::Level OptLevel,$/;"	f	class:MipsSubtarget
enablePostRAScheduler	Target/PowerPC/PPCSubtarget.cpp	/^bool PPCSubtarget::enablePostRAScheduler($/;"	f	class:PPCSubtarget
enablePostRAScheduler	Target/TargetSubtargetInfo.cpp	/^bool TargetSubtargetInfo::enablePostRAScheduler($/;"	f	class:TargetSubtargetInfo
enablePostRAScheduler	Target/X86/X86Subtarget.cpp	/^bool X86Subtarget::enablePostRAScheduler($/;"	f	class:X86Subtarget
encodeCompactUnwindRegistersWithFrame	Target/X86/X86FrameLowering.cpp	/^encodeCompactUnwindRegistersWithFrame(unsigned SavedRegs[CU_NUM_SAVED_REGS],$/;"	f	file:
encodeCompactUnwindRegistersWithoutFrame	Target/X86/X86FrameLowering.cpp	/^encodeCompactUnwindRegistersWithoutFrame(unsigned SavedRegs[CU_NUM_SAVED_REGS],$/;"	f	file:
encodeLLVMAttributesForBitcode	VMCore/Attributes.cpp	/^uint64_t Attributes::encodeLLVMAttributesForBitcode(Attributes Attrs) {$/;"	f	class:Attributes
encodeMemSDNodeFlags	CodeGen/SelectionDAG/SelectionDAG.cpp	/^encodeMemSDNodeFlags(int ConvType, ISD::MemIndexedMode AM, bool isVolatile,$/;"	f	file:
encodeNEONRd	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::encodeNEONRd(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
encodeNEONRm	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::encodeNEONRm(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
encodeNEONRn	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::encodeNEONRn(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
encodeThumbBLOffset	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^static int32_t encodeThumbBLOffset(int32_t offset) {$/;"	f	file:
encodeUTF8	Support/YAMLParser.cpp	/^static void encodeUTF8( uint32_t UnicodeScalarValue$/;"	f	file:
encodeVFPRd	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::encodeVFPRd(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
encodeVFPRm	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::encodeVFPRm(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
encodeVFPRn	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::encodeVFPRn(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
encode_leb128	Target/NVPTX/NVPTXutil.cpp	/^static int encode_leb128(uint64_t val, int *nbytes,$/;"	f	namespace:llvm
encode_leb128	Target/NVPTX/NVPTXutil.cpp	/^uint64_t encode_leb128(const char *str)$/;"	f	namespace:llvm
encoding	ExecutionEngine/JIT/JIT.cpp	/^      unsigned long encoding : 8;$/;"	m	struct:__anon185::LibgccObject::__anon186::__anon187	file:
encoding	ExecutionEngine/JIT/JIT.cpp	/^  } encoding;$/;"	m	struct:__anon185::LibgccObject	typeref:union:__anon185::LibgccObject::__anon186	file:
encoding	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  uint8_t encoding;$/;"	m	struct:OperandSpecifier
end	CodeGen/LiveIntervalUnion.h	/^  SegmentIter end() { return Segments.end(); }$/;"	f	class:llvm::LiveIntervalUnion
end	CodeGen/MachineBlockPlacement.cpp	/^  iterator end() { return Blocks.end(); }$/;"	f	class:__anon106::BlockChain
end	Support/PathV2.cpp	/^const_iterator end(StringRef path) {$/;"	f	namespace:llvm::sys::path
end	Support/YAMLParser.cpp	/^document_iterator Stream::end() {$/;"	f	class:Stream
end	Support/regcomp.c	/^	char *end;		\/* end of string (-> NUL normally) *\/$/;"	m	struct:parse	file:
end	Transforms/IPO/FunctionAttrs.cpp	/^    iterator end() { return SyntheticRoot.Uses.end(); }$/;"	f	class:__anon579::ArgumentGraph
end	Transforms/Instrumentation/MaximumSpanningTree.h	/^    typename MaxSpanTree::iterator end() {$/;"	f	class:llvm::MaximumSpanningTree
end	Transforms/Scalar/EarlyCSE.cpp	/^    DomTreeNode::iterator end() { return EndIter; }$/;"	f	class:__anon566::EarlyCSE::StackNode
end	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const_iterator end() const   { return RegSequence.end(); }$/;"	f	class:__anon513::RegUseTracker
end	Transforms/Scalar/LoopStrengthReduce.cpp	/^  const_iterator end() const {$/;"	f	struct:__anon518::IVChain
end	Transforms/Scalar/LoopStrengthReduce.cpp	/^  iterator end()   { return RegSequence.end(); }$/;"	f	class:__anon513::RegUseTracker
end	Transforms/Scalar/MemCpyOptimizer.cpp	/^  const_iterator end() const { return Ranges.end(); }$/;"	f	class:__anon574::MemsetRanges
end	Transforms/Scalar/ObjCARC.cpp	/^    const_iterator end() const { return Vector.end(); }$/;"	f	class:__anon498::MapVector
end	Transforms/Scalar/ObjCARC.cpp	/^    iterator end() { return Vector.end(); }$/;"	f	class:__anon498::MapVector
end	Transforms/Scalar/SROA.cpp	/^  const_iterator end() const { return Partitions.end(); }$/;"	f	class:__anon557::AllocaPartitioning
end	Transforms/Scalar/SROA.cpp	/^  iterator end() { return Partitions.end(); }$/;"	f	class:__anon557::AllocaPartitioning
endExceptionTable	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void endExceptionTable(const Function *F, uint8_t *TableStart,$/;"	f	class:__anon190::DefaultJITMemoryManager
endFunction	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::endFunction(const MachineFunction *MF) {$/;"	f	class:DwarfDebug
endFunctionBody	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void endFunctionBody(const Function *F, uint8_t *FunctionStart,$/;"	f	class:__anon190::DefaultJITMemoryManager
endInstruction	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::endInstruction(const MachineInstr *MI) {$/;"	f	class:DwarfDebug
endModule	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::endModule() {$/;"	f	class:DwarfDebug
endPacket	CodeGen/DFAPacketizer.cpp	/^void VLIWPacketizerList::endPacket(MachineBasicBlock *MBB,$/;"	f	class:VLIWPacketizerList
end_children	Object/Archive.cpp	/^Archive::child_iterator Archive::end_children() const {$/;"	f	class:Archive
end_dynamic_symbols	Object/COFFObjectFile.cpp	/^symbol_iterator COFFObjectFile::end_dynamic_symbols() const {$/;"	f	class:COFFObjectFile
end_dynamic_symbols	Object/MachOObjectFile.cpp	/^symbol_iterator MachOObjectFile::end_dynamic_symbols() const {$/;"	f	class:llvm::object::MachOObjectFile
end_libraries_needed	Object/COFFObjectFile.cpp	/^library_iterator COFFObjectFile::end_libraries_needed() const {$/;"	f	class:COFFObjectFile
end_libraries_needed	Object/MachOObjectFile.cpp	/^library_iterator MachOObjectFile::end_libraries_needed() const {$/;"	f	class:llvm::object::MachOObjectFile
end_sections	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual object::section_iterator end_sections() const$/;"	f	class:llvm::ObjectImageCommon
end_sections	Object/COFFObjectFile.cpp	/^section_iterator COFFObjectFile::end_sections() const {$/;"	f	class:COFFObjectFile
end_sections	Object/MachOObjectFile.cpp	/^section_iterator MachOObjectFile::end_sections() const {$/;"	f	class:llvm::object::MachOObjectFile
end_symbols	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual object::symbol_iterator end_symbols() const$/;"	f	class:llvm::ObjectImageCommon
end_symbols	Object/Archive.cpp	/^Archive::symbol_iterator Archive::end_symbols() const {$/;"	f	class:Archive
end_symbols	Object/COFFObjectFile.cpp	/^symbol_iterator COFFObjectFile::end_symbols() const {$/;"	f	class:COFFObjectFile
end_symbols	Object/MachOObjectFile.cpp	/^symbol_iterator MachOObjectFile::end_symbols() const {$/;"	f	class:llvm::object::MachOObjectFile
enforceKnownAlignment	Transforms/Utils/Local.cpp	/^static unsigned enforceKnownAlignment(Value *V, unsigned Align,$/;"	f	file:
enlarge	Support/regcomp.c	/^enlarge(struct parse *p, sopno size)$/;"	f	file:
enqueue	CodeGen/RegAllocBasic.cpp	/^  virtual void enqueue(LiveInterval *LI) {$/;"	f	class:__anon122::RABasic
enqueue	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::enqueue(LiveInterval *LI) {$/;"	f	class:RAGreedy
enqueueUsers	Transforms/Scalar/SROA.cpp	/^  void enqueueUsers(Instruction &I) {$/;"	f	class:__anon562::AggLoadStoreRewriter	file:
enqueueUsers	Transforms/Scalar/SROA.cpp	/^  void enqueueUsers(Instruction &I, int64_t UserOffset) {$/;"	f	class:AllocaPartitioning::BuilderBase
ensureHead	Support/YAMLParser.cpp	/^  Token *ensureHead(Token*) const { return createSentinel(); }$/;"	f	struct:llvm::ilist_sentinel_traits
enterBasicBlock	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::enterBasicBlock(MachineBasicBlock *MBB) {$/;"	f	class:ExeDepsFix
enterBasicBlock	CodeGen/RegisterScavenging.cpp	/^void RegScavenger::enterBasicBlock(MachineBasicBlock *mbb) {$/;"	f	class:RegScavenger
enterIntvAfter	CodeGen/SplitKit.cpp	/^SlotIndex SplitEditor::enterIntvAfter(SlotIndex Idx) {$/;"	f	class:SplitEditor
enterIntvAtEnd	CodeGen/SplitKit.cpp	/^SlotIndex SplitEditor::enterIntvAtEnd(MachineBasicBlock &MBB) {$/;"	f	class:SplitEditor
enterIntvBefore	CodeGen/SplitKit.cpp	/^SlotIndex SplitEditor::enterIntvBefore(SlotIndex Idx) {$/;"	f	class:SplitEditor
enterLocalValueArea	CodeGen/SelectionDAG/FastISel.cpp	/^FastISel::SavePoint FastISel::enterLocalValueArea() {$/;"	f	class:FastISel
enterRegion	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::enterRegion(MachineBasicBlock *bb,$/;"	f	class:ScheduleDAGMI
enterRegion	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::enterRegion(MachineBasicBlock *bb,$/;"	f	class:SchedulePostRATDList
enterRegion	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::enterRegion(MachineBasicBlock *bb,$/;"	f	class:ScheduleDAGInstrs
enumerate	Transforms/IPO/MergeFunctions.cpp	/^bool FunctionComparator::enumerate(const Value *V1, const Value *V2) {$/;"	f	class:FunctionComparator
enumeratePasses	VMCore/Pass.cpp	/^void PassRegistrationListener::enumeratePasses() {$/;"	f	class:PassRegistrationListener
enumerateWith	VMCore/PassRegistry.cpp	/^void PassRegistry::enumerateWith(PassRegistrationListener *L) {$/;"	f	class:PassRegistry
env	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJDEnvironmentType  env;                    $/;"	m	struct:_iJIT_Method_Load
equal	AsmParser/LLToken.h	/^    equal, comma,      \/\/ =  ,$/;"	e	enum:llvm::lltok::Kind
equal	TableGen/TGLexer.h	/^    equal, question,    \/\/ = ?$/;"	e	enum:llvm::tgtok::TokKind
equals	Target/ARM/ARMConstantPoolValue.h	/^  bool equals(const ARMConstantPoolValue *A) const {$/;"	f	class:llvm::ARMConstantPoolValue
equivalent	Support/system_error.cpp	/^error_category::equivalent(const error_code& code, int condition) const {$/;"	f	class:llvm::error_category
equivalent	Support/system_error.cpp	/^error_category::equivalent(int code, const error_condition& condition) const {$/;"	f	class:llvm::error_category
equivalentAddressValues	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^static bool equivalentAddressValues(Value *A, Value *B) {$/;"	f	file:
erase	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::erase(MachineBasicBlock::iterator I) {$/;"	f	class:MachineBasicBlock
erase	Transforms/Scalar/GVN.cpp	/^void ValueTable::erase(Value *V) {$/;"	f	class:ValueTable
eraseBlock	Analysis/LazyValueInfo.cpp	/^void LazyValueInfo::eraseBlock(BasicBlock *BB) {$/;"	f	class:LazyValueInfo
eraseBlock	Analysis/LazyValueInfo.cpp	/^void LazyValueInfoCache::eraseBlock(BasicBlock *BB) {$/;"	f	class:LazyValueInfoCache
eraseFromParent	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::eraseFromParent() {$/;"	f	class:MachineBasicBlock
eraseFromParent	CodeGen/MachineInstr.cpp	/^void MachineInstr::eraseFromParent() {$/;"	f	class:MachineInstr
eraseFromParent	VMCore/BasicBlock.cpp	/^void BasicBlock::eraseFromParent() {$/;"	f	class:BasicBlock
eraseFromParent	VMCore/Function.cpp	/^void Function::eraseFromParent() {$/;"	f	class:Function
eraseFromParent	VMCore/Globals.cpp	/^void GlobalAlias::eraseFromParent() {$/;"	f	class:GlobalAlias
eraseFromParent	VMCore/Globals.cpp	/^void GlobalVariable::eraseFromParent() {$/;"	f	class:GlobalVariable
eraseFromParent	VMCore/Instruction.cpp	/^void Instruction::eraseFromParent() {$/;"	f	class:Instruction
eraseFromParent	VMCore/Metadata.cpp	/^void NamedMDNode::eraseFromParent() {$/;"	f	class:NamedMDNode
eraseInstrs	CodeGen/RegisterCoalescer.cpp	/^void JoinVals::eraseInstrs(SmallPtrSet<MachineInstr*, 8> &ErasedInstrs,$/;"	f	class:JoinVals
eraseNamedMetadata	VMCore/Module.cpp	/^void Module::eraseNamedMetadata(NamedMDNode *NMD) {$/;"	f	class:Module
eraseVirtReg	CodeGen/LiveRangeEdit.cpp	/^void LiveRangeEdit::eraseVirtReg(unsigned Reg) {$/;"	f	class:LiveRangeEdit
erase_imp	Support/SmallPtrSet.cpp	/^bool SmallPtrSetImpl::erase_imp(const void * Ptr) {$/;"	f	class:SmallPtrSetImpl
error	Linker/Linker.cpp	/^Linker::error(StringRef message) {$/;"	f	class:Linker
error	Support/CommandLine.cpp	/^bool Option::error(const Twine &Message, StringRef ArgName) {$/;"	f	class:Option
error	Support/regcomp.c	/^	int error;		\/* has an error been seen? *\/$/;"	m	struct:parse	file:
error	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::error(const std::string& msg) {$/;"	f	class:CppWriter
error_category	Support/system_error.cpp	/^error_category::error_category() {$/;"	f	class:llvm::error_category
error_handler	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    void*                  error_handler;$/;"	m	struct:___itt_global
errs	Support/raw_ostream.cpp	/^raw_ostream &llvm::errs() {$/;"	f	class:llvm
escape	Support/YAMLParser.cpp	/^std::string yaml::escape(StringRef Input) {$/;"	f	class:yaml
establishNestingLevels	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::establishNestingLevels(const Instruction *Src,$/;"	f	class:DependenceAnalysis
estimateRSStackSizeLimit	Target/ARM/ARMFrameLowering.cpp	/^static unsigned estimateRSStackSizeLimit(MachineFunction &MF,$/;"	f	file:
estimateStackSize	Target/ARM/ARMFrameLowering.cpp	/^static unsigned estimateStackSize(MachineFunction &MF) {$/;"	f	file:
evaluate	MC/MCDisassembler/EDOperand.cpp	/^int EDOperand::evaluate(uint64_t &result, EDRegisterBlock_t regBlock) {$/;"	f	class:EDOperand
evaluate	MC/MCDisassembler/EDOperand.cpp	/^int EDOperand::evaluate(uint64_t &result,$/;"	f	class:EDOperand
evaluateAtIteration	Analysis/ScalarEvolution.cpp	/^const SCEV *SCEVAddRecExpr::evaluateAtIteration(const SCEV *It,$/;"	f	class:SCEVAddRecExpr
evaluateBranch	MC/MCInstrAnalysis.cpp	/^uint64_t MCInstrAnalysis::evaluateBranch(const MCInst &Inst, uint64_t Addr,$/;"	f	class:MCInstrAnalysis
evaluateBranch	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^  uint64_t evaluateBranch(const MCInst &Inst, uint64_t Addr,$/;"	f	class:__anon282::ARMMCInstrAnalysis
evaluateFCmpRelation	VMCore/ConstantFold.cpp	/^static FCmpInst::Predicate evaluateFCmpRelation(Constant *V1, Constant *V2) {$/;"	f	file:
evaluateFixup	MC/MCAssembler.cpp	/^bool MCAssembler::evaluateFixup(const MCAsmLayout &Layout,$/;"	f	class:MCAssembler
evaluateICmpRelation	VMCore/ConstantFold.cpp	/^static ICmpInst::Predicate evaluateICmpRelation(Constant *V1, Constant *V2,$/;"	f	file:
even	Target/CellSPU/SPUNopFiller.cpp	/^                   even   = 2, $/;"	e	enum:__anon417::SPUNopFiller::__anon418	file:
evictInterference	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::evictInterference(LiveInterval &VirtReg, unsigned PhysReg,$/;"	f	class:RAGreedy
exactRDIVtest	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::exactRDIVtest(const SCEV *SrcCoeff,$/;"	f	class:DependenceAnalysis
exactSIVtest	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::exactSIVtest(const SCEV *SrcCoeff,$/;"	f	class:DependenceAnalysis
exclaim	AsmParser/LLToken.h	/^    exclaim,           \/\/ !$/;"	e	enum:llvm::lltok::Kind
executeBitCastInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeBitCastInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeCmpInst	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeCmpInst(unsigned predicate, GenericValue Src1, $/;"	f	file:
executeFAddInst	ExecutionEngine/Interpreter/Execution.cpp	/^static void executeFAddInst(GenericValue &Dest, GenericValue Src1,$/;"	f	file:
executeFCMP_OEQ	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_OEQ(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_OGE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_OGE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_OGT	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_OGT(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_OLE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_OLE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_OLT	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_OLT(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_ONE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_ONE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_ORD	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_ORD(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_UEQ	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_UEQ(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_UGE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_UGE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_UGT	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_UGT(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_ULE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_ULE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_ULT	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_ULT(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_UNE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_UNE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFCMP_UNO	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeFCMP_UNO(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeFDivInst	ExecutionEngine/Interpreter/Execution.cpp	/^static void executeFDivInst(GenericValue &Dest, GenericValue Src1, $/;"	f	file:
executeFMulInst	ExecutionEngine/Interpreter/Execution.cpp	/^static void executeFMulInst(GenericValue &Dest, GenericValue Src1,$/;"	f	file:
executeFPExtInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeFPExtInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeFPToSIInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeFPToSIInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeFPToUIInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeFPToUIInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeFPTruncInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeFPTruncInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeFRemInst	ExecutionEngine/Interpreter/Execution.cpp	/^static void executeFRemInst(GenericValue &Dest, GenericValue Src1, $/;"	f	file:
executeFSubInst	ExecutionEngine/Interpreter/Execution.cpp	/^static void executeFSubInst(GenericValue &Dest, GenericValue Src1,$/;"	f	file:
executeGEPOperation	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeGEPOperation(Value *Ptr, gep_type_iterator I,$/;"	f	class:Interpreter
executeICMP_EQ	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_EQ(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeICMP_NE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_NE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeICMP_SGE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_SGE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeICMP_SGT	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_SGT(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeICMP_SLE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_SLE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeICMP_SLT	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_SLT(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeICMP_UGE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_UGE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeICMP_UGT	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_UGT(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeICMP_ULE	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_ULE(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeICMP_ULT	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeICMP_ULT(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeIntToPtrInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeIntToPtrInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executePtrToIntInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executePtrToIntInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeSExtInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeSExtInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeSIToFPInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeSIToFPInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeSelectInst	ExecutionEngine/Interpreter/Execution.cpp	/^static GenericValue executeSelectInst(GenericValue Src1, GenericValue Src2,$/;"	f	file:
executeTruncInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeTruncInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeUIToFPInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeUIToFPInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executeZExtInst	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::executeZExtInst(Value *SrcVal, Type *DstTy,$/;"	f	class:Interpreter
executionMode	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^static iJIT_IsProfilingActiveFlags executionMode = iJIT_NOTHING_RUNNING;$/;"	v	file:
exists	Support/PathV2.cpp	/^bool exists(file_status status) {$/;"	f	namespace:llvm::sys::fs
exitCalled	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::exitCalled(GenericValue GV) {$/;"	f	class:Interpreter
exitReachable	Analysis/ProfileVerifierPass.cpp	/^  bool ProfileVerifierPassT<FType, BType>::exitReachable(const FType *F) {$/;"	f	class:__anon36::ProfileVerifierPassT
exitRegion	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::exitRegion() {$/;"	f	class:SchedulePostRATDList
exitRegion	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::exitRegion() {$/;"	f	class:ScheduleDAGInstrs
expand	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::expand(const SCEV *S) {$/;"	f	class:SCEVExpander
expandAddRecExprLiterally	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::expandAddRecExprLiterally(const SCEVAddRecExpr *S) {$/;"	f	class:SCEVExpander
expandAddToGEP	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::expandAddToGEP(const SCEV *const *op_begin,$/;"	f	class:SCEVExpander
expandCodeFor	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::expandCodeFor(const SCEV *SH, Type *Ty) {$/;"	f	class:SCEVExpander
expandCodeFor	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::expandCodeFor(const SCEV *SH, Type *Ty,$/;"	f	class:SCEVExpander
expandDivision	Transforms/Utils/IntegerDivision.cpp	/^bool llvm::expandDivision(BinaryOperator *Div) {$/;"	f	class:llvm
expandIEChain	Transforms/Vectorize/BBVectorize.cpp	/^  bool BBVectorize::expandIEChain(LLVMContext& Context, Instruction *I,$/;"	f	class:__anon604::BBVectorize
expandIVInc	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::expandIVInc(PHINode *PN, Value *StepV, const Loop *L,$/;"	f	class:SCEVExpander
expandInstruction	Target/Mips/AsmParser/MipsAsmParser.cpp	/^void MipsAsmParser::expandInstruction(MCInst &Inst, SMLoc IDLoc,$/;"	f	class:MipsAsmParser
expandLoadAddressImm	Target/Mips/AsmParser/MipsAsmParser.cpp	/^void MipsAsmParser::expandLoadAddressImm(MCInst &Inst, SMLoc IDLoc,$/;"	f	class:MipsAsmParser
expandLoadAddressReg	Target/Mips/AsmParser/MipsAsmParser.cpp	/^void MipsAsmParser::expandLoadAddressReg(MCInst &Inst, SMLoc IDLoc,$/;"	f	class:MipsAsmParser
expandLoadImm	Target/Mips/AsmParser/MipsAsmParser.cpp	/^void MipsAsmParser::expandLoadImm(MCInst &Inst, SMLoc IDLoc,$/;"	f	class:MipsAsmParser
expandMacro	MC/MCParser/AsmParser.cpp	/^bool AsmParser::expandMacro(raw_svector_ostream &OS, StringRef Body,$/;"	f	class:AsmParser
expandPostRAPseudo	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::expandPostRAPseudo(MachineBasicBlock::iterator MI) const{$/;"	f	class:ARMBaseInstrInfo
expandPostRAPseudo	Target/Mips/Mips16InstrInfo.cpp	/^bool Mips16InstrInfo::expandPostRAPseudo(MachineBasicBlock::iterator MI) const {$/;"	f	class:Mips16InstrInfo
expandPostRAPseudo	Target/Mips/MipsSEInstrInfo.cpp	/^bool MipsSEInstrInfo::expandPostRAPseudo(MachineBasicBlock::iterator MI) const {$/;"	f	class:MipsSEInstrInfo
expandPostRAPseudo	Target/X86/X86InstrInfo.cpp	/^bool X86InstrInfo::expandPostRAPseudo(MachineBasicBlock::iterator MI) const {$/;"	f	class:X86InstrInfo
expandRemainder	Transforms/Utils/IntegerDivision.cpp	/^bool llvm::expandRemainder(BinaryOperator *Rem) {$/;"	f	class:llvm
expandToLongBranch	Target/Mips/MipsLongBranch.cpp	/^void MipsLongBranch::expandToLongBranch(MBBInfo &I) {$/;"	f	class:MipsLongBranch
expandf64Toi32	Target/ARM/ARMISelLowering.cpp	/^static void expandf64Toi32(SDValue Op, SelectionDAG &DAG,$/;"	f	file:
expectToken	Support/YAMLParser.cpp	/^bool Document::expectToken(int TK) {$/;"	f	class:Document
explain	Support/regerror.c	/^	const char *explain;$/;"	m	struct:rerr	file:
exploreDirections	Analysis/DependenceAnalysis.cpp	/^unsigned DependenceAnalysis::exploreDirections(unsigned Level,$/;"	f	class:DependenceAnalysis
exponent	Support/APFloat.cpp	/^  int exponent;$/;"	m	struct:decimalInfo	file:
expressionNumbering	Transforms/Scalar/GVN.cpp	/^    DenseMap<Expression, uint32_t> expressionNumbering;$/;"	m	class:__anon536::ValueTable	file:
expungeSlotMap	CodeGen/StackColoring.cpp	/^void StackColoring::expungeSlotMap(DenseMap<int, int> &SlotRemap,$/;"	f	class:StackColoring
extend	CodeGen/LiveRangeCalc.cpp	/^void LiveRangeCalc::extend(LiveInterval *LI,$/;"	f	class:LiveRangeCalc
extendDef	CodeGen/LiveDebugVariables.cpp	/^void UserValue::extendDef(SlotIndex Idx, unsigned LocNo,$/;"	f	class:UserValue
extendInBlock	CodeGen/LiveInterval.cpp	/^VNInfo *LiveInterval::extendInBlock(SlotIndex StartIdx, SlotIndex Kill) {$/;"	f	class:LiveInterval
extendIntervalEndTo	CodeGen/LiveInterval.cpp	/^void LiveInterval::extendIntervalEndTo(Ranges::iterator I, SlotIndex NewEnd) {$/;"	f	class:LiveInterval
extendIntervalStartTo	CodeGen/LiveInterval.cpp	/^LiveInterval::extendIntervalStartTo(Ranges::iterator I, SlotIndex NewStart) {$/;"	f	class:LiveInterval
extendPHIKillRanges	CodeGen/SplitKit.cpp	/^void SplitEditor::extendPHIKillRanges() {$/;"	f	class:SplitEditor
extendToIndices	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::extendToIndices(LiveInterval *LI,$/;"	f	class:LiveIntervals
extendToUses	CodeGen/LiveRangeCalc.cpp	/^void LiveRangeCalc::extendToUses(LiveInterval *LI, unsigned Reg) {$/;"	f	class:LiveRangeCalc
extendToUses	CodeGen/LiveRangeCalc.h	/^  void extendToUses(LiveInterval *LI) {$/;"	f	class:llvm::LiveRangeCalc
extension	Support/PathV2.cpp	/^const StringRef extension(StringRef path) {$/;"	f	namespace:llvm::sys::path
externals_begin	Target/X86/X86COFFMachineModuleInfo.h	/^  externals_iterator externals_begin() const { return Externals.begin(); }$/;"	f	class:llvm::X86COFFMachineModuleInfo
externals_end	Target/X86/X86COFFMachineModuleInfo.h	/^  externals_iterator externals_end() const { return Externals.end(); }$/;"	f	class:llvm::X86COFFMachineModuleInfo
externals_iterator	Target/X86/X86COFFMachineModuleInfo.h	/^  typedef DenseSet<MCSymbol const *>::const_iterator externals_iterator;$/;"	t	class:llvm::X86COFFMachineModuleInfo
extra1	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    int                extra1;  \/*!< Reserved to the runtime *\/$/;"	m	struct:___itt_thread_info
extra2	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    void*              extra2;  \/*!< Reserved to the runtime *\/$/;"	m	struct:___itt_thread_info
extract	CodeGen/LiveIntervalUnion.cpp	/^void LiveIntervalUnion::extract(LiveInterval &VirtReg) {$/;"	f	class:LiveIntervalUnion
extract	DebugInfo/DWARFAbbreviationDeclaration.cpp	/^DWARFAbbreviationDeclaration::extract(DataExtractor data, uint32_t* offset_ptr){$/;"	f	class:DWARFAbbreviationDeclaration
extract	DebugInfo/DWARFAbbreviationDeclaration.cpp	/^DWARFAbbreviationDeclaration::extract(DataExtractor data, uint32_t* offset_ptr,$/;"	f	class:DWARFAbbreviationDeclaration
extract	DebugInfo/DWARFCompileUnit.cpp	/^DWARFCompileUnit::extract(uint32_t offset, DataExtractor debug_info_data,$/;"	f	class:DWARFCompileUnit
extract	DebugInfo/DWARFCompileUnit.cpp	/^bool DWARFCompileUnit::extract(DataExtractor debug_info, uint32_t *offset_ptr) {$/;"	f	class:DWARFCompileUnit
extract	DebugInfo/DWARFDebugAbbrev.cpp	/^bool DWARFAbbreviationDeclarationSet::extract(DataExtractor data,$/;"	f	class:DWARFAbbreviationDeclarationSet
extract	DebugInfo/DWARFDebugArangeSet.cpp	/^DWARFDebugArangeSet::extract(DataExtractor data, uint32_t *offset_ptr) {$/;"	f	class:DWARFDebugArangeSet
extract	DebugInfo/DWARFDebugAranges.cpp	/^bool DWARFDebugAranges::extract(DataExtractor debug_aranges_data) {$/;"	f	class:DWARFDebugAranges
extract	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::extract(const DWARFCompileUnit *cu,$/;"	f	class:DWARFDebugInfoEntryMinimal
extract	DebugInfo/DWARFDebugRangeList.cpp	/^bool DWARFDebugRangeList::extract(DataExtractor data, uint32_t *offset_ptr) {$/;"	f	class:DWARFDebugRangeList
extractCallocCall	Analysis/MemoryBuiltins.cpp	/^const CallInst *llvm::extractCallocCall(const Value *I,$/;"	f	class:llvm
extractCodeRegion	Transforms/Utils/CodeExtractor.cpp	/^Function *CodeExtractor::extractCodeRegion() {$/;"	f	class:CodeExtractor
extractDIEsIfNeeded	DebugInfo/DWARFCompileUnit.cpp	/^size_t DWARFCompileUnit::extractDIEsIfNeeded(bool cu_die_only) {$/;"	f	class:DWARFCompileUnit
extractFast	DebugInfo/DWARFDebugInfoEntry.cpp	/^bool DWARFDebugInfoEntryMinimal::extractFast(const DWARFCompileUnit *cu,$/;"	f	class:DWARFDebugInfoEntryMinimal
extractInteger	Transforms/Scalar/SROA.cpp	/^static Value *extractInteger(const DataLayout &DL, IRBuilder<> &IRB, Value *V,$/;"	f	file:
extractLexicalScopes	CodeGen/LexicalScopes.cpp	/^extractLexicalScopes(SmallVectorImpl<InsnRange> &MIRanges,$/;"	f	class:LexicalScopes
extractLoadMemRefs	CodeGen/MachineFunction.cpp	/^MachineFunction::extractLoadMemRefs(MachineInstr::mmo_iterator Begin,$/;"	f	class:MachineFunction
extractMallocCall	Analysis/MemoryBuiltins.cpp	/^const CallInst *llvm::extractMallocCall(const Value *I,$/;"	f	class:llvm
extractRangeList	DebugInfo/DWARFCompileUnit.cpp	/^bool DWARFCompileUnit::extractRangeList(uint32_t RangeListOffset,$/;"	f	class:DWARFCompileUnit
extractStoreMemRefs	CodeGen/MachineFunction.cpp	/^MachineFunction::extractStoreMemRefs(MachineInstr::mmo_iterator Begin,$/;"	f	class:MachineFunction
extractValue	DebugInfo/DWARFFormValue.cpp	/^DWARFFormValue::extractValue(DataExtractor data, uint32_t *offset_ptr,$/;"	f	class:DWARFFormValue
extrahelp	Support/CommandLine.cpp	/^extrahelp::extrahelp(const char *Help)$/;"	f	class:extrahelp
extrn	Target/X86/X86CompilationCallback_Win64.asm	/^extrn X86CompilationCallback2: PROC$/;"	l
f64AssignAAPCS	Target/ARM/ARMCallingConv.h	/^static bool f64AssignAAPCS(unsigned &ValNo, MVT &ValVT, MVT &LocVT,$/;"	f	namespace:llvm
f64AssignAPCS	Target/ARM/ARMCallingConv.h	/^static bool f64AssignAPCS(unsigned &ValNo, MVT &ValVT, MVT &LocVT,$/;"	f	namespace:llvm
f64RetAssign	Target/ARM/ARMCallingConv.h	/^static bool f64RetAssign(unsigned &ValNo, MVT &ValVT, MVT &LocVT,$/;"	f	namespace:llvm
fMap	VMCore/AsmWriter.cpp	/^  ValueMap fMap;$/;"	m	class:__anon612::SlotTracker	file:
fMode	Target/X86/Disassembler/X86Disassembler.h	/^  DisassemblerMode              fMode;$/;"	m	class:llvm::X86Disassembler::X86GenericDisassembler
fNext	VMCore/AsmWriter.cpp	/^  unsigned fNext;$/;"	m	class:__anon612::SlotTracker	file:
failed	Support/YAMLParser.cpp	/^  bool failed() {$/;"	f	class:llvm::yaml::Scanner
failed	Support/YAMLParser.cpp	/^bool Document::failed() const {$/;"	f	class:Document
failed	Support/YAMLParser.cpp	/^bool Node::failed() const {$/;"	f	class:Node
failed	Support/YAMLParser.cpp	/^bool Stream::failed() { return scanner->failed(); }$/;"	f	class:Stream
fdbgs	Support/FormattedStream.cpp	/^formatted_raw_ostream &llvm::fdbgs() {$/;"	f	class:llvm
fde_end	ExecutionEngine/JIT/JIT.cpp	/^  char *fde_end;$/;"	m	struct:__anon185::LibgccObject	file:
ferrs	Support/FormattedStream.cpp	/^formatted_raw_ostream &llvm::ferrs() {$/;"	f	class:llvm
fetchMoreTokens	Support/YAMLParser.cpp	/^bool Scanner::fetchMoreTokens() {$/;"	f	class:Scanner
ffiInvoke	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static bool ffiInvoke(RawFunc Fn, Function *F,$/;"	f	file:
ffiTypeFor	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static ffi_type *ffiTypeFor(Type *Ty) {$/;"	f	file:
ffiValueFor	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static void *ffiValueFor(Type *Ty, const GenericValue &AV,$/;"	f	file:
fileName	Target/NVPTX/NVPTXAsmPrinter.h	/^  std::string fileName() { return theFileName; }$/;"	f	class:llvm::LineReader
filename	Support/PathV2.cpp	/^const StringRef filename(StringRef path) {$/;"	f	namespace:llvm::sys::path
filenameMap	Target/NVPTX/NVPTXAsmPrinter.h	/^  std::map<std::string, unsigned> filenameMap;$/;"	m	class:llvm::NVPTXAsmPrinter
filename_pos	Support/PathV2.cpp	/^  size_t filename_pos(StringRef str) {$/;"	f	namespace:__anon251
fillHeader	Archive/ArchiveWriter.cpp	/^Archive::fillHeader(const ArchiveMember &mbr, ArchiveMemberHeader& hdr,$/;"	f	class:Archive
fillNewShuffleMask	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::fillNewShuffleMask(LLVMContext& Context, Instruction *J,$/;"	f	class:__anon604::BBVectorize
finalize	DebugInfo/DWARFDebugLine.cpp	/^void DWARFDebugLine::DumpingState::finalize() {$/;"	f	class:DWARFDebugLine::DumpingState
finalize	DebugInfo/DWARFDebugLine.cpp	/^void DWARFDebugLine::State::finalize() {$/;"	f	class:DWARFDebugLine::State
finalize	VMCore/DIBuilder.cpp	/^void DIBuilder::finalize() {$/;"	f	class:DIBuilder
finalizeAlloc	CodeGen/RegAllocPBQP.cpp	/^void RegAllocPBQP::finalizeAlloc() const {$/;"	f	class:RegAllocPBQP
finalizeBundle	CodeGen/MachineInstrBundle.cpp	/^llvm::finalizeBundle(MachineBasicBlock &MBB,$/;"	f	class:llvm
finalizeBundle	CodeGen/MachineInstrBundle.cpp	/^void llvm::finalizeBundle(MachineBasicBlock &MBB,$/;"	f	class:llvm
finalizeBundles	CodeGen/MachineInstrBundle.cpp	/^bool llvm::finalizeBundles(MachineFunction &MF) {$/;"	f	class:llvm
find	CodeGen/LiveInterval.cpp	/^LiveInterval::iterator LiveInterval::find(SlotIndex Pos) {$/;"	f	class:LiveInterval
find	CodeGen/LiveIntervalUnion.h	/^  SegmentIter find(SlotIndex x) { return Segments.find(x); }$/;"	f	class:llvm::LiveIntervalUnion
find	Support/StringRef.cpp	/^size_t StringRef::find(StringRef Str, size_t From) const {$/;"	f	class:StringRef
find	Transforms/Scalar/ObjCARC.cpp	/^    const_iterator find(const KeyT &Key) const {$/;"	f	class:__anon498::MapVector
find	VMCore/ConstantsContext.h	/^  typename MapTy::iterator find(LookupKey Lookup) {$/;"	f	class:llvm::ConstantAggrUniqueMap
findAbstractVariable	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DbgVariable *DwarfDebug::findAbstractVariable(DIVariable &DV,$/;"	f	class:DwarfDebug
findAddRecForLoop	Analysis/IVUsers.cpp	/^static const SCEVAddRecExpr *findAddRecForLoop(const SCEV *S, const Loop *L) {$/;"	f	file:
findAddress	DebugInfo/DWARFDebugArangeSet.cpp	/^uint32_t DWARFDebugArangeSet::findAddress(uint64_t address) const {$/;"	f	class:DWARFDebugArangeSet
findAddress	DebugInfo/DWARFDebugAranges.cpp	/^uint32_t DWARFDebugAranges::findAddress(uint64_t address) const {$/;"	f	class:DWARFDebugAranges
findAliasSetForPointer	Analysis/AliasSetTracker.cpp	/^AliasSet *AliasSetTracker::findAliasSetForPointer(const Value *Ptr,$/;"	f	class:AliasSetTracker
findAliasSetForUnknownInst	Analysis/AliasSetTracker.cpp	/^AliasSet *AliasSetTracker::findAliasSetForUnknownInst(Instruction *Inst) {$/;"	f	class:AliasSetTracker
findAllNVVMAnnotation	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::findAllNVVMAnnotation(const GlobalValue *gv, std::string prop,$/;"	f	class:llvm
findAnalysisPass	VMCore/PassManager.cpp	/^Pass *PMDataManager::findAnalysisPass(AnalysisID AID, bool SearchParent) {$/;"	f	class:PMDataManager
findAnalysisPass	VMCore/PassManager.cpp	/^Pass *PMTopLevelManager::findAnalysisPass(AnalysisID AID) {$/;"	f	class:PMTopLevelManager
findAnalysisUsage	VMCore/PassManager.cpp	/^AnalysisUsage *PMTopLevelManager::findAnalysisUsage(Pass *P) {$/;"	f	class:PMTopLevelManager
findAttributeIndex	DebugInfo/DWARFAbbreviationDeclaration.cpp	/^DWARFAbbreviationDeclaration::findAttributeIndex(uint16_t attr) const {$/;"	f	class:DWARFAbbreviationDeclaration
findAvailableWater	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::findAvailableWater(CPUser &U, unsigned UserOffset,$/;"	f	class:ARMConstantIslands
findBestLoopExit	CodeGen/MachineBlockPlacement.cpp	/^MachineBlockPlacement::findBestLoopExit(MachineFunction &F,$/;"	f	class:MachineBlockPlacement
findBestLoopTop	CodeGen/MachineBlockPlacement.cpp	/^MachineBlockPlacement::findBestLoopTop(MachineLoop &L,$/;"	f	class:MachineBlockPlacement
findBestTreeFor	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::findBestTreeFor($/;"	f	class:__anon604::BBVectorize
findBoundsALL	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::findBoundsALL(CoefficientInfo *A,$/;"	f	class:DependenceAnalysis
findBoundsEQ	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::findBoundsEQ(CoefficientInfo *A,$/;"	f	class:DependenceAnalysis
findBoundsGT	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::findBoundsGT(CoefficientInfo *A,$/;"	f	class:DependenceAnalysis
findBoundsLT	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::findBoundsLT(CoefficientInfo *A,$/;"	f	class:DependenceAnalysis
findCoefficient	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::findCoefficient(const SCEV *Expr,$/;"	f	class:DependenceAnalysis
findCommutedOpIndices	CodeGen/TargetInstrInfoImpl.cpp	/^bool TargetInstrInfoImpl::findCommutedOpIndices(MachineInstr *MI,$/;"	f	class:TargetInstrInfoImpl
findConstPoolEntry	Target/ARM/ARMConstantIslandPass.cpp	/^*ARMConstantIslands::findConstPoolEntry(unsigned CPI,$/;"	f	class:ARMConstantIslands
findCorrespondingPred	CodeGen/MachineSSAUpdater.cpp	/^MachineBasicBlock *findCorrespondingPred(const MachineInstr *MI,$/;"	f	file:
findCustomSafePoints	CodeGen/GCStrategy.cpp	/^bool GCStrategy::findCustomSafePoints(GCFunctionInfo& FI, MachineFunction &F) {$/;"	f	class:GCStrategy
findDbgDeclare	Analysis/DbgInfoPrinter.cpp	/^static const DbgDeclareInst *findDbgDeclare(const Value *V) {$/;"	f	file:
findDbgGlobalDeclare	Analysis/DbgInfoPrinter.cpp	/^static Value *findDbgGlobalDeclare(GlobalVariable *V) {$/;"	f	file:
findDbgSubprogramDeclare	Analysis/DbgInfoPrinter.cpp	/^static Value *findDbgSubprogramDeclare(Function *V) {$/;"	f	file:
findDeadCallerSavedReg	Target/X86/X86FrameLowering.cpp	/^static unsigned findDeadCallerSavedReg(MachineBasicBlock &MBB,$/;"	f	file:
findDebugLoc	CodeGen/LiveDebugVariables.cpp	/^DebugLoc UserValue::findDebugLoc() {$/;"	f	class:UserValue
findDebugLoc	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::findDebugLoc(instr_iterator MBBI) {$/;"	f	class:MachineBasicBlock
findDefIdx	CodeGen/TargetSchedule.cpp	/^static unsigned findDefIdx(const MachineInstr *MI, unsigned DefOperIdx) {$/;"	f	file:
findDelayInstr	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^findDelayInstr(MachineBasicBlock &MBB,MachineBasicBlock::iterator slot) {$/;"	f	file:
findDelayInstr	Target/Mips/MipsDelaySlotFiller.cpp	/^bool Filler::findDelayInstr(MachineBasicBlock &MBB,$/;"	f	class:Filler
findDelayInstr	Target/Sparc/DelaySlotFiller.cpp	/^Filler::findDelayInstr(MachineBasicBlock &MBB,$/;"	f	class:Filler
findExistingElement	VMCore/ConstantsContext.h	/^  typename MapTy::iterator findExistingElement(ConstantClass *CP) {$/;"	f	class:llvm::ConstantAggrUniqueMap
findFalseBlock	CodeGen/BranchFolding.cpp	/^static MachineBasicBlock *findFalseBlock(MachineBasicBlock *BB,$/;"	f	file:
findFalseBlock	CodeGen/IfConversion.cpp	/^static MachineBasicBlock *findFalseBlock(MachineBasicBlock *BB,$/;"	f	file:
findFastExitPath	CodeGen/ShrinkWrapping.cpp	/^void PEI::findFastExitPath() {$/;"	f	class:PEI
findFirstDef	CodeGen/TwoAddressInstructionPass.cpp	/^static MachineInstr *findFirstDef(unsigned Reg, MachineRegisterInfo *MRI) {$/;"	f	file:
findFirstPredOperandIdx	CodeGen/MachineInstr.cpp	/^int MachineInstr::findFirstPredOperandIdx() const {$/;"	f	class:MachineInstr
findGCD	Analysis/DependenceAnalysis.cpp	/^bool findGCD(unsigned Bits, APInt AM, APInt BM, APInt Delta,$/;"	f	file:
findGlueUse	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^static SDNode *findGlueUse(SDNode *N) {$/;"	f	file:
findGluedUser	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^static SDNode *findGluedUser(SDNode *N) {$/;"	f	file:
findHBRPosition	Target/CellSPU/SPUInstrInfo.cpp	/^static MachineBasicBlock::iterator findHBRPosition(MachineBasicBlock &MBB)$/;"	f	file:
findHoistingInsertPosAndDeps	CodeGen/BranchFolding.cpp	/^MachineBasicBlock::iterator findHoistingInsertPosAndDeps(MachineBasicBlock *MBB,$/;"	f	file:
findIVOperand	Transforms/Scalar/LoopStrengthReduce.cpp	/^findIVOperand(User::op_iterator OI, User::op_iterator OE,$/;"	f	file:
findImplPass	VMCore/PassManager.cpp	/^Pass *AnalysisResolver::findImplPass(Pass *P, AnalysisID AnalysisPI,$/;"	f	class:AnalysisResolver
findInRangeCPEntry	Target/ARM/ARMConstantIslandPass.cpp	/^int ARMConstantIslands::findInRangeCPEntry(CPUser& U, unsigned UserOffset)$/;"	f	class:ARMConstantIslands
findInlineAsmFlagIdx	CodeGen/MachineInstr.cpp	/^int MachineInstr::findInlineAsmFlagIdx(unsigned OpIdx,$/;"	f	class:MachineInstr
findInputsOutputs	Transforms/Utils/CodeExtractor.cpp	/^void CodeExtractor::findInputsOutputs(ValueSet &Inputs,$/;"	f	class:CodeExtractor
findInsertLocation	CodeGen/LiveDebugVariables.cpp	/^findInsertLocation(MachineBasicBlock *MBB, SlotIndex Idx,$/;"	f	file:
findInsertionPoint	CodeGen/EarlyIfConversion.cpp	/^bool SSAIfConv::findInsertionPoint() {$/;"	f	class:SSAIfConv
findKill	CodeGen/LiveVariables.cpp	/^LiveVariables::VarInfo::findKill(const MachineBasicBlock *MBB) const {$/;"	f	class:LiveVariables::VarInfo
findLastUse	CodeGen/StrongPHIElimination.cpp	/^static MachineOperand *findLastUse(MachineBasicBlock *MBB, unsigned Reg) {$/;"	f	file:
findLastUseBefore	CodeGen/LiveIntervalAnalysis.cpp	/^  SlotIndex findLastUseBefore(unsigned Reg) {$/;"	f	class:LiveIntervals::HMEditor	file:
findLeader	Support/IntEqClasses.cpp	/^unsigned IntEqClasses::findLeader(unsigned a) const {$/;"	f	class:IntEqClasses
findLeader	Transforms/Scalar/GVN.cpp	/^Value *GVN::findLeader(const BasicBlock *BB, uint32_t num) {$/;"	f	class:GVN
findLexicalScope	CodeGen/LexicalScopes.cpp	/^LexicalScope *LexicalScopes::findLexicalScope(DebugLoc DL) {$/;"	f	class:LexicalScopes
findLiveVirtReg	CodeGen/RegAllocFast.cpp	/^    LiveRegMap::const_iterator findLiveVirtReg(unsigned VirtReg) const {$/;"	f	class:__anon140::RAFast	file:
findLiveVirtReg	CodeGen/RegAllocFast.cpp	/^    LiveRegMap::iterator findLiveVirtReg(unsigned VirtReg) {$/;"	f	class:__anon140::RAFast	file:
findMUL_LOHI	Target/ARM/ARMISelLowering.cpp	/^static SDValue findMUL_LOHI(SDValue V) {$/;"	f	file:
findModuleDefiningSymbol	Archive/ArchiveReader.cpp	/^Archive::findModuleDefiningSymbol(const std::string& symbol, $/;"	f	class:Archive
findModulesDefiningSymbols	Archive/ArchiveReader.cpp	/^Archive::findModulesDefiningSymbols(std::set<std::string>& symbols,$/;"	f	class:Archive
findNonImmUse	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^static bool findNonImmUse(SDNode *Use, SDNode* Def, SDNode *ImmedUse,$/;"	f	file:
findOneNVVMAnnotation	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::findOneNVVMAnnotation(const GlobalValue *gv, std::string prop,$/;"	f	class:llvm
findOnlyInterestingUse	CodeGen/TwoAddressInstructionPass.cpp	/^MachineInstr *findOnlyInterestingUse(unsigned Reg, MachineBasicBlock *MBB,$/;"	f	file:
findOption	Support/CommandLine.cpp	/^unsigned generic_parser_base::findOption(const char *Name) {$/;"	f	class:generic_parser_base
findOrEmitSection	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^unsigned RuntimeDyldImpl::findOrEmitSection(ObjectImage &Obj,$/;"	f	class:llvm::RuntimeDyldImpl
findOrInsertDependencePair	Analysis/LoopDependenceAnalysis.cpp	/^bool LoopDependenceAnalysis::findOrInsertDependencePair(Value *A,$/;"	f	class:LoopDependenceAnalysis
findPHICopyInsertPoint	CodeGen/PHIEliminationUtils.cpp	/^llvm::findPHICopyInsertPoint(MachineBasicBlock* MBB, MachineBasicBlock* SuccMBB,$/;"	f	class:llvm
findPartitionForPHIOrSelectOperand	Transforms/Scalar/SROA.cpp	/^  iterator findPartitionForPHIOrSelectOperand(Use *U) {$/;"	f	class:__anon557::AllocaPartitioning
findPartitionUseForPHIOrSelectOperand	Transforms/Scalar/SROA.cpp	/^  use_iterator findPartitionUseForPHIOrSelectOperand(Use *U) {$/;"	f	class:__anon557::AllocaPartitioning
findReachingDefs	CodeGen/LiveRangeCalc.cpp	/^VNInfo *LiveRangeCalc::findReachingDefs(LiveInterval *LI,$/;"	f	class:LiveRangeCalc
findReg	CodeGen/RegisterPressure.cpp	/^findReg(unsigned Reg, bool isVReg, SmallVectorImpl<unsigned> &Regs,$/;"	f	file:
findRegAlias	CodeGen/RegisterPressure.cpp	/^findRegAlias(unsigned Reg, SmallVectorImpl<unsigned> &Regs,$/;"	f	file:
findRegionsWithEntry	Analysis/RegionInfo.cpp	/^void RegionInfo::findRegionsWithEntry(BasicBlock *entry, BBtoBBMap *ShortCut) {$/;"	f	class:RegionInfo
findRegisterDefOperandIdx	CodeGen/MachineInstr.cpp	/^MachineInstr::findRegisterDefOperandIdx(unsigned Reg, bool isDead, bool Overlap,$/;"	f	class:MachineInstr
findRegisterUseOperandIdx	CodeGen/MachineInstr.cpp	/^int MachineInstr::findRegisterUseOperandIdx(unsigned Reg, bool isKill,$/;"	f	class:MachineInstr
findRepresentativeClass	CodeGen/SelectionDAG/TargetLowering.cpp	/^TargetLowering::findRepresentativeClass(EVT VT) const {$/;"	f	class:TargetLowering
findRepresentativeClass	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::findRepresentativeClass(EVT VT) const{$/;"	f	class:ARMTargetLowering
findRepresentativeClass	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::findRepresentativeClass(EVT VT) const{$/;"	f	class:X86TargetLowering
findScratchRegister	Target/CellSPU/SPURegisterInfo.cpp	/^SPURegisterInfo::findScratchRegister(MachineBasicBlock::iterator II,$/;"	f	class:SPURegisterInfo
findScratchRegister	Target/PowerPC/PPCRegisterInfo.cpp	/^unsigned findScratchRegister(MachineBasicBlock::iterator II, RegScavenger *RS,$/;"	f	file:
findShallowDominator	CodeGen/SplitKit.cpp	/^SplitEditor::findShallowDominator(MachineBasicBlock *MBB,$/;"	f	class:SplitEditor
findSuitableFreeRegister	CodeGen/CriticalAntiDepBreaker.cpp	/^CriticalAntiDepBreaker::findSuitableFreeRegister(RegRefIter RegRefBegin,$/;"	f	class:CriticalAntiDepBreaker
findSurvivorReg	CodeGen/RegisterScavenging.cpp	/^unsigned RegScavenger::findSurvivorReg(MachineBasicBlock::iterator StartMI,$/;"	f	class:RegScavenger
findTiedOperandIdx	CodeGen/MachineInstr.cpp	/^unsigned MachineInstr::findTiedOperandIdx(unsigned OpIdx) const {$/;"	f	class:MachineInstr
findUseBetween	CodeGen/RegisterPressure.cpp	/^static bool findUseBetween(unsigned Reg,$/;"	f	file:
findUseIdx	CodeGen/TargetSchedule.cpp	/^static unsigned findUseIdx(const MachineInstr *MI, unsigned UseOperIdx) {$/;"	f	file:
findUsedValues	Transforms/IPO/StripSymbols.cpp	/^static void findUsedValues(GlobalVariable *LLVMUsed,$/;"	f	file:
findVRegIntervalsToAlloc	CodeGen/RegAllocPBQP.cpp	/^void RegAllocPBQP::findVRegIntervalsToAlloc() {$/;"	f	class:RegAllocPBQP
findValue	Analysis/Lint.cpp	/^Value *Lint::findValue(Value *V, bool OffsetOk) const {$/;"	f	class:Lint
findValueImpl	Analysis/Lint.cpp	/^Value *Lint::findValueImpl(Value *V, bool OffsetOk,$/;"	f	class:Lint
find_first_component	Support/PathV2.cpp	/^  StringRef find_first_component(StringRef path) {$/;"	f	namespace:__anon251
find_first_not_of	Support/StringRef.cpp	/^StringRef::size_type StringRef::find_first_not_of(StringRef Chars,$/;"	f	class:StringRef
find_first_not_of	Support/StringRef.cpp	/^StringRef::size_type StringRef::find_first_not_of(char C, size_t From) const {$/;"	f	class:StringRef
find_first_of	Support/StringRef.cpp	/^StringRef::size_type StringRef::find_first_of(StringRef Chars,$/;"	f	class:StringRef
find_last_not_of	Support/StringRef.cpp	/^StringRef::size_type StringRef::find_last_not_of(StringRef Chars,$/;"	f	class:StringRef
find_last_not_of	Support/StringRef.cpp	/^StringRef::size_type StringRef::find_last_not_of(char C, size_t From) const {$/;"	f	class:StringRef
find_last_of	Support/StringRef.cpp	/^StringRef::size_type StringRef::find_last_of(StringRef Chars,$/;"	f	class:StringRef
findmust	Support/regcomp.c	/^findmust(struct parse *p, struct re_guts *g)$/;"	f	file:
finish	CodeGen/SpillPlacement.cpp	/^SpillPlacement::finish() {$/;"	f	class:SpillPlacement
finish	CodeGen/SplitKit.cpp	/^void SplitEditor::finish(SmallVectorImpl<unsigned> *LRMap) {$/;"	f	class:SplitEditor
finishAssembly	CodeGen/AsmPrinter/OcamlGCPrinter.cpp	/^void OcamlGCMetadataPrinter::finishAssembly(AsmPrinter &AP) {$/;"	f	class:OcamlGCMetadataPrinter
finishAssembly	CodeGen/GCMetadataPrinter.cpp	/^void GCMetadataPrinter::finishAssembly(AsmPrinter &AP) {$/;"	f	class:GCMetadataPrinter
finishBlock	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::finishBlock() {$/;"	f	class:SchedulePostRATDList
finishBlock	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::finishBlock() {$/;"	f	class:ScheduleDAGInstrs
finishBlockStack	Target/X86/X86FloatingPoint.cpp	/^void FPS::finishBlockStack() {$/;"	f	class:FPS
finishFunction	ExecutionEngine/JIT/JITEmitter.cpp	/^bool JITEmitter::finishFunction(MachineFunction &F) {$/;"	f	class:JITEmitter
finishGVStub	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::finishGVStub() {$/;"	f	class:JITEmitter
finishLayout	MC/MCAssembler.cpp	/^void MCAssembler::finishLayout(MCAsmLayout &Layout) {$/;"	f	class:MCAssembler
finishPostorder	CodeGen/MachineTraceMetrics.cpp	/^  void finishPostorder(const MachineBasicBlock*) {}$/;"	f	class:llvm::po_iterator_storage
first	CodeGen/InterferenceCache.h	/^    SlotIndex first() {$/;"	f	class:llvm::InterferenceCache::Cursor
firstCommonClass	Target/TargetRegisterInfo.cpp	/^const TargetRegisterClass *firstCommonClass(const uint32_t *A,$/;"	f	file:
firstSigDigit	Support/APFloat.cpp	/^  const char *firstSigDigit;$/;"	m	struct:decimalInfo	file:
first_entry	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    struct jit_code_entry *first_entry;$/;"	m	struct:jit_descriptor	typeref:struct:jit_descriptor::jit_code_entry	file:
firstch	Support/regcomp.c	/^firstch(struct parse *p, cset *cs)$/;"	f	file:
firststate	Support/regex2.h	/^	sopno firststate;	\/* the initial OEND (normally 0) *\/$/;"	m	struct:re_guts
fixBitInit	TableGen/Record.cpp	/^static Init *fixBitInit(const RecordVal *RV, Init *Before, Init *After) {$/;"	f	file:
fixSymbolsInTLSFixups	MC/MCELFStreamer.cpp	/^void  MCELFStreamer::fixSymbolsInTLSFixups(const MCExpr *expr) {$/;"	f	class:MCELFStreamer
fixupConditionalBr	Target/ARM/ARMConstantIslandPass.cpp	/^ARMConstantIslands::fixupConditionalBr(ImmBranch &Br) {$/;"	f	class:ARMConstantIslands
fixupImmediateBr	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::fixupImmediateBr(ImmBranch &Br) {$/;"	f	class:ARMConstantIslands
fixupLineNumbers	Transforms/Utils/InlineFunction.cpp	/^static void fixupLineNumbers(Function *Fn, Function::iterator FI,$/;"	f	file:
fixupLoopInstrs	Target/Hexagon/HexagonHardwareLoops.cpp	/^bool HexagonFixupHwLoops::fixupLoopInstrs(MachineFunction &MF) {$/;"	f	class:HexagonFixupHwLoops
fixupNeedsRelaxation	MC/MCAssembler.cpp	/^bool MCAssembler::fixupNeedsRelaxation(const MCFixup &Fixup,$/;"	f	class:MCAssembler
fixupNeedsRelaxation	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^bool ARMAsmBackend::fixupNeedsRelaxation(const MCFixup &Fixup,$/;"	f	class:ARMAsmBackend
fixupNeedsRelaxation	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^bool MBlazeAsmBackend::fixupNeedsRelaxation(const MCFixup &Fixup,$/;"	f	class:__anon455::MBlazeAsmBackend
fixupNeedsRelaxation	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  bool fixupNeedsRelaxation(const MCFixup &Fixup,$/;"	f	class:__anon429::MipsAsmBackend
fixupNeedsRelaxation	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  bool fixupNeedsRelaxation(const MCFixup &Fixup,$/;"	f	class:__anon320::PPCAsmBackend
fixupNeedsRelaxation	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^bool X86AsmBackend::fixupNeedsRelaxation(const MCFixup &Fixup,$/;"	f	class:X86AsmBackend
fixupObjcLikeName	VMCore/DebugInfo.cpp	/^static void fixupObjcLikeName(StringRef Str, SmallVectorImpl<char> &Out) {$/;"	f	file:
fixupReg	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int fixupReg(struct InternalInstruction *insn, $/;"	f	file:
fixupUnconditionalBr	Target/ARM/ARMConstantIslandPass.cpp	/^ARMConstantIslands::fixupUnconditionalBr(ImmBranch &Br) {$/;"	f	class:ARMConstantIslands
fixup_Mips_16	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_16 = FirstTargetFixupKind,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_26	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_26,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_32	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_32,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_64	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_64,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_Branch_PCRel	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_Branch_PCRel,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_CALL16	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_CALL16,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_DTPREL_HI	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_DTPREL_HI,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_DTPREL_LO	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_DTPREL_LO,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GOTTPREL	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GOTTPREL,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GOT_DISP	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GOT_DISP,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GOT_Global	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GOT_Global,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GOT_Local	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GOT_Local,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GOT_OFST	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GOT_OFST,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GOT_PAGE	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GOT_PAGE,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GPOFF_HI	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GPOFF_HI,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GPOFF_LO	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GPOFF_LO,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GPREL16	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GPREL16,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_GPREL32	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_GPREL32,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_HI16	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_HI16,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_HIGHER	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_HIGHER,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_HIGHEST	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_HIGHEST,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_LITERAL	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_LITERAL,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_LO16	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_LO16,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_PC16	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_PC16,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_REL32	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_REL32,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_SHIFT5	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_SHIFT5,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_SHIFT6	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_SHIFT6,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_TLSGD	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_TLSGD,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_TLSLDM	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_TLSLDM,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_TPREL_HI	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_TPREL_HI,$/;"	e	enum:llvm::Mips::Fixups
fixup_Mips_TPREL_LO	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^    fixup_Mips_TPREL_LO,$/;"	e	enum:llvm::Mips::Fixups
fixup_arm_adr_pcrel_12	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_adr_pcrel_12,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_blx	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_blx,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_condbl	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_condbl,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_condbranch	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_condbranch,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_ldst_pcrel_12	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_ldst_pcrel_12 = FirstTargetFixupKind,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_movt_hi16	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_movt_hi16, \/\/ :upper16:$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_movt_hi16_pcrel	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_movt_hi16_pcrel, \/\/ :upper16:$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_movw_lo16	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_movw_lo16, \/\/ :lower16:$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_movw_lo16_pcrel	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_movw_lo16_pcrel, \/\/ :lower16:$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_pcrel_10	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_pcrel_10,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_pcrel_10_unscaled	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_pcrel_10_unscaled,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_thumb_bcc	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_thumb_bcc,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_thumb_bl	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_thumb_bl,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_thumb_blx	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_thumb_blx,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_thumb_br	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_thumb_br,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_thumb_cb	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_thumb_cb,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_thumb_cp	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_thumb_cp,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_uncondbl	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_uncondbl,$/;"	e	enum:llvm::ARM::Fixups
fixup_arm_uncondbranch	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_arm_uncondbranch,$/;"	e	enum:llvm::ARM::Fixups
fixup_ppc_br24	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^  fixup_ppc_br24 = FirstTargetFixupKind,$/;"	e	enum:llvm::PPC::Fixups
fixup_ppc_brcond14	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^  fixup_ppc_brcond14,$/;"	e	enum:llvm::PPC::Fixups
fixup_ppc_ha16	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^  fixup_ppc_ha16,$/;"	e	enum:llvm::PPC::Fixups
fixup_ppc_lo14	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^  fixup_ppc_lo14,$/;"	e	enum:llvm::PPC::Fixups
fixup_ppc_lo16	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^  fixup_ppc_lo16,$/;"	e	enum:llvm::PPC::Fixups
fixup_t2_adr_pcrel_12	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_t2_adr_pcrel_12,$/;"	e	enum:llvm::ARM::Fixups
fixup_t2_condbranch	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_t2_condbranch,$/;"	e	enum:llvm::ARM::Fixups
fixup_t2_ldst_pcrel_12	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_t2_ldst_pcrel_12,$/;"	e	enum:llvm::ARM::Fixups
fixup_t2_movt_hi16	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_t2_movt_hi16, \/\/ :upper16:$/;"	e	enum:llvm::ARM::Fixups
fixup_t2_movt_hi16_pcrel	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_t2_movt_hi16_pcrel, \/\/ :upper16:$/;"	e	enum:llvm::ARM::Fixups
fixup_t2_movw_lo16	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_t2_movw_lo16, \/\/ :lower16:$/;"	e	enum:llvm::ARM::Fixups
fixup_t2_movw_lo16_pcrel	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_t2_movw_lo16_pcrel, \/\/ :lower16:$/;"	e	enum:llvm::ARM::Fixups
fixup_t2_pcrel_10	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_t2_pcrel_10,$/;"	e	enum:llvm::ARM::Fixups
fixup_t2_uncondbranch	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_t2_uncondbranch,$/;"	e	enum:llvm::ARM::Fixups
fixup_thumb_adr_pcrel_10	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^  fixup_thumb_adr_pcrel_10,$/;"	e	enum:llvm::ARM::Fixups
flip	CodeGen/RegisterCoalescer.cpp	/^bool CoalescerPair::flip() {$/;"	f	class:CoalescerPair
flipBit	Support/APInt.cpp	/^void APInt::flipBit(unsigned bitPosition) {$/;"	f	class:APInt
floorOfQuotient	Analysis/DependenceAnalysis.cpp	/^APInt floorOfQuotient(APInt A, APInt B) {$/;"	f	file:
fltSemantics	Support/APFloat.cpp	/^  struct fltSemantics {$/;"	s	namespace:llvm	file:
flushBufferWithBanner	Support/circular_raw_ostream.cpp	/^void circular_raw_ostream::flushBufferWithBanner() {$/;"	f	class:circular_raw_ostream
flushLocalValueMap	CodeGen/SelectionDAG/FastISel.cpp	/^void FastISel::flushLocalValueMap() {$/;"	f	class:FastISel
flush_nonempty	Support/raw_ostream.cpp	/^void raw_ostream::flush_nonempty() {$/;"	f	class:raw_ostream
fmag	Archive/ArchiveInternals.h	/^      char fmag[2];   \/\/\/< Always contains ARFILE_MAGIC_TERMINATOR$/;"	m	class:llvm::ArchiveMemberHeader
fold	Transforms/Utils/BuildLibCalls.cpp	/^bool SimplifyFortifiedLibCalls::fold(CallInst *CI, const DataLayout *TD,$/;"	f	class:SimplifyFortifiedLibCalls
foldAsLoad	CodeGen/LiveRangeEdit.cpp	/^bool LiveRangeEdit::foldAsLoad(LiveInterval *LI,$/;"	f	class:LiveRangeEdit
foldConstantCastPair	VMCore/ConstantFold.cpp	/^foldConstantCastPair($/;"	f	file:
foldIVUser	Transforms/Utils/SimplifyIndVar.cpp	/^Value *SimplifyIndvar::foldIVUser(Instruction *UseInst, Instruction *IVOperand) {$/;"	f	class:SimplifyIndvar
foldImmediate	CodeGen/PeepholeOptimizer.cpp	/^bool PeepholeOptimizer::foldImmediate(MachineInstr *MI, MachineBasicBlock *MBB,$/;"	f	class:PeepholeOptimizer
foldLogOpOfMaskedICmps	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static Value* foldLogOpOfMaskedICmps(ICmpInst *LHS, ICmpInst *RHS,$/;"	f	file:
foldLogOpOfMaskedICmpsHelper	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static unsigned foldLogOpOfMaskedICmpsHelper(Value*& A, $/;"	f	file:
foldMemoryOperand	CodeGen/InlineSpiller.cpp	/^foldMemoryOperand(ArrayRef<std::pair<MachineInstr*, unsigned> > Ops,$/;"	f	class:InlineSpiller
foldMemoryOperand	CodeGen/TargetInstrInfoImpl.cpp	/^TargetInstrInfo::foldMemoryOperand(MachineBasicBlock::iterator MI,$/;"	f	class:TargetInstrInfo
foldMemoryOperandImpl	Target/Hexagon/HexagonInstrInfo.cpp	/^MachineInstr *HexagonInstrInfo::foldMemoryOperandImpl(MachineFunction &MF,$/;"	f	class:HexagonInstrInfo
foldMemoryOperandImpl	Target/Hexagon/HexagonInstrInfo.h	/^  virtual MachineInstr* foldMemoryOperandImpl(MachineFunction &MF,$/;"	f	class:llvm::HexagonInstrInfo
foldMemoryOperandImpl	Target/X86/X86InstrInfo.cpp	/^MachineInstr* X86InstrInfo::foldMemoryOperandImpl(MachineFunction &MF,$/;"	f	class:X86InstrInfo
foldMemoryOperandImpl	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::foldMemoryOperandImpl(MachineFunction &MF,$/;"	f	class:X86InstrInfo
foldSelectICmpAnd	Transforms/InstCombine/InstCombineSelect.cpp	/^static Value *foldSelectICmpAnd(const SelectInst &SI, ConstantInt *TrueVal,$/;"	f	file:
foldSelectInst	Transforms/Scalar/SROA.cpp	/^  Value *foldSelectInst(SelectInst &SI) {$/;"	f	class:AllocaPartitioning::BuilderBase
follow	Analysis/ScalarEvolution.cpp	/^  bool follow(const SCEV *S) {$/;"	f	struct:__anon32::SCEVSearch
follow	Analysis/ScalarEvolutionExpander.cpp	/^  bool follow(const SCEV *S) {$/;"	f	struct:__anon23::SCEVFindUnsafe
follow	CodeGen/ScheduleDAGInstrs.cpp	/^  void follow(const SUnit *SU) {$/;"	f	class:__anon110::SchedDAGReverseDFS
force	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::force(int rx, unsigned domain) {$/;"	f	class:ExeDepsFix
forceRecompute	CodeGen/SplitKit.cpp	/^void SplitEditor::forceRecompute(unsigned RegIdx, const VNInfo *ParentVNI) {$/;"	f	class:SplitEditor
forceRenaming	Linker/LinkModules.cpp	/^static void forceRenaming(GlobalValue *GV, StringRef Name) {$/;"	f	file:
forceUnitLatencies	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^  bool forceUnitLatencies() const { return true; }$/;"	f	class:__anon86::ScheduleDAGFast	file:
forceUnitLatencies	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool forceUnitLatencies() const {$/;"	f	class:__anon76::ScheduleDAGRRList	file:
forceUnitLatencies	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^    virtual bool forceUnitLatencies() const { return false; }$/;"	f	class:llvm::ScheduleDAGSDNodes
forcedconstant	Transforms/Scalar/SCCP.cpp	/^    forcedconstant,$/;"	e	enum:__anon530::LatticeVal::LatticeValueTy	file:
forgetLoop	Analysis/ScalarEvolution.cpp	/^void ScalarEvolution::forgetLoop(const Loop *L) {$/;"	f	class:ScalarEvolution
forgetLoop	Transforms/Scalar/LoopUnswitch.cpp	/^void LUAnalysisCache::forgetLoop(const Loop* L) {$/;"	f	class:LUAnalysisCache
forgetMemoizedResults	Analysis/ScalarEvolution.cpp	/^void ScalarEvolution::forgetMemoizedResults(const SCEV *S) {$/;"	f	class:ScalarEvolution
forgetValue	Analysis/ScalarEvolution.cpp	/^void ScalarEvolution::forgetValue(Value *V) {$/;"	f	class:ScalarEvolution
form	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    uint16_t form; \/\/ DWARF DW_FORM_ defines$/;"	m	struct:llvm::DwarfAccelTable::Atom
form_sizes_addr4	DebugInfo/DWARFFormValue.cpp	/^static const uint8_t form_sizes_addr4[] = {$/;"	v	file:
form_sizes_addr8	DebugInfo/DWARFFormValue.cpp	/^static const uint8_t form_sizes_addr8[] = {$/;"	v	file:
forward	CodeGen/RegisterScavenging.cpp	/^void RegScavenger::forward() {$/;"	f	class:RegScavenger
forwardITPosition	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  void forwardITPosition() {$/;"	f	class:__anon259::ARMAsmParser	file:
forwardResume	Transforms/Utils/InlineFunction.cpp	/^void InvokeInliningInfo::forwardResume(ResumeInst *RI) {$/;"	f	class:InvokeInliningInfo
foundErrors	CodeGen/MachineVerifier.cpp	/^    unsigned foundErrors;$/;"	m	struct:__anon139::MachineVerifier	file:
fouts	Support/FormattedStream.cpp	/^formatted_raw_ostream &llvm::fouts() {$/;"	f	class:llvm
fragmentNeedsRelaxation	MC/MCAssembler.cpp	/^bool MCAssembler::fragmentNeedsRelaxation(const MCInstFragment *IF,$/;"	f	class:MCAssembler
frame	ExecutionEngine/JIT/JIT.cpp	/^  void *frame;$/;"	m	struct:__anon185::LibgccObject	file:
freeConstants	VMCore/ConstantsContext.h	/^  void freeConstants() {$/;"	f	class:llvm::ConstantAggrUniqueMap
freeConstants	VMCore/ConstantsContext.h	/^  void freeConstants() {$/;"	f	class:llvm::ConstantUniqueMap
freeMachineCodeForFunction	ExecutionEngine/Interpreter/Interpreter.h	/^  void freeMachineCodeForFunction(Function *F) { }$/;"	f	class:llvm::Interpreter
freeMachineCodeForFunction	ExecutionEngine/JIT/JITEmitter.cpp	/^void JIT::freeMachineCodeForFunction(Function *F) {$/;"	f	class:JIT
freeMachineCodeForFunction	ExecutionEngine/MCJIT/MCJIT.cpp	/^void MCJIT::freeMachineCodeForFunction(Function *F) {$/;"	f	class:MCJIT
freePass	VMCore/PassManager.cpp	/^void PMDataManager::freePass(Pass *P, StringRef Msg,$/;"	f	class:PMDataManager
freeSignificand	Support/APFloat.cpp	/^APFloat::freeSignificand()$/;"	f	class:APFloat
freeStackSlotAfter	Target/X86/X86FloatingPoint.cpp	/^void FPS::freeStackSlotAfter(MachineBasicBlock::iterator &I, unsigned FPRegNo) {$/;"	f	class:FPS
freeStackSlotBefore	Target/X86/X86FloatingPoint.cpp	/^FPS::freeStackSlotBefore(MachineBasicBlock::iterator I, unsigned FPRegNo) {$/;"	f	class:FPS
freeset	Support/regcomp.c	/^freeset(struct parse *p, cset *cs)$/;"	f	file:
freezeReservedRegs	CodeGen/MachineRegisterInfo.cpp	/^void MachineRegisterInfo::freezeReservedRegs(const MachineFunction &MF) {$/;"	f	class:MachineRegisterInfo
freezeset	Support/regcomp.c	/^freezeset(struct parse *p, cset *cs)$/;"	f	file:
from	Target/X86/X86FloatingPoint.cpp	/^    uint16_t from;$/;"	m	struct:__anon388::TableEntry	file:
fromString	Support/APInt.cpp	/^void APInt::fromString(unsigned numbits, StringRef str, uint8_t radix) {$/;"	f	class:APInt
from_array	ExecutionEngine/JIT/JIT.cpp	/^      unsigned long from_array : 1;$/;"	m	struct:__anon185::LibgccObject::__anon186::__anon187	file:
fs	Support/PathV2.cpp	/^namespace fs {$/;"	n	namespace:llvm::sys	file:
fstr	Target/NVPTX/NVPTXAsmPrinter.h	/^  std::ifstream fstr;$/;"	m	class:llvm::LineReader
ftEntryTypeBuilder	Transforms/Instrumentation/PathProfiling.cpp	/^  ftEntryTypeBuilder;$/;"	t	namespace:llvm	file:
ftostr	Target/CppBackend/CPPBackend.cpp	/^static inline std::string ftostr(const APFloat& V) {$/;"	f	file:
func	Support/Threading.cpp	/^  void (*func)(void*);$/;"	m	struct:ThreadInfo	file:
func_ptr	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    void**         func_ptr;$/;"	m	struct:___itt_api_info
func_ptr	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    void**         func_ptr;$/;"	m	struct:___itt_api_info_20101001
fuseChosenPairs	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::fuseChosenPairs(BasicBlock &BB,$/;"	f	class:__anon604::BBVectorize
fusedMultiplyAdd	Support/APFloat.cpp	/^APFloat::fusedMultiplyAdd(const APFloat &multiplicand,$/;"	f	class:APFloat
g	Support/regcomp.c	/^	struct re_guts *g;$/;"	m	struct:parse	typeref:struct:parse::re_guts	file:
gCRAnnotations	Support/PrettyStackTrace.cpp	/^struct crashreporter_annotations_t gCRAnnotations $/;"	v	typeref:struct:crashreporter_annotations_t
gCrashRecoveryContexMutex	Support/CrashRecoveryContext.cpp	/^static sys::Mutex gCrashRecoveryContexMutex;$/;"	v	file:
gCrashRecoveryEnabled	Support/CrashRecoveryContext.cpp	/^static bool gCrashRecoveryEnabled = false;$/;"	v	file:
gcdMIVtest	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::gcdMIVtest(const SCEV *Src,$/;"	f	class:DependenceAnalysis
gcp_map_type	CodeGen/AsmPrinter/AsmPrinter.cpp	/^typedef DenseMap<GCStrategy*,GCMetadataPrinter*> gcp_map_type;$/;"	t	file:
genLoopLimit	Transforms/Scalar/IndVarSimplify.cpp	/^static Value *genLoopLimit(PHINode *IndVar, const SCEV *IVCount, Loop *L,$/;"	f	file:
generate	DebugInfo/DWARFDebugAranges.cpp	/^bool DWARFDebugAranges::generate(DWARFContext *ctx) {$/;"	f	class:DWARFDebugAranges
generateCrashCode	Transforms/Instrumentation/AddressSanitizer.cpp	/^Instruction *AddressSanitizer::generateCrashCode($/;"	f	class:AddressSanitizer
generateDotGraph	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::generateDotGraph() {$/;"	f	class:BLInstrumentationDag
generateSignedDivisionCode	Transforms/Utils/IntegerDivision.cpp	/^static Value *generateSignedDivisionCode(Value *Dividend, Value *Divisor,$/;"	f	file:
generateSignedRemainderCode	Transforms/Utils/IntegerDivision.cpp	/^static Value *generateSignedRemainderCode(Value *Dividend, Value *Divisor,$/;"	f	file:
generateUnsignedDivisionCode	Transforms/Utils/IntegerDivision.cpp	/^static Value *generateUnsignedDivisionCode(Value *Dividend, Value *Divisor,$/;"	f	file:
generatedUnsignedRemainderCode	Transforms/Utils/IntegerDivision.cpp	/^static Value *generatedUnsignedRemainderCode(Value *Dividend, Value *Divisor,$/;"	f	file:
generic_category	Support/system_error.cpp	/^generic_category() {$/;"	f	namespace:llvm
gep_type_iterator	ExecutionEngine/Interpreter/Interpreter.h	/^typedef generic_gep_type_iterator<User::const_op_iterator> gep_type_iterator;$/;"	t	namespace:llvm
get	Analysis/LazyValueInfo.cpp	/^  static LVILatticeVal get(Constant *C) {$/;"	f	class:__anon18::LVILatticeVal
get	CodeGen/InterferenceCache.cpp	/^InterferenceCache::Entry *InterferenceCache::get(unsigned PhysReg) {$/;"	f	class:InterferenceCache
get	CodeGen/InterferenceCache.h	/^    BlockInterference *get(unsigned MBBNum) {$/;"	f	class:llvm::InterferenceCache::Entry
get	Linker/LinkModules.cpp	/^  FunctionType *get(FunctionType *T) {return cast<FunctionType>(get((Type*)T));}$/;"	f	class:__anon201::TypeMapTy
get	Linker/LinkModules.cpp	/^Type *TypeMapTy::get(Type *Ty) {$/;"	f	class:TypeMapTy
get	Support/Timer.cpp	/^  Timer &get(StringRef Name, StringRef GroupName) {$/;"	f	class:__anon246::Name2PairMap
get	TableGen/Record.cpp	/^BinOpInit *BinOpInit::get(BinaryOp opc, Init *lhs,$/;"	f	class:BinOpInit
get	TableGen/Record.cpp	/^BitInit *BitInit::get(bool V) {$/;"	f	class:BitInit
get	TableGen/Record.cpp	/^BitsInit *BitsInit::get(ArrayRef<Init *> Range) {$/;"	f	class:BitsInit
get	TableGen/Record.cpp	/^BitsRecTy *BitsRecTy::get(unsigned Sz) {$/;"	f	class:BitsRecTy
get	TableGen/Record.cpp	/^DagInit::get(Init *V, const std::string &VN,$/;"	f	class:DagInit
get	TableGen/Record.cpp	/^DefInit *DefInit::get(Record *R) {$/;"	f	class:DefInit
get	TableGen/Record.cpp	/^FieldInit *FieldInit::get(Init *R, const std::string &FN) {$/;"	f	class:FieldInit
get	TableGen/Record.cpp	/^IntInit *IntInit::get(int64_t V) {$/;"	f	class:IntInit
get	TableGen/Record.cpp	/^ListInit *ListInit::get(ArrayRef<Init *> Range, RecTy *EltTy) {$/;"	f	class:ListInit
get	TableGen/Record.cpp	/^RecordRecTy *RecordRecTy::get(Record *R) {$/;"	f	class:RecordRecTy
get	TableGen/Record.cpp	/^StringInit *StringInit::get(StringRef V) {$/;"	f	class:StringInit
get	TableGen/Record.cpp	/^TernOpInit *TernOpInit::get(TernaryOp opc, Init *lhs,$/;"	f	class:TernOpInit
get	TableGen/Record.cpp	/^UnOpInit *UnOpInit::get(UnaryOp opc, Init *lhs, RecTy *Type) {$/;"	f	class:UnOpInit
get	TableGen/Record.cpp	/^UnsetInit *UnsetInit::get() {$/;"	f	class:UnsetInit
get	TableGen/Record.cpp	/^VarBitInit *VarBitInit::get(TypedInit *T, unsigned B) {$/;"	f	class:VarBitInit
get	TableGen/Record.cpp	/^VarInit *VarInit::get(Init *VN, RecTy *T) {$/;"	f	class:VarInit
get	TableGen/Record.cpp	/^VarInit *VarInit::get(const std::string &VN, RecTy *T) {$/;"	f	class:VarInit
get	TableGen/Record.cpp	/^VarListElementInit *VarListElementInit::get(TypedInit *T,$/;"	f	class:VarListElementInit
get	Transforms/Instrumentation/PathProfiling.cpp	/^    static StructType *get(LLVMContext& C) {$/;"	f	class:llvm::TypeBuilder
get	Transforms/Scalar/GVN.cpp	/^  static AvailableValueInBlock get(BasicBlock *BB, Value *V,$/;"	f	struct:__anon538::AvailableValueInBlock
get	VMCore/Attributes.cpp	/^AttrListPtr AttrListPtr::get(ArrayRef<AttributeWithIndex> Attrs) {$/;"	f	class:AttrListPtr
get	VMCore/Attributes.cpp	/^Attributes Attributes::get(LLVMContext &Context, ArrayRef<AttrVal> Vals) {$/;"	f	class:Attributes
get	VMCore/Attributes.cpp	/^Attributes Attributes::get(LLVMContext &Context, AttrBuilder &B) {$/;"	f	class:Attributes
get	VMCore/Constants.cpp	/^BlockAddress *BlockAddress::get(BasicBlock *BB) {$/;"	f	class:BlockAddress
get	VMCore/Constants.cpp	/^BlockAddress *BlockAddress::get(Function *F, BasicBlock *BB) {$/;"	f	class:BlockAddress
get	VMCore/Constants.cpp	/^Constant *ConstantArray::get(ArrayType *Ty, ArrayRef<Constant*> V) {$/;"	f	class:ConstantArray
get	VMCore/Constants.cpp	/^Constant *ConstantDataArray::get(LLVMContext &Context, ArrayRef<double> Elts) {$/;"	f	class:ConstantDataArray
get	VMCore/Constants.cpp	/^Constant *ConstantDataArray::get(LLVMContext &Context, ArrayRef<float> Elts) {$/;"	f	class:ConstantDataArray
get	VMCore/Constants.cpp	/^Constant *ConstantDataArray::get(LLVMContext &Context, ArrayRef<uint16_t> Elts){$/;"	f	class:ConstantDataArray
get	VMCore/Constants.cpp	/^Constant *ConstantDataArray::get(LLVMContext &Context, ArrayRef<uint32_t> Elts){$/;"	f	class:ConstantDataArray
get	VMCore/Constants.cpp	/^Constant *ConstantDataArray::get(LLVMContext &Context, ArrayRef<uint64_t> Elts){$/;"	f	class:ConstantDataArray
get	VMCore/Constants.cpp	/^Constant *ConstantDataArray::get(LLVMContext &Context, ArrayRef<uint8_t> Elts) {$/;"	f	class:ConstantDataArray
get	VMCore/Constants.cpp	/^Constant *ConstantDataVector::get(LLVMContext &Context, ArrayRef<double> Elts) {$/;"	f	class:ConstantDataVector
get	VMCore/Constants.cpp	/^Constant *ConstantDataVector::get(LLVMContext &Context, ArrayRef<float> Elts) {$/;"	f	class:ConstantDataVector
get	VMCore/Constants.cpp	/^Constant *ConstantDataVector::get(LLVMContext &Context, ArrayRef<uint16_t> Elts){$/;"	f	class:ConstantDataVector
get	VMCore/Constants.cpp	/^Constant *ConstantDataVector::get(LLVMContext &Context, ArrayRef<uint32_t> Elts){$/;"	f	class:ConstantDataVector
get	VMCore/Constants.cpp	/^Constant *ConstantDataVector::get(LLVMContext &Context, ArrayRef<uint64_t> Elts){$/;"	f	class:ConstantDataVector
get	VMCore/Constants.cpp	/^Constant *ConstantDataVector::get(LLVMContext &Context, ArrayRef<uint8_t> Elts){$/;"	f	class:ConstantDataVector
get	VMCore/Constants.cpp	/^Constant *ConstantExpr::get(unsigned Opcode, Constant *C1, Constant *C2,$/;"	f	class:ConstantExpr
get	VMCore/Constants.cpp	/^Constant *ConstantFP::get(Type *Ty, StringRef Str) {$/;"	f	class:ConstantFP
get	VMCore/Constants.cpp	/^Constant *ConstantFP::get(Type *Ty, double V) {$/;"	f	class:ConstantFP
get	VMCore/Constants.cpp	/^Constant *ConstantInt::get(Type *Ty, const APInt& V) {$/;"	f	class:ConstantInt
get	VMCore/Constants.cpp	/^Constant *ConstantInt::get(Type *Ty, uint64_t V, bool isSigned) {$/;"	f	class:ConstantInt
get	VMCore/Constants.cpp	/^Constant *ConstantStruct::get(StructType *ST, ArrayRef<Constant*> V) {$/;"	f	class:ConstantStruct
get	VMCore/Constants.cpp	/^Constant *ConstantStruct::get(StructType *T, ...) {$/;"	f	class:ConstantStruct
get	VMCore/Constants.cpp	/^Constant *ConstantVector::get(ArrayRef<Constant*> V) {$/;"	f	class:ConstantVector
get	VMCore/Constants.cpp	/^ConstantAggregateZero *ConstantAggregateZero::get(Type *Ty) {$/;"	f	class:ConstantAggregateZero
get	VMCore/Constants.cpp	/^ConstantFP* ConstantFP::get(LLVMContext &Context, const APFloat& V) {$/;"	f	class:ConstantFP
get	VMCore/Constants.cpp	/^ConstantInt *ConstantInt::get(IntegerType *Ty, uint64_t V, $/;"	f	class:ConstantInt
get	VMCore/Constants.cpp	/^ConstantInt *ConstantInt::get(IntegerType* Ty, StringRef Str,$/;"	f	class:ConstantInt
get	VMCore/Constants.cpp	/^ConstantInt *ConstantInt::get(LLVMContext &Context, const APInt &V) {$/;"	f	class:ConstantInt
get	VMCore/Constants.cpp	/^ConstantPointerNull *ConstantPointerNull::get(PointerType *Ty) {$/;"	f	class:ConstantPointerNull
get	VMCore/Constants.cpp	/^UndefValue *UndefValue::get(Type *Ty) {$/;"	f	class:UndefValue
get	VMCore/DataLayout.cpp	/^LayoutAlignElem::get(AlignTypeEnum align_type, unsigned abi_align,$/;"	f	class:LayoutAlignElem
get	VMCore/DataLayout.cpp	/^PointerAlignElem::get(uint32_t addr_space, unsigned abi_align,$/;"	f	class:PointerAlignElem
get	VMCore/DebugLoc.cpp	/^DebugLoc DebugLoc::get(unsigned Line, unsigned Col,$/;"	f	class:DebugLoc
get	VMCore/InlineAsm.cpp	/^InlineAsm *InlineAsm::get(FunctionType *Ty, StringRef AsmString,$/;"	f	class:InlineAsm
get	VMCore/LLVMContextImpl.h	/^  MDNode *get() const {$/;"	f	class:llvm::DebugRecVH
get	VMCore/Metadata.cpp	/^MDNode *MDNode::get(LLVMContext &Context, ArrayRef<Value*> Vals) {$/;"	f	class:MDNode
get	VMCore/Metadata.cpp	/^MDString *MDString::get(LLVMContext &Context, StringRef Str) {$/;"	f	class:MDString
get	VMCore/Type.cpp	/^ArrayType *ArrayType::get(Type *elementType, uint64_t NumElements) {$/;"	f	class:ArrayType
get	VMCore/Type.cpp	/^FunctionType *FunctionType::get(Type *Result, bool isVarArg) {$/;"	f	class:FunctionType
get	VMCore/Type.cpp	/^FunctionType *FunctionType::get(Type *ReturnType,$/;"	f	class:FunctionType
get	VMCore/Type.cpp	/^IntegerType *IntegerType::get(LLVMContext &C, unsigned NumBits) {$/;"	f	class:IntegerType
get	VMCore/Type.cpp	/^PointerType *PointerType::get(Type *EltTy, unsigned AddressSpace) {$/;"	f	class:PointerType
get	VMCore/Type.cpp	/^StructType *StructType::get(LLVMContext &Context, ArrayRef<Type*> ETypes, $/;"	f	class:StructType
get	VMCore/Type.cpp	/^StructType *StructType::get(LLVMContext &Context, bool isPacked) {$/;"	f	class:StructType
get	VMCore/Type.cpp	/^StructType *StructType::get(Type *type, ...) {$/;"	f	class:StructType
get	VMCore/Type.cpp	/^VectorType *VectorType::get(Type *elementType, unsigned NumElements) {$/;"	f	class:VectorType
get32BitArchVariant	Support/Triple.cpp	/^Triple Triple::get32BitArchVariant() const {$/;"	f	class:Triple
get64BitArchVariant	Support/Triple.cpp	/^Triple Triple::get64BitArchVariant() const {$/;"	f	class:Triple
getA	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::Constraint::getA() const {$/;"	f	class:DependenceAnalysis::Constraint
getAA	Transforms/Scalar/ObjCARC.cpp	/^    AliasAnalysis *getAA() const { return AA; }$/;"	f	class:__anon503::ProvenanceAnalysis
getABIIntegerTypeAlignment	VMCore/DataLayout.cpp	/^unsigned DataLayout::getABIIntegerTypeAlignment(unsigned BitWidth) const {$/;"	f	class:DataLayout
getABITypeAlignment	VMCore/DataLayout.cpp	/^unsigned DataLayout::getABITypeAlignment(Type *Ty) const {$/;"	f	class:DataLayout
getADDriOpcode	Target/X86/X86FrameLowering.cpp	/^static unsigned getADDriOpcode(unsigned is64Bit, int64_t Imm) {$/;"	f	file:
getADDriOpcode	Target/X86/X86RegisterInfo.cpp	/^static unsigned getADDriOpcode(unsigned is64Bit, int64_t Imm) {$/;"	f	file:
getAISize	VMCore/Instructions.cpp	/^static Value *getAISize(LLVMContext &Context, Value *Amt) {$/;"	f	file:
getAL	Target/ARM/ARMISelDAGToDAG.cpp	/^static inline SDValue getAL(SelectionDAG *CurDAG) {$/;"	f	file:
getAM2IdxMode	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getAM2IdxMode(unsigned AM2Opc) {$/;"	f	namespace:llvm::ARM_AM
getAM2Offset	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getAM2Offset(unsigned AM2Opc) {$/;"	f	namespace:llvm::ARM_AM
getAM2Op	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline AddrOpc getAM2Op(unsigned AM2Opc) {$/;"	f	namespace:llvm::ARM_AM
getAM2Opc	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getAM2Opc(AddrOpc Opc, unsigned Imm12, ShiftOpc SO,$/;"	f	namespace:llvm::ARM_AM
getAM2ShiftOpc	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline ShiftOpc getAM2ShiftOpc(unsigned AM2Opc) {$/;"	f	namespace:llvm::ARM_AM
getAM3IdxMode	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getAM3IdxMode(unsigned AM3Opc) {$/;"	f	namespace:llvm::ARM_AM
getAM3Offset	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned char getAM3Offset(unsigned AM3Opc) {$/;"	f	namespace:llvm::ARM_AM
getAM3Op	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline AddrOpc getAM3Op(unsigned AM3Opc) {$/;"	f	namespace:llvm::ARM_AM
getAM3Opc	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getAM3Opc(AddrOpc Opc, unsigned char Offset,$/;"	f	namespace:llvm::ARM_AM
getAM4ModeImm	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getAM4ModeImm(AMSubMode SubMode) {$/;"	f	namespace:llvm::ARM_AM
getAM4SubMode	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline AMSubMode getAM4SubMode(unsigned Mode) {$/;"	f	namespace:llvm::ARM_AM
getAM5Offset	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned char getAM5Offset(unsigned AM5Opc) {$/;"	f	namespace:llvm::ARM_AM
getAM5Op	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline AddrOpc getAM5Op(unsigned AM5Opc) {$/;"	f	namespace:llvm::ARM_AM
getAM5Opc	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getAM5Opc(AddrOpc Opc, unsigned char Offset) {$/;"	f	namespace:llvm::ARM_AM
getAMSubModeStr	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline const char *getAMSubModeStr(AMSubMode Mode) {$/;"	f	namespace:llvm::ARM_AM
getAPFloatVal	AsmParser/LLLexer.h	/^    const APFloat &getAPFloatVal() const { return APFloatVal; }$/;"	f	class:llvm::LLLexer
getAPSIntVal	AsmParser/LLLexer.h	/^    const APSInt &getAPSIntVal() const { return APSIntVal; }$/;"	f	class:llvm::LLLexer
getARMBLTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getARMBLTargetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getARMBLTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getARMBLTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getARMBLXTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getARMBLXTargetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getARMBLXTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getARMBLXTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getARMBranchTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getARMBranchTargetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getARMBranchTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getARMBranchTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getARMCmp	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::getARMCmp(SDValue LHS, SDValue RHS, ISD::CondCode CC,$/;"	f	class:ARMTargetLowering
getARMFixupKindMachOInfo	Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp	/^static bool getARMFixupKindMachOInfo(unsigned Kind, unsigned &RelocType,$/;"	f	file:
getARMIndexedAddressParts	Target/ARM/ARMISelLowering.cpp	/^static bool getARMIndexedAddressParts(SDNode *Ptr, EVT VT,$/;"	f	file:
getARMSubtarget	Target/ARM/ARMTargetMachine.cpp	/^  const ARMSubtarget &getARMSubtarget() const {$/;"	f	class:__anon293::ARMPassConfig
getARMTargetMachine	Target/ARM/ARMTargetMachine.cpp	/^  ARMBaseTargetMachine &getARMTargetMachine() const {$/;"	f	class:__anon293::ARMPassConfig
getARangeSection	DebugInfo/DWARFContext.h	/^  virtual StringRef getARangeSection() { return ARangeSection; }$/;"	f	class:llvm::DWARFContextInMemory
getAShr	VMCore/Constants.cpp	/^Constant *ConstantExpr::getAShr(Constant *C1, Constant *C2, bool isExact) {$/;"	f	class:ConstantExpr
getATReg	Target/Mips/AsmParser/MipsAsmParser.cpp	/^unsigned MipsAsmParser::getATReg() {$/;"	f	class:MipsAsmParser
getATRegNum	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  unsigned getATRegNum() {return aTReg;}$/;"	f	class:__anon421::MipsAssemblerOptions
getAbbrev	CodeGen/AsmPrinter/DIE.h	/^    DIEAbbrev &getAbbrev() { return Abbrev; }$/;"	f	class:llvm::DIE
getAbbrevNumber	CodeGen/AsmPrinter/DIE.h	/^    unsigned getAbbrevNumber() const { return Abbrev.getNumber(); }$/;"	f	class:llvm::DIE
getAbbrevSection	DebugInfo/DWARFContext.h	/^  virtual StringRef getAbbrevSection() { return AbbrevSection; }$/;"	f	class:llvm::DWARFContextInMemory
getAbbreviationDeclaration	DebugInfo/DWARFDebugAbbrev.cpp	/^DWARFAbbreviationDeclarationSet::getAbbreviationDeclaration(uint32_t abbrCode)$/;"	f	class:DWARFAbbreviationDeclarationSet
getAbbreviationDeclarationPtr	DebugInfo/DWARFDebugInfoEntry.h	/^  const DWARFAbbreviationDeclaration *getAbbreviationDeclarationPtr() const {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getAbbreviationDeclarationSet	DebugInfo/DWARFDebugAbbrev.cpp	/^DWARFDebugAbbrev::getAbbreviationDeclarationSet(uint64_t cu_abbr_offset) const {$/;"	f	class:DWARFDebugAbbrev
getAbbreviations	DebugInfo/DWARFCompileUnit.h	/^  const DWARFAbbreviationDeclarationSet *getAbbreviations() const {$/;"	f	class:llvm::DWARFCompileUnit
getAbsoluteLabelMachineRelTy	Target/ARM/ARMELFWriterInfo.cpp	/^unsigned ARMELFWriterInfo::getAbsoluteLabelMachineRelTy() const {$/;"	f	class:ARMELFWriterInfo
getAbsoluteLabelMachineRelTy	Target/MBlaze/MBlazeELFWriterInfo.cpp	/^unsigned MBlazeELFWriterInfo::getAbsoluteLabelMachineRelTy() const {$/;"	f	class:MBlazeELFWriterInfo
getAbsoluteLabelMachineRelTy	Target/Mips/MipsELFWriterInfo.cpp	/^unsigned MipsELFWriterInfo::getAbsoluteLabelMachineRelTy() const {$/;"	f	class:MipsELFWriterInfo
getAbsoluteLabelMachineRelTy	Target/X86/X86ELFWriterInfo.cpp	/^unsigned X86ELFWriterInfo::getAbsoluteLabelMachineRelTy() const {$/;"	f	class:X86ELFWriterInfo
getAbstractVariable	CodeGen/AsmPrinter/DwarfDebug.h	/^  DbgVariable *getAbstractVariable() const { return AbsVar; }$/;"	f	class:llvm::DbgVariable
getAccDefMI	Target/ARM/MLxExpansionPass.cpp	/^MachineInstr *MLxExpansion::getAccDefMI(MachineInstr *MI) const {$/;"	f	class:MLxExpansion
getAccelNames	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  const StringMap<std::vector<DIE*> > &getAccelNames() const {$/;"	f	class:llvm::CompileUnit
getAccelNamespace	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  const StringMap<std::vector<DIE*> > &getAccelNamespace() const {$/;"	f	class:llvm::CompileUnit
getAccelObjC	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  const StringMap<std::vector<DIE*> > &getAccelObjC() const {$/;"	f	class:llvm::CompileUnit
getAccelTypes	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  &getAccelTypes() const {$/;"	f	class:llvm::CompileUnit
getAccessType	Transforms/Scalar/LoopStrengthReduce.cpp	/^static Type *getAccessType(const Instruction *Inst) {$/;"	f	file:
getAdd	VMCore/Constants.cpp	/^Constant *ConstantExpr::getAdd(Constant *C1, Constant *C2,$/;"	f	class:ConstantExpr
getAddExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getAddExpr(SmallVectorImpl<const SCEV *> &Ops,$/;"	f	class:ScalarEvolution
getAddRecExpr	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getAddRecExpr(SmallVectorImpl<const SCEV *> &Operands,$/;"	f	class:ScalarEvolution
getAddRecExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getAddRecExpr(const SCEV *Start, const SCEV *Step,$/;"	f	class:ScalarEvolution
getAddRecExprPHILiterally	Analysis/ScalarEvolutionExpander.cpp	/^SCEVExpander::getAddRecExprPHILiterally(const SCEVAddRecExpr *Normalized,$/;"	f	class:SCEVExpander
getAddrElement	CodeGen/AsmPrinter/DwarfDebug.h	/^  uint64_t getAddrElement(unsigned i) const {$/;"	f	class:llvm::DbgVariable
getAddrLabelSymbol	CodeGen/MachineModuleInfo.cpp	/^MCSymbol *MMIAddrLabelMap::getAddrLabelSymbol(BasicBlock *BB) {$/;"	f	class:MMIAddrLabelMap
getAddrLabelSymbol	CodeGen/MachineModuleInfo.cpp	/^MCSymbol *MachineModuleInfo::getAddrLabelSymbol(const BasicBlock *BB) {$/;"	f	class:MachineModuleInfo
getAddrLabelSymbolToEmit	CodeGen/MachineModuleInfo.cpp	/^MMIAddrLabelMap::getAddrLabelSymbolToEmit(BasicBlock *BB) {$/;"	f	class:MMIAddrLabelMap
getAddrLabelSymbolToEmit	CodeGen/MachineModuleInfo.cpp	/^getAddrLabelSymbolToEmit(const BasicBlock *BB) {$/;"	f	class:MachineModuleInfo
getAddrMode2OffsetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getAddrMode2OffsetOpValue(const MachineInstr &MI, unsigned OpIdx)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrMode2OffsetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrMode2OffsetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAddrMode2OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getAddrMode2OpValue(const MachineInstr &MI, unsigned OpIdx)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrMode2OpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrMode2OpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAddrMode3OffsetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getAddrMode3OffsetOpValue(const MachineInstr &MI, unsigned OpIdx)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrMode3OffsetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrMode3OffsetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAddrMode3OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getAddrMode3OpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrMode3OpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrMode3OpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAddrMode5OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getAddrMode5OpValue(const MachineInstr &MI, unsigned Op) const {$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrMode5OpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrMode5OpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAddrMode6AddressOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getAddrMode6AddressOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrMode6AddressOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrMode6AddressOpValue(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getAddrMode6DupAddressOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getAddrMode6DupAddressOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrMode6DupAddressOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrMode6DupAddressOpValue(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getAddrMode6OffsetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getAddrMode6OffsetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrMode6OffsetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrMode6OffsetOpValue(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getAddrMode6OneLane32AddressOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getAddrMode6OneLane32AddressOpValue(const MachineInstr &MI,$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrMode6OneLane32AddressOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrMode6OneLane32AddressOpValue(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getAddrModeISOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getAddrModeISOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrModeISOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrModeISOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAddrModeImm12OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getAddrModeImm12OpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrModeImm12OpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrModeImm12OpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAddrModePCOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getAddrModePCOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrModePCOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrModePCOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAddrModeSBit	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::getAddrModeSBit(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
getAddrModeSOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getAddrModeSOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrModeThumbSPOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getAddrModeThumbSPOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAddrModeThumbSPOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAddrModeThumbSPOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAddrModeUPBits	Target/ARM/ARMCodeEmitter.cpp	/^static unsigned getAddrModeUPBits(unsigned Mode) {$/;"	f	file:
getAddrOpcStr	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline const char *getAddrOpcStr(AddrOpc Op) {$/;"	f	namespace:llvm::ARM_AM
getAddrSpace	CodeGen/MachineInstr.cpp	/^unsigned MachinePointerInfo::getAddrSpace() const {$/;"	f	class:MachinePointerInfo
getAddress	VMCore/IntrinsicInst.cpp	/^Value *DbgDeclareInst::getAddress() const {$/;"	f	class:DbgDeclareInst
getAddressByteSize	DebugInfo/DWARFCompileUnit.h	/^  uint8_t getAddressByteSize() const { return AddrSize; }$/;"	f	class:llvm::DWARFCompileUnit
getAddressOfSymbol	Support/DynamicLibrary.cpp	/^void *DynamicLibrary::getAddressOfSymbol(const char *symbolName) {$/;"	f	class:DynamicLibrary
getAddressOperands	Target/X86/X86ISelDAGToDAG.cpp	/^    inline void getAddressOperands(X86ISelAddressMode &AM, SDValue &Base,$/;"	f	class:__anon373::X86DAGToDAGISel	file:
getAddressSpace	CodeGen/SelectionDAG/SelectionDAG.cpp	/^unsigned GlobalAddressSDNode::getAddressSpace() const {$/;"	f	class:GlobalAddressSDNode
getAddressSpace	VMCore/Instructions.cpp	/^unsigned GetElementPtrInst::getAddressSpace(Value *Ptr) {$/;"	f	class:GetElementPtrInst
getAdjustedAllocaPtr	Transforms/Scalar/SROA.cpp	/^  Value *getAdjustedAllocaPtr(IRBuilder<> &IRB, Type *PointerTy) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
getAdjustedAnalysisPointer	Analysis/AliasAnalysisCounter.cpp	/^    virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	class:__anon43::AliasAnalysisCounter
getAdjustedAnalysisPointer	Analysis/AliasDebugger.cpp	/^    virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	class:__anon44::AliasDebugger
getAdjustedAnalysisPointer	Analysis/BasicAliasAnalysis.cpp	/^    virtual void *getAdjustedAnalysisPointer(const void *ID) {$/;"	f	struct:__anon15::BasicAliasAnalysis
getAdjustedAnalysisPointer	Analysis/IPA/CallGraph.cpp	/^  virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	class:__anon2::BasicCallGraph
getAdjustedAnalysisPointer	Analysis/IPA/GlobalsModRef.cpp	/^    virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	class:__anon1::GlobalsModRef
getAdjustedAnalysisPointer	Analysis/NoAliasAnalysis.cpp	/^    virtual void *getAdjustedAnalysisPointer(const void *ID) {$/;"	f	struct:__anon42::NoAA
getAdjustedAnalysisPointer	Analysis/PathProfileInfo.cpp	/^                virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	class:__anon40::PathProfileLoaderPass
getAdjustedAnalysisPointer	Analysis/PathProfileInfo.cpp	/^    virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	struct:__anon41::NoPathProfileInfo
getAdjustedAnalysisPointer	Analysis/ProfileEstimatorPass.cpp	/^    virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	class:__anon9::ProfileEstimatorPass
getAdjustedAnalysisPointer	Analysis/ProfileInfo.cpp	/^    virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	struct:__anon16::NoProfileInfo
getAdjustedAnalysisPointer	Analysis/ProfileInfoLoaderPass.cpp	/^    virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	class:__anon52::LoaderPass
getAdjustedAnalysisPointer	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^    virtual void *getAdjustedAnalysisPointer(AnalysisID PI) {$/;"	f	class:__anon51::ScalarEvolutionAliasAnalysis
getAdjustedAnalysisPointer	Analysis/TypeBasedAliasAnalysis.cpp	/^    virtual void *getAdjustedAnalysisPointer(const void *PI) {$/;"	f	class:__anon13::TypeBasedAliasAnalysis
getAdjustedAnalysisPointer	Transforms/Scalar/ObjCARC.cpp	/^    virtual void *getAdjustedAnalysisPointer(const void *PI) {$/;"	f	class:__anon500::ObjCARCAliasAnalysis	file:
getAdjustedAnalysisPointer	VMCore/Pass.cpp	/^void *Pass::getAdjustedAnalysisPointer(AnalysisID AID) {$/;"	f	class:Pass
getAdjustedPtr	Transforms/Scalar/SROA.cpp	/^static Value *getAdjustedPtr(IRBuilder<> &IRB, const DataLayout &TD,$/;"	f	file:
getAdrLabelOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getAdrLabelOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAdrLabelOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getAdrLabelOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getAggregateElement	VMCore/Constants.cpp	/^Constant *Constant::getAggregateElement(Constant *Elt) const {$/;"	f	class:Constant
getAggregateElement	VMCore/Constants.cpp	/^Constant *Constant::getAggregateElement(unsigned Elt) const {$/;"	f	class:Constant
getAliasAnalysis	Transforms/Scalar/GVN.cpp	/^    AliasAnalysis *getAliasAnalysis() const { return AA; }$/;"	f	class:__anon536::ValueTable
getAliasAnalysis	Transforms/Scalar/GVN.cpp	/^    AliasAnalysis *getAliasAnalysis() const { return VN.getAliasAnalysis(); }$/;"	f	class:__anon537::GVN
getAliasSetForPointer	Analysis/AliasSetTracker.cpp	/^AliasSet &AliasSetTracker::getAliasSetForPointer(Value *Pointer, uint64_t Size,$/;"	f	class:AliasSetTracker
getAliasedGlobal	VMCore/Globals.cpp	/^const GlobalValue *GlobalAlias::getAliasedGlobal() const {$/;"	f	class:GlobalAlias
getAlign	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::getAlign(const CallInst &I, unsigned index, unsigned &align) {$/;"	f	class:llvm
getAlign	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::getAlign(const Function &F, unsigned index, unsigned &align) {$/;"	f	class:llvm
getAlignOf	VMCore/Constants.cpp	/^Constant *ConstantExpr::getAlignOf(Type* Ty) {$/;"	f	class:ConstantExpr
getAlignOfExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getAlignOfExpr(Type *AllocTy) {$/;"	f	class:ScalarEvolution
getAlignedAllocaSize	Transforms/Instrumentation/AddressSanitizer.cpp	/^  uint64_t getAlignedAllocaSize(AllocaInst *AI) {$/;"	f	struct:__anon491::AddressSanitizer	file:
getAlignedSize	Transforms/Instrumentation/AddressSanitizer.cpp	/^  uint64_t getAlignedSize(uint64_t SizeInBytes) {$/;"	f	struct:__anon491::AddressSanitizer	file:
getAlignment	CodeGen/MachineInstr.cpp	/^uint64_t MachineMemOperand::getAlignment() const {$/;"	f	class:MachineMemOperand
getAlignment	Transforms/IPO/ConstantMerge.cpp	/^unsigned ConstantMerge::getAlignment(GlobalVariable *GV) const {$/;"	f	class:ConstantMerge
getAlignment	VMCore/Attributes.cpp	/^uint64_t AttrBuilder::getAlignment() const {$/;"	f	class:AttrBuilder
getAlignment	VMCore/Attributes.cpp	/^uint64_t AttributesImpl::getAlignment() const {$/;"	f	class:AttributesImpl
getAlignment	VMCore/Attributes.cpp	/^unsigned Attributes::getAlignment() const {$/;"	f	class:Attributes
getAlignment	VMCore/DataLayout.cpp	/^unsigned DataLayout::getAlignment(Type *Ty, bool abi_or_pref) const {$/;"	f	class:DataLayout
getAlignmentInfo	VMCore/DataLayout.cpp	/^unsigned DataLayout::getAlignmentInfo(AlignTypeEnum AlignType,$/;"	f	class:DataLayout
getAllDerivedDefinitions	TableGen/Record.cpp	/^RecordKeeper::getAllDerivedDefinitions(const std::string &ClassName) const {$/;"	f	class:RecordKeeper
getAllMetadataImpl	VMCore/Metadata.cpp	/^void Instruction::getAllMetadataImpl(SmallVectorImpl<std::pair<unsigned,$/;"	f	class:Instruction
getAllMetadataOtherThanDebugLocImpl	VMCore/Metadata.cpp	/^getAllMetadataOtherThanDebugLocImpl(SmallVectorImpl<std::pair<unsigned,$/;"	f	class:Instruction
getAllModules	Archive/ArchiveReader.cpp	/^Archive::getAllModules(std::vector<Module*>& Modules,$/;"	f	class:Archive
getAllOnesValue	Support/APFloat.cpp	/^APFloat::getAllOnesValue(unsigned BitWidth, bool isIEEE)$/;"	f	class:APFloat
getAllOnesValue	VMCore/Constants.cpp	/^Constant *Constant::getAllOnesValue(Type *Ty) {$/;"	f	class:Constant
getAllocaAdjustInsts	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  const std::vector<MachineInstr*>& getAllocaAdjustInsts() {$/;"	f	class:llvm::HexagonMachineFunctionInfo
getAllocaSizeInBytes	Transforms/Instrumentation/AddressSanitizer.cpp	/^  uint64_t getAllocaSizeInBytes(AllocaInst *AI) {$/;"	f	struct:__anon491::AddressSanitizer	file:
getAllocatableClass	Target/TargetRegisterInfo.cpp	/^TargetRegisterInfo::getAllocatableClass(const TargetRegisterClass *RC) const {$/;"	f	class:TargetRegisterInfo
getAllocatableSet	Target/TargetRegisterInfo.cpp	/^BitVector TargetRegisterInfo::getAllocatableSet(const MachineFunction &MF,$/;"	f	class:TargetRegisterInfo
getAllocatableSetForRC	Target/TargetRegisterInfo.cpp	/^static void getAllocatableSetForRC(const MachineFunction &MF,$/;"	f	file:
getAllocatedType	VMCore/Instructions.cpp	/^Type *AllocaInst::getAllocatedType() const {$/;"	f	class:AllocaInst
getAllocationData	Analysis/MemoryBuiltins.cpp	/^static const AllocFnsTy *getAllocationData(const Value *V, AllocType AllocTy,$/;"	f	file:
getAllocator	Support/YAMLParser.cpp	/^BumpPtrAllocator &Node::getAllocator() {$/;"	f	class:Node
getAllowedSet	CodeGen/RegAllocPBQP.cpp	/^  PBQPRAProblem::getAllowedSet(unsigned vreg) const {$/;"	f	class:PBQPRAProblem
getAltivecCompareInfo	Target/PowerPC/PPCISelLowering.cpp	/^static bool getAltivecCompareInfo(SDValue Intrin, int &CompareOpc,$/;"	f	file:
getAnalysisIfAvailable	VMCore/PassManager.cpp	/^Pass *AnalysisResolver::getAnalysisIfAvailable(AnalysisID ID, bool dir) const {$/;"	f	class:AnalysisResolver
getAnalysisUsage	Analysis/AliasAnalysis.cpp	/^void AliasAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:AliasAnalysis
getAnalysisUsage	Analysis/AliasAnalysisCounter.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon43::AliasAnalysisCounter
getAnalysisUsage	Analysis/AliasAnalysisEvaluator.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon47::AAEval
getAnalysisUsage	Analysis/AliasDebugger.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon44::AliasDebugger
getAnalysisUsage	Analysis/AliasSetTracker.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon35::AliasSetPrinter
getAnalysisUsage	Analysis/BasicAliasAnalysis.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon15::BasicAliasAnalysis
getAnalysisUsage	Analysis/BlockFrequencyInfo.cpp	/^void BlockFrequencyInfo::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:BlockFrequencyInfo
getAnalysisUsage	Analysis/BranchProbabilityInfo.cpp	/^void BranchProbabilityInfo::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:BranchProbabilityInfo
getAnalysisUsage	Analysis/CFGPrinter.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon24::CFGViewer
getAnalysisUsage	Analysis/CFGPrinter.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon25::CFGOnlyViewer
getAnalysisUsage	Analysis/CFGPrinter.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon26::CFGPrinter
getAnalysisUsage	Analysis/CFGPrinter.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon27::CFGOnlyPrinter
getAnalysisUsage	Analysis/DbgInfoPrinter.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon34::PrintDbgInfo
getAnalysisUsage	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:DependenceAnalysis
getAnalysisUsage	Analysis/IPA/CallGraph.cpp	/^  virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon2::BasicCallGraph
getAnalysisUsage	Analysis/IPA/CallGraphSCCPass.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon4::PrintCallGraphPass
getAnalysisUsage	Analysis/IPA/CallGraphSCCPass.cpp	/^  void getAnalysisUsage(AnalysisUsage &Info) const {$/;"	f	class:__anon3::CGPassManager
getAnalysisUsage	Analysis/IPA/CallGraphSCCPass.cpp	/^void CallGraphSCCPass::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:CallGraphSCCPass
getAnalysisUsage	Analysis/IPA/GlobalsModRef.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon1::GlobalsModRef
getAnalysisUsage	Analysis/IVUsers.cpp	/^void IVUsers::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:IVUsers
getAnalysisUsage	Analysis/InstCount.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon17::InstCount
getAnalysisUsage	Analysis/LazyValueInfo.cpp	/^void LazyValueInfo::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LazyValueInfo
getAnalysisUsage	Analysis/LibCallAliasAnalysis.cpp	/^void LibCallAliasAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LibCallAliasAnalysis
getAnalysisUsage	Analysis/Lint.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon5::Lint
getAnalysisUsage	Analysis/LoopDependenceAnalysis.cpp	/^void LoopDependenceAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LoopDependenceAnalysis
getAnalysisUsage	Analysis/LoopInfo.cpp	/^void LoopInfo::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LoopInfo
getAnalysisUsage	Analysis/LoopPass.cpp	/^  virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon45::PrintLoopPass
getAnalysisUsage	Analysis/LoopPass.cpp	/^void LPPassManager::getAnalysisUsage(AnalysisUsage &Info) const {$/;"	f	class:LPPassManager
getAnalysisUsage	Analysis/MemDepPrinter.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon33::MemDepPrinter
getAnalysisUsage	Analysis/MemoryDependenceAnalysis.cpp	/^void MemoryDependenceAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MemoryDependenceAnalysis
getAnalysisUsage	Analysis/ModuleDebugInfoPrinter.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon46::ModuleDebugInfoPrinter
getAnalysisUsage	Analysis/NoAliasAnalysis.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon42::NoAA
getAnalysisUsage	Analysis/PathProfileInfo.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon40::PathProfileLoaderPass
getAnalysisUsage	Analysis/PathProfileVerifier.cpp	/^void PathProfileVerifier::getAnalysisUsage(AnalysisUsage& AU) const {$/;"	f	class:PathProfileVerifier
getAnalysisUsage	Analysis/ProfileDataLoaderPass.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon7::ProfileMetadataLoaderPass
getAnalysisUsage	Analysis/ProfileEstimatorPass.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon9::ProfileEstimatorPass
getAnalysisUsage	Analysis/ProfileInfoLoaderPass.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon52::LoaderPass
getAnalysisUsage	Analysis/ProfileVerifierPass.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon36::ProfileVerifierPassT
getAnalysisUsage	Analysis/RegionInfo.cpp	/^void RegionInfo::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RegionInfo
getAnalysisUsage	Analysis/RegionPass.cpp	/^  virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon8::PrintRegionPass
getAnalysisUsage	Analysis/RegionPass.cpp	/^void RGPassManager::getAnalysisUsage(AnalysisUsage &Info) const {$/;"	f	class:RGPassManager
getAnalysisUsage	Analysis/ScalarEvolution.cpp	/^void ScalarEvolution::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:ScalarEvolution
getAnalysisUsage	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^ScalarEvolutionAliasAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:ScalarEvolutionAliasAnalysis
getAnalysisUsage	Analysis/TypeBasedAliasAnalysis.cpp	/^TypeBasedAliasAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:TypeBasedAliasAnalysis
getAnalysisUsage	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:AsmPrinter
getAnalysisUsage	CodeGen/BranchFolding.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon98::BranchFolderPass
getAnalysisUsage	CodeGen/CalcSpillWeights.cpp	/^void CalculateSpillWeights::getAnalysisUsage(AnalysisUsage &au) const {$/;"	f	class:CalculateSpillWeights
getAnalysisUsage	CodeGen/CodePlacementOpt.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon150::CodePlacementOpt
getAnalysisUsage	CodeGen/DwarfEHPrepare.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const { }$/;"	f	class:__anon138::DwarfEHPrepare
getAnalysisUsage	CodeGen/EarlyIfConversion.cpp	/^void EarlyIfConverter::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:EarlyIfConverter
getAnalysisUsage	CodeGen/EdgeBundles.cpp	/^void EdgeBundles::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:EdgeBundles
getAnalysisUsage	CodeGen/ExecutionDepsFix.cpp	/^  virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon120::ExeDepsFix
getAnalysisUsage	CodeGen/ExpandISelPseudos.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon124::ExpandISelPseudos	file:
getAnalysisUsage	CodeGen/ExpandPostRAPseudos.cpp	/^  virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon165::ExpandPostRA
getAnalysisUsage	CodeGen/GCMetadata.cpp	/^void Deleter::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:Deleter
getAnalysisUsage	CodeGen/GCMetadata.cpp	/^void Printer::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:Printer
getAnalysisUsage	CodeGen/GCStrategy.cpp	/^void GCMachineCodeAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:GCMachineCodeAnalysis
getAnalysisUsage	CodeGen/GCStrategy.cpp	/^void LowerIntrinsics::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LowerIntrinsics
getAnalysisUsage	CodeGen/IfConversion.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon99::IfConverter
getAnalysisUsage	CodeGen/LiveDebugVariables.cpp	/^void LiveDebugVariables::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LiveDebugVariables
getAnalysisUsage	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LiveIntervals
getAnalysisUsage	CodeGen/LiveRegMatrix.cpp	/^void LiveRegMatrix::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LiveRegMatrix
getAnalysisUsage	CodeGen/LiveStackAnalysis.cpp	/^void LiveStacks::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LiveStacks
getAnalysisUsage	CodeGen/LiveVariables.cpp	/^void LiveVariables::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LiveVariables
getAnalysisUsage	CodeGen/LocalStackSlotAllocation.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon136::LocalStackSlotPass
getAnalysisUsage	CodeGen/MachineBlockFrequencyInfo.cpp	/^void MachineBlockFrequencyInfo::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachineBlockFrequencyInfo
getAnalysisUsage	CodeGen/MachineBlockPlacement.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon107::MachineBlockPlacement
getAnalysisUsage	CodeGen/MachineBlockPlacement.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon109::MachineBlockPlacementStats
getAnalysisUsage	CodeGen/MachineCSE.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon161::MachineCSE
getAnalysisUsage	CodeGen/MachineDominators.cpp	/^void MachineDominatorTree::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachineDominatorTree
getAnalysisUsage	CodeGen/MachineFunctionAnalysis.cpp	/^void MachineFunctionAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachineFunctionAnalysis
getAnalysisUsage	CodeGen/MachineFunctionPass.cpp	/^void MachineFunctionPass::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachineFunctionPass
getAnalysisUsage	CodeGen/MachineFunctionPrinterPass.cpp	/^  virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon96::MachineFunctionPrinterPass
getAnalysisUsage	CodeGen/MachineLICM.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon156::MachineLICM
getAnalysisUsage	CodeGen/MachineLoopInfo.cpp	/^void MachineLoopInfo::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachineLoopInfo
getAnalysisUsage	CodeGen/MachineLoopRanges.cpp	/^void MachineLoopRanges::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachineLoopRanges
getAnalysisUsage	CodeGen/MachinePostDominators.cpp	/^MachinePostDominatorTree::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachinePostDominatorTree
getAnalysisUsage	CodeGen/MachineScheduler.cpp	/^void MachineScheduler::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachineScheduler
getAnalysisUsage	CodeGen/MachineSink.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon101::MachineSinking
getAnalysisUsage	CodeGen/MachineTraceMetrics.cpp	/^void MachineTraceMetrics::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachineTraceMetrics
getAnalysisUsage	CodeGen/MachineVerifier.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon139::MachineVerifierPass
getAnalysisUsage	CodeGen/OptimizePHIs.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon146::OptimizePHIs
getAnalysisUsage	CodeGen/PHIElimination.cpp	/^void PHIElimination::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:PHIElimination
getAnalysisUsage	CodeGen/PeepholeOptimizer.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon163::PeepholeOptimizer
getAnalysisUsage	CodeGen/PostRASchedulerList.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon102::PostRAScheduler
getAnalysisUsage	CodeGen/ProcessImplicitDefs.cpp	/^void ProcessImplicitDefs::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:ProcessImplicitDefs
getAnalysisUsage	CodeGen/RegAllocBasic.cpp	/^void RABasic::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RABasic
getAnalysisUsage	CodeGen/RegAllocFast.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon140::RAFast
getAnalysisUsage	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RAGreedy
getAnalysisUsage	CodeGen/RegAllocPBQP.cpp	/^void RegAllocPBQP::getAnalysisUsage(AnalysisUsage &au) const {$/;"	f	class:RegAllocPBQP
getAnalysisUsage	CodeGen/RegisterCoalescer.cpp	/^void RegisterCoalescer::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:RegisterCoalescer
getAnalysisUsage	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^void SelectionDAGISel::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:SelectionDAGISel
getAnalysisUsage	CodeGen/ShrinkWrapping.cpp	/^void PEI::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:PEI
getAnalysisUsage	CodeGen/SjLjEHPrepare.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {}$/;"	f	class:__anon123::SjLjEHPrepare
getAnalysisUsage	CodeGen/SlotIndexes.cpp	/^void SlotIndexes::getAnalysisUsage(AnalysisUsage &au) const {$/;"	f	class:SlotIndexes
getAnalysisUsage	CodeGen/SpillPlacement.cpp	/^void SpillPlacement::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:SpillPlacement
getAnalysisUsage	CodeGen/StackColoring.cpp	/^void StackColoring::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:StackColoring
getAnalysisUsage	CodeGen/StackProtector.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon130::StackProtector
getAnalysisUsage	CodeGen/StackSlotColoring.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon94::StackSlotColoring
getAnalysisUsage	CodeGen/StrongPHIElimination.cpp	/^void StrongPHIElimination::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:StrongPHIElimination
getAnalysisUsage	CodeGen/TwoAddressInstructionPass.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon104::TwoAddressInstructionPass
getAnalysisUsage	CodeGen/UnreachableBlockElim.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon168::UnreachableBlockElim
getAnalysisUsage	CodeGen/UnreachableBlockElim.cpp	/^void UnreachableMachineBlockElim::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:UnreachableMachineBlockElim
getAnalysisUsage	CodeGen/VirtRegMap.cpp	/^void VirtRegRewriter::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:VirtRegRewriter
getAnalysisUsage	CodeGen/VirtRegMap.h	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:llvm::VirtRegMap
getAnalysisUsage	Target/ARM/ARMCodeEmitter.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon297::ARMCodeEmitter	file:
getAnalysisUsage	Target/ARM/ARMInstrInfo.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon292::ARMCGBR
getAnalysisUsage	Target/Hexagon/HexagonHardwareLoops.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon408::HexagonFixupHwLoops
getAnalysisUsage	Target/Hexagon/HexagonHardwareLoops.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon408::HexagonHardwareLoops
getAnalysisUsage	Target/Hexagon/HexagonNewValueJump.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon410::HexagonNewValueJump
getAnalysisUsage	Target/Hexagon/HexagonPeephole.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon411::HexagonPeephole
getAnalysisUsage	Target/Hexagon/HexagonRemoveSZExtArgs.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon406::HexagonRemoveExtendArgs
getAnalysisUsage	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon403::HexagonPacketizer
getAnalysisUsage	Target/Mips/MipsCodeEmitter.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon438::MipsCodeEmitter	file:
getAnalysisUsage	Target/NVPTX/NVPTXAllocaHoisting.h	/^  void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:llvm::NVPTXAllocaHoisting
getAnalysisUsage	Target/NVPTX/NVPTXLowerAggrCopies.h	/^  void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:llvm::NVPTXLowerAggrCopies
getAnalysisUsage	Target/NVPTX/NVPTXSplitBBatBar.h	/^  void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:llvm::NVPTXSplitBBatBar
getAnalysisUsage	Target/PowerPC/PPCCTRLoops.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon325::PPCCTRLoops
getAnalysisUsage	Target/PowerPC/PPCCodeEmitter.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon324::PPCCodeEmitter	file:
getAnalysisUsage	Target/X86/X86CodeEmitter.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon379::Emitter
getAnalysisUsage	Target/X86/X86FloatingPoint.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon386::FPS
getAnalysisUsage	Target/X86/X86InstrInfo.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon375::CGBR
getAnalysisUsage	Target/X86/X86InstrInfo.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon376::LDTLSCleanup
getAnalysisUsage	Target/X86/X86RegisterInfo.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon378::MSAH
getAnalysisUsage	Transforms/Hello/Hello.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon485::Hello2
getAnalysisUsage	Transforms/IPO/ArgumentPromotion.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon602::ArgPromotion
getAnalysisUsage	Transforms/IPO/FunctionAttrs.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon578::FunctionAttrs
getAnalysisUsage	Transforms/IPO/GlobalOpt.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon589::GlobalOpt
getAnalysisUsage	Transforms/IPO/Inliner.cpp	/^void Inliner::getAnalysisUsage(AnalysisUsage &Info) const {$/;"	f	class:Inliner
getAnalysisUsage	Transforms/IPO/Internalize.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon593::InternalizePass
getAnalysisUsage	Transforms/IPO/LoopExtractor.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon580::LoopExtractor
getAnalysisUsage	Transforms/IPO/PartialInlining.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const { }$/;"	f	struct:__anon592::PartialInliner
getAnalysisUsage	Transforms/IPO/StripSymbols.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon587::StripDeadDebugInfo
getAnalysisUsage	Transforms/IPO/StripSymbols.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon587::StripDebugDeclare
getAnalysisUsage	Transforms/IPO/StripSymbols.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon587::StripNonDebugSymbols
getAnalysisUsage	Transforms/IPO/StripSymbols.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon587::StripSymbols
getAnalysisUsage	Transforms/InstCombine/InstructionCombining.cpp	/^void InstCombiner::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:InstCombiner
getAnalysisUsage	Transforms/Instrumentation/BoundsChecking.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon493::BoundsChecking
getAnalysisUsage	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon487::OptimalEdgeProfiler
getAnalysisUsage	Transforms/Scalar/ADCE.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage& AU) const {$/;"	f	struct:__anon572::ADCE
getAnalysisUsage	Transforms/Scalar/BasicBlockPlacement.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon528::BlockPlacement
getAnalysisUsage	Transforms/Scalar/CodeGenPrepare.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon525::CodeGenPrepare
getAnalysisUsage	Transforms/Scalar/ConstantProp.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon535::ConstantPropagation
getAnalysisUsage	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon529::CorrelatedValuePropagation
getAnalysisUsage	Transforms/Scalar/DCE.cpp	/^     virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon540::DCE
getAnalysisUsage	Transforms/Scalar/DCE.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon539::DeadInstElimination
getAnalysisUsage	Transforms/Scalar/DeadStoreElimination.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon552::DSE
getAnalysisUsage	Transforms/Scalar/EarlyCSE.cpp	/^  virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon566::EarlyCSE	file:
getAnalysisUsage	Transforms/Scalar/GVN.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon537::GVN	file:
getAnalysisUsage	Transforms/Scalar/GlobalMerge.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon567::GlobalMerge
getAnalysisUsage	Transforms/Scalar/IndVarSimplify.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon495::IndVarSimplify
getAnalysisUsage	Transforms/Scalar/JumpThreading.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon542::JumpThreading
getAnalysisUsage	Transforms/Scalar/LICM.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon568::LICM
getAnalysisUsage	Transforms/Scalar/LoopDeletion.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage& AU) const {$/;"	f	class:__anon576::LoopDeletion
getAnalysisUsage	Transforms/Scalar/LoopIdiomRecognize.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon543::LoopIdiomRecognize
getAnalysisUsage	Transforms/Scalar/LoopInstSimplify.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon527::LoopInstSimplify
getAnalysisUsage	Transforms/Scalar/LoopRotation.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon534::LoopRotate
getAnalysisUsage	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LoopStrengthReduce::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:LoopStrengthReduce
getAnalysisUsage	Transforms/Scalar/LoopUnrollPass.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon571::LoopUnroll
getAnalysisUsage	Transforms/Scalar/LoopUnswitch.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon494::LoopUnswitch
getAnalysisUsage	Transforms/Scalar/MemCpyOptimizer.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon575::MemCpyOpt	file:
getAnalysisUsage	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCAliasAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:ObjCARCAliasAnalysis
getAnalysisUsage	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCAPElim::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:ObjCARCAPElim
getAnalysisUsage	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCContract::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:ObjCARCContract
getAnalysisUsage	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCExpand::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:ObjCARCExpand
getAnalysisUsage	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCOpt::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:ObjCARCOpt
getAnalysisUsage	Transforms/Scalar/Reassociate.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon549::Reassociate
getAnalysisUsage	Transforms/Scalar/Reg2Mem.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon541::RegToMem
getAnalysisUsage	Transforms/Scalar/SCCP.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon532::SCCP
getAnalysisUsage	Transforms/Scalar/SCCP.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon533::IPSCCP
getAnalysisUsage	Transforms/Scalar/SROA.cpp	/^void SROA::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:SROA
getAnalysisUsage	Transforms/Scalar/ScalarReplAggregates.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon521::SROA_DT
getAnalysisUsage	Transforms/Scalar/ScalarReplAggregates.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon521::SROA_SSAUp
getAnalysisUsage	Transforms/Scalar/SimplifyLibCalls.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon546::SimplifyLibCalls
getAnalysisUsage	Transforms/Scalar/Sink.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon556::Sinking
getAnalysisUsage	Transforms/Utils/BreakCriticalEdges.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon476::BreakCriticalEdges
getAnalysisUsage	Transforms/Utils/InstructionNamer.cpp	/^    void getAnalysisUsage(AnalysisUsage &Info) const {$/;"	f	struct:__anon464::InstNamer
getAnalysisUsage	Transforms/Utils/LCSSA.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon475::LCSSA
getAnalysisUsage	Transforms/Utils/LoopSimplify.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon483::LoopSimplify
getAnalysisUsage	Transforms/Utils/LowerInvoke.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon474::LowerInvoke
getAnalysisUsage	Transforms/Utils/LowerSwitch.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon466::LowerSwitch
getAnalysisUsage	Transforms/Utils/Mem2Reg.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon471::PromotePass
getAnalysisUsage	Transforms/Utils/MetaRenamer.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon472::MetaRenamer
getAnalysisUsage	Transforms/Utils/SimplifyInstructions.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon467::InstSimplifier
getAnalysisUsage	Transforms/Utils/UnifyFunctionExitNodes.cpp	/^void UnifyFunctionExitNodes::getAnalysisUsage(AnalysisUsage &AU) const{$/;"	f	class:UnifyFunctionExitNodes
getAnalysisUsage	Transforms/Vectorize/BBVectorize.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon604::BBVectorize
getAnalysisUsage	Transforms/Vectorize/LoopVectorize.cpp	/^  virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon605::LoopVectorize
getAnalysisUsage	VMCore/Pass.cpp	/^void Pass::getAnalysisUsage(AnalysisUsage &) const {$/;"	f	class:Pass
getAnalysisUsage	VMCore/PassManager.cpp	/^  void getAnalysisUsage(AnalysisUsage &Info) const {$/;"	f	class:__anon614::BBPassManager
getAnalysisUsage	VMCore/PassManager.cpp	/^  void getAnalysisUsage(AnalysisUsage &Info) const {$/;"	f	class:llvm::FunctionPassManagerImpl
getAnalysisUsage	VMCore/PassManager.cpp	/^  void getAnalysisUsage(AnalysisUsage &Info) const {$/;"	f	class:llvm::MPPassManager
getAnalysisUsage	VMCore/PassManager.cpp	/^  void getAnalysisUsage(AnalysisUsage &Info) const {$/;"	f	class:llvm::PassManagerImpl
getAnalysisUsage	VMCore/PrintModulePass.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon619::PrintFunctionPass
getAnalysisUsage	VMCore/PrintModulePass.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon619::PrintModulePass
getAnalysisUsage	VMCore/Verifier.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon609::PreVerifier
getAnalysisUsage	VMCore/Verifier.cpp	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon610::Verifier
getAnd	VMCore/Constants.cpp	/^Constant *ConstantExpr::getAnd(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getAnyExtOrTrunc	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getAnyExtOrTrunc(SDValue Op, DebugLoc DL, EVT VT) {$/;"	f	class:SelectionDAG
getAnyExtendExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getAnyExtendExpr(const SCEV *Op,$/;"	f	class:ScalarEvolution
getArch	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual \/* Triple::ArchType *\/ unsigned getArch() const$/;"	f	class:llvm::ObjectImageCommon
getArch	Object/COFFObjectFile.cpp	/^unsigned COFFObjectFile::getArch() const {$/;"	f	class:COFFObjectFile
getArch	Object/MachOObjectFile.cpp	/^unsigned MachOObjectFile::getArch() const {$/;"	f	class:llvm::object::MachOObjectFile
getArchName	Support/Triple.cpp	/^StringRef Triple::getArchName() const {$/;"	f	class:Triple
getArchNameForAssembler	Support/Triple.cpp	/^const char *Triple::getArchNameForAssembler() {$/;"	f	class:Triple
getArchPointerBitWidth	Support/Triple.cpp	/^static unsigned getArchPointerBitWidth(llvm::Triple::ArchType Arch) {$/;"	f	file:
getArchTypeForDarwinArchName	Support/Triple.cpp	/^Triple::ArchType Triple::getArchTypeForDarwinArchName(StringRef Str) {$/;"	f	class:Triple
getArchTypeForLLVMName	Support/Triple.cpp	/^Triple::ArchType Triple::getArchTypeForLLVMName(StringRef Name) {$/;"	f	class:Triple
getArchTypeName	Support/Triple.cpp	/^const char *Triple::getArchTypeName(ArchType Kind) {$/;"	f	class:Triple
getArchTypePrefix	Support/Triple.cpp	/^const char *Triple::getArchTypePrefix(ArchType Kind) {$/;"	f	class:Triple
getArgNo	VMCore/Function.cpp	/^unsigned Argument::getArgNo() const {$/;"	f	class:Argument
getArgumentFrameIndex	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^int FunctionLoweringInfo::getArgumentFrameIndex(const Argument *A) {$/;"	f	class:FunctionLoweringInfo
getArgumentStackSize	Target/X86/X86MachineFunctionInfo.h	/^  unsigned getArgumentStackSize() const { return ArgumentStackSize; }$/;"	f	class:llvm::X86MachineFunctionInfo
getArrayElements	Linker/LinkModules.cpp	/^static void getArrayElements(Constant *C, SmallVectorImpl<Constant*> &Dest) {$/;"	f	file:
getArrayNumElements	VMCore/Type.cpp	/^uint64_t Type::getArrayNumElements() const {$/;"	f	class:Type
getAsBinary	Object/Archive.cpp	/^error_code Archive::Child::getAsBinary(OwningPtr<Binary> &Result) const {$/;"	f	class:Archive::Child
getAsCString	DebugInfo/DWARFFormValue.cpp	/^DWARFFormValue::getAsCString(const DataExtractor *debug_str_data_ptr) const {$/;"	f	class:DWARFFormValue
getAsImmutablePass	VMCore/Pass.cpp	/^ImmutablePass *Pass::getAsImmutablePass() {$/;"	f	class:Pass
getAsInteger	Support/StringRef.cpp	/^bool StringRef::getAsInteger(unsigned Radix, APInt &Result) const {$/;"	f	class:StringRef
getAsMDNode	VMCore/DebugLoc.cpp	/^MDNode *DebugLoc::getAsMDNode(const LLVMContext &Ctx) const {$/;"	f	class:DebugLoc
getAsPMDataManager	Analysis/IPA/CallGraphSCCPass.cpp	/^  virtual PMDataManager *getAsPMDataManager() { return this; }$/;"	f	class:__anon3::CGPassManager
getAsPMDataManager	VMCore/Pass.cpp	/^PMDataManager *Pass::getAsPMDataManager() {$/;"	f	class:Pass
getAsPMDataManager	VMCore/PassManager.cpp	/^  virtual PMDataManager *getAsPMDataManager() { return this; }$/;"	f	class:__anon614::BBPassManager
getAsPMDataManager	VMCore/PassManager.cpp	/^  virtual PMDataManager *getAsPMDataManager() { return this; }$/;"	f	class:llvm::FunctionPassManagerImpl
getAsPMDataManager	VMCore/PassManager.cpp	/^  virtual PMDataManager *getAsPMDataManager() { return this; }$/;"	f	class:llvm::MPPassManager
getAsPMDataManager	VMCore/PassManager.cpp	/^  virtual PMDataManager *getAsPMDataManager() { return this; }$/;"	f	class:llvm::PassManagerImpl
getAsPass	Analysis/IPA/CallGraphSCCPass.cpp	/^  virtual Pass *getAsPass() { return this; }$/;"	f	class:__anon3::CGPassManager
getAsPass	VMCore/PassManager.cpp	/^  virtual Pass *getAsPass() { return this; }$/;"	f	class:__anon614::BBPassManager
getAsPass	VMCore/PassManager.cpp	/^  virtual Pass *getAsPass() { return this; }$/;"	f	class:llvm::FunctionPassManagerImpl
getAsPass	VMCore/PassManager.cpp	/^  virtual Pass *getAsPass() { return this; }$/;"	f	class:llvm::MPPassManager
getAsPass	VMCore/PassManager.cpp	/^  virtual Pass *getAsPass() { return this; }$/;"	f	class:llvm::PassManagerImpl
getAsSignedInteger	Support/StringRef.cpp	/^bool llvm::getAsSignedInteger(StringRef Str, unsigned Radix,$/;"	f	class:llvm
getAsString	TableGen/Record.cpp	/^std::string BinOpInit::getAsString() const {$/;"	f	class:BinOpInit
getAsString	TableGen/Record.cpp	/^std::string BitsInit::getAsString() const {$/;"	f	class:BitsInit
getAsString	TableGen/Record.cpp	/^std::string BitsRecTy::getAsString() const {$/;"	f	class:BitsRecTy
getAsString	TableGen/Record.cpp	/^std::string DagInit::getAsString() const {$/;"	f	class:DagInit
getAsString	TableGen/Record.cpp	/^std::string DefInit::getAsString() const {$/;"	f	class:DefInit
getAsString	TableGen/Record.cpp	/^std::string IntInit::getAsString() const {$/;"	f	class:IntInit
getAsString	TableGen/Record.cpp	/^std::string ListInit::getAsString() const {$/;"	f	class:ListInit
getAsString	TableGen/Record.cpp	/^std::string ListRecTy::getAsString() const {$/;"	f	class:ListRecTy
getAsString	TableGen/Record.cpp	/^std::string RecordRecTy::getAsString() const {$/;"	f	class:RecordRecTy
getAsString	TableGen/Record.cpp	/^std::string TernOpInit::getAsString() const {$/;"	f	class:TernOpInit
getAsString	TableGen/Record.cpp	/^std::string UnOpInit::getAsString() const {$/;"	f	class:UnOpInit
getAsString	TableGen/Record.cpp	/^std::string VarBitInit::getAsString() const {$/;"	f	class:VarBitInit
getAsString	TableGen/Record.cpp	/^std::string VarListElementInit::getAsString() const {$/;"	f	class:VarListElementInit
getAsString	VMCore/Attributes.cpp	/^std::string Attributes::getAsString() const {$/;"	f	class:Attributes
getAsUnsignedInteger	Support/StringRef.cpp	/^bool llvm::getAsUnsignedInteger(StringRef Str, unsigned Radix,$/;"	f	class:llvm
getAsmInfo	MC/MCDisassembler/Disassembler.h	/^  const MCAsmInfo *getAsmInfo() const { return MAI.get(); }$/;"	f	class:llvm::LLVMDisasmContext
getAsmVerbosityDefault	Target/TargetMachine.cpp	/^bool TargetMachine::getAsmVerbosityDefault() {$/;"	f	class:TargetMachine
getAssemblerDialect	MC/MCParser/AsmParser.cpp	/^  virtual unsigned getAssemblerDialect() { $/;"	f	class:__anon211::AsmParser
getAssignments	CodeGen/RegisterCoalescer.cpp	/^  const int *getAssignments() const { return Assignments.data(); }$/;"	f	class:__anon115::JoinVals
getAssociatedLoop	Analysis/DependenceAnalysis.cpp	/^const Loop *DependenceAnalysis::Constraint::getAssociatedLoop() const {$/;"	f	class:DependenceAnalysis::Constraint
getAtom	MC/MCAssembler.cpp	/^const MCSymbolData *MCAssembler::getAtom(const MCSymbolData *SD) const {$/;"	f	class:MCAssembler
getAtomic	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getAtomic(unsigned Opcode, DebugLoc dl, EVT MemVT,$/;"	f	class:SelectionDAG
getAtomicLoadArithTargetConstant	Target/X86/X86ISelDAGToDAG.cpp	/^static SDValue getAtomicLoadArithTargetConstant(SelectionDAG *CurDAG,$/;"	f	file:
getAttrByIndex	DebugInfo/DWARFAbbreviationDeclaration.h	/^  uint16_t getAttrByIndex(uint32_t idx) const {$/;"	f	class:llvm::DWARFAbbreviationDeclaration
getAttrMask	VMCore/Attributes.cpp	/^uint64_t AttributesImpl::getAttrMask(uint64_t Val) {$/;"	f	class:AttributesImpl
getAttribute	CodeGen/AsmPrinter/DIE.h	/^    uint16_t getAttribute() const { return Attribute; }$/;"	f	class:llvm::DIEAbbrevData
getAttribute	DebugInfo/DWARFAttribute.h	/^  uint16_t getAttribute() const { return Attribute; }$/;"	f	class:llvm::DWARFAttribute
getAttributeID	Bitcode/Writer/ValueEnumerator.h	/^  unsigned getAttributeID(const AttrListPtr &PAL) const {$/;"	f	class:llvm::ValueEnumerator
getAttributeValue	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::getAttributeValue(const DWARFCompileUnit *cu,$/;"	f	class:DWARFDebugInfoEntryMinimal
getAttributeValueAsReference	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::getAttributeValueAsReference($/;"	f	class:DWARFDebugInfoEntryMinimal
getAttributeValueAsSigned	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::getAttributeValueAsSigned($/;"	f	class:DWARFDebugInfoEntryMinimal
getAttributeValueAsString	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::getAttributeValueAsString($/;"	f	class:DWARFDebugInfoEntryMinimal
getAttributeValueAsUnsigned	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::getAttributeValueAsUnsigned($/;"	f	class:DWARFDebugInfoEntryMinimal
getAttributes	Bitcode/Reader/BitcodeReader.h	/^  AttrListPtr getAttributes(unsigned i) const {$/;"	f	class:llvm::BitcodeReader
getAttributes	Bitcode/Writer/ValueEnumerator.h	/^  const std::vector<AttrListPtr> &getAttributes() const {$/;"	f	class:llvm::ValueEnumerator
getAttributes	DebugInfo/DWARFAbbreviationDeclaration.h	/^  const SmallVectorImpl<DWARFAttribute> &getAttributes() const {$/;"	f	class:llvm::DWARFAbbreviationDeclaration
getAttributes	VMCore/Attributes.cpp	/^Attributes AttrListPtr::getAttributes(unsigned Idx) const {$/;"	f	class:AttrListPtr
getAttributesAtIndex	VMCore/Attributes.cpp	/^Attributes &AttrListPtr::getAttributesAtIndex(unsigned i) const {$/;"	f	class:AttrListPtr
getAttributesSection	Target/ARM/ARMTargetObjectFile.h	/^  virtual const MCSection *getAttributesSection() const {$/;"	f	class:llvm::ARMElfTargetObjectFile
getAutoreleaseCallee	Transforms/Scalar/ObjCARC.cpp	/^Constant *ObjCARCOpt::getAutoreleaseCallee(Module *M) {$/;"	f	class:ObjCARCOpt
getAutoreleaseRVCallee	Transforms/Scalar/ObjCARC.cpp	/^Constant *ObjCARCOpt::getAutoreleaseRVCallee(Module *M) {$/;"	f	class:ObjCARCOpt
getAvailableVals	CodeGen/MachineSSAUpdater.cpp	/^static AvailableValsTy &getAvailableVals(void *AV) {$/;"	f	file:
getAvailableVals	Transforms/Utils/SSAUpdater.cpp	/^static AvailableValsTy &getAvailableVals(void *AV) {$/;"	f	file:
getB	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::Constraint::getB() const {$/;"	f	class:DependenceAnalysis::Constraint
getBBNode	Analysis/RegionInfo.cpp	/^RegionNode* Region::getBBNode(BasicBlock *BB) const {$/;"	f	class:Region
getBECount	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getBECount(const SCEV *Start,$/;"	f	class:ScalarEvolution
getBZeroEntry	Target/X86/X86Subtarget.cpp	/^const char *X86Subtarget::getBZeroEntry() const {$/;"	f	class:X86Subtarget
getBackedgeTakenCount	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getBackedgeTakenCount(const Loop *L) {$/;"	f	class:ScalarEvolution
getBackedgeTakenInfo	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getBackedgeTakenInfo(const Loop *L) {$/;"	f	class:ScalarEvolution
getBacktrace	Support/CrashRecoveryContext.cpp	/^const std::string &CrashRecoveryContext::getBacktrace() const {$/;"	f	class:CrashRecoveryContext
getBase	MC/MCDisassembler/Disassembler.cpp	/^  uint64_t getBase() const { return BasePC; }$/;"	f	class:__anon207::DisasmMemoryObject
getBase	MC/MCDisassembler/EDDisassembler.cpp	/^    uint64_t getBase() const { return 0x0; }$/;"	f	class:__anon204::EDMemoryObject
getBaseAddress	DebugInfo/DWARFCompileUnit.h	/^  uint64_t getBaseAddress() const { return BaseAddr; }$/;"	f	class:llvm::DWARFCompileUnit
getBaseOpcodeFor	Target/X86/MCTargetDesc/X86BaseInfo.h	/^  inline unsigned char getBaseOpcodeFor(uint64_t TSFlags) {$/;"	f	namespace:llvm::X86II
getBaseRegister	Target/ARM/ARMBaseRegisterInfo.h	/^  unsigned getBaseRegister() const { return BasePtr; }$/;"	f	class:llvm::ARMBaseRegisterInfo
getBaseRegister	Target/X86/X86RegisterInfo.h	/^  unsigned getBaseRegister() const { return BasePtr; }$/;"	f	class:llvm::X86RegisterInfo
getBasicBlock	Bitcode/Reader/BitcodeReader.h	/^  BasicBlock *getBasicBlock(unsigned ID) const {$/;"	f	class:llvm::BitcodeReader
getBasicBlock	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getBasicBlock(MachineBasicBlock *MBB) {$/;"	f	class:SelectionDAG
getBasicBlockAddressMap	ExecutionEngine/JIT/JIT.h	/^  getBasicBlockAddressMap(const MutexGuard &) {$/;"	f	class:llvm::JIT
getBasicBlockName	CodeGen/ShrinkWrapping.cpp	/^std::string PEI::getBasicBlockName(const MachineBasicBlock* MBB) {$/;"	f	class:PEI
getBasicBlocks	Bitcode/Writer/ValueEnumerator.h	/^  const std::vector<const BasicBlock*> &getBasicBlocks() const {$/;"	f	class:llvm::ValueEnumerator
getBinOpAbsorber	VMCore/Constants.cpp	/^Constant *ConstantExpr::getBinOpAbsorber(unsigned Opcode, Type *Ty) {$/;"	f	class:ConstantExpr
getBinOpIdentity	VMCore/Constants.cpp	/^Constant *ConstantExpr::getBinOpIdentity(unsigned Opcode, Type *Ty) {$/;"	f	class:ConstantExpr
getBinOpPrecedence	MC/MCParser/AsmParser.cpp	/^static unsigned getBinOpPrecedence(AsmToken::TokenKind K,$/;"	f	file:
getBit	TableGen/Record.cpp	/^Init *FieldInit::getBit(unsigned Bit) const {$/;"	f	class:FieldInit
getBit	TableGen/Record.cpp	/^Init *OpInit::getBit(unsigned Bit) const {$/;"	f	class:OpInit
getBit	TableGen/Record.cpp	/^Init *VarInit::getBit(unsigned Bit) const {$/;"	f	class:VarInit
getBit	TableGen/Record.cpp	/^Init *VarListElementInit::getBit(unsigned Bit) const {$/;"	f	class:VarListElementInit
getBitCast	VMCore/Constants.cpp	/^Constant *ConstantExpr::getBitCast(Constant *C, Type *DstTy) {$/;"	f	class:ConstantExpr
getBitWidth	Analysis/ValueTracking.cpp	/^static unsigned getBitWidth(Type *Ty, const DataLayout *TD) {$/;"	f	file:
getBitcodeTargetTriple	Bitcode/Reader/BitcodeReader.cpp	/^std::string llvm::getBitcodeTargetTriple(MemoryBuffer *Buffer,$/;"	f	class:llvm
getBitfieldInvertedMaskOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getBitfieldInvertedMaskOpValue(const MachineInstr &MI,$/;"	f	class:__anon297::ARMCodeEmitter	file:
getBitfieldInvertedMaskOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getBitfieldInvertedMaskOpValue(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getBitsNeeded	Support/APInt.cpp	/^unsigned APInt::getBitsNeeded(StringRef str, uint8_t radix) {$/;"	f	class:APInt
getBlock	Analysis/PathNumbering.cpp	/^BasicBlock* BallLarusNode::getBlock() {$/;"	f	class:BallLarusNode
getBlock	CodeGen/BranchFolding.h	/^      MachineBasicBlock *getBlock() const { return Block; }$/;"	f	class:llvm::BranchFolder::MergePotentialsElt
getBlock	CodeGen/BranchFolding.h	/^      MachineBasicBlock *getBlock() const {$/;"	f	class:llvm::BranchFolder::SameTailElt
getBlock	CodeGen/SelectionDAG/InstrEmitter.h	/^  MachineBasicBlock *getBlock() { return MBB; }$/;"	f	class:llvm::InstrEmitter
getBlock	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVBlock &getBlock(BasicBlock *BB) {$/;"	f	class:__anon490::GCOVFunction
getBlockAddress	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getBlockAddress(const BlockAddress *BA, EVT VT,$/;"	f	class:SelectionDAG
getBlockAddress	Target/ARM/ARMConstantPoolValue.cpp	/^const BlockAddress *ARMConstantPoolConstant::getBlockAddress() const {$/;"	f	class:ARMConstantPoolConstant
getBlockAfter	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    MemoryRangeHeader &getBlockAfter() const {$/;"	f	struct:__anon189::MemoryRangeHeader
getBlockDisposition	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getBlockDisposition(const SCEV *S, const BasicBlock *BB) {$/;"	f	class:ScalarEvolution
getBlockFreq	Analysis/BlockFrequencyInfo.cpp	/^BlockFrequency BlockFrequencyInfo::getBlockFreq(const BasicBlock *BB) const {$/;"	f	class:BlockFrequencyInfo
getBlockFreq	CodeGen/MachineBlockFrequencyInfo.cpp	/^getBlockFreq(const MachineBasicBlock *MBB) const {$/;"	f	class:MachineBlockFrequencyInfo
getBlockFrequency	CodeGen/SpillPlacement.h	/^  float getBlockFrequency(unsigned Number) const {$/;"	f	class:llvm::SpillPlacement
getBlockName	CodeGen/MachineBlockPlacement.cpp	/^static std::string getBlockName(MachineBasicBlock *BB) {$/;"	f	file:
getBlockNum	CodeGen/MachineBlockPlacement.cpp	/^static std::string getBlockNum(MachineBasicBlock *BB) {$/;"	f	file:
getBlockNum	CodeGen/MachineTraceMetrics.h	/^    unsigned getBlockNum() const { return &TBI - &TE.BlockInfo[0]; }$/;"	f	class:llvm::MachineTraceMetrics::Trace
getBlockSize	Transforms/Instrumentation/MaximumSpanningTree.h	/^      static bool getBlockSize(const T *X) {$/;"	f	struct:llvm::MaximumSpanningTree::EdgeWeightCompare
getBlockValue	Analysis/LazyValueInfo.cpp	/^LVILatticeVal LazyValueInfoCache::getBlockValue(Value *Val, BasicBlock *BB) {$/;"	f	class:LazyValueInfoCache
getBorrowGenerateShufMask	Target/CellSPU/SPUISelDAGToDAG.cpp	/^  SDValue getBorrowGenerateShufMask(SelectionDAG &DAG, DebugLoc dl) {$/;"	f	namespace:__anon414
getBottomBlock	CodeGen/MachineLoopInfo.cpp	/^MachineBasicBlock *MachineLoop::getBottomBlock() {$/;"	f	class:MachineLoop
getBranchDebugLoc	CodeGen/BranchFolding.cpp	/^static DebugLoc getBranchDebugLoc(MachineBasicBlock &MBB) {$/;"	f	file:
getBranchTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getBranchTargetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getBranchTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getBranchTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getBranchTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^static uint32_t getBranchTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	file:
getBranchTargetOpValue	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^getBranchTargetOpValue(const MCInst &MI, unsigned OpNo,$/;"	f	class:MipsMCCodeEmitter
getBranchTargetOpValue	Target/Mips/MipsCodeEmitter.cpp	/^unsigned MipsCodeEmitter::getBranchTargetOpValue(const MachineInstr &MI,$/;"	f	class:MipsCodeEmitter
getBroadcastInstrs	Transforms/Vectorize/LoopVectorize.cpp	/^Value *SingleBlockLoopVectorizer::getBroadcastInstrs(Value *V) {$/;"	f	class:__anon605::SingleBlockLoopVectorizer
getBuffer	Object/Archive.cpp	/^MemoryBuffer *Archive::Child::getBuffer() const {$/;"	f	class:Archive::Child
getBuildPairElt	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static SDNode *getBuildPairElt(SDNode *N, unsigned i) {$/;"	f	file:
getBundleSize	CodeGen/MachineInstr.cpp	/^unsigned MachineInstr::getBundleSize() const {$/;"	f	class:MachineInstr
getBundledDefMI	Target/ARM/ARMBaseInstrInfo.cpp	/^static const MachineInstr *getBundledDefMI(const TargetRegisterInfo *TRI,$/;"	f	file:
getBundledUseMI	Target/ARM/ARMBaseInstrInfo.cpp	/^static const MachineInstr *getBundledUseMI(const TargetRegisterInfo *TRI,$/;"	f	file:
getBundles	CodeGen/RegAllocGreedy.cpp	/^    unsigned getBundles(SmallVectorImpl<unsigned> &B, unsigned C) {$/;"	f	struct:__anon158::RAGreedy::GlobalSplitCandidate
getByValTypeAlignment	CodeGen/SelectionDAG/TargetLowering.cpp	/^unsigned TargetLowering::getByValTypeAlignment(Type *Ty) const {$/;"	f	class:TargetLowering
getByValTypeAlignment	Target/PowerPC/PPCISelLowering.cpp	/^unsigned PPCTargetLowering::getByValTypeAlignment(Type *Ty) const {$/;"	f	class:PPCTargetLowering
getByValTypeAlignment	Target/X86/X86ISelLowering.cpp	/^unsigned X86TargetLowering::getByValTypeAlignment(Type *Ty) const {$/;"	f	class:X86TargetLowering
getBytesInAddress	Object/COFFObjectFile.cpp	/^uint8_t COFFObjectFile::getBytesInAddress() const {$/;"	f	class:COFFObjectFile
getBytesInAddress	Object/MachOObjectFile.cpp	/^uint8_t MachOObjectFile::getBytesInAddress() const {$/;"	f	class:llvm::object::MachOObjectFile
getBytesToPopOnReturn	Target/X86/X86MachineFunctionInfo.h	/^  unsigned getBytesToPopOnReturn() const { return BytesToPopOnReturn; }$/;"	f	class:llvm::X86MachineFunctionInfo
getC	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::Constraint::getC() const {$/;"	f	class:DependenceAnalysis::Constraint
getCCOutOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getCCOutOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getCCOutOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  unsigned getCCOutOpValue(const MCInst &MI, unsigned Op,$/;"	f	class:__anon283::ARMMCCodeEmitter
getCFIPersonalitySymbol	CodeGen/TargetLoweringObjectFileImpl.cpp	/^TargetLoweringObjectFileELF::getCFIPersonalitySymbol(const GlobalValue *GV,$/;"	f	class:TargetLoweringObjectFileELF
getCFIPersonalitySymbol	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getCFIPersonalitySymbol(const GlobalValue *GV, Mangler *Mang,$/;"	f	class:TargetLoweringObjectFileMachO
getCFIPersonalitySymbol	Target/TargetLoweringObjectFile.cpp	/^getCFIPersonalitySymbol(const GlobalValue *GV, Mangler *Mang,$/;"	f	class:TargetLoweringObjectFile
getCFIPersonalitySymbol	Target/X86/X86TargetObjectFile.cpp	/^getCFIPersonalitySymbol(const GlobalValue *GV, Mangler *Mang,$/;"	f	class:X86_64MachoTargetObjectFile
getCMovFromCond	Target/X86/X86InstrInfo.cpp	/^static unsigned getCMovFromCond(X86::CondCode CC, unsigned RegBytes,$/;"	f	file:
getCOFFRelocation	Object/COFFObjectFile.cpp	/^const coff_relocation *COFFObjectFile::getCOFFRelocation($/;"	f	class:COFFObjectFile
getCOFFSection	MC/MCContext.cpp	/^const MCSection *MCContext::getCOFFSection(StringRef Section,$/;"	f	class:MCContext
getCOFFSection	Object/COFFObjectFile.cpp	/^const coff_section *COFFObjectFile::getCOFFSection(section_iterator &It) const {$/;"	f	class:COFFObjectFile
getCOFFSectionFlags	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getCOFFSectionFlags(SectionKind K) {$/;"	f	file:
getCOFFSectionPrefixForUniqueGlobal	CodeGen/TargetLoweringObjectFileImpl.cpp	/^static const char *getCOFFSectionPrefixForUniqueGlobal(SectionKind Kind) {$/;"	f	file:
getCOFFSymbol	Object/COFFObjectFile.cpp	/^const coff_symbol *COFFObjectFile::getCOFFSymbol(symbol_iterator &It) const {$/;"	f	class:COFFObjectFile
getCPELogAlign	Target/ARM/ARMConstantIslandPass.cpp	/^unsigned ARMConstantIslands::getCPELogAlign(const MachineInstr *CPEMI) {$/;"	f	class:ARMConstantIslands
getCPUString	Target/ARM/ARMSubtarget.h	/^  const std::string & getCPUString() const { return CPUString; }$/;"	f	class:llvm::ARMSubtarget
getCPUString	Target/Hexagon/HexagonSubtarget.h	/^  const std::string &getCPUString () const { return CPUString; }$/;"	f	class:llvm::HexagonSubtarget
getCRIdxForSetCC	Target/PowerPC/PPCISelDAGToDAG.cpp	/^static unsigned getCRIdxForSetCC(ISD::CondCode CC, bool &Invert, int &Other) {$/;"	f	file:
getCStr	Support/DataExtractor.cpp	/^const char *DataExtractor::getCStr(uint32_t *offset_ptr) const {$/;"	f	class:DataExtractor
getCUDie	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DIE* getCUDie()                   const { return CUDie.get(); }$/;"	f	class:llvm::CompileUnit
getCache	Analysis/LazyValueInfo.cpp	/^static LazyValueInfoCache &getCache(void *&PImpl) {$/;"	f	file:
getCache	Support/SourceMgr.cpp	/^static LineNoCacheTy *getCache(void *Ptr) {$/;"	f	file:
getCallFrameTypeAlignment	VMCore/DataLayout.cpp	/^unsigned DataLayout::getCallFrameTypeAlignment(Type *Ty) const {$/;"	f	class:DataLayout
getCallOperandValEVT	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^  EVT getCallOperandValEVT(LLVMContext &Context,$/;"	f	class:__anon83::SDISelAsmOperandInfo
getCallPhonyEdges	Transforms/Instrumentation/PathProfiling.cpp	/^BLEdgeVector BLInstrumentationDag::getCallPhonyEdges () {$/;"	f	class:BLInstrumentationDag
getCallPreservedMask	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::getCallPreservedMask(CallingConv::ID) const {$/;"	f	class:ARMBaseRegisterInfo
getCallPreservedMask	Target/Mips/MipsRegisterInfo.cpp	/^MipsRegisterInfo::getCallPreservedMask(CallingConv::ID) const {$/;"	f	class:MipsRegisterInfo
getCallPreservedMask	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::getCallPreservedMask(CallingConv::ID CC) const {$/;"	f	class:PPCRegisterInfo
getCallPreservedMask	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getCallPreservedMask(CallingConv::ID CC) const {$/;"	f	class:X86RegisterInfo
getCallSiteDependencyFrom	Analysis/MemoryDependenceAnalysis.cpp	/^getCallSiteDependencyFrom(CallSite CS, bool isReadOnlyCall,$/;"	f	class:MemoryDependenceAnalysis
getCalledFunction	Analysis/MemoryBuiltins.cpp	/^static Function *getCalledFunction(const Value *V, bool LookThroughBitCast) {$/;"	f	file:
getCallee	VMCore/Instructions.cpp	/^User::op_iterator CallSite::getCallee() const {$/;"	f	class:CallSite
getCalleeSaveSpillSlots	Target/CellSPU/SPUTargetMachine.cpp	/^SPUFrameLowering::getCalleeSaveSpillSlots(unsigned &NumEntries) const {$/;"	f	class:SPUFrameLowering
getCalleeSavedFrameSize	Target/MSP430/MSP430MachineFunctionInfo.h	/^  unsigned getCalleeSavedFrameSize() const { return CalleeSavedFrameSize; }$/;"	f	class:llvm::MSP430MachineFunctionInfo
getCalleeSavedFrameSize	Target/X86/X86MachineFunctionInfo.h	/^  unsigned getCalleeSavedFrameSize() const { return CalleeSavedFrameSize; }$/;"	f	class:llvm::X86MachineFunctionInfo
getCalleeSavedRegClasses	Target/Hexagon/HexagonRegisterInfo.cpp	/^HexagonRegisterInfo::getCalleeSavedRegClasses(const MachineFunction *MF) const {$/;"	f	class:HexagonRegisterInfo
getCalleeSavedRegClasses	Target/NVPTX/NVPTXRegisterInfo.cpp	/^NVPTXRegisterInfo::getCalleeSavedRegClasses(const MachineFunction *MF) const {$/;"	f	class:NVPTXRegisterInfo
getCalleeSavedRegs	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::getCalleeSavedRegs(const MachineFunction *MF) const {$/;"	f	class:ARMBaseRegisterInfo
getCalleeSavedRegs	Target/CellSPU/SPURegisterInfo.cpp	/^SPURegisterInfo::getCalleeSavedRegs(const MachineFunction *MF) const$/;"	f	class:SPURegisterInfo
getCalleeSavedRegs	Target/Hexagon/HexagonRegisterInfo.cpp	/^const uint16_t* HexagonRegisterInfo::getCalleeSavedRegs(const MachineFunction$/;"	f	class:HexagonRegisterInfo
getCalleeSavedRegs	Target/MBlaze/MBlazeRegisterInfo.cpp	/^getCalleeSavedRegs(const MachineFunction *MF) const {$/;"	f	class:MBlazeRegisterInfo
getCalleeSavedRegs	Target/MSP430/MSP430RegisterInfo.cpp	/^MSP430RegisterInfo::getCalleeSavedRegs(const MachineFunction *MF) const {$/;"	f	class:MSP430RegisterInfo
getCalleeSavedRegs	Target/Mips/MipsRegisterInfo.cpp	/^getCalleeSavedRegs(const MachineFunction *MF) const {$/;"	f	class:MipsRegisterInfo
getCalleeSavedRegs	Target/NVPTX/NVPTXRegisterInfo.cpp	/^getCalleeSavedRegs(const MachineFunction *MF) const {$/;"	f	class:NVPTXRegisterInfo
getCalleeSavedRegs	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::getCalleeSavedRegs(const MachineFunction *MF) const {$/;"	f	class:PPCRegisterInfo
getCalleeSavedRegs	Target/Sparc/SparcRegisterInfo.cpp	/^const uint16_t* SparcRegisterInfo::getCalleeSavedRegs(const MachineFunction *MF)$/;"	f	class:SparcRegisterInfo
getCalleeSavedRegs	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getCalleeSavedRegs(const MachineFunction *MF) const {$/;"	f	class:X86RegisterInfo
getCalleeSavedRegs	Target/XCore/XCoreRegisterInfo.cpp	/^const uint16_t* XCoreRegisterInfo::getCalleeSavedRegs(const MachineFunction *MF)$/;"	f	class:XCoreRegisterInfo
getCalleeSavedSpillSlots	Target/PowerPC/PPCFrameLowering.h	/^  getCalleeSavedSpillSlots(unsigned &NumEntries) const {$/;"	f	class:llvm::PPCFrameLowering
getCallerFrame	DebugInfo/DWARFDebugInfoEntry.cpp	/^void DWARFDebugInfoEntryMinimal::getCallerFrame($/;"	f	class:DWARFDebugInfoEntryMinimal
getCallingConv	Target/Hexagon/HexagonCallingConvLower.h	/^  unsigned getCallingConv() const { return CallingConv; }$/;"	f	class:llvm::Hexagon_CCState
getCallsExternalNode	Analysis/IPA/CallGraph.cpp	/^  CallGraphNode* getCallsExternalNode()   const { return CallsExternalNode; }$/;"	f	class:__anon2::BasicCallGraph
getCandidatePairs	Transforms/Vectorize/BBVectorize.cpp	/^  bool BBVectorize::getCandidatePairs(BasicBlock &BB,$/;"	f	class:__anon604::BBVectorize
getCanonicalInductionVariable	Analysis/LoopInfo.cpp	/^PHINode *Loop::getCanonicalInductionVariable() const {$/;"	f	class:Loop
getCanonicalInductionVariable	Target/Hexagon/HexagonHardwareLoops.cpp	/^*HexagonHardwareLoops::getCanonicalInductionVariable(MachineLoop *L) const {$/;"	f	class:HexagonHardwareLoops
getCanonicalInductionVariable	Target/PowerPC/PPCCTRLoops.cpp	/^PPCCTRLoops::getCanonicalInductionVariable(MachineLoop *L,$/;"	f	class:PPCCTRLoops
getCarryGenerateShufMask	Target/CellSPU/SPUISelDAGToDAG.cpp	/^  SDValue getCarryGenerateShufMask(SelectionDAG &DAG, DebugLoc dl) {$/;"	f	namespace:__anon414
getCast	VMCore/Constants.cpp	/^Constant *ConstantExpr::getCast(unsigned oc, Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getCastOpcode	VMCore/Instructions.cpp	/^CastInst::getCastOpcode($/;"	f	class:CastInst
getCastedInt8PtrValue	VMCore/IRBuilder.cpp	/^Value *IRBuilderBase::getCastedInt8PtrValue(Value *Ptr) {$/;"	f	class:IRBuilderBase
getChanged	Transforms/Scalar/LoopStrengthReduce.cpp	/^  bool getChanged() const { return Changed; }$/;"	f	class:__anon518::LSRInstance
getChildren	CodeGen/AsmPrinter/DIE.h	/^    const std::vector<DIE *> &getChildren() const { return Children; }$/;"	f	class:llvm::DIE
getChildrenFlag	CodeGen/AsmPrinter/DIE.h	/^    uint16_t getChildrenFlag() const { return ChildrenFlag; }$/;"	f	class:llvm::DIEAbbrev
getClearedMemory	Support/APInt.cpp	/^inline static uint64_t* getClearedMemory(unsigned numWords) {$/;"	f	file:
getClosestTargetForJIT	Support/TargetRegistry.cpp	/^const Target *TargetRegistry::getClosestTargetForJIT(std::string &Error) {$/;"	f	class:TargetRegistry
getCmpLibcallReturnType	CodeGen/SelectionDAG/TargetLowering.cpp	/^MVT::SimpleValueType TargetLowering::getCmpLibcallReturnType() const {$/;"	f	class:TargetLowering
getCmpXChgOpcode	Target/X86/X86ISelLowering.cpp	/^static unsigned getCmpXChgOpcode(EVT VT) {$/;"	f	file:
getCode	DebugInfo/DWARFAbbreviationDeclaration.h	/^  uint32_t getCode() const { return Code; }$/;"	f	class:llvm::DWARFAbbreviationDeclaration
getCode	TableGen/TGLexer.h	/^  tgtok::TokKind getCode() const { return CurCode; }$/;"	f	class:llvm::TGLexer
getCodeAddrSpace	Target/NVPTX/NVPTXISelDAGToDAG.cpp	/^getCodeAddrSpace(MemSDNode *N, const NVPTXSubtarget &Subtarget)$/;"	f	file:
getCodeEmitter	ExecutionEngine/JIT/JIT.h	/^  JITCodeEmitter *getCodeEmitter() const { return JCE; }$/;"	f	class:llvm::JIT
getCodeModel	Target/TargetMachine.cpp	/^CodeModel::Model TargetMachine::getCodeModel() const {$/;"	f	class:TargetMachine
getCoercedLoadValue	Transforms/Scalar/GVN.cpp	/^  LoadInst *getCoercedLoadValue() const {$/;"	f	struct:__anon538::AvailableValueInBlock
getColor	Analysis/PathNumbering.cpp	/^BallLarusNode::NodeColor BallLarusNode::getColor() {$/;"	f	class:BallLarusNode
getColumn	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned getColumn() const { return Column; }$/;"	f	class:llvm::SrcLineInfo
getCommonDomains	CodeGen/ExecutionDepsFix.cpp	/^  unsigned getCommonDomains(unsigned mask) const {$/;"	f	struct:__anon118::DomainValue
getCommonRegion	Analysis/RegionInfo.cpp	/^RegionInfo::getCommonRegion(Region *A, Region *B) const {$/;"	f	class:RegionInfo
getCommonRegion	Analysis/RegionInfo.cpp	/^RegionInfo::getCommonRegion(SmallVectorImpl<BasicBlock*> &BBs) const {$/;"	f	class:RegionInfo
getCommonRegion	Analysis/RegionInfo.cpp	/^RegionInfo::getCommonRegion(SmallVectorImpl<Region*> &Regions) const {$/;"	f	class:RegionInfo
getCommonReturnValue	Transforms/Scalar/TailRecursionElimination.cpp	/^static Value *getCommonReturnValue(ReturnInst *IgnoreRI, CallInst *CI) {$/;"	f	file:
getCommonSubClass	Target/TargetRegisterInfo.cpp	/^TargetRegisterInfo::getCommonSubClass(const TargetRegisterClass *A,$/;"	f	class:TargetRegisterInfo
getCommonSuperRegClass	Target/TargetRegisterInfo.cpp	/^getCommonSuperRegClass(const TargetRegisterClass *RCA, unsigned SubA,$/;"	f	class:TargetRegisterInfo
getCommonType	Transforms/Scalar/SROA.cpp	/^Type *AllocaPartitioning::getCommonType(iterator I) const {$/;"	f	class:AllocaPartitioning
getCompactUnwindEncoding	Target/X86/X86FrameLowering.cpp	/^uint32_t X86FrameLowering::getCompactUnwindEncoding(MachineFunction &MF) const {$/;"	f	class:X86FrameLowering
getCompactUnwindRegNum	Target/X86/X86FrameLowering.cpp	/^static int getCompactUnwindRegNum(const uint16_t *CURegs, unsigned Reg) {$/;"	f	file:
getCompactUnwindRegNum	Target/X86/X86RegisterInfo.cpp	/^int X86RegisterInfo::getCompactUnwindRegNum(unsigned RegNum, bool isEH) const {$/;"	f	class:X86RegisterInfo
getCompare	VMCore/Constants.cpp	/^Constant *ConstantExpr::getCompare(unsigned short Predicate, $/;"	f	class:ConstantExpr
getComparePred	Target/ARM/ARMFastISel.cpp	/^static ARMCC::CondCodes getComparePred(CmpInst::Predicate Pred) {$/;"	f	file:
getCompilationDir	DebugInfo/DWARFCompileUnit.cpp	/^const char *DWARFCompileUnit::getCompilationDir() {$/;"	f	class:DWARFCompileUnit
getCompileUnitAtIndex	DebugInfo/DWARFContext.h	/^  DWARFCompileUnit *getCompileUnitAtIndex(unsigned index) {$/;"	f	class:llvm::DWARFContext
getCompileUnitDIE	DebugInfo/DWARFCompileUnit.h	/^  getCompileUnitDIE(bool extract_cu_die_only = true) {$/;"	f	class:llvm::DWARFCompileUnit
getCompileUnitDIEOffset	DebugInfo/DWARFDebugArangeSet.h	/^  uint32_t getCompileUnitDIEOffset() const { return Header.CuOffset; }$/;"	f	class:llvm::DWARFDebugArangeSet
getCompileUnitForAddress	DebugInfo/DWARFContext.cpp	/^DWARFCompileUnit *DWARFContext::getCompileUnitForAddress(uint64_t Address) {$/;"	f	class:DWARFContext
getCompileUnitForOffset	DebugInfo/DWARFContext.cpp	/^DWARFCompileUnit *DWARFContext::getCompileUnitForOffset(uint32_t Offset) {$/;"	f	class:DWARFContext
getComplexity	Transforms/InstCombine/InstCombine.h	/^static inline unsigned getComplexity(Value *V) {$/;"	f	namespace:llvm
getConcreteOpcode	Target/X86/X86FloatingPoint.cpp	/^static unsigned getConcreteOpcode(unsigned Opcode) {$/;"	f	file:
getCondBrEncoding	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^unsigned PPCMCCodeEmitter::getCondBrEncoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:PPCMCCodeEmitter
getCondBrEncoding	Target/PowerPC/PPCCodeEmitter.cpp	/^unsigned PPCCodeEmitter::getCondBrEncoding(const MachineInstr &MI,$/;"	f	class:PPCCodeEmitter
getCondCode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getCondCode(ISD::CondCode Cond) {$/;"	f	class:SelectionDAG
getCondCode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  ARMCC::CondCodes getCondCode() const {$/;"	f	class:__anon261::ARMOperand
getCondFromBranchOpc	Target/X86/X86InstrInfo.cpp	/^static X86::CondCode getCondFromBranchOpc(unsigned BrOpc) {$/;"	f	file:
getCondFromCMovOpc	Target/X86/X86InstrInfo.cpp	/^X86::CondCode X86::getCondFromCMovOpc(unsigned Opc) {$/;"	f	class:X86
getCondFromSETOpc	Target/X86/X86InstrInfo.cpp	/^static X86::CondCode getCondFromSETOpc(unsigned Opc) {$/;"	f	file:
getConsecutiveVector	Transforms/Vectorize/LoopVectorize.cpp	/^Value *SingleBlockLoopVectorizer::getConsecutiveVector(Value* Val) {$/;"	f	class:__anon605::SingleBlockLoopVectorizer
getConst	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  const Value *getConst() { assert (kind==CONST); return u.Const; }$/;"	f	class:llvm::SDDbgValue
getConstant	Analysis/LazyValueInfo.cpp	/^  Constant *getConstant() const {$/;"	f	class:__anon18::LVILatticeVal
getConstant	Analysis/LazyValueInfo.cpp	/^Constant *LazyValueInfo::getConstant(Value *V, BasicBlock *BB) {$/;"	f	class:LazyValueInfo
getConstant	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getConstant(Type *Ty, uint64_t V, bool isSigned) {$/;"	f	class:ScalarEvolution
getConstant	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getConstant(ConstantInt *V) {$/;"	f	class:ScalarEvolution
getConstant	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getConstant(const APInt& Val) {$/;"	f	class:ScalarEvolution
getConstant	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getConstant(const APInt &Val, EVT VT, bool isT) {$/;"	f	class:SelectionDAG
getConstant	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getConstant(const ConstantInt &Val, EVT VT, bool isT) {$/;"	f	class:SelectionDAG
getConstant	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getConstant(uint64_t Val, EVT VT, bool isT) {$/;"	f	class:SelectionDAG
getConstant	Transforms/Scalar/SCCP.cpp	/^  Constant *getConstant() const {$/;"	f	class:__anon530::LatticeVal
getConstantEvolutionLoopExitValue	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getConstantEvolutionLoopExitValue(PHINode *PN,$/;"	f	class:ScalarEvolution
getConstantEvolvingPHI	Analysis/ScalarEvolution.cpp	/^static PHINode *getConstantEvolvingPHI(Value *V, const Loop *L) {$/;"	f	file:
getConstantEvolvingPHIOperands	Analysis/ScalarEvolution.cpp	/^getConstantEvolvingPHIOperands(Instruction *UseInst, const Loop *L,$/;"	f	file:
getConstantExprValue	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::getConstantExprValue (ConstantExpr *CE,$/;"	f	class:Interpreter
getConstantFP	CodeGen/AsmPrinter/DwarfDebug.h	/^  const ConstantFP *getConstantFP()   { return Constants.CFP; }$/;"	f	struct:llvm::DotDebugLocEntry
getConstantFP	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getConstantFP(const APFloat& V, EVT VT, bool isTarget) {$/;"	f	class:SelectionDAG
getConstantFP	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getConstantFP(const ConstantFP& V, EVT VT, bool isTarget){$/;"	f	class:SelectionDAG
getConstantFP	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getConstantFP(double Val, EVT VT, bool isTarget) {$/;"	f	class:SelectionDAG
getConstantField	VMCore/DebugInfo.cpp	/^Constant *DIDescriptor::getConstantField(unsigned Elt) const {$/;"	f	class:DIDescriptor
getConstantFwdRef	Bitcode/Reader/BitcodeReader.cpp	/^Constant *BitcodeReaderValueList::getConstantFwdRef(unsigned Idx,$/;"	f	class:BitcodeReaderValueList
getConstantInt	CodeGen/AsmPrinter/DwarfDebug.h	/^  const ConstantInt *getConstantInt() { return Constants.CIP; }$/;"	f	struct:llvm::DotDebugLocEntry
getConstantInt	Transforms/Scalar/SCCP.cpp	/^  ConstantInt *getConstantInt() const {$/;"	f	class:__anon530::LatticeVal
getConstantOnEdge	Analysis/LazyValueInfo.cpp	/^Constant *LazyValueInfo::getConstantOnEdge(Value *V, BasicBlock *FromBB,$/;"	f	class:LazyValueInfo
getConstantOperandVal	CodeGen/SelectionDAG/SelectionDAG.cpp	/^uint64_t SDNode::getConstantOperandVal(unsigned Num) const {$/;"	f	class:SDNode
getConstantPart	Analysis/DependenceAnalysis.cpp	/^const SCEVConstant *getConstantPart(const SCEVMulExpr *Product) {$/;"	f	file:
getConstantPool	CodeGen/MachineInstr.cpp	/^MachinePointerInfo MachinePointerInfo::getConstantPool() {$/;"	f	class:MachinePointerInfo
getConstantPool	CodeGen/PseudoSourceValue.cpp	/^const PseudoSourceValue *PseudoSourceValue::getConstantPool()$/;"	f	class:PseudoSourceValue
getConstantPool	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getConstantPool(MachineConstantPoolValue *C, EVT VT,$/;"	f	class:SelectionDAG
getConstantPool	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getConstantPool(const Constant *C, EVT VT,$/;"	f	class:SelectionDAG
getConstantPoolEntryAddr	Target/ARM/ARMJITInfo.h	/^    intptr_t getConstantPoolEntryAddr(unsigned CPI) const {$/;"	f	class:llvm::ARMJITInfo
getConstantPoolEntryAddress	ExecutionEngine/JIT/JITEmitter.cpp	/^uintptr_t JITEmitter::getConstantPoolEntryAddress(unsigned ConstantNum) const {$/;"	f	class:JITEmitter
getConstantPoolIndex	CodeGen/MachineFunction.cpp	/^unsigned MachineConstantPool::getConstantPoolIndex(MachineConstantPoolValue *V,$/;"	f	class:MachineConstantPool
getConstantPoolIndex	CodeGen/MachineFunction.cpp	/^unsigned MachineConstantPool::getConstantPoolIndex(const Constant *C, $/;"	f	class:MachineConstantPool
getConstantRange	Analysis/LazyValueInfo.cpp	/^  ConstantRange getConstantRange() const {$/;"	f	class:__anon18::LVILatticeVal
getConstantStringInfo	Analysis/ValueTracking.cpp	/^bool llvm::getConstantStringInfo(const Value *V, StringRef &Str,$/;"	f	class:llvm
getConstantValue	ExecutionEngine/ExecutionEngine.cpp	/^GenericValue ExecutionEngine::getConstantValue(const Constant *C) {$/;"	f	class:ExecutionEngine
getConstraintGenerality	CodeGen/SelectionDAG/TargetLowering.cpp	/^static unsigned getConstraintGenerality(TargetLowering::ConstraintType CT) {$/;"	f	file:
getConstraintType	CodeGen/SelectionDAG/TargetLowering.cpp	/^TargetLowering::getConstraintType(const std::string &Constraint) const {$/;"	f	class:TargetLowering
getConstraintType	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::getConstraintType(const std::string &Constraint) const {$/;"	f	class:ARMTargetLowering
getConstraintType	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::getConstraintType(const std::string &ConstraintLetter) const {$/;"	f	class:SPUTargetLowering
getConstraintType	Target/MBlaze/MBlazeISelLowering.cpp	/^getConstraintType(const std::string &Constraint) const$/;"	f	class:MBlazeTargetLowering
getConstraintType	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::getConstraintType(const std::string &Constraint) const {$/;"	f	class:MSP430TargetLowering
getConstraintType	Target/Mips/MipsISelLowering.cpp	/^getConstraintType(const std::string &Constraint) const$/;"	f	class:MipsTargetLowering
getConstraintType	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::getConstraintType(const std::string &Constraint) const {$/;"	f	class:NVPTXTargetLowering
getConstraintType	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::getConstraintType(const std::string &Constraint) const {$/;"	f	class:PPCTargetLowering
getConstraintType	Target/Sparc/SparcISelLowering.cpp	/^SparcTargetLowering::getConstraintType(const std::string &Constraint) const {$/;"	f	class:SparcTargetLowering
getConstraintType	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::getConstraintType(const std::string &Constraint) const {$/;"	f	class:X86TargetLowering
getContainedManager	VMCore/PassManager.cpp	/^  FPPassManager *getContainedManager(unsigned N) {$/;"	f	class:llvm::FunctionPassManagerImpl
getContainedManager	VMCore/PassManager.cpp	/^  MPPassManager *getContainedManager(unsigned N) {$/;"	f	class:llvm::PassManagerImpl
getContainedPass	Analysis/IPA/CallGraphSCCPass.cpp	/^  Pass *getContainedPass(unsigned N) {$/;"	f	class:__anon3::CGPassManager
getContainedPass	VMCore/PassManager.cpp	/^  BasicBlockPass *getContainedPass(unsigned N) {$/;"	f	class:__anon614::BBPassManager
getContainedPass	VMCore/PassManager.cpp	/^  ModulePass *getContainedPass(unsigned N) {$/;"	f	class:llvm::MPPassManager
getContext	AsmParser/LLParser.h	/^    LLVMContext &getContext() { return Context; }$/;"	f	class:llvm::LLParser
getContext	DebugInfo/DWARFCompileUnit.h	/^  DWARFContext &getContext() const { return Context; }$/;"	f	class:llvm::DWARFCompileUnit
getContext	MC/MCParser/AsmParser.cpp	/^  virtual MCContext &getContext() { return Ctx; }$/;"	f	class:__anon211::AsmParser
getContext	Target/Hexagon/HexagonCallingConvLower.h	/^  LLVMContext &getContext() const { return Context; }$/;"	f	class:llvm::Hexagon_CCState
getContext	VMCore/BasicBlock.cpp	/^LLVMContext &BasicBlock::getContext() const {$/;"	f	class:BasicBlock
getContext	VMCore/Function.cpp	/^LLVMContext &Function::getContext() const {$/;"	f	class:Function
getContext	VMCore/Value.cpp	/^LLVMContext &Value::getContext() const { return VTy->getContext(); }$/;"	f	class:Value
getControlRoot	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SDValue SelectionDAGBuilder::getControlRoot() {$/;"	f	class:SelectionDAGBuilder
getConvertRndSat	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getConvertRndSat(EVT VT, DebugLoc dl,$/;"	f	class:SelectionDAG
getCoproc	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  unsigned getCoproc() const {$/;"	f	class:__anon261::ARMOperand
getCopyFromParts	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static SDValue getCopyFromParts(SelectionDAG &DAG, DebugLoc DL,$/;"	f	file:
getCopyFromPartsVector	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static SDValue getCopyFromPartsVector(SelectionDAG &DAG, DebugLoc DL,$/;"	f	file:
getCopyFromRegs	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SDValue RegsForValue::getCopyFromRegs(SelectionDAG &DAG,$/;"	f	class:RegsForValue
getCopyToParts	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static void getCopyToParts(SelectionDAG &DAG, DebugLoc DL,$/;"	f	file:
getCopyToPartsVector	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static void getCopyToPartsVector(SelectionDAG &DAG, DebugLoc DL,$/;"	f	file:
getCopyToRegs	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void RegsForValue::getCopyToRegs(SDValue Val, SelectionDAG &DAG, DebugLoc dl,$/;"	f	class:RegsForValue
getCorrespondingDRegAndLane	Target/ARM/ARMBaseInstrInfo.cpp	/^static unsigned getCorrespondingDRegAndLane(const TargetRegisterInfo *TRI,$/;"	f	file:
getCost	Analysis/InlineCost.cpp	/^  int getCost() { return Cost; }$/;"	f	class:__anon28::CallAnalyzer
getCouldNotCompute	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getCouldNotCompute() {$/;"	f	class:ScalarEvolution
getCounterArray	Transforms/Instrumentation/PathProfiling.cpp	/^GlobalVariable* BLInstrumentationDag::getCounterArray() {$/;"	f	class:BLInstrumentationDag
getCppName	Target/CppBackend/CPPBackend.cpp	/^std::string CppWriter::getCppName(Type* Ty) {$/;"	f	class:CppWriter
getCppName	Target/CppBackend/CPPBackend.cpp	/^std::string CppWriter::getCppName(const Value* val) {$/;"	f	class:CppWriter
getCriticalPath	CodeGen/MachineTraceMetrics.h	/^    unsigned getCriticalPath() const { return TBI.CriticalPath; }$/;"	f	class:llvm::MachineTraceMetrics::Trace
getCrossCopyRegClass	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::getCrossCopyRegClass(const TargetRegisterClass *RC) const {$/;"	f	class:ARMBaseRegisterInfo
getCrossCopyRegClass	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getCrossCopyRegClass(const TargetRegisterClass *RC) const {$/;"	f	class:X86RegisterInfo
getCurDebugLoc	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  DebugLoc getCurDebugLoc() const { return CurDebugLoc; }$/;"	f	class:llvm::SelectionDAGBuilder
getCurIntVal	TableGen/TGLexer.h	/^  int64_t getCurIntVal() const {$/;"	f	class:llvm::TGLexer
getCurPreheader	CodeGen/MachineLICM.cpp	/^MachineBasicBlock *MachineLICM::getCurPreheader() {$/;"	f	class:MachineLICM
getCurStrVal	TableGen/TGLexer.h	/^  const std::string &getCurStrVal() const {$/;"	f	class:llvm::TGLexer
getCurr	CodeGen/ScheduleDAGInstrs.cpp	/^  const SUnit *getCurr() const { return DFSStack.back().first; }$/;"	f	class:__anon110::SchedDAGReverseDFS
getCurrentABIString	Target/Mips/MipsAsmPrinter.cpp	/^const char *MipsAsmPrinter::getCurrentABIString() const {$/;"	f	class:MipsAsmPrinter
getCurrentFragment	MC/MCObjectStreamer.cpp	/^MCFragment *MCObjectStreamer::getCurrentFragment() const {$/;"	f	class:MCObjectStreamer
getCurrentFrameInfo	MC/MCStreamer.cpp	/^MCDwarfFrameInfo *MCStreamer::getCurrentFrameInfo() {$/;"	f	class:MCStreamer
getCurrentFunction	Analysis/PathProfileInfo.cpp	/^Function* PathProfileInfo::getCurrentFunction() const {$/;"	f	class:PathProfileInfo
getCurrentFunctionEntry	Analysis/PathProfileInfo.cpp	/^BasicBlock* PathProfileInfo::getCurrentFunctionEntry() {$/;"	f	class:PathProfileInfo
getCurrentFunctionReturnType	VMCore/IRBuilder.cpp	/^Type *IRBuilderBase::getCurrentFunctionReturnType() const {$/;"	f	class:IRBuilderBase
getCurrentSection	CodeGen/AsmPrinter/AsmPrinter.cpp	/^const MCSection *AsmPrinter::getCurrentSection() const {$/;"	f	class:AsmPrinter
getCurrentTime	Support/Timer.cpp	/^TimeRecord TimeRecord::getCurrentTime(bool Start) {$/;"	f	class:TimeRecord
getCustomGraphFeatures	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^void ScheduleDAGSDNodes::getCustomGraphFeatures(GraphWriter<ScheduleDAG*> &GW) const {$/;"	f	class:ScheduleDAGSDNodes
getD	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::Constraint::getD() const {$/;"	f	class:DependenceAnalysis::Constraint
getDAG	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    SelectionDAG &getDAG() const { return DAG; }$/;"	f	class:__anon68::DAGCombiner
getDAG	CodeGen/SelectionDAG/LegalizeTypes.h	/^  SelectionDAG &getDAG() const { return DAG; }$/;"	f	class:llvm::DAGTypeLegalizer
getDAGName	CodeGen/ScheduleDAGInstrs.cpp	/^std::string ScheduleDAGInstrs::getDAGName() const {$/;"	f	class:ScheduleDAGInstrs
getDAGName	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^std::string ScheduleDAGSDNodes::getDAGName() const {$/;"	f	class:ScheduleDAGSDNodes
getDI	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    const DbgValueInst* getDI() { return DI; }$/;"	f	class:llvm::SelectionDAGBuilder::DanglingDebugInfo
getDICompositeType	VMCore/DebugInfo.cpp	/^DICompositeType llvm::getDICompositeType(DIType T) {$/;"	f	class:llvm
getDIE	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DIE *getDIE(const MDNode *N) { return MDNodeToDieMap.lookup(N); }$/;"	f	class:llvm::CompileUnit
getDIE	CodeGen/AsmPrinter/DwarfDebug.h	/^  DIE *getDIE()                      const { return TheDIE; }$/;"	f	class:llvm::DbgVariable
getDIEBlock	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DIEBlock *getDIEBlock() { $/;"	f	class:llvm::CompileUnit
getDIEEntry	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DIEEntry *getDIEEntry(const MDNode *N) {$/;"	f	class:llvm::CompileUnit
getDISubprogram	VMCore/DebugInfo.cpp	/^DISubprogram llvm::getDISubprogram(const MDNode *Scope) {$/;"	f	class:llvm
getDPRCalleeSavedAreaOffset	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getDPRCalleeSavedAreaOffset()  const { return DPRCSOffset; }$/;"	f	class:llvm::ARMFunctionInfo
getDPRCalleeSavedAreaSize	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getDPRCalleeSavedAreaSize()  const { return DPRCSSize; }$/;"	f	class:llvm::ARMFunctionInfo
getDRegFromQReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static unsigned getDRegFromQReg(unsigned QReg) {$/;"	f	file:
getDWARFContext	DebugInfo/DIContext.cpp	/^DIContext *DIContext::getDWARFContext(bool isLittleEndian,$/;"	f	class:DIContext
getDarwinDirective	Target/PowerPC/PPCSubtarget.h	/^  unsigned getDarwinDirective() const { return DarwinDirective; }$/;"	f	class:llvm::PPCSubtarget
getData	CodeGen/AsmPrinter/DIE.h	/^    const SmallVector<DIEAbbrevData, 8> &getData() const { return Data; }$/;"	f	class:llvm::DIEAbbrev
getData	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual StringRef getData() const { return ObjFile->getData(); }$/;"	f	class:llvm::ObjectImageCommon
getData	Object/Binary.cpp	/^StringRef Binary::getData() const {$/;"	f	class:Binary
getData	Object/MachOObject.cpp	/^StringRef MachOObject::getData(size_t Offset, size_t Size) const {$/;"	f	class:MachOObject
getDataAlignmentFactor	MC/MCDwarf.cpp	/^static int getDataAlignmentFactor(MCStreamer &streamer) {$/;"	f	file:
getDataDeps	CodeGen/MachineTraceMetrics.cpp	/^static bool getDataDeps(const MachineInstr *UseMI,$/;"	f	file:
getDataFileStreamer	Support/DataStream.cpp	/^DataStreamer *getDataFileStreamer(const std::string &Filename,$/;"	f	namespace:llvm
getDataLayout	CodeGen/AsmPrinter/AsmPrinter.cpp	/^const DataLayout &AsmPrinter::getDataLayout() const {$/;"	f	class:AsmPrinter
getDataLayout	Target/ARM/ARMTargetMachine.h	/^  virtual const DataLayout       *getDataLayout() const { return &DL; }$/;"	f	class:llvm::ARMTargetMachine
getDataLayout	Target/ARM/ARMTargetMachine.h	/^  virtual const DataLayout       *getDataLayout() const { return &DL; }$/;"	f	class:llvm::ThumbTargetMachine
getDataLayout	Target/CellSPU/SPUTargetMachine.h	/^  virtual const DataLayout *getDataLayout() const {$/;"	f	class:llvm::SPUTargetMachine
getDataLayout	Target/CppBackend/CPPTargetMachine.h	/^  virtual const DataLayout *getDataLayout() const { return 0; }$/;"	f	struct:llvm::CPPTargetMachine
getDataLayout	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const DataLayout       *getDataLayout() const { return &DL; }$/;"	f	class:llvm::HexagonTargetMachine
getDataLayout	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const DataLayout *getDataLayout() const$/;"	f	class:llvm::MBlazeTargetMachine
getDataLayout	Target/MSP430/MSP430TargetMachine.h	/^  virtual const DataLayout *getDataLayout() const     { return &DL;}$/;"	f	class:llvm::MSP430TargetMachine
getDataLayout	Target/Mips/MipsTargetMachine.h	/^  virtual const DataLayout *getDataLayout()    const$/;"	f	class:llvm::MipsTargetMachine
getDataLayout	Target/NVPTX/NVPTXSubtarget.h	/^  std::string getDataLayout() const {$/;"	f	class:llvm::NVPTXSubtarget
getDataLayout	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual const DataLayout *getDataLayout() const     { return &DL;}$/;"	f	class:llvm::NVPTXTargetMachine
getDataLayout	Target/PowerPC/PPCTargetMachine.h	/^  virtual const DataLayout    *getDataLayout() const    { return &DL; }$/;"	f	class:llvm::PPCTargetMachine
getDataLayout	Target/Sparc/SparcSubtarget.h	/^  std::string getDataLayout() const {$/;"	f	class:llvm::SparcSubtarget
getDataLayout	Target/Sparc/SparcTargetMachine.h	/^  virtual const DataLayout       *getDataLayout() const { return &DL; }$/;"	f	class:llvm::SparcTargetMachine
getDataLayout	Target/X86/X86TargetMachine.h	/^  virtual const DataLayout *getDataLayout() const { return &DL; }$/;"	f	class:llvm::X86_32TargetMachine
getDataLayout	Target/X86/X86TargetMachine.h	/^  virtual const DataLayout *getDataLayout() const { return &DL; }$/;"	f	class:llvm::X86_64TargetMachine
getDataLayout	Target/XCore/XCoreTargetMachine.h	/^  virtual const DataLayout       *getDataLayout() const { return &DL; }$/;"	f	class:llvm::XCoreTargetMachine
getDataLayout	Transforms/InstCombine/InstCombine.h	/^  DataLayout *getDataLayout() const { return TD; }$/;"	f	class:llvm::InstCombiner
getDataLayout	Transforms/Scalar/GVN.cpp	/^    const DataLayout *getDataLayout() const { return TD; }$/;"	f	class:__anon537::GVN
getDataLayoutString	Target/CellSPU/SPUSubtarget.h	/^    const char *getDataLayoutString() const {$/;"	f	class:llvm::SPUSubtarget
getDataLayoutString	Target/PowerPC/PPCSubtarget.h	/^  const char *getDataLayoutString() const {$/;"	f	class:llvm::PPCSubtarget
getDataSections	Target/TargetMachine.cpp	/^bool TargetMachine::getDataSections() {$/;"	f	class:TargetMachine
getDbgValue	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getDbgValue(MDNode *MDPtr, SDNode *N, unsigned R, uint64_t Off,$/;"	f	class:SelectionDAG
getDbgValue	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getDbgValue(MDNode *MDPtr, const Value *C, uint64_t Off,$/;"	f	class:SelectionDAG
getDbgValue	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getDbgValue(MDNode *MDPtr, unsigned FI, uint64_t Off,$/;"	f	class:SelectionDAG
getDebugAbbrev	DebugInfo/DWARFContext.cpp	/^const DWARFDebugAbbrev *DWARFContext::getDebugAbbrev() {$/;"	f	class:DWARFContext
getDebugAranges	DebugInfo/DWARFContext.cpp	/^const DWARFDebugAranges *DWARFContext::getDebugAranges() {$/;"	f	class:DWARFContext
getDebugInfoExtractor	DebugInfo/DWARFCompileUnit.cpp	/^DataExtractor DWARFCompileUnit::getDebugInfoExtractor() const {$/;"	f	class:DWARFCompileUnit
getDebugInfoSize	DebugInfo/DWARFCompileUnit.h	/^  size_t getDebugInfoSize() const { return Length + 4 - getSize(); }$/;"	f	class:llvm::DWARFCompileUnit
getDebugLoc	CodeGen/LiveDebugVariables.cpp	/^  DebugLoc getDebugLoc() { return dl;}$/;"	f	class:__anon152::UserValue
getDebugLoc	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  DebugLoc getDebugLoc() { return DL; }$/;"	f	class:llvm::SDDbgValue
getDebugLocEntry	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static DotDebugLocEntry getDebugLocEntry(AsmPrinter *Asm, $/;"	f	file:
getDebugValueLocation	CodeGen/AsmPrinter/AsmPrinter.cpp	/^getDebugValueLocation(const MachineInstr *MI) const {$/;"	f	class:AsmPrinter
getDebugValueLocation	Target/ARM/ARMAsmPrinter.cpp	/^getDebugValueLocation(const MachineInstr *MI) const {$/;"	f	class:ARMAsmPrinter
getDebugValueLocation	Target/Mips/MipsAsmPrinter.cpp	/^MipsAsmPrinter::getDebugValueLocation(const MachineInstr *MI) const {$/;"	f	class:MipsAsmPrinter
getDebugValueLocation	Target/PowerPC/PPCAsmPrinter.cpp	/^    MachineLocation getDebugValueLocation(const MachineInstr *MI) const {$/;"	f	class:__anon330::PPCAsmPrinter
getDebugValueLocation	Target/Sparc/SparcAsmPrinter.cpp	/^getDebugValueLocation(const MachineInstr *MI) const {$/;"	f	class:SparcAsmPrinter
getDebugValueLocation	Target/X86/X86AsmPrinter.cpp	/^X86AsmPrinter::getDebugValueLocation(const MachineInstr *MI) const {$/;"	f	class:X86AsmPrinter
getDebugValueLocation	Target/XCore/XCoreAsmPrinter.cpp	/^getDebugValueLocation(const MachineInstr *MI) const {$/;"	f	class:XCoreAsmPrinter
getDeclaration	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^Function *MBlazeIntrinsicInfo::getDeclaration(Module *M, unsigned IntrID,$/;"	f	class:MBlazeIntrinsicInfo
getDeclaration	VMCore/Function.cpp	/^Function *Intrinsic::getDeclaration(Module *M, ID id, ArrayRef<Type*> Tys) {$/;"	f	class:Intrinsic
getDefInit	TableGen/Record.cpp	/^DefInit *Record::getDefInit() {$/;"	f	class:Record
getDefLatency	CodeGen/TargetSchedule.cpp	/^int TargetSchedModel::getDefLatency(const MachineInstr *DefMI,$/;"	f	class:TargetSchedModel
getDefReg	Target/ARM/MLxExpansionPass.cpp	/^unsigned MLxExpansion::getDefReg(MachineInstr *MI) const {$/;"	f	class:MLxExpansion
getDefaultAddendForRelTy	Target/ARM/ARMELFWriterInfo.cpp	/^long int ARMELFWriterInfo::getDefaultAddendForRelTy(unsigned RelTy,$/;"	f	class:ARMELFWriterInfo
getDefaultAddendForRelTy	Target/MBlaze/MBlazeELFWriterInfo.cpp	/^long int MBlazeELFWriterInfo::getDefaultAddendForRelTy(unsigned RelTy,$/;"	f	class:MBlazeELFWriterInfo
getDefaultAddendForRelTy	Target/Mips/MipsELFWriterInfo.cpp	/^long int MipsELFWriterInfo::getDefaultAddendForRelTy(unsigned RelTy,$/;"	f	class:MipsELFWriterInfo
getDefaultAddendForRelTy	Target/X86/X86ELFWriterInfo.cpp	/^long int X86ELFWriterInfo::getDefaultAddendForRelTy(unsigned RelTy,$/;"	f	class:X86ELFWriterInfo
getDefaultSubtargetFeatures	MC/SubtargetFeature.cpp	/^void SubtargetFeatures::getDefaultSubtargetFeatures(const Triple& Triple) {$/;"	f	class:SubtargetFeatures
getDefaultTimerGroup	Support/Timer.cpp	/^static TimerGroup *getDefaultTimerGroup() {$/;"	f	file:
getDependencies	TableGen/TGLexer.h	/^  const std::vector<std::string> &getDependencies() const {$/;"	f	class:llvm::TGLexer
getDependencies	TableGen/TGParser.h	/^  const std::vector<std::string> &getDependencies() const {$/;"	f	class:llvm::TGParser
getDependency	Analysis/MemoryDependenceAnalysis.cpp	/^MemDepResult MemoryDependenceAnalysis::getDependency(Instruction *QueryInst) {$/;"	f	class:MemoryDependenceAnalysis
getDepth	Analysis/RegionInfo.cpp	/^unsigned Region::getDepth() const {$/;"	f	class:Region
getDepthFactor	Transforms/Vectorize/BBVectorize.cpp	/^    inline size_t getDepthFactor(Value *V) {$/;"	f	struct:__anon604::BBVectorize
getDepthResources	CodeGen/MachineTraceMetrics.cpp	/^getDepthResources(const MachineBasicBlock *MBB) const {$/;"	f	class:MachineTraceMetrics::Ensemble
getDescription	Transforms/IPO/DeadArgumentElimination.cpp	/^      std::string getDescription() const {$/;"	f	struct:__anon600::DAE::RetOrArg
getDescriptor	DebugInfo/DWARFDebugArangeSet.h	/^  const Descriptor *getDescriptor(uint32_t i) const {$/;"	f	class:llvm::DWARFDebugArangeSet
getDescriptorField	VMCore/DebugInfo.cpp	/^DIDescriptor DIDescriptor::getDescriptorField(unsigned Elt) const {$/;"	f	class:DIDescriptor
getDigit	Support/APInt.cpp	/^inline static unsigned getDigit(char cdigit, uint8_t radix) {$/;"	f	file:
getDirectBrEncoding	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^getDirectBrEncoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:PPCMCCodeEmitter
getDirectBrEncoding	Target/PowerPC/PPCCodeEmitter.cpp	/^unsigned PPCCodeEmitter::getDirectBrEncoding(const MachineInstr &MI,$/;"	f	class:PPCCodeEmitter
getDirection	Analysis/DependenceAnalysis.cpp	/^unsigned FullDependence::getDirection(unsigned Level) const {$/;"	f	class:FullDependence
getDirectory	VMCore/DebugInfo.cpp	/^StringRef DIScope::getDirectory() const {$/;"	f	class:DIScope
getDirnameCharSep	Support/Path.cpp	/^static StringRef getDirnameCharSep(StringRef path, const char *Sep) {$/;"	f	file:
getDisAsm	MC/MCDisassembler/Disassembler.h	/^  const MCDisassembler *getDisAsm() const { return DisAsm.get(); }$/;"	f	class:llvm::LLVMDisasmContext
getDisInfo	MC/MCDisassembler/Disassembler.h	/^  void *getDisInfo() const { return DisInfo; }$/;"	f	class:llvm::LLVMDisasmContext
getDisassembler	MC/MCDisassembler/EDDisassembler.cpp	/^EDDisassembler *EDDisassembler::getDisassembler(StringRef str,$/;"	f	class:EDDisassembler
getDisassembler	MC/MCDisassembler/EDDisassembler.cpp	/^EDDisassembler *EDDisassembler::getDisassembler(Triple::ArchType arch,$/;"	f	class:EDDisassembler
getDistance	Analysis/DependenceAnalysis.cpp	/^const SCEV *FullDependence::getDistance(unsigned Level) const {$/;"	f	class:FullDependence
getDominatorTree	Transforms/Scalar/GVN.cpp	/^    DominatorTree &getDominatorTree() const { return *DT; }$/;"	f	class:__anon537::GVN
getDotDebugLocOffset	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned getDotDebugLocOffset()    const { return DotDebugLocOffset; }$/;"	f	class:llvm::DbgVariable
getDoublePtrTy	VMCore/Type.cpp	/^PointerType *Type::getDoublePtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getDoubleRegPair	Target/Sparc/FPMover.cpp	/^static void getDoubleRegPair(unsigned DoubleReg, unsigned &EvenReg,$/;"	f	file:
getDoubleTy	VMCore/Type.cpp	/^Type *Type::getDoubleTy(LLVMContext &C) { return &C.pImpl->DoubleTy; }$/;"	f	class:Type
getDownwardPressure	CodeGen/RegisterPressure.cpp	/^getDownwardPressure(const MachineInstr *MI,$/;"	f	class:RegPressureTracker
getDrvInterface	Target/NVPTX/NVPTXSubtarget.h	/^  NVPTX::DrvInterface getDrvInterface() const { return drvInterface; }$/;"	f	class:llvm::NVPTXSubtarget
getDstIdx	CodeGen/RegisterCoalescer.h	/^    unsigned getDstIdx() const { return DstIdx; }$/;"	f	class:llvm::CoalescerPair
getDstOfOnlyCopyToRegUse	CodeGen/SelectionDAG/InstrEmitter.cpp	/^unsigned InstrEmitter::getDstOfOnlyCopyToRegUse(SDNode *Node,$/;"	f	class:InstrEmitter
getDstReg	CodeGen/RegisterCoalescer.h	/^    unsigned getDstReg() const { return DstReg; }$/;"	f	class:llvm::CoalescerPair
getDuplicateNumber	Analysis/PathNumbering.cpp	/^unsigned BallLarusEdge::getDuplicateNumber() {$/;"	f	class:BallLarusEdge
getDwarfRegFlavour	Target/X86/MCTargetDesc/X86MCTargetDesc.cpp	/^unsigned X86_MC::getDwarfRegFlavour(StringRef TT, bool isEH) {$/;"	f	class:X86_MC
getDwarfRegNum	MC/MCRegisterInfo.cpp	/^int MCRegisterInfo::getDwarfRegNum(unsigned RegNum, bool isEH) const {$/;"	f	class:MCRegisterInfo
getDwarfRegNum	Target/NVPTX/NVPTXRegisterInfo.cpp	/^getDwarfRegNum(unsigned RegNum, bool isEH) const {$/;"	f	class:NVPTXRegisterInfo
getEDInfo	Target/ARM/Disassembler/ARMDisassembler.cpp	/^const EDInstInfo *ARMDisassembler::getEDInfo() const {$/;"	f	class:ARMDisassembler
getEDInfo	Target/ARM/Disassembler/ARMDisassembler.cpp	/^const EDInstInfo *ThumbDisassembler::getEDInfo() const {$/;"	f	class:ThumbDisassembler
getEDInfo	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^const EDInstInfo *MBlazeDisassembler::getEDInfo() const {$/;"	f	class:MBlazeDisassembler
getEDInfo	Target/Mips/Disassembler/MipsDisassembler.cpp	/^const EDInstInfo *MipsDisassemblerBase::getEDInfo() const {$/;"	f	class:MipsDisassemblerBase
getEDInfo	Target/X86/Disassembler/X86Disassembler.cpp	/^const EDInstInfo *X86GenericDisassembler::getEDInfo() const {$/;"	f	class:X86GenericDisassembler
getEFlags	MC/ELFObjectWriter.cpp	/^    unsigned getEFlags() const {$/;"	f	class:__anon225::ELFObjectWriter
getEFlags	MC/MCELFObjectTargetWriter.cpp	/^unsigned MCELFObjectTargetWriter::getEFlags() const {$/;"	f	class:MCELFObjectTargetWriter
getEFlags	Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp	/^unsigned ARMELFObjectWriter::getEFlags() const {$/;"	f	class:ARMELFObjectWriter
getEFlags	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^unsigned MipsELFObjectWriter::getEFlags() const {$/;"	f	class:MipsELFObjectWriter
getEHExceptionRegister	Target/ARM/ARMBaseRegisterInfo.cpp	/^unsigned ARMBaseRegisterInfo::getEHExceptionRegister() const {$/;"	f	class:ARMBaseRegisterInfo
getEHExceptionRegister	Target/Hexagon/HexagonRegisterInfo.cpp	/^unsigned HexagonRegisterInfo::getEHExceptionRegister() const {$/;"	f	class:HexagonRegisterInfo
getEHExceptionRegister	Target/MBlaze/MBlazeRegisterInfo.cpp	/^unsigned MBlazeRegisterInfo::getEHExceptionRegister() const {$/;"	f	class:MBlazeRegisterInfo
getEHExceptionRegister	Target/Mips/MipsRegisterInfo.cpp	/^getEHExceptionRegister() const {$/;"	f	class:MipsRegisterInfo
getEHExceptionRegister	Target/PowerPC/PPCRegisterInfo.cpp	/^unsigned PPCRegisterInfo::getEHExceptionRegister() const {$/;"	f	class:PPCRegisterInfo
getEHExceptionRegister	Target/Sparc/SparcRegisterInfo.cpp	/^unsigned SparcRegisterInfo::getEHExceptionRegister() const {$/;"	f	class:SparcRegisterInfo
getEHExceptionRegister	Target/X86/X86RegisterInfo.cpp	/^unsigned X86RegisterInfo::getEHExceptionRegister() const {$/;"	f	class:X86RegisterInfo
getEHHandlerRegister	Target/ARM/ARMBaseRegisterInfo.cpp	/^unsigned ARMBaseRegisterInfo::getEHHandlerRegister() const {$/;"	f	class:ARMBaseRegisterInfo
getEHHandlerRegister	Target/Hexagon/HexagonRegisterInfo.cpp	/^unsigned HexagonRegisterInfo::getEHHandlerRegister() const {$/;"	f	class:HexagonRegisterInfo
getEHHandlerRegister	Target/MBlaze/MBlazeRegisterInfo.cpp	/^unsigned MBlazeRegisterInfo::getEHHandlerRegister() const {$/;"	f	class:MBlazeRegisterInfo
getEHHandlerRegister	Target/Mips/MipsRegisterInfo.cpp	/^getEHHandlerRegister() const {$/;"	f	class:MipsRegisterInfo
getEHHandlerRegister	Target/PowerPC/PPCRegisterInfo.cpp	/^unsigned PPCRegisterInfo::getEHHandlerRegister() const {$/;"	f	class:PPCRegisterInfo
getEHHandlerRegister	Target/Sparc/SparcRegisterInfo.cpp	/^unsigned SparcRegisterInfo::getEHHandlerRegister() const {$/;"	f	class:SparcRegisterInfo
getEHHandlerRegister	Target/X86/X86RegisterInfo.cpp	/^unsigned X86RegisterInfo::getEHHandlerRegister() const {$/;"	f	class:X86RegisterInfo
getEHLabel	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getEHLabel(DebugLoc dl, SDValue Root, MCSymbol *Label) {$/;"	f	class:SelectionDAG
getELFKindForNamedSection	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getELFKindForNamedSection(StringRef Name, SectionKind K) {$/;"	f	file:
getELFSection	MC/MCContext.cpp	/^getELFSection(StringRef Section, unsigned Type, unsigned Flags,$/;"	f	class:MCContext
getELFSectionFlags	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getELFSectionFlags(SectionKind K) {$/;"	f	file:
getELFSectionType	CodeGen/TargetLoweringObjectFileImpl.cpp	/^static unsigned getELFSectionType(StringRef Name, SectionKind K) {$/;"	f	file:
getELFWriterInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMELFWriterInfo *getELFWriterInfo() const {$/;"	f	class:llvm::ARMTargetMachine
getELFWriterInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMELFWriterInfo *getELFWriterInfo() const {$/;"	f	class:llvm::ThumbTargetMachine
getELFWriterInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const MBlazeELFWriterInfo *getELFWriterInfo() const {$/;"	f	class:llvm::MBlazeTargetMachine
getELFWriterInfo	Target/Mips/MipsTargetMachine.h	/^  virtual const MipsELFWriterInfo *getELFWriterInfo() const {$/;"	f	class:llvm::MipsTargetMachine
getELFWriterInfo	Target/X86/X86TargetMachine.h	/^  virtual const X86ELFWriterInfo *getELFWriterInfo() const {$/;"	f	class:llvm::X86TargetMachine
getEVT	VMCore/ValueTypes.cpp	/^EVT EVT::getEVT(Type *Ty, bool HandleUnknown){$/;"	f	class:EVT
getEVTAlignment	CodeGen/SelectionDAG/SelectionDAG.cpp	/^unsigned SelectionDAG::getEVTAlignment(EVT VT) const {$/;"	f	class:SelectionDAG
getEVTString	VMCore/ValueTypes.cpp	/^std::string EVT::getEVTString() const {$/;"	f	class:EVT
getEdgeAttributes	Analysis/RegionPrinter.cpp	/^  std::string getEdgeAttributes(RegionNode *srcNode,$/;"	f	struct:llvm::DOTGraphTraits
getEdgeAttributes	CodeGen/ScheduleDAGPrinter.cpp	/^    static std::string getEdgeAttributes(const SUnit *Node,$/;"	f	struct:llvm::DOTGraphTraits
getEdgeAttributes	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static std::string getEdgeAttributes(const void *Node, EdgeIter EI,$/;"	f	struct:llvm::DOTGraphTraits
getEdgeDestLabel	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static std::string getEdgeDestLabel(const void *Node, unsigned i) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeProbability	Analysis/BranchProbabilityInfo.cpp	/^getEdgeProbability(const BasicBlock *Src, const BasicBlock *Dst) const {$/;"	f	class:BranchProbabilityInfo
getEdgeProbability	Analysis/BranchProbabilityInfo.cpp	/^getEdgeProbability(const BasicBlock *Src, unsigned IndexInSuccessors) const {$/;"	f	class:BranchProbabilityInfo
getEdgeProbability	CodeGen/MachineBranchProbabilityInfo.cpp	/^MachineBranchProbabilityInfo::getEdgeProbability(MachineBasicBlock *Src,$/;"	f	class:MachineBranchProbabilityInfo
getEdgeSourceLabel	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static std::string getEdgeSourceLabel(const void *Node, EdgeIter I) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeStateValue	Transforms/Instrumentation/GCOVProfiling.cpp	/^GlobalVariable *GCOVProfiler::getEdgeStateValue() {$/;"	f	class:GCOVProfiler
getEdgeTarget	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static EdgeIter getEdgeTarget(const void *Node, EdgeIter I) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeValue	Analysis/LazyValueInfo.cpp	/^bool LazyValueInfoCache::getEdgeValue(Value *Val, BasicBlock *BBFrom,$/;"	f	class:LazyValueInfoCache
getEdgeValueLocal	Analysis/LazyValueInfo.cpp	/^static bool getEdgeValueLocal(Value *Val, BasicBlock *BBFrom,$/;"	f	file:
getEdgeWeight	Analysis/BranchProbabilityInfo.cpp	/^getEdgeWeight(const BasicBlock *Src, const BasicBlock *Dst) const {$/;"	f	class:BranchProbabilityInfo
getEdgeWeight	Analysis/BranchProbabilityInfo.cpp	/^getEdgeWeight(const BasicBlock *Src, unsigned IndexInSuccessors) const {$/;"	f	class:BranchProbabilityInfo
getEdgeWeight	CodeGen/MachineBranchProbabilityInfo.cpp	/^getEdgeWeight(const MachineBasicBlock *Src,$/;"	f	class:MachineBranchProbabilityInfo
getEdgeWeight	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^uint32_t SelectionDAGBuilder::getEdgeWeight(const MachineBasicBlock *Src,$/;"	f	class:SelectionDAGBuilder
getEffectiveSCEVType	Analysis/ScalarEvolution.cpp	/^Type *ScalarEvolution::getEffectiveSCEVType(Type *Ty) const {$/;"	f	class:ScalarEvolution
getElementAsAPFloat	VMCore/Constants.cpp	/^APFloat ConstantDataSequential::getElementAsAPFloat(unsigned Elt) const {$/;"	f	class:ConstantDataSequential
getElementAsConstant	VMCore/Constants.cpp	/^Constant *ConstantDataSequential::getElementAsConstant(unsigned Elt) const {$/;"	f	class:ConstantDataSequential
getElementAsDouble	VMCore/Constants.cpp	/^double ConstantDataSequential::getElementAsDouble(unsigned Elt) const {$/;"	f	class:ConstantDataSequential
getElementAsFloat	VMCore/Constants.cpp	/^float ConstantDataSequential::getElementAsFloat(unsigned Elt) const {$/;"	f	class:ConstantDataSequential
getElementAsInteger	VMCore/Constants.cpp	/^uint64_t ConstantDataSequential::getElementAsInteger(unsigned Elt) const {$/;"	f	class:ConstantDataSequential
getElementAsRecord	TableGen/Record.cpp	/^Record *ListInit::getElementAsRecord(unsigned i) const {$/;"	f	class:ListInit
getElementByteSize	VMCore/Constants.cpp	/^uint64_t ConstantDataSequential::getElementByteSize() const {$/;"	f	class:ConstantDataSequential
getElementContainingOffset	VMCore/DataLayout.cpp	/^unsigned StructLayout::getElementContainingOffset(uint64_t Offset) const {$/;"	f	class:StructLayout
getElementPointer	VMCore/Constants.cpp	/^const char *ConstantDataSequential::getElementPointer(unsigned Elt) const {$/;"	f	class:ConstantDataSequential
getElementType	VMCore/Constants.cpp	/^Type *ConstantDataSequential::getElementType() const {$/;"	f	class:ConstantDataSequential
getElementValue	VMCore/Constants.cpp	/^Constant *ConstantAggregateZero::getElementValue(Constant *C) const {$/;"	f	class:ConstantAggregateZero
getElementValue	VMCore/Constants.cpp	/^Constant *ConstantAggregateZero::getElementValue(unsigned Idx) const {$/;"	f	class:ConstantAggregateZero
getElementValue	VMCore/Constants.cpp	/^UndefValue *UndefValue::getElementValue(Constant *C) const {$/;"	f	class:UndefValue
getElementValue	VMCore/Constants.cpp	/^UndefValue *UndefValue::getElementValue(unsigned Idx) const {$/;"	f	class:UndefValue
getEmitArcsFunc	Transforms/Instrumentation/GCOVProfiling.cpp	/^Constant *GCOVProfiler::getEmitArcsFunc() {$/;"	f	class:GCOVProfiler
getEmitFunctionFunc	Transforms/Instrumentation/GCOVProfiling.cpp	/^Constant *GCOVProfiler::getEmitFunctionFunc() {$/;"	f	class:GCOVProfiler
getEmitNOAT	Target/Mips/MipsMachineFunction.h	/^  bool getEmitNOAT() const { return EmitNOAT; }$/;"	f	class:llvm::MipsFunctionInfo
getEmptyKey	MC/MCDwarf.cpp	/^    static CIEKey getEmptyKey() {$/;"	f	struct:llvm::DenseMapInfo
getEmptyKey	MC/MCDwarf.cpp	/^    static const CIEKey getEmptyKey() { return CIEKey(0, 0, -1, false); }$/;"	f	struct:__anon224::CIEKey
getEmptyKey	TableGen/Record.cpp	/^  static inline TableGenStringKey getEmptyKey() {$/;"	f	struct:llvm::DenseMapInfo
getEmptyKey	Transforms/IPO/MergeFunctions.cpp	/^    static ComparableFunction getEmptyKey() {$/;"	f	struct:llvm::DenseMapInfo
getEmptyKey	Transforms/InstCombine/InstCombinePHI.cpp	/^    static inline LoweredPHIRecord getEmptyKey() {$/;"	f	struct:llvm::DenseMapInfo
getEmptyKey	Transforms/Scalar/EarlyCSE.cpp	/^    static inline CallValue getEmptyKey() {$/;"	f	struct:llvm::DenseMapInfo
getEmptyKey	Transforms/Scalar/EarlyCSE.cpp	/^  static inline SimpleValue getEmptyKey() {$/;"	f	struct:llvm::DenseMapInfo
getEmptyKey	Transforms/Scalar/GVN.cpp	/^  static inline Expression getEmptyKey() {$/;"	f	struct:llvm::DenseMapInfo
getEmptyKey	Transforms/Scalar/LoopStrengthReduce.cpp	/^  static SmallVector<const SCEV *, 2> getEmptyKey() {$/;"	f	struct:__anon517::UniquifierDenseMapInfo
getEmptyKey	Transforms/Scalar/LoopStrengthReduce.cpp	/^  static std::pair<const SCEV *, LSRUse::KindType> getEmptyKey() {$/;"	f	struct:__anon518::UseMapDenseMapInfo
getEmptyKey	Transforms/Utils/BypassSlowDivision.cpp	/^    static DivOpInfo getEmptyKey() {$/;"	f	struct:llvm::DenseMapInfo
getEmptyKey	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  static inline EltTy getEmptyKey() {$/;"	f	struct:llvm::DenseMapInfo
getEmptyKey	VMCore/ConstantsContext.h	/^    static inline ConstantClass* getEmptyKey() {$/;"	f	struct:llvm::ConstantAggrUniqueMap::MapInfo
getEmptyKey	VMCore/LLVMContextImpl.h	/^  static inline FunctionType* getEmptyKey() {$/;"	f	struct:llvm::FunctionTypeKeyInfo
getEmptyKey	VMCore/LLVMContextImpl.h	/^  static inline KeyTy getEmptyKey() { $/;"	f	struct:llvm::DenseMapAPFloatKeyInfo
getEmptyKey	VMCore/LLVMContextImpl.h	/^  static inline KeyTy getEmptyKey() { return KeyTy(APInt(1,0), 0); }$/;"	f	struct:llvm::DenseMapAPIntKeyInfo
getEmptyKey	VMCore/LLVMContextImpl.h	/^  static inline StructType* getEmptyKey() {$/;"	f	struct:llvm::AnonStructTypeKeyInfo
getEncodedLinkage	Bitcode/Writer/BitcodeWriter.cpp	/^static unsigned getEncodedLinkage(const GlobalValue *GV) {$/;"	f	file:
getEncodedThreadLocalMode	Bitcode/Writer/BitcodeWriter.cpp	/^static unsigned getEncodedThreadLocalMode(const GlobalVariable *GV) {$/;"	f	file:
getEncodedVisibility	Bitcode/Writer/BitcodeWriter.cpp	/^static unsigned getEncodedVisibility(const GlobalValue *GV) {$/;"	f	file:
getEndAddress	DebugInfo/DWARFDebugArangeSet.h	/^    uint64_t getEndAddress() const { return Address + Length; }$/;"	f	struct:llvm::DWARFDebugArangeSet::Descriptor
getEndFileFunc	Transforms/Instrumentation/GCOVProfiling.cpp	/^Constant *GCOVProfiler::getEndFileFunc() {$/;"	f	class:GCOVProfiler
getEndLoc	MC/MCParser/MCAsmLexer.cpp	/^SMLoc AsmToken::getEndLoc() const {$/;"	f	class:AsmToken
getEndLoc	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  SMLoc getEndLoc() const { return EndLoc; }$/;"	f	class:__anon261::ARMOperand
getEndLoc	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  SMLoc getEndLoc() const { return EndLoc; }$/;"	f	struct:__anon446::MBlazeOperand
getEndLoc	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  SMLoc getEndLoc() const { return EndLoc; }$/;"	f	class:__anon423::MipsOperand
getEndLoc	Target/X86/AsmParser/X86AsmParser.cpp	/^  SMLoc getEndLoc() const { return EndLoc; }$/;"	f	struct:__anon336::X86Operand
getEndianness	VMCore/Module.cpp	/^Module::Endianness Module::getEndianness() const {$/;"	f	class:Module
getEndingPathNumber	Transforms/Instrumentation/PathProfiling.cpp	/^Value* BLInstrumentationNode::getEndingPathNumber(){$/;"	f	class:BLInstrumentationNode
getEnsemble	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::getEnsemble(MachineTraceMetrics::Strategy strategy) {$/;"	f	class:MachineTraceMetrics
getEnteringBlock	Analysis/RegionInfo.cpp	/^BasicBlock *Region::getEnteringBlock() const {$/;"	f	class:Region
getEntry	CodeGen/AsmPrinter/DIE.h	/^    DIE *getEntry() const { return Entry; }$/;"	f	class:llvm::DIEEntry
getEntryAlignment	CodeGen/MachineFunction.cpp	/^unsigned MachineJumpTableInfo::getEntryAlignment(const DataLayout &TD) const {$/;"	f	class:MachineJumpTableInfo
getEntryNode	Transforms/IPO/FunctionAttrs.cpp	/^    ArgumentGraphNode *getEntryNode() { return &SyntheticRoot; }$/;"	f	class:__anon579::ArgumentGraph
getEntryNode	Transforms/IPO/FunctionAttrs.cpp	/^    static NodeType *getEntryNode(ArgumentGraph *AG) {$/;"	f	struct:llvm::GraphTraits
getEntryNode	Transforms/IPO/FunctionAttrs.cpp	/^    static inline NodeType *getEntryNode(NodeType *A) { return A; }$/;"	f	struct:llvm::GraphTraits
getEntrySize	CodeGen/MachineFunction.cpp	/^unsigned MachineJumpTableInfo::getEntrySize(const DataLayout &TD) const {$/;"	f	class:MachineJumpTableInfo
getEnumTypes	VMCore/DebugInfo.cpp	/^DIArray DICompileUnit::getEnumTypes() const {$/;"	f	class:DICompileUnit
getEnvironmentName	Support/Triple.cpp	/^StringRef Triple::getEnvironmentName() const {$/;"	f	class:Triple
getEnvironmentTypeName	Support/Triple.cpp	/^const char *Triple::getEnvironmentTypeName(EnvironmentType Kind) {$/;"	f	class:Triple
getErrorString	Bitcode/Reader/BitcodeReader.h	/^  const char *getErrorString() const { return ErrorString; }$/;"	f	class:llvm::BitcodeReader
getErrorString	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^StringRef RuntimeDyld::getErrorString() {$/;"	f	class:llvm::RuntimeDyld
getErrorString	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  StringRef getErrorString() { return ErrorStr; }$/;"	f	class:llvm::RuntimeDyldImpl
getExact	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::BackedgeTakenInfo::getExact(BasicBlock *ExitingBlock,$/;"	f	class:ScalarEvolution::BackedgeTakenInfo
getExact	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::BackedgeTakenInfo::getExact(ScalarEvolution *SE) const {$/;"	f	class:ScalarEvolution::BackedgeTakenInfo
getExactInverse	Support/APFloat.cpp	/^bool APFloat::getExactInverse(APFloat *inv) const {$/;"	f	class:APFloat
getExactSDiv	Transforms/Scalar/LoopStrengthReduce.cpp	/^static const SCEV *getExactSDiv(const SCEV *LHS, const SCEV *RHS,$/;"	f	file:
getExecutionCount	Analysis/ProfileInfo.cpp	/^        getExecutionCount(const MachineBasicBlock *MBB) {$/;"	f	class:llvm::ProfileInfoT
getExecutionCount	Analysis/ProfileInfo.cpp	/^        getExecutionCount(const MachineFunction *MF) {$/;"	f	class:llvm::ProfileInfoT
getExecutionCount	Analysis/ProfileInfo.cpp	/^ProfileInfoT<Function,BasicBlock>::getExecutionCount(const BasicBlock *BB) {$/;"	f	class:llvm::ProfileInfoT
getExecutionCount	Analysis/ProfileInfo.cpp	/^double ProfileInfoT<Function,BasicBlock>::getExecutionCount(const Function *F) {$/;"	f	class:llvm::ProfileInfoT
getExecutionDomain	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::getExecutionDomain(const MachineInstr *MI) const {$/;"	f	class:ARMBaseInstrInfo
getExecutionDomain	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::getExecutionDomain(const MachineInstr *MI) const {$/;"	f	class:X86InstrInfo
getExistingMachineCPValue	Target/ARM/ARMConstantPoolValue.cpp	/^int ARMConstantPoolConstant::getExistingMachineCPValue(MachineConstantPool *CP,$/;"	f	class:ARMConstantPoolConstant
getExistingMachineCPValue	Target/ARM/ARMConstantPoolValue.cpp	/^int ARMConstantPoolMBB::getExistingMachineCPValue(MachineConstantPool *CP,$/;"	f	class:ARMConstantPoolMBB
getExistingMachineCPValue	Target/ARM/ARMConstantPoolValue.cpp	/^int ARMConstantPoolSymbol::getExistingMachineCPValue(MachineConstantPool *CP,$/;"	f	class:ARMConstantPoolSymbol
getExistingMachineCPValue	Target/ARM/ARMConstantPoolValue.cpp	/^int ARMConstantPoolValue::getExistingMachineCPValue(MachineConstantPool *CP,$/;"	f	class:ARMConstantPoolValue
getExit	Analysis/PathNumbering.cpp	/^BallLarusNode* BallLarusDag::getExit() {$/;"	f	class:BallLarusDag
getExitCount	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getExitCount(Loop *L, BasicBlock *ExitingBlock) {$/;"	f	class:ScalarEvolution
getExitRootEdge	Transforms/Instrumentation/PathProfiling.cpp	/^BallLarusEdge* BLInstrumentationDag::getExitRootEdge() {$/;"	f	class:BLInstrumentationDag
getExitingBlock	Analysis/RegionInfo.cpp	/^BasicBlock *Region::getExitingBlock() const {$/;"	f	class:Region
getExpandedRegion	Analysis/RegionInfo.cpp	/^Region *Region::getExpandedRegion() const {$/;"	f	class:Region
getExplicitSectionGlobal	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getExplicitSectionGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:TargetLoweringObjectFileCOFF
getExplicitSectionGlobal	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getExplicitSectionGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:TargetLoweringObjectFileELF
getExplicitSectionGlobal	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getExplicitSectionGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:TargetLoweringObjectFileMachO
getExplicitSectionGlobal	Target/NVPTX/NVPTXTargetObjectFile.h	/^  getExplicitSectionGlobal(const GlobalValue *GV, SectionKind Kind,$/;"	f	class:llvm::NVPTXTargetObjectFile
getExpr	Analysis/IVUsers.cpp	/^const SCEV *IVUsers::getExpr(const IVStrideUse &IU) const {$/;"	f	class:IVUsers
getExprBase	Transforms/Scalar/LoopStrengthReduce.cpp	/^static const SCEV *getExprBase(const SCEV *S) {$/;"	f	file:
getExprForDwarfGlobalReference	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getExprForDwarfGlobalReference(const GlobalValue *GV, Mangler *Mang,$/;"	f	class:TargetLoweringObjectFileELF
getExprForDwarfGlobalReference	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getExprForDwarfGlobalReference(const GlobalValue *GV, Mangler *Mang,$/;"	f	class:TargetLoweringObjectFileMachO
getExprForDwarfGlobalReference	Target/TargetLoweringObjectFile.cpp	/^getExprForDwarfGlobalReference(const GlobalValue *GV, Mangler *Mang,$/;"	f	class:TargetLoweringObjectFile
getExprForDwarfGlobalReference	Target/X86/X86TargetObjectFile.cpp	/^getExprForDwarfGlobalReference(const GlobalValue *GV, Mangler *Mang,$/;"	f	class:X86_64MachoTargetObjectFile
getExprForDwarfReference	Target/TargetLoweringObjectFile.cpp	/^getExprForDwarfReference(const MCSymbol *Sym, unsigned Encoding,$/;"	f	class:TargetLoweringObjectFile
getExprForFDESymbol	MC/MCAsmInfo.cpp	/^MCAsmInfo::getExprForFDESymbol(const MCSymbol *Sym,$/;"	f	class:MCAsmInfo
getExprForPersonalitySymbol	MC/MCAsmInfo.cpp	/^MCAsmInfo::getExprForPersonalitySymbol(const MCSymbol *Sym,$/;"	f	class:MCAsmInfo
getExprForPersonalitySymbol	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^X86_64MCAsmInfoDarwin::getExprForPersonalitySymbol(const MCSymbol *Sym,$/;"	f	class:X86_64MCAsmInfoDarwin
getExtLoad	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getExtLoad(ISD::LoadExtType ExtType, DebugLoc dl, EVT VT,$/;"	f	class:SelectionDAG
getExtSymb	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::getExtSymb(SelectionDAG &DAG, const char *inname, int idx,$/;"	f	class:NVPTXTargetLowering
getExtend	Transforms/Scalar/IndVarSimplify.cpp	/^Value *WidenIV::getExtend(Value *NarrowOper, Type *WideType, bool IsSigned,$/;"	f	class:WidenIV
getExtendedIntegerVT	VMCore/ValueTypes.cpp	/^EVT EVT::getExtendedIntegerVT(LLVMContext &Context, unsigned BitWidth) {$/;"	f	class:EVT
getExtendedSizeInBits	VMCore/ValueTypes.cpp	/^unsigned EVT::getExtendedSizeInBits() const {$/;"	f	class:EVT
getExtendedVectorElementType	VMCore/ValueTypes.cpp	/^EVT EVT::getExtendedVectorElementType() const {$/;"	f	class:EVT
getExtendedVectorNumElements	VMCore/ValueTypes.cpp	/^unsigned EVT::getExtendedVectorNumElements() const {$/;"	f	class:EVT
getExtendedVectorVT	VMCore/ValueTypes.cpp	/^EVT EVT::getExtendedVectorVT(LLVMContext &Context, EVT VT,$/;"	f	class:EVT
getExtent	MC/MCDisassembler/Disassembler.cpp	/^  uint64_t getExtent() const { return Size; }$/;"	f	class:__anon207::DisasmMemoryObject
getExtent	MC/MCDisassembler/EDDisassembler.cpp	/^    uint64_t getExtent() const { return (uint64_t)-1; }$/;"	f	class:__anon204::EDMemoryObject
getExtent	Support/StreamableMemoryObject.cpp	/^uint64_t StreamingMemoryObject::getExtent() const {$/;"	f	class:llvm::StreamingMemoryObject
getExternalCallingNode	Analysis/IPA/CallGraph.cpp	/^  CallGraphNode* getExternalCallingNode() const { return ExternalCallingNode; }$/;"	f	class:__anon2::BasicCallGraph
getExternalFunctionStub	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITResolver::getExternalFunctionStub(void *FnAddr) {$/;"	f	class:JITResolver
getExternalSymbol	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getExternalSymbol(const char *Sym, EVT VT) {$/;"	f	class:SelectionDAG
getExtractElement	VMCore/Constants.cpp	/^Constant *ConstantExpr::getExtractElement(Constant *Val, Constant *Idx) {$/;"	f	class:ConstantExpr
getExtractVEXTRACTF128Immediate	Target/X86/X86ISelLowering.cpp	/^unsigned X86::getExtractVEXTRACTF128Immediate(SDNode *N) {$/;"	f	class:X86
getExtractValue	VMCore/Constants.cpp	/^Constant *ConstantExpr::getExtractValue(Constant *Agg,$/;"	f	class:ConstantExpr
getF32Constant	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^getF32Constant(SelectionDAG &DAG, unsigned Flt) {$/;"	f	file:
getFAdd	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFAdd(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getFCmp	VMCore/Constants.cpp	/^ConstantExpr::getFCmp(unsigned short pred, Constant *LHS, Constant *RHS) {$/;"	f	class:ConstantExpr
getFCmpCode	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static unsigned getFCmpCode(FCmpInst::Predicate CC, bool &isOrdered) {$/;"	f	file:
getFCmpCodeWithoutNaN	CodeGen/Analysis.cpp	/^ISD::CondCode llvm::getFCmpCodeWithoutNaN(ISD::CondCode CC) {$/;"	f	class:llvm
getFCmpCondCode	CodeGen/Analysis.cpp	/^ISD::CondCode llvm::getFCmpCondCode(FCmpInst::Predicate Pred) {$/;"	f	class:llvm
getFCmpValue	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static Value *getFCmpValue(bool isordered, unsigned code,$/;"	f	file:
getFDiv	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFDiv(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getFLAGS	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned getFLAGS(int32_t insn) {$/;"	f	file:
getFLUSHW	Target/Sparc/SparcISelLowering.cpp	/^static SDValue getFLUSHW(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
getFMul	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFMul(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getFNeg	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFNeg(Constant *C) {$/;"	f	class:ConstantExpr
getFNegArgument	VMCore/Instructions.cpp	/^Value *BinaryOperator::getFNegArgument(Value *BinOp) {$/;"	f	class:BinaryOperator
getFNegArgument	VMCore/Instructions.cpp	/^const Value *BinaryOperator::getFNegArgument(const Value *BinOp) {$/;"	f	class:BinaryOperator
getFP128PtrTy	VMCore/Type.cpp	/^PointerType *Type::getFP128PtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getFP128Ty	VMCore/Type.cpp	/^Type *Type::getFP128Ty(LLVMContext &C) { return &C.pImpl->FP128Ty; }$/;"	f	class:Type
getFP32Imm	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline int getFP32Imm(const APFloat &FPImm) {$/;"	f	namespace:llvm::ARM_AM
getFP32Imm	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline int getFP32Imm(const APInt &Imm) {$/;"	f	namespace:llvm::ARM_AM
getFP64Imm	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline int getFP64Imm(const APFloat &FPImm) {$/;"	f	namespace:llvm::ARM_AM
getFP64Imm	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline int getFP64Imm(const APInt &Imm) {$/;"	f	namespace:llvm::ARM_AM
getFPAccuracy	VMCore/Instructions.cpp	/^float FPMathOperator::getFPAccuracy() const {$/;"	f	class:FPMathOperator
getFPCast	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFPCast(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getFPEXT	CodeGen/SelectionDAG/TargetLowering.cpp	/^RTLIB::Libcall RTLIB::getFPEXT(EVT OpVT, EVT RetVT) {$/;"	f	class:RTLIB
getFPExtend	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFPExtend(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getFPImmFloat	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline float getFPImmFloat(unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
getFPMantissaWidth	VMCore/Type.cpp	/^int Type::getFPMantissaWidth() const {$/;"	f	class:Type
getFPROUND	CodeGen/SelectionDAG/TargetLowering.cpp	/^RTLIB::Libcall RTLIB::getFPROUND(EVT OpVT, EVT RetVT) {$/;"	f	class:RTLIB
getFPReg	Target/X86/X86FloatingPoint.cpp	/^static unsigned getFPReg(const MachineOperand &MO) {$/;"	f	file:
getFPSpillSlot	Target/XCore/XCoreMachineFunctionInfo.h	/^  int getFPSpillSlot() const { return FPSpillSlot; }$/;"	f	class:llvm::XCoreFunctionInfo
getFPStackOffset	Target/MBlaze/MBlazeMachineFunction.h	/^  int getFPStackOffset() const { return FPStackOffset; }$/;"	f	class:llvm::MBlazeFunctionInfo
getFPTOSINT	CodeGen/SelectionDAG/TargetLowering.cpp	/^RTLIB::Libcall RTLIB::getFPTOSINT(EVT OpVT, EVT RetVT) {$/;"	f	class:RTLIB
getFPTOUINT	CodeGen/SelectionDAG/TargetLowering.cpp	/^RTLIB::Libcall RTLIB::getFPTOUINT(EVT OpVT, EVT RetVT) {$/;"	f	class:RTLIB
getFPToSI	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFPToSI(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getFPToUI	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFPToUI(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getFPTrunc	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFPTrunc(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getFPred	CodeGen/EarlyIfConversion.cpp	/^  MachineBasicBlock *getFPred() const { return FBB == Tail ? Head : FBB; }$/;"	f	class:__anon91::SSAIfConv
getFRem	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFRem(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getFSL	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static int64_t getFSL(uint32_t insn) {$/;"	f	file:
getFSub	VMCore/Constants.cpp	/^Constant *ConstantExpr::getFSub(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getFalse	Analysis/InstructionSimplify.cpp	/^static Constant *getFalse(Type *Ty) {$/;"	f	file:
getFalse	VMCore/Constants.cpp	/^Constant *ConstantInt::getFalse(Type *Ty) {$/;"	f	class:ConstantInt
getFalse	VMCore/Constants.cpp	/^ConstantInt *ConstantInt::getFalse(LLVMContext &Context) {$/;"	f	class:ConstantInt
getFeasibleSuccessors	Analysis/SparsePropagation.cpp	/^void SparseSolver::getFeasibleSuccessors(TerminatorInst &TI,$/;"	f	class:SparseSolver
getFeasibleSuccessors	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::getFeasibleSuccessors(TerminatorInst &TI,$/;"	f	class:SCCPSolver
getFeatureBits	MC/SubtargetFeature.cpp	/^uint64_t SubtargetFeatures::getFeatureBits(const StringRef CPU,$/;"	f	class:SubtargetFeatures
getFieldInit	TableGen/Record.cpp	/^Init *DefInit::getFieldInit(Record &R, const RecordVal *RV,$/;"	f	class:DefInit
getFieldInit	TableGen/Record.cpp	/^Init *VarInit::getFieldInit(Record &R, const RecordVal *RV,$/;"	f	class:VarInit
getFieldType	TableGen/Record.cpp	/^RecTy *DefInit::getFieldType(const std::string &FieldName) const {$/;"	f	class:DefInit
getFieldType	TableGen/Record.cpp	/^RecTy *TypedInit::getFieldType(const std::string &FieldName) const {$/;"	f	class:TypedInit
getFieldType	TableGen/Record.cpp	/^RecTy *VarInit::getFieldType(const std::string &FieldName) const {$/;"	f	class:VarInit
getFile	Support/MemoryBuffer.cpp	/^error_code MemoryBuffer::getFile(StringRef Filename,$/;"	f	class:MemoryBuffer
getFile	Support/MemoryBuffer.cpp	/^error_code MemoryBuffer::getFile(const char *Filename,$/;"	f	class:MemoryBuffer
getFile	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVLines &getFile(StringRef Filename) {$/;"	f	class:__anon490::GCOVBlock
getFileFormatName	Object/COFFObjectFile.cpp	/^StringRef COFFObjectFile::getFileFormatName() const {$/;"	f	class:COFFObjectFile
getFileFormatName	Object/MachOObjectFile.cpp	/^StringRef MachOObjectFile::getFileFormatName() const {$/;"	f	class:llvm::object::MachOObjectFile
getFileLineInfoForCompileUnit	DebugInfo/DWARFContext.cpp	/^static bool getFileLineInfoForCompileUnit(DWARFCompileUnit *CU,$/;"	f	file:
getFileName	Object/Binary.cpp	/^StringRef Binary::getFileName() const {$/;"	f	class:Binary
getFileNameByIndex	DebugInfo/DWARFDebugLine.cpp	/^DWARFDebugLine::LineTable::getFileNameByIndex(uint64_t FileIndex,$/;"	f	class:DWARFDebugLine::LineTable
getFileNameForCompileUnit	DebugInfo/DWARFContext.cpp	/^static bool getFileNameForCompileUnit(DWARFCompileUnit *CU,$/;"	f	file:
getFileOrSTDIN	Support/MemoryBuffer.cpp	/^error_code MemoryBuffer::getFileOrSTDIN(StringRef Filename,$/;"	f	class:MemoryBuffer
getFileOrSTDIN	Support/MemoryBuffer.cpp	/^error_code MemoryBuffer::getFileOrSTDIN(const char *Filename,$/;"	f	class:MemoryBuffer
getFilename	AsmParser/LLLexer.cpp	/^std::string LLLexer::getFilename() const {$/;"	f	class:LLLexer
getFilename	ExecutionEngine/EventListenerCommon.h	/^  const char *getFilename(MDNode *Scope) {$/;"	f	class:llvm::jitprofiling::FilenameCache
getFilename	VMCore/DebugInfo.cpp	/^StringRef DIScope::getFilename() const {$/;"	f	class:DIScope
getFilterIDFor	CodeGen/MachineModuleInfo.cpp	/^int MachineModuleInfo::getFilterIDFor(std::vector<unsigned> &TyIds) {$/;"	f	class:MachineModuleInfo
getFirstBlockInPath	Analysis/PathProfileInfo.cpp	/^BasicBlock* ProfilePath::getFirstBlockInPath() const {$/;"	f	class:ProfilePath
getFirstChild	DebugInfo/DWARFDebugInfoEntry.h	/^  DWARFDebugInfoEntryMinimal *getFirstChild() {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getFirstChild	DebugInfo/DWARFDebugInfoEntry.h	/^  const DWARFDebugInfoEntryMinimal *getFirstChild() const {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getFirstDIEOffset	DebugInfo/DWARFCompileUnit.h	/^  uint32_t getFirstDIEOffset() const { return Offset + getSize(); }$/;"	f	class:llvm::DWARFCompileUnit
getFirstDomain	CodeGen/ExecutionDepsFix.cpp	/^  unsigned getFirstDomain() const {$/;"	f	struct:__anon118::DomainValue
getFirstInsertionPt	VMCore/BasicBlock.cpp	/^BasicBlock::iterator BasicBlock::getFirstInsertionPt() {$/;"	f	class:BasicBlock
getFirstInstrTerminator	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::instr_iterator MachineBasicBlock::getFirstInstrTerminator() {$/;"	f	class:MachineBasicBlock
getFirstNonPHI	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::iterator MachineBasicBlock::getFirstNonPHI() {$/;"	f	class:MachineBasicBlock
getFirstNonPHI	VMCore/BasicBlock.cpp	/^Instruction* BasicBlock::getFirstNonPHI() {$/;"	f	class:BasicBlock
getFirstNonPHIOrDbg	VMCore/BasicBlock.cpp	/^Instruction* BasicBlock::getFirstNonPHIOrDbg() {$/;"	f	class:BasicBlock
getFirstNonPHIOrDbgOrLifetime	VMCore/BasicBlock.cpp	/^Instruction* BasicBlock::getFirstNonPHIOrDbgOrLifetime() {$/;"	f	class:BasicBlock
getFirstTerminator	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::getFirstTerminator() const {$/;"	f	class:MachineBasicBlock
getFirstTerminator	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::iterator MachineBasicBlock::getFirstTerminator() {$/;"	f	class:MachineBasicBlock
getFirstUnallocated	Target/Hexagon/HexagonCallingConvLower.h	/^  unsigned getFirstUnallocated(const unsigned *Regs, unsigned NumRegs) const {$/;"	f	class:llvm::Hexagon_CCState
getFirstUnplacedBlock	CodeGen/MachineBlockPlacement.cpp	/^MachineBasicBlock *MachineBlockPlacement::getFirstUnplacedBlock($/;"	f	class:MachineBlockPlacement
getFirstVarArg	ExecutionEngine/Interpreter/Interpreter.h	/^  GenericValue *getFirstVarArg () {$/;"	f	class:llvm::Interpreter
getFixedFormSizesForAddressSize	DebugInfo/DWARFFormValue.cpp	/^DWARFFormValue::getFixedFormSizesForAddressSize(uint8_t addr_size) {$/;"	f	class:DWARFFormValue
getFixedStack	CodeGen/MachineInstr.cpp	/^MachinePointerInfo MachinePointerInfo::getFixedStack(int FI, int64_t offset) {$/;"	f	class:MachinePointerInfo
getFixedStack	CodeGen/PseudoSourceValue.cpp	/^const PseudoSourceValue *PseudoSourceValue::getFixedStack(int FI) {$/;"	f	class:PseudoSourceValue
getFixupKindInfo	MC/MCAsmBackend.cpp	/^MCAsmBackend::getFixupKindInfo(MCFixupKind Kind) const {$/;"	f	class:MCAsmBackend
getFixupKindInfo	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  const MCFixupKindInfo &getFixupKindInfo(MCFixupKind Kind) const {$/;"	f	class:__anon284::ARMAsmBackend
getFixupKindInfo	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  const MCFixupKindInfo &getFixupKindInfo(MCFixupKind Kind) const {$/;"	f	class:__anon429::MipsAsmBackend
getFixupKindInfo	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  const MCFixupKindInfo &getFixupKindInfo(MCFixupKind Kind) const {$/;"	f	class:__anon320::PPCAsmBackend
getFixupKindInfo	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  const MCFixupKindInfo &getFixupKindInfo(MCFixupKind Kind) const {$/;"	f	class:__anon344::X86AsmBackend
getFixupKindLog2Size	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^static unsigned getFixupKindLog2Size(unsigned Kind) {$/;"	f	file:
getFixupKindLog2Size	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^static unsigned getFixupKindLog2Size(unsigned Kind) {$/;"	f	file:
getFixupKindNumBytes	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^static unsigned getFixupKindNumBytes(unsigned Kind) {$/;"	f	namespace:__anon285
getFixupKindSize	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^static unsigned getFixupKindSize(unsigned Kind) {$/;"	f	file:
getFloatPtrTy	VMCore/Type.cpp	/^PointerType *Type::getFloatPtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getFloatTy	VMCore/Type.cpp	/^Type *Type::getFloatTy(LLVMContext &C) { return &C.pImpl->FloatTy; }$/;"	f	class:Type
getFnDebugLoc	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static DebugLoc getFnDebugLoc(DebugLoc DL, const LLVMContext &Ctx) {$/;"	f	file:
getFnSpecificMDNode	VMCore/DebugInfo.cpp	/^NamedMDNode *llvm::getFnSpecificMDNode(const Module &M, DISubprogram Fn) {$/;"	f	class:llvm
getFnValueByID	Bitcode/Reader/BitcodeReader.h	/^  Value *getFnValueByID(unsigned ID, Type *Ty) {$/;"	f	class:llvm::BitcodeReader
getFoldedAlignOf	VMCore/ConstantFold.cpp	/^static Constant *getFoldedAlignOf(Type *Ty, Type *DestTy,$/;"	f	file:
getFoldedCast	VMCore/Constants.cpp	/^static inline Constant *getFoldedCast($/;"	f	file:
getFoldedOffsetOf	VMCore/ConstantFold.cpp	/^static Constant *getFoldedOffsetOf(Type *Ty, Constant *FieldNo,$/;"	f	file:
getFoldedSizeOf	VMCore/ConstantFold.cpp	/^static Constant *getFoldedSizeOf(Type *Ty, Type *DestTy,$/;"	f	file:
getForceFramePointer	Target/X86/X86MachineFunctionInfo.h	/^  bool getForceFramePointer() const { return ForceFramePointer;}$/;"	f	class:llvm::X86MachineFunctionInfo
getForm	CodeGen/AsmPrinter/DIE.h	/^    uint16_t getForm()      const { return Form; }$/;"	f	class:llvm::DIEAbbrevData
getForm	DebugInfo/DWARFAttribute.h	/^  uint16_t getForm() const { return Form; }$/;"	f	class:llvm::DWARFAttribute
getForm	DebugInfo/DWARFFormValue.h	/^  uint16_t getForm() const { return Form; }$/;"	f	class:llvm::DWARFFormValue
getFormByIndex	DebugInfo/DWARFAbbreviationDeclaration.h	/^  uint16_t getFormByIndex(uint32_t idx) const {$/;"	f	class:llvm::DWARFAbbreviationDeclaration
getFpFormat	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  FpFormatTy getFpFormat() {return FpFormat;}$/;"	f	class:__anon422::MipsAsmParser	file:
getFragmentAddress	MC/MachObjectWriter.cpp	/^uint64_t MachObjectWriter::getFragmentAddress(const MCFragment *Fragment,$/;"	f	class:MachObjectWriter
getFragmentOffset	MC/MCAssembler.cpp	/^uint64_t MCAsmLayout::getFragmentOffset(const MCFragment *F) const {$/;"	f	class:MCAsmLayout
getFrameIndex	CodeGen/AsmPrinter/DwarfDebug.h	/^  int getFrameIndex()                const { return FrameIndex; }$/;"	f	class:llvm::DbgVariable
getFrameIndex	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getFrameIndex(int FI, EVT VT, bool isTarget) {$/;"	f	class:SelectionDAG
getFrameIndexInstrOffset	Target/ARM/ARMBaseRegisterInfo.cpp	/^getFrameIndexInstrOffset(const MachineInstr *MI, int Idx) const {$/;"	f	class:ARMBaseRegisterInfo
getFrameIndexOffset	CodeGen/TargetFrameLoweringImpl.cpp	/^int TargetFrameLowering::getFrameIndexOffset(const MachineFunction &MF,$/;"	f	class:TargetFrameLowering
getFrameIndexOffset	Target/ARM/ARMFrameLowering.cpp	/^int ARMFrameLowering::getFrameIndexOffset(const MachineFunction &MF,$/;"	f	class:ARMFrameLowering
getFrameIndexOffset	Target/Hexagon/HexagonFrameLowering.cpp	/^int HexagonFrameLowering::getFrameIndexOffset(const MachineFunction &MF,$/;"	f	class:HexagonFrameLowering
getFrameIndexOffset	Target/MBlaze/MBlazeFrameLowering.cpp	/^int MBlazeFrameLowering::getFrameIndexOffset(const MachineFunction &MF, int FI) $/;"	f	class:MBlazeFrameLowering
getFrameIndexOffset	Target/X86/X86FrameLowering.cpp	/^int X86FrameLowering::getFrameIndexOffset(const MachineFunction &MF, int FI) const {$/;"	f	class:X86FrameLowering
getFrameIndexReference	CodeGen/TargetFrameLoweringImpl.cpp	/^int TargetFrameLowering::getFrameIndexReference(const MachineFunction &MF,$/;"	f	class:TargetFrameLowering
getFrameIndexReference	Target/ARM/ARMFrameLowering.cpp	/^ARMFrameLowering::getFrameIndexReference(const MachineFunction &MF, int FI,$/;"	f	class:ARMFrameLowering
getFrameIndexReference	Target/X86/X86FrameLowering.cpp	/^int X86FrameLowering::getFrameIndexReference(const MachineFunction &MF, int FI,$/;"	f	class:X86FrameLowering
getFrameIx	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  unsigned getFrameIx() { assert (kind==FRAMEIX); return u.FrameIx; }$/;"	f	class:llvm::SDDbgValue
getFrameLowering	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMFrameLowering *getFrameLowering() const {$/;"	f	class:llvm::ARMTargetMachine
getFrameLowering	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMFrameLowering *getFrameLowering() const {$/;"	f	class:llvm::ThumbTargetMachine
getFrameLowering	Target/CellSPU/SPUTargetMachine.h	/^  virtual const SPUFrameLowering *getFrameLowering() const {$/;"	f	class:llvm::SPUTargetMachine
getFrameLowering	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const HexagonFrameLowering* getFrameLowering() const {$/;"	f	class:llvm::HexagonTargetMachine
getFrameLowering	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const TargetFrameLowering *getFrameLowering() const$/;"	f	class:llvm::MBlazeTargetMachine
getFrameLowering	Target/MSP430/MSP430TargetMachine.h	/^  virtual const TargetFrameLowering *getFrameLowering() const {$/;"	f	class:llvm::MSP430TargetMachine
getFrameLowering	Target/Mips/MipsTargetMachine.h	/^  virtual const TargetFrameLowering *getFrameLowering() const$/;"	f	class:llvm::MipsTargetMachine
getFrameLowering	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual const TargetFrameLowering *getFrameLowering() const {$/;"	f	class:llvm::NVPTXTargetMachine
getFrameLowering	Target/PowerPC/PPCTargetMachine.h	/^  virtual const PPCFrameLowering  *getFrameLowering() const {$/;"	f	class:llvm::PPCTargetMachine
getFrameLowering	Target/Sparc/SparcTargetMachine.h	/^  virtual const TargetFrameLowering  *getFrameLowering() const {$/;"	f	class:llvm::SparcTargetMachine
getFrameLowering	Target/X86/X86TargetMachine.h	/^  virtual const TargetFrameLowering  *getFrameLowering() const {$/;"	f	class:llvm::X86TargetMachine
getFrameLowering	Target/XCore/XCoreTargetMachine.h	/^  virtual const XCoreFrameLowering *getFrameLowering() const {$/;"	f	class:llvm::XCoreTargetMachine
getFramePointerFrameIndex	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::getFramePointerFrameIndex(SelectionDAG & DAG) const {$/;"	f	class:PPCTargetLowering
getFramePointerSaveIndex	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int getFramePointerSaveIndex() const { return FramePointerSaveIndex; }$/;"	f	class:llvm::PPCFunctionInfo
getFramePointerSaveOffset	Target/PowerPC/PPCFrameLowering.h	/^  static unsigned getFramePointerSaveOffset(bool isPPC64, bool isDarwinABI) {$/;"	f	class:llvm::PPCFrameLowering
getFramePtrSpillOffset	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getFramePtrSpillOffset() const { return FramePtrSpillOffset; }$/;"	f	class:llvm::ARMFunctionInfo
getFrameRegister	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
getFrameRegister	Target/CellSPU/SPURegisterInfo.cpp	/^SPURegisterInfo::getFrameRegister(const MachineFunction &MF) const$/;"	f	class:SPURegisterInfo
getFrameRegister	Target/Hexagon/HexagonRegisterInfo.cpp	/^unsigned HexagonRegisterInfo::getFrameRegister() const {$/;"	f	class:HexagonRegisterInfo
getFrameRegister	Target/Hexagon/HexagonRegisterInfo.cpp	/^unsigned HexagonRegisterInfo::getFrameRegister(const MachineFunction$/;"	f	class:HexagonRegisterInfo
getFrameRegister	Target/MBlaze/MBlazeRegisterInfo.cpp	/^unsigned MBlazeRegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:MBlazeRegisterInfo
getFrameRegister	Target/MSP430/MSP430RegisterInfo.cpp	/^unsigned MSP430RegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:MSP430RegisterInfo
getFrameRegister	Target/Mips/MipsRegisterInfo.cpp	/^getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:MipsRegisterInfo
getFrameRegister	Target/NVPTX/NVPTXRegisterInfo.cpp	/^unsigned NVPTXRegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:NVPTXRegisterInfo
getFrameRegister	Target/PowerPC/PPCRegisterInfo.cpp	/^unsigned PPCRegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:PPCRegisterInfo
getFrameRegister	Target/Sparc/SparcRegisterInfo.cpp	/^unsigned SparcRegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:SparcRegisterInfo
getFrameRegister	Target/X86/X86RegisterInfo.cpp	/^unsigned X86RegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:X86RegisterInfo
getFrameRegister	Target/XCore/XCoreRegisterInfo.cpp	/^unsigned XCoreRegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:XCoreRegisterInfo
getFreeBlockBefore	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    FreeRangeHeader *getFreeBlockBefore() const {$/;"	f	struct:__anon189::MemoryRangeHeader
getFrequency	Analysis/PathProfileInfo.cpp	/^double ProfilePath::getFrequency() const {$/;"	f	class:ProfilePath
getFromDILexicalBlock	VMCore/DebugLoc.cpp	/^DebugLoc DebugLoc::getFromDILexicalBlock(MDNode *N) {$/;"	f	class:DebugLoc
getFromDILocation	VMCore/DebugLoc.cpp	/^DebugLoc DebugLoc::getFromDILocation(MDNode *N) {$/;"	f	class:DebugLoc
getFslImm	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  const MCExpr *getFslImm() const {$/;"	f	struct:__anon446::MBlazeOperand
getFullAddress	Target/X86/X86InstrBuilder.h	/^  void getFullAddress(SmallVectorImpl<MachineOperand> &MO) {$/;"	f	struct:llvm::X86AddressMode
getFullName	CodeGen/MachineBasicBlock.cpp	/^std::string MachineBasicBlock::getFullName() const {$/;"	f	class:MachineBasicBlock
getFullPath	ExecutionEngine/EventListenerCommon.h	/^  const char *getFullPath(MDNode *Scope) {$/;"	f	class:llvm::jitprofiling::FilenameCache
getFunc	Transforms/IPO/MergeFunctions.cpp	/^  Function *getFunc() const { return Func; }$/;"	f	class:__anon596::ComparableFunction
getFunction	Analysis/PathNumbering.cpp	/^Function& BallLarusDag::getFunction() {$/;"	f	class:BallLarusDag
getFunction	Analysis/Trace.cpp	/^Function *Trace::getFunction() const {$/;"	f	class:Trace
getFunction	AsmParser/LLParser.h	/^      Function &getFunction() const { return F; }$/;"	f	class:llvm::LLParser::PerFunctionState
getFunction	VMCore/Metadata.cpp	/^const Function *MDNode::getFunction() const {$/;"	f	class:MDNode
getFunction	VMCore/Module.cpp	/^Function *Module::getFunction(StringRef Name) const {$/;"	f	class:Module
getFunctionAlignment	Target/NVPTX/NVPTXISelLowering.cpp	/^unsigned NVPTXTargetLowering::getFunctionAlignment(const Function *) const {$/;"	f	class:NVPTXTargetLowering
getFunctionConstantRange	Bitcode/Writer/ValueEnumerator.h	/^  void getFunctionConstantRange(unsigned &Start, unsigned &End) const {$/;"	f	class:llvm::ValueEnumerator
getFunctionField	VMCore/DebugInfo.cpp	/^Function *DIDescriptor::getFunctionField(unsigned Elt) const {$/;"	f	class:DIDescriptor
getFunctionForValue	VMCore/Metadata.cpp	/^static const Function *getFunctionForValue(Value *V) {$/;"	f	file:
getFunctionInfo	Analysis/IPA/GlobalsModRef.cpp	/^    FunctionRecord *getFunctionInfo(const Function *F) {$/;"	f	class:__anon1::GlobalsModRef	file:
getFunctionInfo	Analysis/LibCallSemantics.cpp	/^LibCallInfo::getFunctionInfo(const Function *F) const {$/;"	f	class:LibCallInfo
getFunctionInfo	CodeGen/GCMetadata.cpp	/^GCFunctionInfo &GCModuleInfo::getFunctionInfo(const Function &F) {$/;"	f	class:GCModuleInfo
getFunctionLocalMDValues	Bitcode/Writer/ValueEnumerator.h	/^  const SmallVector<const MDNode *, 8> &getFunctionLocalMDValues() const { $/;"	f	class:llvm::ValueEnumerator
getFunctionNumParams	VMCore/Type.cpp	/^unsigned Type::getFunctionNumParams() const {$/;"	f	class:Type
getFunctionNumber	CodeGen/AsmPrinter/AsmPrinter.cpp	/^unsigned AsmPrinter::getFunctionNumber() const {$/;"	f	class:AsmPrinter
getFunctionParamType	VMCore/Type.cpp	/^Type *Type::getFunctionParamType(unsigned i) const {$/;"	f	class:Type
getFunctionSections	Target/TargetMachine.cpp	/^bool TargetMachine::getFunctionSections() {$/;"	f	class:TargetMachine
getFunctionToLazyStubMap	ExecutionEngine/JIT/JITEmitter.cpp	/^    FunctionToLazyStubMapTy& getFunctionToLazyStubMap($/;"	f	class:__anon182::JITResolverState
getFunctionType	VMCore/Function.cpp	/^FunctionType *Function::getFunctionType() const {$/;"	f	class:Function
getFunctionType	VMCore/InlineAsm.cpp	/^FunctionType *InlineAsm::getFunctionType() const {$/;"	f	class:InlineAsm
getFusedLdStOpcode	Target/X86/X86ISelDAGToDAG.cpp	/^static unsigned getFusedLdStOpcode(EVT &LdVT, unsigned Opc) {$/;"	f	file:
getGC	VMCore/Function.cpp	/^const char *Function::getGC() const {$/;"	f	class:Function
getGCMap	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static gcp_map_type &getGCMap(void *&P) {$/;"	f	file:
getGDBRegistrar	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^JITRegistrar& JITRegistrar::getGDBRegistrar() {$/;"	f	class:llvm::JITRegistrar
getGOT	CodeGen/MachineInstr.cpp	/^MachinePointerInfo MachinePointerInfo::getGOT() {$/;"	f	class:MachinePointerInfo
getGOT	CodeGen/PseudoSourceValue.cpp	/^const PseudoSourceValue *PseudoSourceValue::getGOT()$/;"	f	class:PseudoSourceValue
getGOTBase	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uint8_t *getGOTBase() const {$/;"	f	class:__anon190::DefaultJITMemoryManager
getGOTIndexForAddr	ExecutionEngine/JIT/JITEmitter.cpp	/^unsigned JITResolver::getGOTIndexForAddr(void* addr) {$/;"	f	class:JITResolver
getGPFI	Target/MBlaze/MBlazeMachineFunction.h	/^  int getGPFI() const { return GPHolder.FI; }$/;"	f	class:llvm::MBlazeFunctionInfo
getGPRCalleeSavedArea1Offset	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getGPRCalleeSavedArea1Offset() const { return GPRCS1Offset; }$/;"	f	class:llvm::ARMFunctionInfo
getGPRCalleeSavedArea1Size	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getGPRCalleeSavedArea1Size() const { return GPRCS1Size; }$/;"	f	class:llvm::ARMFunctionInfo
getGPRCalleeSavedArea2Offset	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getGPRCalleeSavedArea2Offset() const { return GPRCS2Offset; }$/;"	f	class:llvm::ARMFunctionInfo
getGPRCalleeSavedArea2Size	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getGPRCalleeSavedArea2Size() const { return GPRCS2Size; }$/;"	f	class:llvm::ARMFunctionInfo
getGPStackOffset	Target/MBlaze/MBlazeMachineFunction.h	/^  int getGPStackOffset() const { return GPHolder.SPOffset; }$/;"	f	class:llvm::MBlazeFunctionInfo
getGV	Target/ARM/ARMConstantPoolValue.cpp	/^const GlobalValue *ARMConstantPoolConstant::getGV() const {$/;"	f	class:ARMConstantPoolConstant
getGVAlignmentLog2	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static unsigned getGVAlignmentLog2(const GlobalValue *GV, const DataLayout &TD,$/;"	f	file:
getGetElementPtr	VMCore/Constants.cpp	/^Constant *ConstantExpr::getGetElementPtr(Constant *C, ArrayRef<Value *> Idxs,$/;"	f	class:ConstantExpr
getGetOpInfo	MC/MCDisassembler/Disassembler.h	/^  LLVMOpInfoCallback getGetOpInfo() const { return GetOpInfo; }$/;"	f	class:llvm::LLVMDisasmContext
getGlobalAddress	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getGlobalAddress(const GlobalValue *GV, DebugLoc DL,$/;"	f	class:SelectionDAG
getGlobalAddressWrapper	Target/XCore/XCoreISelLowering.cpp	/^getGlobalAddressWrapper(SDValue GA, const GlobalValue *GV,$/;"	f	class:XCoreTargetLowering
getGlobalBaseReg	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getGlobalBaseReg() const { return GlobalBaseReg; }$/;"	f	class:llvm::ARMFunctionInfo
getGlobalBaseReg	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^SDNode *MBlazeDAGToDAGISel::getGlobalBaseReg() {$/;"	f	class:MBlazeDAGToDAGISel
getGlobalBaseReg	Target/MBlaze/MBlazeInstrInfo.cpp	/^unsigned MBlazeInstrInfo::getGlobalBaseReg(MachineFunction *MF) const {$/;"	f	class:MBlazeInstrInfo
getGlobalBaseReg	Target/MBlaze/MBlazeMachineFunction.h	/^  unsigned getGlobalBaseReg() const { return GlobalBaseReg; }$/;"	f	class:llvm::MBlazeFunctionInfo
getGlobalBaseReg	Target/Mips/MipsISelDAGToDAG.cpp	/^SDNode *MipsDAGToDAGISel::getGlobalBaseReg() {$/;"	f	class:MipsDAGToDAGISel
getGlobalBaseReg	Target/Mips/MipsMachineFunction.cpp	/^unsigned MipsFunctionInfo::getGlobalBaseReg() {$/;"	f	class:MipsFunctionInfo
getGlobalBaseReg	Target/PowerPC/PPCISelDAGToDAG.cpp	/^SDNode *PPCDAGToDAGISel::getGlobalBaseReg() {$/;"	f	class:PPCDAGToDAGISel
getGlobalBaseReg	Target/Sparc/SparcISelDAGToDAG.cpp	/^SDNode* SparcDAGToDAGISel::getGlobalBaseReg() {$/;"	f	class:SparcDAGToDAGISel
getGlobalBaseReg	Target/Sparc/SparcInstrInfo.cpp	/^unsigned SparcInstrInfo::getGlobalBaseReg(MachineFunction *MF) const$/;"	f	class:SparcInstrInfo
getGlobalBaseReg	Target/Sparc/SparcMachineFunctionInfo.h	/^    unsigned getGlobalBaseReg() const { return GlobalBaseReg; }$/;"	f	class:llvm::SparcMachineFunctionInfo
getGlobalBaseReg	Target/X86/X86ISelDAGToDAG.cpp	/^SDNode *X86DAGToDAGISel::getGlobalBaseReg() {$/;"	f	class:X86DAGToDAGISel
getGlobalBaseReg	Target/X86/X86InstrInfo.cpp	/^unsigned X86InstrInfo::getGlobalBaseReg(MachineFunction *MF) const {$/;"	f	class:X86InstrInfo
getGlobalBaseReg	Target/X86/X86MachineFunctionInfo.h	/^  unsigned getGlobalBaseReg() const { return GlobalBaseReg; }$/;"	f	class:llvm::X86MachineFunctionInfo
getGlobalBasicBlockID	Bitcode/Writer/ValueEnumerator.cpp	/^unsigned ValueEnumerator::getGlobalBasicBlockID(const BasicBlock *BB) const {$/;"	f	class:ValueEnumerator
getGlobalContext	VMCore/LLVMContext.cpp	/^LLVMContext& llvm::getGlobalContext() {$/;"	f	class:llvm
getGlobalSlot	VMCore/AsmWriter.cpp	/^int SlotTracker::getGlobalSlot(const GlobalValue *V) {$/;"	f	class:SlotTracker
getGlobalToIndirectSymMap	ExecutionEngine/JIT/JITEmitter.cpp	/^    GlobalToIndirectSymMapTy& getGlobalToIndirectSymMap(const MutexGuard& lck) {$/;"	f	class:__anon182::JITResolverState
getGlobalTypes	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  const StringMap<DIE*> &getGlobalTypes() const { return GlobalTypes; }$/;"	f	class:llvm::CompileUnit
getGlobalValueAtAddress	ExecutionEngine/ExecutionEngine.cpp	/^const GlobalValue *ExecutionEngine::getGlobalValueAtAddress(void *Addr) {$/;"	f	class:ExecutionEngine
getGlobalValueIndirectSym	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITResolver::getGlobalValueIndirectSym(GlobalValue *GV, void *GVAddress) {$/;"	f	class:JITResolver
getGlobalVariable	VMCore/Module.cpp	/^GlobalVariable *Module::getGlobalVariable(StringRef Name,$/;"	f	class:Module
getGlobalVariableField	VMCore/DebugInfo.cpp	/^GlobalVariable *DIDescriptor::getGlobalVariableField(unsigned Elt) const {$/;"	f	class:DIDescriptor
getGlobalVariables	VMCore/DebugInfo.cpp	/^DIArray DICompileUnit::getGlobalVariables() const {$/;"	f	class:DICompileUnit
getGraphAttrs	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^const std::string SelectionDAG::getGraphAttrs(const SDNode *N) const {$/;"	f	class:SelectionDAG
getGraphName	Analysis/DomPrinter.cpp	/^  static std::string getGraphName(DominatorTree *DT) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	Analysis/DomPrinter.cpp	/^  static std::string getGraphName(PostDominatorTree *DT) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	Analysis/RegionPrinter.cpp	/^  static std::string getGraphName(RegionInfo *DT) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	CodeGen/MachineFunction.cpp	/^    static std::string getGraphName(const MachineFunction *F) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	CodeGen/ScheduleDAGPrinter.cpp	/^    static std::string getGraphName(const ScheduleDAG *G) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static std::string getGraphName(const SelectionDAG *G) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphNodeLabel	CodeGen/ScheduleDAGInstrs.cpp	/^std::string ScheduleDAGInstrs::getGraphNodeLabel(const SUnit *SU) const {$/;"	f	class:ScheduleDAGInstrs
getGraphNodeLabel	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^std::string ScheduleDAGSDNodes::getGraphNodeLabel(const SUnit *SU) const {$/;"	f	class:ScheduleDAGSDNodes
getHA16Encoding	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^unsigned PPCMCCodeEmitter::getHA16Encoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:PPCMCCodeEmitter
getHA16Encoding	Target/PowerPC/PPCCodeEmitter.cpp	/^unsigned PPCCodeEmitter::getHA16Encoding(const MachineInstr &MI,$/;"	f	class:PPCCodeEmitter
getHalfPtrTy	VMCore/Type.cpp	/^PointerType *Type::getHalfPtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getHalfTy	VMCore/Type.cpp	/^Type *Type::getHalfTy(LLVMContext &C) { return &C.pImpl->HalfTy; }$/;"	f	class:Type
getHash	CodeGen/BranchFolding.h	/^      unsigned getHash() const { return Hash; }$/;"	f	class:llvm::BranchFolder::MergePotentialsElt
getHash	CodeGen/BranchFolding.h	/^      unsigned getHash() const {$/;"	f	class:llvm::BranchFolder::SameTailElt
getHash	Transforms/IPO/MergeFunctions.cpp	/^  unsigned getHash() const { return Hash; }$/;"	f	class:__anon596::ComparableFunction
getHash	Transforms/Scalar/EarlyCSE.cpp	/^static unsigned getHash(const void *V) {$/;"	f	file:
getHashValue	CodeGen/MachineInstr.cpp	/^MachineInstrExpressionTrait::getHashValue(const MachineInstr* const &MI) {$/;"	f	class:MachineInstrExpressionTrait
getHashValue	MC/MCDwarf.cpp	/^    static unsigned getHashValue(const CIEKey &Key) {$/;"	f	struct:llvm::DenseMapInfo
getHashValue	TableGen/Record.cpp	/^  static unsigned getHashValue(const TableGenStringKey& Val) {$/;"	f	struct:llvm::DenseMapInfo
getHashValue	Transforms/IPO/MergeFunctions.cpp	/^    static unsigned getHashValue(const ComparableFunction &CF) {$/;"	f	struct:llvm::DenseMapInfo
getHashValue	Transforms/InstCombine/InstCombinePHI.cpp	/^    static unsigned getHashValue(const LoweredPHIRecord &Val) {$/;"	f	struct:llvm::DenseMapInfo
getHashValue	Transforms/Scalar/EarlyCSE.cpp	/^unsigned DenseMapInfo<CallValue>::getHashValue(CallValue Val) {$/;"	f	class:DenseMapInfo
getHashValue	Transforms/Scalar/EarlyCSE.cpp	/^unsigned DenseMapInfo<SimpleValue>::getHashValue(SimpleValue Val) {$/;"	f	class:DenseMapInfo
getHashValue	Transforms/Scalar/GVN.cpp	/^  static unsigned getHashValue(const Expression e) {$/;"	f	struct:llvm::DenseMapInfo
getHashValue	Transforms/Scalar/LoopStrengthReduce.cpp	/^  getHashValue(const std::pair<const SCEV *, LSRUse::KindType> &V) {$/;"	f	struct:__anon518::UseMapDenseMapInfo
getHashValue	Transforms/Scalar/LoopStrengthReduce.cpp	/^  static unsigned getHashValue(const SmallVector<const SCEV *, 2> &V) {$/;"	f	struct:__anon517::UniquifierDenseMapInfo
getHashValue	Transforms/Utils/BypassSlowDivision.cpp	/^    static unsigned getHashValue(const DivOpInfo &Val) {$/;"	f	struct:llvm::DenseMapInfo
getHashValue	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  static unsigned getHashValue(const std::pair<BasicBlock*, unsigned> &Val) {$/;"	f	struct:llvm::DenseMapInfo
getHashValue	VMCore/ConstantsContext.h	/^    static unsigned getHashValue(const ConstantClass *CP) {$/;"	f	struct:llvm::ConstantAggrUniqueMap::MapInfo
getHashValue	VMCore/ConstantsContext.h	/^    static unsigned getHashValue(const LookupKey &Val) {$/;"	f	struct:llvm::ConstantAggrUniqueMap::MapInfo
getHashValue	VMCore/DebugLoc.cpp	/^unsigned DenseMapInfo<DebugLoc>::getHashValue(const DebugLoc &Key) {$/;"	f	class:DenseMapInfo
getHashValue	VMCore/LLVMContextImpl.h	/^  static unsigned getHashValue(const FunctionType *FT) {$/;"	f	struct:llvm::FunctionTypeKeyInfo
getHashValue	VMCore/LLVMContextImpl.h	/^  static unsigned getHashValue(const KeyTy &Key) {$/;"	f	struct:llvm::DenseMapAPFloatKeyInfo
getHashValue	VMCore/LLVMContextImpl.h	/^  static unsigned getHashValue(const KeyTy &Key) {$/;"	f	struct:llvm::DenseMapAPIntKeyInfo
getHashValue	VMCore/LLVMContextImpl.h	/^  static unsigned getHashValue(const KeyTy& Key) {$/;"	f	struct:llvm::AnonStructTypeKeyInfo
getHashValue	VMCore/LLVMContextImpl.h	/^  static unsigned getHashValue(const KeyTy& Key) {$/;"	f	struct:llvm::FunctionTypeKeyInfo
getHashValue	VMCore/LLVMContextImpl.h	/^  static unsigned getHashValue(const StructType *ST) {$/;"	f	struct:llvm::AnonStructTypeKeyInfo
getHazardRec	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  ScheduleHazardRecognizer *getHazardRec() { return HazardRec; }$/;"	f	class:__anon76::ScheduleDAGRRList
getHazardRec	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  ScheduleHazardRecognizer* getHazardRec() {$/;"	f	class:__anon77::RegReductionPQBase
getHazardType	CodeGen/ScoreboardHazardRecognizer.cpp	/^ScoreboardHazardRecognizer::getHazardType(SUnit *SU, int Stalls) {$/;"	f	class:ScoreboardHazardRecognizer
getHazardType	Target/ARM/ARMHazardRecognizer.cpp	/^ARMHazardRecognizer::getHazardType(SUnit *SU, int Stalls) {$/;"	f	class:ARMHazardRecognizer
getHazardType	Target/CellSPU/SPUHazardRecognizers.cpp	/^SPUHazardRecognizer::getHazardType(SUnit *SU, int Stalls)$/;"	f	class:SPUHazardRecognizer
getHazardType	Target/PowerPC/PPCHazardRecognizers.cpp	/^PPCScoreboardHazardRecognizer::getHazardType(SUnit *SU, int Stalls) {$/;"	f	class:PPCScoreboardHazardRecognizer
getHazardType	Target/PowerPC/PPCHazardRecognizers.cpp	/^getHazardType(SUnit *SU, int Stalls) {$/;"	f	class:PPCHazardRecognizer970
getHeader	DebugInfo/DWARFDebugArangeSet.h	/^  const struct Header &getHeader() const { return Header; }$/;"	f	class:llvm::DWARFDebugArangeSet
getHeader	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getHeader(const coff_file_header *&Res) const {$/;"	f	class:COFFObjectFile
getHeightResources	CodeGen/MachineTraceMetrics.cpp	/^getHeightResources(const MachineBasicBlock *MBB) const {$/;"	f	class:MachineTraceMetrics::Ensemble
getHexagonArchVersion	Target/Hexagon/HexagonSubtarget.h	/^  const HexagonArchEnum &getHexagonArchVersion() const {$/;"	f	class:llvm::HexagonSubtarget
getHexagonTargetMachine	Target/Hexagon/HexagonTargetMachine.cpp	/^  HexagonTargetMachine &getHexagonTargetMachine() const {$/;"	f	class:__anon409::HexagonPassConfig
getHiBits	Support/APInt.cpp	/^APInt APInt::getHiBits(unsigned numBits) const {$/;"	f	class:APInt
getHiLo16ImmOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getHiLo16ImmOpValue(const MachineInstr &MI, unsigned Op) const {$/;"	f	class:__anon297::ARMCodeEmitter	file:
getHiLo16ImmOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^ARMMCCodeEmitter::getHiLo16ImmOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getHostCPUFeatures	Support/Host.cpp	/^bool sys::getHostCPUFeatures(StringMap<bool> &Features){$/;"	f	class:sys
getHostCPUName	Support/Host.cpp	/^std::string sys::getHostCPUName() {$/;"	f	class:sys
getHotSucc	Analysis/BranchProbabilityInfo.cpp	/^BasicBlock *BranchProbabilityInfo::getHotSucc(BasicBlock *BB) const {$/;"	f	class:BranchProbabilityInfo
getHotSucc	CodeGen/MachineBranchProbabilityInfo.cpp	/^MachineBranchProbabilityInfo::getHotSucc(MachineBasicBlock *MBB) const {$/;"	f	class:MachineBranchProbabilityInfo
getI32Imm	Target/ARM/ARMISelDAGToDAG.cpp	/^  inline SDValue getI32Imm(unsigned Imm) {$/;"	f	class:__anon302::ARMDAGToDAGISel
getI32Imm	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    inline SDValue getI32Imm(uint32_t Imm) {$/;"	f	class:__anon414::SPUDAGToDAGISel
getI32Imm	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^  inline SDValue getI32Imm(unsigned Imm) {$/;"	f	class:__anon461::MBlazeDAGToDAGISel	file:
getI32Imm	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  inline SDValue getI32Imm(unsigned Imm) {$/;"	f	class:__anon317::NVPTXDAGToDAGISel
getI32Imm	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    inline SDValue getI32Imm(unsigned Imm) {$/;"	f	class:__anon331::PPCDAGToDAGISel
getI32Imm	Target/X86/X86ISelDAGToDAG.cpp	/^    inline SDValue getI32Imm(unsigned Imm) {$/;"	f	class:__anon373::X86DAGToDAGISel	file:
getI32Imm	Target/XCore/XCoreISelDAGToDAG.cpp	/^    inline SDValue getI32Imm(unsigned Imm) {$/;"	f	class:__anon334::XCoreDAGToDAGISel
getI64Imm	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    inline SDValue getI64Imm(uint64_t Imm) {$/;"	f	class:__anon331::PPCDAGToDAGISel
getI8Imm	Target/X86/X86ISelDAGToDAG.cpp	/^    inline SDValue getI8Imm(unsigned Imm) {$/;"	f	class:__anon373::X86DAGToDAGISel	file:
getICmp	VMCore/Constants.cpp	/^ConstantExpr::getICmp(unsigned short pred, Constant *LHS, Constant *RHS) {$/;"	f	class:ConstantExpr
getICmpCode	Transforms/Utils/CmpInstAnalysis.cpp	/^unsigned llvm::getICmpCode(const ICmpInst *ICI, bool InvertPred) {$/;"	f	class:llvm
getICmpCondCode	CodeGen/Analysis.cpp	/^ISD::CondCode llvm::getICmpCondCode(ICmpInst::Predicate Pred) {$/;"	f	class:llvm
getICmpValue	Transforms/Utils/CmpInstAnalysis.cpp	/^Value *llvm::getICmpValue(bool Sign, unsigned Code, Value *LHS, Value *RHS,$/;"	f	class:llvm
getID	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  unsigned getID()                  const { return ID; }$/;"	f	class:llvm::CompileUnit
getID	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int getID(struct InternalInstruction* insn, const void *miiArg) {$/;"	f	file:
getIDWithAttrMask	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int getIDWithAttrMask(uint16_t* instructionID,$/;"	f	file:
getILP	CodeGen/ScheduleDAGInstrs.cpp	/^ILPValue ScheduleDAGILP::getILP(const SUnit *SU) {$/;"	f	class:ScheduleDAGILP
getIMM	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static int64_t getIMM(uint32_t insn) {$/;"	f	file:
getIP	MC/MCDisassembler/Disassembler.h	/^  MCInstPrinter *getIP() { return IP.get(); }$/;"	f	class:llvm::LLVMDisasmContext
getITCC	Target/ARM/Disassembler/ARMDisassembler.cpp	/^      unsigned getITCC() {$/;"	f	class:__anon290::ITStatus
getITInstrPredicate	Target/ARM/Thumb2InstrInfo.cpp	/^llvm::getITInstrPredicate(const MachineInstr *MI, unsigned &PredReg) {$/;"	f	class:llvm
getIVIncOperand	Analysis/ScalarEvolutionExpander.cpp	/^Instruction *SCEVExpander::getIVIncOperand(Instruction *IncV,$/;"	f	class:SCEVExpander
getIfExists	VMCore/Metadata.cpp	/^MDNode *MDNode::getIfExists(LLVMContext &Context, ArrayRef<Value*> Vals) {$/;"	f	class:MDNode
getImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  const MCExpr *getImm() const {$/;"	f	class:__anon261::ARMOperand
getImm	Target/Hexagon/HexagonHardwareLoops.cpp	/^    int64_t getImm() const {$/;"	f	class:__anon408::CountValue
getImm	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  const MCExpr *getImm() const {$/;"	f	struct:__anon446::MBlazeOperand
getImm	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  const MCExpr *getImm() const {$/;"	f	class:__anon423::MipsOperand
getImm	Target/Mips/MipsISelDAGToDAG.cpp	/^  inline SDValue getImm(const SDNode *Node, unsigned Imm) {$/;"	f	class:__anon435::MipsDAGToDAGISel	file:
getImm	Target/PowerPC/PPCCTRLoops.cpp	/^    int64_t getImm() const {$/;"	f	class:__anon325::CountValue
getImm	Target/X86/AsmParser/X86AsmParser.cpp	/^  const MCExpr *getImm() const {$/;"	f	struct:__anon336::X86Operand
getImmExtForm	Target/Hexagon/HexagonInstrInfo.cpp	/^unsigned HexagonInstrInfo::getImmExtForm(const MachineInstr* MI) const {$/;"	f	class:HexagonInstrInfo
getImmFixupKind	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^static MCFixupKind getImmFixupKind(uint64_t TSFlags) {$/;"	f	file:
getImpl	Linker/LinkModules.cpp	/^Type *TypeMapTy::getImpl(Type *Ty) {$/;"	f	class:TypeMapTy
getImpl	VMCore/Constants.cpp	/^Constant *ConstantDataSequential::getImpl(StringRef Elements, Type *Ty) {$/;"	f	class:ConstantDataSequential
getImpl	VMCore/PassRegistry.cpp	/^void *PassRegistry::getImpl() const {$/;"	f	class:PassRegistry
getImplicitSPRUseForDPRUse	Target/ARM/ARMBaseInstrInfo.cpp	/^static bool getImplicitSPRUseForDPRUse(const TargetRegisterInfo *TRI,$/;"	f	file:
getImpliedUser	VMCore/Use.cpp	/^const Use *Use::getImpliedUser() const {$/;"	f	class:llvm::Use
getIncomingBlock	CodeGen/MachineSSAUpdater.cpp	/^    MachineBasicBlock *getIncomingBlock() {$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
getIncomingBlock	Transforms/Utils/SSAUpdater.cpp	/^    BasicBlock *getIncomingBlock() { return PHI->getIncomingBlock(idx); }$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
getIncomingValue	CodeGen/MachineSSAUpdater.cpp	/^    unsigned getIncomingValue() { return PHI->getOperand(idx).getReg(); }$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
getIncomingValue	Transforms/Utils/SSAUpdater.cpp	/^    Value *getIncomingValue() { return PHI->getIncomingValue(idx); }$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
getIncrement	Transforms/Instrumentation/PathProfiling.cpp	/^long BLInstrumentationEdge::getIncrement() const {$/;"	f	class:BLInstrumentationEdge
getIncrementIndirectCounterFunc	Transforms/Instrumentation/GCOVProfiling.cpp	/^Constant *GCOVProfiler::getIncrementIndirectCounterFunc() {$/;"	f	class:GCOVProfiler
getIndex	Transforms/Scalar/SROA.cpp	/^  ConstantInt *getIndex(IRBuilder<> &IRB, uint64_t Offset) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
getIndexTyDie	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  DIE *getIndexTyDie() {$/;"	f	class:llvm::CompileUnit
getIndexedAddressParts	Target/Hexagon/HexagonISelLowering.cpp	/^static bool getIndexedAddressParts(SDNode *Ptr, EVT VT,$/;"	f	file:
getIndexedLoad	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getIndexedLoad(SDValue OrigLoad, DebugLoc dl, SDValue Base,$/;"	f	class:SelectionDAG
getIndexedModeName	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^const char *SDNode::getIndexedModeName(ISD::MemIndexedMode AM) {$/;"	f	class:SDNode
getIndexedOffset	VMCore/DataLayout.cpp	/^uint64_t DataLayout::getIndexedOffset(Type *ptrTy,$/;"	f	class:DataLayout
getIndexedStore	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getIndexedStore(SDValue OrigStore, DebugLoc dl, SDValue Base,$/;"	f	class:SelectionDAG
getIndexedType	VMCore/Instructions.cpp	/^Type *ExtractValueInst::getIndexedType(Type *Agg,$/;"	f	class:ExtractValueInst
getIndexedType	VMCore/Instructions.cpp	/^Type *GetElementPtrInst::getIndexedType(Type *Ptr, ArrayRef<Value *> IdxList) {$/;"	f	class:GetElementPtrInst
getIndexedType	VMCore/Instructions.cpp	/^Type *GetElementPtrInst::getIndexedType(Type *Ptr, ArrayRef<uint64_t> IdxList) {$/;"	f	class:GetElementPtrInst
getIndexedType	VMCore/Instructions.cpp	/^Type *GetElementPtrInst::getIndexedType(Type *Ptr,$/;"	f	class:GetElementPtrInst
getIndexedTypeInternal	VMCore/Instructions.cpp	/^static Type *getIndexedTypeInternal(Type *Ptr, ArrayRef<IndexTy> IdxList) {$/;"	f	file:
getIndices	VMCore/Constants.cpp	/^ArrayRef<unsigned> ConstantExpr::getIndices() const {$/;"	f	class:ConstantExpr
getIndirectSymAddr	Target/ARM/ARMJITInfo.h	/^    intptr_t getIndirectSymAddr(void *Addr) const {$/;"	f	class:llvm::ARMJITInfo
getInduction	Transforms/Vectorize/LoopVectorize.cpp	/^  PHINode *getInduction() {return Induction;}$/;"	f	class:__anon605::LoopVectorizationLegality
getInfinity	VMCore/Constants.cpp	/^ConstantFP *ConstantFP::getInfinity(Type *Ty, bool Negative) {$/;"	f	class:ConstantFP
getInfoForGlobal	Analysis/IPA/GlobalsModRef.cpp	/^    unsigned getInfoForGlobal(const GlobalValue *GV) const {$/;"	f	struct:__anon1::FunctionRecord
getInfoSection	DebugInfo/DWARFContext.h	/^  virtual StringRef getInfoSection() { return InfoSection; }$/;"	f	class:llvm::DWARFContextInMemory
getInitialFrameState	Target/Hexagon/HexagonRegisterInfo.cpp	/^void HexagonRegisterInfo::getInitialFrameState(std::vector<MachineMove>$/;"	f	class:HexagonRegisterInfo
getInlineAsmDiagnosticContext	VMCore/LLVMContext.cpp	/^void *LLVMContext::getInlineAsmDiagnosticContext() const {$/;"	f	class:LLVMContext
getInlineAsmDiagnosticHandler	VMCore/LLVMContext.cpp	/^LLVMContext::getInlineAsmDiagnosticHandler() const {$/;"	f	class:LLVMContext
getInlineAsmDialect	CodeGen/MachineInstr.cpp	/^InlineAsm::AsmDialect MachineInstr::getInlineAsmDialect() const {$/;"	f	class:MachineInstr
getInlineAsmLength	Target/TargetInstrInfo.cpp	/^unsigned TargetInstrInfo::getInlineAsmLength(const char *Str,$/;"	f	class:TargetInstrInfo
getInlineCost	Analysis/InlineCost.cpp	/^InlineCost InlineCostAnalyzer::getInlineCost(CallSite CS, Function *Callee,$/;"	f	class:InlineCostAnalyzer
getInlineCost	Analysis/InlineCost.cpp	/^InlineCost InlineCostAnalyzer::getInlineCost(CallSite CS, int Threshold) {$/;"	f	class:InlineCostAnalyzer
getInlineCost	Transforms/IPO/InlineAlways.cpp	/^InlineCost AlwaysInliner::getInlineCost(CallSite CS) {$/;"	f	class:AlwaysInliner
getInlineCost	Transforms/IPO/InlineSimple.cpp	/^    InlineCost getInlineCost(CallSite CS) {$/;"	f	class:__anon595::SimpleInliner
getInlineThreshold	Transforms/IPO/Inliner.cpp	/^unsigned Inliner::getInlineThreshold(CallSite CS) const {$/;"	f	class:Inliner
getInlinedAt	VMCore/DebugInfo.cpp	/^MDNode *DIVariable::getInlinedAt() const {$/;"	f	class:DIVariable
getInlinedAt	VMCore/DebugLoc.cpp	/^MDNode *DebugLoc::getInlinedAt(const LLVMContext &Ctx) const {$/;"	f	class:DebugLoc
getInlinedChainForAddress	DebugInfo/DWARFCompileUnit.cpp	/^DWARFCompileUnit::getInlinedChainForAddress(uint64_t Address) {$/;"	f	class:DWARFCompileUnit
getInlinedChainForAddress	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::getInlinedChainForAddress($/;"	f	class:DWARFDebugInfoEntryMinimal
getInliningInfoForAddress	DebugInfo/DWARFContext.cpp	/^DIInliningInfo DWARFContext::getInliningInfoForAddress(uint64_t Address,$/;"	f	class:DWARFContext
getInnerResumeDest	Transforms/Utils/InlineFunction.cpp	/^BasicBlock *InvokeInliningInfo::getInnerResumeDest() {$/;"	f	class:InvokeInliningInfo
getInputChainForNode	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static SDValue getInputChainForNode(SDNode *N) {$/;"	f	file:
getInsertElement	VMCore/Constants.cpp	/^Constant *ConstantExpr::getInsertElement(Constant *Val, Constant *Elt, $/;"	f	class:ConstantExpr
getInsertPointForUses	Transforms/Scalar/IndVarSimplify.cpp	/^static Instruction *getInsertPointForUses(Instruction *User, Value *Def,$/;"	f	file:
getInsertPos	CodeGen/SelectionDAG/InstrEmitter.h	/^  MachineBasicBlock::iterator getInsertPos() { return InsertPos; }$/;"	f	class:llvm::InstrEmitter
getInsertVINSERTF128Immediate	Target/X86/X86ISelLowering.cpp	/^unsigned X86::getInsertVINSERTF128Immediate(SDNode *N) {$/;"	f	class:X86
getInsertValue	VMCore/Constants.cpp	/^Constant *ConstantExpr::getInsertValue(Constant *Agg, Constant *Val,$/;"	f	class:ConstantExpr
getInsertionPoint	Transforms/Instrumentation/PathProfiling.cpp	/^BasicBlock::iterator PathProfiler::getInsertionPoint(BasicBlock* block, Value*$/;"	f	class:PathProfiler
getInst	Target/NVPTX/NVPTXUtilities.cpp	/^Instruction *llvm::getInst(Value *base, char *instName) {$/;"	f	class:llvm
getInstBundleLength	Target/ARM/ARMBaseInstrInfo.cpp	/^unsigned ARMBaseInstrInfo::getInstBundleLength(const MachineInstr *MI) const {$/;"	f	class:ARMBaseInstrInfo
getInstDesc	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static const MCInstrDesc &getInstDesc(unsigned Opcode) {$/;"	f	file:
getInstTypePair	Analysis/MemDepPrinter.cpp	/^    static InstTypePair getInstTypePair(MemDepResult dep) {$/;"	f	struct:__anon33::MemDepPrinter	file:
getInstTypePair	Analysis/MemDepPrinter.cpp	/^    static InstTypePair getInstTypePair(const Instruction* inst, DepType type) {$/;"	f	struct:__anon33::MemDepPrinter	file:
getInstance	Support/ThreadLocal.cpp	/^const void* ThreadLocalImpl::getInstance() {$/;"	f	class:llvm::ThreadLocalImpl
getInstrCount	CodeGen/MachineTraceMetrics.h	/^    unsigned getInstrCount() const {$/;"	f	class:llvm::MachineTraceMetrics::Trace
getInstrCycles	CodeGen/MachineTraceMetrics.h	/^    InstrCycles getInstrCycles(const MachineInstr *MI) const {$/;"	f	class:llvm::MachineTraceMetrics::Trace
getInstrInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMBaseInstrInfo *getInstrInfo() const {$/;"	f	class:llvm::ThumbTargetMachine
getInstrInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMInstrInfo     *getInstrInfo() const { return &InstrInfo; }$/;"	f	class:llvm::ARMTargetMachine
getInstrInfo	Target/CellSPU/SPUTargetMachine.h	/^  virtual const SPUInstrInfo     *getInstrInfo() const {$/;"	f	class:llvm::SPUTargetMachine
getInstrInfo	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const HexagonInstrInfo *getInstrInfo() const {$/;"	f	class:llvm::HexagonTargetMachine
getInstrInfo	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^  const MBlazeInstrInfo *getInstrInfo() {$/;"	f	class:__anon461::MBlazeDAGToDAGISel	file:
getInstrInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const MBlazeInstrInfo *getInstrInfo() const$/;"	f	class:llvm::MBlazeTargetMachine
getInstrInfo	Target/MSP430/MSP430TargetMachine.h	/^  virtual const MSP430InstrInfo *getInstrInfo() const  { return &InstrInfo; }$/;"	f	class:llvm::MSP430TargetMachine
getInstrInfo	Target/Mips/MipsISelDAGToDAG.cpp	/^  const MipsInstrInfo *getInstrInfo() {$/;"	f	class:__anon435::MipsDAGToDAGISel	file:
getInstrInfo	Target/Mips/MipsTargetMachine.h	/^  virtual const MipsInstrInfo *getInstrInfo() const$/;"	f	class:llvm::MipsTargetMachine
getInstrInfo	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual const NVPTXInstrInfo *getInstrInfo() const  { return &InstrInfo; }$/;"	f	class:llvm::NVPTXTargetMachine
getInstrInfo	Target/PowerPC/PPCTargetMachine.h	/^  virtual const PPCInstrInfo      *getInstrInfo() const { return &InstrInfo; }$/;"	f	class:llvm::PPCTargetMachine
getInstrInfo	Target/Sparc/SparcTargetMachine.h	/^  virtual const SparcInstrInfo *getInstrInfo() const { return &InstrInfo; }$/;"	f	class:llvm::SparcTargetMachine
getInstrInfo	Target/X86/X86FastISel.cpp	/^  const X86InstrInfo *getInstrInfo() const {$/;"	f	class:__anon381::X86FastISel	file:
getInstrInfo	Target/X86/X86ISelDAGToDAG.cpp	/^    const X86InstrInfo *getInstrInfo() {$/;"	f	class:__anon373::X86DAGToDAGISel	file:
getInstrInfo	Target/X86/X86TargetMachine.h	/^  virtual const X86InstrInfo     *getInstrInfo() const {$/;"	f	class:llvm::X86TargetMachine
getInstrInfo	Target/X86/X86TargetMachine.h	/^  virtual const X86InstrInfo     *getInstrInfo() const {$/;"	f	class:llvm::X86_32TargetMachine
getInstrInfo	Target/X86/X86TargetMachine.h	/^  virtual const X86InstrInfo     *getInstrInfo() const {$/;"	f	class:llvm::X86_64TargetMachine
getInstrInfo	Target/XCore/XCoreTargetMachine.h	/^  virtual const XCoreInstrInfo *getInstrInfo() const { return &InstrInfo; }$/;"	f	class:llvm::XCoreTargetMachine
getInstrItineraryData	Target/ARM/ARMSubtarget.h	/^  const InstrItineraryData &getInstrItineraryData() const { return InstrItins; }$/;"	f	class:llvm::ARMSubtarget
getInstrItineraryData	Target/ARM/ARMTargetMachine.h	/^  virtual const InstrItineraryData *getInstrItineraryData() const {$/;"	f	class:llvm::ARMBaseTargetMachine
getInstrItineraryData	Target/CellSPU/SPUSubtarget.h	/^    const InstrItineraryData &getInstrItineraryData() const {$/;"	f	class:llvm::SPUSubtarget
getInstrItineraryData	Target/CellSPU/SPUTargetMachine.h	/^  virtual const InstrItineraryData *getInstrItineraryData() const {$/;"	f	class:llvm::SPUTargetMachine
getInstrItineraryData	Target/Hexagon/HexagonSubtarget.h	/^  const InstrItineraryData &getInstrItineraryData() const { return InstrItins; }$/;"	f	class:llvm::HexagonSubtarget
getInstrItineraryData	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const InstrItineraryData* getInstrItineraryData() const {$/;"	f	class:llvm::HexagonTargetMachine
getInstrItineraryData	Target/MBlaze/MBlazeSubtarget.h	/^  const InstrItineraryData &getInstrItineraryData() const { return InstrItins; }$/;"	f	class:llvm::MBlazeSubtarget
getInstrItineraryData	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const InstrItineraryData *getInstrItineraryData() const$/;"	f	class:llvm::MBlazeTargetMachine
getInstrItineraryData	Target/PowerPC/PPCSubtarget.h	/^  const InstrItineraryData &getInstrItineraryData() const { return InstrItins; }$/;"	f	class:llvm::PPCSubtarget
getInstrItineraryData	Target/PowerPC/PPCTargetMachine.h	/^  virtual const InstrItineraryData *getInstrItineraryData() const {$/;"	f	class:llvm::PPCTargetMachine
getInstrItineraryData	Target/X86/X86Subtarget.h	/^  const InstrItineraryData &getInstrItineraryData() const { return InstrItins; }$/;"	f	class:llvm::X86Subtarget
getInstrItineraryData	Target/X86/X86TargetMachine.h	/^  virtual const InstrItineraryData *getInstrItineraryData() const {$/;"	f	class:llvm::X86TargetMachine
getInstrItineraryForCPU	MC/MCSubtargetInfo.cpp	/^MCSubtargetInfo::getInstrItineraryForCPU(StringRef CPU) const {$/;"	f	class:MCSubtargetInfo
getInstrLatency	CodeGen/TargetInstrInfoImpl.cpp	/^getInstrLatency(const InstrItineraryData *ItinData,$/;"	f	class:TargetInstrInfoImpl
getInstrLatency	CodeGen/TargetInstrInfoImpl.cpp	/^int TargetInstrInfoImpl::getInstrLatency(const InstrItineraryData *ItinData,$/;"	f	class:TargetInstrInfoImpl
getInstrLatency	Target/ARM/ARMBaseInstrInfo.cpp	/^int ARMBaseInstrInfo::getInstrLatency(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
getInstrLatency	Target/ARM/ARMBaseInstrInfo.cpp	/^unsigned ARMBaseInstrInfo::getInstrLatency(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
getInstrPredicate	Target/ARM/ARMBaseInstrInfo.cpp	/^llvm::getInstrPredicate(const MachineInstr *MI, unsigned &PredReg) {$/;"	f	class:llvm
getInstrSlack	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::Trace::getInstrSlack(const MachineInstr *MI) const {$/;"	f	class:MachineTraceMetrics::Trace
getInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeStatus ARMDisassembler::getInstruction(MCInst &MI, uint64_t &Size,$/;"	f	class:ARMDisassembler
getInstruction	Target/ARM/Disassembler/ARMDisassembler.cpp	/^DecodeStatus ThumbDisassembler::getInstruction(MCInst &MI, uint64_t &Size,$/;"	f	class:ThumbDisassembler
getInstruction	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^MCDisassembler::DecodeStatus MBlazeDisassembler::getInstruction(MCInst &instr,$/;"	f	class:MBlazeDisassembler
getInstruction	Target/Mips/Disassembler/MipsDisassembler.cpp	/^Mips64Disassembler::getInstruction(MCInst &instr,$/;"	f	class:Mips64Disassembler
getInstruction	Target/Mips/Disassembler/MipsDisassembler.cpp	/^MipsDisassembler::getInstruction(MCInst &instr,$/;"	f	class:MipsDisassembler
getInstruction	Target/X86/Disassembler/X86Disassembler.cpp	/^X86GenericDisassembler::getInstruction(MCInst &instr,$/;"	f	class:X86GenericDisassembler
getInstructionID	Bitcode/Writer/ValueEnumerator.cpp	/^unsigned ValueEnumerator::getInstructionID(const Instruction *Inst) const {$/;"	f	class:ValueEnumerator
getInstructionIndex	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    unsigned getInstructionIndex(const Instruction *I) {$/;"	f	class:__anon469::LargeBlockInfo
getInstructionTypes	Transforms/Vectorize/BBVectorize.cpp	/^    static inline void getInstructionTypes(Instruction *I,$/;"	f	struct:__anon604::BBVectorize
getInt	CodeGen/AsmPrinter/DwarfDebug.h	/^  int64_t getInt()                    { return Constants.Int; }$/;"	f	struct:llvm::DotDebugLocEntry
getInt	VMCore/DataLayout.cpp	/^static int getInt(StringRef R) {$/;"	f	file:
getInt16PtrTy	VMCore/Type.cpp	/^PointerType *Type::getInt16PtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getInt16Ty	VMCore/Type.cpp	/^IntegerType *Type::getInt16Ty(LLVMContext &C) { return &C.pImpl->Int16Ty; }$/;"	f	class:Type
getInt1PtrTy	VMCore/Type.cpp	/^PointerType *Type::getInt1PtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getInt1Ty	VMCore/Type.cpp	/^IntegerType *Type::getInt1Ty(LLVMContext &C) { return &C.pImpl->Int1Ty; }$/;"	f	class:Type
getInt32PtrTy	VMCore/Type.cpp	/^PointerType *Type::getInt32PtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getInt32Ty	VMCore/Type.cpp	/^IntegerType *Type::getInt32Ty(LLVMContext &C) { return &C.pImpl->Int32Ty; }$/;"	f	class:Type
getInt64PtrTy	VMCore/Type.cpp	/^PointerType *Type::getInt64PtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getInt64Ty	VMCore/Type.cpp	/^IntegerType *Type::getInt64Ty(LLVMContext &C) { return &C.pImpl->Int64Ty; }$/;"	f	class:Type
getInt8PtrTy	VMCore/Type.cpp	/^PointerType *Type::getInt8PtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getInt8Ty	VMCore/Type.cpp	/^IntegerType *Type::getInt8Ty(LLVMContext &C) { return &C.pImpl->Int8Ty; }$/;"	f	class:Type
getIntNPtrTy	VMCore/Type.cpp	/^PointerType *Type::getIntNPtrTy(LLVMContext &C, unsigned N, unsigned AS) {$/;"	f	class:Type
getIntNTy	VMCore/Type.cpp	/^IntegerType *Type::getIntNTy(LLVMContext &C, unsigned N) {$/;"	f	class:Type
getIntPtrConstant	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getIntPtrConstant(uint64_t Val, bool isTarget) {$/;"	f	class:SelectionDAG
getIntPtrType	VMCore/DataLayout.cpp	/^IntegerType *DataLayout::getIntPtrType(LLVMContext &C,$/;"	f	class:DataLayout
getIntToPtr	VMCore/Constants.cpp	/^Constant *ConstantExpr::getIntToPtr(Constant *C, Type *DstTy) {$/;"	f	class:ConstantExpr
getIntegerBitWidth	VMCore/Type.cpp	/^unsigned Type::getIntegerBitWidth() const {$/;"	f	class:Type
getIntegerCast	VMCore/Constants.cpp	/^Constant *ConstantExpr::getIntegerCast(Constant *C, Type *Ty, $/;"	f	class:ConstantExpr
getIntegerValue	VMCore/Constants.cpp	/^Constant *Constant::getIntegerValue(Type *Ty, const APInt &V) {$/;"	f	class:Constant
getIntelMemOperandSize	Target/X86/AsmParser/X86AsmParser.cpp	/^static unsigned getIntelMemOperandSize(StringRef OpStr) {$/;"	f	file:
getIntrinsicID	Target/TargetIntrinsicInfo.cpp	/^unsigned TargetIntrinsicInfo::getIntrinsicID(Function *F) const {$/;"	f	class:TargetIntrinsicInfo
getIntrinsicID	VMCore/Function.cpp	/^unsigned Function::getIntrinsicID() const {$/;"	f	class:Function
getIntrinsicInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    const TargetIntrinsicInfo *getIntrinsicInfo() const$/;"	f	class:llvm::MBlazeTargetMachine
getIntrinsicInfoTableEntries	VMCore/Function.cpp	/^void Intrinsic::getIntrinsicInfoTableEntries(ID id, $/;"	f	class:Intrinsic
getInvariants	Transforms/IPO/GlobalOpt.cpp	/^  const SmallPtrSet<GlobalVariable*, 8> &getInvariants() const {$/;"	f	class:__anon591::Evaluator
getInversePredicate	VMCore/Instructions.cpp	/^CmpInst::Predicate CmpInst::getInversePredicate(Predicate pred) {$/;"	f	class:CmpInst
getInvertedPredicatedOpcode	Target/Hexagon/HexagonInstrInfo.cpp	/^unsigned HexagonInstrInfo::getInvertedPredicatedOpcode(const int Opc) const {$/;"	f	class:HexagonInstrInfo
getJITInfo	ExecutionEngine/JIT/JIT.h	/^  TargetJITInfo &getJITInfo() const { return TJI; }$/;"	f	class:llvm::JIT
getJITInfo	Target/ARM/ARMTargetMachine.h	/^  virtual       ARMJITInfo       *getJITInfo()         { return &JITInfo; }$/;"	f	class:llvm::ARMBaseTargetMachine
getJITInfo	Target/CellSPU/SPUTargetMachine.h	/^  virtual       TargetJITInfo    *getJITInfo() {$/;"	f	class:llvm::SPUTargetMachine
getJITInfo	Target/Mips/MipsTargetMachine.h	/^  virtual MipsJITInfo *getJITInfo()$/;"	f	class:llvm::MipsTargetMachine
getJITInfo	Target/PowerPC/PPCTargetMachine.h	/^  virtual       PPCJITInfo        *getJITInfo()         { return &JITInfo; }$/;"	f	class:llvm::PPCTargetMachine
getJITInfo	Target/X86/X86TargetMachine.h	/^  virtual       X86JITInfo       *getJITInfo()         {$/;"	f	class:llvm::X86TargetMachine
getJITInfo	Target/X86/X86TargetMachine.h	/^  virtual       X86JITInfo       *getJITInfo()         {$/;"	f	class:llvm::X86_32TargetMachine
getJITInfo	Target/X86/X86TargetMachine.h	/^  virtual       X86JITInfo       *getJITInfo()         {$/;"	f	class:llvm::X86_64TargetMachine
getJITResolver	ExecutionEngine/JIT/JITEmitter.cpp	/^    JITResolver &getJITResolver() { return Resolver; }$/;"	f	class:__anon182::JITEmitter
getJTISymbol	CodeGen/MachineFunction.cpp	/^MCSymbol *MachineFunction::getJTISymbol(unsigned JTI, MCContext &Ctx, $/;"	f	class:MachineFunction
getJumpBufAlignment	Target/TargetTransformImpl.cpp	/^unsigned ScalarTargetTransformImpl::getJumpBufAlignment() const {$/;"	f	class:ScalarTargetTransformImpl
getJumpBufSize	Target/TargetTransformImpl.cpp	/^unsigned ScalarTargetTransformImpl::getJumpBufSize() const {$/;"	f	class:ScalarTargetTransformImpl
getJumpTable	CodeGen/MachineInstr.cpp	/^MachinePointerInfo MachinePointerInfo::getJumpTable() {$/;"	f	class:MachinePointerInfo
getJumpTable	CodeGen/PseudoSourceValue.cpp	/^const PseudoSourceValue *PseudoSourceValue::getJumpTable()$/;"	f	class:PseudoSourceValue
getJumpTable	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getJumpTable(int JTI, EVT VT, bool isTarget,$/;"	f	class:SelectionDAG
getJumpTableBaseAddr	Target/ARM/ARMJITInfo.h	/^    intptr_t getJumpTableBaseAddr(unsigned JTI) const {$/;"	f	class:llvm::ARMJITInfo
getJumpTableEncoding	CodeGen/SelectionDAG/TargetLowering.cpp	/^unsigned TargetLowering::getJumpTableEncoding() const {$/;"	f	class:TargetLowering
getJumpTableEncoding	Target/ARM/ARMISelLowering.cpp	/^unsigned ARMTargetLowering::getJumpTableEncoding() const {$/;"	f	class:ARMTargetLowering
getJumpTableEncoding	Target/Mips/MipsISelLowering.cpp	/^unsigned MipsTargetLowering::getJumpTableEncoding() const {$/;"	f	class:MipsTargetLowering
getJumpTableEncoding	Target/X86/X86ISelLowering.cpp	/^unsigned X86TargetLowering::getJumpTableEncoding() const {$/;"	f	class:X86TargetLowering
getJumpTableEncoding	Target/XCore/XCoreISelLowering.cpp	/^unsigned XCoreTargetLowering::getJumpTableEncoding() const {$/;"	f	class:XCoreTargetLowering
getJumpTableEntryAddress	ExecutionEngine/JIT/JITEmitter.cpp	/^uintptr_t JITEmitter::getJumpTableEntryAddress(unsigned Index) const {$/;"	f	class:JITEmitter
getJumpTargetOpValue	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^getJumpTargetOpValue(const MCInst &MI, unsigned OpNo,$/;"	f	class:MipsMCCodeEmitter
getJumpTargetOpValue	Target/Mips/MipsCodeEmitter.cpp	/^unsigned MipsCodeEmitter::getJumpTargetOpValue(const MachineInstr &MI,$/;"	f	class:MipsCodeEmitter
getJumpThreadDuplicationCost	Transforms/Scalar/JumpThreading.cpp	/^static unsigned getJumpThreadDuplicationCost(const BasicBlock *BB) {$/;"	f	file:
getKey	Support/YAMLParser.cpp	/^Node *KeyValueNode::getKey() {$/;"	f	class:KeyValueNode
getKind	AsmParser/LLLexer.h	/^    lltok::Kind getKind() const { return CurKind; }$/;"	f	class:llvm::LLLexer
getKind	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  DbgValueKind getKind() { return kind; }$/;"	f	class:llvm::SDDbgValue
getKind	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  VariantKind getKind() const { return Kind; }$/;"	f	class:llvm::ARMMCExpr
getKindForGlobal	Target/TargetLoweringObjectFile.cpp	/^SectionKind TargetLoweringObjectFile::getKindForGlobal(const GlobalValue *GV,$/;"	f	class:TargetLoweringObjectFile
getKnownConstant	Transforms/Scalar/JumpThreading.cpp	/^static Constant *getKnownConstant(Value *Val, ConstantPreference Preference) {$/;"	f	file:
getLDMDefCycle	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::getLDMDefCycle(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
getLEArOpcode	Target/X86/X86FrameLowering.cpp	/^static unsigned getLEArOpcode(unsigned is64Bit) {$/;"	f	file:
getLLVMRegNum	MC/MCRegisterInfo.cpp	/^int MCRegisterInfo::getLLVMRegNum(unsigned RegNum, bool isEH) const {$/;"	f	class:MCRegisterInfo
getLLVMSyntaxVariant	MC/MCDisassembler/EDDisassembler.cpp	/^static int getLLVMSyntaxVariant(Triple::ArchType arch,$/;"	f	file:
getLO16Encoding	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^unsigned PPCMCCodeEmitter::getLO16Encoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:PPCMCCodeEmitter
getLO16Encoding	Target/PowerPC/PPCCodeEmitter.cpp	/^unsigned PPCCodeEmitter::getLO16Encoding(const MachineInstr &MI,$/;"	f	class:PPCCodeEmitter
getLRCalc	CodeGen/SplitKit.h	/^  LiveRangeCalc &getLRCalc(unsigned RegIdx) {$/;"	f	class:llvm::SplitEditor
getLRSpillSlot	Target/XCore/XCoreMachineFunctionInfo.h	/^  int getLRSpillSlot() const { return LRSpillSlot; }$/;"	f	class:llvm::XCoreFunctionInfo
getLSMultipleTransferSize	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static inline unsigned getLSMultipleTransferSize(MachineInstr *MI) {$/;"	f	file:
getLShr	VMCore/Constants.cpp	/^Constant *ConstantExpr::getLShr(Constant *C1, Constant *C2, bool isExact) {$/;"	f	class:ConstantExpr
getLabel	CodeGen/AsmPrinter/DwarfDebug.h	/^  MCSymbol *getLabel() const { return Label; }$/;"	f	class:llvm::SrcLineInfo
getLabelAddress	ExecutionEngine/JIT/JITEmitter.cpp	/^    virtual uintptr_t getLabelAddress(MCSymbol *Label) const {$/;"	f	class:__anon182::JITEmitter
getLabelAfterInsn	CodeGen/AsmPrinter/DwarfDebug.cpp	/^const MCSymbol *DwarfDebug::getLabelAfterInsn(const MachineInstr *MI) {$/;"	f	class:DwarfDebug
getLabelBeforeInsn	CodeGen/AsmPrinter/DwarfDebug.cpp	/^const MCSymbol *DwarfDebug::getLabelBeforeInsn(const MachineInstr *MI) {$/;"	f	class:DwarfDebug
getLabelId	Target/ARM/ARMConstantPoolValue.h	/^  unsigned getLabelId() const { return LabelId; }$/;"	f	class:llvm::ARMConstantPoolValue
getLabelLocations	ExecutionEngine/JIT/JITEmitter.cpp	/^    virtual DenseMap<MCSymbol*, uintptr_t> *getLabelLocations() {$/;"	f	class:__anon182::JITEmitter
getLabelTy	VMCore/Type.cpp	/^Type *Type::getLabelTy(LLVMContext &C) { return &C.pImpl->LabelTy; }$/;"	f	class:Type
getLandingPadInst	Transforms/Utils/InlineFunction.cpp	/^    LandingPadInst *getLandingPadInst() const { return CallerLPad; }$/;"	f	class:__anon468::InvokeInliningInfo
getLandingPadInst	VMCore/BasicBlock.cpp	/^LandingPadInst *BasicBlock::getLandingPadInst() {$/;"	f	class:BasicBlock
getLandingPadInst	VMCore/BasicBlock.cpp	/^const LandingPadInst *BasicBlock::getLandingPadInst() const {$/;"	f	class:BasicBlock
getLandingPadInst	VMCore/Instructions.cpp	/^LandingPadInst *InvokeInst::getLandingPadInst() const {$/;"	f	class:InvokeInst
getLandingPadSuccessor	CodeGen/MachineBasicBlock.cpp	/^const MachineBasicBlock *MachineBasicBlock::getLandingPadSuccessor() const {$/;"	f	class:MachineBasicBlock
getLanguage	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  unsigned getLanguage()            const { return Language; }$/;"	f	class:llvm::CompileUnit
getLargest	Support/APFloat.cpp	/^APFloat APFloat::getLargest(const fltSemantics &Sem, bool Negative) {$/;"	f	class:APFloat
getLargestLegalSuperClass	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::getLargestLegalSuperClass(const TargetRegisterClass *RC)$/;"	f	class:ARMBaseRegisterInfo
getLargestLegalSuperClass	Target/ARM/Thumb1RegisterInfo.cpp	/^Thumb1RegisterInfo::getLargestLegalSuperClass(const TargetRegisterClass *RC)$/;"	f	class:Thumb1RegisterInfo
getLargestLegalSuperClass	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getLargestLegalSuperClass(const TargetRegisterClass *RC) const{$/;"	f	class:X86RegisterInfo
getLastNonDebugInstr	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::getLastNonDebugInstr() const {$/;"	f	class:MachineBasicBlock
getLastNonDebugInstr	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::iterator MachineBasicBlock::getLastNonDebugInstr() {$/;"	f	class:MachineBasicBlock
getLastRealOperand	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^static unsigned getLastRealOperand(MachineBasicBlock::iterator &instr) {$/;"	f	file:
getLastSplitPoint	CodeGen/SplitKit.h	/^  SlotIndex getLastSplitPoint(unsigned Num) {$/;"	f	class:llvm::SplitAnalysis
getLastSplitPointIter	CodeGen/SplitKit.cpp	/^SplitAnalysis::getLastSplitPointIter(MachineBasicBlock *MBB) {$/;"	f	class:SplitAnalysis
getLatticeValue	Transforms/Scalar/SCCP.cpp	/^  LatticeValueTy getLatticeValue() const {$/;"	f	class:__anon530::LatticeVal	file:
getLatticeValueFor	Transforms/Scalar/SCCP.cpp	/^  LatticeVal getLatticeValueFor(Value *V) const {$/;"	f	class:__anon531::SCCPSolver
getLazyBitcodeModule	Bitcode/Reader/BitcodeReader.cpp	/^Module *llvm::getLazyBitcodeModule(MemoryBuffer *Buffer,$/;"	f	class:llvm
getLazyFunctionStub	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITResolver::getLazyFunctionStub(Function *F) {$/;"	f	class:JITResolver
getLazyFunctionStubIfAvailable	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITResolver::getLazyFunctionStubIfAvailable(Function *F) {$/;"	f	class:JITResolver
getLazyResolverFunction	Target/ARM/ARMJITInfo.cpp	/^ARMJITInfo::getLazyResolverFunction(JITCompilerFn F) {$/;"	f	class:ARMJITInfo
getLazyResolverFunction	Target/Mips/MipsJITInfo.cpp	/^TargetJITInfo::LazyResolverFn MipsJITInfo::getLazyResolverFunction($/;"	f	class:MipsJITInfo
getLazyResolverFunction	Target/PowerPC/PPCJITInfo.cpp	/^PPCJITInfo::getLazyResolverFunction(JITCompilerFn Fn) {$/;"	f	class:PPCJITInfo
getLazyResolverFunction	Target/X86/X86JITInfo.cpp	/^X86JITInfo::getLazyResolverFunction(JITCompilerFn F) {$/;"	f	class:X86JITInfo
getLdStCodeAddrSpace	Target/NVPTX/NVPTXInstrInfo.h	/^  unsigned getLdStCodeAddrSpace(const MachineInstr &MI) const {$/;"	f	class:llvm::NVPTXInstrInfo
getLdStSORegOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getLdStSORegOpValue(const MachineInstr &MI, unsigned OpIdx)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getLdStSORegOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getLdStSORegOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getLdStmModeOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getLdStmModeOpValue(const MachineInstr &MI, unsigned OpIdx)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getLdStmModeOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  uint32_t getLdStmModeOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:__anon283::ARMMCCodeEmitter
getLeader	CodeGen/LiveDebugVariables.cpp	/^  UserValue *getLeader() {$/;"	f	class:__anon152::UserValue
getLeader	CodeGen/StrongPHIElimination.cpp	/^StrongPHIElimination::Node::getLeader() {$/;"	f	class:StrongPHIElimination::Node
getLeftSibling	Support/IntervalMap.cpp	/^NodeRef Path::getLeftSibling(unsigned Level) const {$/;"	f	class:llvm::IntervalMapImpl::Path
getLegalSplat	Target/X86/X86ISelLowering.cpp	/^static SDValue getLegalSplat(SelectionDAG &DAG, SDValue V, int EltNo) {$/;"	f	file:
getLength	DebugInfo/DWARFCompileUnit.h	/^  uint32_t getLength() const { return Length; }$/;"	f	class:llvm::DWARFCompileUnit
getLength	DebugInfo/DWARFDebugLine.h	/^    uint32_t getLength() const {$/;"	f	struct:llvm::DWARFDebugLine::Prologue
getLexer	MC/MCParser/AsmParser.cpp	/^  virtual MCAsmLexer &getLexer() { return Lexer; }$/;"	f	class:__anon211::AsmParser
getLexer	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  MCAsmLexer &getLexer() const { return Parser.getLexer(); }$/;"	f	class:__anon259::ARMAsmParser	file:
getLexer	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  MCAsmLexer &getLexer() const { return Parser.getLexer(); }$/;"	f	class:__anon446::MBlazeAsmParser	file:
getLexer	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  MCAsmLexer &getLexer() const { return Parser.getLexer(); }$/;"	f	class:__anon422::MipsAsmParser
getLexer	Target/X86/AsmParser/X86AsmParser.cpp	/^  MCAsmLexer &getLexer() const { return Parser.getLexer(); }$/;"	f	class:__anon335::X86AsmParser	file:
getLibFunc	Target/TargetLibraryInfo.cpp	/^bool TargetLibraryInfo::getLibFunc(StringRef funcName,$/;"	f	class:TargetLibraryInfo
getLibSupportInfoOutputFilename	Support/Timer.cpp	/^static std::string &getLibSupportInfoOutputFilename() {$/;"	f	file:
getLibcallReg	Target/ARM/ARMFastISel.cpp	/^unsigned ARMFastISel::getLibcallReg(const Twine &Name) {$/;"	f	class:ARMFastISel
getLibraryNext	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getLibraryNext(DataRefImpl LibData,$/;"	f	class:COFFObjectFile
getLibraryNext	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getLibraryNext(DataRefImpl LibData,$/;"	f	class:llvm::object::MachOObjectFile
getLibraryPath	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getLibraryPath(DataRefImpl LibData,$/;"	f	class:COFFObjectFile
getLibraryPath	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getLibraryPath(DataRefImpl LibData,$/;"	f	class:llvm::object::MachOObjectFile
getLine	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned getLine() const { return Line; }$/;"	f	class:llvm::SrcLineInfo
getLineAndColumn	Support/SourceMgr.cpp	/^SourceMgr::getLineAndColumn(SMLoc Loc, int BufferID) const {$/;"	f	class:SourceMgr
getLineInfoForAddress	DebugInfo/DWARFContext.cpp	/^DILineInfo DWARFContext::getLineInfoForAddress(uint64_t Address,$/;"	f	class:DWARFContext
getLineSection	DebugInfo/DWARFContext.h	/^  virtual StringRef getLineSection() { return LineSection; }$/;"	f	class:llvm::DWARFContextInMemory
getLineTable	DebugInfo/DWARFDebugLine.cpp	/^DWARFDebugLine::getLineTable(uint32_t offset) const {$/;"	f	class:DWARFDebugLine
getLineTableForCompileUnit	DebugInfo/DWARFContext.cpp	/^DWARFContext::getLineTableForCompileUnit(DWARFCompileUnit *cu) {$/;"	f	class:DWARFContext
getLinkageResult	Linker/LinkModules.cpp	/^bool ModuleLinker::getLinkageResult(GlobalValue *Dest, const GlobalValue *Src,$/;"	f	class:ModuleLinker
getLinkageSize	Target/PowerPC/PPCFrameLowering.h	/^  static unsigned getLinkageSize(bool isPPC64, bool isDarwinABI) {$/;"	f	class:llvm::PPCFrameLowering
getLinkedToGlobal	Linker/LinkModules.cpp	/^    GlobalValue *getLinkedToGlobal(GlobalValue *SrcGV) {$/;"	f	class:__anon202::ModuleLinker	file:
getListTy	TableGen/Record.cpp	/^ListRecTy *RecTy::getListTy() {$/;"	f	class:RecTy
getLiveIn	Target/MBlaze/MBlazeMachineFunction.h	/^  const SmallVector<int, 16>& getLiveIn() const { return LiveInFI; }$/;"	f	class:llvm::MBlazeFunctionInfo
getLiveInPhysReg	CodeGen/MachineRegisterInfo.cpp	/^unsigned MachineRegisterInfo::getLiveInPhysReg(unsigned VReg) const {$/;"	f	class:MachineRegisterInfo
getLiveInVirtReg	CodeGen/MachineRegisterInfo.cpp	/^unsigned MachineRegisterInfo::getLiveInVirtReg(unsigned PReg) const {$/;"	f	class:MachineRegisterInfo
getLiveUnions	CodeGen/LiveRegMatrix.h	/^  LiveIntervalUnion *getLiveUnions() { return &Matrix[0]; }$/;"	f	class:llvm::LiveRegMatrix
getLoBits	Support/APInt.cpp	/^APInt APInt::getLoBits(unsigned numBits) const {$/;"	f	class:APInt
getLoad	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getLoad(EVT VT, DebugLoc dl,$/;"	f	class:SelectionDAG
getLoad	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getLoad(ISD::MemIndexedMode AM, ISD::LoadExtType ExtType,$/;"	f	class:SelectionDAG
getLoad	Transforms/Scalar/GVN.cpp	/^  static AvailableValueInBlock getLoad(BasicBlock *BB, LoadInst *LI,$/;"	f	struct:__anon538::AvailableValueInBlock
getLoadCommandInfo	Object/MachOObject.cpp	/^MachOObject::getLoadCommandInfo(unsigned Index) const {$/;"	f	class:MachOObject
getLoadLoadClobberFullWidthSize	Analysis/MemoryDependenceAnalysis.cpp	/^getLoadLoadClobberFullWidthSize(const Value *MemLocBase, int64_t MemLocOffs,$/;"	f	class:MemoryDependenceAnalysis
getLoadName	Object/COFFObjectFile.cpp	/^StringRef COFFObjectFile::getLoadName() const {$/;"	f	class:COFFObjectFile
getLoadName	Object/MachOObjectFile.cpp	/^StringRef MachOObjectFile::getLoadName() const {$/;"	f	class:llvm::object::MachOObjectFile
getLoadOpcode	Target/X86/X86ISelLowering.cpp	/^static unsigned getLoadOpcode(EVT VT) {$/;"	f	file:
getLoadRegOpcode	Target/X86/X86InstrInfo.cpp	/^static unsigned getLoadRegOpcode(unsigned DestReg,$/;"	f	file:
getLoadStoreMultipleOpcode	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static int getLoadStoreMultipleOpcode(int Opcode, ARM_AM::AMSubMode Mode) {$/;"	f	file:
getLoadStoreMultipleSubMode	Target/ARM/ARMLoadStoreOptimizer.cpp	/^AMSubMode getLoadStoreMultipleSubMode(int Opcode) {$/;"	f	namespace:llvm::ARM_AM
getLoadStoreRegOpcode	Target/X86/X86InstrInfo.cpp	/^static unsigned getLoadStoreRegOpcode(unsigned Reg,$/;"	f	file:
getLoc	AsmParser/LLLexer.h	/^    LocTy getLoc() const { return SMLoc::getFromPointer(TokStart); }$/;"	f	class:llvm::LLLexer
getLoc	MC/MCParser/MCAsmLexer.cpp	/^SMLoc AsmToken::getLoc() const {$/;"	f	class:AsmToken
getLoc	MC/MCParser/MCAsmLexer.cpp	/^SMLoc MCAsmLexer::getLoc() const {$/;"	f	class:MCAsmLexer
getLoc	TableGen/TGLexer.cpp	/^SMLoc TGLexer::getLoc() const {$/;"	f	class:TGLexer
getLocForRead	Transforms/Scalar/DeadStoreElimination.cpp	/^getLocForRead(Instruction *Inst, AliasAnalysis &AA) {$/;"	f	file:
getLocForWrite	Transforms/Scalar/DeadStoreElimination.cpp	/^getLocForWrite(Instruction *Inst, AliasAnalysis &AA) {$/;"	f	file:
getLocRange	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  SMRange getLocRange() const { return SMRange(StartLoc, EndLoc); }$/;"	f	class:__anon261::ARMOperand
getLocRange	Target/X86/AsmParser/X86AsmParser.cpp	/^  SMRange getLocRange() const { return SMRange(StartLoc, EndLoc); }$/;"	f	struct:__anon336::X86Operand
getLocalSlot	VMCore/AsmWriter.cpp	/^int SlotTracker::getLocalSlot(const Value *V) {$/;"	f	class:SlotTracker
getLocation	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::Location AliasAnalysis::getLocation(const LoadInst *LI) {$/;"	f	class:AliasAnalysis
getLocation	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::Location AliasAnalysis::getLocation(const StoreInst *SI) {$/;"	f	class:AliasAnalysis
getLocation	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::Location AliasAnalysis::getLocation(const VAArgInst *VI) {$/;"	f	class:AliasAnalysis
getLocation	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getLocation(const AtomicCmpXchgInst *CXI) {$/;"	f	class:AliasAnalysis
getLocation	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getLocation(const AtomicRMWInst *RMWI) {$/;"	f	class:AliasAnalysis
getLocationForDest	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getLocationForDest(const MemIntrinsic *MTI) {$/;"	f	class:AliasAnalysis
getLocationForSource	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getLocationForSource(const MemTransferInst *MTI) {$/;"	f	class:AliasAnalysis
getLocationInfo	Analysis/DbgInfoPrinter.cpp	/^static bool getLocationInfo(const Value *V, std::string &DisplayName,$/;"	f	file:
getLocationInfo	Analysis/LibCallSemantics.cpp	/^const LibCallLocationInfo &LibCallInfo::getLocationInfo(unsigned LocID) const {$/;"	f	class:LibCallInfo
getLocationNo	CodeGen/LiveDebugVariables.cpp	/^  unsigned getLocationNo(const MachineOperand &LocMO) {$/;"	f	class:__anon152::UserValue
getLongestEntryLength	MC/SubtargetFeature.cpp	/^static size_t getLongestEntryLength(const SubtargetFeatureKV *Table,$/;"	f	file:
getLoopDisposition	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getLoopDisposition(const SCEV *S, const Loop *L) {$/;"	f	class:ScalarEvolution
getLoopFor	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::Ensemble::getLoopFor(const MachineBasicBlock *MBB) const {$/;"	f	class:MachineTraceMetrics::Ensemble
getLoopMaxVF	Transforms/Vectorize/LoopVectorize.cpp	/^unsigned LoopVectorizationLegality::getLoopMaxVF() {$/;"	f	class:__anon605::LoopVectorizationLegality
getLoopPhiForCounter	Transforms/Scalar/IndVarSimplify.cpp	/^static PHINode *getLoopPhiForCounter(Value *IncV, Loop *L, DominatorTree *DT) {$/;"	f	file:
getLoopRange	CodeGen/MachineLoopRanges.cpp	/^MachineLoopRange *MachineLoopRanges::getLoopRange(const MachineLoop *Loop) {$/;"	f	class:MachineLoopRanges
getLoopTest	Transforms/Scalar/IndVarSimplify.cpp	/^static ICmpInst *getLoopTest(Loop *L) {$/;"	f	file:
getLoops	Analysis/LoopDependenceAnalysis.cpp	/^void LoopDependenceAnalysis::getLoops(const SCEV *S,$/;"	f	class:LoopDependenceAnalysis
getLowAndHighPC	DebugInfo/DWARFDebugInfoEntry.cpp	/^bool DWARFDebugInfoEntryMinimal::getLowAndHighPC(const DWARFCompileUnit *CU,$/;"	f	class:DWARFDebugInfoEntryMinimal
getLowerBound	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::getLowerBound(BoundInfo *Bound) const {$/;"	f	class:DependenceAnalysis
getMBB	Target/ARM/ARMConstantPoolValue.h	/^  const MachineBasicBlock *getMBB() const { return MBB; }$/;"	f	class:llvm::ARMConstantPoolMBB
getMBlazeRegisterFromNumbering	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^static inline unsigned getMBlazeRegisterFromNumbering(unsigned Reg) {$/;"	f	namespace:llvm
getMBlazeRegisterNumbering	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^static inline unsigned getMBlazeRegisterNumbering(unsigned RegEnum) {$/;"	f	namespace:llvm
getMBlazeTargetMachine	Target/MBlaze/MBlazeTargetMachine.cpp	/^  MBlazeTargetMachine &getMBlazeTargetMachine() const {$/;"	f	class:__anon459::MBlazePassConfig
getMDKindID	VMCore/LLVMContext.cpp	/^unsigned LLVMContext::getMDKindID(StringRef Name) const {$/;"	f	class:LLVMContext
getMDKindID	VMCore/Module.cpp	/^unsigned Module::getMDKindID(StringRef Name) const {$/;"	f	class:Module
getMDKindNames	VMCore/LLVMContext.cpp	/^void LLVMContext::getMDKindNames(SmallVectorImpl<StringRef> &Names) const {$/;"	f	class:LLVMContext
getMDKindNames	VMCore/Module.cpp	/^void Module::getMDKindNames(SmallVectorImpl<StringRef> &Result) const {$/;"	f	class:Module
getMDNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getMDNode(const MDNode *MD) {$/;"	f	class:SelectionDAG
getMDNode	VMCore/Metadata.cpp	/^MDNode *MDNode::getMDNode(LLVMContext &Context, ArrayRef<Value*> Vals,$/;"	f	class:MDNode
getMDPtr	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  MDNode *getMDPtr() { return mdPtr; }$/;"	f	class:llvm::SDDbgValue
getMDValues	Bitcode/Writer/ValueEnumerator.h	/^  const ValueList &getMDValues() const { return MDValues; }$/;"	f	class:llvm::ValueEnumerator
getMI	Target/Hexagon/HexagonMCInst.h	/^    const MachineInstr* getMI() const { return MachineI; }$/;"	f	class:llvm::HexagonMCInst
getMI	Transforms/Scalar/GVN.cpp	/^  static AvailableValueInBlock getMI(BasicBlock *BB, MemIntrinsic *MI,$/;"	f	struct:__anon538::AvailableValueInBlock
getMInsn	CodeGen/AsmPrinter/DwarfDebug.h	/^  const MachineInstr *getMInsn()     const { return MInsn; }$/;"	f	class:llvm::DbgVariable
getMOVDDup	Target/X86/X86ISelLowering.cpp	/^SDValue getMOVDDup(SDValue &Op, DebugLoc &dl, SDValue V1, SelectionDAG &DAG) {$/;"	f	file:
getMOVHighToLow	Target/X86/X86ISelLowering.cpp	/^SDValue getMOVHighToLow(SDValue &Op, DebugLoc &dl, SelectionDAG &DAG) {$/;"	f	file:
getMOVL	Target/X86/X86ISelLowering.cpp	/^static SDValue getMOVL(SelectionDAG &DAG, DebugLoc dl, EVT VT, SDValue V1,$/;"	f	file:
getMOVLP	Target/X86/X86ISelLowering.cpp	/^SDValue getMOVLP(SDValue &Op, DebugLoc &dl, SelectionDAG &DAG, bool HasSSE2) {$/;"	f	file:
getMOVLowToHigh	Target/X86/X86ISelLowering.cpp	/^SDValue getMOVLowToHigh(SDValue &Op, DebugLoc &dl, SelectionDAG &DAG,$/;"	f	file:
getMPIter	CodeGen/BranchFolding.h	/^      MPIterator getMPIter() const {$/;"	f	class:llvm::BranchFolder::SameTailElt
getMSP430TargetMachine	Target/MSP430/MSP430TargetMachine.cpp	/^  MSP430TargetMachine &getMSP430TargetMachine() const {$/;"	f	class:__anon390::MSP430PassConfig
getMSRMask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  unsigned getMSRMask() const {$/;"	f	class:__anon261::ARMOperand
getMacOSXVersion	Support/Triple.cpp	/^bool Triple::getMacOSXVersion(unsigned &Major, unsigned &Minor,$/;"	f	class:Triple
getMachOMMI	Target/PowerPC/PPCMCInstLower.cpp	/^static MachineModuleInfoMachO &getMachOMMI(AsmPrinter &AP) {$/;"	f	file:
getMachOMMI	Target/X86/X86MCInstLower.cpp	/^MachineModuleInfoMachO &X86MCInstLower::getMachOMMI() const {$/;"	f	class:X86MCInstLower
getMachOSection	MC/MCContext.cpp	/^getMachOSection(StringRef Segment, StringRef Section,$/;"	f	class:MCContext
getMachineBasicBlockAddress	ExecutionEngine/JIT/JITEmitter.cpp	/^    virtual uintptr_t getMachineBasicBlockAddress(MachineBasicBlock *MBB) const{$/;"	f	class:__anon182::JITEmitter
getMachineBasicBlocks	CodeGen/LexicalScopes.cpp	/^getMachineBasicBlocks(DebugLoc DL, $/;"	f	class:LexicalScopes
getMachineFunction	CodeGen/VirtRegMap.h	/^    MachineFunction &getMachineFunction() const {$/;"	f	class:llvm::VirtRegMap
getMachineInstr	CodeGen/LocalStackSlotAllocation.cpp	/^    MachineBasicBlock::iterator getMachineInstr() { return MI; }$/;"	f	class:__anon136::FrameRef
getMachineMemOperand	CodeGen/MachineFunction.cpp	/^MachineFunction::getMachineMemOperand(MachinePointerInfo PtrInfo, unsigned f,$/;"	f	class:MachineFunction
getMachineMemOperand	CodeGen/MachineFunction.cpp	/^MachineFunction::getMachineMemOperand(const MachineMemOperand *MMO,$/;"	f	class:MachineFunction
getMachineNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getMachineNode(unsigned Opcode, DebugLoc DL, SDVTList VTs,$/;"	f	class:SelectionDAG
getMachineNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getMachineNode(unsigned Opcode, DebugLoc dl, EVT VT) {$/;"	f	class:SelectionDAG
getMachineNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getMachineNode(unsigned Opcode, DebugLoc dl, EVT VT, SDValue Op1) {$/;"	f	class:SelectionDAG
getMachineNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getMachineNode(unsigned Opcode, DebugLoc dl, EVT VT,$/;"	f	class:SelectionDAG
getMachineNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getMachineNode(unsigned Opcode, DebugLoc dl, EVT VT1, EVT VT2) {$/;"	f	class:SelectionDAG
getMachineNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getMachineNode(unsigned Opcode, DebugLoc dl, EVT VT1,$/;"	f	class:SelectionDAG
getMachineNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getMachineNode(unsigned Opcode, DebugLoc dl,$/;"	f	class:SelectionDAG
getMachineOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getMachineOpValue(const MachineInstr &MI, unsigned OpIdx) const {$/;"	f	class:__anon297::ARMCodeEmitter	file:
getMachineOpValue	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::getMachineOpValue(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
getMachineOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getMachineOpValue(const MCInst &MI, const MCOperand &MO,$/;"	f	class:ARMMCCodeEmitter
getMachineOpValue	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  unsigned getMachineOpValue(const MCInst &MI, unsigned OpIdx) const {$/;"	f	class:__anon454::MBlazeMCCodeEmitter
getMachineOpValue	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^unsigned MBlazeMCCodeEmitter::getMachineOpValue(const MCInst &MI,$/;"	f	class:MBlazeMCCodeEmitter
getMachineOpValue	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^getMachineOpValue(const MCInst &MI, const MCOperand &MO,$/;"	f	class:MipsMCCodeEmitter
getMachineOpValue	Target/Mips/MipsCodeEmitter.cpp	/^unsigned MipsCodeEmitter::getMachineOpValue(const MachineInstr &MI,$/;"	f	class:MipsCodeEmitter
getMachineOpValue	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^getMachineOpValue(const MCInst &MI, const MCOperand &MO,$/;"	f	class:PPCMCCodeEmitter
getMachineOpValue	Target/PowerPC/PPCCodeEmitter.cpp	/^unsigned PPCCodeEmitter::getMachineOpValue(const MachineInstr &MI,$/;"	f	class:PPCCodeEmitter
getMachineSoImmOpValue	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::getMachineSoImmOpValue(unsigned SoImm) {$/;"	f	class:ARMCodeEmitter
getMachineSoRegOpValue	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::getMachineSoRegOpValue(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
getMallocAllocatedType	Analysis/MemoryBuiltins.cpp	/^Type *llvm::getMallocAllocatedType(const CallInst *CI,$/;"	f	class:llvm
getMallocArraySize	Analysis/MemoryBuiltins.cpp	/^Value *llvm::getMallocArraySize(CallInst *CI, const DataLayout *TD,$/;"	f	class:llvm
getMallocType	Analysis/MemoryBuiltins.cpp	/^PointerType *llvm::getMallocType(const CallInst *CI,$/;"	f	class:llvm
getManagedStrPool	Target/NVPTX/NVPTXTargetMachine.h	/^  ManagedStringPool *getManagedStrPool() const {$/;"	f	class:llvm::NVPTXTargetMachine
getManagedString	Target/NVPTX/ManagedStringPool.h	/^  std::string *getManagedString(const char *S) {$/;"	f	class:llvm::ManagedStringPool
getMap	Analysis/LibCallSemantics.cpp	/^static StringMap<const LibCallFunctionInfo*> *getMap(void *Ptr) {$/;"	f	file:
getMap	CodeGen/LiveIntervalUnion.h	/^  const Map &getMap() { return Segments; }$/;"	f	class:llvm::LiveIntervalUnion
getMappedReg	CodeGen/TwoAddressInstructionPass.cpp	/^getMappedReg(unsigned Reg, DenseMap<unsigned, unsigned> &RegMap) {$/;"	f	file:
getMask	VMCore/Type.cpp	/^APInt IntegerType::getMask() const {$/;"	f	class:IntegerType
getMaskValue	VMCore/Instructions.cpp	/^int ShuffleVectorInst::getMaskValue(Constant *Mask, unsigned i) {$/;"	f	class:ShuffleVectorInst
getMatchedOperand	CodeGen/SelectionDAG/TargetLowering.cpp	/^unsigned TargetLowering::AsmOperandInfo::getMatchedOperand() const {$/;"	f	class:TargetLowering::AsmOperandInfo
getMatchingCondBranchOpcode	Target/ARM/ARMBaseInstrInfo.cpp	/^int llvm::getMatchingCondBranchOpcode(int Opc) {$/;"	f	class:llvm
getMatchingCondBranchOpcode	Target/Hexagon/HexagonInstrInfo.cpp	/^getMatchingCondBranchOpcode(int Opc, bool invertPredicate) const {$/;"	f	class:HexagonInstrInfo
getMatchingSuperReg	MC/MCRegisterInfo.cpp	/^unsigned MCRegisterInfo::getMatchingSuperReg(unsigned Reg, unsigned SubIdx,$/;"	f	class:MCRegisterInfo
getMatchingSuperRegClass	Target/TargetRegisterInfo.cpp	/^TargetRegisterInfo::getMatchingSuperRegClass(const TargetRegisterClass *A,$/;"	f	class:TargetRegisterInfo
getMatchingSuperRegClass	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getMatchingSuperRegClass(const TargetRegisterClass *A,$/;"	f	class:X86RegisterInfo
getMax	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::BackedgeTakenInfo::getMax(ScalarEvolution *SE) const {$/;"	f	class:ScalarEvolution::BackedgeTakenInfo
getMaxBackedgeTakenCount	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getMaxBackedgeTakenCount(const Loop *L) {$/;"	f	class:ScalarEvolution
getMaxByValAlign	Target/X86/X86ISelLowering.cpp	/^static void getMaxByValAlign(Type *Ty, unsigned &MaxAlign) {$/;"	f	file:
getMaxCursors	CodeGen/InterferenceCache.h	/^  unsigned getMaxCursors() const { return CacheEntries; }$/;"	f	class:llvm::InterferenceCache
getMaxDisp	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned getMaxDisp() const {$/;"	f	struct:__anon310::ARMConstantIslands::CPUser
getMaxDownwardPressureDelta	CodeGen/RegisterPressure.cpp	/^getMaxDownwardPressureDelta(const MachineInstr *MI, RegPressureDelta &Delta,$/;"	f	class:RegPressureTracker
getMaxInlineSizeThreshold	Target/ARM/ARMSubtarget.h	/^  unsigned getMaxInlineSizeThreshold() const {$/;"	f	class:llvm::ARMSubtarget
getMaxInlineSizeThreshold	Target/X86/X86Subtarget.h	/^  unsigned getMaxInlineSizeThreshold() const { return MaxInlineSizeThreshold; }$/;"	f	class:llvm::X86Subtarget
getMaxLineIncrementForSpecialOpcode	DebugInfo/DWARFDebugLine.h	/^    int32_t getMaxLineIncrementForSpecialOpcode() const {$/;"	f	struct:llvm::DWARFDebugLine::Prologue
getMaxNTIDx	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::getMaxNTIDx(const Function &F, unsigned &x) {$/;"	f	class:llvm
getMaxNTIDy	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::getMaxNTIDy(const Function &F, unsigned &y) {$/;"	f	class:llvm
getMaxNTIDz	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::getMaxNTIDz(const Function &F, unsigned &z) {$/;"	f	class:llvm
getMaxRange	DebugInfo/DWARFDebugAranges.cpp	/^bool DWARFDebugAranges::getMaxRange(uint64_t &LoPC, uint64_t &HiPC) const {$/;"	f	class:DWARFDebugAranges
getMaxRegionExit	Analysis/RegionInfo.cpp	/^BasicBlock *RegionInfo::getMaxRegionExit(BasicBlock *BB) const {$/;"	f	class:RegionInfo
getMaxStubSize	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  inline unsigned getMaxStubSize() {$/;"	f	class:llvm::RuntimeDyldImpl
getMaxUpwardPressureDelta	CodeGen/RegisterPressure.cpp	/^getMaxUpwardPressureDelta(const MachineInstr *MI, RegPressureDelta &Delta,$/;"	f	class:RegPressureTracker
getMaxWeightFor	Analysis/BranchProbabilityInfo.cpp	/^static uint32_t getMaxWeightFor(BasicBlock *BB) {$/;"	f	file:
getMaximalGlobalOffset	Target/ARM/ARMISelLowering.cpp	/^unsigned ARMTargetLowering::getMaximalGlobalOffset() const {$/;"	f	class:ARMTargetLowering
getMemBarrierOpt	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  ARM_MB::MemBOpt getMemBarrierOpt() const {$/;"	f	class:__anon261::ARMOperand
getMemBase	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  unsigned getMemBase() const {$/;"	f	struct:__anon446::MBlazeOperand
getMemBase	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  unsigned getMemBase() const {$/;"	f	class:__anon423::MipsOperand
getMemBasePlusOffset	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static SDValue getMemBasePlusOffset(SDValue Base, unsigned Offset,$/;"	f	file:
getMemBaseReg	Target/X86/AsmParser/X86AsmParser.cpp	/^  unsigned getMemBaseReg() const {$/;"	f	struct:__anon336::X86Operand
getMemBuffer	Support/MemoryBuffer.cpp	/^MemoryBuffer *MemoryBuffer::getMemBuffer(StringRef InputData,$/;"	f	class:MemoryBuffer
getMemBufferCopy	Support/MemoryBuffer.cpp	/^MemoryBuffer *MemoryBuffer::getMemBufferCopy(StringRef InputData,$/;"	f	class:MemoryBuffer
getMemCmpLoad	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static SDValue getMemCmpLoad(const Value *PtrVal, MVT LoadVT,$/;"	f	file:
getMemDep	Transforms/Scalar/GVN.cpp	/^    MemoryDependenceAnalysis &getMemDep() const { return *MD; }$/;"	f	class:__anon537::GVN
getMemDisp	Target/X86/AsmParser/X86AsmParser.cpp	/^  const MCExpr *getMemDisp() const {$/;"	f	struct:__anon336::X86Operand
getMemEncoding	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^MipsMCCodeEmitter::getMemEncoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:MipsMCCodeEmitter
getMemEncoding	Target/Mips/MipsCodeEmitter.cpp	/^unsigned MipsCodeEmitter::getMemEncoding(const MachineInstr &MI,$/;"	f	class:MipsCodeEmitter
getMemIndexReg	Target/X86/AsmParser/X86AsmParser.cpp	/^  unsigned getMemIndexReg() const {$/;"	f	struct:__anon336::X86Operand
getMemIntrinValue	Transforms/Scalar/GVN.cpp	/^  MemIntrinsic *getMemIntrinValue() const {$/;"	f	struct:__anon538::AvailableValueInBlock
getMemIntrinsicNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getMemIntrinsicNode(unsigned Opcode, DebugLoc dl, SDVTList VTList,$/;"	f	class:SelectionDAG
getMemIntrinsicNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getMemIntrinsicNode(unsigned Opcode, DebugLoc dl,$/;"	f	class:SelectionDAG
getMemOff	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  const MCExpr* getMemOff() const {$/;"	f	struct:__anon446::MBlazeOperand
getMemOff	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  const MCExpr *getMemOff() const {$/;"	f	class:__anon423::MipsOperand
getMemOffReg	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  unsigned getMemOffReg() const {$/;"	f	struct:__anon446::MBlazeOperand
getMemRIEncoding	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^unsigned PPCMCCodeEmitter::getMemRIEncoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:PPCMCCodeEmitter
getMemRIEncoding	Target/PowerPC/PPCCodeEmitter.cpp	/^unsigned PPCCodeEmitter::getMemRIEncoding(const MachineInstr &MI,$/;"	f	class:PPCCodeEmitter
getMemRIXEncoding	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^unsigned PPCMCCodeEmitter::getMemRIXEncoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:PPCMCCodeEmitter
getMemRIXEncoding	Target/PowerPC/PPCCodeEmitter.cpp	/^unsigned PPCCodeEmitter::getMemRIXEncoding(const MachineInstr &MI,$/;"	f	class:PPCCodeEmitter
getMemScale	Target/X86/AsmParser/X86AsmParser.cpp	/^  unsigned getMemScale() const {$/;"	f	struct:__anon336::X86Operand
getMemSegReg	Target/X86/AsmParser/X86AsmParser.cpp	/^  unsigned getMemSegReg() const {$/;"	f	struct:__anon336::X86Operand
getMemSetPatternValue	Transforms/Scalar/LoopIdiomRecognize.cpp	/^static Constant *getMemSetPatternValue(Value *V, const DataLayout &TD) {$/;"	f	file:
getMemSize	Target/X86/AsmParser/X86AsmParser.cpp	/^  unsigned getMemSize() const {$/;"	f	struct:__anon336::X86Operand
getMemTransferOffsets	Transforms/Scalar/SROA.cpp	/^  MemTransferOffsets getMemTransferOffsets(MemTransferInst &II) const {$/;"	f	class:__anon557::AllocaPartitioning
getMemUsage	Support/Timer.cpp	/^static inline size_t getMemUsage() {$/;"	f	file:
getMember	Object/Archive.cpp	/^error_code Archive::Symbol::getMember(child_iterator &Result) const {$/;"	f	class:Archive::Symbol
getMemberSize	Archive/Archive.cpp	/^ArchiveMember::getMemberSize() const {$/;"	f	class:ArchiveMember
getMemcpy	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getMemcpy(SDValue Chain, DebugLoc dl, SDValue Dst,$/;"	f	class:SelectionDAG
getMemcpyLoadsAndStores	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static SDValue getMemcpyLoadsAndStores(SelectionDAG &DAG, DebugLoc dl,$/;"	f	file:
getMemmove	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getMemmove(SDValue Chain, DebugLoc dl, SDValue Dst,$/;"	f	class:SelectionDAG
getMemmoveLoadsAndStores	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static SDValue getMemmoveLoadsAndStores(SelectionDAG &DAG, DebugLoc dl,$/;"	f	file:
getMemory	Support/APInt.cpp	/^inline static uint64_t* getMemory(unsigned numWords) {$/;"	f	file:
getMemoryAccessFuncIndex	Transforms/Instrumentation/ThreadSanitizer.cpp	/^int ThreadSanitizer::getMemoryAccessFuncIndex(Value *Addr) {$/;"	f	class:ThreadSanitizer
getMemoryForGV	ExecutionEngine/ExecutionEngine.cpp	/^char *ExecutionEngine::getMemoryForGV(const GlobalVariable *GV) {$/;"	f	class:ExecutionEngine
getMemoryForGV	ExecutionEngine/JIT/JIT.cpp	/^char* JIT::getMemoryForGV(const GlobalVariable* GV) {$/;"	f	class:JIT
getMemoryOpOffset	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static int getMemoryOpOffset(const MachineInstr *MI) {$/;"	f	file:
getMemoryOperandNo	Target/X86/MCTargetDesc/X86BaseInfo.h	/^  inline int getMemoryOperandNo(uint64_t TSFlags, unsigned Opcode) {$/;"	f	namespace:llvm::X86II
getMemset	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getMemset(SDValue Chain, DebugLoc dl, SDValue Dst,$/;"	f	class:SelectionDAG
getMemsetStores	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static SDValue getMemsetStores(SelectionDAG &DAG, DebugLoc dl,$/;"	f	file:
getMemsetStringVal	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static SDValue getMemsetStringVal(EVT VT, DebugLoc dl, SelectionDAG &DAG,$/;"	f	file:
getMemsetValue	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static SDValue getMemsetValue(SDValue Value, EVT VT, SelectionDAG &DAG,$/;"	f	file:
getMergePotentialsElt	CodeGen/BranchFolding.h	/^      MergePotentialsElt &getMergePotentialsElt() const {$/;"	f	class:llvm::BranchFolder::SameTailElt
getMergeValues	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getMergeValues(const SDValue *Ops, unsigned NumOps,$/;"	f	class:SelectionDAG
getMergedGlobalExpr	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^static const ConstantExpr *getMergedGlobalExpr(const Value *V) {$/;"	f	file:
getMetadataImpl	VMCore/Metadata.cpp	/^MDNode *Instruction::getMetadataImpl(StringRef Kind) const {$/;"	f	class:Instruction
getMetadataImpl	VMCore/Metadata.cpp	/^MDNode *Instruction::getMetadataImpl(unsigned KindID) const {$/;"	f	class:Instruction
getMetadataSlot	VMCore/AsmWriter.cpp	/^int SlotTracker::getMetadataSlot(const MDNode *N) {$/;"	f	class:SlotTracker
getMetadataTy	VMCore/Type.cpp	/^Type *Type::getMetadataTy(LLVMContext &C) { return &C.pImpl->MetadataTy; }$/;"	f	class:Type
getMinBlockSize	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    static unsigned getMinBlockSize() {$/;"	f	struct:__anon189::FreeRangeHeader
getMinCTASm	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::getMinCTASm(const Function &F, unsigned &x) {$/;"	f	class:llvm
getMinCallArgumentsSize	Target/PowerPC/PPCFrameLowering.h	/^  static unsigned getMinCallArgumentsSize(bool isPPC64, bool isDarwinABI) {$/;"	f	class:llvm::PPCFrameLowering
getMinCallFrameSize	Target/PowerPC/PPCFrameLowering.h	/^  static unsigned getMinCallFrameSize(bool isPPC64, bool isDarwinABI) {$/;"	f	class:llvm::PPCFrameLowering
getMinReservedArea	Target/PowerPC/PPCMachineFunctionInfo.h	/^  unsigned getMinReservedArea() const { return MinReservedArea; }$/;"	f	class:llvm::PPCFunctionInfo
getMinimalPhysRegClass	Target/TargetRegisterInfo.cpp	/^TargetRegisterInfo::getMinimalPhysRegClass(unsigned reg, EVT VT) const {$/;"	f	class:TargetRegisterInfo
getMinusSCEV	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getMinusSCEV(const SCEV *LHS, const SCEV *RHS,$/;"	f	class:ScalarEvolution
getMipsRegisterNumbering	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^inline static unsigned getMipsRegisterNumbering(unsigned RegEnum)$/;"	f	namespace:llvm
getMipsSubtarget	Target/Mips/MipsTargetMachine.cpp	/^  const MipsSubtarget &getMipsSubtarget() const {$/;"	f	class:__anon434::MipsPassConfig
getMipsTargetMachine	Target/Mips/MipsTargetMachine.cpp	/^  MipsTargetMachine &getMipsTargetMachine() const {$/;"	f	class:__anon434::MipsPassConfig
getMispredictionPenalty	Target/ARM/ARMSubtarget.cpp	/^unsigned ARMSubtarget::getMispredictionPenalty() const {$/;"	f	class:ARMSubtarget
getMnemonicAcceptInfo	Target/ARM/AsmParser/ARMAsmParser.cpp	/^getMnemonicAcceptInfo(StringRef Mnemonic, bool &CanAcceptCarrySet,$/;"	f	class:ARMAsmParser
getModRefBehavior	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getModRefBehavior(ImmutableCallSite CS) {$/;"	f	class:AliasAnalysis
getModRefBehavior	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getModRefBehavior(const Function *F) {$/;"	f	class:AliasAnalysis
getModRefBehavior	Analysis/BasicAliasAnalysis.cpp	/^BasicAliasAnalysis::getModRefBehavior(ImmutableCallSite CS) {$/;"	f	class:BasicAliasAnalysis
getModRefBehavior	Analysis/BasicAliasAnalysis.cpp	/^BasicAliasAnalysis::getModRefBehavior(const Function *F) {$/;"	f	class:BasicAliasAnalysis
getModRefBehavior	Analysis/IPA/GlobalsModRef.cpp	/^    ModRefBehavior getModRefBehavior(ImmutableCallSite CS) {$/;"	f	class:__anon1::GlobalsModRef
getModRefBehavior	Analysis/IPA/GlobalsModRef.cpp	/^    ModRefBehavior getModRefBehavior(const Function *F) {$/;"	f	class:__anon1::GlobalsModRef
getModRefBehavior	Analysis/NoAliasAnalysis.cpp	/^    virtual ModRefBehavior getModRefBehavior(ImmutableCallSite CS) {$/;"	f	struct:__anon42::NoAA
getModRefBehavior	Analysis/NoAliasAnalysis.cpp	/^    virtual ModRefBehavior getModRefBehavior(const Function *F) {$/;"	f	struct:__anon42::NoAA
getModRefBehavior	Analysis/TypeBasedAliasAnalysis.cpp	/^TypeBasedAliasAnalysis::getModRefBehavior(ImmutableCallSite CS) {$/;"	f	class:TypeBasedAliasAnalysis
getModRefBehavior	Analysis/TypeBasedAliasAnalysis.cpp	/^TypeBasedAliasAnalysis::getModRefBehavior(const Function *F) {$/;"	f	class:TypeBasedAliasAnalysis
getModRefBehavior	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCAliasAnalysis::getModRefBehavior(ImmutableCallSite CS) {$/;"	f	class:ObjCARCAliasAnalysis
getModRefBehavior	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCAliasAnalysis::getModRefBehavior(const Function *F) {$/;"	f	class:ObjCARCAliasAnalysis
getModRefInfo	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getModRefInfo(ImmutableCallSite CS,$/;"	f	class:AliasAnalysis
getModRefInfo	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getModRefInfo(ImmutableCallSite CS1, ImmutableCallSite CS2) {$/;"	f	class:AliasAnalysis
getModRefInfo	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getModRefInfo(const AtomicCmpXchgInst *CX, const Location &Loc) {$/;"	f	class:AliasAnalysis
getModRefInfo	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getModRefInfo(const AtomicRMWInst *RMW, const Location &Loc) {$/;"	f	class:AliasAnalysis
getModRefInfo	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getModRefInfo(const LoadInst *L, const Location &Loc) {$/;"	f	class:AliasAnalysis
getModRefInfo	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getModRefInfo(const StoreInst *S, const Location &Loc) {$/;"	f	class:AliasAnalysis
getModRefInfo	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::getModRefInfo(const VAArgInst *V, const Location &Loc) {$/;"	f	class:AliasAnalysis
getModRefInfo	Analysis/AliasAnalysisCounter.cpp	/^    ModRefResult getModRefInfo(ImmutableCallSite CS1,$/;"	f	class:__anon43::AliasAnalysisCounter
getModRefInfo	Analysis/AliasAnalysisCounter.cpp	/^AliasAnalysisCounter::getModRefInfo(ImmutableCallSite CS,$/;"	f	class:AliasAnalysisCounter
getModRefInfo	Analysis/AliasDebugger.cpp	/^    ModRefResult getModRefInfo(ImmutableCallSite CS,$/;"	f	class:__anon44::AliasDebugger
getModRefInfo	Analysis/AliasDebugger.cpp	/^    ModRefResult getModRefInfo(ImmutableCallSite CS1,$/;"	f	class:__anon44::AliasDebugger
getModRefInfo	Analysis/BasicAliasAnalysis.cpp	/^    virtual ModRefResult getModRefInfo(ImmutableCallSite CS1,$/;"	f	struct:__anon15::BasicAliasAnalysis
getModRefInfo	Analysis/BasicAliasAnalysis.cpp	/^BasicAliasAnalysis::getModRefInfo(ImmutableCallSite CS,$/;"	f	class:BasicAliasAnalysis
getModRefInfo	Analysis/IPA/GlobalsModRef.cpp	/^    ModRefResult getModRefInfo(ImmutableCallSite CS1,$/;"	f	class:__anon1::GlobalsModRef
getModRefInfo	Analysis/IPA/GlobalsModRef.cpp	/^GlobalsModRef::getModRefInfo(ImmutableCallSite CS,$/;"	f	class:GlobalsModRef
getModRefInfo	Analysis/LibCallAliasAnalysis.cpp	/^LibCallAliasAnalysis::getModRefInfo(ImmutableCallSite CS,$/;"	f	class:LibCallAliasAnalysis
getModRefInfo	Analysis/NoAliasAnalysis.cpp	/^    virtual ModRefResult getModRefInfo(ImmutableCallSite CS,$/;"	f	struct:__anon42::NoAA
getModRefInfo	Analysis/NoAliasAnalysis.cpp	/^    virtual ModRefResult getModRefInfo(ImmutableCallSite CS1,$/;"	f	struct:__anon42::NoAA
getModRefInfo	Analysis/TypeBasedAliasAnalysis.cpp	/^TypeBasedAliasAnalysis::getModRefInfo(ImmutableCallSite CS,$/;"	f	class:TypeBasedAliasAnalysis
getModRefInfo	Analysis/TypeBasedAliasAnalysis.cpp	/^TypeBasedAliasAnalysis::getModRefInfo(ImmutableCallSite CS1,$/;"	f	class:TypeBasedAliasAnalysis
getModRefInfo	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCAliasAnalysis::getModRefInfo(ImmutableCallSite CS, const Location &Loc) {$/;"	f	class:ObjCARCAliasAnalysis
getModRefInfo	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCAliasAnalysis::getModRefInfo(ImmutableCallSite CS1,$/;"	f	class:ObjCARCAliasAnalysis
getModifier	Target/ARM/ARMConstantPoolValue.h	/^  ARMCP::ARMCPModifier getModifier() const { return Modifier; }$/;"	f	class:llvm::ARMConstantPoolValue
getModifierText	Target/ARM/ARMConstantPoolValue.cpp	/^const char *ARMConstantPoolValue::getModifierText() const {$/;"	f	class:ARMConstantPoolValue
getModifierVariantKind	Target/ARM/ARMAsmPrinter.cpp	/^getModifierVariantKind(ARMCP::ARMCPModifier Modifier) {$/;"	f	file:
getModule	Analysis/Trace.cpp	/^Module *Trace::getModule() const {$/;"	f	class:Trace
getModule	ExecutionEngine/JIT/JIT.h	/^  Module *getModule() const { return M; }$/;"	f	class:llvm::JITState
getModuleFlagsMetadata	VMCore/Module.cpp	/^NamedMDNode *Module::getModuleFlagsMetadata() const {$/;"	f	class:Module
getModuleFlagsMetadata	VMCore/Module.cpp	/^getModuleFlagsMetadata(SmallVectorImpl<ModuleFlagEntry> &Flags) const {$/;"	f	class:Module
getModuleFromVal	VMCore/AsmWriter.cpp	/^static const Module *getModuleFromVal(const Value *V) {$/;"	f	file:
getMostGenericFPMath	VMCore/Metadata.cpp	/^MDNode *MDNode::getMostGenericFPMath(MDNode *A, MDNode *B) {$/;"	f	class:MDNode
getMostGenericRange	VMCore/Metadata.cpp	/^MDNode *MDNode::getMostGenericRange(MDNode *A, MDNode *B) {$/;"	f	class:MDNode
getMostGenericTBAA	VMCore/Metadata.cpp	/^MDNode *MDNode::getMostGenericTBAA(MDNode *A, MDNode *B) {$/;"	f	class:MDNode
getMovi32Value	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::getMovi32Value(const MachineInstr &MI,$/;"	f	class:ARMCodeEmitter
getMul	VMCore/Constants.cpp	/^Constant *ConstantExpr::getMul(Constant *C1, Constant *C2,$/;"	f	class:ConstantExpr
getMulExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getMulExpr(SmallVectorImpl<const SCEV *> &Ops,$/;"	f	class:ScalarEvolution
getMultipleConstraintMatchWeight	CodeGen/SelectionDAG/TargetLowering.cpp	/^  TargetLowering::getMultipleConstraintMatchWeight($/;"	f	class:TargetLowering
getMutatedMemory	Transforms/IPO/GlobalOpt.cpp	/^  const DenseMap<Constant*, Constant*> &getMutatedMemory() const {$/;"	f	class:__anon591::Evaluator
getMutex	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngineState::AddressMapConfig::getMutex(ExecutionEngineState *EES) {$/;"	f	class:ExecutionEngineState::AddressMapConfig
getMutex	Support/DynamicLibrary.cpp	/^static llvm::sys::SmartMutex<true>& getMutex() {$/;"	f	file:
getNEONModImmOpCmode	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getNEONModImmOpCmode(unsigned ModImm) {$/;"	f	namespace:llvm::ARM_AM
getNEONModImmVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getNEONModImmVal(unsigned ModImm) {$/;"	f	namespace:llvm::ARM_AM
getNEONVcvtImm32OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getNEONVcvtImm32OpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getNEONVcvtImm32OpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  unsigned getNEONVcvtImm32OpValue(const MCInst &MI, unsigned Op,$/;"	f	class:__anon283::ARMMCCodeEmitter
getNMDOps	VMCore/Metadata.cpp	/^static SmallVector<TrackingVH<MDNode>, 4> &getNMDOps(void *Operands) {$/;"	f	file:
getNOT	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getNOT(DebugLoc DL, SDValue Val, EVT VT) {$/;"	f	class:SelectionDAG
getNVPTXElemClass	Target/NVPTX/NVPTXRegisterInfo.cpp	/^const TargetRegisterClass *getNVPTXElemClass(TargetRegisterClass const *RC) {$/;"	f	namespace:llvm
getNVPTXElemClassName	Target/NVPTX/NVPTXRegisterInfo.cpp	/^std::string getNVPTXElemClassName(TargetRegisterClass const *RC) {$/;"	f	namespace:llvm
getNVPTXRegClassName	Target/NVPTX/NVPTXRegisterInfo.cpp	/^std::string getNVPTXRegClassName (TargetRegisterClass const *RC) {$/;"	f	namespace:llvm
getNVPTXRegClassStr	Target/NVPTX/NVPTXRegisterInfo.cpp	/^std::string getNVPTXRegClassStr (TargetRegisterClass const *RC) {$/;"	f	namespace:llvm
getNVPTXTargetMachine	Target/NVPTX/NVPTXTargetMachine.cpp	/^  NVPTXTargetMachine &getNVPTXTargetMachine() const {$/;"	f	class:llvm::NVPTXPassConfig
getNVPTXVectorSize	Target/NVPTX/NVPTXRegisterInfo.cpp	/^int getNVPTXVectorSize(TargetRegisterClass const *RC) {$/;"	f	namespace:llvm
getName	Analysis/PathNumbering.cpp	/^std::string BallLarusNode::getName() {$/;"	f	class:BallLarusNode
getName	CodeGen/AsmPrinter/DwarfDebug.h	/^  StringRef getName()                const { return Var.getName(); }$/;"	f	class:llvm::DbgVariable
getName	CodeGen/MachineBasicBlock.cpp	/^StringRef MachineBasicBlock::getName() const {$/;"	f	class:MachineBasicBlock
getName	CodeGen/MachineFunction.cpp	/^StringRef MachineFunction::getName() const {$/;"	f	class:MachineFunction
getName	CodeGen/MachineTraceMetrics.cpp	/^  const char *getName() const { return "MinInstr"; }$/;"	f	class:__anon131::MinInstrCountEnsemble	file:
getName	Object/Archive.cpp	/^  StringRef getName() const {$/;"	f	struct:__anon228::ArchiveMemberHeader
getName	Object/Archive.cpp	/^error_code Archive::Child::getName(StringRef &Result) const {$/;"	f	class:Archive::Child
getName	Object/Archive.cpp	/^error_code Archive::Symbol::getName(StringRef &Result) const {$/;"	f	class:Archive::Symbol
getName	TableGen/Record.cpp	/^const std::string &Record::getName() const {$/;"	f	class:Record
getName	TableGen/Record.cpp	/^const std::string &RecordVal::getName() const {$/;"	f	class:RecordVal
getName	TableGen/Record.cpp	/^const std::string &VarInit::getName() const {$/;"	f	class:VarInit
getName	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^std::string MBlazeIntrinsicInfo::getName(unsigned IntrID, Type **Tys,$/;"	f	class:MBlazeIntrinsicInfo
getName	Target/NVPTX/NVPTXRegisterInfo.h	/^  const char *getName(unsigned RegNo) const {$/;"	f	class:llvm::NVPTXRegisterInfo
getName	Transforms/Scalar/SROA.cpp	/^  Twine getName(const Twine &Suffix) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
getName	VMCore/Function.cpp	/^std::string Intrinsic::getName(ID id, ArrayRef<Type*> Tys) {$/;"	f	class:Intrinsic
getName	VMCore/Metadata.cpp	/^StringRef NamedMDNode::getName() const {$/;"	f	class:NamedMDNode
getName	VMCore/Type.cpp	/^StringRef StructType::getName() const {$/;"	f	class:StructType
getName	VMCore/Value.cpp	/^StringRef Value::getName() const {$/;"	f	class:Value
getNameStr	Analysis/RegionInfo.cpp	/^std::string Region::getNameStr() const {$/;"	f	class:Region
getNameWithPrefix	Target/Mangler.cpp	/^void Mangler::getNameWithPrefix(SmallVectorImpl<char> &OutName,$/;"	f	class:Mangler
getNamedAlias	VMCore/Module.cpp	/^GlobalAlias *Module::getNamedAlias(StringRef Name) const {$/;"	f	class:Module
getNamedMetadata	VMCore/Module.cpp	/^NamedMDNode *Module::getNamedMetadata(const Twine &Name) const {$/;"	f	class:Module
getNamedRegionTimer	Support/Timer.cpp	/^static Timer &getNamedRegionTimer(StringRef Name) {$/;"	f	file:
getNamedValue	VMCore/Module.cpp	/^GlobalValue *Module::getNamedValue(StringRef Name) const {$/;"	f	class:Module
getNaturalGEPRecursively	Transforms/Scalar/SROA.cpp	/^static Value *getNaturalGEPRecursively(IRBuilder<> &IRB, const DataLayout &TD,$/;"	f	file:
getNaturalGEPWithOffset	Transforms/Scalar/SROA.cpp	/^static Value *getNaturalGEPWithOffset(IRBuilder<> &IRB, const DataLayout &TD,$/;"	f	file:
getNaturalGEPWithType	Transforms/Scalar/SROA.cpp	/^static Value *getNaturalGEPWithType(IRBuilder<> &IRB, const DataLayout &TD,$/;"	f	file:
getNearestLoop	Analysis/LoopInfo.cpp	/^Loop *UnloopUpdater::getNearestLoop(BasicBlock *BB, Loop *BBLoop) {$/;"	f	class:UnloopUpdater
getNeg	VMCore/Constants.cpp	/^Constant *ConstantExpr::getNeg(Constant *C, bool HasNUW, bool HasNSW) {$/;"	f	class:ConstantExpr
getNegArgument	VMCore/Instructions.cpp	/^Value *BinaryOperator::getNegArgument(Value *BinOp) {$/;"	f	class:BinaryOperator
getNegArgument	VMCore/Instructions.cpp	/^const Value *BinaryOperator::getNegArgument(const Value *BinOp) {$/;"	f	class:BinaryOperator
getNegativePart	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::getNegativePart(const SCEV *X) const {$/;"	f	class:DependenceAnalysis
getNegativeSCEV	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getNegativeSCEV(const SCEV *V) {$/;"	f	class:ScalarEvolution
getNegativeZero	VMCore/Constants.cpp	/^ConstantFP *ConstantFP::getNegativeZero(Type *Ty) {$/;"	f	class:ConstantFP
getNewFixup	Transforms/Scalar/LoopStrengthReduce.cpp	/^  LSRFixup &getNewFixup() {$/;"	f	class:__anon518::LSRInstance	file:
getNewICmpValue	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static Value *getNewICmpValue(bool Sign, unsigned Code, Value *LHS, Value *RHS,$/;"	f	file:
getNewMemBuffer	Support/MemoryBuffer.cpp	/^MemoryBuffer *MemoryBuffer::getNewMemBuffer(size_t Size, StringRef BufferName) {$/;"	f	class:MemoryBuffer
getNewRC	CodeGen/RegisterCoalescer.h	/^    const TargetRegisterClass *getNewRC() const { return NewRC; }$/;"	f	class:llvm::CoalescerPair
getNewUninitMemBuffer	Support/MemoryBuffer.cpp	/^MemoryBuffer *MemoryBuffer::getNewUninitMemBuffer(size_t Size,$/;"	f	class:MemoryBuffer
getNewValueJumpOpcode	Target/Hexagon/HexagonNewValueJump.cpp	/^static unsigned getNewValueJumpOpcode(const MachineInstr *MI, int reg,$/;"	f	file:
getNext	CodeGen/LiveDebugVariables.cpp	/^  UserValue *getNext() const { return next; }$/;"	f	class:__anon152::UserValue
getNext	Object/Archive.cpp	/^Archive::Child Archive::Child::getNext() const {$/;"	f	class:Archive::Child
getNext	Object/Archive.cpp	/^Archive::Symbol Archive::Symbol::getNext() const {$/;"	f	class:Archive::Symbol
getNext	Support/YAMLParser.cpp	/^Token Document::getNext() {$/;"	f	class:Document
getNext	Support/YAMLParser.cpp	/^Token Node::getNext() {$/;"	f	class:Node
getNext	Support/YAMLParser.cpp	/^Token Scanner::getNext() {$/;"	f	class:Scanner
getNextBlock	CodeGen/IfConversion.cpp	/^static inline MachineBasicBlock *getNextBlock(MachineBasicBlock *BB) {$/;"	f	file:
getNextChar	AsmParser/LLLexer.cpp	/^int LLLexer::getNextChar() {$/;"	f	class:LLLexer
getNextChar	MC/MCParser/AsmLexer.cpp	/^int AsmLexer::getNextChar() {$/;"	f	class:AsmLexer
getNextChar	TableGen/TGLexer.cpp	/^int TGLexer::getNextChar() {$/;"	f	class:TGLexer
getNextCompileUnitOffset	DebugInfo/DWARFCompileUnit.h	/^  uint32_t getNextCompileUnitOffset() const { return Offset + Length + 4; }$/;"	f	class:llvm::DWARFCompileUnit
getNextEdge	Analysis/PathProfileInfo.cpp	/^static BallLarusEdge* getNextEdge (BallLarusNode* node,$/;"	f	file:
getNextIntArgReg	Target/Mips/MipsISelLowering.cpp	/^static unsigned getNextIntArgReg(unsigned Reg) {$/;"	f	file:
getNextPostDom	Analysis/RegionInfo.cpp	/^DomTreeNode* RegionInfo::getNextPostDom(DomTreeNode* N,$/;"	f	class:RegionInfo
getNextRegister	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static unsigned getNextRegister(unsigned Reg) {$/;"	f	file:
getNextStackOffset	Target/Hexagon/HexagonCallingConvLower.h	/^  unsigned getNextStackOffset() const { return StackOffset; }$/;"	f	class:llvm::Hexagon_CCState
getNextUnusedValueNumber	Transforms/Scalar/GVN.cpp	/^    uint32_t getNextUnusedValueNumber() { return nextValueNumber; }$/;"	f	class:__anon536::ValueTable
getNoPreservedMask	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getNoPreservedMask() const {$/;"	f	class:X86RegisterInfo
getNode	Analysis/RegionInfo.cpp	/^RegionNode* Region::getNode(BasicBlock *BB) const {$/;"	f	class:Region
getNode	Analysis/TypeBasedAliasAnalysis.cpp	/^    const MDNode *getNode() const { return Node; }$/;"	f	class:__anon12::TBAANode
getNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getNode(unsigned Opcode, DebugLoc DL, EVT VT) {$/;"	f	class:SelectionDAG
getNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getNode(unsigned Opcode, DebugLoc DL, EVT VT,$/;"	f	class:SelectionDAG
getNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getNode(unsigned Opcode, DebugLoc DL, SDVTList VTList) {$/;"	f	class:SelectionDAG
getNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getNode(unsigned Opcode, DebugLoc DL, SDVTList VTList,$/;"	f	class:SelectionDAG
getNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getNode(unsigned Opcode, DebugLoc DL,$/;"	f	class:SelectionDAG
getNodeAttributes	CodeGen/ScheduleDAGPrinter.cpp	/^    static std::string getNodeAttributes(const SUnit *N,$/;"	f	struct:llvm::DOTGraphTraits
getNodeAttributes	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static std::string getNodeAttributes(const SDNode *N,$/;"	f	struct:llvm::DOTGraphTraits
getNodeDesc	CodeGen/ScheduleDAG.cpp	/^const MCInstrDesc *ScheduleDAG::getNodeDesc(const SDNode *Node) const {$/;"	f	class:ScheduleDAG
getNodeForVReg	CodeGen/RegAllocPBQP.cpp	/^PBQP::Graph::NodeItr PBQPRAProblem::getNodeForVReg(unsigned vreg) const {$/;"	f	class:PBQPRAProblem
getNodeIfExists	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDNode *SelectionDAG::getNodeIfExists(unsigned Opcode, SDVTList VTList,$/;"	f	class:SelectionDAG
getNodeLabel	Analysis/DomPrinter.cpp	/^  std::string getNodeLabel(DomTreeNode *Node, DomTreeNode *Graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	Analysis/DomPrinter.cpp	/^  std::string getNodeLabel(DomTreeNode *Node, DominatorTree *G) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	Analysis/DomPrinter.cpp	/^  std::string getNodeLabel(DomTreeNode *Node, PostDominatorTree *G ) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	Analysis/RegionPrinter.cpp	/^  std::string getNodeLabel(RegionNode *Node, RegionInfo *G) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	Analysis/RegionPrinter.cpp	/^  std::string getNodeLabel(RegionNode *Node, RegionNode *Graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	CodeGen/MachineFunction.cpp	/^    std::string getNodeLabel(const MachineBasicBlock *Node,$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	CodeGen/ScheduleDAGPrinter.cpp	/^std::string DOTGraphTraits<ScheduleDAG*>::getNodeLabel(const SUnit *SU,$/;"	f	class:DOTGraphTraits
getNodeLabel	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^std::string DOTGraphTraits<SelectionDAG*>::getNodeLabel(const SDNode *Node,$/;"	f	class:DOTGraphTraits
getNodeOrdering	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  unsigned getNodeOrdering(const SUnit *SU) const {$/;"	f	class:__anon77::RegReductionPQBase
getNodePriority	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^unsigned RegReductionPQBase::getNodePriority(const SUnit *SU) const {$/;"	f	class:RegReductionPQBase
getNodeRegMask	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static const uint32_t *getNodeRegMask(const SDNode *N) {$/;"	f	file:
getNonAtomic6432Opcode	Target/X86/X86ISelLowering.cpp	/^static unsigned getNonAtomic6432Opcode(unsigned Opc, unsigned &HiOpc) {$/;"	f	file:
getNonAtomic6432OpcodeWithExtraOpc	Target/X86/X86ISelLowering.cpp	/^static unsigned getNonAtomic6432OpcodeWithExtraOpc(unsigned Opc,$/;"	f	file:
getNonAtomicOpcode	Target/X86/X86ISelLowering.cpp	/^static unsigned getNonAtomicOpcode(unsigned Opc) {$/;"	f	file:
getNonAtomicOpcodeWithExtraOpc	Target/X86/X86ISelLowering.cpp	/^static unsigned getNonAtomicOpcodeWithExtraOpc(unsigned Opc,$/;"	f	file:
getNonCompileUnitScope	VMCore/DIBuilder.cpp	/^static MDNode *getNonCompileUnitScope(MDNode *N) {$/;"	f	file:
getNonDebugInstr	Target/Mips/MipsLongBranch.cpp	/^static ReverseIter getNonDebugInstr(ReverseIter B, ReverseIter E) {$/;"	f	file:
getNonLocalCallDependency	Analysis/MemoryDependenceAnalysis.cpp	/^MemoryDependenceAnalysis::getNonLocalCallDependency(CallSite QueryCS) {$/;"	f	class:MemoryDependenceAnalysis
getNonLocalPointerDepFromBB	Analysis/MemoryDependenceAnalysis.cpp	/^getNonLocalPointerDepFromBB(const PHITransAddr &Pointer,$/;"	f	class:MemoryDependenceAnalysis
getNonLocalPointerDependency	Analysis/MemoryDependenceAnalysis.cpp	/^getNonLocalPointerDependency(const AliasAnalysis::Location &Loc, bool isLoad,$/;"	f	class:MemoryDependenceAnalysis
getNonRegisterValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SDValue SelectionDAGBuilder::getNonRegisterValue(const Value *V) {$/;"	f	class:SelectionDAGBuilder
getNonStreamedMemoryObject	Support/StreamableMemoryObject.cpp	/^StreamableMemoryObject *getNonStreamedMemoryObject($/;"	f	namespace:llvm
getNonexecutableStackSection	Target/X86/MCTargetDesc/X86MCAsmInfo.cpp	/^getNonexecutableStackSection(MCContext &Ctx) const {$/;"	f	class:X86ELFMCAsmInfo
getNoopForMachoTarget	Target/ARM/ARMInstrInfo.cpp	/^void ARMInstrInfo::getNoopForMachoTarget(MCInst &NopInst) const {$/;"	f	class:ARMInstrInfo
getNoopForMachoTarget	Target/ARM/Thumb1InstrInfo.cpp	/^void Thumb1InstrInfo::getNoopForMachoTarget(MCInst &NopInst) const {$/;"	f	class:Thumb1InstrInfo
getNoopForMachoTarget	Target/ARM/Thumb2InstrInfo.cpp	/^void Thumb2InstrInfo::getNoopForMachoTarget(MCInst &NopInst) const {$/;"	f	class:Thumb2InstrInfo
getNoopForMachoTarget	Target/X86/X86InstrInfo.cpp	/^void X86InstrInfo::getNoopForMachoTarget(MCInst &NopInst) const {$/;"	f	class:X86InstrInfo
getNoopInput	CodeGen/Analysis.cpp	/^static const Value *getNoopInput(const Value *V, const TargetLowering &TLI) {$/;"	f	file:
getNoopOrAnyExtend	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getNoopOrAnyExtend(const SCEV *V, Type *Ty) {$/;"	f	class:ScalarEvolution
getNoopOrSignExtend	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getNoopOrSignExtend(const SCEV *V, Type *Ty) {$/;"	f	class:ScalarEvolution
getNoopOrZeroExtend	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getNoopOrZeroExtend(const SCEV *V, Type *Ty) {$/;"	f	class:ScalarEvolution
getNormalBranchForm	Target/Hexagon/HexagonInstrInfo.cpp	/^unsigned HexagonInstrInfo::getNormalBranchForm(const MachineInstr* MI) const {$/;"	f	class:HexagonInstrInfo
getNot	Analysis/LazyValueInfo.cpp	/^  static LVILatticeVal getNot(Constant *C) {$/;"	f	class:__anon18::LVILatticeVal
getNot	VMCore/Constants.cpp	/^Constant *ConstantExpr::getNot(Constant *C) {$/;"	f	class:ConstantExpr
getNotArgument	VMCore/Instructions.cpp	/^Value *BinaryOperator::getNotArgument(Value *BinOp) {$/;"	f	class:BinaryOperator
getNotArgument	VMCore/Instructions.cpp	/^const Value *BinaryOperator::getNotArgument(const Value *BinOp) {$/;"	f	class:BinaryOperator
getNotConstant	Analysis/LazyValueInfo.cpp	/^  Constant *getNotConstant() const {$/;"	f	class:__anon18::LVILatticeVal
getNotSCEV	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getNotSCEV(const SCEV *V) {$/;"	f	class:ScalarEvolution
getNullValue	VMCore/Constants.cpp	/^Constant *Constant::getNullValue(Type *Ty) {$/;"	f	class:Constant
getNumAddrElements	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned getNumAddrElements()      const { $/;"	f	class:llvm::DbgVariable
getNumAddrElements	VMCore/DebugInfo.cpp	/^unsigned DIVariable::getNumAddrElements() const {$/;"	f	class:DIVariable
getNumAlignedDPRCS2Regs	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getNumAlignedDPRCS2Regs() const { return NumAlignedDPRCS2Regs; }$/;"	f	class:llvm::ARMFunctionInfo
getNumAttributes	DebugInfo/DWARFAbbreviationDeclaration.h	/^  uint32_t getNumAttributes() const { return Attributes.size(); }$/;"	f	class:llvm::DWARFAbbreviationDeclaration
getNumAttributes	DebugInfo/DWARFDebugInfoEntry.h	/^  uint32_t getNumAttributes() const {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getNumAttrs	VMCore/Attributes.cpp	/^unsigned AttrListPtr::getNumAttrs() const {$/;"	f	class:AttrListPtr
getNumCompileUnits	DebugInfo/DWARFContext.h	/^  unsigned getNumCompileUnits() {$/;"	f	class:llvm::DWARFContext
getNumDescriptors	DebugInfo/DWARFDebugArangeSet.h	/^  uint32_t getNumDescriptors() const { return ArangeDescriptors.size(); }$/;"	f	class:llvm::DWARFDebugArangeSet
getNumElements	VMCore/Constants.cpp	/^unsigned ConstantDataSequential::getNumElements() const {$/;"	f	class:ConstantDataSequential
getNumElements	VMCore/DebugInfo.cpp	/^unsigned DIArray::getNumElements() const {$/;"	f	class:DIArray
getNumExplicitOperands	CodeGen/MachineInstr.cpp	/^unsigned MachineInstr::getNumExplicitOperands() const {$/;"	f	class:MachineInstr
getNumFixupKinds	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  unsigned getNumFixupKinds() const { return ARM::NumTargetFixupKinds; }$/;"	f	class:__anon284::ARMAsmBackend
getNumFixupKinds	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^  unsigned getNumFixupKinds() const {$/;"	f	class:__anon455::MBlazeAsmBackend
getNumFixupKinds	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  unsigned getNumFixupKinds() const { return Mips::NumTargetFixupKinds; }$/;"	f	class:__anon429::MipsAsmBackend
getNumFixupKinds	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  unsigned getNumFixupKinds() const { return PPC::NumTargetFixupKinds; }$/;"	f	class:__anon320::PPCAsmBackend
getNumFixupKinds	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  unsigned getNumFixupKinds() const {$/;"	f	class:__anon344::X86AsmBackend
getNumIterationsInRange	Analysis/ScalarEvolution.cpp	/^const SCEV *SCEVAddRecExpr::getNumIterationsInRange(ConstantRange Range,$/;"	f	class:SCEVAddRecExpr
getNumJTEntries	Target/ARM/ARMBaseInstrInfo.cpp	/^static unsigned getNumJTEntries(const std::vector<MachineJumpTableEntry> &JT,$/;"	f	file:
getNumJumpTables	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getNumJumpTables() const {$/;"	f	class:llvm::ARMFunctionInfo
getNumLDMAddresses	Target/ARM/ARMBaseInstrInfo.cpp	/^unsigned ARMBaseInstrInfo::getNumLDMAddresses(const MachineInstr *MI) const {$/;"	f	class:ARMBaseInstrInfo
getNumLiveBlocks	CodeGen/SplitKit.h	/^  unsigned getNumLiveBlocks() const {$/;"	f	class:llvm::SplitAnalysis
getNumLocalDynamicTLSAccesses	Target/X86/X86MachineFunctionInfo.h	/^  unsigned getNumLocalDynamicTLSAccesses() const { return NumLocalDynamics; }$/;"	f	class:llvm::X86MachineFunctionInfo
getNumMatches	Support/Regex.cpp	/^unsigned Regex::getNumMatches() const {$/;"	f	class:Regex
getNumMicroOps	CodeGen/TargetInstrInfoImpl.cpp	/^TargetInstrInfoImpl::getNumMicroOps(const InstrItineraryData *ItinData,$/;"	f	class:TargetInstrInfoImpl
getNumMicroOps	CodeGen/TargetSchedule.cpp	/^unsigned TargetSchedModel::getNumMicroOps(MachineInstr *MI) const {$/;"	f	class:TargetSchedModel
getNumMicroOps	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::getNumMicroOps(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
getNumMicroOpsSwiftLdSt	Target/ARM/ARMBaseInstrInfo.cpp	/^static unsigned getNumMicroOpsSwiftLdSt(const InstrItineraryData *ItinData,$/;"	f	file:
getNumOfConsecutiveZeros	Target/X86/X86ISelLowering.cpp	/^unsigned getNumOfConsecutiveZeros(ShuffleVectorSDNode *SVOp, unsigned NumElems,$/;"	f	file:
getNumOperands	VMCore/Metadata.cpp	/^unsigned NamedMDNode::getNumOperands() const {$/;"	f	class:NamedMDNode
getNumPICLabels	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getNumPICLabels() const {$/;"	f	class:llvm::ARMFunctionInfo
getNumPlugins	Support/PluginLoader.cpp	/^unsigned PluginLoader::getNumPlugins() {$/;"	f	class:PluginLoader
getNumPreds	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    unsigned getNumPreds(const BasicBlock *BB) {$/;"	f	struct:__anon469::PromoteMem2Reg	file:
getNumRanges	DebugInfo/DWARFDebugAranges.h	/^  uint32_t getNumRanges() const { return Aranges.size(); }$/;"	f	class:llvm::DWARFDebugAranges
getNumRegPressureSets	Target/Hexagon/HexagonRegisterInfo.cpp	/^unsigned HexagonRegisterInfo::getNumRegPressureSets() const {$/;"	f	class:HexagonRegisterInfo
getNumRegs	Transforms/Scalar/LoopStrengthReduce.cpp	/^unsigned Formula::getNumRegs() const {$/;"	f	class:Formula
getNumSlots	VMCore/Attributes.cpp	/^unsigned AttrListPtr::getNumSlots() const {$/;"	f	class:AttrListPtr
getNumSuccessorsV	VMCore/Instructions.cpp	/^unsigned BranchInst::getNumSuccessorsV() const {$/;"	f	class:BranchInst
getNumSuccessorsV	VMCore/Instructions.cpp	/^unsigned IndirectBrInst::getNumSuccessorsV() const {$/;"	f	class:IndirectBrInst
getNumSuccessorsV	VMCore/Instructions.cpp	/^unsigned InvokeInst::getNumSuccessorsV() const {$/;"	f	class:InvokeInst
getNumSuccessorsV	VMCore/Instructions.cpp	/^unsigned ResumeInst::getNumSuccessorsV() const {$/;"	f	class:ResumeInst
getNumSuccessorsV	VMCore/Instructions.cpp	/^unsigned ReturnInst::getNumSuccessorsV() const {$/;"	f	class:ReturnInst
getNumSuccessorsV	VMCore/Instructions.cpp	/^unsigned SwitchInst::getNumSuccessorsV() const {$/;"	f	class:SwitchInst
getNumSuccessorsV	VMCore/Instructions.cpp	/^unsigned UnreachableInst::getNumSuccessorsV() const {$/;"	f	class:UnreachableInst
getNumThroughBlocks	CodeGen/SplitKit.h	/^  unsigned getNumThroughBlocks() const { return NumThroughBlocks; }$/;"	f	class:llvm::SplitAnalysis
getNumUses	VMCore/Value.cpp	/^unsigned Value::getNumUses() const {$/;"	f	class:Value
getNumber	CodeGen/AsmPrinter/DIE.h	/^    unsigned getNumber() const { return Number; }$/;"	f	class:llvm::DIEAbbrev
getNumber	CodeGen/MachineLoopRanges.cpp	/^unsigned MachineLoopRange::getNumber() const {$/;"	f	class:MachineLoopRange
getNumberOfPaths	Analysis/PathNumbering.cpp	/^unsigned BallLarusDag::getNumberOfPaths() {$/;"	f	class:BallLarusDag
getNumberPaths	Analysis/PathNumbering.cpp	/^unsigned BallLarusNode::getNumberPaths() {$/;"	f	class:BallLarusNode
getNumberPredEdges	Analysis/PathNumbering.cpp	/^unsigned BallLarusNode::getNumberPredEdges() {$/;"	f	class:BallLarusNode
getNumberSuccEdges	Analysis/PathNumbering.cpp	/^unsigned BallLarusNode::getNumberSuccEdges() {$/;"	f	class:BallLarusNode
getOPCODE	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned getOPCODE(uint32_t insn) {$/;"	f	file:
getOSAndEnvironmentName	Support/Triple.cpp	/^StringRef Triple::getOSAndEnvironmentName() const {$/;"	f	class:Triple
getOSName	Support/Triple.cpp	/^StringRef Triple::getOSName() const {$/;"	f	class:Triple
getOSTypeName	Support/Triple.cpp	/^const char *Triple::getOSTypeName(OSType Kind) {$/;"	f	class:Triple
getOSVersion	Support/Triple.cpp	/^void Triple::getOSVersion(unsigned &Major, unsigned &Minor,$/;"	f	class:Triple
getObjCClassCategory	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static void getObjCClassCategory(StringRef In, StringRef &Class,$/;"	f	file:
getObjCMethodName	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static StringRef getObjCMethodName(StringRef In) {$/;"	f	file:
getObjCProperty	VMCore/DebugInfo.cpp	/^MDNode *DIDerivedType::getObjCProperty() const {$/;"	f	class:DIDerivedType
getObjFileLowering	CodeGen/AsmPrinter/AsmPrinter.cpp	/^const TargetLoweringObjectFile &AsmPrinter::getObjFileLowering() const {$/;"	f	class:AsmPrinter
getObjectSize	Analysis/BasicAliasAnalysis.cpp	/^static uint64_t getObjectSize(const Value *V, const DataLayout &TD,$/;"	f	file:
getObjectSize	Analysis/MemoryBuiltins.cpp	/^bool llvm::getObjectSize(const Value *Ptr, uint64_t &Size, const DataLayout *TD,$/;"	f	class:llvm
getOffset	CodeGen/AsmPrinter/DIE.h	/^    unsigned getOffset() const { return Offset; }$/;"	f	class:llvm::DIE
getOffset	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  uint64_t getOffset() { return Offset; }$/;"	f	class:llvm::SDDbgValue
getOffset	DebugInfo/DWARFCompileUnit.h	/^  uint32_t getOffset() const { return Offset; }$/;"	f	class:llvm::DWARFCompileUnit
getOffset	DebugInfo/DWARFDebugAbbrev.h	/^  uint32_t getOffset() const { return Offset; }$/;"	f	class:llvm::DWARFAbbreviationDeclarationSet
getOffset	DebugInfo/DWARFDebugInfoEntry.h	/^  uint32_t getOffset() const { return Offset; }$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getOffsetAlign	Transforms/Scalar/SROA.cpp	/^  unsigned getOffsetAlign(uint64_t Offset) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
getOffsetOf	Target/ARM/ARMConstantIslandPass.cpp	/^unsigned ARMConstantIslands::getOffsetOf(MachineInstr *MI) const {$/;"	f	class:ARMConstantIslands
getOffsetOf	VMCore/Constants.cpp	/^Constant *ConstantExpr::getOffsetOf(StructType* STy, unsigned FieldNo) {$/;"	f	class:ConstantExpr
getOffsetOf	VMCore/Constants.cpp	/^Constant *ConstantExpr::getOffsetOf(Type* Ty, Constant *FieldNo) {$/;"	f	class:ConstantExpr
getOffsetOfExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getOffsetOfExpr(StructType *STy,$/;"	f	class:ScalarEvolution
getOffsetOfExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getOffsetOfExpr(Type *CTy,$/;"	f	class:ScalarEvolution
getOffsetOfNextEntry	DebugInfo/DWARFDebugArangeSet.h	/^  uint32_t getOffsetOfNextEntry() const { return Offset + Header.Length + 4; }$/;"	f	class:llvm::DWARFDebugArangeSet
getOffsetTypeAlign	Transforms/Scalar/SROA.cpp	/^  unsigned getOffsetTypeAlign(Type *Ty, uint64_t Offset) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
getOnTheFlyPass	VMCore/PassManager.cpp	/^Pass *PMDataManager::getOnTheFlyPass(Pass *P, AnalysisID PI, Function &F) {$/;"	f	class:PMDataManager
getOnTheFlyPass	VMCore/PassManager.cpp	/^Pass* MPPassManager::getOnTheFlyPass(Pass *MP, AnalysisID PI, Function &F){$/;"	f	class:MPPassManager
getOne	Transforms/InstCombine/InstCombineCompares.cpp	/^static ConstantInt *getOne(Constant *C) {$/;"	f	file:
getOnesVector	Target/X86/X86ISelLowering.cpp	/^static SDValue getOnesVector(EVT VT, bool HasAVX2, SelectionDAG &DAG,$/;"	f	file:
getOpName	Target/CppBackend/CPPBackend.cpp	/^std::string CppWriter::getOpName(const Value* V) {$/;"	f	class:CppWriter
getOpPlacement	Target/CellSPU/SPUNopFiller.cpp	/^SPUNopFiller::getOpPlacement( MachineInstr &instr ) {$/;"	f	class:SPUNopFiller
getOpcode	MC/MCParser/AsmParser.cpp	/^  unsigned getOpcode() { return Opcode; }$/;"	f	class:__anon211::AsmParser	file:
getOpcodeAfterMemoryUnfold	Target/X86/X86InstrInfo.cpp	/^unsigned X86InstrInfo::getOpcodeAfterMemoryUnfold(unsigned Opc,$/;"	f	class:X86InstrInfo
getOpcodeName	MC/MCInstPrinter.cpp	/^StringRef MCInstPrinter::getOpcodeName(unsigned Opcode) const {$/;"	f	class:MCInstPrinter
getOpcodeName	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^StringRef HexagonInstPrinter::getOpcodeName(unsigned Opcode) const {$/;"	f	class:HexagonInstPrinter
getOpcodeName	VMCore/Constants.cpp	/^const char *ConstantExpr::getOpcodeName() const {$/;"	f	class:ConstantExpr
getOpcodeName	VMCore/Instruction.cpp	/^const char *Instruction::getOpcodeName(unsigned OpCode) {$/;"	f	class:Instruction
getOpenCLAlignment	Target/NVPTX/NVPTXAsmPrinter.cpp	/^getOpenCLAlignment(const DataLayout *TD,$/;"	f	file:
getOpenFile	Support/MemoryBuffer.cpp	/^error_code MemoryBuffer::getOpenFile(int FD, const char *Filename,$/;"	f	class:MemoryBuffer
getOperand	MC/MCDisassembler/EDInst.cpp	/^int EDInst::getOperand(EDOperand *&operand, unsigned int index) {$/;"	f	class:EDInst
getOperand	VMCore/Metadata.cpp	/^MDNode *NamedMDNode::getOperand(unsigned i) const {$/;"	f	class:NamedMDNode
getOperand	VMCore/Metadata.cpp	/^Value *MDNode::getOperand(unsigned i) const {$/;"	f	class:MDNode
getOperandLatency	CodeGen/TargetInstrInfoImpl.cpp	/^TargetInstrInfoImpl::getOperandLatency(const InstrItineraryData *ItinData,$/;"	f	class:TargetInstrInfoImpl
getOperandLatency	CodeGen/TargetInstrInfoImpl.cpp	/^getOperandLatency(const InstrItineraryData *ItinData,$/;"	f	class:TargetInstrInfoImpl
getOperandLatency	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::getOperandLatency(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
getOperandPtr	VMCore/Metadata.cpp	/^static MDNodeOperand *getOperandPtr(MDNode *N, unsigned Op) {$/;"	f	file:
getOperandValue	ExecutionEngine/Interpreter/Execution.cpp	/^GenericValue Interpreter::getOperandValue(Value *V, ExecutionContext &SF) {$/;"	f	class:Interpreter
getOperationName	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^std::string SDNode::getOperationName(const SelectionDAG *G) const {$/;"	f	class:SDNode
getOppositeCondition	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^  inline static CondCodes getOppositeCondition(CondCodes CC) {$/;"	f	namespace:llvm::ARMCC
getOppositeCondition	Target/MBlaze/MBlazeISelLowering.h	/^    inline static CC getOppositeCondition(CC cc) {$/;"	f	namespace:llvm::MBlazeCC
getOptLevel	Target/TargetMachine.cpp	/^CodeGenOpt::Level TargetMachine::getOptLevel() const {$/;"	f	class:TargetMachine
getOptimalMemOpType	Target/ARM/ARMISelLowering.cpp	/^EVT ARMTargetLowering::getOptimalMemOpType(uint64_t Size,$/;"	f	class:ARMTargetLowering
getOptimalMemOpType	Target/Mips/MipsISelLowering.cpp	/^EVT MipsTargetLowering::getOptimalMemOpType(uint64_t Size, unsigned DstAlign,$/;"	f	class:MipsTargetLowering
getOptimalMemOpType	Target/PowerPC/PPCISelLowering.cpp	/^EVT PPCTargetLowering::getOptimalMemOpType(uint64_t Size,$/;"	f	class:PPCTargetLowering
getOptimalMemOpType	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::getOptimalMemOpType(uint64_t Size,$/;"	f	class:X86TargetLowering
getOptimizeRegAlloc	CodeGen/Passes.cpp	/^bool TargetPassConfig::getOptimizeRegAlloc() const {$/;"	f	class:TargetPassConfig
getOptionPred	Support/CommandLine.cpp	/^static Option *getOptionPred(StringRef Name, size_t &Length,$/;"	f	file:
getOptionWidth	Support/CommandLine.cpp	/^size_t alias::getOptionWidth() const {$/;"	f	class:alias
getOptionWidth	Support/CommandLine.cpp	/^size_t basic_parser_impl::getOptionWidth(const Option &O) const {$/;"	f	class:basic_parser_impl
getOptionWidth	Support/CommandLine.cpp	/^size_t generic_parser_base::getOptionWidth(const Option &O) const {$/;"	f	class:generic_parser_base
getOr	VMCore/Constants.cpp	/^Constant *ConstantExpr::getOr(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getOrAddScopeInlinedAtIdxEntry	VMCore/DebugLoc.cpp	/^int LLVMContextImpl::getOrAddScopeInlinedAtIdxEntry(MDNode *Scope, MDNode *IA,$/;"	f	class:LLVMContextImpl
getOrAddScopeRecordIdxEntry	VMCore/DebugLoc.cpp	/^int LLVMContextImpl::getOrAddScopeRecordIdxEntry(MDNode *Scope,$/;"	f	class:LLVMContextImpl
getOrCreate	VMCore/ConstantsContext.h	/^  ConstantClass *getOrCreate(TypeClass *Ty, Operands V) {$/;"	f	class:llvm::ConstantAggrUniqueMap
getOrCreate	VMCore/ConstantsContext.h	/^  ConstantClass *getOrCreate(TypeClass *Ty, ValRefType V) {$/;"	f	class:llvm::ConstantUniqueMap
getOrCreateAbstractScope	CodeGen/LexicalScopes.cpp	/^LexicalScope *LexicalScopes::getOrCreateAbstractScope(const MDNode *N) {$/;"	f	class:LexicalScopes
getOrCreateArray	VMCore/DIBuilder.cpp	/^DIArray DIBuilder::getOrCreateArray(ArrayRef<Value *> Elements) {$/;"	f	class:DIBuilder
getOrCreateDataFragment	MC/MCObjectStreamer.cpp	/^MCDataFragment *MCObjectStreamer::getOrCreateDataFragment() const {$/;"	f	class:MCObjectStreamer
getOrCreateInlinedScope	CodeGen/LexicalScopes.cpp	/^LexicalScope *LexicalScopes::getOrCreateInlinedScope(MDNode *Scope, $/;"	f	class:LexicalScopes
getOrCreateInterval	CodeGen/LiveStackAnalysis.cpp	/^LiveStacks::getOrCreateInterval(int Slot, const TargetRegisterClass *RC) {$/;"	f	class:LiveStacks
getOrCreateJumpTableInfo	CodeGen/MachineFunction.cpp	/^getOrCreateJumpTableInfo(unsigned EntryKind) {$/;"	f	class:MachineFunction
getOrCreateLandingPadInfo	CodeGen/MachineModuleInfo.cpp	/^LandingPadInfo &MachineModuleInfo::getOrCreateLandingPadInfo$/;"	f	class:MachineModuleInfo
getOrCreateLexicalScope	CodeGen/LexicalScopes.cpp	/^LexicalScope *LexicalScopes::getOrCreateLexicalScope(DebugLoc DL) {$/;"	f	class:LexicalScopes
getOrCreateNameSpace	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^DIE *CompileUnit::getOrCreateNameSpace(DINameSpace NS) {$/;"	f	class:CompileUnit
getOrCreateRegularScope	CodeGen/LexicalScopes.cpp	/^LexicalScope *LexicalScopes::getOrCreateRegularScope(MDNode *Scope) {$/;"	f	class:LexicalScopes
getOrCreateStrategy	CodeGen/GCMetadata.cpp	/^GCStrategy *GCModuleInfo::getOrCreateStrategy(const Module *M,$/;"	f	class:GCModuleInfo
getOrCreateSubprogramDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^DIE *CompileUnit::getOrCreateSubprogramDIE(DISubprogram SP) {$/;"	f	class:CompileUnit
getOrCreateSubrange	VMCore/DIBuilder.cpp	/^DISubrange DIBuilder::getOrCreateSubrange(int64_t Lo, int64_t Hi) {$/;"	f	class:DIBuilder
getOrCreateTemplateTypeParameterDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^CompileUnit::getOrCreateTemplateTypeParameterDIE(DITemplateTypeParameter TP) {$/;"	f	class:CompileUnit
getOrCreateTemplateValueParameterDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^CompileUnit::getOrCreateTemplateValueParameterDIE(DITemplateValueParameter TPV){$/;"	f	class:CompileUnit
getOrCreateTypeDIE	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^DIE *CompileUnit::getOrCreateTypeDIE(const MDNode *TyNode) {$/;"	f	class:CompileUnit
getOrEmitGlobalVariable	ExecutionEngine/JIT/JIT.cpp	/^void *JIT::getOrEmitGlobalVariable(const GlobalVariable *GV) {$/;"	f	class:JIT
getOrEnforceKnownAlignment	Transforms/Utils/Local.cpp	/^unsigned llvm::getOrEnforceKnownAlignment(Value *V, unsigned PrefAlign,$/;"	f	class:llvm
getOrInitValueState	Analysis/SparsePropagation.cpp	/^SparseSolver::LatticeVal SparseSolver::getOrInitValueState(Value *V) {$/;"	f	class:SparseSolver
getOrInsertCanonicalInductionVariable	Analysis/ScalarEvolutionExpander.cpp	/^SCEVExpander::getOrInsertCanonicalInductionVariable(const Loop *L,$/;"	f	class:SCEVExpander
getOrInsertFnSpecificMDNode	VMCore/DebugInfo.cpp	/^NamedMDNode *llvm::getOrInsertFnSpecificMDNode(Module &M, DISubprogram Fn) {$/;"	f	class:llvm
getOrInsertFunction	Analysis/IPA/CallGraph.cpp	/^CallGraphNode *CallGraph::getOrInsertFunction(const Function *F) {$/;"	f	class:CallGraph
getOrInsertFunction	VMCore/Module.cpp	/^Constant *Module::getOrInsertFunction(StringRef Name,$/;"	f	class:Module
getOrInsertGlobal	VMCore/Module.cpp	/^Constant *Module::getOrInsertGlobal(StringRef Name, Type *Ty) {$/;"	f	class:Module
getOrInsertModuleFlagsMetadata	VMCore/Module.cpp	/^NamedMDNode *Module::getOrInsertModuleFlagsMetadata() {$/;"	f	class:Module
getOrInsertNamedMetadata	VMCore/Module.cpp	/^NamedMDNode *Module::getOrInsertNamedMetadata(StringRef Name) {$/;"	f	class:Module
getOrInsertTargetIntrinsic	VMCore/Module.cpp	/^Constant *Module::getOrInsertTargetIntrinsic(StringRef Name,$/;"	f	class:Module
getOrParseLineTable	DebugInfo/DWARFDebugLine.cpp	/^DWARFDebugLine::getOrParseLineTable(DataExtractor debug_line_data,$/;"	f	class:DWARFDebugLine
getOrder	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  unsigned getOrder() { return Order; }$/;"	f	class:llvm::SDDbgValue
getOrder	CodeGen/SelectionDAG/SDNodeOrdering.h	/^  unsigned getOrder(const SDNode *Node) {$/;"	f	class:llvm::SDNodeOrdering
getOriginal	CodeGen/VirtRegMap.h	/^    unsigned getOriginal(unsigned VirtReg) const {$/;"	f	class:llvm::VirtRegMap
getOriginalCPIdx	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getOriginalCPIdx(unsigned CloneIdx) const {$/;"	f	class:llvm::ARMFunctionInfo
getOriginalTypeSize	VMCore/DebugInfo.cpp	/^uint64_t DIDerivedType::getOriginalTypeSize() const {$/;"	f	class:DIDerivedType
getOuterResumeDest	Transforms/Utils/InlineFunction.cpp	/^    BasicBlock *getOuterResumeDest() const {$/;"	f	class:__anon468::InvokeInliningInfo
getOverflowLimitForStep	Analysis/ScalarEvolution.cpp	/^static const SCEV *getOverflowLimitForStep(const SCEV *Step,$/;"	f	file:
getPCAdjustment	Target/ARM/ARMConstantPoolValue.h	/^  unsigned char getPCAdjustment() const { return PCAdjust; }$/;"	f	class:llvm::ARMConstantPoolValue
getPCLabelAddr	Target/ARM/ARMJITInfo.h	/^    intptr_t getPCLabelAddr(unsigned Id) const {$/;"	f	class:llvm::ARMJITInfo
getPHIColor	CodeGen/StrongPHIElimination.cpp	/^unsigned StrongPHIElimination::getPHIColor(MachineInstr *PHI) {$/;"	f	class:StrongPHIElimination
getPHIDeps	CodeGen/MachineTraceMetrics.cpp	/^static void getPHIDeps(const MachineInstr *UseMI,$/;"	f	file:
getPHIDepth	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::Trace::getPHIDepth(const MachineInstr *PHI) const {$/;"	f	class:MachineTraceMetrics::Trace
getPHISrcRegOpIdx	CodeGen/TailDuplication.cpp	/^static unsigned getPHISrcRegOpIdx(MachineInstr *MI, MachineBasicBlock *SrcBB) {$/;"	f	file:
getPICBase	Target/X86/X86JITInfo.h	/^    uintptr_t getPICBase() const { return PICBase; }$/;"	f	class:llvm::X86JITInfo
getPICBaseSymbol	CodeGen/MachineFunction.cpp	/^MCSymbol *MachineFunction::getPICBaseSymbol() const {$/;"	f	class:MachineFunction
getPICCallReg	Target/MBlaze/MBlazeRegisterInfo.cpp	/^unsigned MBlazeRegisterInfo::getPICCallReg() {$/;"	f	class:MBlazeRegisterInfo
getPICCallReg	Target/Mips/MipsRegisterInfo.cpp	/^unsigned MipsRegisterInfo::getPICCallReg() { return Mips::T9; }$/;"	f	class:MipsRegisterInfo
getPICJumpTableEntry	Target/X86/X86JITInfo.cpp	/^uintptr_t X86JITInfo::getPICJumpTableEntry(uintptr_t BB, uintptr_t Entry) {$/;"	f	class:X86JITInfo
getPICJumpTableRelocBase	CodeGen/SelectionDAG/TargetLowering.cpp	/^SDValue TargetLowering::getPICJumpTableRelocBase(SDValue Table,$/;"	f	class:TargetLowering
getPICJumpTableRelocBase	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::getPICJumpTableRelocBase(SDValue Table,$/;"	f	class:X86TargetLowering
getPICJumpTableRelocBaseExpr	CodeGen/SelectionDAG/TargetLowering.cpp	/^TargetLowering::getPICJumpTableRelocBaseExpr(const MachineFunction *MF,$/;"	f	class:TargetLowering
getPICJumpTableRelocBaseExpr	Target/X86/X86ISelLowering.cpp	/^getPICJumpTableRelocBaseExpr(const MachineFunction *MF, unsigned JTI,$/;"	f	class:X86TargetLowering
getPICLabel	Target/ARM/ARMAsmPrinter.cpp	/^static MCSymbol *getPICLabel(const char *Prefix, unsigned FunctionNumber,$/;"	f	file:
getPICStyle	Target/X86/X86Subtarget.h	/^  PICStyles::Style getPICStyle() const { return PICStyle; }$/;"	f	class:llvm::X86Subtarget
getPM	ExecutionEngine/JIT/JIT.h	/^  FunctionPassManager &getPM(const MutexGuard &L) {$/;"	f	class:llvm::JITState
getPPCRegisterNumbering	Target/PowerPC/MCTargetDesc/PPCBaseInfo.h	/^inline static unsigned getPPCRegisterNumbering(unsigned RegEnum) {$/;"	f	namespace:llvm
getPPCTargetMachine	Target/PowerPC/PPCTargetMachine.cpp	/^  PPCTargetMachine &getPPCTargetMachine() const {$/;"	f	class:__anon329::PPCPassConfig
getPPC_FP128PtrTy	VMCore/Type.cpp	/^PointerType *Type::getPPC_FP128PtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getPPC_FP128Ty	VMCore/Type.cpp	/^Type *Type::getPPC_FP128Ty(LLVMContext &C) { return &C.pImpl->PPC_FP128Ty; }$/;"	f	class:Type
getPRegForOption	CodeGen/RegAllocPBQP.cpp	/^unsigned PBQPRAProblem::getPRegForOption(unsigned vreg, unsigned option) const {$/;"	f	class:PBQPRAProblem
getPTXFundamentalTypeStr	Target/NVPTX/NVPTXAsmPrinter.cpp	/^std::string NVPTXAsmPrinter::getPTXFundamentalTypeStr(const Type *Ty,$/;"	f	class:NVPTXAsmPrinter
getPaddingSize	MC/MachObjectWriter.cpp	/^uint64_t MachObjectWriter::getPaddingSize(const MCSectionData *SD,$/;"	f	class:MachObjectWriter
getPairPtrInfo	Transforms/Vectorize/BBVectorize.cpp	/^    bool getPairPtrInfo(Instruction *I, Instruction *J,$/;"	f	struct:__anon604::BBVectorize
getParamAlignment	VMCore/Function.cpp	/^unsigned Argument::getParamAlignment() const {$/;"	f	class:Argument
getParamHelpSymbol	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::getParamHelpSymbol(SelectionDAG &DAG, int idx) {$/;"	f	class:NVPTXTargetLowering
getParamSymbol	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::getParamSymbol(SelectionDAG &DAG, int idx, EVT v) const {$/;"	f	class:NVPTXTargetLowering
getParent	Analysis/BasicAliasAnalysis.cpp	/^static const Function *getParent(const Value *V) {$/;"	f	file:
getParent	Analysis/TypeBasedAliasAnalysis.cpp	/^    TBAANode getParent() const {$/;"	f	class:__anon12::TBAANode
getParent	CodeGen/AsmPrinter/DIE.h	/^    DIE *getParent() const { return Parent; }$/;"	f	class:llvm::DIE
getParent	CodeGen/SplitKit.h	/^  const LiveInterval &getParent() const { return *CurLI; }$/;"	f	class:llvm::SplitAnalysis
getParent	DebugInfo/DWARFDebugInfoEntry.h	/^  DWARFDebugInfoEntryMinimal *getParent() {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getParent	DebugInfo/DWARFDebugInfoEntry.h	/^  const DWARFDebugInfoEntryMinimal *getParent() const {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getParent	VMCore/Metadata.cpp	/^  MDNode *getParent() {$/;"	f	class:llvm::MDNodeOperand	file:
getParentBlock	Target/NVPTX/NVPTXUtilities.cpp	/^BasicBlock *llvm::getParentBlock(Value *v) {$/;"	f	class:llvm
getParentFunction	Target/NVPTX/NVPTXUtilities.cpp	/^Function *llvm::getParentFunction(Value *v) {$/;"	f	class:llvm
getParser	MC/MCParser/AsmParser.cpp	/^  AsmParser &getParser() {$/;"	f	class:__anon211::GenericAsmParser
getParser	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  MCAsmParser &getParser() const { return Parser; }$/;"	f	class:__anon259::ARMAsmParser	file:
getParser	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  MCAsmParser &getParser() const { return Parser; }$/;"	f	class:__anon446::MBlazeAsmParser	file:
getParser	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  MCAsmParser &getParser() const { return Parser; }$/;"	f	class:__anon422::MipsAsmParser
getParser	Target/X86/AsmParser/X86AsmParser.cpp	/^  MCAsmParser &getParser() const { return Parser; }$/;"	f	class:__anon335::X86AsmParser	file:
getPartialRegUpdateClearance	Target/ARM/ARMBaseInstrInfo.cpp	/^getPartialRegUpdateClearance(const MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
getPartialRegUpdateClearance	Target/X86/X86InstrInfo.cpp	/^getPartialRegUpdateClearance(const MachineInstr *MI, unsigned OpNum,$/;"	f	class:X86InstrInfo
getPartitionAlign	Transforms/Scalar/SROA.cpp	/^  unsigned getPartitionAlign() {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
getPartitionTypeAlign	Transforms/Scalar/SROA.cpp	/^  unsigned getPartitionTypeAlign(Type *Ty) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
getPassInfo	VMCore/PassRegistry.cpp	/^const PassInfo *PassRegistry::getPassInfo(StringRef Arg) const {$/;"	f	class:PassRegistry
getPassInfo	VMCore/PassRegistry.cpp	/^const PassInfo *PassRegistry::getPassInfo(const void *TI) const {$/;"	f	class:PassRegistry
getPassManagerType	Analysis/IPA/CallGraphSCCPass.cpp	/^  virtual PassManagerType getPassManagerType() const { $/;"	f	class:__anon3::CGPassManager
getPassManagerType	VMCore/PassManager.cpp	/^  virtual PassManagerType getPassManagerType() const {$/;"	f	class:__anon614::BBPassManager
getPassManagerType	VMCore/PassManager.cpp	/^  virtual PassManagerType getPassManagerType() const {$/;"	f	class:llvm::MPPassManager
getPassName	Analysis/IPA/CallGraphSCCPass.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon3::CGPassManager
getPassName	Analysis/PathProfileInfo.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon41::NoPathProfileInfo
getPassName	Analysis/PathProfileInfo.cpp	/^    virtual const char* getPassName() const {$/;"	f	class:__anon40::PathProfileLoaderPass
getPassName	Analysis/PathProfileVerifier.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon29::PathProfileVerifier
getPassName	Analysis/ProfileDataLoaderPass.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon7::ProfileMetadataLoaderPass
getPassName	Analysis/ProfileEstimatorPass.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon9::ProfileEstimatorPass
getPassName	Analysis/ProfileInfo.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon16::NoProfileInfo
getPassName	Analysis/ProfileInfoLoaderPass.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon52::LoaderPass
getPassName	Analysis/ProfileVerifierPass.cpp	/^    const char *getPassName() const {$/;"	f	class:__anon36::ProfileVerifierPassT
getPassName	Bitcode/Writer/BitcodeWriterPass.cpp	/^    const char *getPassName() const { return "Bitcode Writer"; }$/;"	f	class:__anon59::WriteBitcodePass
getPassName	CodeGen/DwarfEHPrepare.cpp	/^    const char *getPassName() const {$/;"	f	class:__anon138::DwarfEHPrepare
getPassName	CodeGen/ExecutionDepsFix.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon120::ExeDepsFix
getPassName	CodeGen/GCMetadata.cpp	/^const char *Deleter::getPassName() const {$/;"	f	class:Deleter
getPassName	CodeGen/GCMetadata.cpp	/^const char *Printer::getPassName() const {$/;"	f	class:Printer
getPassName	CodeGen/GCStrategy.cpp	/^const char *LowerIntrinsics::getPassName() const {$/;"	f	class:LowerIntrinsics
getPassName	CodeGen/MachineFunctionPrinterPass.cpp	/^  const char *getPassName() const { return "MachineFunction Printer"; }$/;"	f	struct:__anon96::MachineFunctionPrinterPass
getPassName	CodeGen/RegAllocBasic.cpp	/^  virtual const char* getPassName() const {$/;"	f	class:__anon122::RABasic
getPassName	CodeGen/RegAllocFast.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon140::RAFast
getPassName	CodeGen/RegAllocGreedy.cpp	/^  virtual const char* getPassName() const {$/;"	f	class:__anon158::RAGreedy
getPassName	CodeGen/RegAllocPBQP.cpp	/^  virtual const char* getPassName() const {$/;"	f	class:__anon135::RegAllocPBQP
getPassName	CodeGen/SjLjEHPrepare.cpp	/^    const char *getPassName() const {$/;"	f	class:__anon123::SjLjEHPrepare
getPassName	Target/ARM/ARMCodeEmitter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon297::ARMCodeEmitter
getPassName	Target/ARM/ARMConstantIslandPass.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon310::ARMConstantIslands
getPassName	Target/ARM/ARMExpandPseudoInsts.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon311::ARMExpandPseudo
getPassName	Target/ARM/ARMISelDAGToDAG.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon302::ARMDAGToDAGISel
getPassName	Target/ARM/ARMInstrInfo.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon292::ARMCGBR
getPassName	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon303::ARMLoadStoreOpt
getPassName	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon304::ARMPreAllocLoadStoreOpt
getPassName	Target/ARM/MLxExpansionPass.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon301::MLxExpansion
getPassName	Target/ARM/Thumb2ITBlockPass.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon306::Thumb2ITBlockPass
getPassName	Target/ARM/Thumb2SizeReduction.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon300::Thumb2SizeReduce
getPassName	Target/CellSPU/SPUAsmPrinter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon413::SPUAsmPrinter
getPassName	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon414::SPUDAGToDAGISel
getPassName	Target/CellSPU/SPUNopFiller.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon417::SPUNopFiller
getPassName	Target/CppBackend/CPPBackend.cpp	/^    virtual const char *getPassName() const { return "C++ backend"; }$/;"	f	class:__anon412::CppWriter
getPassName	Target/Hexagon/HexagonAsmPrinter.h	/^    virtual const char *getPassName() const {$/;"	f	class:llvm::HexagonAsmPrinter
getPassName	Target/Hexagon/HexagonCFGOptimizer.cpp	/^  const char *getPassName() const {$/;"	f	class:__anon402::HexagonCFGOptimizer
getPassName	Target/Hexagon/HexagonExpandPredSpillCode.cpp	/^    const char *getPassName() const {$/;"	f	class:__anon401::HexagonExpandPredSpillCode
getPassName	Target/Hexagon/HexagonHardwareLoops.cpp	/^    const char *getPassName() const { return "Hexagon Hardware Loop Fixup"; }$/;"	f	struct:__anon408::HexagonFixupHwLoops
getPassName	Target/Hexagon/HexagonHardwareLoops.cpp	/^    const char *getPassName() const { return "Hexagon Hardware Loops"; }$/;"	f	struct:__anon408::HexagonHardwareLoops
getPassName	Target/Hexagon/HexagonISelDAGToDAG.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon400::HexagonDAGToDAGISel
getPassName	Target/Hexagon/HexagonNewValueJump.cpp	/^    const char *getPassName() const {$/;"	f	struct:__anon410::HexagonNewValueJump
getPassName	Target/Hexagon/HexagonPeephole.cpp	/^    const char *getPassName() const {$/;"	f	struct:__anon411::HexagonPeephole
getPassName	Target/Hexagon/HexagonRemoveSZExtArgs.cpp	/^    const char *getPassName() const {$/;"	f	struct:__anon406::HexagonRemoveExtendArgs
getPassName	Target/Hexagon/HexagonSplitTFRCondSets.cpp	/^    const char *getPassName() const {$/;"	f	class:__anon407::HexagonSplitTFRCondSets
getPassName	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^    const char *getPassName() const {$/;"	f	class:__anon403::HexagonPacketizer
getPassName	Target/MBlaze/MBlazeAsmPrinter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon460::MBlazeAsmPrinter
getPassName	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon462::Filler
getPassName	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon461::MBlazeDAGToDAGISel
getPassName	Target/MSP430/MSP430AsmPrinter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon391::MSP430AsmPrinter
getPassName	Target/MSP430/MSP430BranchSelector.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon396::MSP430BSel
getPassName	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon395::MSP430DAGToDAGISel
getPassName	Target/Mips/MipsAsmPrinter.h	/^  virtual const char *getPassName() const {$/;"	f	class:llvm::MipsAsmPrinter
getPassName	Target/Mips/MipsCodeEmitter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon438::MipsCodeEmitter
getPassName	Target/Mips/MipsDelaySlotFiller.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon436::Filler
getPassName	Target/Mips/MipsISelDAGToDAG.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon435::MipsDAGToDAGISel
getPassName	Target/Mips/MipsLongBranch.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon437::MipsLongBranch
getPassName	Target/NVPTX/NVPTXAllocaHoisting.h	/^  virtual const char *getPassName() const {$/;"	f	class:llvm::NVPTXAllocaHoisting
getPassName	Target/NVPTX/NVPTXAsmPrinter.h	/^  virtual const char *getPassName() const {$/;"	f	class:llvm::NVPTXAsmPrinter
getPassName	Target/NVPTX/NVPTXISelDAGToDAG.h	/^  virtual const char *getPassName() const {$/;"	f	class:__anon317::NVPTXDAGToDAGISel
getPassName	Target/NVPTX/NVPTXLowerAggrCopies.h	/^  virtual const char *getPassName() const {$/;"	f	struct:llvm::NVPTXLowerAggrCopies
getPassName	Target/NVPTX/NVPTXSplitBBatBar.h	/^  virtual const char *getPassName() const {$/;"	f	struct:llvm::NVPTXSplitBBatBar
getPassName	Target/NVPTX/VectorElementize.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon316::VectorElementize
getPassName	Target/PowerPC/PPCAsmPrinter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon330::PPCAsmPrinter
getPassName	Target/PowerPC/PPCAsmPrinter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon330::PPCDarwinAsmPrinter
getPassName	Target/PowerPC/PPCAsmPrinter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon330::PPCLinuxAsmPrinter
getPassName	Target/PowerPC/PPCBranchSelector.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon323::PPCBSel
getPassName	Target/PowerPC/PPCCTRLoops.cpp	/^    const char *getPassName() const { return "PPC CTR Loops"; }$/;"	f	struct:__anon325::PPCCTRLoops
getPassName	Target/PowerPC/PPCCodeEmitter.cpp	/^    const char *getPassName() const { return "PowerPC Machine Code Emitter"; }$/;"	f	class:__anon324::PPCCodeEmitter
getPassName	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon331::PPCDAGToDAGISel
getPassName	Target/Sparc/DelaySlotFiller.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon439::Filler
getPassName	Target/Sparc/FPMover.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon442::FPMover
getPassName	Target/Sparc/SparcAsmPrinter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon441::SparcAsmPrinter
getPassName	Target/Sparc/SparcISelDAGToDAG.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon443::SparcDAGToDAGISel
getPassName	Target/X86/X86CodeEmitter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon379::Emitter
getPassName	Target/X86/X86FloatingPoint.cpp	/^    virtual const char *getPassName() const { return "X86 FP Stackifier"; }$/;"	f	struct:__anon386::FPS
getPassName	Target/X86/X86ISelDAGToDAG.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon373::X86DAGToDAGISel
getPassName	Target/X86/X86InstrInfo.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon375::CGBR
getPassName	Target/X86/X86InstrInfo.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon376::LDTLSCleanup
getPassName	Target/X86/X86RegisterInfo.cpp	/^    virtual const char *getPassName() const {$/;"	f	struct:__anon378::MSAH
getPassName	Target/X86/X86VZeroUpper.cpp	/^    virtual const char *getPassName() const { return "X86 vzeroupper inserter";}$/;"	f	struct:__anon382::VZeroUpperInserter
getPassName	Target/XCore/XCoreAsmPrinter.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon333::XCoreAsmPrinter
getPassName	Target/XCore/XCoreISelDAGToDAG.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon334::XCoreDAGToDAGISel
getPassName	Transforms/Instrumentation/AddressSanitizer.cpp	/^const char *AddressSanitizer::getPassName() const {$/;"	f	class:AddressSanitizer
getPassName	Transforms/Instrumentation/EdgeProfiling.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon492::EdgeProfiler
getPassName	Transforms/Instrumentation/GCOVProfiling.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon489::GCOVProfiler
getPassName	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	/^    virtual const char *getPassName() const {$/;"	f	class:__anon487::OptimalEdgeProfiler
getPassName	Transforms/Instrumentation/PathProfiling.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon488::PathProfiler
getPassName	Transforms/Instrumentation/ThreadSanitizer.cpp	/^const char *ThreadSanitizer::getPassName() const {$/;"	f	class:ThreadSanitizer
getPassName	Transforms/Scalar/GlobalMerge.cpp	/^    const char *getPassName() const {$/;"	f	class:__anon567::GlobalMerge
getPassName	Transforms/Scalar/SROA.cpp	/^  const char *getPassName() const { return "SROA"; }$/;"	f	class:__anon559::SROA
getPassName	VMCore/Pass.cpp	/^const char *Pass::getPassName() const {$/;"	f	class:Pass
getPassName	VMCore/PassManager.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon614::BBPassManager
getPassName	VMCore/PassManager.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:llvm::MPPassManager
getPassRegistry	VMCore/PassRegistry.cpp	/^PassRegistry *PassRegistry::getPassRegistry() {$/;"	f	class:PassRegistry
getPassSubstitution	CodeGen/Passes.cpp	/^AnalysisID TargetPassConfig::getPassSubstitution(AnalysisID ID) const {$/;"	f	class:TargetPassConfig
getPassTimer	VMCore/PassManager.cpp	/^  Timer *getPassTimer(Pass *P) {$/;"	f	class:__anon615::TimingInfo
getPassTimer	VMCore/PassManager.cpp	/^Timer *llvm::getPassTimer(Pass *P) {$/;"	f	class:llvm
getPath	Analysis/PathProfileInfo.cpp	/^ProfilePath* PathProfileInfo::getPath(unsigned int number) {$/;"	f	class:PathProfileInfo
getPathBlocks	Analysis/PathProfileInfo.cpp	/^ProfilePathBlockVector* ProfilePath::getPathBlocks() const {$/;"	f	class:ProfilePath
getPathEdges	Analysis/PathProfileInfo.cpp	/^ProfilePathEdgeVector* ProfilePath::getPathEdges() const {$/;"	f	class:ProfilePath
getPathList	Support/Path.cpp	/^static void getPathList(const char*path, std::vector<Path>& Paths) {$/;"	f	file:
getPathPHI	Transforms/Instrumentation/PathProfiling.cpp	/^PHINode* BLInstrumentationNode::getPathPHI() {$/;"	f	class:BLInstrumentationNode
getPendingFunctions	ExecutionEngine/JIT/JIT.h	/^  std::vector<AssertingVH<Function> > &getPendingFunctions(const MutexGuard &L){$/;"	f	class:llvm::JITState
getPermanentLibrary	Support/DynamicLibrary.cpp	/^DynamicLibrary DynamicLibrary::getPermanentLibrary(const char *filename,$/;"	f	class:DynamicLibrary
getPersonality	CodeGen/MachineModuleInfo.cpp	/^const Function *MachineModuleInfo::getPersonality() const {$/;"	f	class:MachineModuleInfo
getPersonalityIndex	CodeGen/MachineModuleInfo.cpp	/^unsigned MachineModuleInfo::getPersonalityIndex() const {$/;"	f	class:MachineModuleInfo
getPhonyExit	Analysis/PathNumbering.cpp	/^BallLarusEdge* BallLarusEdge::getPhonyExit() {$/;"	f	class:BallLarusEdge
getPhonyRoot	Analysis/PathNumbering.cpp	/^BallLarusEdge* BallLarusEdge::getPhonyRoot() {$/;"	f	class:BallLarusEdge
getPhys	CodeGen/VirtRegMap.h	/^    unsigned getPhys(unsigned virtReg) const {$/;"	f	class:llvm::VirtRegMap
getPhysReg	CodeGen/InterferenceCache.h	/^    unsigned getPhysReg() const { return PhysReg; }$/;"	f	class:llvm::InterferenceCache::Entry
getPhysicalRegisterVT	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^static EVT getPhysicalRegisterVT(SDNode *N, unsigned Reg,$/;"	f	file:
getPhysicalRegisterVT	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static EVT getPhysicalRegisterVT(SDNode *N, unsigned Reg,$/;"	f	file:
getPlugin	Support/PluginLoader.cpp	/^std::string &PluginLoader::getPlugin(unsigned num) {$/;"	f	class:PluginLoader
getPointeeAlignment	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^static unsigned getPointeeAlignment(Value *V, const DataLayout &TD) {$/;"	f	file:
getPointer	Support/StreamableMemoryObject.cpp	/^const uint8_t *RawMemoryObject::getPointer(uint64_t address,$/;"	f	class:__anon236::RawMemoryObject
getPointerAddressSpace	VMCore/Type.cpp	/^unsigned Type::getPointerAddressSpace() const {$/;"	f	class:Type
getPointerBase	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getPointerBase(const SCEV *V) {$/;"	f	class:ScalarEvolution
getPointerCast	VMCore/Constants.cpp	/^Constant *ConstantExpr::getPointerCast(Constant *S, Type *Ty) {$/;"	f	class:ConstantExpr
getPointerDependencyFrom	Analysis/MemoryDependenceAnalysis.cpp	/^getPointerDependencyFrom(const AliasAnalysis::Location &MemLoc, bool isLoad, $/;"	f	class:MemoryDependenceAnalysis
getPointerOperand	Analysis/DependenceAnalysis.cpp	/^const Value *getPointerOperand(const Instruction *I) {$/;"	f	file:
getPointerRegClass	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::getPointerRegClass(const MachineFunction &MF, unsigned Kind)$/;"	f	class:ARMBaseRegisterInfo
getPointerRegClass	Target/ARM/Thumb1RegisterInfo.cpp	/^Thumb1RegisterInfo::getPointerRegClass(const MachineFunction &MF, unsigned Kind)$/;"	f	class:Thumb1RegisterInfo
getPointerRegClass	Target/CellSPU/SPURegisterInfo.cpp	/^SPURegisterInfo::getPointerRegClass(const MachineFunction &MF, unsigned Kind)$/;"	f	class:SPURegisterInfo
getPointerRegClass	Target/MSP430/MSP430RegisterInfo.cpp	/^MSP430RegisterInfo::getPointerRegClass(const MachineFunction &MF, unsigned Kind)$/;"	f	class:MSP430RegisterInfo
getPointerRegClass	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::getPointerRegClass(const MachineFunction &MF, unsigned Kind)$/;"	f	class:PPCRegisterInfo
getPointerRegClass	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getPointerRegClass(const MachineFunction &MF, unsigned Kind)$/;"	f	class:X86RegisterInfo
getPointerSize	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  unsigned getPointerSize() const { return 4; }$/;"	f	class:__anon284::ARMAsmBackend
getPointerSize	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^  unsigned getPointerSize() const {$/;"	f	class:__anon455::MBlazeAsmBackend
getPointerSize	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  unsigned getPointerSize() const {$/;"	f	class:__anon320::PPCAsmBackend
getPointerSize	Transforms/Scalar/DeadStoreElimination.cpp	/^static uint64_t getPointerSize(const Value *V, AliasAnalysis &AA) {$/;"	f	file:
getPointerSize	VMCore/Module.cpp	/^Module::PointerSize Module::getPointerSize() const {$/;"	f	class:Module
getPointerTo	VMCore/Type.cpp	/^PointerType *Type::getPointerTo(unsigned addrs) {$/;"	f	class:Type
getPointerToBasicBlock	ExecutionEngine/Interpreter/Interpreter.h	/^  void *getPointerToBasicBlock(BasicBlock *BB) { return (void*)BB; }$/;"	f	class:llvm::Interpreter
getPointerToBasicBlock	ExecutionEngine/JIT/JIT.cpp	/^void *JIT::getPointerToBasicBlock(BasicBlock *BB) {$/;"	f	class:JIT
getPointerToBasicBlock	ExecutionEngine/MCJIT/MCJIT.cpp	/^void *MCJIT::getPointerToBasicBlock(BasicBlock *BB) {$/;"	f	class:MCJIT
getPointerToFunction	ExecutionEngine/Interpreter/Interpreter.h	/^  void *getPointerToFunction(Function *F) { return (void*)F; }$/;"	f	class:llvm::Interpreter
getPointerToFunction	ExecutionEngine/JIT/JIT.cpp	/^void *JIT::getPointerToFunction(Function *F) {$/;"	f	class:JIT
getPointerToFunction	ExecutionEngine/MCJIT/MCJIT.cpp	/^void *MCJIT::getPointerToFunction(Function *F) {$/;"	f	class:MCJIT
getPointerToFunctionOrStub	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JIT::getPointerToFunctionOrStub(Function *F) {$/;"	f	class:JIT
getPointerToGVIndirectSym	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITEmitter::getPointerToGVIndirectSym(GlobalValue *V, void *Reference) {$/;"	f	class:JITEmitter
getPointerToGlobal	ExecutionEngine/ExecutionEngine.cpp	/^void *ExecutionEngine::getPointerToGlobal(const GlobalValue *GV) {$/;"	f	class:ExecutionEngine
getPointerToGlobal	ExecutionEngine/JIT/JITEmitter.cpp	/^void *JITEmitter::getPointerToGlobal(GlobalValue *V, void *Reference,$/;"	f	class:JITEmitter
getPointerToGlobalIfAvailable	ExecutionEngine/ExecutionEngine.cpp	/^void *ExecutionEngine::getPointerToGlobalIfAvailable(const GlobalValue *GV) {$/;"	f	class:ExecutionEngine
getPointerToNamedFunction	ExecutionEngine/Interpreter/Interpreter.h	/^  virtual void *getPointerToNamedFunction(const std::string &Name,$/;"	f	class:llvm::Interpreter
getPointerToNamedFunction	ExecutionEngine/JIT/JIT.cpp	/^  void *getPointerToNamedFunction(const char *Name) const {$/;"	f	class:__anon188::JitPool
getPointerToNamedFunction	ExecutionEngine/JIT/JIT.cpp	/^  void *getPointerToNamedFunction(const char *Name) {$/;"	f
getPointerToNamedFunction	ExecutionEngine/JIT/JIT.cpp	/^void *JIT::getPointerToNamedFunction(const std::string &Name,$/;"	f	class:JIT
getPointerToNamedFunction	ExecutionEngine/JIT/JITMemoryManager.cpp	/^void *DefaultJITMemoryManager::getPointerToNamedFunction(const std::string &Name,$/;"	f	class:DefaultJITMemoryManager
getPointerToNamedFunction	ExecutionEngine/MCJIT/MCJIT.cpp	/^void *MCJIT::getPointerToNamedFunction(const std::string &Name,$/;"	f	class:MCJIT
getPointerToNamedFunction	ExecutionEngine/MCJIT/MCJITMemoryManager.h	/^  virtual void *getPointerToNamedFunction(const std::string &Name,$/;"	f	class:llvm::MCJITMemoryManager
getPositivePart	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::getPositivePart(const SCEV *X) const {$/;"	f	class:DependenceAnalysis
getPostIdxRegOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    uint32_t getPostIdxRegOpValue(const MachineInstr &MI, unsigned OpIdx)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getPostIdxRegOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getPostIdxRegOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getPostIndexedAddressParts	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::getPostIndexedAddressParts(SDNode *N, SDNode *Op,$/;"	f	class:ARMTargetLowering
getPostIndexedAddressParts	Target/Hexagon/HexagonISelLowering.cpp	/^bool HexagonTargetLowering::getPostIndexedAddressParts(SDNode *N, SDNode *Op,$/;"	f	class:HexagonTargetLowering
getPostIndexedAddressParts	Target/MSP430/MSP430ISelLowering.cpp	/^bool MSP430TargetLowering::getPostIndexedAddressParts(SDNode *N, SDNode *Op,$/;"	f	class:MSP430TargetLowering
getPostIndexedLoadStoreOpcode	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static unsigned getPostIndexedLoadStoreOpcode(unsigned Opc,$/;"	f	file:
getPotentialPassManagerType	VMCore/Pass.cpp	/^PassManagerType BasicBlockPass::getPotentialPassManagerType() const {$/;"	f	class:BasicBlockPass
getPotentialPassManagerType	VMCore/Pass.cpp	/^PassManagerType FunctionPass::getPotentialPassManagerType() const {$/;"	f	class:FunctionPass
getPotentialPassManagerType	VMCore/Pass.cpp	/^PassManagerType ModulePass::getPotentialPassManagerType() const {$/;"	f	class:ModulePass
getPotentialPassManagerType	VMCore/Pass.cpp	/^PassManagerType Pass::getPotentialPassManagerType() const {$/;"	f	class:Pass
getPotentialPathCount	Analysis/PathProfileInfo.cpp	/^unsigned int PathProfileInfo::getPotentialPathCount() {$/;"	f	class:PathProfileInfo
getPreIndexedAddressParts	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::getPreIndexedAddressParts(SDNode *N, SDValue &Base,$/;"	f	class:ARMTargetLowering
getPreIndexedAddressParts	Target/PowerPC/PPCISelLowering.cpp	/^bool PPCTargetLowering::getPreIndexedAddressParts(SDNode *N, SDValue &Base,$/;"	f	class:PPCTargetLowering
getPreIndexedLoadStoreOpcode	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static unsigned getPreIndexedLoadStoreOpcode(unsigned Opc,$/;"	f	file:
getPreSplitReg	CodeGen/VirtRegMap.h	/^    unsigned getPreSplitReg(unsigned virtReg) const {$/;"	f	class:llvm::VirtRegMap
getPreStartForSignExtend	Analysis/ScalarEvolution.cpp	/^static const SCEV *getPreStartForSignExtend(const SCEVAddRecExpr *AR,$/;"	f	file:
getPred	CodeGen/ScheduleDAGInstrs.cpp	/^  SUnit::const_pred_iterator getPred() const { return DFSStack.back().second; }$/;"	f	class:__anon110::SchedDAGReverseDFS
getPredEnd	CodeGen/ScheduleDAGInstrs.cpp	/^  SUnit::const_pred_iterator getPredEnd() const {$/;"	f	class:__anon110::SchedDAGReverseDFS
getPredecessorWithUniqueSuccessorForBB	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getPredecessorWithUniqueSuccessorForBB(BasicBlock *BB) {$/;"	f	class:ScalarEvolution
getPredicate	Target/ARM/ARMBaseInstrInfo.h	/^  ARMCC::CondCodes getPredicate(const MachineInstr *MI) const {$/;"	f	class:llvm::ARMBaseInstrInfo
getPredicate	VMCore/Constants.cpp	/^unsigned ConstantExpr::getPredicate() const {$/;"	f	class:ConstantExpr
getPredicateForSetCC	Target/PowerPC/PPCISelDAGToDAG.cpp	/^static PPC::Predicate getPredicateForSetCC(ISD::CondCode CC) {$/;"	f	file:
getPredicateOnEdge	Analysis/LazyValueInfo.cpp	/^LazyValueInfo::getPredicateOnEdge(unsigned Pred, Value *V, Constant *C,$/;"	f	class:LazyValueInfo
getPredicateText	VMCore/AsmWriter.cpp	/^static const char *getPredicateText(unsigned predicate) {$/;"	f	file:
getPrefTypeAlignment	VMCore/DataLayout.cpp	/^unsigned DataLayout::getPrefTypeAlignment(Type *Ty) const {$/;"	f	class:DataLayout
getPreferredAlignment	VMCore/DataLayout.cpp	/^unsigned DataLayout::getPreferredAlignment(const GlobalVariable *GV) const {$/;"	f	class:DataLayout
getPreferredAlignmentLog	VMCore/DataLayout.cpp	/^unsigned DataLayout::getPreferredAlignmentLog(const GlobalVariable *GV) const {$/;"	f	class:DataLayout
getPreferredTypeAlignmentShift	VMCore/DataLayout.cpp	/^unsigned DataLayout::getPreferredTypeAlignmentShift(Type *Ty) const {$/;"	f	class:DataLayout
getPrimitiveSizeInBits	VMCore/Type.cpp	/^unsigned Type::getPrimitiveSizeInBits() const {$/;"	f	class:Type
getPrimitiveType	VMCore/Type.cpp	/^Type *Type::getPrimitiveType(LLVMContext &C, TypeID IDNumber) {$/;"	f	class:Type
getPriority	CodeGen/RegAllocBasic.cpp	/^  virtual float getPriority(LiveInterval *LI) { return LI->weight; }$/;"	f	class:__anon122::RABasic
getPristineRegs	CodeGen/MachineFunction.cpp	/^MachineFrameInfo::getPristineRegs(const MachineBasicBlock *MBB) const {$/;"	f	class:MachineFrameInfo
getProcIFlags	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  ARM_PROC::IFlags getProcIFlags() const {$/;"	f	class:__anon261::ARMOperand
getPromotedType	Transforms/InstCombine/InstCombineCalls.cpp	/^static Type *getPromotedType(Type *Ty) {$/;"	f	file:
getPrototype	Target/NVPTX/NVPTXISelLowering.cpp	/^std::string NVPTXTargetLowering::getPrototype(Type *retTy,$/;"	f	class:NVPTXTargetLowering
getPseudoCMOVOpc	Target/X86/X86ISelLowering.cpp	/^static unsigned getPseudoCMOVOpc(EVT VT) {$/;"	f	file:
getPtrBottomUpState	Transforms/Scalar/ObjCARC.cpp	/^    PtrState &getPtrBottomUpState(const Value *Arg) {$/;"	f	class:__anon507::BBState
getPtrToInt	VMCore/Constants.cpp	/^Constant *ConstantExpr::getPtrToInt(Constant *C, Type *DstTy) {$/;"	f	class:ConstantExpr
getPtrTopDownState	Transforms/Scalar/ObjCARC.cpp	/^    PtrState &getPtrTopDownState(const Value *Arg) {$/;"	f	class:__anon507::BBState
getRA	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned getRA(uint32_t insn) {$/;"	f	file:
getRAIndex	Target/MSP430/MSP430MachineFunctionInfo.h	/^  int getRAIndex() const { return ReturnAddrIndex; }$/;"	f	class:llvm::MSP430MachineFunctionInfo
getRAIndex	Target/X86/X86MachineFunctionInfo.h	/^  int getRAIndex() const { return ReturnAddrIndex; }$/;"	f	class:llvm::X86MachineFunctionInfo
getRARegister	Target/Hexagon/HexagonRegisterInfo.cpp	/^unsigned HexagonRegisterInfo::getRARegister() const {$/;"	f	class:HexagonRegisterInfo
getRARegister	Target/NVPTX/NVPTXRegisterInfo.cpp	/^unsigned NVPTXRegisterInfo::getRARegister() const {$/;"	f	class:NVPTXRegisterInfo
getRAStackOffset	Target/MBlaze/MBlazeMachineFunction.h	/^  int getRAStackOffset() const { return RAStackOffset; }$/;"	f	class:llvm::MBlazeFunctionInfo
getRB	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned getRB(uint32_t insn) {$/;"	f	file:
getRC	Target/CellSPU/SPUISelDAGToDAG.cpp	/^SDValue SPUDAGToDAGISel::getRC( MVT VT ) {$/;"	f	class:SPUDAGToDAGISel
getRD	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static unsigned getRD(uint32_t insn) {$/;"	f	file:
getRS	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static int64_t getRS(uint32_t insn) {$/;"	f	file:
getRange	Analysis/LazyValueInfo.cpp	/^  static LVILatticeVal getRange(ConstantRange CR) {$/;"	f	class:__anon18::LVILatticeVal
getRangeSection	DebugInfo/DWARFContext.h	/^  virtual StringRef getRangeSection() { return RangeSection; }$/;"	f	class:llvm::DWARFContextInMemory
getRank	Transforms/Scalar/Reassociate.cpp	/^unsigned Reassociate::getRank(Value *V) {$/;"	f	class:Reassociate
getRawAllocationOrder	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::getRawAllocationOrder(const TargetRegisterClass *RC,$/;"	f	class:ARMBaseRegisterInfo
getRawDataValues	VMCore/Constants.cpp	/^StringRef ConstantDataSequential::getRawDataValues() const {$/;"	f	class:ConstantDataSequential
getReader	Target/NVPTX/NVPTXAsmPrinter.cpp	/^LineReader *NVPTXAsmPrinter::getReader(std::string filename) {$/;"	f	class:NVPTXAsmPrinter
getRealEdge	Analysis/PathNumbering.cpp	/^BallLarusEdge* BallLarusEdge::getRealEdge() {$/;"	f	class:BallLarusEdge
getRealLinkageName	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^static StringRef getRealLinkageName(StringRef LinkageName) {$/;"	f	file:
getRealLinkageName	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static StringRef getRealLinkageName(StringRef LinkageName) {$/;"	f	file:
getRealLinkageName	Transforms/IPO/StripSymbols.cpp	/^static StringRef getRealLinkageName(StringRef LinkageName) {$/;"	f	file:
getRealVLDOpcode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static unsigned getRealVLDOpcode(unsigned Opc, unsigned &Spacing) {$/;"	f	file:
getRealVSTOpcode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static unsigned getRealVSTOpcode(unsigned Opc, unsigned &Spacing) {$/;"	f	file:
getRecentPositive	CodeGen/SpillPlacement.h	/^  ArrayRef<unsigned> getRecentPositive() { return RecentPositive; }$/;"	f	class:llvm::SpillPlacement
getReductionVars	Transforms/Vectorize/LoopVectorize.cpp	/^  ReductionList *getReductionVars() { return &Reductions; }$/;"	f	class:__anon605::LoopVectorizationLegality
getReference	DebugInfo/DWARFFormValue.cpp	/^uint64_t DWARFFormValue::getReference(const DWARFCompileUnit *cu) const {$/;"	f	class:DWARFFormValue
getReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  unsigned getReg() const {$/;"	f	class:__anon261::ARMOperand
getReg	Target/Hexagon/HexagonHardwareLoops.cpp	/^    unsigned getReg() const {$/;"	f	class:__anon408::CountValue
getReg	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  unsigned getReg() const {$/;"	f	struct:__anon446::MBlazeOperand
getReg	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  unsigned getReg() const {$/;"	f	class:__anon423::MipsOperand
getReg	Target/Mips/AsmParser/MipsAsmParser.cpp	/^unsigned MipsAsmParser::getReg(int RC,int RegNo) {$/;"	f	class:MipsAsmParser
getReg	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static unsigned getReg(const void *D, unsigned RC, unsigned RegNo) {$/;"	f	file:
getReg	Target/PowerPC/PPCCTRLoops.cpp	/^    unsigned getReg() const {$/;"	f	class:__anon325::CountValue
getReg	Target/X86/AsmParser/X86AsmParser.cpp	/^  unsigned getReg() const {$/;"	f	struct:__anon336::X86Operand
getRegAllocPref	CodeGen/VirtRegMap.cpp	/^unsigned VirtRegMap::getRegAllocPref(unsigned virtReg) {$/;"	f	class:VirtRegMap
getRegClass	Target/TargetInstrInfo.cpp	/^TargetInstrInfo::getRegClass(const MCInstrDesc &MCID, unsigned OpNum,$/;"	f	class:TargetInstrInfo
getRegClassConstraint	CodeGen/MachineInstr.cpp	/^MachineInstr::getRegClassConstraint(unsigned OpIdx,$/;"	f	class:MachineInstr
getRegClassFor	Target/ARM/ARMISelLowering.cpp	/^const TargetRegisterClass *ARMTargetLowering::getRegClassFor(EVT VT) const {$/;"	f	class:ARMTargetLowering
getRegClassPressureSets	Target/Hexagon/HexagonRegisterInfo.cpp	/^HexagonRegisterInfo::getRegClassPressureSets(const TargetRegisterClass *RC)$/;"	f	class:HexagonRegisterInfo
getRegClassWeight	Target/Hexagon/HexagonRegisterInfo.cpp	/^HexagonRegisterInfo::getRegClassWeight(const TargetRegisterClass *RC) const {$/;"	f	class:HexagonRegisterInfo
getRegColor	CodeGen/StrongPHIElimination.cpp	/^unsigned StrongPHIElimination::getRegColor(unsigned Reg) {$/;"	f	class:StrongPHIElimination
getRegForGEPIndex	CodeGen/SelectionDAG/FastISel.cpp	/^std::pair<unsigned, bool> FastISel::getRegForGEPIndex(const Value *Idx) {$/;"	f	class:FastISel
getRegForInlineAsmConstraint	CodeGen/SelectionDAG/TargetLowering.cpp	/^getRegForInlineAsmConstraint(const std::string &Constraint,$/;"	f	class:TargetLowering
getRegForInlineAsmConstraint	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::getRegForInlineAsmConstraint(const std::string &Constraint,$/;"	f	class:ARMTargetLowering
getRegForInlineAsmConstraint	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::getRegForInlineAsmConstraint(const std::string &Constraint,$/;"	f	class:SPUTargetLowering
getRegForInlineAsmConstraint	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::getRegForInlineAsmConstraint(const$/;"	f	class:HexagonTargetLowering
getRegForInlineAsmConstraint	Target/MBlaze/MBlazeISelLowering.cpp	/^getRegForInlineAsmConstraint(const std::string &Constraint, EVT VT) const {$/;"	f	class:MBlazeTargetLowering
getRegForInlineAsmConstraint	Target/MSP430/MSP430ISelLowering.cpp	/^getRegForInlineAsmConstraint(const std::string &Constraint,$/;"	f	class:MSP430TargetLowering
getRegForInlineAsmConstraint	Target/Mips/MipsISelLowering.cpp	/^getRegForInlineAsmConstraint(const std::string &Constraint, EVT VT) const$/;"	f	class:MipsTargetLowering
getRegForInlineAsmConstraint	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::getRegForInlineAsmConstraint(const std::string &Constraint,$/;"	f	class:NVPTXTargetLowering
getRegForInlineAsmConstraint	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::getRegForInlineAsmConstraint(const std::string &Constraint,$/;"	f	class:PPCTargetLowering
getRegForInlineAsmConstraint	Target/Sparc/SparcISelLowering.cpp	/^SparcTargetLowering::getRegForInlineAsmConstraint(const std::string &Constraint,$/;"	f	class:SparcTargetLowering
getRegForInlineAsmConstraint	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::getRegForInlineAsmConstraint(const std::string &Constraint,$/;"	f	class:X86TargetLowering
getRegForInlineAsmConstraint	Target/XCore/XCoreISelLowering.cpp	/^getRegForInlineAsmConstraint(const std::string &Constraint,$/;"	f	class:XCoreTargetLowering
getRegForValue	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::getRegForValue(const Value *V) {$/;"	f	class:FastISel
getRegInfo	CodeGen/MachineInstr.cpp	/^MachineRegisterInfo *MachineInstr::getRegInfo() {$/;"	f	class:MachineInstr
getRegInfo	CodeGen/VirtRegMap.h	/^    MachineRegisterInfo &getRegInfo() const { return *MRI; }$/;"	f	class:llvm::VirtRegMap
getRegInfo	Target/Mips/Disassembler/MipsDisassembler.cpp	/^  const MCRegisterInfo *getRegInfo() const { return RegInfo; }$/;"	f	class:__anon433::MipsDisassemblerBase
getRegList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  const SmallVectorImpl<unsigned> &getRegList() const {$/;"	f	class:__anon261::ARMOperand
getRegName	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^StringRef HexagonInstPrinter::getRegName(unsigned RegNo) const {$/;"	f	class:HexagonInstPrinter
getRegPressureLimit	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::getRegPressureLimit(const TargetRegisterClass *RC,$/;"	f	class:ARMBaseRegisterInfo
getRegPressureLimit	Target/CellSPU/SPURegisterInfo.h	/^    virtual unsigned getRegPressureLimit( const TargetRegisterClass *RC,$/;"	f	class:llvm::SPURegisterInfo
getRegPressureLimit	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::getRegPressureLimit(const TargetRegisterClass *RC,$/;"	f	class:PPCRegisterInfo
getRegPressureLimit	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getRegPressureLimit(const TargetRegisterClass *RC,$/;"	f	class:X86RegisterInfo
getRegPressureSetLimit	Target/Hexagon/HexagonRegisterInfo.cpp	/^unsigned HexagonRegisterInfo::getRegPressureSetLimit(unsigned Idx) const {$/;"	f	class:HexagonRegisterInfo
getRegPressureSetName	Target/Hexagon/HexagonRegisterInfo.cpp	/^const char *HexagonRegisterInfo::getRegPressureSetName(unsigned Idx) const {$/;"	f	class:HexagonRegisterInfo
getRegSaveFrameIndex	Target/X86/X86MachineFunctionInfo.h	/^  int getRegSaveFrameIndex() const { return RegSaveFrameIndex; }$/;"	f	class:llvm::X86MachineFunctionInfo
getRegUnitLI	CodeGen/LiveIntervalAnalysis.cpp	/^  LiveInterval *getRegUnitLI(unsigned Unit) {$/;"	f	class:LiveIntervals::HMEditor
getRegionFor	Analysis/RegionInfo.cpp	/^Region *RegionInfo::getRegionFor(BasicBlock *BB) const {$/;"	f	class:RegionInfo
getRegister	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getRegister(unsigned RegNo, EVT VT) {$/;"	f	class:SelectionDAG
getRegisterClassIDAndCost	CodeGen/MachineLICM.cpp	/^MachineLICM::getRegisterClassIDAndCost(const MachineInstr *MI,$/;"	f	class:MachineLICM
getRegisterInfo	Target/ARM/ARMInstrInfo.h	/^  const ARMRegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::ARMInstrInfo
getRegisterInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMBaseRegisterInfo *getRegisterInfo() const {$/;"	f	class:llvm::ThumbTargetMachine
getRegisterInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMRegisterInfo  *getRegisterInfo() const {$/;"	f	class:llvm::ARMTargetMachine
getRegisterInfo	Target/ARM/Thumb1InstrInfo.h	/^  const Thumb1RegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::Thumb1InstrInfo
getRegisterInfo	Target/ARM/Thumb2InstrInfo.h	/^  const Thumb2RegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::Thumb2InstrInfo
getRegisterInfo	Target/CellSPU/SPUInstrInfo.h	/^    virtual const SPURegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::SPUInstrInfo
getRegisterInfo	Target/CellSPU/SPUTargetMachine.h	/^  virtual const SPURegisterInfo *getRegisterInfo() const {$/;"	f	class:llvm::SPUTargetMachine
getRegisterInfo	Target/Hexagon/HexagonInstrInfo.h	/^  virtual const HexagonRegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::HexagonInstrInfo
getRegisterInfo	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const HexagonRegisterInfo *getRegisterInfo() const {$/;"	f	class:llvm::HexagonTargetMachine
getRegisterInfo	Target/MBlaze/MBlazeInstrInfo.h	/^  virtual const MBlazeRegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::MBlazeInstrInfo
getRegisterInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const MBlazeRegisterInfo *getRegisterInfo() const$/;"	f	class:llvm::MBlazeTargetMachine
getRegisterInfo	Target/MSP430/MSP430InstrInfo.h	/^  virtual const TargetRegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::MSP430InstrInfo
getRegisterInfo	Target/MSP430/MSP430TargetMachine.h	/^  virtual const TargetRegisterInfo *getRegisterInfo() const {$/;"	f	class:llvm::MSP430TargetMachine
getRegisterInfo	Target/Mips/Mips16InstrInfo.cpp	/^const MipsRegisterInfo &Mips16InstrInfo::getRegisterInfo() const {$/;"	f	class:Mips16InstrInfo
getRegisterInfo	Target/Mips/MipsSEInstrInfo.cpp	/^const MipsRegisterInfo &MipsSEInstrInfo::getRegisterInfo() const {$/;"	f	class:MipsSEInstrInfo
getRegisterInfo	Target/Mips/MipsTargetMachine.h	/^  virtual const MipsRegisterInfo *getRegisterInfo()  const {$/;"	f	class:llvm::MipsTargetMachine
getRegisterInfo	Target/NVPTX/NVPTXInstrInfo.h	/^  virtual const NVPTXRegisterInfo &getRegisterInfo() const { return RegInfo; }$/;"	f	class:llvm::NVPTXInstrInfo
getRegisterInfo	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual const NVPTXRegisterInfo *getRegisterInfo() const {$/;"	f	class:llvm::NVPTXTargetMachine
getRegisterInfo	Target/PowerPC/PPCInstrInfo.h	/^  virtual const PPCRegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::PPCInstrInfo
getRegisterInfo	Target/PowerPC/PPCTargetMachine.h	/^  virtual const PPCRegisterInfo   *getRegisterInfo() const {$/;"	f	class:llvm::PPCTargetMachine
getRegisterInfo	Target/Sparc/SparcInstrInfo.h	/^  virtual const SparcRegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::SparcInstrInfo
getRegisterInfo	Target/Sparc/SparcTargetMachine.h	/^  virtual const SparcRegisterInfo *getRegisterInfo() const {$/;"	f	class:llvm::SparcTargetMachine
getRegisterInfo	Target/X86/X86InstrInfo.h	/^  virtual const X86RegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::X86InstrInfo
getRegisterInfo	Target/X86/X86TargetMachine.h	/^  virtual const X86RegisterInfo  *getRegisterInfo() const {$/;"	f	class:llvm::X86TargetMachine
getRegisterInfo	Target/XCore/XCoreInstrInfo.h	/^  virtual const TargetRegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::XCoreInstrInfo
getRegisterInfo	Target/XCore/XCoreTargetMachine.h	/^  virtual const TargetRegisterInfo *getRegisterInfo() const {$/;"	f	class:llvm::XCoreTargetMachine
getRegisterListOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getRegisterListOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getRegisterListOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getRegisterListOpValue(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getRegisterMask	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getRegisterMask(const uint32_t *RegMask) {$/;"	f	class:SelectionDAG
getRegisterNumbering	Target/CellSPU/SPURegisterInfo.cpp	/^unsigned SPURegisterInfo::getRegisterNumbering(unsigned RegEnum) {$/;"	f	class:SPURegisterInfo
getRegisterPairEven	Target/ARM/ARMBaseRegisterInfo.cpp	/^unsigned ARMBaseRegisterInfo::getRegisterPairEven(unsigned Reg,$/;"	f	class:ARMBaseRegisterInfo
getRegisterPairOdd	Target/ARM/ARMBaseRegisterInfo.cpp	/^unsigned ARMBaseRegisterInfo::getRegisterPairOdd(unsigned Reg,$/;"	f	class:ARMBaseRegisterInfo
getRegsAvailable	CodeGen/RegisterScavenging.cpp	/^BitVector RegScavenger::getRegsAvailable(const TargetRegisterClass *RC) {$/;"	f	class:RegScavenger
getRegsUsed	CodeGen/RegisterScavenging.cpp	/^void RegScavenger::getRegsUsed(BitVector &used, bool includeReserved) {$/;"	f	class:RegScavenger
getRegsUsedByPHIs	CodeGen/TailDuplication.cpp	/^static void getRegsUsedByPHIs(const MachineBasicBlock &BB,$/;"	f	file:
getRelaxedOpcode	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^static unsigned getRelaxedOpcode(unsigned Op) {$/;"	f	file:
getRelaxedOpcode	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^static unsigned getRelaxedOpcode(unsigned Op) {$/;"	f	namespace:__anon455
getRelaxedOpcode	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^static unsigned getRelaxedOpcode(unsigned Op) {$/;"	f	file:
getRelaxedOpcodeArith	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^static unsigned getRelaxedOpcodeArith(unsigned Op) {$/;"	f	file:
getRelaxedOpcodeBranch	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^static unsigned getRelaxedOpcodeBranch(unsigned Op) {$/;"	f	file:
getReleaseCallee	Transforms/Scalar/ObjCARC.cpp	/^Constant *ObjCARCOpt::getReleaseCallee(Module *M) {$/;"	f	class:ObjCARCOpt
getRelevantLoop	Analysis/ScalarEvolutionExpander.cpp	/^const Loop *SCEVExpander::getRelevantLoop(const SCEV *S) {$/;"	f	class:SCEVExpander
getRelocType	Target/X86/MCTargetDesc/X86WinCOFFObjectWriter.cpp	/^unsigned X86WinCOFFObjectWriter::getRelocType(unsigned FixupKind) const {$/;"	f	class:X86WinCOFFObjectWriter
getRelocation	Object/MachOObjectFile.cpp	/^getRelocation(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getRelocation	Target/Mips/MipsCodeEmitter.cpp	/^unsigned MipsCodeEmitter::getRelocation(const MachineInstr &MI,$/;"	f	class:MipsCodeEmitter
getRelocationAdditionalInfo	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getRelocationAdditionalInfo(DataRefImpl Rel,$/;"	f	class:COFFObjectFile
getRelocationAdditionalInfo	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getRelocationAdditionalInfo(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getRelocationAddress	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getRelocationAddress(DataRefImpl Rel,$/;"	f	class:COFFObjectFile
getRelocationAddress	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getRelocationAddress(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getRelocationHidden	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getRelocationHidden(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getRelocationInfo	CodeGen/MachineFunction.cpp	/^unsigned MachineConstantPoolEntry::getRelocationInfo() const {$/;"	f	class:MachineConstantPoolEntry
getRelocationInfo	Target/ARM/ARMConstantPoolValue.h	/^  virtual unsigned getRelocationInfo() const { return 2; }$/;"	f	class:llvm::ARMConstantPoolValue
getRelocationInfo	VMCore/Constants.cpp	/^Constant::PossibleRelocationsTy Constant::getRelocationInfo() const {$/;"	f	class:Constant
getRelocationModel	Target/TargetMachine.cpp	/^Reloc::Model TargetMachine::getRelocationModel() const {$/;"	f	class:TargetMachine
getRelocationNext	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getRelocationNext(DataRefImpl Rel,$/;"	f	class:COFFObjectFile
getRelocationNext	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getRelocationNext(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getRelocationOffset	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getRelocationOffset(DataRefImpl Rel,$/;"	f	class:COFFObjectFile
getRelocationOffset	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getRelocationOffset(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getRelocationSymbol	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getRelocationSymbol(DataRefImpl Rel,$/;"	f	class:COFFObjectFile
getRelocationSymbol	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getRelocationSymbol(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getRelocationTySize	Target/ARM/ARMELFWriterInfo.cpp	/^unsigned ARMELFWriterInfo::getRelocationTySize(unsigned RelTy) const {$/;"	f	class:ARMELFWriterInfo
getRelocationTySize	Target/MBlaze/MBlazeELFWriterInfo.cpp	/^unsigned MBlazeELFWriterInfo::getRelocationTySize(unsigned RelTy) const {$/;"	f	class:MBlazeELFWriterInfo
getRelocationTySize	Target/Mips/MipsELFWriterInfo.cpp	/^unsigned MipsELFWriterInfo::getRelocationTySize(unsigned RelTy) const {$/;"	f	class:MipsELFWriterInfo
getRelocationTySize	Target/X86/X86ELFWriterInfo.cpp	/^unsigned X86ELFWriterInfo::getRelocationTySize(unsigned RelTy) const {$/;"	f	class:X86ELFWriterInfo
getRelocationType	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getRelocationType(DataRefImpl Rel,$/;"	f	class:COFFObjectFile
getRelocationType	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getRelocationType(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getRelocationType	Target/ARM/ARMELFWriterInfo.cpp	/^unsigned ARMELFWriterInfo::getRelocationType(unsigned MachineRelTy) const {$/;"	f	class:ARMELFWriterInfo
getRelocationType	Target/MBlaze/MBlazeELFWriterInfo.cpp	/^unsigned MBlazeELFWriterInfo::getRelocationType(unsigned MachineRelTy) const {$/;"	f	class:MBlazeELFWriterInfo
getRelocationType	Target/Mips/MipsELFWriterInfo.cpp	/^unsigned MipsELFWriterInfo::getRelocationType(unsigned MachineRelTy) const {$/;"	f	class:MipsELFWriterInfo
getRelocationType	Target/X86/X86ELFWriterInfo.cpp	/^unsigned X86ELFWriterInfo::getRelocationType(unsigned MachineRelTy) const {$/;"	f	class:X86ELFWriterInfo
getRelocationTypeName	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getRelocationTypeName(DataRefImpl Rel,$/;"	f	class:COFFObjectFile
getRelocationTypeName	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getRelocationTypeName(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getRelocationValueString	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getRelocationValueString(DataRefImpl Rel,$/;"	f	class:COFFObjectFile
getRelocationValueString	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getRelocationValueString(DataRefImpl Rel,$/;"	f	class:llvm::object::MachOObjectFile
getReplacement	Target/MBlaze/MBlazeMachineFunction.h	/^  int getReplacement(int OFI) const {$/;"	f	class:llvm::MBlazeFunctionInfo
getReplacementExpr	Analysis/IVUsers.cpp	/^const SCEV *IVUsers::getReplacementExpr(const IVStrideUse &IU) const {$/;"	f	class:IVUsers
getReplacementInput	Transforms/Vectorize/BBVectorize.cpp	/^  Value *BBVectorize::getReplacementInput(LLVMContext& Context, Instruction *I,$/;"	f	class:__anon604::BBVectorize
getReplacementInputsForPair	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::getReplacementInputsForPair(LLVMContext& Context,$/;"	f	class:__anon604::BBVectorize
getReplacementName	Transforms/Vectorize/BBVectorize.cpp	/^  std::string getReplacementName(Instruction *I, bool IsInput, unsigned o,$/;"	f	namespace:__anon604
getReplacementPointerInput	Transforms/Vectorize/BBVectorize.cpp	/^  Value *BBVectorize::getReplacementPointerInput(LLVMContext& Context,$/;"	f	class:__anon604::BBVectorize
getReplacementShuffleMask	Transforms/Vectorize/BBVectorize.cpp	/^  Value *BBVectorize::getReplacementShuffleMask(LLVMContext& Context,$/;"	f	class:__anon604::BBVectorize
getReqNTIDx	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::getReqNTIDx(const Function &F, unsigned &x) {$/;"	f	class:llvm
getReqNTIDy	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::getReqNTIDy(const Function &F, unsigned &y) {$/;"	f	class:llvm
getReqNTIDz	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::getReqNTIDz(const Function &F, unsigned &z) {$/;"	f	class:llvm
getResNo	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  unsigned getResNo() { assert (kind==SDNODE); return u.s.ResNo; }$/;"	f	class:llvm::SDDbgValue
getReservedRegs	Target/ARM/ARMBaseRegisterInfo.cpp	/^getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
getReservedRegs	Target/CellSPU/SPURegisterInfo.cpp	/^BitVector SPURegisterInfo::getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:SPURegisterInfo
getReservedRegs	Target/Hexagon/HexagonRegisterInfo.cpp	/^BitVector HexagonRegisterInfo::getReservedRegs(const MachineFunction &MF)$/;"	f	class:HexagonRegisterInfo
getReservedRegs	Target/MBlaze/MBlazeRegisterInfo.cpp	/^getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:MBlazeRegisterInfo
getReservedRegs	Target/MSP430/MSP430RegisterInfo.cpp	/^BitVector MSP430RegisterInfo::getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:MSP430RegisterInfo
getReservedRegs	Target/Mips/MipsRegisterInfo.cpp	/^getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:MipsRegisterInfo
getReservedRegs	Target/NVPTX/NVPTXRegisterInfo.cpp	/^BitVector NVPTXRegisterInfo::getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:NVPTXRegisterInfo
getReservedRegs	Target/PowerPC/PPCRegisterInfo.cpp	/^BitVector PPCRegisterInfo::getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:PPCRegisterInfo
getReservedRegs	Target/Sparc/SparcRegisterInfo.cpp	/^BitVector SparcRegisterInfo::getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:SparcRegisterInfo
getReservedRegs	Target/X86/X86RegisterInfo.cpp	/^BitVector X86RegisterInfo::getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:X86RegisterInfo
getReservedRegs	Target/XCore/XCoreRegisterInfo.cpp	/^BitVector XCoreRegisterInfo::getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:XCoreRegisterInfo
getResolverFromStub	ExecutionEngine/JIT/JITEmitter.cpp	/^    JITResolver *getResolverFromStub(void *Stub) const {$/;"	f	class:__anon182::StubToResolverMapTy
getResourceDepth	CodeGen/MachineTraceMetrics.cpp	/^unsigned MachineTraceMetrics::Trace::getResourceDepth(bool Bottom) const {$/;"	f	class:MachineTraceMetrics::Trace
getResourceLength	CodeGen/MachineTraceMetrics.cpp	/^getResourceLength(ArrayRef<const MachineBasicBlock*> Extrablocks) const {$/;"	f	class:MachineTraceMetrics::Trace
getResources	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::getResources(const MachineBasicBlock *MBB) {$/;"	f	class:MachineTraceMetrics
getRetainAutoreleaseCallee	Transforms/Scalar/ObjCARC.cpp	/^Constant *ObjCARCContract::getRetainAutoreleaseCallee(Module *M) {$/;"	f	class:ObjCARCContract
getRetainAutoreleaseRVCallee	Transforms/Scalar/ObjCARC.cpp	/^Constant *ObjCARCContract::getRetainAutoreleaseRVCallee(Module *M) {$/;"	f	class:ObjCARCContract
getRetainBlockCallee	Transforms/Scalar/ObjCARC.cpp	/^Constant *ObjCARCOpt::getRetainBlockCallee(Module *M) {$/;"	f	class:ObjCARCOpt
getRetainCallee	Transforms/Scalar/ObjCARC.cpp	/^Constant *ObjCARCOpt::getRetainCallee(Module *M) {$/;"	f	class:ObjCARCOpt
getRetainRVCallee	Transforms/Scalar/ObjCARC.cpp	/^Constant *ObjCARCOpt::getRetainRVCallee(Module *M) {$/;"	f	class:ObjCARCOpt
getRetainedTypes	VMCore/DebugInfo.cpp	/^DIArray DICompileUnit::getRetainedTypes() const {$/;"	f	class:DICompileUnit
getReturnAddrFrameIndex	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::getReturnAddrFrameIndex(SelectionDAG & DAG) const {$/;"	f	class:PPCTargetLowering
getReturnAddrSaveIndex	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int getReturnAddrSaveIndex() const { return ReturnAddrSaveIndex; }$/;"	f	class:llvm::PPCFunctionInfo
getReturnAddressFrameIndex	Target/MSP430/MSP430ISelLowering.cpp	/^MSP430TargetLowering::getReturnAddressFrameIndex(SelectionDAG &DAG) const {$/;"	f	class:MSP430TargetLowering
getReturnAddressFrameIndex	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::getReturnAddressFrameIndex(SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
getReturnBlock	Transforms/Instrumentation/GCOVProfiling.cpp	/^    GCOVBlock &getReturnBlock() {$/;"	f	class:__anon490::GCOVFunction
getReturnSaveOffset	Target/PowerPC/PPCFrameLowering.h	/^  static unsigned getReturnSaveOffset(bool isPPC64, bool isDarwinABI) {$/;"	f	class:llvm::PPCFrameLowering
getReturnType	VMCore/Function.cpp	/^Type *Function::getReturnType() const {$/;"	f	class:Function
getRightSibling	Support/IntervalMap.cpp	/^NodeRef Path::getRightSibling(unsigned Level) const {$/;"	f	class:llvm::IntervalMapImpl::Path
getRoot	Analysis/IPA/CallGraph.cpp	/^  CallGraphNode *getRoot()             { return Root; }$/;"	f	class:__anon2::BasicCallGraph
getRoot	Analysis/IPA/CallGraph.cpp	/^  const CallGraphNode *getRoot() const { return Root; }$/;"	f	class:__anon2::BasicCallGraph
getRoot	Analysis/PathNumbering.cpp	/^BallLarusNode* BallLarusDag::getRoot() {$/;"	f	class:BallLarusDag
getRoot	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SDValue SelectionDAGBuilder::getRoot() {$/;"	f	class:SelectionDAGBuilder
getSCEV	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getSCEV(Value *V) {$/;"	f	class:ScalarEvolution
getSCEVAtScope	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getSCEVAtScope(Value *V, const Loop *L) {$/;"	f	class:ScalarEvolution
getSCEVAtScope	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getSCEVAtScope(const SCEV *V, const Loop *L) {$/;"	f	class:ScalarEvolution
getSDNode	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  SDNode *getSDNode() { assert (kind==SDNODE); return u.s.Node; }$/;"	f	class:llvm::SDDbgValue
getSDNodeOrder	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    unsigned getSDNodeOrder() { return SDNodeOrder; }$/;"	f	class:llvm::SelectionDAGBuilder::DanglingDebugInfo
getSDNodeOrder	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  unsigned getSDNodeOrder() const { return SDNodeOrder; }$/;"	f	class:llvm::SelectionDAGBuilder
getSDiv	VMCore/Constants.cpp	/^Constant *ConstantExpr::getSDiv(Constant *C1, Constant *C2, bool isExact) {$/;"	f	class:ConstantExpr
getSEHRegNum	MC/MCRegisterInfo.cpp	/^int MCRegisterInfo::getSEHRegNum(unsigned RegNum) const {$/;"	f	class:MCRegisterInfo
getSEHRegNum	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getSEHRegNum(unsigned i) const {$/;"	f	class:X86RegisterInfo
getSETFromCond	Target/X86/X86InstrInfo.cpp	/^static unsigned getSETFromCond(X86::CondCode CC,$/;"	f	file:
getSExt	VMCore/Constants.cpp	/^Constant *ConstantExpr::getSExt(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getSExtOrBitCast	VMCore/Constants.cpp	/^Constant *ConstantExpr::getSExtOrBitCast(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getSExtOrTrunc	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getSExtOrTrunc(SDValue Op, DebugLoc DL, EVT VT) {$/;"	f	class:SelectionDAG
getSHT	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static int64_t getSHT(uint32_t insn) {$/;"	f	file:
getSINTTOFP	CodeGen/SelectionDAG/TargetLowering.cpp	/^RTLIB::Libcall RTLIB::getSINTTOFP(EVT OpVT, EVT RetVT) {$/;"	f	class:RTLIB
getSIToFP	VMCore/Constants.cpp	/^Constant *ConstantExpr::getSIToFP(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getSLEB128	Support/DataExtractor.cpp	/^int64_t DataExtractor::getSLEB128(uint32_t *offset_ptr) const {$/;"	f	class:DataExtractor
getSLEB128Size	MC/MCAsmInfo.cpp	/^unsigned MCAsmInfo::getSLEB128Size(int Value) {$/;"	f	class:MCAsmInfo
getSMaxExpr	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getSMaxExpr(SmallVectorImpl<const SCEV *> &Ops) {$/;"	f	class:ScalarEvolution
getSMaxExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getSMaxExpr(const SCEV *LHS,$/;"	f	class:ScalarEvolution
getSMinExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getSMinExpr(const SCEV *LHS,$/;"	f	class:ScalarEvolution
getSOImmOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getSOImmOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getSOImmOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  unsigned getSOImmOpValue(const MCInst &MI, unsigned Op,$/;"	f	class:__anon283::ARMMCCodeEmitter
getSOImmTwoPartFirst	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getSOImmTwoPartFirst(unsigned V) {$/;"	f	namespace:llvm::ARM_AM
getSOImmTwoPartSecond	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getSOImmTwoPartSecond(unsigned V) {$/;"	f	namespace:llvm::ARM_AM
getSOImmVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline int getSOImmVal(unsigned Arg) {$/;"	f	namespace:llvm::ARM_AM
getSOImmValImm	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getSOImmValImm(unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
getSOImmValRot	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getSOImmValRot(unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
getSOImmValRotate	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getSOImmValRotate(unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
getSORegImmOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getSORegImmOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getSORegImmOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getSORegImmOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getSORegOffset	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getSORegOffset(unsigned Op) {$/;"	f	namespace:llvm::ARM_AM
getSORegOpc	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getSORegOpc(ShiftOpc ShOp, unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
getSORegRegOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getSORegRegOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getSORegRegOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getSORegRegOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getSORegShOp	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline ShiftOpc getSORegShOp(unsigned Op) {$/;"	f	namespace:llvm::ARM_AM
getSPUTargetMachine	Target/CellSPU/SPUISelLowering.h	/^    SPUTargetMachine &getSPUTargetMachine() {$/;"	f	class:llvm::SPUTargetLowering
getSPUTargetMachine	Target/CellSPU/SPUTargetMachine.cpp	/^  SPUTargetMachine &getSPUTargetMachine() const {$/;"	f	class:__anon415::SPUPassConfig
getSRem	VMCore/Constants.cpp	/^Constant *ConstantExpr::getSRem(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getSRetArgSize	Target/Sparc/SparcISelLowering.cpp	/^SparcTargetLowering::getSRetArgSize(SelectionDAG &DAG, SDValue Callee) const$/;"	f	class:SparcTargetLowering
getSRetReturnReg	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  unsigned getSRetReturnReg() const { return SRetReturnReg; }$/;"	f	class:llvm::HexagonMachineFunctionInfo
getSRetReturnReg	Target/MBlaze/MBlazeMachineFunction.h	/^  unsigned getSRetReturnReg() const { return SRetReturnReg; }$/;"	f	class:llvm::MBlazeFunctionInfo
getSRetReturnReg	Target/Mips/MipsMachineFunction.h	/^  unsigned getSRetReturnReg() const { return SRetReturnReg; }$/;"	f	class:llvm::MipsFunctionInfo
getSRetReturnReg	Target/Sparc/SparcMachineFunctionInfo.h	/^    unsigned getSRetReturnReg() const { return SRetReturnReg; }$/;"	f	class:llvm::SparcMachineFunctionInfo
getSRetReturnReg	Target/X86/X86MachineFunctionInfo.h	/^  unsigned getSRetReturnReg() const { return SRetReturnReg; }$/;"	f	class:llvm::X86MachineFunctionInfo
getSTDIN	Support/MemoryBuffer.cpp	/^error_code MemoryBuffer::getSTDIN(OwningPtr<MemoryBuffer> &result) {$/;"	f	class:MemoryBuffer
getSTMUseCycle	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::getSTMUseCycle(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
getSTReg	Target/X86/X86FloatingPoint.cpp	/^    unsigned getSTReg(unsigned RegNo) const {$/;"	f	struct:__anon386::FPS	file:
getSUBriOpcode	Target/X86/X86FrameLowering.cpp	/^static unsigned getSUBriOpcode(unsigned is64Bit, int64_t Imm) {$/;"	f	file:
getSUBriOpcode	Target/X86/X86RegisterInfo.cpp	/^static unsigned getSUBriOpcode(unsigned is64Bit, int64_t Imm) {$/;"	f	file:
getSamplerName	Target/NVPTX/NVPTXUtilities.cpp	/^std::string llvm::getSamplerName(const llvm::Value &val) {$/;"	f	class:llvm
getScalarRegClass	Target/NVPTX/VectorElementize.cpp	/^getScalarRegClass(const TargetRegisterClass *RC) {$/;"	f	class:VectorElementize
getScalarRegisters	Target/NVPTX/VectorElementize.cpp	/^SmallVector<unsigned, 4> VectorElementize::getScalarRegisters(unsigned regnum) {$/;"	f	class:VectorElementize
getScalarSizeInBits	VMCore/Type.cpp	/^unsigned Type::getScalarSizeInBits() {$/;"	f	class:Type
getScalarTargetTransformInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::ARMTargetMachine
getScalarTargetTransformInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::ThumbTargetMachine
getScalarTargetTransformInfo	Target/CellSPU/SPUTargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::SPUTargetMachine
getScalarTargetTransformInfo	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::HexagonTargetMachine
getScalarTargetTransformInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const$/;"	f	class:llvm::MBlazeTargetMachine
getScalarTargetTransformInfo	Target/MSP430/MSP430TargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::MSP430TargetMachine
getScalarTargetTransformInfo	Target/Mips/MipsTargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::MipsTargetMachine
getScalarTargetTransformInfo	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::NVPTXTargetMachine
getScalarTargetTransformInfo	Target/PowerPC/PPCTargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::PPCTargetMachine
getScalarTargetTransformInfo	Target/Sparc/SparcTargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::SparcTargetMachine
getScalarTargetTransformInfo	Target/X86/X86TargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::X86_32TargetMachine
getScalarTargetTransformInfo	Target/X86/X86TargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::X86_64TargetMachine
getScalarTargetTransformInfo	Target/XCore/XCoreTargetMachine.h	/^  virtual const ScalarTargetTransformInfo *getScalarTargetTransformInfo()const {$/;"	f	class:llvm::XCoreTargetMachine
getScalarType	VMCore/Type.cpp	/^Type *Type::getScalarType() {$/;"	f	class:Type
getScalarVersion	Target/NVPTX/VectorElementize.cpp	/^unsigned VectorElementize::getScalarVersion(MachineInstr *mi) {$/;"	f	class:VectorElementize
getScalarVersion	Target/NVPTX/VectorElementize.cpp	/^unsigned VectorElementize::getScalarVersion(unsigned opcode) {$/;"	f	class:VectorElementize
getSchedModelForCPU	MC/MCSubtargetInfo.cpp	/^MCSubtargetInfo::getSchedModelForCPU(StringRef CPU) const {$/;"	f	class:MCSubtargetInfo
getSchedulingPreference	Target/ARM/ARMISelLowering.cpp	/^Sched::Preference ARMTargetLowering::getSchedulingPreference(SDNode *N) const {$/;"	f	class:ARMTargetLowering
getSchedulingPreference	Target/PowerPC/PPCISelLowering.cpp	/^Sched::Preference PPCTargetLowering::getSchedulingPreference(SDNode *N) const {$/;"	f	class:PPCTargetLowering
getScope	VMCore/DebugLoc.cpp	/^MDNode *DebugLoc::getScope(const LLVMContext &Ctx) const {$/;"	f	class:DebugLoc
getScopeAndInlinedAt	VMCore/DebugLoc.cpp	/^void DebugLoc::getScopeAndInlinedAt(MDNode *&Scope, MDNode *&IA,$/;"	f	class:DebugLoc
getScopeNode	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static MDNode *getScopeNode(DebugLoc DL, const LLVMContext &Ctx) {$/;"	f	file:
getScratchReg	Target/X86/X86FloatingPoint.cpp	/^    unsigned getScratchReg() {$/;"	f	struct:__anon386::FPS	file:
getSection	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSection(int32_t index,$/;"	f	class:COFFObjectFile
getSection	Object/MachOObjectFile.cpp	/^MachOObjectFile::getSection(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSection64	Object/MachOObjectFile.cpp	/^MachOObjectFile::getSection64(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSectionAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uint8_t *getSectionAddress(unsigned SectionID) {$/;"	f	class:llvm::RuntimeDyldImpl
getSectionAddress	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSectionAddress(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
getSectionAddress	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSectionAddress(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSectionAddressSize	MC/MCAssembler.cpp	/^uint64_t MCAsmLayout::getSectionAddressSize(const MCSectionData *SD) const {$/;"	f	class:MCAsmLayout
getSectionAlignment	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSectionAlignment(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
getSectionAlignment	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSectionAlignment(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSectionContents	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSectionContents(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
getSectionContents	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSectionContents(const coff_section *Sec,$/;"	f	class:COFFObjectFile
getSectionContents	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSectionContents(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSectionFileSize	MC/MCAssembler.cpp	/^uint64_t MCAsmLayout::getSectionFileSize(const MCSectionData *SD) const {$/;"	f	class:MCAsmLayout
getSectionForConstant	CodeGen/TargetLoweringObjectFileImpl.cpp	/^TargetLoweringObjectFileMachO::getSectionForConstant(SectionKind Kind) const {$/;"	f	class:TargetLoweringObjectFileMachO
getSectionForConstant	CodeGen/TargetLoweringObjectFileImpl.cpp	/^getSectionForConstant(SectionKind Kind) const {$/;"	f	class:TargetLoweringObjectFileELF
getSectionForConstant	Target/NVPTX/NVPTXTargetObjectFile.h	/^  virtual const MCSection *getSectionForConstant(SectionKind Kind) const {$/;"	f	class:llvm::NVPTXTargetObjectFile
getSectionForConstant	Target/TargetLoweringObjectFile.cpp	/^TargetLoweringObjectFile::getSectionForConstant(SectionKind Kind) const {$/;"	f	class:TargetLoweringObjectFile
getSectionIndex	Object/MachOObjectFile.cpp	/^std::size_t MachOObjectFile::getSectionIndex(DataRefImpl Sec) const {$/;"	f	class:llvm::object::MachOObjectFile
getSectionLoadAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uint64_t getSectionLoadAddress(unsigned SectionID) {$/;"	f	class:llvm::RuntimeDyldImpl
getSectionName	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSectionName(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
getSectionName	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSectionName(const coff_section *Sec,$/;"	f	class:COFFObjectFile
getSectionName	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSectionName(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSectionNext	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSectionNext(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
getSectionNext	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSectionNext(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSectionPrefixForGlobal	CodeGen/TargetLoweringObjectFileImpl.cpp	/^static const char *getSectionPrefixForGlobal(SectionKind Kind) {$/;"	f	file:
getSectionRelBegin	Object/COFFObjectFile.cpp	/^relocation_iterator COFFObjectFile::getSectionRelBegin(DataRefImpl Sec) const {$/;"	f	class:COFFObjectFile
getSectionRelBegin	Object/MachOObjectFile.cpp	/^relocation_iterator MachOObjectFile::getSectionRelBegin(DataRefImpl Sec) const {$/;"	f	class:llvm::object::MachOObjectFile
getSectionRelEnd	Object/COFFObjectFile.cpp	/^relocation_iterator COFFObjectFile::getSectionRelEnd(DataRefImpl Sec) const {$/;"	f	class:COFFObjectFile
getSectionRelEnd	Object/MachOObjectFile.cpp	/^relocation_iterator MachOObjectFile::getSectionRelEnd(DataRefImpl Sec) const {$/;"	f	class:llvm::object::MachOObjectFile
getSectionSize	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSectionSize(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
getSectionSize	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSectionSize(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSelect	VMCore/Constants.cpp	/^Constant *ConstantExpr::getSelect(Constant *C, Constant *V1, Constant *V2) {$/;"	f	class:ConstantExpr
getSelectedTLSModel	Target/TargetMachine.cpp	/^static TLSModel::Model getSelectedTLSModel(const GlobalVariable *Var) {$/;"	f	file:
getSelectionDAGInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMSelectionDAGInfo *getSelectionDAGInfo() const {$/;"	f	class:llvm::ThumbTargetMachine
getSelectionDAGInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMSelectionDAGInfo* getSelectionDAGInfo() const {$/;"	f	class:llvm::ARMTargetMachine
getSelectionDAGInfo	Target/CellSPU/SPUTargetMachine.h	/^  virtual const SPUSelectionDAGInfo* getSelectionDAGInfo() const {$/;"	f	class:llvm::SPUTargetMachine
getSelectionDAGInfo	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const HexagonSelectionDAGInfo* getSelectionDAGInfo() const {$/;"	f	class:llvm::HexagonTargetMachine
getSelectionDAGInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const MBlazeSelectionDAGInfo* getSelectionDAGInfo() const$/;"	f	class:llvm::MBlazeTargetMachine
getSelectionDAGInfo	Target/MSP430/MSP430TargetMachine.h	/^  virtual const MSP430SelectionDAGInfo* getSelectionDAGInfo() const {$/;"	f	class:llvm::MSP430TargetMachine
getSelectionDAGInfo	Target/Mips/MipsTargetMachine.h	/^  virtual const MipsSelectionDAGInfo* getSelectionDAGInfo() const {$/;"	f	class:llvm::MipsTargetMachine
getSelectionDAGInfo	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual const TargetSelectionDAGInfo *getSelectionDAGInfo() const {$/;"	f	class:llvm::NVPTXTargetMachine
getSelectionDAGInfo	Target/PowerPC/PPCTargetMachine.h	/^  virtual const PPCSelectionDAGInfo* getSelectionDAGInfo() const {$/;"	f	class:llvm::PPCTargetMachine
getSelectionDAGInfo	Target/Sparc/SparcTargetMachine.h	/^  virtual const SparcSelectionDAGInfo* getSelectionDAGInfo() const {$/;"	f	class:llvm::SparcTargetMachine
getSelectionDAGInfo	Target/X86/X86TargetMachine.h	/^  virtual const X86SelectionDAGInfo *getSelectionDAGInfo() const {$/;"	f	class:llvm::X86TargetMachine
getSelectionDAGInfo	Target/X86/X86TargetMachine.h	/^  virtual const X86SelectionDAGInfo *getSelectionDAGInfo() const {$/;"	f	class:llvm::X86_32TargetMachine
getSelectionDAGInfo	Target/X86/X86TargetMachine.h	/^  virtual const X86SelectionDAGInfo *getSelectionDAGInfo() const {$/;"	f	class:llvm::X86_64TargetMachine
getSelectionDAGInfo	Target/XCore/XCoreTargetMachine.h	/^  virtual const XCoreSelectionDAGInfo* getSelectionDAGInfo() const {$/;"	f	class:llvm::XCoreTargetMachine
getSequentialElement	VMCore/Constants.cpp	/^Constant *ConstantAggregateZero::getSequentialElement() const {$/;"	f	class:ConstantAggregateZero
getSequentialElement	VMCore/Constants.cpp	/^UndefValue *UndefValue::getSequentialElement() const {$/;"	f	class:UndefValue
getSequentialElementType	VMCore/Type.cpp	/^Type *Type::getSequentialElementType() const {$/;"	f	class:Type
getSetCCAndOperation	CodeGen/SelectionDAG/SelectionDAG.cpp	/^ISD::CondCode ISD::getSetCCAndOperation(ISD::CondCode Op1, ISD::CondCode Op2,$/;"	f	class:ISD
getSetCCInverse	CodeGen/SelectionDAG/SelectionDAG.cpp	/^ISD::CondCode ISD::getSetCCInverse(ISD::CondCode Op, bool isInteger) {$/;"	f	class:ISD
getSetCCOrOperation	CodeGen/SelectionDAG/SelectionDAG.cpp	/^ISD::CondCode ISD::getSetCCOrOperation(ISD::CondCode Op1, ISD::CondCode Op2,$/;"	f	class:ISD
getSetCCResultType	CodeGen/SelectionDAG/TargetLowering.cpp	/^EVT TargetLowering::getSetCCResultType(EVT VT) const {$/;"	f	class:TargetLowering
getSetCCResultType	Target/ARM/ARMISelLowering.cpp	/^EVT ARMTargetLowering::getSetCCResultType(EVT VT) const {$/;"	f	class:ARMTargetLowering
getSetCCResultType	Target/CellSPU/SPUISelLowering.cpp	/^EVT SPUTargetLowering::getSetCCResultType(EVT VT) const {$/;"	f	class:SPUTargetLowering
getSetCCResultType	Target/Hexagon/HexagonISelLowering.h	/^    virtual EVT getSetCCResultType(EVT VT) const {$/;"	f	class:llvm::HexagonTargetLowering
getSetCCResultType	Target/MBlaze/MBlazeISelLowering.cpp	/^EVT MBlazeTargetLowering::getSetCCResultType(EVT VT) const {$/;"	f	class:MBlazeTargetLowering
getSetCCResultType	Target/Mips/MipsISelLowering.cpp	/^EVT MipsTargetLowering::getSetCCResultType(EVT VT) const {$/;"	f	class:MipsTargetLowering
getSetCCResultType	Target/NVPTX/NVPTXISelLowering.h	/^  virtual EVT getSetCCResultType(EVT VT) const {$/;"	f	class:llvm::NVPTXTargetLowering
getSetCCResultType	Target/PowerPC/PPCISelLowering.cpp	/^EVT PPCTargetLowering::getSetCCResultType(EVT VT) const {$/;"	f	class:PPCTargetLowering
getSetCCResultType	Target/X86/X86ISelLowering.cpp	/^EVT X86TargetLowering::getSetCCResultType(EVT VT) const {$/;"	f	class:X86TargetLowering
getSetCCSwappedOperands	CodeGen/SelectionDAG/SelectionDAG.cpp	/^ISD::CondCode ISD::getSetCCSwappedOperands(ISD::CondCode Operation) {$/;"	f	class:ISD
getSetSize	Support/ConstantRange.cpp	/^APInt ConstantRange::getSetSize() const {$/;"	f	class:ConstantRange
getShiftAmountOperand	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getShiftAmountOperand(EVT LHSTy, SDValue Op) {$/;"	f	class:SelectionDAG
getShiftAmountTy	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    EVT getShiftAmountTy(EVT LHSTy) {$/;"	f	class:__anon68::DAGCombiner
getShiftAmountTy	CodeGen/SelectionDAG/TargetLowering.cpp	/^MVT TargetLowering::getShiftAmountTy(EVT LHSTy) const {$/;"	f	class:TargetLowering
getShiftAmountTy	Target/CellSPU/SPUISelLowering.h	/^    virtual MVT getShiftAmountTy(EVT LHSTy) const { return MVT::i32; }$/;"	f	class:llvm::SPUTargetLowering
getShiftAmountTy	Target/MSP430/MSP430ISelLowering.h	/^    virtual MVT getShiftAmountTy(EVT LHSTy) const { return MVT::i8; }$/;"	f	class:llvm::MSP430TargetLowering
getShiftAmountTy	Target/Mips/MipsISelLowering.h	/^    virtual MVT getShiftAmountTy(EVT LHSTy) const { return MVT::i32; }$/;"	f	class:llvm::MipsTargetLowering
getShiftAmountTy	Target/NVPTX/NVPTXISelLowering.h	/^  virtual MVT getShiftAmountTy(EVT LHSTy) const {$/;"	f	class:llvm::NVPTXTargetLowering
getShiftAmountTy	Target/PowerPC/PPCISelLowering.h	/^    virtual MVT getShiftAmountTy(EVT LHSTy) const { return MVT::i32; }$/;"	f	class:llvm::PPCTargetLowering
getShiftAmountTy	Target/X86/X86ISelLowering.h	/^    virtual MVT getShiftAmountTy(EVT LHSTy) const { return MVT::i8; }$/;"	f	class:llvm::X86TargetLowering
getShiftAmountTy	Target/XCore/XCoreISelLowering.h	/^    virtual MVT getShiftAmountTy(EVT LHSTy) const { return MVT::i32; }$/;"	f	class:llvm::XCoreTargetLowering
getShiftOp	Target/ARM/ARMCodeEmitter.cpp	/^unsigned ARMCodeEmitter::getShiftOp(unsigned Imm) const {$/;"	f	class:ARMCodeEmitter
getShiftOp	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  unsigned getShiftOp(ARM_AM::ShiftOpc ShOpc) const {$/;"	f	class:__anon283::ARMMCCodeEmitter
getShiftOpcEncoding	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getShiftOpcEncoding(ShiftOpc Op) {$/;"	f	namespace:llvm::ARM_AM
getShiftOpcForNode	Target/ARM/ARMSelectionDAGInfo.h	/^  static inline ShiftOpc getShiftOpcForNode(unsigned Opcode) {$/;"	f	namespace:llvm::ARM_AM
getShiftOpcStr	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline const char *getShiftOpcStr(ShiftOpc Op) {$/;"	f	namespace:llvm::ARM_AM
getShiftRight16Imm	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getShiftRight16Imm(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getShiftRight16Imm	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getShiftRight16Imm(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getShiftRight32Imm	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getShiftRight32Imm(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getShiftRight32Imm	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getShiftRight32Imm(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getShiftRight64Imm	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getShiftRight64Imm(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getShiftRight64Imm	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getShiftRight64Imm(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getShiftRight8Imm	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getShiftRight8Imm(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getShiftRight8Imm	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getShiftRight8Imm(const MCInst &MI, unsigned Op,$/;"	f	class:ARMMCCodeEmitter
getShl	VMCore/Constants.cpp	/^Constant *ConstantExpr::getShl(Constant *C1, Constant *C2,$/;"	f	class:ConstantExpr
getShuffleCLImmediate	Target/X86/X86ISelLowering.cpp	/^static unsigned getShuffleCLImmediate(ShuffleVectorSDNode *N) {$/;"	f	file:
getShuffleMask	VMCore/Instructions.cpp	/^void ShuffleVectorInst::getShuffleMask(Constant *Mask,$/;"	f	class:ShuffleVectorInst
getShufflePALIGNRImmediate	Target/X86/X86ISelLowering.cpp	/^static unsigned getShufflePALIGNRImmediate(ShuffleVectorSDNode *SVOp) {$/;"	f	file:
getShufflePSHUFHWImmediate	Target/X86/X86ISelLowering.cpp	/^static unsigned getShufflePSHUFHWImmediate(ShuffleVectorSDNode *N) {$/;"	f	file:
getShufflePSHUFLWImmediate	Target/X86/X86ISelLowering.cpp	/^static unsigned getShufflePSHUFLWImmediate(ShuffleVectorSDNode *N) {$/;"	f	file:
getShuffleSHUFImmediate	Target/X86/X86ISelLowering.cpp	/^static unsigned getShuffleSHUFImmediate(ShuffleVectorSDNode *N) {$/;"	f	file:
getShuffleScalarElt	Target/X86/X86ISelLowering.cpp	/^static SDValue getShuffleScalarElt(SDNode *N, unsigned Index, SelectionDAG &DAG,$/;"	f	file:
getShuffleVPERM2X128Immediate	Target/X86/X86ISelLowering.cpp	/^static unsigned getShuffleVPERM2X128Immediate(ShuffleVectorSDNode *SVOp) {$/;"	f	file:
getShuffleVector	VMCore/Constants.cpp	/^Constant *ConstantExpr::getShuffleVector(Constant *V1, Constant *V2, $/;"	f	class:ConstantExpr
getShuffleVectorZeroOrUndef	Target/X86/X86ISelLowering.cpp	/^static SDValue getShuffleVectorZeroOrUndef(SDValue V2, unsigned Idx,$/;"	f	file:
getSibling	DebugInfo/DWARFDebugInfoEntry.h	/^  DWARFDebugInfoEntryMinimal *getSibling() {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getSibling	DebugInfo/DWARFDebugInfoEntry.h	/^  const DWARFDebugInfoEntryMinimal *getSibling() const {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getSignExtendAddRecStart	Analysis/ScalarEvolution.cpp	/^static const SCEV *getSignExtendAddRecStart(const SCEVAddRecExpr *AR,$/;"	f	file:
getSignExtendExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getSignExtendExpr(const SCEV *Op,$/;"	f	class:ScalarEvolution
getSigned	DebugInfo/DWARFFormValue.h	/^  int64_t getSigned() const { return Value.sval; }$/;"	f	class:llvm::DWARFFormValue
getSigned	Support/DataExtractor.cpp	/^DataExtractor::getSigned(uint32_t *offset_ptr, uint32_t byte_size) const {$/;"	f	class:DataExtractor
getSigned	VMCore/Constants.cpp	/^Constant *ConstantInt::getSigned(Type *Ty, int64_t V) {$/;"	f	class:ConstantInt
getSigned	VMCore/Constants.cpp	/^ConstantInt *ConstantInt::getSigned(IntegerType *Ty, int64_t V) {$/;"	f	class:ConstantInt
getSignedMax	Support/ConstantRange.cpp	/^APInt ConstantRange::getSignedMax() const {$/;"	f	class:ConstantRange
getSignedMin	Support/ConstantRange.cpp	/^APInt ConstantRange::getSignedMin() const {$/;"	f	class:ConstantRange
getSignedPredicate	VMCore/Instructions.cpp	/^ICmpInst::Predicate ICmpInst::getSignedPredicate(Predicate pred) {$/;"	f	class:ICmpInst
getSignedRange	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getSignedRange(const SCEV *S) {$/;"	f	class:ScalarEvolution
getSimpleNodeLabel	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static std::string getSimpleNodeLabel(const SDNode *Node,$/;"	f	struct:llvm::DOTGraphTraits
getSimpleValue	Transforms/Scalar/GVN.cpp	/^  Value *getSimpleValue() const {$/;"	f	struct:__anon538::AvailableValueInBlock
getSingleConstraintMatchWeight	CodeGen/SelectionDAG/TargetLowering.cpp	/^  TargetLowering::getSingleConstraintMatchWeight($/;"	f	class:TargetLowering
getSingleConstraintMatchWeight	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::getSingleConstraintMatchWeight($/;"	f	class:ARMTargetLowering
getSingleConstraintMatchWeight	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::getSingleConstraintMatchWeight($/;"	f	class:SPUTargetLowering
getSingleConstraintMatchWeight	Target/MBlaze/MBlazeISelLowering.cpp	/^MBlazeTargetLowering::getSingleConstraintMatchWeight($/;"	f	class:MBlazeTargetLowering
getSingleConstraintMatchWeight	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::getSingleConstraintMatchWeight($/;"	f	class:MipsTargetLowering
getSingleConstraintMatchWeight	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::getSingleConstraintMatchWeight($/;"	f	class:PPCTargetLowering
getSingleConstraintMatchWeight	Target/X86/X86ISelLowering.cpp	/^  X86TargetLowering::getSingleConstraintMatchWeight($/;"	f	class:X86TargetLowering
getSinglePredecessor	VMCore/BasicBlock.cpp	/^BasicBlock *BasicBlock::getSinglePredecessor() {$/;"	f	class:BasicBlock
getSingleUnscheduledPred	CodeGen/LatencyPriorityQueue.cpp	/^SUnit *LatencyPriorityQueue::getSingleUnscheduledPred(SUnit *SU) {$/;"	f	class:LatencyPriorityQueue
getSingleUnscheduledPred	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^SUnit *ResourcePriorityQueue::getSingleUnscheduledPred(SUnit *SU) {$/;"	f	class:ResourcePriorityQueue
getSingleUnscheduledPred	Target/Hexagon/HexagonMachineScheduler.cpp	/^static SUnit *getSingleUnscheduledPred(SUnit *SU) {$/;"	f	file:
getSingleUnscheduledSucc	Target/Hexagon/HexagonMachineScheduler.cpp	/^static SUnit *getSingleUnscheduledSucc(SUnit *SU) {$/;"	f	file:
getSize	CodeGen/AsmPrinter/DIE.h	/^    unsigned getSize() const { return Size; }$/;"	f	class:llvm::DIE
getSize	CodeGen/LiveInterval.cpp	/^unsigned LiveInterval::getSize() const {$/;"	f	class:LiveInterval
getSize	DebugInfo/DWARFCompileUnit.h	/^  uint32_t getSize() const { return 11; }$/;"	f	class:llvm::DWARFCompileUnit
getSize	Object/Archive.cpp	/^  uint64_t getSize() const {$/;"	f	struct:__anon228::ArchiveMemberHeader
getSize	Object/Archive.cpp	/^uint64_t Archive::Child::getSize() const {$/;"	f	class:Archive::Child
getSizeExtEncoding	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^MipsMCCodeEmitter::getSizeExtEncoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:MipsMCCodeEmitter
getSizeExtEncoding	Target/Mips/MipsCodeEmitter.cpp	/^unsigned MipsCodeEmitter::getSizeExtEncoding(const MachineInstr &MI,$/;"	f	class:MipsCodeEmitter
getSizeForEncoding	MC/MCDwarf.cpp	/^static unsigned getSizeForEncoding(MCStreamer &streamer,$/;"	f	file:
getSizeInsEncoding	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^MipsMCCodeEmitter::getSizeInsEncoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:MipsMCCodeEmitter
getSizeInsEncoding	Target/Mips/MipsCodeEmitter.cpp	/^unsigned MipsCodeEmitter::getSizeInsEncoding(const MachineInstr &MI,$/;"	f	class:MipsCodeEmitter
getSizeOf	VMCore/Constants.cpp	/^Constant *ConstantExpr::getSizeOf(Type* Ty) {$/;"	f	class:ConstantExpr
getSizeOfExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getSizeOfExpr(Type *AllocTy) {$/;"	f	class:ScalarEvolution
getSizeOfImm	Target/X86/MCTargetDesc/X86BaseInfo.h	/^  inline unsigned getSizeOfImm(uint64_t TSFlags) {$/;"	f	namespace:llvm::X86II
getSlot	Target/X86/X86FloatingPoint.cpp	/^    unsigned getSlot(unsigned RegNo) const {$/;"	f	struct:__anon386::FPS	file:
getSlot	VMCore/Attributes.cpp	/^const AttributeWithIndex &AttrListPtr::getSlot(unsigned Slot) const {$/;"	f	class:AttrListPtr
getSlotSize	Target/X86/X86RegisterInfo.h	/^  unsigned getSlotSize() const { return SlotSize; }$/;"	f	class:llvm::X86RegisterInfo
getSmVersion	Target/NVPTX/NVPTXSubtarget.h	/^  unsigned int getSmVersion() const { return SmVersion; }$/;"	f	class:llvm::NVPTXSubtarget
getSmallConstantTripCount	Analysis/ScalarEvolution.cpp	/^getSmallConstantTripCount(Loop *L, BasicBlock *ExitingBlock) {$/;"	f	class:ScalarEvolution
getSmallConstantTripMultiple	Analysis/ScalarEvolution.cpp	/^getSmallConstantTripMultiple(Loop *L, BasicBlock *ExitingBlock) {$/;"	f	class:ScalarEvolution
getSmallDataThreshold	Target/Hexagon/HexagonSubtarget.h	/^  unsigned getSmallDataThreshold() const {$/;"	f	class:llvm::HexagonSubtarget
getSmallIPtrImm	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    inline SDValue getSmallIPtrImm(unsigned Imm) {$/;"	f	class:__anon414::SPUDAGToDAGISel
getSmallIPtrImm	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    inline SDValue getSmallIPtrImm(unsigned Imm) {$/;"	f	class:__anon331::PPCDAGToDAGISel
getSmallest	Support/APFloat.cpp	/^APFloat APFloat::getSmallest(const fltSemantics &Sem, bool Negative) {$/;"	f	class:APFloat
getSmallestNormalized	Support/APFloat.cpp	/^APFloat APFloat::getSmallestNormalized(const fltSemantics &Sem, bool Negative) {$/;"	f	class:APFloat
getSource	Analysis/PathNumbering.cpp	/^BallLarusNode* BallLarusEdge::getSource() const {$/;"	f	class:BallLarusEdge
getSourceID	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned getSourceID() const { return SourceID; }$/;"	f	class:llvm::SrcLineInfo
getSourceManager	MC/MCParser/AsmParser.cpp	/^  virtual SourceMgr &getSourceManager() { return SrcMgr; }$/;"	f	class:__anon211::AsmParser
getSparcTargetMachine	Target/Sparc/SparcTargetMachine.cpp	/^  SparcTargetMachine &getSparcTargetMachine() const {$/;"	f	class:__anon440::SparcPassConfig
getSparseSetIndex	CodeGen/MachineTraceMetrics.cpp	/^  unsigned getSparseSetIndex() const { return RegUnit; }$/;"	f	struct:__anon134::LiveRegUnit
getSparseSetIndex	CodeGen/RegAllocFast.cpp	/^      unsigned getSparseSetIndex() const {$/;"	f	struct:__anon140::RAFast::LiveReg
getSpecialMBlazeRegisterFromNumbering	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^static inline unsigned getSpecialMBlazeRegisterFromNumbering(unsigned Reg) {$/;"	f	namespace:llvm
getSpillLabels	Target/XCore/XCoreMachineFunctionInfo.h	/^  std::vector<std::pair<MCSymbol*, CalleeSavedInfo> > &getSpillLabels() {$/;"	f	class:llvm::XCoreFunctionInfo
getSpillWeight	CodeGen/LiveIntervalAnalysis.cpp	/^LiveIntervals::getSpillWeight(bool isDef, bool isUse, unsigned loopDepth) {$/;"	f	class:LiveIntervals
getSplat	VMCore/Constants.cpp	/^Constant *ConstantDataVector::getSplat(unsigned NumElts, Constant *V) {$/;"	f	class:ConstantDataVector
getSplat	VMCore/Constants.cpp	/^Constant *ConstantVector::getSplat(unsigned NumElts, Constant *V) {$/;"	f	class:ConstantVector
getSplatValue	VMCore/Constants.cpp	/^Constant *ConstantDataVector::getSplatValue() const {$/;"	f	class:ConstantDataVector
getSplatValue	VMCore/Constants.cpp	/^Constant *ConstantVector::getSplatValue() const {$/;"	f	class:ConstantVector
getSplitIteration	Analysis/DependenceAnalysis.cpp	/^const  SCEV *DependenceAnalysis::getSplitIteration(const Dependence *Dep,$/;"	f	class:DependenceAnalysis
getSrcIdx	CodeGen/RegisterCoalescer.h	/^    unsigned getSrcIdx() const { return SrcIdx; }$/;"	f	class:llvm::CoalescerPair
getSrcReg	CodeGen/RegisterCoalescer.h	/^    unsigned getSrcReg() const { return SrcReg; }$/;"	f	class:llvm::CoalescerPair
getSrcValue	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getSrcValue(const Value *V) {$/;"	f	class:SelectionDAG
getSsatBitPosValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getSsatBitPosValue(const MachineInstr &MI,$/;"	f	class:__anon297::ARMCodeEmitter	file:
getStack	CodeGen/MachineInstr.cpp	/^MachinePointerInfo MachinePointerInfo::getStack(int64_t Offset) {$/;"	f	class:MachinePointerInfo
getStack	CodeGen/PseudoSourceValue.cpp	/^const PseudoSourceValue *PseudoSourceValue::getStack()$/;"	f	class:PseudoSourceValue
getStackAlignment	Target/ARM/ARMSubtarget.h	/^  unsigned getStackAlignment() const { return stackAlignment; }$/;"	f	class:llvm::ARMSubtarget
getStackAlignment	Target/CellSPU/SPUSubtarget.h	/^    unsigned getStackAlignment() const { return StackAlignment; }$/;"	f	class:llvm::SPUSubtarget
getStackAlignment	Target/PowerPC/PPCSubtarget.h	/^  unsigned getStackAlignment() const { return StackAlignment; }$/;"	f	class:llvm::PPCSubtarget
getStackAlignment	Target/X86/X86Subtarget.h	/^  unsigned getStackAlignment() const { return stackAlignment; }$/;"	f	class:llvm::X86Subtarget
getStackAlignment	VMCore/Attributes.cpp	/^uint64_t AttrBuilder::getStackAlignment() const {$/;"	f	class:AttrBuilder
getStackAlignment	VMCore/Attributes.cpp	/^uint64_t AttributesImpl::getStackAlignment() const {$/;"	f	class:AttributesImpl
getStackAlignment	VMCore/Attributes.cpp	/^unsigned Attributes::getStackAlignment() const {$/;"	f	class:Attributes
getStackArgumentTokenFactor	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getStackArgumentTokenFactor(SDValue Chain) {$/;"	f	class:SelectionDAG
getStackCookieLocation	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::getStackCookieLocation(unsigned &AddressSpace,$/;"	f	class:X86TargetLowering
getStackEntry	Target/X86/X86FloatingPoint.cpp	/^    unsigned getStackEntry(unsigned STi) const {$/;"	f	struct:__anon386::FPS	file:
getStackPtrReg	Target/X86/X86ISelLowering.h	/^    unsigned getStackPtrReg() const { return X86StackPtr; }$/;"	f	class:llvm::X86TargetLowering
getStackRegister	Target/Hexagon/HexagonRegisterInfo.cpp	/^unsigned HexagonRegisterInfo::getStackRegister() const {$/;"	f	class:HexagonRegisterInfo
getStackRegister	Target/X86/X86RegisterInfo.h	/^  unsigned getStackRegister() const { return StackPtr; }$/;"	f	class:llvm::X86RegisterInfo
getStackSlot	CodeGen/VirtRegMap.h	/^    int getStackSlot(unsigned virtReg) const {$/;"	f	class:llvm::VirtRegMap
getStackSpaceFor	CodeGen/RegAllocFast.cpp	/^int RAFast::getStackSpaceFor(unsigned VirtReg, const TargetRegisterClass *RC) {$/;"	f	class:RAFast
getStage	CodeGen/RegAllocGreedy.cpp	/^  LiveRangeStage getStage(const LiveInterval &VirtReg) const {$/;"	f	class:__anon158::RAGreedy	file:
getStartFileFunc	Transforms/Instrumentation/GCOVProfiling.cpp	/^Constant *GCOVProfiler::getStartFileFunc() {$/;"	f	class:GCOVProfiler
getStartLoc	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  SMLoc getStartLoc() const { return StartLoc; }$/;"	f	class:__anon261::ARMOperand
getStartLoc	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  SMLoc getStartLoc() const { return StartLoc; }$/;"	f	struct:__anon446::MBlazeOperand
getStartLoc	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  SMLoc getStartLoc() const { return StartLoc; }$/;"	f	class:__anon423::MipsOperand
getStartLoc	Target/X86/AsmParser/X86AsmParser.cpp	/^  SMLoc getStartLoc() const { return StartLoc; }$/;"	f	struct:__anon336::X86Operand
getStartingPathNumber	Transforms/Instrumentation/PathProfiling.cpp	/^Value* BLInstrumentationNode::getStartingPathNumber(){$/;"	f	class:BLInstrumentationNode
getState	Support/LockFileManager.cpp	/^LockFileManager::LockFileState LockFileManager::getState() const {$/;"	f	class:LockFileManager
getStatementTableLength	DebugInfo/DWARFDebugLine.h	/^    uint32_t getStatementTableLength() const {$/;"	f	struct:llvm::DWARFDebugLine::Prologue
getStaticCtorSection	CodeGen/TargetLoweringObjectFileImpl.cpp	/^TargetLoweringObjectFileELF::getStaticCtorSection(unsigned Priority) const {$/;"	f	class:TargetLoweringObjectFileELF
getStaticDtorSection	CodeGen/TargetLoweringObjectFileImpl.cpp	/^TargetLoweringObjectFileELF::getStaticDtorSection(unsigned Priority) const {$/;"	f	class:TargetLoweringObjectFileELF
getStore	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getStore(SDValue Chain, DebugLoc dl, SDValue Val,$/;"	f	class:SelectionDAG
getStoreRegOpcode	Target/X86/X86InstrInfo.cpp	/^static unsigned getStoreRegOpcode(unsigned SrcReg,$/;"	f	file:
getStoreStrongCallee	Transforms/Scalar/ObjCARC.cpp	/^Constant *ObjCARCContract::getStoreStrongCallee(Module *M) {$/;"	f	class:ObjCARCContract
getStoredPointerOperand	Transforms/Scalar/DeadStoreElimination.cpp	/^static Value *getStoredPointerOperand(Instruction *I) {$/;"	f	file:
getStrPool	Target/NVPTX/NVPTXRegisterInfo.h	/^  ManagedStringPool *getStrPool() const {$/;"	f	class:llvm::NVPTXRegisterInfo
getStrVal	AsmParser/LLLexer.h	/^    const std::string &getStrVal() const { return StrVal; }$/;"	f	class:llvm::LLLexer
getStreamedBitcodeModule	Bitcode/Reader/BitcodeReader.cpp	/^Module *llvm::getStreamedBitcodeModule(const std::string &name,$/;"	f	class:llvm
getStreamer	MC/MCParser/AsmParser.cpp	/^  virtual MCStreamer &getStreamer() { return Out; }$/;"	f	class:__anon211::AsmParser
getStride	Analysis/IVUsers.cpp	/^const SCEV *IVUsers::getStride(const IVStrideUse &IU, const Loop *L) const {$/;"	f	class:IVUsers
getString	MC/MCDisassembler/EDInst.cpp	/^int EDInst::getString(const char*& str) {$/;"	f	class:EDInst
getString	MC/MCDisassembler/EDToken.cpp	/^int EDToken::getString(const char*& buf) {$/;"	f	class:EDToken
getString	MC/SubtargetFeature.cpp	/^std::string SubtargetFeatures::getString() const {$/;"	f	class:SubtargetFeatures
getString	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getString(uint32_t offset,$/;"	f	class:COFFObjectFile
getString	VMCore/Constants.cpp	/^Constant *ConstantDataArray::getString(LLVMContext &Context,$/;"	f	class:ConstantDataArray
getStringField	VMCore/DebugInfo.cpp	/^DIDescriptor::getStringField(unsigned Elt) const {$/;"	f	class:DIDescriptor
getStringPool	CodeGen/AsmPrinter/DwarfDebug.cpp	/^MCSymbol *DwarfDebug::getStringPool() {$/;"	f	class:DwarfDebug
getStringPoolEntry	CodeGen/AsmPrinter/DwarfDebug.cpp	/^MCSymbol *DwarfDebug::getStringPoolEntry(StringRef Str) {$/;"	f	class:DwarfDebug
getStringRepresentation	VMCore/DataLayout.cpp	/^std::string DataLayout::getStringRepresentation() const {$/;"	f	class:DataLayout
getStringSection	DebugInfo/DWARFContext.h	/^  virtual StringRef getStringSection() { return StringSection; }$/;"	f	class:llvm::DWARFContextInMemory
getStructElement	VMCore/Constants.cpp	/^Constant *ConstantAggregateZero::getStructElement(unsigned Elt) const {$/;"	f	class:ConstantAggregateZero
getStructElement	VMCore/Constants.cpp	/^UndefValue *UndefValue::getStructElement(unsigned Elt) const {$/;"	f	class:UndefValue
getStructElementType	VMCore/Type.cpp	/^Type *Type::getStructElementType(unsigned N) const {$/;"	f	class:Type
getStructLayout	VMCore/DataLayout.cpp	/^const StructLayout *DataLayout::getStructLayout(StructType *Ty) const {$/;"	f	class:DataLayout
getStructName	VMCore/Type.cpp	/^StringRef Type::getStructName() const {$/;"	f	class:Type
getStructNumElements	VMCore/Type.cpp	/^unsigned Type::getStructNumElements() const {$/;"	f	class:Type
getStructValueState	Transforms/Scalar/SCCP.cpp	/^  LatticeVal &getStructValueState(Value *V, unsigned i) {$/;"	f	class:__anon531::SCCPSolver	file:
getStubLayout	Target/ARM/ARMJITInfo.cpp	/^TargetJITInfo::StubLayout ARMJITInfo::getStubLayout() {$/;"	f	class:ARMJITInfo
getStubLayout	Target/Mips/MipsJITInfo.cpp	/^TargetJITInfo::StubLayout MipsJITInfo::getStubLayout() {$/;"	f	class:MipsJITInfo
getStubLayout	Target/PowerPC/PPCJITInfo.cpp	/^TargetJITInfo::StubLayout PPCJITInfo::getStubLayout() {$/;"	f	class:PPCJITInfo
getStubLayout	Target/X86/X86JITInfo.cpp	/^TargetJITInfo::StubLayout X86JITInfo::getStubLayout() {$/;"	f	class:X86JITInfo
getSub	VMCore/Constants.cpp	/^Constant *ConstantExpr::getSub(Constant *C1, Constant *C2,$/;"	f	class:ConstantExpr
getSubClassWithSubReg	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::getSubClassWithSubReg(const TargetRegisterClass *RC,$/;"	f	class:X86RegisterInfo
getSubExpr	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^  const MCExpr *getSubExpr() const { return Expr; }$/;"	f	class:llvm::ARMMCExpr
getSubReg	MC/MCRegisterInfo.cpp	/^unsigned MCRegisterInfo::getSubReg(unsigned Reg, unsigned Idx) const {$/;"	f	class:MCRegisterInfo
getSubRegIndex	MC/MCRegisterInfo.cpp	/^unsigned MCRegisterInfo::getSubRegIndex(unsigned Reg, unsigned SubReg) const {$/;"	f	class:MCRegisterInfo
getSubRegionNode	Analysis/RegionInfo.cpp	/^Region* Region::getSubRegionNode(BasicBlock *BB) const {$/;"	f	class:Region
getSubprograms	VMCore/DebugInfo.cpp	/^DIArray DICompileUnit::getSubprograms() const {$/;"	f	class:DICompileUnit
getSubroutineName	DebugInfo/DWARFDebugInfoEntry.cpp	/^DWARFDebugInfoEntryMinimal::getSubroutineName($/;"	f	class:DWARFDebugInfoEntryMinimal
getSubtarget	Target/ARM/ARMBaseInstrInfo.h	/^  const ARMSubtarget &getSubtarget() const { return Subtarget; }$/;"	f	class:llvm::ARMBaseInstrInfo
getSubtarget	Target/ARM/ARMISelLowering.h	/^    const ARMSubtarget* getSubtarget() const {$/;"	f	class:llvm::ARMTargetLowering
getSubtarget	Target/X86/X86AsmPrinter.h	/^  const X86Subtarget &getSubtarget() const { return *Subtarget; }$/;"	f	class:llvm::X86AsmPrinter
getSubtarget	Target/X86/X86ISelLowering.h	/^    const X86Subtarget* getSubtarget() const {$/;"	f	class:llvm::X86TargetLowering
getSubtargetImpl	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMSubtarget  *getSubtargetImpl() const { return &Subtarget; }$/;"	f	class:llvm::ARMBaseTargetMachine
getSubtargetImpl	Target/CellSPU/SPUTargetMachine.h	/^  virtual const SPUSubtarget     *getSubtargetImpl() const {$/;"	f	class:llvm::SPUTargetMachine
getSubtargetImpl	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const HexagonSubtarget *getSubtargetImpl() const {$/;"	f	class:llvm::HexagonTargetMachine
getSubtargetImpl	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const MBlazeSubtarget *getSubtargetImpl() const$/;"	f	class:llvm::MBlazeTargetMachine
getSubtargetImpl	Target/MSP430/MSP430TargetMachine.h	/^  virtual const MSP430Subtarget *getSubtargetImpl() const { return &Subtarget; }$/;"	f	class:llvm::MSP430TargetMachine
getSubtargetImpl	Target/Mips/MipsTargetMachine.h	/^  virtual const MipsSubtarget *getSubtargetImpl() const$/;"	f	class:llvm::MipsTargetMachine
getSubtargetImpl	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual const NVPTXSubtarget *getSubtargetImpl() const { return &Subtarget;}$/;"	f	class:llvm::NVPTXTargetMachine
getSubtargetImpl	Target/PowerPC/PPCTargetMachine.h	/^  virtual const PPCSubtarget  *getSubtargetImpl() const { return &Subtarget; }$/;"	f	class:llvm::PPCTargetMachine
getSubtargetImpl	Target/Sparc/SparcTargetMachine.h	/^  virtual const SparcSubtarget   *getSubtargetImpl() const{ return &Subtarget; }$/;"	f	class:llvm::SparcTargetMachine
getSubtargetImpl	Target/X86/X86TargetMachine.h	/^  virtual const X86Subtarget     *getSubtargetImpl() const{ return &Subtarget; }$/;"	f	class:llvm::X86TargetMachine
getSubtargetImpl	Target/XCore/XCoreTargetMachine.h	/^  virtual const XCoreSubtarget *getSubtargetImpl() const { return &Subtarget; }$/;"	f	class:llvm::XCoreTargetMachine
getSuccWeight	CodeGen/MachineBasicBlock.cpp	/^uint32_t MachineBasicBlock::getSuccWeight(const_succ_iterator Succ) const {$/;"	f	class:MachineBasicBlock
getSuccessorNumber	Transforms/Instrumentation/PathProfiling.cpp	/^unsigned BLInstrumentationEdge::getSuccessorNumber() {$/;"	f	class:BLInstrumentationEdge
getSuccessorV	VMCore/Instructions.cpp	/^BasicBlock *BranchInst::getSuccessorV(unsigned idx) const {$/;"	f	class:BranchInst
getSuccessorV	VMCore/Instructions.cpp	/^BasicBlock *IndirectBrInst::getSuccessorV(unsigned idx) const {$/;"	f	class:IndirectBrInst
getSuccessorV	VMCore/Instructions.cpp	/^BasicBlock *InvokeInst::getSuccessorV(unsigned idx) const {$/;"	f	class:InvokeInst
getSuccessorV	VMCore/Instructions.cpp	/^BasicBlock *ResumeInst::getSuccessorV(unsigned idx) const {$/;"	f	class:ResumeInst
getSuccessorV	VMCore/Instructions.cpp	/^BasicBlock *ReturnInst::getSuccessorV(unsigned idx) const {$/;"	f	class:ReturnInst
getSuccessorV	VMCore/Instructions.cpp	/^BasicBlock *SwitchInst::getSuccessorV(unsigned idx) const {$/;"	f	class:SwitchInst
getSuccessorV	VMCore/Instructions.cpp	/^BasicBlock *UnreachableInst::getSuccessorV(unsigned idx) const {$/;"	f	class:UnreachableInst
getSumForBlock	Analysis/BranchProbabilityInfo.cpp	/^uint32_t BranchProbabilityInfo::getSumForBlock(const BasicBlock *BB) const {$/;"	f	class:BranchProbabilityInfo
getSumForBlock	CodeGen/MachineBranchProbabilityInfo.cpp	/^getSumForBlock(const MachineBasicBlock *MBB, uint32_t &Scale) const {$/;"	f	class:MachineBranchProbabilityInfo
getSurfaceName	Target/NVPTX/NVPTXUtilities.cpp	/^std::string llvm::getSurfaceName(const llvm::Value &val) {$/;"	f	class:llvm
getSwappedCondition	Target/ARM/ARMBaseInstrInfo.cpp	/^inline static ARMCC::CondCodes getSwappedCondition(ARMCC::CondCodes CC) {$/;"	f	file:
getSwappedCondition	Target/X86/X86InstrInfo.cpp	/^static X86::CondCode getSwappedCondition(X86::CondCode CC) {$/;"	f	file:
getSwappedPredicate	VMCore/Instructions.cpp	/^CmpInst::Predicate CmpInst::getSwappedPredicate(Predicate pred) {$/;"	f	class:CmpInst
getSymTab	VMCore/Value.cpp	/^static bool getSymTab(Value *V, ValueSymbolTable *&ST) {$/;"	f	file:
getSymbol	CodeGen/MachineBasicBlock.cpp	/^MCSymbol *MachineBasicBlock::getSymbol() const {$/;"	f	class:MachineBasicBlock
getSymbol	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbol(uint32_t index,$/;"	f	class:COFFObjectFile
getSymbol	Target/ARM/ARMConstantPoolValue.h	/^  const char *getSymbol() const { return S; }$/;"	f	class:llvm::ARMConstantPoolSymbol
getSymbol	Target/Mangler.cpp	/^MCSymbol *Mangler::getSymbol(const GlobalValue *GV) {$/;"	f	class:Mangler
getSymbol64TableEntry	Object/MachOObjectFile.cpp	/^void MachOObjectFile::getSymbol64TableEntry(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolAddress	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void *RuntimeDyld::getSymbolAddress(StringRef Name) {$/;"	f	class:llvm::RuntimeDyld
getSymbolAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  void *getSymbolAddress(StringRef Name) {$/;"	f	class:llvm::RuntimeDyldImpl
getSymbolAddress	MC/MachObjectWriter.cpp	/^uint64_t MachObjectWriter::getSymbolAddress(const MCSymbolData* SD,$/;"	f	class:MachObjectWriter
getSymbolAddress	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbolAddress(DataRefImpl Symb,$/;"	f	class:COFFObjectFile
getSymbolAddress	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSymbolAddress(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolAuxData	Object/COFFObjectFile.cpp	/^ArrayRef<uint8_t> COFFObjectFile::getSymbolAuxData($/;"	f	class:COFFObjectFile
getSymbolFileOffset	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbolFileOffset(DataRefImpl Symb,$/;"	f	class:COFFObjectFile
getSymbolFileOffset	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSymbolFileOffset(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolFlags	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbolFlags(DataRefImpl Symb,$/;"	f	class:COFFObjectFile
getSymbolFlags	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSymbolFlags(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolIndexInSymbolTable	MC/ELFObjectWriter.cpp	/^ELFObjectWriter::getSymbolIndexInSymbolTable(const MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
getSymbolLoadAddress	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^uint64_t RuntimeDyld::getSymbolLoadAddress(StringRef Name) {$/;"	f	class:llvm::RuntimeDyld
getSymbolLoadAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  uint64_t getSymbolLoadAddress(StringRef Name) {$/;"	f	class:llvm::RuntimeDyldImpl
getSymbolLookupCallback	MC/MCDisassembler/Disassembler.h	/^  LLVMSymbolLookupCallback getSymbolLookupCallback() const {$/;"	f	class:llvm::LLVMDisasmContext
getSymbolNMTypeChar	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbolNMTypeChar(DataRefImpl Symb,$/;"	f	class:COFFObjectFile
getSymbolNMTypeChar	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSymbolNMTypeChar(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolName	Object/COFFObjectFile.cpp	/^ error_code COFFObjectFile::getSymbolName(DataRefImpl Symb,$/;"	f	class:COFFObjectFile
getSymbolName	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbolName(const coff_symbol *symbol,$/;"	f	class:COFFObjectFile
getSymbolName	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSymbolName(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolNext	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbolNext(DataRefImpl Symb,$/;"	f	class:COFFObjectFile
getSymbolNext	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSymbolNext(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolOffset	MC/MCAssembler.cpp	/^uint64_t MCAsmLayout::getSymbolOffset(const MCSymbolData *SD) const {$/;"	f	class:MCAsmLayout
getSymbolSection	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbolSection(DataRefImpl Symb,$/;"	f	class:COFFObjectFile
getSymbolSection	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSymbolSection(DataRefImpl Symb,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolSize	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbolSize(DataRefImpl Symb,$/;"	f	class:COFFObjectFile
getSymbolSize	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSymbolSize(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolTableEntry	Object/MachOObjectFile.cpp	/^void MachOObjectFile::getSymbolTableEntry(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
getSymbolType	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::getSymbolType(DataRefImpl Symb,$/;"	f	class:COFFObjectFile
getSymbolType	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::getSymbolType(DataRefImpl Symb,$/;"	f	class:llvm::object::MachOObjectFile
getSymbols	Archive/Archive.cpp	/^static void getSymbols(Module*M, std::vector<std::string>& symbols) {$/;"	f	file:
getT2AddrModeImm0_1020s4OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2AddrModeImm0_1020s4OpValue(const MachineInstr &MI,unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2AddrModeImm0_1020s4OpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getT2AddrModeImm0_1020s4OpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getT2AddrModeImm12OffsetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2AddrModeImm12OffsetOpValue(const MachineInstr &MI,unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2AddrModeImm12OffsetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getT2AddrModeImm12OffsetOpValue(const MCInst &MI, unsigned OpNum,$/;"	f	class:ARMMCCodeEmitter
getT2AddrModeImm12OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2AddrModeImm12OpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2AddrModeImm8OffsetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2AddrModeImm8OffsetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2AddrModeImm8OffsetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getT2AddrModeImm8OffsetOpValue(const MCInst &MI, unsigned OpNum,$/;"	f	class:ARMMCCodeEmitter
getT2AddrModeImm8OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2AddrModeImm8OpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2AddrModeImm8OpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getT2AddrModeImm8OpValue(const MCInst &MI, unsigned OpNum,$/;"	f	class:ARMMCCodeEmitter
getT2AddrModeImm8s4OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2AddrModeImm8s4OpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2AddrModeImm8s4OpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getT2AddrModeImm8s4OpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getT2AddrModeSORegOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2AddrModeSORegOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2AddrModeSORegOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getT2AddrModeSORegOpValue(const MCInst &MI, unsigned OpNum,$/;"	f	class:ARMMCCodeEmitter
getT2AdrLabelOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2AdrLabelOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2AdrLabelOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getT2AdrLabelOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getT2Imm8s4OpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2Imm8s4OpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2Imm8s4OpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getT2Imm8s4OpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getT2IndexedAddressParts	Target/ARM/ARMISelLowering.cpp	/^static bool getT2IndexedAddressParts(SDNode *Ptr, EVT VT,$/;"	f	file:
getT2SOImmOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2SOImmOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2SOImmOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  unsigned getT2SOImmOpValue(const MCInst &MI, unsigned Op,$/;"	f	class:__anon283::ARMMCCodeEmitter
getT2SOImmTwoPartFirst	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getT2SOImmTwoPartFirst(unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
getT2SOImmTwoPartSecond	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getT2SOImmTwoPartSecond(unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
getT2SOImmVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline int getT2SOImmVal(unsigned Arg) {$/;"	f	namespace:llvm::ARM_AM
getT2SOImmValRotate	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getT2SOImmValRotate(unsigned V) {$/;"	f	namespace:llvm::ARM_AM
getT2SOImmValRotateVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline int getT2SOImmValRotateVal(unsigned V) {$/;"	f	namespace:llvm::ARM_AM
getT2SOImmValSplatVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline int getT2SOImmValSplatVal(unsigned V) {$/;"	f	namespace:llvm::ARM_AM
getT2SORegOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getT2SORegOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getT2SORegOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getT2SORegOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getTCReturnAddrDelta	Target/X86/X86MachineFunctionInfo.h	/^  int getTCReturnAddrDelta() const { return TailCallReturnAddrDelta; }$/;"	f	class:llvm::X86MachineFunctionInfo
getTD	Transforms/IPO/MergeFunctions.cpp	/^  DataLayout *getTD() const { return TD; }$/;"	f	class:__anon596::ComparableFunction
getTLSModel	Target/TargetMachine.cpp	/^TLSModel::Model TargetMachine::getTLSModel(const GlobalValue *GV) const {$/;"	f	class:TargetMachine
getTPred	CodeGen/EarlyIfConversion.cpp	/^  MachineBasicBlock *getTPred() const { return TBB == Tail ? Head : TBB; }$/;"	f	class:__anon91::SSAIfConv
getTag	CodeGen/AsmPrinter/DIE.h	/^    uint16_t getTag() const { return Tag; }$/;"	f	class:llvm::DIEAbbrev
getTag	CodeGen/AsmPrinter/DIE.h	/^    unsigned getTag() const { return Abbrev.getTag(); }$/;"	f	class:llvm::DIE
getTag	CodeGen/AsmPrinter/DwarfDebug.h	/^  unsigned getTag()                  const { $/;"	f	class:llvm::DbgVariable
getTag	CodeGen/LiveIntervalUnion.h	/^  unsigned getTag() const { return Tag; }$/;"	f	class:llvm::LiveIntervalUnion
getTag	DebugInfo/DWARFAbbreviationDeclaration.h	/^  uint32_t getTag() const { return Tag; }$/;"	f	class:llvm::DWARFAbbreviationDeclaration
getTag	DebugInfo/DWARFDebugInfoEntry.h	/^  uint32_t getTag() const { return AbbrevDecl ? AbbrevDecl->getTag() : 0; }$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
getTagType	MC/MCDisassembler/Disassembler.h	/^  int getTagType() const { return TagType; }$/;"	f	class:llvm::LLVMDisasmContext
getTailCallSPDelta	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int getTailCallSPDelta() const { return TailCallSPDelta; }$/;"	f	class:llvm::PPCFunctionInfo
getTailStartPos	CodeGen/BranchFolding.h	/^      MachineBasicBlock::iterator getTailStartPos() const {$/;"	f	class:llvm::BranchFolder::SameTailElt
getTarget	Analysis/PathNumbering.cpp	/^BallLarusNode* BallLarusEdge::getTarget() const {$/;"	f	class:BallLarusEdge
getTarget	MC/MCDisassembler/Disassembler.h	/^  const Target *getTarget() const { return TheTarget; }$/;"	f	class:llvm::LLVMDisasmContext
getTarget	Target/Hexagon/HexagonCallingConvLower.h	/^  const TargetMachine &getTarget() const { return TM; }$/;"	f	class:llvm::Hexagon_CCState
getTargetABI	Target/Mips/MipsSubtarget.h	/^  unsigned getTargetABI() const { return MipsABI; }$/;"	f	class:llvm::MipsSubtarget
getTargetExternalSymbol	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getTargetExternalSymbol(const char *Sym, EVT VT,$/;"	f	class:SelectionDAG
getTargetExtractSubreg	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getTargetExtractSubreg(int SRIdx, DebugLoc DL, EVT VT,$/;"	f	class:SelectionDAG
getTargetIndex	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getTargetIndex(int Index, EVT VT, int64_t Offset,$/;"	f	class:SelectionDAG
getTargetInsertSubreg	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::getTargetInsertSubreg(int SRIdx, DebugLoc DL, EVT VT,$/;"	f	class:SelectionDAG
getTargetLibraryInfo	Transforms/InstCombine/InstCombine.h	/^  TargetLibraryInfo *getTargetLibraryInfo() const { return TLI; }$/;"	f	class:llvm::InstCombiner
getTargetLowering	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMTargetLowering *getTargetLowering() const {$/;"	f	class:llvm::ARMTargetMachine
getTargetLowering	Target/ARM/ARMTargetMachine.h	/^  virtual const ARMTargetLowering *getTargetLowering() const {$/;"	f	class:llvm::ThumbTargetMachine
getTargetLowering	Target/CellSPU/SPUTargetMachine.h	/^  virtual const SPUTargetLowering *getTargetLowering() const {$/;"	f	class:llvm::SPUTargetMachine
getTargetLowering	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const HexagonTargetLowering* getTargetLowering() const {$/;"	f	class:llvm::HexagonTargetMachine
getTargetLowering	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const MBlazeTargetLowering *getTargetLowering() const$/;"	f	class:llvm::MBlazeTargetMachine
getTargetLowering	Target/MSP430/MSP430TargetMachine.h	/^  virtual const MSP430TargetLowering *getTargetLowering() const {$/;"	f	class:llvm::MSP430TargetMachine
getTargetLowering	Target/Mips/MipsTargetMachine.h	/^  virtual const MipsTargetLowering *getTargetLowering() const {$/;"	f	class:llvm::MipsTargetMachine
getTargetLowering	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual NVPTXTargetLowering *getTargetLowering() const {$/;"	f	class:llvm::NVPTXTargetMachine
getTargetLowering	Target/PowerPC/PPCTargetMachine.h	/^  virtual const PPCTargetLowering *getTargetLowering() const {$/;"	f	class:llvm::PPCTargetMachine
getTargetLowering	Target/Sparc/SparcTargetMachine.h	/^  virtual const SparcTargetLowering* getTargetLowering() const {$/;"	f	class:llvm::SparcTargetMachine
getTargetLowering	Target/X86/X86TargetMachine.h	/^  virtual const X86TargetLowering *getTargetLowering() const {$/;"	f	class:llvm::X86TargetMachine
getTargetLowering	Target/X86/X86TargetMachine.h	/^  virtual const X86TargetLowering *getTargetLowering() const {$/;"	f	class:llvm::X86_32TargetMachine
getTargetLowering	Target/X86/X86TargetMachine.h	/^  virtual const X86TargetLowering *getTargetLowering() const {$/;"	f	class:llvm::X86_64TargetMachine
getTargetLowering	Target/XCore/XCoreTargetMachine.h	/^  virtual const XCoreTargetLowering *getTargetLowering() const {$/;"	f	class:llvm::XCoreTargetMachine
getTargetMBB	Target/Mips/MipsLongBranch.cpp	/^static MachineBasicBlock *getTargetMBB(const MachineInstr &Br) {$/;"	f	file:
getTargetMachine	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^  const MBlazeTargetMachine &getTargetMachine() {$/;"	f	class:__anon461::MBlazeDAGToDAGISel	file:
getTargetMachine	Target/Mips/MipsISelDAGToDAG.cpp	/^  const MipsTargetMachine &getTargetMachine() {$/;"	f	class:__anon435::MipsDAGToDAGISel	file:
getTargetMachine	Target/X86/X86FastISel.cpp	/^  const X86TargetMachine *getTargetMachine() const {$/;"	f	class:__anon381::X86FastISel	file:
getTargetMachine	Target/X86/X86ISelDAGToDAG.cpp	/^    const X86TargetMachine &getTargetMachine() {$/;"	f	class:__anon373::X86DAGToDAGISel	file:
getTargetName	Target/NVPTX/NVPTXSubtarget.h	/^  std::string getTargetName() const { return TargetName; }$/;"	f	class:llvm::NVPTXSubtarget
getTargetNodeName	CodeGen/SelectionDAG/TargetLowering.cpp	/^const char *TargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:TargetLowering
getTargetNodeName	Target/ARM/ARMISelLowering.cpp	/^const char *ARMTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:ARMTargetLowering
getTargetNodeName	Target/CellSPU/SPUISelLowering.cpp	/^const char *SPUTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:SPUTargetLowering
getTargetNodeName	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:HexagonTargetLowering
getTargetNodeName	Target/MBlaze/MBlazeISelLowering.cpp	/^const char *MBlazeTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:MBlazeTargetLowering
getTargetNodeName	Target/MSP430/MSP430ISelLowering.cpp	/^const char *MSP430TargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:MSP430TargetLowering
getTargetNodeName	Target/Mips/MipsISelLowering.cpp	/^const char *MipsTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:MipsTargetLowering
getTargetNodeName	Target/NVPTX/NVPTXISelLowering.cpp	/^const char *NVPTXTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:NVPTXTargetLowering
getTargetNodeName	Target/PowerPC/PPCISelLowering.cpp	/^const char *PPCTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:PPCTargetLowering
getTargetNodeName	Target/Sparc/SparcISelLowering.cpp	/^const char *SparcTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:SparcTargetLowering
getTargetNodeName	Target/X86/X86ISelLowering.cpp	/^const char *X86TargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:X86TargetLowering
getTargetNodeName	Target/XCore/XCoreISelLowering.cpp	/^getTargetNodeName(unsigned Opcode) const$/;"	f	class:XCoreTargetLowering
getTargetRegInfo	CodeGen/VirtRegMap.h	/^    const TargetRegisterInfo &getTargetRegInfo() const { return *TRI; }$/;"	f	class:llvm::VirtRegMap
getTargetShuffleMask	Target/X86/X86ISelLowering.cpp	/^static bool getTargetShuffleMask(SDNode *N, MVT VT,$/;"	f	file:
getTargetShuffleNode	Target/X86/X86ISelLowering.cpp	/^static SDValue getTargetShuffleNode(unsigned Opc, DebugLoc dl, EVT VT,$/;"	f	file:
getTargetTriple	Target/ARM/ARMSubtarget.h	/^  const Triple &getTargetTriple() const { return TargetTriple; }$/;"	f	class:llvm::ARMSubtarget
getTargetTriple	Target/PowerPC/PPCSubtarget.h	/^  const Triple &getTargetTriple() const { return TargetTriple; }$/;"	f	class:llvm::PPCSubtarget
getTargetTriple	Target/X86/X86Subtarget.h	/^  const Triple &getTargetTriple() const { return TargetTriple; }$/;"	f	class:llvm::X86Subtarget
getTargetVShiftNode	Target/X86/X86ISelLowering.cpp	/^static SDValue getTargetVShiftNode(unsigned Opc, DebugLoc dl, EVT VT,$/;"	f	file:
getTemporary	VMCore/Metadata.cpp	/^MDNode *MDNode::getTemporary(LLVMContext &Context, ArrayRef<Value*> Vals) {$/;"	f	class:MDNode
getTerminator	VMCore/BasicBlock.cpp	/^TerminatorInst *BasicBlock::getTerminator() {$/;"	f	class:BasicBlock
getTerminator	VMCore/BasicBlock.cpp	/^const TerminatorInst *BasicBlock::getTerminator() const {$/;"	f	class:BasicBlock
getTextureName	Target/NVPTX/NVPTXUtilities.cpp	/^std::string llvm::getTextureName(const llvm::Value &val) {$/;"	f	class:llvm
getTgtMemIntrinsic	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::getTgtMemIntrinsic(IntrinsicInfo &Info,$/;"	f	class:ARMTargetLowering
getTgtMemIntrinsic	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::getTgtMemIntrinsic(IntrinsicInfo& Info, const CallInst &I,$/;"	f	class:NVPTXTargetLowering
getThreshold	Analysis/InlineCost.cpp	/^  int getThreshold() { return Threshold; }$/;"	f	class:__anon28::CallAnalyzer
getThroughBlocks	CodeGen/SplitKit.h	/^  const BitVector &getThroughBlocks() const { return ThroughBlocks; }$/;"	f	class:llvm::SplitAnalysis
getThumbAddrModeRegRegOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getThumbAddrModeRegRegOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getThumbAddrModeRegRegOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getThumbAddrModeRegRegOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getThumbAdrLabelOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getThumbAdrLabelOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getThumbAdrLabelOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getThumbAdrLabelOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getThumbBCCTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getThumbBCCTargetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getThumbBCCTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getThumbBCCTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getThumbBLTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getThumbBLTargetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getThumbBLTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getThumbBLTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getThumbBLXTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getThumbBLXTargetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getThumbBLXTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getThumbBLXTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getThumbBRTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getThumbBRTargetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getThumbBRTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getThumbBRTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getThumbCBTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getThumbCBTargetOpValue(const MachineInstr &MI, unsigned Op)$/;"	f	class:__anon297::ARMCodeEmitter	file:
getThumbCBTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getThumbCBTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getThumbImm16ValShift	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getThumbImm16ValShift(unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
getThumbImmNonShiftedVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getThumbImmNonShiftedVal(unsigned V) {$/;"	f	namespace:llvm::ARM_AM
getThumbImmValShift	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned getThumbImmValShift(unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
getTok	MC/MCParser/MCAsmParser.cpp	/^const AsmToken &MCAsmParser::getTok() {$/;"	f	class:MCAsmParser
getToken	MC/MCDisassembler/EDInst.cpp	/^int EDInst::getToken(EDToken *&token, unsigned int index) {$/;"	f	class:EDInst
getToken	Support/StringExtras.cpp	/^std::pair<StringRef, StringRef> llvm::getToken(StringRef Source,$/;"	f	class:llvm
getToken	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  StringRef getToken() const {$/;"	f	class:__anon261::ARMOperand
getToken	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  StringRef getToken() const {$/;"	f	struct:__anon446::MBlazeOperand
getToken	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  StringRef getToken() const {$/;"	f	class:__anon423::MipsOperand
getToken	Target/X86/AsmParser/X86AsmParser.cpp	/^  StringRef getToken() const {$/;"	f	struct:__anon336::X86Operand
getTombstoneKey	MC/MCDwarf.cpp	/^    static CIEKey getTombstoneKey() {$/;"	f	struct:llvm::DenseMapInfo
getTombstoneKey	MC/MCDwarf.cpp	/^    static const CIEKey getTombstoneKey() { return CIEKey(0, -1, 0, false); }$/;"	f	struct:__anon224::CIEKey
getTombstoneKey	TableGen/Record.cpp	/^  static inline TableGenStringKey getTombstoneKey() {$/;"	f	struct:llvm::DenseMapInfo
getTombstoneKey	Transforms/IPO/MergeFunctions.cpp	/^    static ComparableFunction getTombstoneKey() {$/;"	f	struct:llvm::DenseMapInfo
getTombstoneKey	Transforms/InstCombine/InstCombinePHI.cpp	/^    static inline LoweredPHIRecord getTombstoneKey() {$/;"	f	struct:llvm::DenseMapInfo
getTombstoneKey	Transforms/Scalar/EarlyCSE.cpp	/^    static inline CallValue getTombstoneKey() {$/;"	f	struct:llvm::DenseMapInfo
getTombstoneKey	Transforms/Scalar/EarlyCSE.cpp	/^  static inline SimpleValue getTombstoneKey() {$/;"	f	struct:llvm::DenseMapInfo
getTombstoneKey	Transforms/Scalar/GVN.cpp	/^  static inline Expression getTombstoneKey() {$/;"	f	struct:llvm::DenseMapInfo
getTombstoneKey	Transforms/Scalar/LoopStrengthReduce.cpp	/^  static SmallVector<const SCEV *, 2> getTombstoneKey() {$/;"	f	struct:__anon517::UniquifierDenseMapInfo
getTombstoneKey	Transforms/Scalar/LoopStrengthReduce.cpp	/^  static std::pair<const SCEV *, LSRUse::KindType> getTombstoneKey() {$/;"	f	struct:__anon518::UseMapDenseMapInfo
getTombstoneKey	Transforms/Utils/BypassSlowDivision.cpp	/^    static DivOpInfo getTombstoneKey() {$/;"	f	struct:llvm::DenseMapInfo
getTombstoneKey	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  static inline EltTy getTombstoneKey() {$/;"	f	struct:llvm::DenseMapInfo
getTombstoneKey	VMCore/ConstantsContext.h	/^    static inline ConstantClass* getTombstoneKey() {$/;"	f	struct:llvm::ConstantAggrUniqueMap::MapInfo
getTombstoneKey	VMCore/LLVMContextImpl.h	/^  static inline FunctionType* getTombstoneKey() {$/;"	f	struct:llvm::FunctionTypeKeyInfo
getTombstoneKey	VMCore/LLVMContextImpl.h	/^  static inline KeyTy getTombstoneKey() { $/;"	f	struct:llvm::DenseMapAPFloatKeyInfo
getTombstoneKey	VMCore/LLVMContextImpl.h	/^  static inline KeyTy getTombstoneKey() { return KeyTy(APInt(1,1), 0); }$/;"	f	struct:llvm::DenseMapAPIntKeyInfo
getTombstoneKey	VMCore/LLVMContextImpl.h	/^  static inline StructType* getTombstoneKey() {$/;"	f	struct:llvm::AnonStructTypeKeyInfo
getTopBlock	CodeGen/MachineLoopInfo.cpp	/^MachineBasicBlock *MachineLoop::getTopBlock() {$/;"	f	class:MachineLoop
getTopLevelLoopParent	CodeGen/ShrinkWrapping.cpp	/^MachineLoop* PEI::getTopLevelLoopParent(MachineLoop *LP) {$/;"	f	class:PEI
getTopLevelLoopPreheader	CodeGen/ShrinkWrapping.cpp	/^MachineBasicBlock* PEI::getTopLevelLoopPreheader(MachineLoop* LP) {$/;"	f	class:PEI
getTopLevelPassManagerType	VMCore/PassManager.cpp	/^  virtual PassManagerType getTopLevelPassManagerType() {$/;"	f	class:llvm::FunctionPassManagerImpl
getTopLevelPassManagerType	VMCore/PassManager.cpp	/^  virtual PassManagerType getTopLevelPassManagerType() {$/;"	f	class:llvm::PassManagerImpl
getTopMostParent	Analysis/RegionInfo.cpp	/^Region *RegionInfo::getTopMostParent(Region *region) {$/;"	f	class:RegionInfo
getTotalMemory	Support/Allocator.cpp	/^size_t BumpPtrAllocator::getTotalMemory() const {$/;"	f	class:llvm::BumpPtrAllocator
getTotalPackets	Target/Hexagon/HexagonMachineScheduler.h	/^  unsigned getTotalPackets() const { return TotalPackets; }$/;"	f	class:llvm::VLIWResourceModel
getTrace	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::Ensemble::getTrace(const MachineBasicBlock *MBB) {$/;"	f	class:MachineTraceMetrics::Ensemble
getTrackedGlobals	Transforms/Scalar/SCCP.cpp	/^  const DenseMap<GlobalVariable*, LatticeVal> &getTrackedGlobals() {$/;"	f	class:__anon531::SCCPSolver
getTrackedRetVals	Transforms/Scalar/SCCP.cpp	/^  const DenseMap<Function*, LatticeVal> &getTrackedRetVals() {$/;"	f	class:__anon531::SCCPSolver
getTrapBB	Transforms/Instrumentation/BoundsChecking.cpp	/^BasicBlock *BoundsChecking::getTrapBB() {$/;"	f	class:BoundsChecking
getTrapFunctionName	CodeGen/TargetOptionsImpl.cpp	/^StringRef TargetOptions::getTrapFunctionName() const {$/;"	f	class:TargetOptions
getTripCount	Target/Hexagon/HexagonHardwareLoops.cpp	/^CountValue *HexagonHardwareLoops::getTripCount(MachineLoop *L) const {$/;"	f	class:HexagonHardwareLoops
getTripCount	Target/PowerPC/PPCCTRLoops.cpp	/^CountValue *PPCCTRLoops::getTripCount(MachineLoop *L,$/;"	f	class:PPCCTRLoops
getTripleName	MC/MCDisassembler/Disassembler.h	/^  const std::string &getTripleName() const { return TripleName; }$/;"	f	class:llvm::LLVMDisasmContext
getTrue	Analysis/InstructionSimplify.cpp	/^static Constant *getTrue(Type *Ty) {$/;"	f	file:
getTrue	VMCore/Constants.cpp	/^Constant *ConstantInt::getTrue(Type *Ty) {$/;"	f	class:ConstantInt
getTrue	VMCore/Constants.cpp	/^ConstantInt *ConstantInt::getTrue(LLVMContext &Context) {$/;"	f	class:ConstantInt
getTrunc	VMCore/Constants.cpp	/^Constant *ConstantExpr::getTrunc(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getTruncOrBitCast	VMCore/Constants.cpp	/^Constant *ConstantExpr::getTruncOrBitCast(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getTruncStore	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getTruncStore(SDValue Chain, DebugLoc dl, SDValue Val,$/;"	f	class:SelectionDAG
getTruncateExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getTruncateExpr(const SCEV *Op,$/;"	f	class:ScalarEvolution
getTruncateOrNoop	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getTruncateOrNoop(const SCEV *V, Type *Ty) {$/;"	f	class:ScalarEvolution
getTruncateOrSignExtend	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getTruncateOrSignExtend(const SCEV *V,$/;"	f	class:ScalarEvolution
getTruncateOrZeroExtend	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getTruncateOrZeroExtend(const SCEV *V, Type *Ty) {$/;"	f	class:ScalarEvolution
getTruncatedArgReg	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static unsigned getTruncatedArgReg(const SDValue &N) {$/;"	f	file:
getTyVal	AsmParser/LLLexer.h	/^    Type *getTyVal() const { return TyVal; }$/;"	f	class:llvm::LLLexer
getType	Analysis/PathNumbering.cpp	/^BallLarusEdge::EdgeType BallLarusEdge::getType() const {$/;"	f	class:BallLarusEdge
getType	Analysis/ScalarEvolution.cpp	/^Type *SCEV::getType() const {$/;"	f	class:SCEV
getType	CodeGen/AsmPrinter/DIE.h	/^    unsigned getType()  const { return Type; }$/;"	f	class:llvm::DIEValue
getType	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DIType DbgVariable::getType() const {$/;"	f	class:llvm::DbgVariable
getType	CodeGen/MachineFunction.cpp	/^Type *MachineConstantPoolEntry::getType() const {$/;"	f	class:MachineConstantPoolEntry
getType	CodeGen/SelectionDAG/SelectionDAG.cpp	/^Type *ConstantPoolSDNode::getType() const {$/;"	f	class:ConstantPoolSDNode
getType	Target/Hexagon/HexagonHardwareLoops.cpp	/^    CountValueType getType() const { return Kind; }$/;"	f	class:__anon408::CountValue
getType	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^static FunctionType *getType(LLVMContext &Context, unsigned id) {$/;"	f	file:
getType	Target/PowerPC/PPCCTRLoops.cpp	/^    CountValueType getType() const { return Kind; }$/;"	f	class:__anon325::CountValue
getType	Transforms/Scalar/LoopStrengthReduce.cpp	/^Type *Formula::getType() const {$/;"	f	class:Formula
getType	VMCore/Function.cpp	/^FunctionType *Intrinsic::getType(LLVMContext &Context,$/;"	f	class:Intrinsic
getTypeAction	CodeGen/SelectionDAG/LegalizeTypes.h	/^  TargetLowering::LegalizeTypeAction getTypeAction(EVT VT) const {$/;"	f	class:llvm::DAGTypeLegalizer
getTypeAtIndex	VMCore/Type.cpp	/^Type *CompositeType::getTypeAtIndex(const Value *V) {$/;"	f	class:CompositeType
getTypeAtIndex	VMCore/Type.cpp	/^Type *CompositeType::getTypeAtIndex(unsigned Idx) {$/;"	f	class:CompositeType
getTypeByID	Bitcode/Reader/BitcodeReader.cpp	/^Type *BitcodeReader::getTypeByID(unsigned ID) {$/;"	f	class:BitcodeReader
getTypeByName	VMCore/Type.cpp	/^StructType *Module::getTypeByName(StringRef Name) const {$/;"	f	class:Module
getTypeForEVT	VMCore/ValueTypes.cpp	/^Type *EVT::getTypeForEVT(LLVMContext &Context) const {$/;"	f	class:EVT
getTypeForElements	VMCore/Constants.cpp	/^StructType *ConstantStruct::getTypeForElements(ArrayRef<Constant*> V,$/;"	f	class:ConstantStruct
getTypeForElements	VMCore/Constants.cpp	/^StructType *ConstantStruct::getTypeForElements(LLVMContext &Context,$/;"	f	class:ConstantStruct
getTypeForExtArgOrReturn	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::getTypeForExtArgOrReturn(LLVMContext &Context, EVT VT,$/;"	f	class:X86TargetLowering
getTypeID	Bitcode/Writer/ValueEnumerator.h	/^  unsigned getTypeID(Type *T) const {$/;"	f	class:llvm::ValueEnumerator
getTypeID	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static char getTypeID(Type *Ty) {$/;"	f	file:
getTypeIDFor	CodeGen/MachineModuleInfo.cpp	/^unsigned MachineModuleInfo::getTypeIDFor(const GlobalVariable *TI) {$/;"	f	class:MachineModuleInfo
getTypeOfMaskedICmp	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static unsigned getTypeOfMaskedICmp(Value* A, Value* B, Value* C, $/;"	f	file:
getTypePartition	Transforms/Scalar/SROA.cpp	/^static Type *getTypePartition(const DataLayout &TD, Type *Ty,$/;"	f	file:
getTypePrefix	Target/CppBackend/CPPBackend.cpp	/^static std::string getTypePrefix(Type *Ty) {$/;"	f	file:
getTypeSizeInBits	Analysis/ScalarEvolution.cpp	/^uint64_t ScalarEvolution::getTypeSizeInBits(Type *Ty) const {$/;"	f	class:ScalarEvolution
getTypeSizeInBits	VMCore/DataLayout.cpp	/^uint64_t DataLayout::getTypeSizeInBits(Type *Ty) const {$/;"	f	class:DataLayout
getTypeSizeIndex	Transforms/InstCombine/InstCombineCasts.cpp	/^static unsigned getTypeSizeIndex(unsigned Value, Type *Ty) {$/;"	f	file:
getTypeStoreSize	Analysis/AliasAnalysis.cpp	/^uint64_t AliasAnalysis::getTypeStoreSize(Type *Ty) {$/;"	f	class:AliasAnalysis
getTypeString	AsmParser/LLParser.cpp	/^static std::string getTypeString(Type *T) {$/;"	f	file:
getTypes	Bitcode/Writer/ValueEnumerator.h	/^  const TypeList &getTypes() const { return Types; }$/;"	f	class:llvm::ValueEnumerator
getU	Support/DataExtractor.cpp	/^static T getU(uint32_t *offset_ptr, const DataExtractor *de,$/;"	f	file:
getU16	Support/DataExtractor.cpp	/^uint16_t *DataExtractor::getU16(uint32_t *offset_ptr, uint16_t *dst,$/;"	f	class:DataExtractor
getU16	Support/DataExtractor.cpp	/^uint16_t DataExtractor::getU16(uint32_t *offset_ptr) const {$/;"	f	class:DataExtractor
getU32	Support/DataExtractor.cpp	/^uint32_t *DataExtractor::getU32(uint32_t *offset_ptr, uint32_t *dst,$/;"	f	class:DataExtractor
getU32	Support/DataExtractor.cpp	/^uint32_t DataExtractor::getU32(uint32_t *offset_ptr) const {$/;"	f	class:DataExtractor
getU64	Support/DataExtractor.cpp	/^uint64_t *DataExtractor::getU64(uint32_t *offset_ptr, uint64_t *dst,$/;"	f	class:DataExtractor
getU64	Support/DataExtractor.cpp	/^uint64_t DataExtractor::getU64(uint32_t *offset_ptr) const {$/;"	f	class:DataExtractor
getU8	Support/DataExtractor.cpp	/^DataExtractor::getU8(uint32_t *offset_ptr, uint8_t *dst, uint32_t count) const {$/;"	f	class:DataExtractor
getU8	Support/DataExtractor.cpp	/^uint8_t DataExtractor::getU8(uint32_t *offset_ptr) const {$/;"	f	class:DataExtractor
getUDiv	VMCore/Constants.cpp	/^Constant *ConstantExpr::getUDiv(Constant *C1, Constant *C2, bool isExact) {$/;"	f	class:ConstantExpr
getUDivExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getUDivExpr(const SCEV *LHS,$/;"	f	class:ScalarEvolution
getUINTTOFP	CodeGen/SelectionDAG/TargetLowering.cpp	/^RTLIB::Libcall RTLIB::getUINTTOFP(EVT OpVT, EVT RetVT) {$/;"	f	class:RTLIB
getUIToFP	VMCore/Constants.cpp	/^Constant *ConstantExpr::getUIToFP(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getUInt64Field	VMCore/DebugInfo.cpp	/^uint64_t DIDescriptor::getUInt64Field(unsigned Elt) const {$/;"	f	class:DIDescriptor
getUIntVal	AsmParser/LLLexer.h	/^    unsigned getUIntVal() const { return UIntVal; }$/;"	f	class:llvm::LLLexer
getULEB128	Support/DataExtractor.cpp	/^uint64_t DataExtractor::getULEB128(uint32_t *offset_ptr) const {$/;"	f	class:DataExtractor
getULEB128Size	MC/MCAsmInfo.cpp	/^unsigned MCAsmInfo::getULEB128Size(unsigned Value) {$/;"	f	class:MCAsmInfo
getULEBSize	Target/ARM/ARMAsmPrinter.cpp	/^    size_t getULEBSize(int Value) {$/;"	f	class:__anon313::ObjectAttributeEmitter	file:
getUMaxExpr	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getUMaxExpr(SmallVectorImpl<const SCEV *> &Ops) {$/;"	f	class:ScalarEvolution
getUMaxExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getUMaxExpr(const SCEV *LHS,$/;"	f	class:ScalarEvolution
getUMaxFromMismatchedTypes	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getUMaxFromMismatchedTypes(const SCEV *LHS,$/;"	f	class:ScalarEvolution
getUMinExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getUMinExpr(const SCEV *LHS,$/;"	f	class:ScalarEvolution
getUMinFromMismatchedTypes	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getUMinFromMismatchedTypes(const SCEV *LHS,$/;"	f	class:ScalarEvolution
getURem	VMCore/Constants.cpp	/^Constant *ConstantExpr::getURem(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getUnconditionalBrDisp	Target/ARM/ARMConstantIslandPass.cpp	/^static inline unsigned getUnconditionalBrDisp(int Opc) {$/;"	f	file:
getUnconditionalBranchTargetOpValue	Target/ARM/ARMCodeEmitter.cpp	/^    unsigned getUnconditionalBranchTargetOpValue(const MachineInstr &MI,$/;"	f	class:__anon297::ARMCodeEmitter	file:
getUnconditionalBranchTargetOpValue	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^getUnconditionalBranchTargetOpValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:ARMMCCodeEmitter
getUnderlyingObject	CodeGen/ScheduleDAGInstrs.cpp	/^static const Value *getUnderlyingObject(const Value *V) {$/;"	f	file:
getUnderlyingObjectForInstr	CodeGen/ScheduleDAGInstrs.cpp	/^static const Value *getUnderlyingObjectForInstr(const MachineInstr *MI,$/;"	f	file:
getUnderlyingObjectFromInt	CodeGen/ScheduleDAGInstrs.cpp	/^static const Value *getUnderlyingObjectFromInt(const Value *V) {$/;"	f	file:
getUnderlyingObjectWithOffset	Analysis/Loads.cpp	/^static Value *getUnderlyingObjectWithOffset(Value *V, const DataLayout *TD,$/;"	f	file:
getUnicodeEncoding	Support/YAMLParser.cpp	/^static EncodingInfo getUnicodeEncoding(StringRef Input) {$/;"	f	file:
getUniformVector	Transforms/Vectorize/LoopVectorize.cpp	/^SingleBlockLoopVectorizer::getUniformVector(unsigned Val, Type* ScalarTy) {$/;"	f	class:__anon605::SingleBlockLoopVectorizer
getUnindexedOpcode	Target/ARM/ARMInstrInfo.cpp	/^unsigned ARMInstrInfo::getUnindexedOpcode(unsigned Opc) const {$/;"	f	class:ARMInstrInfo
getUnindexedOpcode	Target/ARM/Thumb1InstrInfo.cpp	/^unsigned Thumb1InstrInfo::getUnindexedOpcode(unsigned Opc) const {$/;"	f	class:Thumb1InstrInfo
getUnindexedOpcode	Target/ARM/Thumb2InstrInfo.cpp	/^unsigned Thumb2InstrInfo::getUnindexedOpcode(unsigned Opc) const {$/;"	f	class:Thumb2InstrInfo
getUniqueExitBlock	Analysis/LoopInfo.cpp	/^BasicBlock *Loop::getUniqueExitBlock() const {$/;"	f	class:Loop
getUniqueExitBlocks	Analysis/LoopInfo.cpp	/^Loop::getUniqueExitBlocks(SmallVectorImpl<BasicBlock *> &ExitBlocks) const {$/;"	f	class:Loop
getUniquePredecessor	VMCore/BasicBlock.cpp	/^BasicBlock *BasicBlock::getUniquePredecessor() {$/;"	f	class:BasicBlock
getUniqueVRegDef	CodeGen/MachineRegisterInfo.cpp	/^MachineInstr *MachineRegisterInfo::getUniqueVRegDef(unsigned Reg) const {$/;"	f	class:MachineRegisterInfo
getUnknown	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getUnknown(Value *V) {$/;"	f	class:ScalarEvolution
getUnpackh	Target/X86/X86ISelLowering.cpp	/^static SDValue getUnpackh(SelectionDAG &DAG, DebugLoc dl, EVT VT, SDValue V1,$/;"	f	file:
getUnpackl	Target/X86/X86ISelLowering.cpp	/^static SDValue getUnpackl(SelectionDAG &DAG, DebugLoc dl, EVT VT, SDValue V1,$/;"	f	file:
getUnsigned	DebugInfo/DWARFFormValue.h	/^  uint64_t getUnsigned() const { return Value.uval; }$/;"	f	class:llvm::DWARFFormValue
getUnsigned	Support/DataExtractor.cpp	/^DataExtractor::getUnsigned(uint32_t *offset_ptr, uint32_t byte_size) const {$/;"	f	class:DataExtractor
getUnsignedMax	Support/ConstantRange.cpp	/^APInt ConstantRange::getUnsignedMax() const {$/;"	f	class:ConstantRange
getUnsignedMin	Support/ConstantRange.cpp	/^APInt ConstantRange::getUnsignedMin() const {$/;"	f	class:ConstantRange
getUnsignedPredicate	VMCore/Instructions.cpp	/^ICmpInst::Predicate ICmpInst::getUnsignedPredicate(Predicate pred) {$/;"	f	class:ICmpInst
getUnsignedRange	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::getUnsignedRange(const SCEV *S) {$/;"	f	class:ScalarEvolution
getUpdatingLSMultipleOpcode	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static unsigned getUpdatingLSMultipleOpcode(unsigned Opc,$/;"	f	file:
getUpperBound	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::getUpperBound(BoundInfo *Bound) const {$/;"	f	class:DependenceAnalysis
getUpwardPressure	CodeGen/RegisterPressure.cpp	/^getUpwardPressure(const MachineInstr *MI,$/;"	f	class:RegPressureTracker
getUs	Support/DataExtractor.cpp	/^static T *getUs(uint32_t *offset_ptr, T *dst, uint32_t count,$/;"	f	file:
getUse	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::getUse(const SCEV *&Expr,$/;"	f	class:LSRInstance
getUse	Transforms/Scalar/SROA.cpp	/^  const PartitionUse &getUse(const_iterator I, unsigned UIdx) const {$/;"	f	class:__anon557::AllocaPartitioning
getUse	Transforms/Scalar/SROA.cpp	/^  const PartitionUse &getUse(unsigned PIdx, unsigned UIdx) const {$/;"	f	class:__anon557::AllocaPartitioning
getUseBlocks	CodeGen/SplitKit.h	/^  ArrayRef<BlockInfo> getUseBlocks() const { return UseBlocks; }$/;"	f	class:llvm::SplitAnalysis
getUseSlots	CodeGen/SplitKit.h	/^  ArrayRef<SlotIndex> getUseSlots() const { return UseSlots; }$/;"	f	class:llvm::SplitAnalysis
getUsedByIndices	Transforms/Scalar/LoopStrengthReduce.cpp	/^const SmallBitVector &RegUseTracker::getUsedByIndices(const SCEV *Reg) const {$/;"	f	class:RegUseTracker
getUser	VMCore/Use.cpp	/^User *Use::getUser() const {$/;"	f	class:llvm::Use
getUserOffset	Target/ARM/ARMConstantIslandPass.cpp	/^unsigned ARMConstantIslands::getUserOffset(CPUser &U) const {$/;"	f	class:ARMConstantIslands
getUserValue	CodeGen/LiveDebugVariables.cpp	/^UserValue *LDVImpl::getUserValue(const MDNode *Var, unsigned Offset,$/;"	f	class:LDVImpl
getUsesLR	Target/XCore/XCoreMachineFunctionInfo.h	/^  bool getUsesLR() const { return UsesLR; }$/;"	f	class:llvm::XCoreFunctionInfo
getVAArg	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getVAArg(EVT VT, DebugLoc dl,$/;"	f	class:SelectionDAG
getVEXRegisterEncoding	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  unsigned char getVEXRegisterEncoding(const MCInst &MI,$/;"	f	class:__anon353::X86MCCodeEmitter
getVEXRegisterEncoding	Target/X86/X86CodeEmitter.cpp	/^Emitter<CodeEmitter>::getVEXRegisterEncoding(const MachineInstr &MI,$/;"	f	class:Emitter
getVFPCmp	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::getVFPCmp(SDValue LHS, SDValue RHS, SelectionDAG &DAG,$/;"	f	class:ARMTargetLowering
getVLDMDefCycle	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::getVLDMDefCycle(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
getVLDSTRegisterUpdateOpcode	Target/ARM/ARMISelDAGToDAG.cpp	/^static unsigned getVLDSTRegisterUpdateOpcode(unsigned Opc) {$/;"	f	file:
getVR	CodeGen/SelectionDAG/InstrEmitter.cpp	/^unsigned InstrEmitter::getVR(SDValue Op,$/;"	f	class:InstrEmitter
getVRegDef	CodeGen/MachineRegisterInfo.cpp	/^MachineInstr *MachineRegisterInfo::getVRegDef(unsigned Reg) const {$/;"	f	class:MachineRegisterInfo
getVRegForNode	CodeGen/RegAllocPBQP.cpp	/^unsigned PBQPRAProblem::getVRegForNode(PBQP::Graph::ConstNodeItr node) const {$/;"	f	class:PBQPRAProblem
getVSPLTImmediate	Target/PowerPC/PPCISelLowering.cpp	/^unsigned PPC::getVSPLTImmediate(SDNode *N, unsigned EltSize) {$/;"	f	class:PPC
getVSTMUseCycle	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::getVSTMUseCycle(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
getVShift	Target/X86/X86ISelLowering.cpp	/^static SDValue getVShift(bool isLeft, EVT VT, SDValue SrcOp,$/;"	f	file:
getVShiftImm	Target/ARM/ARMISelLowering.cpp	/^static bool getVShiftImm(SDValue Op, unsigned ElementBits, int64_t &Cnt) {$/;"	f	file:
getVTList	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDVTList SelectionDAG::getVTList(EVT VT) {$/;"	f	class:SelectionDAG
getVTList	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDVTList SelectionDAG::getVTList(EVT VT1, EVT VT2) {$/;"	f	class:SelectionDAG
getVTList	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDVTList SelectionDAG::getVTList(EVT VT1, EVT VT2, EVT VT3) {$/;"	f	class:SelectionDAG
getVTList	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDVTList SelectionDAG::getVTList(EVT VT1, EVT VT2, EVT VT3, EVT VT4) {$/;"	f	class:SelectionDAG
getVTList	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDVTList SelectionDAG::getVTList(const EVT *VTs, unsigned NumVTs) {$/;"	f	class:SelectionDAG
getVZextMovL	Target/X86/X86ISelLowering.cpp	/^static SDValue getVZextMovL(EVT VT, EVT OpVT,$/;"	f	file:
getVal	Transforms/IPO/GlobalOpt.cpp	/^  Constant *getVal(Value *V) {$/;"	f	class:__anon591::Evaluator
getValType	VMCore/ConstantsContext.h	/^  static ValType getValType(ConstantClass *C) {$/;"	f	struct:llvm::ConstantKeyData
getValType	VMCore/ConstantsContext.h	/^  static ValType getValType(ConstantExpr *CE) {$/;"	f	struct:llvm::ConstantKeyData
getValType	VMCore/ConstantsContext.h	/^  static ValType getValType(InlineAsm *Asm) {$/;"	f	struct:llvm::ConstantKeyData
getValue	Bitcode/Reader/BitcodeReader.h	/^  Value *getValue(SmallVector<uint64_t, 64> &Record, unsigned Slot,$/;"	f	class:llvm::BitcodeReader
getValue	Bitcode/Reader/BitcodeReader.h	/^  bool getValue(SmallVector<uint64_t, 64> &Record, unsigned Slot,$/;"	f	class:llvm::BitcodeReader
getValue	CodeGen/AsmPrinter/DIE.h	/^    const MCSymbol *getValue()       const { return Label; }$/;"	f	class:llvm::DIELabel
getValue	CodeGen/AsmPrinter/DIE.h	/^    uint64_t getValue() const { return Integer; }$/;"	f	class:llvm::DIEInteger
getValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SDValue SelectionDAGBuilder::getValue(const Value *V) {$/;"	f	class:SelectionDAGBuilder
getValue	Support/YAMLParser.cpp	/^Node *KeyValueNode::getValue() {$/;"	f	class:KeyValueNode
getValue	Support/YAMLParser.cpp	/^StringRef ScalarNode::getValue(SmallVectorImpl<char> &Storage) const {$/;"	f	class:ScalarNode
getValue	VMCore/IntrinsicInst.cpp	/^Value *DbgValueInst::getValue() {$/;"	f	class:DbgValueInst
getValue	VMCore/IntrinsicInst.cpp	/^const Value *DbgValueInst::getValue() const {$/;"	f	class:DbgValueInst
getValueAsBit	TableGen/Record.cpp	/^bool Record::getValueAsBit(StringRef FieldName) const {$/;"	f	class:Record
getValueAsBitOrUnset	TableGen/Record.cpp	/^bool Record::getValueAsBitOrUnset(StringRef FieldName, bool &Unset) const {$/;"	f	class:Record
getValueAsBitsInit	TableGen/Record.cpp	/^BitsInit *Record::getValueAsBitsInit(StringRef FieldName) const {$/;"	f	class:Record
getValueAsDag	TableGen/Record.cpp	/^DagInit *Record::getValueAsDag(StringRef FieldName) const {$/;"	f	class:Record
getValueAsDef	TableGen/Record.cpp	/^Record *Record::getValueAsDef(StringRef FieldName) const {$/;"	f	class:Record
getValueAsInt	TableGen/Record.cpp	/^int64_t Record::getValueAsInt(StringRef FieldName) const {$/;"	f	class:Record
getValueAsListInit	TableGen/Record.cpp	/^ListInit *Record::getValueAsListInit(StringRef FieldName) const {$/;"	f	class:Record
getValueAsListOfDefs	TableGen/Record.cpp	/^Record::getValueAsListOfDefs(StringRef FieldName) const {$/;"	f	class:Record
getValueAsListOfInts	TableGen/Record.cpp	/^Record::getValueAsListOfInts(StringRef FieldName) const {$/;"	f	class:Record
getValueAsListOfStrings	TableGen/Record.cpp	/^Record::getValueAsListOfStrings(StringRef FieldName) const {$/;"	f	class:Record
getValueAsString	TableGen/Record.cpp	/^std::string Record::getValueAsString(StringRef FieldName) const {$/;"	f	class:Record
getValueFwdRef	Bitcode/Reader/BitcodeReader.cpp	/^Value *BitcodeReaderMDValueList::getValueFwdRef(unsigned Idx) {$/;"	f	class:BitcodeReaderMDValueList
getValueFwdRef	Bitcode/Reader/BitcodeReader.cpp	/^Value *BitcodeReaderValueList::getValueFwdRef(unsigned Idx, Type *Ty) {$/;"	f	class:BitcodeReaderValueList
getValueID	Bitcode/Writer/ValueEnumerator.cpp	/^unsigned ValueEnumerator::getValueID(const Value *V) const {$/;"	f	class:ValueEnumerator
getValueImpl	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SDValue SelectionDAGBuilder::getValueImpl(const Value *V) {$/;"	f	class:SelectionDAGBuilder
getValueInBlock	Analysis/LazyValueInfo.cpp	/^LVILatticeVal LazyValueInfoCache::getValueInBlock(Value *V, BasicBlock *BB) {$/;"	f	class:LazyValueInfoCache
getValueInit	TableGen/Record.cpp	/^Init *Record::getValueInit(StringRef FieldName) const {$/;"	f	class:Record
getValueOnEdge	Analysis/LazyValueInfo.cpp	/^getValueOnEdge(Value *V, BasicBlock *FromBB, BasicBlock *ToBB) {$/;"	f	class:LazyValueInfoCache
getValueSigned	Bitcode/Reader/BitcodeReader.h	/^  Value *getValueSigned(SmallVector<uint64_t, 64> &Record, unsigned Slot,$/;"	f	class:llvm::BitcodeReader
getValueState	Transforms/Scalar/SCCP.cpp	/^  LatticeVal &getValueState(Value *V) {$/;"	f	class:__anon531::SCCPSolver	file:
getValueStr	Support/CommandLine.cpp	/^static const char *getValueStr(const Option &O, const char *DefaultMsg) {$/;"	f	file:
getValueSymbolTable	VMCore/BasicBlock.cpp	/^ValueSymbolTable *BasicBlock::getValueSymbolTable() {$/;"	f	class:BasicBlock
getValueType	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getValueType(EVT VT) {$/;"	f	class:SelectionDAG
getValueTypeList	CodeGen/SelectionDAG/SelectionDAG.cpp	/^const EVT *SDNode::getValueTypeList(EVT VT) {$/;"	f	class:SDNode
getValueTypePair	Bitcode/Reader/BitcodeReader.h	/^  bool getValueTypePair(SmallVector<uint64_t, 64> &Record, unsigned &Slot,$/;"	f	class:llvm::BitcodeReader
getValues	Bitcode/Writer/ValueEnumerator.h	/^  const ValueList &getValues() const { return Values; }$/;"	f	class:llvm::ValueEnumerator
getValues	CodeGen/AsmPrinter/DIE.h	/^    const SmallVector<DIEValue*, 32> &getValues() const { return Values; }$/;"	f	class:llvm::DIE
getVarArgsFPOffset	Target/X86/X86MachineFunctionInfo.h	/^  unsigned getVarArgsFPOffset() const { return VarArgsFPOffset; }$/;"	f	class:llvm::X86MachineFunctionInfo
getVarArgsFrameIndex	Target/ARM/ARMMachineFunctionInfo.h	/^  int getVarArgsFrameIndex() const { return VarArgsFrameIndex; }$/;"	f	class:llvm::ARMFunctionInfo
getVarArgsFrameIndex	Target/CellSPU/SPUMachineFunction.h	/^  int getVarArgsFrameIndex() const { return VarArgsFrameIndex; }$/;"	f	class:llvm::SPUFunctionInfo
getVarArgsFrameIndex	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  int getVarArgsFrameIndex() { return VarArgsFrameIndex; }$/;"	f	class:llvm::HexagonMachineFunctionInfo
getVarArgsFrameIndex	Target/MBlaze/MBlazeMachineFunction.h	/^  int getVarArgsFrameIndex() const { return VarArgsFrameIndex; }$/;"	f	class:llvm::MBlazeFunctionInfo
getVarArgsFrameIndex	Target/Mips/MipsMachineFunction.h	/^  int getVarArgsFrameIndex() const { return VarArgsFrameIndex; }$/;"	f	class:llvm::MipsFunctionInfo
getVarArgsFrameIndex	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int getVarArgsFrameIndex() const { return VarArgsFrameIndex; }$/;"	f	class:llvm::PPCFunctionInfo
getVarArgsFrameIndex	Target/X86/X86MachineFunctionInfo.h	/^  int getVarArgsFrameIndex() const { return VarArgsFrameIndex; }$/;"	f	class:llvm::X86MachineFunctionInfo
getVarArgsFrameIndex	Target/XCore/XCoreMachineFunctionInfo.h	/^  int getVarArgsFrameIndex() const { return VarArgsFrameIndex; }$/;"	f	class:llvm::XCoreFunctionInfo
getVarArgsFrameOffset	Target/Sparc/SparcMachineFunctionInfo.h	/^    int getVarArgsFrameOffset() const { return VarArgsFrameOffset; }$/;"	f	class:llvm::SparcMachineFunctionInfo
getVarArgsGPOffset	Target/X86/X86MachineFunctionInfo.h	/^  unsigned getVarArgsGPOffset() const { return VarArgsGPOffset; }$/;"	f	class:llvm::X86MachineFunctionInfo
getVarArgsNumFPR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  unsigned getVarArgsNumFPR() const { return VarArgsNumFPR; }$/;"	f	class:llvm::PPCFunctionInfo
getVarArgsNumGPR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  unsigned getVarArgsNumGPR() const { return VarArgsNumGPR; }$/;"	f	class:llvm::PPCFunctionInfo
getVarArgsRegSaveSize	Target/ARM/ARMMachineFunctionInfo.h	/^  unsigned getVarArgsRegSaveSize() const { return VarArgsRegSaveSize; }$/;"	f	class:llvm::ARMFunctionInfo
getVarArgsStackOffset	Target/PowerPC/PPCMachineFunctionInfo.h	/^  int getVarArgsStackOffset() const { return VarArgsStackOffset; }$/;"	f	class:llvm::PPCFunctionInfo
getVarInfo	CodeGen/LiveVariables.cpp	/^LiveVariables::VarInfo &LiveVariables::getVarInfo(unsigned RegIdx) {$/;"	f	class:LiveVariables
getVariable	CodeGen/AsmPrinter/DwarfDebug.h	/^  DIVariable getVariable()           const { return Var; }$/;"	f	class:llvm::DbgVariable
getVariables	VMCore/DebugInfo.cpp	/^DIArray DISubprogram::getVariables() const {$/;"	f	class:DISubprogram
getVariablesNodes	VMCore/DebugInfo.cpp	/^MDNode *DISubprogram::getVariablesNodes() const {$/;"	f	class:DISubprogram
getVariantKind	Target/Mips/AsmParser/MipsAsmParser.cpp	/^MCSymbolRefExpr::VariantKind MipsAsmParser::getVariantKind(StringRef Symbol) {$/;"	f	class:MipsAsmParser
getVariantKindForName	MC/MCExpr.cpp	/^MCSymbolRefExpr::getVariantKindForName(StringRef Name) {$/;"	f	class:MCSymbolRefExpr
getVariantKindName	MC/MCExpr.cpp	/^StringRef MCSymbolRefExpr::getVariantKindName(VariantKind Kind) {$/;"	f	class:MCSymbolRefExpr
getVecImm	Target/CellSPU/SPUISelLowering.cpp	/^getVecImm(SDNode *N) {$/;"	f	file:
getVecTypeForPair	Transforms/Vectorize/BBVectorize.cpp	/^    static inline VectorType *getVecTypeForPair(Type *ElemTy, Type *Elem2Ty) {$/;"	f	struct:__anon604::BBVectorize
getVectorIndex	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  unsigned getVectorIndex() const {$/;"	f	class:__anon261::ARMOperand
getVectorNumElements	VMCore/Type.cpp	/^unsigned Type::getVectorNumElements() const {$/;"	f	class:Type
getVectorShuffle	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getVectorShuffle(EVT VT, DebugLoc dl, SDValue N1,$/;"	f	class:SelectionDAG
getVectorTargetTransformInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::ARMTargetMachine
getVectorTargetTransformInfo	Target/ARM/ARMTargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::ThumbTargetMachine
getVectorTargetTransformInfo	Target/CellSPU/SPUTargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::SPUTargetMachine
getVectorTargetTransformInfo	Target/Hexagon/HexagonTargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::HexagonTargetMachine
getVectorTargetTransformInfo	Target/MBlaze/MBlazeTargetMachine.h	/^    virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const$/;"	f	class:llvm::MBlazeTargetMachine
getVectorTargetTransformInfo	Target/MSP430/MSP430TargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::MSP430TargetMachine
getVectorTargetTransformInfo	Target/Mips/MipsTargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::MipsTargetMachine
getVectorTargetTransformInfo	Target/NVPTX/NVPTXTargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::NVPTXTargetMachine
getVectorTargetTransformInfo	Target/PowerPC/PPCTargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::PPCTargetMachine
getVectorTargetTransformInfo	Target/Sparc/SparcTargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::SparcTargetMachine
getVectorTargetTransformInfo	Target/X86/X86TargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::X86_32TargetMachine
getVectorTargetTransformInfo	Target/X86/X86TargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::X86_64TargetMachine
getVectorTargetTransformInfo	Target/XCore/XCoreTargetMachine.h	/^  virtual const VectorTargetTransformInfo *getVectorTargetTransformInfo()const {$/;"	f	class:llvm::XCoreTargetMachine
getVectorTypeBreakdown	CodeGen/SelectionDAG/TargetLowering.cpp	/^unsigned TargetLowering::getVectorTypeBreakdown(LLVMContext &Context, EVT VT,$/;"	f	class:TargetLowering
getVectorTypeBreakdownMVT	CodeGen/SelectionDAG/TargetLowering.cpp	/^static unsigned getVectorTypeBreakdownMVT(MVT VT, MVT &IntermediateVT,$/;"	f	file:
getVectorValue	Transforms/Vectorize/LoopVectorize.cpp	/^Value *SingleBlockLoopVectorizer::getVectorValue(Value *V) {$/;"	f	class:__anon605::SingleBlockLoopVectorizer
getVendorName	Support/Triple.cpp	/^StringRef Triple::getVendorName() const {$/;"	f	class:Triple
getVendorTypeName	Support/Triple.cpp	/^const char *Triple::getVendorTypeName(VendorType Kind) {$/;"	f	class:Triple
getVerboseAsm	CodeGen/LLVMTargetMachine.cpp	/^static bool getVerboseAsm() {$/;"	f	file:
getVersion	DebugInfo/DWARFCompileUnit.h	/^  uint16_t getVersion() const { return Version; }$/;"	f	class:llvm::DWARFCompileUnit
getVirtualRegisterName	Target/NVPTX/NVPTXAsmPrinter.cpp	/^NVPTXAsmPrinter::getVirtualRegisterName(unsigned vr, bool isVec,$/;"	f	class:NVPTXAsmPrinter
getVoidTy	VMCore/Type.cpp	/^Type *Type::getVoidTy(LLVMContext &C) { return &C.pImpl->VoidTy; }$/;"	f	class:Type
getWeight	Analysis/PathNumbering.cpp	/^unsigned BallLarusEdge::getWeight() {$/;"	f	class:BallLarusEdge
getWeightIterator	CodeGen/MachineBasicBlock.cpp	/^getWeightIterator(MachineBasicBlock::const_succ_iterator I) const {$/;"	f	class:MachineBasicBlock
getWeightIterator	CodeGen/MachineBasicBlock.cpp	/^getWeightIterator(MachineBasicBlock::succ_iterator I) {$/;"	f	class:MachineBasicBlock
getWhenValsUnresolved	VMCore/Metadata.cpp	/^MDNode *MDNode::getWhenValsUnresolved(LLVMContext &Context,$/;"	f	class:MDNode
getWideOperand	Transforms/Scalar/LoopStrengthReduce.cpp	/^static Value *getWideOperand(Value *Oper) {$/;"	f	file:
getWin64EHFuncTableSection	MC/MCWin64EH.cpp	/^static const MCSection *getWin64EHFuncTableSection(StringRef suffix,$/;"	f	namespace:llvm
getWin64EHTableSection	MC/MCAsmStreamer.cpp	/^static const MCSection *getWin64EHTableSection(StringRef suffix,$/;"	f	file:
getWin64EHTableSection	MC/MCWin64EH.cpp	/^static const MCSection *getWin64EHTableSection(StringRef suffix,$/;"	f	namespace:llvm
getWithOperandReplaced	VMCore/Constants.cpp	/^ConstantExpr::getWithOperandReplaced(unsigned OpNo, Constant *Op) const {$/;"	f	class:ConstantExpr
getWithOperands	VMCore/Constants.cpp	/^getWithOperands(ArrayRef<Constant*> Ops, Type *Ty) const {$/;"	f	class:ConstantExpr
getX	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::Constraint::getX() const {$/;"	f	class:DependenceAnalysis::Constraint
getX86RegNum	Target/X86/X86CodeEmitter.cpp	/^    unsigned getX86RegNum(unsigned RegNo) const {$/;"	f	class:__anon379::Emitter	file:
getX86SubSuperRegister	Target/X86/X86RegisterInfo.cpp	/^unsigned getX86SubSuperRegister(unsigned Reg, MVT::SimpleValueType VT,$/;"	f	namespace:llvm
getX86Subtarget	Target/X86/X86TargetMachine.cpp	/^  const X86Subtarget &getX86Subtarget() const {$/;"	f	class:__anon377::X86PassConfig
getX86TargetMachine	Target/X86/X86TargetMachine.cpp	/^  X86TargetMachine &getX86TargetMachine() const {$/;"	f	class:__anon377::X86PassConfig
getX86_FP80PtrTy	VMCore/Type.cpp	/^PointerType *Type::getX86_FP80PtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getX86_FP80Ty	VMCore/Type.cpp	/^Type *Type::getX86_FP80Ty(LLVMContext &C) { return &C.pImpl->X86_FP80Ty; }$/;"	f	class:Type
getX86_MMXPtrTy	VMCore/Type.cpp	/^PointerType *Type::getX86_MMXPtrTy(LLVMContext &C, unsigned AS) {$/;"	f	class:Type
getX86_MMXTy	VMCore/Type.cpp	/^Type *Type::getX86_MMXTy(LLVMContext &C) { return &C.pImpl->X86_MMXTy; }$/;"	f	class:Type
getXCoreTargetMachine	Target/XCore/XCoreTargetMachine.cpp	/^  XCoreTargetMachine &getXCoreTargetMachine() const {$/;"	f	class:__anon332::XCorePassConfig
getXor	VMCore/Constants.cpp	/^Constant *ConstantExpr::getXor(Constant *C1, Constant *C2) {$/;"	f	class:ConstantExpr
getY	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::Constraint::getY() const {$/;"	f	class:DependenceAnalysis::Constraint
getZExt	VMCore/Constants.cpp	/^Constant *ConstantExpr::getZExt(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getZExtOrBitCast	VMCore/Constants.cpp	/^Constant *ConstantExpr::getZExtOrBitCast(Constant *C, Type *Ty) {$/;"	f	class:ConstantExpr
getZExtOrTrunc	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getZExtOrTrunc(SDValue Op, DebugLoc DL, EVT VT) {$/;"	f	class:SelectionDAG
getZeroExtendExpr	Analysis/ScalarEvolution.cpp	/^const SCEV *ScalarEvolution::getZeroExtendExpr(const SCEV *Op,$/;"	f	class:ScalarEvolution
getZeroExtendInReg	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SDValue SelectionDAG::getZeroExtendInReg(SDValue Op, DebugLoc DL, EVT VT) {$/;"	f	class:SelectionDAG
getZeroValueForNegation	VMCore/Constants.cpp	/^Constant *ConstantFP::getZeroValueForNegation(Type *Ty) {$/;"	f	class:ConstantFP
getZeroVector	Target/ARM/ARMISelLowering.cpp	/^static SDValue getZeroVector(EVT VT, SelectionDAG &DAG, DebugLoc dl) {$/;"	f	file:
getZeroVector	Target/X86/X86ISelLowering.cpp	/^static SDValue getZeroVector(EVT VT, const X86Subtarget *Subtarget,$/;"	f	file:
get_ILHUvec_imm	Target/CellSPU/SPUISelLowering.cpp	/^SDValue SPU::get_ILHUvec_imm(SDNode *N, SelectionDAG &DAG,$/;"	f	class:SPU
get_VSPLTI_elt	Target/PowerPC/PPCISelLowering.cpp	/^SDValue PPC::get_VSPLTI_elt(SDNode *N, unsigned ByteSize, SelectionDAG &DAG) {$/;"	f	class:PPC
get_crbitm_encoding	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^get_crbitm_encoding(const MCInst &MI, unsigned OpNo,$/;"	f	class:PPCMCCodeEmitter
get_crbitm_encoding	Target/PowerPC/PPCCodeEmitter.cpp	/^unsigned PPCCodeEmitter::get_crbitm_encoding(const MachineInstr &MI,$/;"	f	class:PPCCodeEmitter
get_v2i64_imm	Target/CellSPU/SPUISelLowering.cpp	/^SDValue SPU::get_v2i64_imm(SDNode *N, SelectionDAG &DAG) {$/;"	f	class:SPU
get_v4i32_imm	Target/CellSPU/SPUISelLowering.cpp	/^SDValue SPU::get_v4i32_imm(SDNode *N, SelectionDAG &DAG) {$/;"	f	class:SPU
get_vec_i10imm	Target/CellSPU/SPUISelLowering.cpp	/^SDValue SPU::get_vec_i10imm(SDNode *N, SelectionDAG &DAG,$/;"	f	class:SPU
get_vec_i16imm	Target/CellSPU/SPUISelLowering.cpp	/^SDValue SPU::get_vec_i16imm(SDNode *N, SelectionDAG &DAG,$/;"	f	class:SPU
get_vec_i8imm	Target/CellSPU/SPUISelLowering.cpp	/^SDValue SPU::get_vec_i8imm(SDNode *N, SelectionDAG &DAG,$/;"	f	class:SPU
get_vec_u18imm	Target/CellSPU/SPUISelLowering.cpp	/^SDValue SPU::get_vec_u18imm(SDNode *N, SelectionDAG &DAG,$/;"	f	class:SPU
getdl	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    DebugLoc getdl() { return dl; }$/;"	f	class:llvm::SelectionDAGBuilder::DanglingDebugInfo
getiOSVersion	Support/Triple.cpp	/^void Triple::getiOSVersion(unsigned &Major, unsigned &Minor,$/;"	f	class:Triple
gid	Archive/ArchiveInternals.h	/^      char gid[6];    \/\/\/< group id in ASCII decimal$/;"	m	class:llvm::ArchiveMemberHeader
globalBaseRegSet	Target/Mips/MipsMachineFunction.cpp	/^bool MipsFunctionInfo::globalBaseRegSet() const {$/;"	f	class:MipsFunctionInfo
global_lock	Support/Threading.cpp	/^static sys::Mutex* global_lock = 0;$/;"	v	file:
global_val_annot_t	Target/NVPTX/NVPTXUtilities.cpp	/^typedef std::map<const GlobalValue *, key_val_pair_t> global_val_annot_t;$/;"	t	file:
greater	AsmParser/LLToken.h	/^    less, greater,     \/\/ <  >$/;"	e	enum:llvm::lltok::Kind
greater	TableGen/TGLexer.h	/^    less, greater,      \/\/ < >$/;"	e	enum:llvm::tgtok::TokKind
group	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_group_id group;$/;"	m	struct:___itt_api_info
group	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_group_id group;$/;"	m	struct:___itt_api_info_20101001
grow	CodeGen/VirtRegMap.cpp	/^void VirtRegMap::grow() {$/;"	f	class:VirtRegMap
grow	Support/IntEqClasses.cpp	/^void IntEqClasses::grow(unsigned N) {$/;"	f	class:IntEqClasses
growOperands	VMCore/Instructions.cpp	/^void IndirectBrInst::growOperands() {$/;"	f	class:IndirectBrInst
growOperands	VMCore/Instructions.cpp	/^void LandingPadInst::growOperands(unsigned Size) {$/;"	f	class:LandingPadInst
growOperands	VMCore/Instructions.cpp	/^void PHINode::growOperands() {$/;"	f	class:PHINode
growOperands	VMCore/Instructions.cpp	/^void SwitchInst::growOperands() {$/;"	f	class:SwitchInst
growRegion	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::growRegion(GlobalSplitCandidate &Cand) {$/;"	f	class:RAGreedy
grow_pod	Support/SmallVector.cpp	/^void SmallVectorBase::grow_pod(void *FirstEl, size_t MinSizeInBytes,$/;"	f	class:SmallVectorBase
gvNeedsNonLazyPtr	Target/X86/X86CodeEmitter.cpp	/^static bool gvNeedsNonLazyPtr(const MachineOperand &GVOp,$/;"	f	file:
handle	Support/raw_ostream.cpp	/^void raw_ostream::handle() {}$/;"	f	class:raw_ostream
handleArgumentInfo	Analysis/PathProfileInfo.cpp	/^void PathProfileLoaderPass::handleArgumentInfo() {$/;"	f	class:PathProfileLoaderPass
handleAssemblerFlag	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  void handleAssemblerFlag(MCAssemblerFlag Flag) {$/;"	f	class:__anon284::ARMAsmBackend
handleBTSplitSwitchCase	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^bool SelectionDAGBuilder::handleBTSplitSwitchCase(CaseRec& CR,$/;"	f	class:SelectionDAGBuilder
handleBitTestsSwitchCase	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^bool SelectionDAGBuilder::handleBitTestsSwitchCase(CaseRec& CR,$/;"	f	class:SelectionDAGBuilder
handleCompareFP	Target/X86/X86FloatingPoint.cpp	/^void FPS::handleCompareFP(MachineBasicBlock::iterator &I) {$/;"	f	class:FPS
handleCondMovFP	Target/X86/X86FloatingPoint.cpp	/^void FPS::handleCondMovFP(MachineBasicBlock::iterator &I) {$/;"	f	class:FPS
handleConstantPoolUser	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::handleConstantPoolUser(unsigned CPUserIndex) {$/;"	f	class:ARMConstantIslands
handleDebugValue	CodeGen/LiveDebugVariables.cpp	/^bool LDVImpl::handleDebugValue(MachineInstr *MI, SlotIndex Idx) {$/;"	f	class:LDVImpl
handleEndBlock	Transforms/Scalar/DeadStoreElimination.cpp	/^bool DSE::handleEndBlock(BasicBlock &BB) {$/;"	f	class:DSE
handleFixup	MC/MCAssembler.cpp	/^uint64_t MCAssembler::handleFixup(const MCAsmLayout &Layout,$/;"	f	class:MCAssembler
handleJTSwitchCase	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^bool SelectionDAGBuilder::handleJTSwitchCase(CaseRec &CR,$/;"	f	class:SelectionDAGBuilder
handleLoadOrStore	Transforms/Scalar/SROA.cpp	/^  bool handleLoadOrStore(Type *Ty, Instruction &I, int64_t Offset) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
handleLoadOrStore	Transforms/Scalar/SROA.cpp	/^  void handleLoadOrStore(Type *Ty, Instruction &I, int64_t Offset) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
handleMove	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::handleMove(MachineInstr* MI, bool UpdateFlags) {$/;"	f	class:LiveIntervals
handleMoveDown	CodeGen/LiveIntervalAnalysis.cpp	/^  void handleMoveDown(LiveInterval &LI) {$/;"	f	class:LiveIntervals::HMEditor	file:
handleMoveIntoBundle	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::handleMoveIntoBundle(MachineInstr* MI,$/;"	f	class:LiveIntervals
handleMoveUp	CodeGen/LiveIntervalAnalysis.cpp	/^  void handleMoveUp(LiveInterval &LI) {$/;"	f	class:LiveIntervals::HMEditor	file:
handleOneArgFP	Target/X86/X86FloatingPoint.cpp	/^void FPS::handleOneArgFP(MachineBasicBlock::iterator &I) {$/;"	f	class:FPS
handleOneArgFPRW	Target/X86/X86FloatingPoint.cpp	/^void FPS::handleOneArgFPRW(MachineBasicBlock::iterator &I) {$/;"	f	class:FPS
handleOverflow	Support/APFloat.cpp	/^APFloat::handleOverflow(roundingMode rounding_mode)$/;"	f	class:APFloat
handlePathInfo	Analysis/PathProfileInfo.cpp	/^void PathProfileLoaderPass::handlePathInfo () {$/;"	f	class:PathProfileLoaderPass
handleRegisterDef	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::handleRegisterDef(MachineBasicBlock *MBB,$/;"	f	class:LiveIntervals
handleSROACandidate	Analysis/InlineCost.cpp	/^bool CallAnalyzer::handleSROACandidate(bool IsSROAValid,$/;"	f	class:CallAnalyzer
handleSmallSwitchRange	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^bool SelectionDAGBuilder::handleSmallSwitchRange(CaseRec& CR,$/;"	f	class:SelectionDAGBuilder
handleSpecialFP	Target/X86/X86FloatingPoint.cpp	/^void FPS::handleSpecialFP(MachineBasicBlock::iterator &I) {$/;"	f	class:FPS
handleThroughOperands	CodeGen/RegAllocFast.cpp	/^void RAFast::handleThroughOperands(MachineInstr *MI,$/;"	f	class:RAFast
handleTwoArgFP	Target/X86/X86FloatingPoint.cpp	/^void FPS::handleTwoArgFP(MachineBasicBlock::iterator &I) {$/;"	f	class:FPS
handleVirtualRegisterDef	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::handleVirtualRegisterDef(MachineBasicBlock *mbb,$/;"	f	class:LiveIntervals
handleYAMLDirective	Support/YAMLParser.cpp	/^void Stream::handleYAMLDirective(const Token &t) {$/;"	f	class:Stream
handleZeroArgFP	Target/X86/X86FloatingPoint.cpp	/^void FPS::handleZeroArgFP(MachineBasicBlock::iterator &I) {$/;"	f	class:FPS
handle_type	Support/Windows/Windows.h	/^  typedef HANDLE handle_type;$/;"	t	struct:CommonHandleTraits
handle_type	Support/Windows/Windows.h	/^  typedef HCRYPTPROV handle_type;$/;"	t	struct:CryptContextTraits
handle_type	Support/Windows/Windows.h	/^  typedef typename HandleTraits::handle_type handle_type;$/;"	t	class:ScopedHandle
has3DNow	Target/X86/X86Subtarget.h	/^  bool has3DNow() const { return X863DNowLevel >= ThreeDNow; }$/;"	f	class:llvm::X86Subtarget
has3DNowA	Target/X86/X86Subtarget.h	/^  bool has3DNowA() const { return X863DNowLevel >= ThreeDNowA; }$/;"	f	class:llvm::X86Subtarget
has64BitSupport	Target/PowerPC/PPCSubtarget.h	/^  bool has64BitSupport() const { return Has64BitSupport; }$/;"	f	class:llvm::PPCSubtarget
hasAES	Target/X86/X86Subtarget.h	/^  bool hasAES() const { return HasAES; }$/;"	f	class:llvm::X86Subtarget
hasALoadOrStore	Transforms/Scalar/ScalarReplAggregates.cpp	/^      bool hasALoadOrStore : 1;$/;"	m	struct:__anon521::SROA::AllocaInfo	file:
hasARMOps	Target/ARM/ARMSubtarget.h	/^  bool hasARMOps() const { return !NoARM; }$/;"	f	class:llvm::ARMSubtarget
hasAVX	Target/X86/X86Subtarget.h	/^  bool hasAVX() const { return X86SSELevel >= AVX; }$/;"	f	class:llvm::X86Subtarget
hasAVX2	Target/X86/X86Subtarget.h	/^  bool hasAVX2() const { return X86SSELevel >= AVX2; }$/;"	f	class:llvm::X86Subtarget
hasAddressTaken	VMCore/Function.cpp	/^bool Function::hasAddressTaken(const User* *PutOffender) const {$/;"	f	class:Function
hasAddressTakenAndUsed	Transforms/Scalar/JumpThreading.cpp	/^static bool hasAddressTakenAndUsed(BasicBlock *BB) {$/;"	f	file:
hasAlignmentAttr	VMCore/Attributes.cpp	/^bool AttrBuilder::hasAlignmentAttr() const {$/;"	f	class:AttrBuilder
hasAllConstantIndices	VMCore/Instructions.cpp	/^bool GetElementPtrInst::hasAllConstantIndices() const {$/;"	f	class:GetElementPtrInst
hasAllZeroIndices	VMCore/Instructions.cpp	/^bool GetElementPtrInst::hasAllZeroIndices() const {$/;"	f	class:GetElementPtrInst
hasAltivec	Target/PowerPC/PPCSubtarget.h	/^  bool hasAltivec() const { return HasAltivec; }$/;"	f	class:llvm::PPCSubtarget
hasAnyUseOfValue	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SDNode::hasAnyUseOfValue(unsigned Value) const {$/;"	f	class:SDNode
hasAtomAddF32	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasAtomAddF32() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
hasAtomRedG32	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasAtomRedG32() const { return SmVersion >= 11; }$/;"	f	class:llvm::NVPTXSubtarget
hasAtomRedG64	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasAtomRedG64() const { return SmVersion >= 12; }$/;"	f	class:llvm::NVPTXSubtarget
hasAtomRedGen32	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasAtomRedGen32() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
hasAtomRedGen64	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasAtomRedGen64() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
hasAtomRedS32	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasAtomRedS32() const { return SmVersion >= 12; }$/;"	f	class:llvm::NVPTXSubtarget
hasAtomRedS64	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasAtomRedS64() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
hasAttrSomewhere	VMCore/Attributes.cpp	/^bool AttrListPtr::hasAttrSomewhere(Attributes::AttrVal Attr) const {$/;"	f	class:AttrListPtr
hasAttribute	VMCore/Attributes.cpp	/^bool AttrBuilder::hasAttribute(Attributes::AttrVal A) const {$/;"	f	class:AttrBuilder
hasAttribute	VMCore/Attributes.cpp	/^bool Attributes::hasAttribute(AttrVal Val) const {$/;"	f	class:Attributes
hasAttribute	VMCore/Attributes.cpp	/^bool AttributesImpl::hasAttribute(uint64_t A) const {$/;"	f	class:AttributesImpl
hasAttributes	VMCore/Attributes.cpp	/^bool AttrBuilder::hasAttributes() const {$/;"	f	class:AttrBuilder
hasAttributes	VMCore/Attributes.cpp	/^bool AttrBuilder::hasAttributes(const Attributes &A) const {$/;"	f	class:AttrBuilder
hasAttributes	VMCore/Attributes.cpp	/^bool Attributes::hasAttributes() const {$/;"	f	class:Attributes
hasAttributes	VMCore/Attributes.cpp	/^bool Attributes::hasAttributes(const Attributes &A) const {$/;"	f	class:Attributes
hasAttributes	VMCore/Attributes.cpp	/^bool AttributesImpl::hasAttributes() const {$/;"	f	class:AttributesImpl
hasAttributes	VMCore/Attributes.cpp	/^bool AttributesImpl::hasAttributes(const Attributes &A) const {$/;"	f	class:AttributesImpl
hasBMI	Target/X86/X86Subtarget.h	/^  bool hasBMI() const { return HasBMI; }$/;"	f	class:llvm::X86Subtarget
hasBMI2	Target/X86/X86Subtarget.h	/^  bool hasBMI2() const { return HasBMI2; }$/;"	f	class:llvm::X86Subtarget
hasBarrel	Target/MBlaze/MBlazeSubtarget.h	/^  bool hasBarrel() const { return HasBarrel; }$/;"	f	class:llvm::MBlazeSubtarget
hasBaseOrIndexReg	Target/X86/X86ISelDAGToDAG.cpp	/^    bool hasBaseOrIndexReg() const {$/;"	f	struct:__anon371::X86ISelAddressMode
hasBasePointer	Target/ARM/ARMBaseRegisterInfo.cpp	/^bool ARMBaseRegisterInfo::hasBasePointer(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
hasBasePointer	Target/X86/X86RegisterInfo.cpp	/^bool X86RegisterInfo::hasBasePointer(const MachineFunction &MF) const {$/;"	f	class:X86RegisterInfo
hasBitCount	Target/Mips/MipsSubtarget.h	/^  bool hasBitCount()  const { return HasBitCount; }$/;"	f	class:llvm::MipsSubtarget
hasBlockValue	Analysis/LazyValueInfo.cpp	/^bool LazyValueInfoCache::hasBlockValue(Value *Val, BasicBlock *BB) {$/;"	f	class:LazyValueInfoCache
hasBrkPt	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasBrkPt() const { return SmVersion >= 11; }$/;"	f	class:llvm::NVPTXSubtarget
hasByValAttr	VMCore/Function.cpp	/^bool Argument::hasByValAttr() const {$/;"	f	class:Argument
hasCMov	Target/X86/X86Subtarget.h	/^  bool hasCMov() const { return HasCMov; }$/;"	f	class:llvm::X86Subtarget
hasChanged	Transforms/Utils/SimplifyIndVar.cpp	/^    bool hasChanged() const { return Changed; }$/;"	f	class:__anon463::SimplifyIndvar
hasChildren	DebugInfo/DWARFAbbreviationDeclaration.h	/^  bool hasChildren() const { return HasChildren; }$/;"	f	class:llvm::DWARFAbbreviationDeclaration
hasChildren	DebugInfo/DWARFDebugInfoEntry.h	/^  bool hasChildren() const { return !isNULL() && AbbrevDecl->hasChildren(); }$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
hasClobberLR	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  bool hasClobberLR() const { return HasClobberLR; }$/;"	f	class:llvm::HexagonMachineFunctionInfo
hasCmpxchg16b	Target/X86/X86Subtarget.h	/^  bool hasCmpxchg16b() const { return HasCmpxchg16b; }$/;"	f	class:llvm::X86Subtarget
hasComputableLoopEvolution	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::hasComputableLoopEvolution(const SCEV *S, const Loop *L) {$/;"	f	class:ScalarEvolution
hasConcreteDef	Transforms/Scalar/IndVarSimplify.cpp	/^static bool hasConcreteDef(Value *V) {$/;"	f	file:
hasConcreteDefImpl	Transforms/Scalar/IndVarSimplify.cpp	/^static bool hasConcreteDefImpl(Value *V, SmallPtrSet<Value*, 8> &Visited,$/;"	f	file:
hasCondMov	Target/Mips/MipsSubtarget.h	/^  bool hasCondMov()   const { return HasCondMov; }$/;"	f	class:llvm::MipsSubtarget
hasConstantValue	VMCore/Instructions.cpp	/^Value *PHINode::hasConstantValue() const {$/;"	f	class:PHINode
hasContent	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  bool hasContent() const { return !CUDie->getChildren().empty(); }$/;"	f	class:llvm::CompileUnit
hasCustomConstantPool	Target/ARM/ARMJITInfo.h	/^    virtual bool hasCustomConstantPool() const { return true; }$/;"	f	class:llvm::ARMJITInfo
hasCustomJumpTables	Target/ARM/ARMJITInfo.h	/^    virtual bool hasCustomJumpTables() const { return true; }$/;"	f	class:llvm::ARMJITInfo
hasD16	Target/ARM/ARMSubtarget.h	/^  bool hasD16() const { return HasD16; }$/;"	f	class:llvm::ARMSubtarget
hasDSP	Target/Mips/MipsSubtarget.h	/^  bool hasDSP() const { return HasDSP; }$/;"	f	class:llvm::MipsSubtarget
hasDSPR2	Target/Mips/MipsSubtarget.h	/^  bool hasDSPR2() const { return HasDSPR2; }$/;"	f	class:llvm::MipsSubtarget
hasDataBarrier	Target/ARM/ARMSubtarget.h	/^  bool hasDataBarrier() const { return HasDataBarrier; }$/;"	f	class:llvm::ARMSubtarget
hasDedicatedExits	Analysis/LoopInfo.cpp	/^bool Loop::hasDedicatedExits() const {$/;"	f	class:Loop
hasDef	CodeGen/InlineSpiller.cpp	/^    bool hasDef() const { return DefByOrigPHI || DefMI; }$/;"	f	struct:__anon155::InlineSpiller::SibValueInfo
hasDisassembler	Support/Disassembler.cpp	/^bool llvm::sys::hasDisassembler()$/;"	f	class:llvm::sys
hasDiv	Target/MBlaze/MBlazeSubtarget.h	/^  bool hasDiv()    const { return HasDiv; }$/;"	f	class:llvm::MBlazeSubtarget
hasDivide	Target/ARM/ARMSubtarget.h	/^  bool hasDivide() const { return HasHardwareDivide; }$/;"	f	class:llvm::ARMSubtarget
hasDivideInARMMode	Target/ARM/ARMSubtarget.h	/^  bool hasDivideInARMMode() const { return HasHardwareDivideInARM; }$/;"	f	class:llvm::ARMSubtarget
hasDomain	CodeGen/ExecutionDepsFix.cpp	/^  bool hasDomain(unsigned domain) const {$/;"	f	struct:__anon118::DomainValue
hasDouble	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasDouble() const { return SmVersion >= 13; }$/;"	f	class:llvm::NVPTXSubtarget
hasDwarfAccelTables	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool hasDwarfAccelTables;$/;"	m	class:llvm::DwarfDebug
hasEdgeDestLabels	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static bool hasEdgeDestLabels() {$/;"	f	struct:llvm::DOTGraphTraits
hasError	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  bool hasError() { return HasError; }$/;"	f	class:llvm::RuntimeDyldImpl
hasF16C	Target/X86/X86Subtarget.h	/^  bool hasF16C() const { return HasF16C; }$/;"	f	class:llvm::X86Subtarget
hasF32FTZ	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasF32FTZ() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
hasFMA	Target/X86/X86Subtarget.h	/^  bool hasFMA() const { return HasFMA; }$/;"	f	class:llvm::X86Subtarget
hasFMA4	Target/X86/X86Subtarget.h	/^  bool hasFMA4() const { return HasFMA4 && !HasFMA; }$/;"	f	class:llvm::X86Subtarget
hasFMAF32	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasFMAF32() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
hasFMAF64	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasFMAF64() const { return SmVersion >= 13; }$/;"	f	class:llvm::NVPTXSubtarget
hasFP	Target/ARM/ARMFrameLowering.cpp	/^bool ARMFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:ARMFrameLowering
hasFP	Target/CellSPU/SPUFrameLowering.cpp	/^bool SPUFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:SPUFrameLowering
hasFP	Target/Hexagon/HexagonFrameLowering.cpp	/^bool HexagonFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:HexagonFrameLowering
hasFP	Target/MBlaze/MBlazeFrameLowering.cpp	/^bool MBlazeFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:MBlazeFrameLowering
hasFP	Target/MSP430/MSP430FrameLowering.cpp	/^bool MSP430FrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:MSP430FrameLowering
hasFP	Target/Mips/MipsFrameLowering.cpp	/^bool MipsFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:MipsFrameLowering
hasFP	Target/NVPTX/NVPTXFrameLowering.cpp	/^bool NVPTXFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:NVPTXFrameLowering
hasFP	Target/PowerPC/PPCFrameLowering.cpp	/^bool PPCFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:PPCFrameLowering
hasFP	Target/Sparc/SparcFrameLowering.h	/^  bool hasFP(const MachineFunction &MF) const { return false; }$/;"	f	class:llvm::SparcFrameLowering
hasFP	Target/X86/X86FrameLowering.cpp	/^bool X86FrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:X86FrameLowering
hasFP	Target/XCore/XCoreFrameLowering.cpp	/^bool XCoreFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:XCoreFrameLowering
hasFP16	Target/ARM/ARMSubtarget.h	/^  bool hasFP16() const { return HasFP16; }$/;"	f	class:llvm::ARMSubtarget
hasFPCMov	Target/X86/X86ISelLowering.cpp	/^static bool hasFPCMov(unsigned X86CC) {$/;"	f	file:
hasFPU	Target/MBlaze/MBlazeSubtarget.h	/^  bool hasFPU()    const { return HasFPU; }$/;"	f	class:llvm::MBlazeSubtarget
hasFSGSBase	Target/X86/X86Subtarget.h	/^  bool hasFSGSBase() const { return HasFSGSBase; }$/;"	f	class:llvm::X86Subtarget
hasFSQRT	Target/PowerPC/PPCSubtarget.h	/^  bool hasFSQRT() const { return HasFSQRT; }$/;"	f	class:llvm::PPCSubtarget
hasFastCall	Target/PowerPC/PPCMachineFunctionInfo.h	/^  bool hasFastCall() const { return HasFastCall;}$/;"	f	class:llvm::PPCFunctionInfo
hasFlag	MC/SubtargetFeature.cpp	/^static inline bool hasFlag(const StringRef Feature) {$/;"	f	file:
hasFnAttr	VMCore/Instructions.cpp	/^bool CallInst::hasFnAttr(Attributes::AttrVal A) const {$/;"	f	class:CallInst
hasFnAttr	VMCore/Instructions.cpp	/^bool InvokeInst::hasFnAttr(Attributes::AttrVal A) const {$/;"	f	class:InvokeInst
hasGC	VMCore/Function.cpp	/^bool Function::hasGC() const {$/;"	f	class:Function
hasGarbage	VMCore/LeaksContext.h	/^  bool hasGarbage(const std::string& Message) {$/;"	f	struct:llvm::LeakDetectorImpl
hasGenericLdSt	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasGenericLdSt() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
hasHWROT32	Target/NVPTX/NVPTXSubtarget.h	/^  inline bool hasHWROT32() const { return false; }$/;"	f	class:llvm::NVPTXSubtarget
hasHighOperandLatency	Target/ARM/ARMBaseInstrInfo.cpp	/^hasHighOperandLatency(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
hasHighOperandLatency	Target/X86/X86InstrInfo.cpp	/^hasHighOperandLatency(const InstrItineraryData *ItinData,$/;"	f	class:X86InstrInfo
hasISEL	Target/PowerPC/PPCSubtarget.h	/^  bool hasISEL() const { return HasISEL; }$/;"	f	class:llvm::PPCSubtarget
hasITBlocks	Target/ARM/ARMMachineFunctionInfo.h	/^  bool hasITBlocks() const { return HasITBlocks; }$/;"	f	class:llvm::ARMFunctionInfo
hasImm	Target/X86/MCTargetDesc/X86BaseInfo.h	/^  inline bool hasImm(uint64_t TSFlags) {$/;"	f	namespace:llvm::X86II
hasImmInstruction	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^static bool hasImmInstruction(MachineBasicBlock::iterator &candidate) {$/;"	f	file:
hasIncs	Transforms/Scalar/LoopStrengthReduce.cpp	/^  bool hasIncs() const { return Incs.size() >= 2; }$/;"	f	struct:__anon518::IVChain
hasIndices	VMCore/Constants.cpp	/^bool ConstantExpr::hasIndices() const {$/;"	f	class:ConstantExpr
hasInlineAsmMemConstraint	CodeGen/Analysis.cpp	/^llvm::hasInlineAsmMemConstraint(InlineAsm::ConstraintInfoVector &CInfos,$/;"	f	class:llvm
hasInstrItineraries	CodeGen/TargetSchedule.cpp	/^bool TargetSchedModel::hasInstrItineraries() const {$/;"	f	class:TargetSchedModel
hasInstrSchedModel	CodeGen/TargetSchedule.cpp	/^bool TargetSchedModel::hasInstrSchedModel() const {$/;"	f	class:TargetSchedModel
hasInstrumentation	Transforms/Instrumentation/PathProfiling.cpp	/^bool BLInstrumentationEdge::hasInstrumentation() {$/;"	f	class:BLInstrumentationEdge
hasInterference	CodeGen/InterferenceCache.h	/^    bool hasInterference() {$/;"	f	class:llvm::InterferenceCache::Cursor
hasItin	Target/MBlaze/MBlazeSubtarget.h	/^  bool hasItin()   const { return HasItin; }$/;"	f	class:llvm::MBlazeSubtarget
hasKnownAlignment	Transforms/IPO/ConstantMerge.cpp	/^bool ConstantMerge::hasKnownAlignment(GlobalVariable *GV) const {$/;"	f	class:ConstantMerge
hasLDU	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasLDU() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
hasLZCNT	Target/X86/X86Subtarget.h	/^  bool hasLZCNT() const { return HasLZCNT; }$/;"	f	class:llvm::X86Subtarget
hasLazyResolverStub	Target/PowerPC/PPCSubtarget.cpp	/^bool PPCSubtarget::hasLazyResolverStub(const GlobalValue *GV,$/;"	f	class:PPCSubtarget
hasLifetimeMarkers	Transforms/Utils/InlineFunction.cpp	/^static bool hasLifetimeMarkers(AllocaInst *AI) {$/;"	f	file:
hasLiveCondCodeDef	Target/X86/X86InstrInfo.cpp	/^static bool hasLiveCondCodeDef(MachineInstr *MI) {$/;"	f	file:
hasLivePhysRegDefUses	CodeGen/MachineCSE.cpp	/^bool MachineCSE::hasLivePhysRegDefUses(const MachineInstr *MI,$/;"	f	class:MachineCSE
hasLoadArgs	Target/MBlaze/MBlazeMachineFunction.h	/^  bool hasLoadArgs() const { return HasLoadArgs; }$/;"	f	class:llvm::MBlazeFunctionInfo
hasLoadFromStackSlot	CodeGen/TargetInstrInfoImpl.cpp	/^bool TargetInstrInfoImpl::hasLoadFromStackSlot(const MachineInstr *MI,$/;"	f	class:TargetInstrInfoImpl
hasLoopHazard	Target/ARM/MLxExpansionPass.cpp	/^bool MLxExpansion::hasLoopHazard(MachineInstr *MI) const {$/;"	f	class:MLxExpansion
hasLoopInvariantBackedgeTakenCount	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::hasLoopInvariantBackedgeTakenCount(const Loop *L) {$/;"	f	class:ScalarEvolution
hasLoopInvariantOperands	Analysis/LoopInfo.cpp	/^bool Loop::hasLoopInvariantOperands(Instruction *I) const {$/;"	f	class:Loop
hasLowDefLatency	CodeGen/TargetInstrInfoImpl.cpp	/^bool TargetInstrInfoImpl::hasLowDefLatency(const InstrItineraryData *ItinData,$/;"	f	class:TargetInstrInfoImpl
hasLowDefLatency	Target/ARM/ARMBaseInstrInfo.cpp	/^hasLowDefLatency(const InstrItineraryData *ItinData,$/;"	f	class:ARMBaseInstrInfo
hasMFOCRF	Target/PowerPC/PPCSubtarget.h	/^  bool hasMFOCRF() const { return HasMFOCRF; }$/;"	f	class:llvm::PPCSubtarget
hasMMX	Target/X86/X86Subtarget.h	/^  bool hasMMX() const { return X86SSELevel >= MMX; }$/;"	f	class:llvm::X86Subtarget
hasMOVBE	Target/X86/X86Subtarget.h	/^  bool hasMOVBE() const { return HasMOVBE; }$/;"	f	class:llvm::X86Subtarget
hasMPExtension	Target/ARM/ARMSubtarget.h	/^  bool hasMPExtension() const { return HasMPExtension; }$/;"	f	class:llvm::ARMSubtarget
hasMagicNumber	Support/Path.cpp	/^bool Path::hasMagicNumber(StringRef Magic) const {$/;"	f	class:Path
hasMemoryWrite	Transforms/Scalar/DeadStoreElimination.cpp	/^static bool hasMemoryWrite(Instruction *I, const TargetLibraryInfo *TLI) {$/;"	f	file:
hasMinMax	Target/Mips/MipsSubtarget.h	/^  bool hasMinMax()    const { return HasMinMax; }$/;"	f	class:llvm::MipsSubtarget
hasMips32	Target/Mips/MipsSubtarget.h	/^  bool hasMips32() const { return MipsArchVersion >= Mips32; }$/;"	f	class:llvm::MipsSubtarget
hasMips32r2	Target/Mips/MipsSubtarget.h	/^  bool hasMips32r2() const { return MipsArchVersion == Mips32r2 ||$/;"	f	class:llvm::MipsSubtarget
hasMips32r2Or64	Target/Mips/MipsSubtarget.h	/^  bool hasMips32r2Or64() const { return hasMips32r2() || hasMips64(); }$/;"	f	class:llvm::MipsSubtarget
hasMips64	Target/Mips/MipsSubtarget.h	/^  bool hasMips64() const { return MipsArchVersion >= Mips64; }$/;"	f	class:llvm::MipsSubtarget
hasMips64r2	Target/Mips/MipsSubtarget.h	/^  bool hasMips64r2() const { return MipsArchVersion == Mips64r2; }$/;"	f	class:llvm::MipsSubtarget
hasModifier	Target/ARM/ARMConstantPoolValue.h	/^  bool hasModifier() const { return Modifier != ARMCP::no_modifier; }$/;"	f	class:llvm::ARMConstantPoolValue
hasMul	Target/MBlaze/MBlazeSubtarget.h	/^  bool hasMul()    const { return HasMul; }$/;"	f	class:llvm::MBlazeSubtarget
hasMul64	Target/MBlaze/MBlazeSubtarget.h	/^  bool hasMul64()  const { return HasMul64; }$/;"	f	class:llvm::MBlazeSubtarget
hasMulDivAdd	Target/Mips/MipsSubtarget.h	/^  bool hasMulDivAdd() const { return HasMulDivAdd; }$/;"	f	class:llvm::MipsSubtarget
hasNEON	Target/ARM/ARMSubtarget.h	/^  bool hasNEON() const { return HasNEON;  }$/;"	f	class:llvm::ARMSubtarget
hasNOP	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::hasNOP() const {$/;"	f	class:ARMBaseInstrInfo
hasNOP	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  bool hasNOP() const {$/;"	f	class:__anon284::ARMAsmBackend
hasNUses	VMCore/Value.cpp	/^bool Value::hasNUses(unsigned N) const {$/;"	f	class:Value
hasNUsesOfValue	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SDNode::hasNUsesOfValue(unsigned NUses, unsigned Value) const {$/;"	f	class:SDNode
hasNUsesOrMore	VMCore/Value.cpp	/^bool Value::hasNUsesOrMore(unsigned N) const {$/;"	f	class:Value
hasNestAttr	VMCore/Function.cpp	/^bool Argument::hasNestAttr() const {$/;"	f	class:Argument
hasNoAliasAttr	Analysis/MemoryBuiltins.cpp	/^static bool hasNoAliasAttr(const Value *V, bool LookThroughBitCast) {$/;"	f	file:
hasNoAliasAttr	VMCore/Function.cpp	/^bool Argument::hasNoAliasAttr() const {$/;"	f	class:Argument
hasNoCaptureAttr	VMCore/Function.cpp	/^bool Argument::hasNoCaptureAttr() const {$/;"	f	class:Argument
hasNoSignedWrap	VMCore/Instructions.cpp	/^bool BinaryOperator::hasNoSignedWrap() const {$/;"	f	class:BinaryOperator
hasNoUnsignedWrap	VMCore/Instructions.cpp	/^bool BinaryOperator::hasNoUnsignedWrap() const {$/;"	f	class:BinaryOperator
hasNoVMLxHazardUse	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::hasNoVMLxHazardUse(SDNode *N) const {$/;"	f	class:ARMDAGToDAGISel
hasNodeAddressLabel	CodeGen/ScheduleDAGPrinter.cpp	/^    static bool hasNodeAddressLabel(const SUnit *Node,$/;"	f	struct:llvm::DOTGraphTraits
hasNodeAddressLabel	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static bool hasNodeAddressLabel(const SDNode *Node,$/;"	f	struct:llvm::DOTGraphTraits
hasNormalLoadOperand	Target/ARM/ARMISelLowering.cpp	/^static bool hasNormalLoadOperand(SDNode *N) {$/;"	f	file:
hasObjCCategory	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static bool hasObjCCategory(StringRef Name) {$/;"	f	file:
hasOneNonDBGUse	CodeGen/MachineRegisterInfo.cpp	/^bool MachineRegisterInfo::hasOneNonDBGUse(unsigned RegNo) const {$/;"	f	class:MachineRegisterInfo
hasOnlyLiveInOpers	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool hasOnlyLiveInOpers(const SUnit *SU) {$/;"	f	file:
hasOnlyLiveOutUses	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool hasOnlyLiveOutUses(const SUnit *SU) {$/;"	f	file:
hasOperand	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::hasOperand(const SCEV *S, const SCEV *Op) const {$/;"	f	class:ScalarEvolution
hasOrderedMemoryRef	CodeGen/MachineInstr.cpp	/^bool MachineInstr::hasOrderedMemoryRef() const {$/;"	f	class:MachineInstr
hasOtherReachingDefs	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::hasOtherReachingDefs(LiveInterval &IntA,$/;"	f	class:RegisterCoalescer
hasPCLMUL	Target/X86/X86Subtarget.h	/^  bool hasPCLMUL() const { return HasPCLMUL; }$/;"	f	class:llvm::X86Subtarget
hasPCMP	Target/MBlaze/MBlazeSubtarget.h	/^  bool hasPCMP()   const { return HasPatCmp; }$/;"	f	class:llvm::MBlazeSubtarget
hasPHIKill	CodeGen/LiveIntervalAnalysis.cpp	/^LiveIntervals::hasPHIKill(const LiveInterval &LI, const VNInfo *VNI) const {$/;"	f	class:LiveIntervals
hasPOPCNT	Target/X86/X86Subtarget.h	/^  bool hasPOPCNT() const { return HasPOPCNT; }$/;"	f	class:llvm::X86Subtarget
hasPartialRegUpdate	Target/X86/X86InstrInfo.cpp	/^static bool hasPartialRegUpdate(unsigned Opcode) {$/;"	f	file:
hasPhys	CodeGen/VirtRegMap.h	/^    bool hasPhys(unsigned virtReg) const {$/;"	f	class:llvm::VirtRegMap
hasPredecessor	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SDNode::hasPredecessor(const SDNode *N) const {$/;"	f	class:SDNode
hasPredecessorHelper	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SDNode::hasPredecessorHelper(const SDNode *N,$/;"	f	class:SDNode
hasPreferredPhys	CodeGen/VirtRegMap.h	/^    bool hasPreferredPhys(unsigned VirtReg) {$/;"	f	class:llvm::VirtRegMap
hasPropertyInBundle	CodeGen/MachineInstr.cpp	/^bool MachineInstr::hasPropertyInBundle(unsigned Mask, QueryType Type) const {$/;"	f	class:MachineInstr
hasRAS	Target/ARM/ARMSubtarget.h	/^  bool hasRAS() const { return HasRAS; }$/;"	f	class:llvm::ARMSubtarget
hasRAWHazard	Target/ARM/ARMHazardRecognizer.cpp	/^static bool hasRAWHazard(MachineInstr *DefMI, MachineInstr *MI,$/;"	f	file:
hasRAWHazard	Target/ARM/MLxExpansionPass.cpp	/^bool MLxExpansion::hasRAWHazard(unsigned Reg, MachineInstr *MI) const {$/;"	f	class:MLxExpansion
hasRDRAND	Target/X86/X86Subtarget.h	/^  bool hasRDRAND() const { return HasRDRAND; }$/;"	f	class:llvm::X86Subtarget
hasROT32	Target/NVPTX/NVPTXSubtarget.h	/^  inline bool hasROT32() const { return hasHWROT32() || hasSWROT32() ; }$/;"	f	class:llvm::NVPTXSubtarget
hasROT64	Target/NVPTX/NVPTXSubtarget.h	/^  inline bool hasROT64() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
hasRawTextSupport	MC/MCAsmStreamer.cpp	/^  virtual bool hasRawTextSupport() const { return true; }$/;"	f	class:__anon214::MCAsmStreamer
hasRefs	CodeGen/InterferenceCache.h	/^    bool hasRefs() const { return RefCount > 0; }$/;"	f	class:llvm::InterferenceCache::Entry
hasRegAlias	CodeGen/RegisterPressure.cpp	/^static bool hasRegAlias(unsigned Reg, SparseSet<unsigned> &Regs,$/;"	f	file:
hasRegsUsedByUsesOtherThan	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool Formula::hasRegsUsedByUsesOtherThan(size_t LUIdx,$/;"	f	class:Formula
hasRelocationAddend	MC/ELFObjectWriter.cpp	/^    bool hasRelocationAddend() const {$/;"	f	class:__anon225::ELFObjectWriter
hasRelocationAddend	Target/ARM/ARMELFWriterInfo.h	/^    virtual bool hasRelocationAddend() const { return false; }$/;"	f	class:llvm::ARMELFWriterInfo
hasRelocationAddend	Target/MBlaze/MBlazeELFWriterInfo.h	/^    virtual bool hasRelocationAddend() const { return false; }$/;"	f	class:llvm::MBlazeELFWriterInfo
hasRelocationAddend	Target/Mips/MipsELFWriterInfo.h	/^    virtual bool hasRelocationAddend() const { return is64Bit ? true : false; }$/;"	f	class:llvm::MipsELFWriterInfo
hasRelocationAddend	Target/X86/X86ELFWriterInfo.h	/^    virtual bool hasRelocationAddend() const { return is64Bit ? true : false; }$/;"	f	class:llvm::X86ELFWriterInfo
hasReplacement	Target/MBlaze/MBlazeMachineFunction.h	/^  bool hasReplacement(int OFI) const {$/;"	f	class:llvm::MBlazeFunctionInfo
hasReservedCallFrame	Target/ARM/ARMFrameLowering.cpp	/^bool ARMFrameLowering::hasReservedCallFrame(const MachineFunction &MF) const {$/;"	f	class:ARMFrameLowering
hasReservedCallFrame	Target/ARM/Thumb1FrameLowering.cpp	/^bool Thumb1FrameLowering::hasReservedCallFrame(const MachineFunction &MF) const{$/;"	f	class:Thumb1FrameLowering
hasReservedCallFrame	Target/MSP430/MSP430FrameLowering.cpp	/^bool MSP430FrameLowering::hasReservedCallFrame(const MachineFunction &MF) const {$/;"	f	class:MSP430FrameLowering
hasReservedCallFrame	Target/Mips/Mips16FrameLowering.cpp	/^Mips16FrameLowering::hasReservedCallFrame(const MachineFunction &MF) const {$/;"	f	class:Mips16FrameLowering
hasReservedCallFrame	Target/Mips/MipsSEFrameLowering.cpp	/^MipsSEFrameLowering::hasReservedCallFrame(const MachineFunction &MF) const {$/;"	f	class:MipsSEFrameLowering
hasReservedCallFrame	Target/X86/X86FrameLowering.cpp	/^bool X86FrameLowering::hasReservedCallFrame(const MachineFunction &MF) const {$/;"	f	class:X86FrameLowering
hasReservedSpillSlot	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::hasReservedSpillSlot(const MachineFunction &MF,$/;"	f	class:PPCRegisterInfo
hasReservedSpillSlot	Target/X86/X86RegisterInfo.cpp	/^bool X86RegisterInfo::hasReservedSpillSlot(const MachineFunction &MF,$/;"	f	class:X86RegisterInfo
hasResources	CodeGen/MachineTraceMetrics.h	/^    bool hasResources() const { return InstrCount != ~0u; }$/;"	f	struct:llvm::MachineTraceMetrics::FixedBlockInfo
hasSEInReg	Target/Mips/MipsSubtarget.h	/^  bool hasSEInReg()   const { return HasSEInReg; }$/;"	f	class:llvm::MipsSubtarget
hasSSE1	Target/X86/X86Subtarget.h	/^  bool hasSSE1() const { return X86SSELevel >= SSE1; }$/;"	f	class:llvm::X86Subtarget
hasSSE2	Target/X86/X86Subtarget.h	/^  bool hasSSE2() const { return X86SSELevel >= SSE2; }$/;"	f	class:llvm::X86Subtarget
hasSSE3	Target/X86/X86Subtarget.h	/^  bool hasSSE3() const { return X86SSELevel >= SSE3; }$/;"	f	class:llvm::X86Subtarget
hasSSE41	Target/X86/X86Subtarget.h	/^  bool hasSSE41() const { return X86SSELevel >= SSE41; }$/;"	f	class:llvm::X86Subtarget
hasSSE42	Target/X86/X86Subtarget.h	/^  bool hasSSE42() const { return X86SSELevel >= SSE42; }$/;"	f	class:llvm::X86Subtarget
hasSSE4A	Target/X86/X86Subtarget.h	/^  bool hasSSE4A() const { return HasSSE4A; }$/;"	f	class:llvm::X86Subtarget
hasSSSE3	Target/X86/X86Subtarget.h	/^  bool hasSSSE3() const { return X86SSELevel >= SSSE3; }$/;"	f	class:llvm::X86Subtarget
hasSTFIWX	Target/PowerPC/PPCSubtarget.h	/^  bool hasSTFIWX() const { return HasSTFIWX; }$/;"	f	class:llvm::PPCSubtarget
hasSWROT32	Target/NVPTX/NVPTXSubtarget.h	/^  inline bool hasSWROT32() const {$/;"	f	class:llvm::NVPTXSubtarget
hasSameValue	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolValue::hasSameValue(ARMConstantPoolValue *ACPV) {$/;"	f	class:ARMConstantPoolValue
hasSameValue	Target/ARM/ARMConstantPoolValue.cpp	/^bool ARMConstantPoolConstant::hasSameValue(ARMConstantPoolValue *ACPV) {$/;"	f	class:ARMConstantPoolConstant
hasSameValue	Target/ARM/ARMConstantPoolValue.cpp	/^bool ARMConstantPoolMBB::hasSameValue(ARMConstantPoolValue *ACPV) {$/;"	f	class:ARMConstantPoolMBB
hasSameValue	Target/ARM/ARMConstantPoolValue.cpp	/^bool ARMConstantPoolSymbol::hasSameValue(ARMConstantPoolValue *ACPV) {$/;"	f	class:ARMConstantPoolSymbol
hasSemantics	MC/MCDisassembler/EDDisassembler.h	/^  bool hasSemantics() {$/;"	f	struct:llvm::EDDisassembler
hasSlowDivide	Target/X86/X86Subtarget.h	/^  bool hasSlowDivide() const { return HasSlowDivide; }$/;"	f	class:llvm::X86Subtarget
hasSqrt	Target/MBlaze/MBlazeSubtarget.h	/^  bool hasSqrt()   const { return HasSqrt; }$/;"	f	class:llvm::MBlazeSubtarget
hasStackFrame	Target/ARM/ARMMachineFunctionInfo.h	/^  bool hasStackFrame() const { return HasStackFrame; }$/;"	f	class:llvm::ARMFunctionInfo
hasStandardEncoding	Target/Mips/MipsSubtarget.h	/^  bool hasStandardEncoding() const { return !inMips16Mode(); }$/;"	f	class:llvm::MipsSubtarget
hasStoreToStackSlot	CodeGen/TargetInstrInfoImpl.cpp	/^bool TargetInstrInfoImpl::hasStoreToStackSlot(const MachineInstr *MI,$/;"	f	class:TargetInstrInfoImpl
hasStoreVarArgs	Target/MBlaze/MBlazeMachineFunction.h	/^  bool hasStoreVarArgs() const { return HasStoreVarArgs; }$/;"	f	class:llvm::MBlazeFunctionInfo
hasStructRetAttr	VMCore/Function.cpp	/^bool Argument::hasStructRetAttr() const {$/;"	f	class:Argument
hasSubelementAccess	Transforms/Scalar/ScalarReplAggregates.cpp	/^      bool hasSubelementAccess : 1;$/;"	m	struct:__anon521::SROA::AllocaInfo	file:
hasSwap	Target/Mips/MipsSubtarget.h	/^  bool hasSwap()      const { return HasSwap; }$/;"	f	class:llvm::MipsSubtarget
hasSymbolicDisplacement	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^    bool hasSymbolicDisplacement() const {$/;"	f	struct:__anon392::MSP430ISelAddressMode
hasSymbolicDisplacement	Target/X86/X86ISelDAGToDAG.cpp	/^    bool hasSymbolicDisplacement() const {$/;"	f	struct:__anon371::X86ISelAddressMode
hasT2ExtractPack	Target/ARM/ARMSubtarget.h	/^  bool hasT2ExtractPack() const { return HasT2ExtractPack; }$/;"	f	class:llvm::ARMSubtarget
hasTailCall	Target/Hexagon/HexagonFrameLowering.cpp	/^bool HexagonFrameLowering::hasTailCall(MachineBasicBlock &MBB) const {$/;"	f	class:HexagonFrameLowering
hasThumb2	Target/ARM/ARMMachineFunctionInfo.h	/^  bool hasThumb2;$/;"	m	class:llvm::ARMFunctionInfo
hasThumb2	Target/ARM/ARMSubtarget.h	/^  bool hasThumb2() const { return HasThumb2; }$/;"	f	class:llvm::ARMSubtarget
hasThumb2DSP	Target/ARM/ARMSubtarget.h	/^  bool hasThumb2DSP() const { return Thumb2DSP; }$/;"	f	class:llvm::ARMSubtarget
hasTrivialKill	CodeGen/SelectionDAG/FastISel.cpp	/^bool FastISel::hasTrivialKill(const Value *V) const {$/;"	f	class:FastISel
hasUnknownSideEffects	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^static bool hasUnknownSideEffects(MachineBasicBlock::iterator &I) {$/;"	f	file:
hasUnmodeledSideEffects	CodeGen/MachineInstr.cpp	/^bool MachineInstr::hasUnmodeledSideEffects() const {$/;"	f	class:MachineInstr
hasUnsafePHIOrSelectUse	Transforms/Scalar/SROA.cpp	/^  Instruction *hasUnsafePHIOrSelectUse(Instruction *Root, uint64_t &Size) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
hasV2TOps	Target/Hexagon/HexagonSubtarget.h	/^  bool hasV2TOps () const { return HexagonArchVersion >= V2; }$/;"	f	class:llvm::HexagonSubtarget
hasV2TOpsOnly	Target/Hexagon/HexagonSubtarget.h	/^  bool hasV2TOpsOnly () const { return HexagonArchVersion == V2; }$/;"	f	class:llvm::HexagonSubtarget
hasV3TOps	Target/Hexagon/HexagonSubtarget.h	/^  bool hasV3TOps () const { return HexagonArchVersion >= V3; }$/;"	f	class:llvm::HexagonSubtarget
hasV3TOpsOnly	Target/Hexagon/HexagonSubtarget.h	/^  bool hasV3TOpsOnly () const { return HexagonArchVersion == V3; }$/;"	f	class:llvm::HexagonSubtarget
hasV4TOps	Target/ARM/ARMSubtarget.h	/^  bool hasV4TOps()  const { return HasV4TOps;  }$/;"	f	class:llvm::ARMSubtarget
hasV4TOps	Target/Hexagon/HexagonSubtarget.h	/^  bool hasV4TOps () const { return HexagonArchVersion >= V4; }$/;"	f	class:llvm::HexagonSubtarget
hasV4TOpsOnly	Target/Hexagon/HexagonSubtarget.h	/^  bool hasV4TOpsOnly () const { return HexagonArchVersion == V4; }$/;"	f	class:llvm::HexagonSubtarget
hasV5TEOps	Target/ARM/ARMSubtarget.h	/^  bool hasV5TEOps() const { return HasV5TEOps; }$/;"	f	class:llvm::ARMSubtarget
hasV5TOps	Target/ARM/ARMSubtarget.h	/^  bool hasV5TOps()  const { return HasV5TOps;  }$/;"	f	class:llvm::ARMSubtarget
hasV5TOps	Target/Hexagon/HexagonSubtarget.h	/^  bool hasV5TOps () const { return HexagonArchVersion >= V5; }$/;"	f	class:llvm::HexagonSubtarget
hasV5TOpsOnly	Target/Hexagon/HexagonSubtarget.h	/^  bool hasV5TOpsOnly () const { return HexagonArchVersion == V5; }$/;"	f	class:llvm::HexagonSubtarget
hasV6Ops	Target/ARM/ARMSubtarget.h	/^  bool hasV6Ops()   const { return HasV6Ops;   }$/;"	f	class:llvm::ARMSubtarget
hasV6Ops	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool hasV6Ops() const {$/;"	f	class:__anon259::ARMAsmParser	file:
hasV6T2Ops	Target/ARM/ARMSubtarget.h	/^  bool hasV6T2Ops() const { return HasV6T2Ops; }$/;"	f	class:llvm::ARMSubtarget
hasV7Ops	Target/ARM/ARMSubtarget.h	/^  bool hasV7Ops()   const { return HasV7Ops;  }$/;"	f	class:llvm::ARMSubtarget
hasV7Ops	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool hasV7Ops() const {$/;"	f	class:__anon259::ARMAsmParser	file:
hasVFP2	Target/ARM/ARMSubtarget.h	/^  bool hasVFP2() const { return HasVFPv2; }$/;"	f	class:llvm::ARMSubtarget
hasVFP3	Target/ARM/ARMSubtarget.h	/^  bool hasVFP3() const { return HasVFPv3; }$/;"	f	class:llvm::ARMSubtarget
hasVFP4	Target/ARM/ARMSubtarget.h	/^  bool hasVFP4() const { return HasVFPv4; }$/;"	f	class:llvm::ARMSubtarget
hasVFPU	Target/Mips/MipsSubtarget.h	/^  bool hasVFPU() const { return HasVFPU; }$/;"	f	class:llvm::MipsSubtarget
hasVMLxForwarding	Target/ARM/ARMSubtarget.h	/^  bool hasVMLxForwarding() const { return HasVMLxForwarding; }$/;"	f	class:llvm::ARMSubtarget
hasVRegCycleUse	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool hasVRegCycleUse(const SUnit *SU) {$/;"	f	file:
hasValidDepth	CodeGen/MachineTraceMetrics.h	/^    bool hasValidDepth() const { return InstrDepth != ~0u; }$/;"	f	struct:llvm::MachineTraceMetrics::TraceBlockInfo
hasValidHeight	CodeGen/MachineTraceMetrics.h	/^    bool hasValidHeight() const { return InstrHeight != ~0u; }$/;"	f	struct:llvm::MachineTraceMetrics::TraceBlockInfo
hasVectorUAMem	Target/X86/X86Subtarget.h	/^  bool hasVectorUAMem() const { return HasVectorUAMem; }$/;"	f	class:llvm::X86Subtarget
hasVote	Target/NVPTX/NVPTXSubtarget.h	/^  bool hasVote() const { return SmVersion >= 12; }$/;"	f	class:llvm::NVPTXSubtarget
hasWritebackOperand	Target/ARM/ARMExpandPseudoInsts.cpp	/^    bool hasWritebackOperand;$/;"	m	struct:__anon312::NEONLdStTableEntry	file:
hasXOP	Target/X86/X86Subtarget.h	/^  bool hasXOP() const { return HasXOP; }$/;"	f	class:llvm::X86Subtarget
hasYmmReg	Target/X86/X86VZeroUpper.cpp	/^static bool hasYmmReg(MachineInstr *MI) {$/;"	f	file:
has_colors	Support/raw_ostream.cpp	/^bool raw_fd_ostream::has_colors() const {$/;"	f	class:raw_fd_ostream
has_extension	Support/PathV2.cpp	/^bool has_extension(const Twine &path) {$/;"	f	namespace:llvm::sys::path
has_filename	Support/PathV2.cpp	/^bool has_filename(const Twine &path) {$/;"	f	namespace:llvm::sys::path
has_magic	Support/PathV2.cpp	/^error_code has_magic(const Twine &path, const Twine &magic, bool &result) {$/;"	f	namespace:llvm::sys::fs
has_parent_path	Support/PathV2.cpp	/^bool has_parent_path(const Twine &path) {$/;"	f	namespace:llvm::sys::path
has_relative_path	Support/PathV2.cpp	/^bool has_relative_path(const Twine &path) {$/;"	f	namespace:llvm::sys::path
has_root_directory	Support/PathV2.cpp	/^bool has_root_directory(const Twine &path) {$/;"	f	namespace:llvm::sys::path
has_root_name	Support/PathV2.cpp	/^bool has_root_name(const Twine &path) {$/;"	f	namespace:llvm::sys::path
has_root_path	Support/PathV2.cpp	/^bool has_root_path(const Twine &path) {$/;"	f	namespace:llvm::sys::path
has_side_effects	VMCore/ConstantsContext.h	/^  bool has_side_effects;$/;"	m	struct:llvm::InlineAsmKeyType
has_stem	Support/PathV2.cpp	/^bool has_stem(const Twine &path) {$/;"	f	namespace:llvm::sys::path
hash	Support/regex2.h	/^	uch hash;		\/* hash code *\/$/;"	m	struct:__anon232
hash_function	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    uint16_t   hash_function;   \/\/ The hash function enumeration that was used.$/;"	m	struct:llvm::DwarfAccelTable::TableHeader
hash_value	CodeGen/MachineInstr.cpp	/^hash_code llvm::hash_value(const MachineOperand &MO) {$/;"	f	class:llvm
hash_value	Support/APFloat.cpp	/^hash_code llvm::hash_value(const APFloat &Arg) {$/;"	f	class:llvm
hash_value	Support/APInt.cpp	/^hash_code llvm::hash_value(const APInt &Arg) {$/;"	f	class:llvm
hash_value	Support/StringRef.cpp	/^hash_code llvm::hash_value(StringRef S) {$/;"	f	class:llvm
hash_value	TableGen/Record.cpp	/^  friend hash_code hash_value(const TableGenStringKey &Value) {$/;"	f	class:llvm::TableGenStringKey
hash_value	Transforms/Scalar/GVN.cpp	/^    friend hash_code hash_value(const Expression &Value) {$/;"	f	struct:__anon536::Expression
hash_value	VMCore/LLVMContextImpl.h	/^    friend hash_code hash_value(const KeyTy &Key) {$/;"	f	struct:llvm::DenseMapAPFloatKeyInfo::KeyTy
hash_value	VMCore/LLVMContextImpl.h	/^    friend hash_code hash_value(const KeyTy &Key) {$/;"	f	struct:llvm::DenseMapAPIntKeyInfo::KeyTy
hashes_count	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    uint32_t   hashes_count;    \/\/ The total number of unique hash values$/;"	m	struct:llvm::DwarfAccelTable::TableHeader
header_data_len	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    uint32_t   header_data_len; \/\/ The bytes to skip to get to the hash$/;"	m	struct:llvm::DwarfAccelTable::TableHeader
hexDigitValue	Support/APFloat.cpp	/^hexDigitValue(unsigned int c)$/;"	f	file:
hexDigitsLower	Support/APFloat.cpp	/^static const char hexDigitsLower[] = "0123456789abcdef0";$/;"	v	file:
hexDigitsUpper	Support/APFloat.cpp	/^static const char hexDigitsUpper[] = "0123456789ABCDEF0";$/;"	v	file:
highHalf	Support/APInt.cpp	/^  highHalf(integerPart part)$/;"	f	namespace:__anon243
hoist	Transforms/Scalar/LICM.cpp	/^void LICM::hoist(Instruction &I) {$/;"	f	class:LICM
hoistCopiesForSize	CodeGen/SplitKit.cpp	/^void SplitEditor::hoistCopiesForSize() {$/;"	f	class:SplitEditor
hoistIVInc	Analysis/ScalarEvolutionExpander.cpp	/^bool SCEVExpander::hoistIVInc(Instruction *IncV, Instruction *InsertPos) {$/;"	f	class:SCEVExpander
hoistSpill	CodeGen/InlineSpiller.cpp	/^bool InlineSpiller::hoistSpill(LiveInterval &SpillLI, MachineInstr *CopyMI) {$/;"	f	class:InlineSpiller
home	Support/raw_ostream.cpp	/^void format_object_base::home() {$/;"	f	class:format_object_base
hybrid_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  hybrid_ls_rr_sort(RegReductionPQBase *spq)$/;"	f	struct:__anon77::hybrid_ls_rr_sort
hybrid_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  hybrid_ls_rr_sort(const hybrid_ls_rr_sort &RHS)$/;"	f	struct:__anon77::hybrid_ls_rr_sort
hybrid_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^struct hybrid_ls_rr_sort : public queue_sort {$/;"	s	namespace:__anon77	file:
i	ExecutionEngine/JIT/JIT.cpp	/^    size_t i;$/;"	m	union:__anon185::LibgccObject::__anon186	file:
i64immSExt32	Target/X86/X86ISelDAGToDAG.cpp	/^    inline bool i64immSExt32(SDNode *N) const {$/;"	f	class:__anon373::X86DAGToDAGISel
iJDE_JittingAPI	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJDE_JittingAPI = 2$/;"	e	enum:_iJDEnvironmentType
iJDEnvironmentType	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} iJDEnvironmentType;$/;"	t	typeref:enum:_iJDEnvironmentType
iJIT_BE_NOTIFY_ON_LOAD	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJIT_BE_NOTIFY_ON_LOAD         = 0x0001,     $/;"	e	enum:_iJIT_ModeFlags
iJIT_BE_NOTIFY_ON_METHOD_ENTRY	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJIT_BE_NOTIFY_ON_METHOD_ENTRY = 0x0004,     $/;"	e	enum:_iJIT_ModeFlags
iJIT_BE_NOTIFY_ON_METHOD_EXIT	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJIT_BE_NOTIFY_ON_METHOD_EXIT  = 0x0008      $/;"	e	enum:_iJIT_ModeFlags
iJIT_BE_NOTIFY_ON_UNLOAD	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJIT_BE_NOTIFY_ON_UNLOAD       = 0x0002,     $/;"	e	enum:_iJIT_ModeFlags
iJIT_CALLGRAPH_ON	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJIT_CALLGRAPH_ON              = 0x0002$/;"	e	enum:_iJIT_IsProfilingActiveFlags
iJIT_DLL_is_missing	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^static int iJIT_DLL_is_missing = 0;$/;"	v	file:
iJIT_GetNewMethodID	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  unsigned int iJIT_GetNewMethodID(void) {$/;"	f	class:llvm::IntelJITEventsWrapper
iJIT_GetNewMethodID	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^ITT_EXTERN_C unsigned int JITAPI iJIT_GetNewMethodID()$/;"	f
iJIT_IsProfilingActive	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  iJIT_IsProfilingActiveFlags iJIT_IsProfilingActive(void) {$/;"	f	class:llvm::IntelJITEventsWrapper
iJIT_IsProfilingActive	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^ITT_EXTERN_C iJIT_IsProfilingActiveFlags JITAPI iJIT_IsProfilingActive()$/;"	f
iJIT_IsProfilingActiveFlags	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} iJIT_IsProfilingActiveFlags;$/;"	t	typeref:enum:_iJIT_IsProfilingActiveFlags
iJIT_JVM_EVENT	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} iJIT_JVM_EVENT;$/;"	t	typeref:enum:iJIT_jvm_event
iJIT_Method_Id	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} *piJIT_Method_Id, iJIT_Method_Id;$/;"	t	typeref:struct:_iJIT_Method_Id
iJIT_Method_Load	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} *piJIT_Method_Load, iJIT_Method_Load;$/;"	t	typeref:struct:_iJIT_Method_Load
iJIT_Method_NIDS	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} *piJIT_Method_NIDS, iJIT_Method_NIDS;$/;"	t	typeref:struct:_iJIT_Method_NIDS
iJIT_ModeChangedEx	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^typedef void (*iJIT_ModeChangedEx)(void *UserData, iJIT_ModeFlags Flags);$/;"	t
iJIT_ModeFlags	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} iJIT_ModeFlags;$/;"	t	typeref:enum:_iJIT_ModeFlags
iJIT_NOTHING_RUNNING	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJIT_NOTHING_RUNNING           = 0x0000,     $/;"	e	enum:_iJIT_IsProfilingActiveFlags
iJIT_NO_NOTIFICATIONS	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJIT_NO_NOTIFICATIONS          = 0x0000,     $/;"	e	enum:_iJIT_ModeFlags
iJIT_NotifyEvent	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  int  iJIT_NotifyEvent(iJIT_JVM_EVENT EventType, void *EventSpecificData) {$/;"	f	class:llvm::IntelJITEventsWrapper
iJIT_NotifyEvent	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^iJIT_NotifyEvent(iJIT_JVM_EVENT event_type, void *EventSpecificData)$/;"	f
iJIT_RegisterCallbackEx	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  void iJIT_RegisterCallbackEx(void *UserData,$/;"	f	class:llvm::IntelJITEventsWrapper
iJIT_RegisterCallbackEx	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^iJIT_RegisterCallbackEx(void *userdata, iJIT_ModeChangedEx $/;"	f
iJIT_SAMPLING_ON	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJIT_SAMPLING_ON               = 0x0001,     $/;"	e	enum:_iJIT_IsProfilingActiveFlags
iJIT_jvm_event	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^typedef enum iJIT_jvm_event$/;"	g
iJVM_EVENT_TYPE_ENTER_NIDS	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJVM_EVENT_TYPE_ENTER_NIDS = 19, $/;"	e	enum:iJIT_jvm_event
iJVM_EVENT_TYPE_LEAVE_NIDS	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJVM_EVENT_TYPE_LEAVE_NIDS               $/;"	e	enum:iJIT_jvm_event
iJVM_EVENT_TYPE_METHOD_LOAD_FINISHED	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJVM_EVENT_TYPE_METHOD_LOAD_FINISHED=13,     $/;"	e	enum:iJIT_jvm_event
iJVM_EVENT_TYPE_METHOD_UNLOAD_START	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJVM_EVENT_TYPE_METHOD_UNLOAD_START,         $/;"	e	enum:iJIT_jvm_event
iJVM_EVENT_TYPE_SHUTDOWN	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    iJVM_EVENT_TYPE_SHUTDOWN = 2, $/;"	e	enum:iJIT_jvm_event
ia	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    ia,$/;"	e	enum:llvm::ARM_AM::AMSubMode
ib	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    ib,$/;"	e	enum:llvm::ARM_AM::AMSubMode
id	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    __itt_group_id id;$/;"	m	struct:___itt_group_list
id_map	Transforms/IPO/MergeFunctions.cpp	/^  DenseMap<const Value *, const Value *> id_map;$/;"	m	class:__anon597::FunctionComparator	file:
identifyScopeMarkers	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::identifyScopeMarkers() {$/;"	f	class:DwarfDebug
identify_magic	Support/PathV2.cpp	/^error_code identify_magic(const Twine &path, file_magic &result) {$/;"	f	namespace:llvm::sys::fs
identify_magic	Support/PathV2.cpp	/^file_magic identify_magic(StringRef magic) {$/;"	f	namespace:llvm::sys::fs
idx	CodeGen/MachineSSAUpdater.cpp	/^    unsigned idx;$/;"	m	class:llvm::SSAUpdaterTraits::PHI_iterator	file:
idx	Transforms/Utils/SSAUpdater.cpp	/^    unsigned idx;$/;"	m	class:llvm::SSAUpdaterTraits::PHI_iterator	file:
iflags	Support/regex2.h	/^	int iflags;		\/* internal flags *\/$/;"	m	struct:re_guts
ignoreLoc	Target/NVPTX/NVPTXAsmPrinter.cpp	/^bool NVPTXAsmPrinter::ignoreLoc(const MachineInstr &MI)$/;"	f	class:NVPTXAsmPrinter
ignoreMissing	Analysis/ProfileEstimatorPass.cpp	/^static double ignoreMissing(double w) {$/;"	f	file:
ignorePseudoInstruction	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::ignorePseudoInstruction(MachineInstr *MI,$/;"	f	class:HexagonPacketizerList
ilist_node_traits	Support/YAMLParser.cpp	/^struct ilist_node_traits<Token> {$/;"	s	namespace:llvm	file:
ilist_sentinel_traits	Support/YAMLParser.cpp	/^struct ilist_sentinel_traits<Token> {$/;"	s	namespace:llvm	file:
ilp_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  ilp_ls_rr_sort(RegReductionPQBase *spq)$/;"	f	struct:__anon77::ilp_ls_rr_sort
ilp_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  ilp_ls_rr_sort(const ilp_ls_rr_sort &RHS)$/;"	f	struct:__anon77::ilp_ls_rr_sort
ilp_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^struct ilp_ls_rr_sort : public queue_sort {$/;"	s	namespace:__anon77	file:
immMskBitp	Target/XCore/XCoreISelDAGToDAG.cpp	/^    inline bool immMskBitp(SDNode *inN) const {$/;"	f	class:__anon334::XCoreDAGToDAGISel
immSext8	Target/X86/X86ISelDAGToDAG.cpp	/^    inline bool immSext8(SDNode *N) const {$/;"	f	class:__anon373::X86DAGToDAGISel
immediateOffset	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t immediateOffset;$/;"	m	struct:InternalInstruction
immediateOffsetOpcode	Target/ARM/Thumb2InstrInfo.cpp	/^immediateOffsetOpcode(unsigned opcode)$/;"	f	file:
immediateSize	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t immediateSize;$/;"	m	struct:InternalInstruction
immediateVal	MC/MCDisassembler/EDOperand.cpp	/^uint64_t EDOperand::immediateVal() {$/;"	f	class:EDOperand
immediates	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint64_t                      immediates[2];$/;"	m	struct:InternalInstruction
in	Target/CppBackend/CPPBackend.cpp	/^    inline void in() { indent_level++; }$/;"	f	class:__anon412::CppWriter
inCount	Analysis/ProfileVerifierPass.cpp	/^      int         inCount;$/;"	m	struct:__anon36::ProfileVerifierPassT::DetailedBlockInfo	file:
inITBlock	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool inITBlock() { return ITState.CurPosition != ~0U;}$/;"	f	class:__anon259::ARMAsmParser	file:
inLoop	Transforms/Utils/LCSSA.cpp	/^    bool inLoop(BasicBlock *B) const {$/;"	f	struct:__anon475::LCSSA	file:
inMips16Mode	Target/Mips/MipsSubtarget.h	/^  bool inMips16Mode() const { return InMips16Mode; }$/;"	f	class:llvm::MipsSubtarget
inSection	Transforms/Instrumentation/BlackList.cpp	/^bool BlackList::inSection(const StringRef Section,$/;"	f	class:llvm::BlackList
inSubLoop	Transforms/Scalar/LICM.cpp	/^    bool inSubLoop(BasicBlock *BB) {$/;"	f	struct:__anon568::LICM	file:
inWeight	Analysis/ProfileVerifierPass.cpp	/^      double      inWeight;$/;"	m	struct:__anon36::ProfileVerifierPassT::DetailedBlockInfo	file:
incNumLocalDynamicTLSAccesses	Target/X86/X86MachineFunctionInfo.h	/^  void incNumLocalDynamicTLSAccesses() { ++NumLocalDynamics; }$/;"	f	class:llvm::X86MachineFunctionInfo
incorporateFunction	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::incorporateFunction(const Function &F) {$/;"	f	class:ValueEnumerator
incorporateFunction	VMCore/AsmWriter.cpp	/^  void incorporateFunction(const Function *F) {$/;"	f	class:__anon612::SlotTracker
incorporateMDNode	VMCore/TypeFinder.cpp	/^void TypeFinder::incorporateMDNode(const MDNode *V) {$/;"	f	class:TypeFinder
incorporateType	VMCore/TypeFinder.cpp	/^void TypeFinder::incorporateType(Type *Ty) {$/;"	f	class:TypeFinder
incorporateTypes	VMCore/AsmWriter.cpp	/^void TypePrinting::incorporateTypes(const Module &M) {$/;"	f	class:TypePrinting
incorporateValue	VMCore/TypeFinder.cpp	/^void TypeFinder::incorporateValue(const Value *V) {$/;"	f	class:TypeFinder
increase	CodeGen/RegisterPressure.cpp	/^void RegisterPressure::increase(const TargetRegisterClass *RC,$/;"	f	class:RegisterPressure
increasePhysRegPressure	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::increasePhysRegPressure(ArrayRef<unsigned> Regs) {$/;"	f	class:RegPressureTracker
increaseSetPressure	CodeGen/RegisterPressure.cpp	/^static void increaseSetPressure(std::vector<unsigned> &CurrSetPressure,$/;"	f	file:
increaseVirtRegPressure	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::increaseVirtRegPressure(ArrayRef<unsigned> Regs) {$/;"	f	class:RegPressureTracker
increment	Support/YAMLParser.cpp	/^void MappingNode::increment() {$/;"	f	class:MappingNode
increment	Support/YAMLParser.cpp	/^void SequenceNode::increment() {$/;"	f	class:SequenceNode
incrementSignificand	Support/APFloat.cpp	/^APFloat::incrementSignificand()$/;"	f	class:APFloat
indent	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::indent(unsigned NumSpaces) {$/;"	f	class:raw_ostream
indent_level	Target/CppBackend/CPPBackend.cpp	/^    unsigned indent_level;$/;"	m	class:__anon412::CppWriter	file:
indexFromSIB	Target/X86/Disassembler/X86DisassemblerDecoder.h	41;"	d
indexValid	VMCore/Type.cpp	/^bool CompositeType::indexValid(const Value *V) const {$/;"	f	class:CompositeType
indexValid	VMCore/Type.cpp	/^bool CompositeType::indexValid(unsigned Idx) const {$/;"	f	class:CompositeType
indices	VMCore/ConstantsContext.h	/^  SmallVector<unsigned, 4> indices;$/;"	m	struct:llvm::ExprMapKeyType
inferPrototypeAttributes	Transforms/Scalar/SimplifyLibCalls.cpp	/^void SimplifyLibCalls::inferPrototypeAttributes(Function &F) {$/;"	f	class:SimplifyLibCalls
infinityL	Support/APFloat.cpp	/^static const char infinityL[] = "infinity";$/;"	v	file:
infinityU	Support/APFloat.cpp	/^static const char infinityU[] = "INFINITY";$/;"	v	file:
init	Analysis/PathNumbering.cpp	/^void BallLarusDag::init() {$/;"	f	class:BallLarusDag
init	Archive/ArchiveInternals.h	/^    void init() {$/;"	f	class:llvm::ArchiveMemberHeader
init	CodeGen/InterferenceCache.cpp	/^void InterferenceCache::init(MachineFunction *mf,$/;"	f	class:InterferenceCache
init	CodeGen/LiveIntervalUnion.cpp	/^void LiveIntervalUnion::Array::init(LiveIntervalUnion::Allocator &Alloc,$/;"	f	class:LiveIntervalUnion::Array
init	CodeGen/LiveIntervalUnion.h	/^    void init(unsigned UTag, LiveInterval *VReg, LiveIntervalUnion *LIU) {$/;"	f	class:llvm::LiveIntervalUnion::Query
init	CodeGen/MachineScheduler.cpp	/^    void init(ScheduleDAGMI *dag, const TargetSchedModel *smodel) {$/;"	f	struct:__anon126::ConvergingScheduler::SchedBoundary
init	CodeGen/RegAllocBase.cpp	/^void RegAllocBase::init(VirtRegMap &vrm,$/;"	f	class:RegAllocBase
init	CodeGen/RegisterPressure.cpp	/^void RegPressureTracker::init(const MachineFunction *mf,$/;"	f	class:RegPressureTracker
init	CodeGen/SelectionDAG/SelectionDAG.cpp	/^void SelectionDAG::init(MachineFunction &mf) {$/;"	f	class:SelectionDAG
init	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::init(GCFunctionInfo *gfi, AliasAnalysis &aa,$/;"	f	class:SelectionDAGBuilder
init	CodeGen/TargetSchedule.cpp	/^void TargetSchedModel::init(const MCSchedModel &sm,$/;"	f	class:TargetSchedModel
init	Support/MemoryBuffer.cpp	/^void MemoryBuffer::init(const char *BufStart, const char *BufEnd,$/;"	f	class:MemoryBuffer
init	Support/StringMap.cpp	/^void StringMapImpl::init(unsigned InitSize) {$/;"	f	class:StringMapImpl
init	Support/Timer.cpp	/^void Timer::init(StringRef N) {$/;"	f	class:Timer
init	Support/Timer.cpp	/^void Timer::init(StringRef N, TimerGroup &tg) {$/;"	f	class:Timer
init	TableGen/Record.cpp	/^void Record::init() {$/;"	f	class:Record
init	Target/Hexagon/HexagonMachineScheduler.h	/^    void init(VLIWMachineScheduler *dag, const TargetSchedModel *smodel) {$/;"	f	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
init	VMCore/DataLayout.cpp	/^void DataLayout::init() {$/;"	f	class:DataLayout
init	VMCore/Instructions.cpp	/^void BinaryOperator::init(BinaryOps iType) {$/;"	f	class:BinaryOperator
init	VMCore/Instructions.cpp	/^void CallInst::init(Value *Func, ArrayRef<Value *> Args, const Twine &NameStr) {$/;"	f	class:CallInst
init	VMCore/Instructions.cpp	/^void CallInst::init(Value *Func, const Twine &NameStr) {$/;"	f	class:CallInst
init	VMCore/Instructions.cpp	/^void ExtractValueInst::init(ArrayRef<unsigned> Idxs, const Twine &Name) {$/;"	f	class:ExtractValueInst
init	VMCore/Instructions.cpp	/^void GetElementPtrInst::init(Value *Ptr, ArrayRef<Value *> IdxList,$/;"	f	class:GetElementPtrInst
init	VMCore/Instructions.cpp	/^void IndirectBrInst::init(Value *Address, unsigned NumDests) {$/;"	f	class:IndirectBrInst
init	VMCore/Instructions.cpp	/^void InsertValueInst::init(Value *Agg, Value *Val, ArrayRef<unsigned> Idxs, $/;"	f	class:InsertValueInst
init	VMCore/Instructions.cpp	/^void InvokeInst::init(Value *Fn, BasicBlock *IfNormal, BasicBlock *IfException,$/;"	f	class:InvokeInst
init	VMCore/Instructions.cpp	/^void LandingPadInst::init(Value *PersFn, unsigned NumReservedValues,$/;"	f	class:LandingPadInst
init	VMCore/Instructions.cpp	/^void SwitchInst::init(Value *Value, BasicBlock *Default, unsigned NumReserved) {$/;"	f	class:SwitchInst
initFromAPInt	Support/APFloat.cpp	/^APFloat::initFromAPInt(const APInt& api, bool isIEEE)$/;"	f	class:APFloat
initFromArray	Support/APInt.cpp	/^void APInt::initFromArray(ArrayRef<uint64_t> bigVal) {$/;"	f	class:APInt
initFromDoubleAPInt	Support/APFloat.cpp	/^APFloat::initFromDoubleAPInt(const APInt &api)$/;"	f	class:APFloat
initFromF80LongDoubleAPInt	Support/APFloat.cpp	/^APFloat::initFromF80LongDoubleAPInt(const APInt &api)$/;"	f	class:APFloat
initFromFloatAPInt	Support/APFloat.cpp	/^APFloat::initFromFloatAPInt(const APInt & api)$/;"	f	class:APFloat
initFromHalfAPInt	Support/APFloat.cpp	/^APFloat::initFromHalfAPInt(const APInt & api)$/;"	f	class:APFloat
initFromPPCDoubleDoubleAPInt	Support/APFloat.cpp	/^APFloat::initFromPPCDoubleDoubleAPInt(const APInt &api)$/;"	f	class:APFloat
initFromQuadrupleAPInt	Support/APFloat.cpp	/^APFloat::initFromQuadrupleAPInt(const APInt &api)$/;"	f	class:APFloat
initILP	CodeGen/ScheduleDAGInstrs.cpp	/^static ILPValue initILP(const SUnit *SU) {$/;"	f	file:
initInstrItins	MC/MCSubtargetInfo.cpp	/^void MCSubtargetInfo::initInstrItins(InstrItineraryData &InstrItins) const {$/;"	f	class:MCSubtargetInfo
initJumpTableInfo	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::initJumpTableInfo(MachineJumpTableInfo *MJTI) {$/;"	f	class:JITEmitter
initLoopData	Transforms/Scalar/LoopUnswitch.cpp	/^    void initLoopData() {$/;"	f	class:__anon494::LoopUnswitch	file:
initMBBInfo	Target/Mips/MipsLongBranch.cpp	/^void MipsLongBranch::initMBBInfo() {$/;"	f	class:MipsLongBranch
initMaps	MC/MCDisassembler/EDDisassembler.cpp	/^void EDDisassembler::initMaps(const MCRegisterInfo &registerInfo) {$/;"	f	class:EDDisassembler
initNodes	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^void ResourcePriorityQueue::initNodes(std::vector<SUnit> &sunits) {$/;"	f	class:ResourcePriorityQueue
initNodes	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void RegReductionPQBase::initNodes(std::vector<SUnit> &sunits) {$/;"	f	class:RegReductionPQBase
initNumRegDefsLeft	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^void ResourcePriorityQueue::initNumRegDefsLeft(SUnit *SU) {$/;"	f	class:ResourcePriorityQueue
initOptimizations	Transforms/Utils/SimplifyLibCalls.cpp	/^void LibCallSimplifierImpl::initOptimizations() {$/;"	f	class:llvm::LibCallSimplifierImpl
initPICLabelUId	Target/ARM/ARMMachineFunctionInfo.h	/^  void initPICLabelUId(unsigned UId) {$/;"	f	class:llvm::ARMFunctionInfo
initPacketizerState	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^void HexagonPacketizerList::initPacketizerState() {$/;"	f	class:HexagonPacketizerList
initQueues	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::initQueues() {$/;"	f	class:ScheduleDAGMI
initRegPressure	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::initRegPressure() {$/;"	f	class:ScheduleDAGMI
initRegState	CodeGen/RegisterScavenging.cpp	/^void RegScavenger::initRegState() {$/;"	f	class:RegScavenger
initSUnits	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::initSUnits() {$/;"	f	class:ScheduleDAGInstrs
initShrinkWrappingInfo	CodeGen/ShrinkWrapping.cpp	/^void PEI::initShrinkWrappingInfo() {$/;"	f	class:PEI
initSlowCase	Support/APInt.cpp	/^void APInt::initSlowCase(const APInt& that) {$/;"	f	class:APInt
initSlowCase	Support/APInt.cpp	/^void APInt::initSlowCase(unsigned numBits, uint64_t val, bool isSigned) {$/;"	f	class:APInt
initStatSymbols	ExecutionEngine/JIT/JITMemoryManager.cpp	/^static StatSymbols initStatSymbols;$/;"	v	file:
initTags	VMCore/Use.cpp	/^Use *Use::initTags(Use * const Start, Use *Stop) {$/;"	f	class:llvm::Use
initVRegCycle	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static void initVRegCycle(SUnit *SU) {$/;"	f	file:
init_func	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    void*          init_func;$/;"	m	struct:___itt_api_info
init_func	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    void*          init_func;$/;"	m	struct:___itt_api_info_20101001
initialize	Analysis/IPA/CallGraph.cpp	/^void CallGraph::initialize(Module &M) {$/;"	f	class:CallGraph
initialize	CodeGen/LexicalScopes.cpp	/^void LexicalScopes::initialize(const MachineFunction &Fn) {$/;"	f	class:LexicalScopes
initialize	CodeGen/MachineScheduler.cpp	/^  virtual void initialize(ScheduleDAGMI *) {$/;"	f	class:__anon129::InstructionShuffler
initialize	CodeGen/MachineScheduler.cpp	/^  virtual void initialize(ScheduleDAGMI *DAG) {$/;"	f	class:__anon128::ILPScheduler
initialize	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::initialize(ScheduleDAGMI *dag) {$/;"	f	class:ConvergingScheduler
initialize	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^void OProfileJITEventListener::initialize() {$/;"	f	class:__anon193::OProfileJITEventListener
initialize	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^bool OProfileWrapper::initialize() {$/;"	f	class:llvm::OProfileWrapper
initialize	Support/APFloat.cpp	/^APFloat::initialize(const fltSemantics *ourSemantics)$/;"	f	class:APFloat
initialize	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::initialize(ScheduleDAGMI *dag) {$/;"	f	class:ConvergingVLIWScheduler
initialize	Target/TargetLibraryInfo.cpp	/^static void initialize(TargetLibraryInfo &TLI, const Triple &T,$/;"	f	file:
initialize	VMCore/AsmWriter.cpp	/^inline void SlotTracker::initialize() {$/;"	f	class:SlotTracker
initializeAllAnalysisInfo	VMCore/PassManager.cpp	/^void PMTopLevelManager::initializeAllAnalysisInfo() {$/;"	f	class:PMTopLevelManager
initializeAnalysis	Analysis/Analysis.cpp	/^void llvm::initializeAnalysis(PassRegistry &Registry) {$/;"	f	class:llvm
initializeAnalysisImpl	VMCore/PassManager.cpp	/^void PMDataManager::initializeAnalysisImpl(Pass *P) {$/;"	f	class:PMDataManager
initializeCodeGen	CodeGen/CodeGen.cpp	/^void llvm::initializeCodeGen(PassRegistry &Registry) {$/;"	f	class:llvm
initializeCore	VMCore/Core.cpp	/^void llvm::initializeCore(PassRegistry &Registry) {$/;"	f	class:llvm
initializeCustomLowering	CodeGen/GCStrategy.cpp	/^bool GCStrategy::initializeCustomLowering(Module &M) { return false; }$/;"	f	class:GCStrategy
initializeCustomLowering	CodeGen/ShadowStackGC.cpp	/^bool ShadowStackGC::initializeCustomLowering(Module &M) {$/;"	f	class:ShadowStackGC
initializeExecutionEngine	ExecutionEngine/Interpreter/Interpreter.h	/^  void initializeExecutionEngine() { }$/;"	f	class:llvm::Interpreter
initializeExternalFunctions	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^void Interpreter::initializeExternalFunctions() {$/;"	f	class:Interpreter
initializeFunctionInfo	Target/ARM/ARMConstantIslandPass.cpp	/^initializeFunctionInfo(const std::vector<MachineInstr*> &CPEMIs) {$/;"	f	class:ARMConstantIslands
initializeIPA	Analysis/IPA/IPA.cpp	/^void llvm::initializeIPA(PassRegistry &Registry) {$/;"	f	class:llvm
initializeIPO	Transforms/IPO/IPO.cpp	/^void llvm::initializeIPO(PassRegistry &Registry) {$/;"	f	class:llvm
initializeInstCombine	Transforms/InstCombine/InstructionCombining.cpp	/^void llvm::initializeInstCombine(PassRegistry &Registry) {$/;"	f	class:llvm
initializeInstrumentation	Transforms/Instrumentation/Instrumentation.cpp	/^void llvm::initializeInstrumentation(PassRegistry &Registry) {$/;"	f	class:llvm
initializePass	Analysis/BasicAliasAnalysis.cpp	/^    virtual void initializePass() {$/;"	f	struct:__anon15::BasicAliasAnalysis
initializePass	Analysis/NoAliasAnalysis.cpp	/^    virtual void initializePass() {$/;"	f	struct:__anon42::NoAA
initializePass	Analysis/TypeBasedAliasAnalysis.cpp	/^    virtual void initializePass() {$/;"	f	class:__anon13::TypeBasedAliasAnalysis
initializePass	Transforms/Scalar/ObjCARC.cpp	/^    virtual void initializePass() {$/;"	f	class:__anon500::ObjCARCAliasAnalysis	file:
initializePass	VMCore/Pass.cpp	/^void ImmutablePass::initializePass() {$/;"	f	class:ImmutablePass
initializeScalarOpts	Transforms/Scalar/Scalar.cpp	/^void llvm::initializeScalarOpts(PassRegistry &Registry) {$/;"	f	class:llvm
initializeTarget	Target/Target.cpp	/^void llvm::initializeTarget(PassRegistry &Registry) {$/;"	f	class:llvm
initializeTransformUtils	Transforms/Utils/Utils.cpp	/^void llvm::initializeTransformUtils(PassRegistry &Registry) {$/;"	f	class:llvm
initializeVectorization	Transforms/Vectorize/Vectorize.cpp	/^void llvm::initializeVectorization(PassRegistry &Registry) {$/;"	f	class:llvm
inline_	CodeGen/Spiller.cpp	/^  enum SpillerName { trivial, inline_ };$/;"	e	enum:__anon142::SpillerName	file:
insert	MC/WinCOFFObjectWriter.cpp	/^size_t StringTable::insert(llvm::StringRef String) {$/;"	f	class:StringTable
insert	Transforms/IPO/MergeFunctions.cpp	/^bool MergeFunctions::insert(ComparableFunction &NewF) {$/;"	f	class:MergeFunctions
insert	Transforms/Scalar/ObjCARC.cpp	/^    insert(const std::pair<KeyT, ValueT> &InsertPair) {$/;"	f	class:__anon498::MapVector
insert	VMCore/ConstantsContext.h	/^  void insert(ConstantClass *CP) {$/;"	f	class:llvm::ConstantAggrUniqueMap
insertAfter	VMCore/Instruction.cpp	/^void Instruction::insertAfter(Instruction *InsertPos) {$/;"	f	class:Instruction
insertBefore	VMCore/Instruction.cpp	/^void Instruction::insertBefore(Instruction *InsertPos) {$/;"	f	class:Instruction
insertCSRSpillsAndRestores	CodeGen/PrologEpilogInserter.cpp	/^void PEI::insertCSRSpillsAndRestores(MachineFunction &Fn) {$/;"	f	class:PEI
insertCallSiteStore	CodeGen/SjLjEHPrepare.cpp	/^void SjLjEHPrepare::insertCallSiteStore(Instruction *I, int Number) {$/;"	f	class:SjLjEHPrepare
insertCallUses	Target/Sparc/DelaySlotFiller.cpp	/^void Filler::insertCallUses(MachineBasicBlock::iterator MI,$/;"	f	class:Filler
insertCheapEHSupport	Transforms/Utils/LowerInvoke.cpp	/^bool LowerInvoke::insertCheapEHSupport(Function &F) {$/;"	f	class:LowerInvoke
insertCounterIncrement	Transforms/Instrumentation/PathProfiling.cpp	/^void PathProfiler::insertCounterIncrement(Value* incValue,$/;"	f	class:PathProfiler
insertCounterWriteout	Transforms/Instrumentation/GCOVProfiling.cpp	/^void GCOVProfiler::insertCounterWriteout($/;"	f	class:GCOVProfiler
insertDIE	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  void insertDIE(const MDNode *N, DIE *D) {$/;"	f	class:llvm::CompileUnit
insertDIEEntry	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  void insertDIEEntry(const MDNode *N, DIEEntry *E) {$/;"	f	class:llvm::CompileUnit
insertDbgValueIntrinsic	VMCore/DIBuilder.cpp	/^Instruction *DIBuilder::insertDbgValueIntrinsic(Value *V, uint64_t Offset,$/;"	f	class:DIBuilder
insertDebugValue	CodeGen/LiveDebugVariables.cpp	/^void UserValue::insertDebugValue(MachineBasicBlock *MBB, SlotIndex Idx,$/;"	f	class:UserValue
insertDeclare	VMCore/DIBuilder.cpp	/^Instruction *DIBuilder::insertDeclare(Value *Storage, DIVariable VarInfo,$/;"	f	class:DIBuilder
insertDefsUses	Target/Mips/MipsDelaySlotFiller.cpp	/^void Filler::insertDefsUses(InstrIter MI,$/;"	f	class:Filler
insertDefsUses	Target/Sparc/DelaySlotFiller.cpp	/^void Filler::insertDefsUses(MachineBasicBlock::iterator MI,$/;"	f	class:Filler
insertEdge	CodeGen/MachineTraceMetrics.cpp	/^  bool insertEdge(const MachineBasicBlock *From, const MachineBasicBlock *To) {$/;"	f	class:llvm::po_iterator_storage
insertExpensiveEHSupport	Transforms/Utils/LowerInvoke.cpp	/^bool LowerInvoke::insertExpensiveEHSupport(Function &F) {$/;"	f	class:LowerInvoke
insertFastDiv	Transforms/Utils/BypassSlowDivision.cpp	/^static bool insertFastDiv(Function &F,$/;"	f	file:
insertFlush	Transforms/Instrumentation/GCOVProfiling.cpp	/^insertFlush(ArrayRef<std::pair<GlobalVariable*, MDNode*> > CountersBySP) {$/;"	f	class:GCOVProfiler
insertFrameReferenceRegisters	CodeGen/LocalStackSlotAllocation.cpp	/^bool LocalStackSlotPass::insertFrameReferenceRegisters(MachineFunction &Fn) {$/;"	f	class:LocalStackSlotPass
insertFunctionInfo	CodeGen/GCStrategy.cpp	/^GCFunctionInfo *GCStrategy::insertFunctionInfo(const Function &F) {$/;"	f	class:GCStrategy
insertGlobalRedzones	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::insertGlobalRedzones(Module &M) {$/;"	f	class:AddressSanitizer
insertIndirectCounterIncrement	Transforms/Instrumentation/GCOVProfiling.cpp	/^void GCOVProfiler::insertIndirectCounterIncrement() {$/;"	f	class:GCOVProfiler
insertInstrumentation	Transforms/Instrumentation/PathProfiling.cpp	/^void PathProfiler::insertInstrumentation($/;"	f	class:PathProfiler
insertInstrumentationStartingAt	Transforms/Instrumentation/PathProfiling.cpp	/^void PathProfiler::insertInstrumentationStartingAt(BLInstrumentationEdge* edge,$/;"	f	class:PathProfiler
insertInteger	Transforms/Scalar/SROA.cpp	/^static Value *insertInteger(const DataLayout &DL, IRBuilder<> &IRB, Value *Old,$/;"	f	file:
insertLoop	Analysis/LoopPass.cpp	/^void LPPassManager::insertLoop(Loop *L, Loop *ParentLoop) {$/;"	f	class:LPPassManager
insertLoopIntoQueue	Analysis/LoopPass.cpp	/^void LPPassManager::insertLoopIntoQueue(Loop *L) {$/;"	f	class:LPPassManager
insertNoop	Target/MBlaze/MBlazeInstrInfo.cpp	/^insertNoop(MachineBasicBlock &MBB, MachineBasicBlock::iterator MI) const {$/;"	f	class:MBlazeInstrInfo
insertNoop	Target/Mips/MipsInstrInfo.cpp	/^insertNoop(MachineBasicBlock &MBB, MachineBasicBlock::iterator MI) const$/;"	f	class:MipsInstrInfo
insertNoop	Target/PowerPC/PPCInstrInfo.cpp	/^void PPCInstrInfo::insertNoop(MachineBasicBlock &MBB,$/;"	f	class:PPCInstrInfo
insertNoop	Target/TargetInstrInfo.cpp	/^void TargetInstrInfo::insertNoop(MachineBasicBlock &MBB,$/;"	f	class:TargetInstrInfo
insertNumberIncrement	Transforms/Instrumentation/PathProfiling.cpp	/^void PathProfiler::insertNumberIncrement(BLInstrumentationNode* node,$/;"	f	class:PathProfiler
insertPHIOrSelect	Transforms/Scalar/SROA.cpp	/^  void insertPHIOrSelect(Instruction &User, uint64_t Offset) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
insertPass	CodeGen/Passes.cpp	/^void TargetPassConfig::insertPass(AnalysisID TargetPassID,$/;"	f	class:TargetPassConfig
insertPrologEpilogCode	CodeGen/PrologEpilogInserter.cpp	/^void PEI::insertPrologEpilogCode(MachineFunction &Fn) {$/;"	f	class:PEI
insertReload	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::insertReload(LiveInterval &NewLI,$/;"	f	class:InlineSpiller
insertSelect	Target/X86/X86InstrInfo.cpp	/^void X86InstrInfo::insertSelect(MachineBasicBlock &MBB,$/;"	f	class:X86InstrInfo
insertShortCut	Analysis/RegionInfo.cpp	/^void RegionInfo::insertShortCut(BasicBlock *entry, BasicBlock *exit,$/;"	f	class:RegionInfo
insertSpill	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::insertSpill(LiveInterval &NewLI, const LiveInterval &OldLI,$/;"	f	class:InlineSpiller
insertUse	Transforms/Scalar/SROA.cpp	/^  void insertUse(Instruction &I, int64_t Offset, uint64_t Size,$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
insertUse	Transforms/Scalar/SROA.cpp	/^  void insertUse(Instruction &User, int64_t Offset, uint64_t Size) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
insert_imp	Support/SmallPtrSet.cpp	/^bool SmallPtrSetImpl::insert_imp(const void * Ptr) {$/;"	f	class:SmallPtrSetImpl
instID	MC/MCDisassembler/EDInst.cpp	/^unsigned EDInst::instID() {$/;"	f	class:EDInst
install_fatal_error_handler	Support/ErrorHandling.cpp	/^void llvm::install_fatal_error_handler(fatal_error_handler_t handler,$/;"	f	class:llvm
instrInITBlock	Target/ARM/Disassembler/ARMDisassembler.cpp	/^      bool instrInITBlock() {$/;"	f	class:__anon290::ITStatus
instrLastInITBlock	Target/ARM/Disassembler/ARMDisassembler.cpp	/^      bool instrLastInITBlock() {$/;"	f	class:__anon290::ITStatus
instructionDeleted	Transforms/Scalar/LICM.cpp	/^    virtual void instructionDeleted(Instruction *I) const {$/;"	f	class:__anon569::LoopPromoter
instructionID	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint16_t instructionID;$/;"	m	struct:InternalInstruction
instrument	Transforms/Instrumentation/BoundsChecking.cpp	/^bool BoundsChecking::instrument(Value *Ptr, Value *InstVal) {$/;"	f	class:BoundsChecking
instrumentAddress	Transforms/Instrumentation/AddressSanitizer.cpp	/^void AddressSanitizer::instrumentAddress(Instruction *OrigIns,$/;"	f	class:AddressSanitizer
instrumentAtomic	Transforms/Instrumentation/ThreadSanitizer.cpp	/^bool ThreadSanitizer::instrumentAtomic(Instruction *I) {$/;"	f	class:ThreadSanitizer
instrumentLoadOrStore	Transforms/Instrumentation/ThreadSanitizer.cpp	/^bool ThreadSanitizer::instrumentLoadOrStore(Instruction *I) {$/;"	f	class:ThreadSanitizer
instrumentMemIntrinsic	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::instrumentMemIntrinsic(MemIntrinsic *MI) {$/;"	f	class:AddressSanitizer
instrumentMemIntrinsicParam	Transforms/Instrumentation/AddressSanitizer.cpp	/^void AddressSanitizer::instrumentMemIntrinsicParam($/;"	f	class:AddressSanitizer
instrumentMop	Transforms/Instrumentation/AddressSanitizer.cpp	/^void AddressSanitizer::instrumentMop(Instruction *I) {$/;"	f	class:AddressSanitizer
interferingVRegs	CodeGen/LiveIntervalUnion.h	/^    const SmallVectorImpl<LiveInterval*> &interferingVRegs() const {$/;"	f	class:llvm::LiveIntervalUnion::Query
intern	Support/StringPool.cpp	/^PooledStringPtr StringPool::intern(StringRef Key) {$/;"	f	class:StringPool
internalKnownBits	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned internalKnownBits() const {$/;"	f	struct:__anon310::ARMConstantIslands::BasicBlockInfo
interpretDecimal	Support/APFloat.cpp	/^interpretDecimal(StringRef::iterator begin, StringRef::iterator end,$/;"	f	file:
interruptFrameLayout	Target/MBlaze/MBlazeFrameLowering.cpp	/^static void interruptFrameLayout(MachineFunction &MF) {$/;"	f	file:
intersectConstraints	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::intersectConstraints(Constraint *X,$/;"	f	class:DependenceAnalysis
intersectWith	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::intersectWith(const ConstantRange &CR) const {$/;"	f	class:ConstantRange
intervalIsInOneMBB	CodeGen/LiveIntervalAnalysis.cpp	/^LiveIntervals::intervalIsInOneMBB(const LiveInterval &LI) const {$/;"	f	class:LiveIntervals
invalidate	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::Ensemble::invalidate(const MachineBasicBlock *BadMBB) {$/;"	f	class:MachineTraceMetrics::Ensemble
invalidate	CodeGen/MachineTraceMetrics.cpp	/^void MachineTraceMetrics::invalidate(const MachineBasicBlock *MBB) {$/;"	f	class:MachineTraceMetrics
invalidate	CodeGen/MachineTraceMetrics.h	/^    void invalidate() { InstrCount = ~0u; }$/;"	f	struct:llvm::MachineTraceMetrics::FixedBlockInfo
invalidateCachedPointerInfo	Analysis/MemoryDependenceAnalysis.cpp	/^void MemoryDependenceAnalysis::invalidateCachedPointerInfo(Value *Ptr) {$/;"	f	class:MemoryDependenceAnalysis
invalidateCachedPredecessors	Analysis/MemoryDependenceAnalysis.cpp	/^void MemoryDependenceAnalysis::invalidateCachedPredecessors() {$/;"	f	class:MemoryDependenceAnalysis
invalidateDepth	CodeGen/MachineTraceMetrics.h	/^    void invalidateDepth() { InstrDepth = ~0u; HasValidInstrDepths = false; }$/;"	f	struct:llvm::MachineTraceMetrics::TraceBlockInfo
invalidateHeight	CodeGen/MachineTraceMetrics.h	/^    void invalidateHeight() { InstrHeight = ~0u; HasValidInstrHeights = false; }$/;"	f	struct:llvm::MachineTraceMetrics::TraceBlockInfo
invalidateTraces	CodeGen/EarlyIfConversion.cpp	/^void EarlyIfConverter::invalidateTraces() {$/;"	f	class:EarlyIfConverter
invalidateVirtRegs	CodeGen/LiveRegMatrix.h	/^  void invalidateVirtRegs() { ++UserTag; }$/;"	f	class:llvm::LiveRegMatrix
inverse	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::inverse() const {$/;"	f	class:ConstantRange
is16BitEquvalent	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static BOOL is16BitEquvalent(const char* orig, const char* equiv) {$/;"	f	file:
is32BitMode	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  bool is32BitMode() const {$/;"	f	class:__anon353::X86MCCodeEmitter
is64Bit	MC/ELFObjectWriter.cpp	/^    bool is64Bit() const { return TargetObjectWriter->is64Bit(); }$/;"	f	class:__anon225::ELFObjectWriter
is64Bit	Target/NVPTX/NVPTXSubtarget.h	/^  bool is64Bit() const { return Is64Bit; }$/;"	f	class:llvm::NVPTXSubtarget
is64Bit	Target/PowerPC/PPCJITInfo.h	/^    bool is64Bit;$/;"	m	class:llvm::PPCJITInfo
is64Bit	Target/Sparc/SparcSubtarget.h	/^  bool is64Bit() const { return Is64Bit; }$/;"	f	class:llvm::SparcSubtarget
is64Bit	Target/X86/X86Subtarget.h	/^  bool is64Bit() const { return In64BitMode; }$/;"	f	class:llvm::X86Subtarget
is64BitLoadCommand	Object/MachOObjectFile.cpp	/^static bool is64BitLoadCommand(const MachOObject *MachOObj, DataRefImpl DRI) {$/;"	f	namespace:llvm::object
is64BitMode	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool is64BitMode() const {$/;"	f	class:__anon335::X86AsmParser	file:
is64BitMode	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  bool is64BitMode() const {$/;"	f	class:__anon353::X86MCCodeEmitter
is64bit	Target/NVPTX/NVPTXFrameLowering.h	/^  bool is64bit;$/;"	m	class:llvm::NVPTXFrameLowering
isAAPCS_ABI	Target/ARM/ARMSubtarget.h	/^  bool isAAPCS_ABI() const { return TargetABI == ARM_ABI_AAPCS; }$/;"	f	class:llvm::ARMSubtarget
isABI_EABI	Target/Mips/MipsSubtarget.h	/^  bool isABI_EABI() const { return MipsABI == EABI; }$/;"	f	class:llvm::MipsSubtarget
isABI_N32	Target/Mips/MipsSubtarget.h	/^  bool isABI_N32() const { return MipsABI == N32; }$/;"	f	class:llvm::MipsSubtarget
isABI_N64	Target/Mips/MipsSubtarget.h	/^  bool isABI_N64() const { return MipsABI == N64; }$/;"	f	class:llvm::MipsSubtarget
isABI_O32	Target/Mips/MipsSubtarget.h	/^  bool isABI_O32() const { return MipsABI == O32; }$/;"	f	class:llvm::MipsSubtarget
isADDADDMUL	Target/XCore/XCoreISelLowering.cpp	/^isADDADDMUL(SDValue Op, SDValue &Mul0, SDValue &Mul1, SDValue &Addend0,$/;"	f	file:
isAM2OffsetImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isAM2OffsetImm() const {$/;"	f	class:__anon261::ARMOperand
isAM3Offset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isAM3Offset() const {$/;"	f	class:__anon261::ARMOperand
isAPCS_ABI	Target/ARM/ARMSubtarget.h	/^  bool isAPCS_ABI() const { return TargetABI == ARM_ABI_APCS; }$/;"	f	class:llvm::ARMSubtarget
isARClass	Target/ARM/ARMSubtarget.h	/^  bool isARClass() const { return !IsMClass; }$/;"	f	class:llvm::ARMSubtarget
isARMArea1Register	Target/ARM/ARMBaseRegisterInfo.h	/^static inline bool isARMArea1Register(unsigned Reg, bool isIOS) {$/;"	f	namespace:llvm
isARMArea2Register	Target/ARM/ARMBaseRegisterInfo.h	/^static inline bool isARMArea2Register(unsigned Reg, bool isIOS) {$/;"	f	namespace:llvm
isARMArea3Register	Target/ARM/ARMBaseRegisterInfo.h	/^static inline bool isARMArea3Register(unsigned Reg, bool isIOS) {$/;"	f	namespace:llvm
isARMLowRegister	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^static inline bool isARMLowRegister(unsigned Reg) {$/;"	f	namespace:llvm
isARMNEONPred	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::isARMNEONPred(const MachineInstr *MI) {$/;"	f	class:ARMFastISel
isARMSOImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isARMSOImm() const {$/;"	f	class:__anon261::ARMOperand
isARMSOImmNeg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isARMSOImmNeg() const {$/;"	f	class:__anon261::ARMOperand
isARMSOImmNot	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isARMSOImmNot() const {$/;"	f	class:__anon261::ARMOperand
isASR	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      bool isASR;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon277	file:
isAbsMem	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isAbsMem() const {$/;"	f	struct:__anon336::X86Operand
isAcceptableChar	MC/MCSymbol.cpp	/^static bool isAcceptableChar(char C) {$/;"	f	file:
isAcceptableChar	Target/Mangler.cpp	/^static bool isAcceptableChar(char C, bool AllowPeriod, bool AllowUTF8) {$/;"	f	file:
isAdd	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      bool isAdd;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon276	file:
isAddRecSExtable	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isAddRecSExtable(const SCEVAddRecExpr *AR, ScalarEvolution &SE) {$/;"	f	file:
isAddSExtable	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isAddSExtable(const SCEVAddExpr *A, ScalarEvolution &SE) {$/;"	f	file:
isAddSubSExt	Target/ARM/ARMISelLowering.cpp	/^static bool isAddSubSExt(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
isAddSubZExt	Target/ARM/ARMISelLowering.cpp	/^static bool isAddSubZExt(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
isAddrMode2	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isAddrMode2() const {$/;"	f	class:__anon261::ARMOperand
isAddrMode3	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isAddrMode3() const {$/;"	f	class:__anon261::ARMOperand
isAddrMode5	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isAddrMode5() const {$/;"	f	class:__anon261::ARMOperand
isAddressUse	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isAddressUse(Instruction *Inst, Value *OperandVal) {$/;"	f	file:
isAdrLabel	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isAdrLabel() const {$/;"	f	class:__anon261::ARMOperand
isAffine	Analysis/LoopDependenceAnalysis.cpp	/^bool LoopDependenceAnalysis::isAffine(const SCEV *S) const {$/;"	f	class:LoopDependenceAnalysis
isAgentAvailable	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^bool OProfileWrapper::isAgentAvailable() {$/;"	f	class:llvm::OProfileWrapper
isAlias	CodeGen/SelectionDAG/DAGCombiner.cpp	/^bool DAGCombiner::isAlias(SDValue Ptr1, int64_t Size1,$/;"	f	class:DAGCombiner
isAliasUsed	CodeGen/RegisterScavenging.cpp	/^bool RegScavenger::isAliasUsed(unsigned Reg) const {$/;"	f	class:RegScavenger
isAliased	CodeGen/PseudoSourceValue.cpp	/^bool FixedStackPseudoSourceValue::isAliased(const MachineFrameInfo *MFI) const {$/;"	f	class:FixedStackPseudoSourceValue
isAliased	CodeGen/PseudoSourceValue.cpp	/^bool PseudoSourceValue::isAliased(const MachineFrameInfo *MFI) const {$/;"	f	class:PseudoSourceValue
isAlignOf	Analysis/ScalarEvolution.cpp	/^bool SCEVUnknown::isAlignOf(Type *&AllocTy) const {$/;"	f	class:SCEVUnknown
isAlignedMemory	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isAlignedMemory() const {$/;"	f	class:__anon261::ARMOperand
isAllNegativeZeroVector	Target/PowerPC/PPCISelLowering.cpp	/^bool PPC::isAllNegativeZeroVector(SDNode *N) {$/;"	f	class:PPC
isAllOnes	Target/X86/X86ISelLowering.cpp	/^static bool isAllOnes(SDValue V) {$/;"	f	file:
isAllOnesValue	Analysis/ScalarEvolution.cpp	/^bool SCEV::isAllOnesValue() const {$/;"	f	class:SCEV
isAllOnesValue	VMCore/Constants.cpp	/^bool Constant::isAllOnesValue() const {$/;"	f	class:Constant
isAllZeros	VMCore/Constants.cpp	/^static bool isAllZeros(StringRef Arr) {$/;"	f	file:
isAllocLikeFn	Analysis/MemoryBuiltins.cpp	/^bool llvm::isAllocLikeFn(const Value *V, const TargetLibraryInfo *TLI,$/;"	f	class:llvm
isAllocSiteRemovable	Transforms/InstCombine/InstructionCombining.cpp	/^isAllocSiteRemovable(Instruction *AI, SmallVectorImpl<WeakVH> &Users,$/;"	f	file:
isAllocaDerivedArg	Analysis/InlineCost.cpp	/^bool CallAnalyzer::isAllocaDerivedArg(Value *V) {$/;"	f	class:CallAnalyzer
isAllocaPromotable	Transforms/Utils/PromoteMemoryToRegister.cpp	/^bool llvm::isAllocaPromotable(const AllocaInst *AI) {$/;"	f	class:llvm
isAllocatable	CodeGen/MachineVerifier.cpp	/^    bool isAllocatable(unsigned Reg) {$/;"	f	struct:__anon139::MachineVerifier
isAllocated	Target/Hexagon/HexagonCallingConvLower.h	/^  bool isAllocated(unsigned Reg) const {$/;"	f	class:llvm::Hexagon_CCState
isAllocationFn	Analysis/MemoryBuiltins.cpp	/^bool llvm::isAllocationFn(const Value *V, const TargetLibraryInfo *TLI,$/;"	f	class:llvm
isAlreadyCodeGenerating	ExecutionEngine/JIT/JIT.h	/^  bool isAlreadyCodeGenerating;$/;"	m	class:llvm::JIT
isAlwaysFoldable	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isAlwaysFoldable(const SCEV *S,$/;"	f	file:
isAlwaysFoldable	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isAlwaysFoldable(int64_t BaseOffs,$/;"	f	file:
isAlwaysInline	Analysis/InlineCost.cpp	/^  bool isAlwaysInline() { return AlwaysInline; }$/;"	f	class:__anon28::CallAnalyzer
isAmplifierRunning	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^  bool isAmplifierRunning() {$/;"	f	class:llvm::IntelJITEventsWrapper
isAnalyzed	CodeGen/RegisterCoalescer.cpp	/^    bool isAnalyzed() const { return WriteLanes != 0; }$/;"	f	struct:__anon115::JoinVals::Val
isAndOrOfSetCCs	Target/X86/X86ISelLowering.cpp	/^static bool isAndOrOfSetCCs(SDValue Op, unsigned &Opc) {$/;"	f	file:
isAndroid	Target/Mips/MipsSubtarget.h	/^  bool isAndroid() const { return IsAndroid; }$/;"	f	class:llvm::MipsSubtarget
isAnti	Analysis/DependenceAnalysis.cpp	/^bool Dependence::isAnti() const {$/;"	f	class:Dependence
isArch16Bit	Support/Triple.cpp	/^bool Triple::isArch16Bit() const {$/;"	f	class:Triple
isArch32Bit	Support/Triple.cpp	/^bool Triple::isArch32Bit() const {$/;"	f	class:Triple
isArch64Bit	Support/Triple.cpp	/^bool Triple::isArch64Bit() const {$/;"	f	class:Triple
isArchive	Support/Path.cpp	/^Path::isArchive() const {$/;"	f	class:Path
isArrayAllocation	VMCore/Instructions.cpp	/^bool AllocaInst::isArrayAllocation() const {$/;"	f	class:AllocaInst
isArrayMalloc	Analysis/MemoryBuiltins.cpp	/^const CallInst *llvm::isArrayMalloc(const Value *I,$/;"	f	class:llvm
isArtificial	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isArtificial()                const {$/;"	f	class:llvm::DbgVariable
isAssignedReg	CodeGen/VirtRegMap.h	/^    bool isAssignedReg(unsigned virtReg) const {$/;"	f	class:llvm::VirtRegMap
isAssociative	VMCore/Instruction.cpp	/^bool Instruction::isAssociative(unsigned Opcode) {$/;"	f	class:Instruction
isAtStartOfComment	MC/MCParser/AsmLexer.cpp	/^bool AsmLexer::isAtStartOfComment(char Char) {$/;"	f	class:AsmLexer
isAtStatementSeparator	MC/MCParser/AsmLexer.cpp	/^bool AsmLexer::isAtStatementSeparator(const char *Ptr) {$/;"	f	class:AsmLexer
isAtTop	Target/X86/X86FloatingPoint.cpp	/^    bool isAtTop(unsigned RegNo) const { return getSlot(RegNo) == StackTop-1; }$/;"	f	struct:__anon386::FPS	file:
isAtom	Target/X86/X86Subtarget.h	/^  bool isAtom() const { return X86ProcFamily == IntelAtom; }$/;"	f	class:llvm::X86Subtarget
isAtomic	Transforms/Instrumentation/ThreadSanitizer.cpp	/^static bool isAtomic(Instruction *I) {$/;"	f	file:
isBBInRange	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::isBBInRange(MachineInstr *MI,MachineBasicBlock *DestBB,$/;"	f	class:ARMConstantIslands
isBGP	Target/PowerPC/PPCSubtarget.h	/^  bool isBGP() const { return TargetTriple.getVendor() == Triple::BGP; }$/;"	f	class:llvm::PPCSubtarget
isBLACompatibleAddress	Target/PowerPC/PPCISelLowering.cpp	/^static SDNode *isBLACompatibleAddress(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
isBSwapHWordElement	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static bool isBSwapHWordElement(SDValue N, SmallVector<SDNode*,4> &Parts) {$/;"	f	file:
isBTMemSlow	Target/X86/X86Subtarget.h	/^  bool isBTMemSlow() const { return IsBTMemSlow; }$/;"	f	class:llvm::X86Subtarget
isBarrierIntrinsic	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::isBarrierIntrinsic(Intrinsic::ID id) {$/;"	f	class:llvm
isBaseAddressKnownZero	Target/NVPTX/NVPTXSection.h	/^  virtual bool isBaseAddressKnownZero() const { return true; }$/;"	f	class:llvm::NVPTXSection
isBaseAddressSelectionEntry	DebugInfo/DWARFDebugRangeList.h	/^    bool isBaseAddressSelectionEntry(uint8_t AddressSize) const {$/;"	f	struct:llvm::DWARFDebugRangeList::RangeListEntry
isBaseWithConstantOffset	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SelectionDAG::isBaseWithConstantOffset(SDValue Op) const {$/;"	f	class:SelectionDAG
isBasicType	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isBasicType() const {$/;"	f	class:DIDescriptor
isBigEndian	Target/Mips/Disassembler/MipsDisassembler.cpp	/^  bool isBigEndian;$/;"	m	class:__anon433::MipsDisassemblerBase	file:
isBitFieldInvertedMask	Target/ARM/ARMISelLowering.cpp	/^bool ARM::isBitFieldInvertedMask(unsigned v) {$/;"	f	class:ARM
isBitcodeArchive	Archive/ArchiveReader.cpp	/^bool Archive::isBitcodeArchive() {$/;"	f	class:Archive
isBitcodeFile	Support/Path.cpp	/^Path::isBitcodeFile() const {$/;"	f	class:Path
isBitfield	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isBitfield() const { return Kind == k_BitfieldDescriptor; }$/;"	f	class:__anon261::ARMOperand
isBlankOrBreak	Support/YAMLParser.cpp	/^bool Scanner::isBlankOrBreak(StringRef::iterator Position) {$/;"	f	class:Scanner
isBlock	CodeGen/AsmPrinter/DIE.h	/^      isBlock$/;"	e	enum:llvm::DIEValue::__anon60
isBlockAddress	Target/ARM/ARMConstantPoolValue.h	/^  bool isBlockAddress() const { return Kind == ARMCP::CPBlockAddress; }$/;"	f	class:llvm::ARMConstantPoolValue
isBlockByrefVariable	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isBlockByrefVariable()        const {$/;"	f	class:llvm::DbgVariable
isBlockExecutable	Transforms/Scalar/SCCP.cpp	/^  bool isBlockExecutable(BasicBlock *BB) const {$/;"	f	class:__anon531::SCCPSolver
isBlockForm	DebugInfo/DWARFFormValue.cpp	/^bool DWARFFormValue::isBlockForm(uint16_t form) {$/;"	f	class:DWARFFormValue
isBlockOnlyReachableByFallthrough	CodeGen/AsmPrinter/AsmPrinter.cpp	/^isBlockOnlyReachableByFallthrough(const MachineBasicBlock *MBB) const {$/;"	f	class:AsmPrinter
isBlockOnlyReachableByFallthrough	Target/Hexagon/HexagonAsmPrinter.cpp	/^isBlockOnlyReachableByFallthrough(const MachineBasicBlock *MBB) const {$/;"	f	class:HexagonAsmPrinter
isBlockOnlyReachableByFallthrough	Target/MBlaze/MBlazeAsmPrinter.cpp	/^isBlockOnlyReachableByFallthrough(const MachineBasicBlock *MBB) const {$/;"	f	class:MBlazeAsmPrinter
isBlockOnlyReachableByFallthrough	Target/Mips/MipsAsmPrinter.cpp	/^bool MipsAsmPrinter::isBlockOnlyReachableByFallthrough(const MachineBasicBlock*$/;"	f	class:MipsAsmPrinter
isBlockOnlyReachableByFallthrough	Target/Sparc/SparcAsmPrinter.cpp	/^isBlockOnlyReachableByFallthrough(const MachineBasicBlock *MBB) const {$/;"	f	class:SparcAsmPrinter
isBlockValidForExtraction	Transforms/Utils/CodeExtractor.cpp	/^static bool isBlockValidForExtraction(const BasicBlock &BB) {$/;"	f	file:
isBookE	Target/PowerPC/PPCSubtarget.h	/^  bool isBookE() const { return IsBookE; }$/;"	f	class:llvm::PPCSubtarget
isBottomClosed	CodeGen/RegisterPressure.cpp	/^bool RegPressureTracker::isBottomClosed() const {$/;"	f	class:RegPressureTracker
isBottomUp	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool isBottomUp() const { return SF::IsBottomUp; }$/;"	f	class:__anon77::RegReductionPriorityQueue
isBranch	MC/MCDisassembler/EDInst.cpp	/^bool EDInst::isBranch() {$/;"	f	class:EDInst
isBuildVectorAllOnes	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool ISD::isBuildVectorAllOnes(const SDNode *N) {$/;"	f	class:ISD
isBuildVectorAllZeros	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool ISD::isBuildVectorAllZeros(const SDNode *N) {$/;"	f	class:ISD
isBulkSpilling	CodeGen/RegAllocFast.cpp	/^    bool isBulkSpilling;$/;"	m	class:__anon140::RAFast	file:
isBundled	CodeGen/MachineInstr.cpp	/^bool MachineInstr::isBundled() const {$/;"	f	class:MachineInstr
isBytewiseValue	Analysis/ValueTracking.cpp	/^Value *llvm::isBytewiseValue(Value *V) {$/;"	f	class:llvm
isCCOut	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isCCOut() const { return Kind == k_CCOut; }$/;"	f	class:__anon261::ARMOperand
isCPEntryInRange	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::isCPEntryInRange(MachineInstr *MI, unsigned UserOffset,$/;"	f	class:ARMConstantIslands
isCRSpilled	Target/PowerPC/PPCMachineFunctionInfo.h	/^  bool isCRSpilled() const { return SpillsCR; }$/;"	f	class:llvm::PPCFunctionInfo
isCSECandidate	CodeGen/MachineCSE.cpp	/^bool MachineCSE::isCSECandidate(MachineInstr *MI) {$/;"	f	class:MachineCSE
isCSRestore	Target/ARM/ARMFrameLowering.cpp	/^static bool isCSRestore(MachineInstr *MI,$/;"	f	file:
isCSRestore	Target/ARM/Thumb1FrameLowering.cpp	/^static bool isCSRestore(MachineInstr *MI, const uint16_t *CSRegs) {$/;"	f	file:
isCString	VMCore/Constants.cpp	/^bool ConstantDataSequential::isCString() const {$/;"	f	class:ConstantDataSequential
isCalleeLoad	Target/X86/X86ISelDAGToDAG.cpp	/^static bool isCalleeLoad(SDValue Callee, SDValue &Chain, bool HasCallSeq) {$/;"	f	file:
isCalleePop	Target/X86/X86ISelLowering.cpp	/^bool X86::isCalleePop(CallingConv::ID CallingConv,$/;"	f	class:X86
isCalleeSavedRegister	Target/ARM/ARMFrameLowering.cpp	/^static bool isCalleeSavedRegister(unsigned Reg, const uint16_t *CSRegs) {$/;"	f	file:
isCalleeSavedRegister	Target/ARM/Thumb1FrameLowering.cpp	/^static bool isCalleeSavedRegister(unsigned Reg, const uint16_t *CSRegs) {$/;"	f	file:
isCallocLikeFn	Analysis/MemoryBuiltins.cpp	/^bool llvm::isCallocLikeFn(const Value *V, const TargetLibraryInfo *TLI,$/;"	f	class:llvm
isCast	VMCore/Constants.cpp	/^bool ConstantExpr::isCast() const {$/;"	f	class:ConstantExpr
isCastable	VMCore/Instructions.cpp	/^bool CastInst::isCastable(Type *SrcTy, Type *DestTy) {$/;"	f	class:CastInst
isCatchAll	Transforms/InstCombine/InstructionCombining.cpp	/^static bool isCatchAll(Personality_Type Personality, Constant *TypeInfo) {$/;"	f	file:
isCoalescable	CodeGen/RegisterCoalescer.cpp	/^bool CoalescerPair::isCoalescable(const MachineInstr *MI) const {$/;"	f	class:CoalescerPair
isCoalescableExtInstr	Target/PowerPC/PPCInstrInfo.cpp	/^bool PPCInstrInfo::isCoalescableExtInstr(const MachineInstr &MI,$/;"	f	class:PPCInstrInfo
isCoalescableExtInstr	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::isCoalescableExtInstr(const MachineInstr &MI,$/;"	f	class:X86InstrInfo
isCoercedLoadValue	Transforms/Scalar/GVN.cpp	/^  bool isCoercedLoadValue() const { return Val.getInt() == LoadVal; }$/;"	f	struct:__anon538::AvailableValueInBlock
isCollapsed	CodeGen/ExecutionDepsFix.cpp	/^  bool isCollapsed() const { return Instrs.empty(); }$/;"	f	struct:__anon118::DomainValue
isCommonDomFrontier	Analysis/RegionInfo.cpp	/^bool RegionInfo::isCommonDomFrontier(BasicBlock *BB, BasicBlock *entry,$/;"	f	class:RegionInfo
isCommutative	VMCore/Instruction.cpp	/^bool Instruction::isCommutative(unsigned op) {$/;"	f	class:Instruction
isCommutative	VMCore/Instructions.cpp	/^bool CmpInst::isCommutative() const {$/;"	f	class:CmpInst
isCommutedMOVLMask	Target/X86/X86ISelLowering.cpp	/^static bool isCommutedMOVLMask(ArrayRef<int> Mask, EVT VT,$/;"	f	file:
isCompare	VMCore/Constants.cpp	/^bool ConstantExpr::isCompare() const {$/;"	f	class:ConstantExpr
isCompareEqualsImm	Target/Hexagon/HexagonHardwareLoops.cpp	/^static bool isCompareEqualsImm(const MachineInstr *MI) {$/;"	f	file:
isCompareEqualsImm	Target/PowerPC/PPCCTRLoops.cpp	/^static bool isCompareEqualsImm(const MachineInstr *MI, bool &SignedCmp) {$/;"	f	file:
isCompared	Transforms/IPO/GlobalOpt.cpp	/^  bool isCompared;$/;"	m	struct:__anon590::GlobalStatus	file:
isCompatibleAggregate	Transforms/Scalar/ScalarReplAggregates.cpp	/^static bool isCompatibleAggregate(Type *T1, Type *T2) {$/;"	f	file:
isCompatibleFormat	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^bool RuntimeDyldELF::isCompatibleFormat(const ObjectBuffer *Buffer) const {$/;"	f	class:llvm::RuntimeDyldELF
isCompatibleFormat	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp	/^bool RuntimeDyldMachO::isCompatibleFormat($/;"	f	class:llvm::RuntimeDyldMachO
isCompatibleIVType	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isCompatibleIVType(Value *LVal, Value *RVal) {$/;"	f	file:
isCompileUnit	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isCompileUnit() const {$/;"	f	class:DIDescriptor
isCompiled	ExecutionEngine/MCJIT/MCJIT.h	/^  bool isCompiled;$/;"	m	class:llvm::MCJIT
isComplete	CodeGen/ScheduleDAGInstrs.cpp	/^  bool isComplete() const { return DFSStack.empty(); }$/;"	f	class:__anon110::SchedDAGReverseDFS
isCompositeType	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isCompositeType() const {$/;"	f	class:DIDescriptor
isCond	Target/ARM/ARMConstantIslandPass.cpp	/^      bool isCond : 1;$/;"	m	struct:__anon310::ARMConstantIslands::ImmBranch	file:
isCondBranch	Target/CellSPU/SPUInstrInfo.cpp	/^  inline bool isCondBranch(const MachineInstr *I) {$/;"	f	namespace:__anon416
isCondBranchOpcode	Target/ARM/ARMBaseInstrInfo.h	/^bool isCondBranchOpcode(int Opc) {$/;"	f	namespace:llvm
isCondBranchOpcode	Target/MBlaze/MBlazeInstrInfo.h	/^  inline static bool isCondBranchOpcode(int Opc) {$/;"	f	namespace:llvm::MBlaze
isCondCode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isCondCode() const { return Kind == k_CondCode; }$/;"	f	class:__anon261::ARMOperand
isCondInst	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::isCondInst (MachineInstr* MI) {$/;"	f	class:HexagonPacketizerList
isConditionalALU32	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isConditionalALU32 (const MachineInstr* MI) const {$/;"	f	class:HexagonInstrInfo
isConditionalBranch	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^  virtual bool isConditionalBranch(const MCInst &Inst) const {$/;"	f	class:__anon282::ARMMCInstrAnalysis
isConditionalLoad	Target/Hexagon/HexagonInstrInfo.cpp	/^isConditionalLoad (const MachineInstr* MI) const {$/;"	f	class:HexagonInstrInfo
isConditionalStore	Target/Hexagon/HexagonInstrInfo.cpp	/^isConditionalStore (const MachineInstr* MI) const {$/;"	f	class:HexagonInstrInfo
isConditionalTransfer	Target/Hexagon/HexagonInstrInfo.cpp	/^isConditionalTransfer (const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isConditionalZeroOrAllOnes	Target/ARM/ARMISelLowering.cpp	/^static bool isConditionalZeroOrAllOnes(SDNode *N, bool AllOnes,$/;"	f	file:
isConsecutiveGep	Transforms/Vectorize/LoopVectorize.cpp	/^bool LoopVectorizationLegality::isConsecutiveGep(Value *Ptr) {$/;"	f	class:__anon605::LoopVectorizationLegality
isConsecutiveLoad	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SelectionDAG::isConsecutiveLoad(LoadSDNode *LD, LoadSDNode *Base,$/;"	f	class:SelectionDAG
isConstVecPow2	Target/ARM/ARMISelLowering.cpp	/^static bool isConstVecPow2(SDValue ConstVec, bool isSigned, uint64_t &C)$/;"	f	file:
isConstant	Analysis/LazyValueInfo.cpp	/^  bool isConstant() const      { return Tag == constant; }$/;"	f	class:__anon18::LVILatticeVal
isConstant	CodeGen/PseudoSourceValue.cpp	/^bool FixedStackPseudoSourceValue::isConstant(const MachineFrameInfo *MFI) const{$/;"	f	class:FixedStackPseudoSourceValue
isConstant	CodeGen/PseudoSourceValue.cpp	/^bool PseudoSourceValue::isConstant(const MachineFrameInfo *) const {$/;"	f	class:PseudoSourceValue
isConstant	Transforms/Scalar/SCCP.cpp	/^  bool isConstant() const {$/;"	f	class:__anon530::LatticeVal
isConstantAllOnes	VMCore/Instructions.cpp	/^static inline bool isConstantAllOnes(const Value *V) {$/;"	f	file:
isConstantFP	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isConstantFP() const  { return EntryKind == E_ConstantFP; }$/;"	f	struct:llvm::DotDebugLocEntry
isConstantInt	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isConstantInt() const { return EntryKind == E_ConstantInt; }$/;"	f	struct:llvm::DotDebugLocEntry
isConstantOrUndef	Target/PowerPC/PPCISelLowering.cpp	/^static bool isConstantOrUndef(int Op, int Val) {$/;"	f	file:
isConstantPhysReg	CodeGen/MachineRegisterInfo.cpp	/^bool MachineRegisterInfo::isConstantPhysReg(unsigned PhysReg,$/;"	f	class:MachineRegisterInfo
isConstantRange	Analysis/LazyValueInfo.cpp	/^  bool isConstantRange() const { return Tag == constantrange; }$/;"	f	class:__anon18::LVILatticeVal
isConstantSplat	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool BuildVectorSDNode::isConstantSplat(APInt &SplatValue,$/;"	f	class:BuildVectorSDNode
isConstantUsed	VMCore/Constants.cpp	/^bool Constant::isConstantUsed() const {$/;"	f	class:Constant
isConstantValuePHI	CodeGen/MachineInstr.cpp	/^unsigned MachineInstr::isConstantValuePHI() const {$/;"	f	class:MachineInstr
isContiguous	VMCore/Metadata.cpp	/^static bool isContiguous(const ConstantRange &A, const ConstantRange &B) {$/;"	f	file:
isContiguous	VMCore/Verifier.cpp	/^static bool isContiguous(const ConstantRange &A, const ConstantRange &B) {$/;"	f	file:
isCoprocNum	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isCoprocNum() const { return Kind == k_CoprocNum; }$/;"	f	class:__anon261::ARMOperand
isCoprocOption	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isCoprocOption() const { return Kind == k_CoprocOption; }$/;"	f	class:__anon261::ARMOperand
isCoprocReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isCoprocReg() const { return Kind == k_CoprocReg; }$/;"	f	class:__anon261::ARMOperand
isCopy	Target/ARM/Thumb2ITBlockPass.cpp	/^static bool isCopy(MachineInstr *MI) {$/;"	f	file:
isCopyToReg	CodeGen/TwoAddressInstructionPass.cpp	/^static bool isCopyToReg(MachineInstr &MI, const TargetInstrInfo *TII,$/;"	f	file:
isCortexA15	Target/ARM/ARMSubtarget.h	/^  bool isCortexA15() const { return ARMProcFamily == CortexA15; }$/;"	f	class:llvm::ARMSubtarget
isCortexA8	Target/ARM/ARMSubtarget.h	/^  bool isCortexA8() const { return ARMProcFamily == CortexA8; }$/;"	f	class:llvm::ARMSubtarget
isCortexA9	Target/ARM/ARMSubtarget.h	/^  bool isCortexA9() const { return ARMProcFamily == CortexA9; }$/;"	f	class:llvm::ARMSubtarget
isCortexM3	Target/ARM/ARMSubtarget.h	/^  bool isCortexM3() const { return CPUString == "cortex-m3"; }$/;"	f	class:llvm::ARMSubtarget
isCounterIncrement	Transforms/Instrumentation/PathProfiling.cpp	/^bool BLInstrumentationEdge::isCounterIncrement() const {$/;"	f	class:BLInstrumentationEdge
isCriticalEdge	Transforms/Utils/BreakCriticalEdges.cpp	/^bool llvm::isCriticalEdge(const TerminatorInst *TI, unsigned SuccNum,$/;"	f	class:llvm
isCrossClass	CodeGen/RegisterCoalescer.h	/^    bool isCrossClass() const { return CrossClass; }$/;"	f	class:llvm::CoalescerPair
isCurrentDebugType	Support/Debug.cpp	/^bool llvm::isCurrentDebugType(const char *DebugType) {$/;"	f	class:llvm
isDPRCalleeSavedAreaFrame	Target/ARM/ARMMachineFunctionInfo.h	/^  bool isDPRCalleeSavedAreaFrame(int fi) const {$/;"	f	class:llvm::ARMFunctionInfo
isDPRRegList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isDPRRegList() const { return Kind == k_DPRRegisterList; }$/;"	f	class:__anon261::ARMOperand
isDarwin	Target/ARM/ARMSubtarget.h	/^    isELF, isDarwin$/;"	e	enum:llvm::ARMSubtarget::__anon298
isDarwin	Target/PowerPC/PPCSubtarget.h	/^  bool isDarwin() const { return TargetTriple.isMacOSX(); }$/;"	f	class:llvm::PPCSubtarget
isDarwinABI	Target/PowerPC/PPCSubtarget.h	/^  bool isDarwinABI() const { return isDarwin(); }$/;"	f	class:llvm::PPCSubtarget
isDarwinGDBCompat	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isDarwinGDBCompat;$/;"	m	class:llvm::DwarfDebug
isDarwinSyntax	Target/PowerPC/InstPrinter/PPCInstPrinter.h	/^  bool isDarwinSyntax() const {$/;"	f	class:llvm::PPCInstPrinter
isDataForm	DebugInfo/DWARFFormValue.cpp	/^bool DWARFFormValue::isDataForm(uint16_t form) {$/;"	f	class:DWARFFormValue
isDataTypeToken	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static bool isDataTypeToken(StringRef Tok) {$/;"	f	file:
isDbgValueInDefinedReg	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static bool isDbgValueInDefinedReg(const MachineInstr *MI) {$/;"	f	file:
isDead	CodeGen/DeadMachineInstructionElim.cpp	/^bool DeadMachineInstructionElim::isDead(const MachineInstr *MI) const {$/;"	f	class:DeadMachineInstructionElim
isDead	Target/PowerPC/PPCCTRLoops.cpp	/^bool PPCCTRLoops::isDead(const MachineInstr *MI,$/;"	f	class:PPCCTRLoops
isDead	Transforms/Scalar/SROA.cpp	/^    bool isDead() const {$/;"	f	struct:__anon557::AllocaPartitioning::Partition
isDeallocRet	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isDeallocRet(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isDeclaration	VMCore/Globals.cpp	/^bool GlobalValue::isDeclaration() const {$/;"	f	class:GlobalValue
isDefConvertible	Target/X86/X86InstrInfo.cpp	/^inline static bool isDefConvertible(MachineInstr *MI) {$/;"	f	file:
isDefLiveOut	CodeGen/TailDuplication.cpp	/^static bool isDefLiveOut(unsigned Reg, MachineBasicBlock *BB,$/;"	f	file:
isDefTooClose	CodeGen/TwoAddressInstructionPass.cpp	/^bool TwoAddressInstructionPass::isDefTooClose(unsigned Reg, unsigned Dist,$/;"	f	class:TwoAddressInstructionPass
isDefTriviallyDead	VMCore/Function.cpp	/^bool Function::isDefTriviallyDead() const {$/;"	f	class:Function
isDelayFiller	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^static bool isDelayFiller(MachineBasicBlock &MBB,$/;"	f	file:
isDelayFiller	Target/Sparc/DelaySlotFiller.cpp	/^bool Filler::isDelayFiller(MachineBasicBlock &MBB,$/;"	f	class:Filler
isDelta	CodeGen/AsmPrinter/DIE.h	/^      isDelta,$/;"	e	enum:llvm::DIEValue::__anon60
isDematerializable	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::isDematerializable(const GlobalValue *GV) const {$/;"	f	class:BitcodeReader
isDematerializable	VMCore/Globals.cpp	/^bool GlobalValue::isDematerializable() const {$/;"	f	class:GlobalValue
isDematerializable	VMCore/Module.cpp	/^bool Module::isDematerializable(const GlobalValue *GV) const {$/;"	f	class:Module
isDependencePair	Analysis/LoopDependenceAnalysis.cpp	/^bool LoopDependenceAnalysis::isDependencePair(const Value *A,$/;"	f	class:LoopDependenceAnalysis
isDereferenceablePointer	VMCore/Value.cpp	/^bool Value::isDereferenceablePointer() const {$/;"	f	class:Value
isDereferenceablePointer	VMCore/Value.cpp	/^static bool isDereferenceablePointer(const Value *V,$/;"	f	file:
isDerivedType	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isDerivedType() const {$/;"	f	class:DIDescriptor
isDesirableToTransformToIntegerOp	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::isDesirableToTransformToIntegerOp(unsigned Opc,$/;"	f	class:ARMTargetLowering
isDisp8	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^static bool isDisp8(int Value) {$/;"	f	file:
isDisp8	Target/X86/X86CodeEmitter.cpp	/^static bool isDisp8(int Value) {$/;"	f	file:
isDispSafeForFrameIndex	Target/X86/X86ISelDAGToDAG.cpp	/^static bool isDispSafeForFrameIndex(int64_t Val) {$/;"	f	file:
isDivRemLibcallAvailable	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^static bool isDivRemLibcallAvailable(SDNode *Node, bool isSigned,$/;"	f	file:
isDone	Analysis/ScalarEvolution.cpp	/^  bool isDone() const { return IsFound; }$/;"	f	struct:__anon32::SCEVSearch
isDone	Analysis/ScalarEvolutionExpander.cpp	/^  bool isDone() const { return IsUnsafe; }$/;"	f	struct:__anon23::SCEVFindUnsafe
isDotNewInst	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::isDotNewInst(MachineInstr* MI) {$/;"	f	class:HexagonPacketizerList
isDoubleSpaced	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      bool isDoubleSpaced;$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon272	file:
isDoubleSpacedVectorAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isDoubleSpacedVectorAllLanes() const {$/;"	f	class:__anon261::ARMOperand
isDoubleSpacedVectorIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isDoubleSpacedVectorIndexed() const {$/;"	f	class:__anon261::ARMOperand
isDoubleSpacedVectorList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isDoubleSpacedVectorList() const {$/;"	f	class:__anon261::ARMOperand
isDstOp	Target/X86/AsmParser/X86AsmParser.cpp	/^bool X86AsmParser::isDstOp(X86Operand &Op) {$/;"	f	class:X86AsmParser
isDynamicConstant	Transforms/Scalar/TailRecursionElimination.cpp	/^static bool isDynamicConstant(Value *V, CallInst *CI, ReturnInst *RI) {$/;"	f	file:
isDynamicLibrary	Support/Path.cpp	/^Path::isDynamicLibrary() const {$/;"	f	class:Path
isEAXLiveIn	Target/X86/X86FrameLowering.cpp	/^static bool isEAXLiveIn(MachineFunction &MF) {$/;"	f	file:
isELF	Target/ARM/ARMSubtarget.h	/^    isELF, isDarwin$/;"	e	enum:llvm::ARMSubtarget::__anon298
isEarlierInSameTrace	CodeGen/MachineTraceMetrics.h	/^    bool isEarlierInSameTrace(const TraceBlockInfo &TBI) const {$/;"	f	struct:llvm::MachineTraceMetrics::TraceBlockInfo
isEdgeFeasible	Analysis/SparsePropagation.cpp	/^bool SparseSolver::isEdgeFeasible(BasicBlock *From, BasicBlock *To,$/;"	f	class:SparseSolver
isEdgeFeasible	Transforms/Scalar/SCCP.cpp	/^bool SCCPSolver::isEdgeFeasible(BasicBlock *From, BasicBlock *To) {$/;"	f	class:SCCPSolver
isEdgeHot	Analysis/BranchProbabilityInfo.cpp	/^isEdgeHot(const BasicBlock *Src, const BasicBlock *Dst) const {$/;"	f	class:BranchProbabilityInfo
isEdgeHot	CodeGen/MachineBranchProbabilityInfo.cpp	/^bool MachineBranchProbabilityInfo::isEdgeHot(MachineBasicBlock *Src,$/;"	f	class:MachineBranchProbabilityInfo
isElementTypeCompatible	VMCore/Constants.cpp	/^bool ConstantDataSequential::isElementTypeCompatible(const Type *Ty) {$/;"	f	class:ConstantDataSequential
isEliminableCastPair	Transforms/InstCombine/InstCombineCasts.cpp	/^isEliminableCastPair($/;"	f	file:
isEliminableCastPair	VMCore/Instructions.cpp	/^unsigned CastInst::isEliminableCastPair($/;"	f	class:CastInst
isEmpty	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isEmpty() { return Begin == 0 && End == 0; }$/;"	f	struct:llvm::DotDebugLocEntry
isEmpty	DebugInfo/DWARFDebugAranges.h	/^  bool isEmpty() const { return Aranges.empty(); }$/;"	f	class:llvm::DWARFDebugAranges
isEmpty	Transforms/InstCombine/InstCombineWorklist.h	/^  bool isEmpty() const { return Worklist.empty(); }$/;"	f	class:llvm::InstCombineWorklist
isEmptySet	Support/ConstantRange.cpp	/^bool ConstantRange::isEmptySet() const {$/;"	f	class:ConstantRange
isEmptyTy	VMCore/Type.cpp	/^bool Type::isEmptyTy() const {$/;"	f	class:Type
isEnabled	MC/SubtargetFeature.cpp	/^static inline bool isEnabled(const StringRef Feature) {$/;"	f	file:
isEndOfListEntry	DebugInfo/DWARFDebugRangeList.h	/^    bool isEndOfListEntry() const {$/;"	f	struct:llvm::DWARFDebugRangeList::RangeListEntry
isEndPacket	Target/Hexagon/HexagonMCInst.h	/^    bool isEndPacket() const { return (endPacket); }$/;"	f	class:llvm::HexagonMCInst
isEndPacket	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  bool isEndPacket(const MachineInstr* MI) const {$/;"	f	class:llvm::HexagonMachineFunctionInfo
isEntry	CodeGen/AsmPrinter/DIE.h	/^      isEntry,$/;"	e	enum:llvm::DIEValue::__anon60
isEnumerator	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isEnumerator() const {$/;"	f	class:DIDescriptor
isEqual	MC/MCDwarf.cpp	/^    static bool isEqual(const CIEKey &LHS,$/;"	f	struct:llvm::DenseMapInfo
isEqual	TableGen/Record.cpp	/^  static bool isEqual(const TableGenStringKey& LHS,$/;"	f	struct:llvm::DenseMapInfo
isEqual	Transforms/IPO/MergeFunctions.cpp	/^bool DenseMapInfo<ComparableFunction>::isEqual(const ComparableFunction &LHS,$/;"	f	class:DenseMapInfo
isEqual	Transforms/InstCombine/InstCombinePHI.cpp	/^    static bool isEqual(const LoweredPHIRecord &LHS,$/;"	f	struct:llvm::DenseMapInfo
isEqual	Transforms/Scalar/EarlyCSE.cpp	/^bool DenseMapInfo<CallValue>::isEqual(CallValue LHS, CallValue RHS) {$/;"	f	class:DenseMapInfo
isEqual	Transforms/Scalar/EarlyCSE.cpp	/^bool DenseMapInfo<SimpleValue>::isEqual(SimpleValue LHS, SimpleValue RHS) {$/;"	f	class:DenseMapInfo
isEqual	Transforms/Scalar/GVN.cpp	/^  static bool isEqual(const Expression &LHS, const Expression &RHS) {$/;"	f	struct:llvm::DenseMapInfo
isEqual	Transforms/Scalar/LoopStrengthReduce.cpp	/^  static bool isEqual(const SmallVector<const SCEV *, 2> &LHS,$/;"	f	struct:__anon517::UniquifierDenseMapInfo
isEqual	Transforms/Scalar/LoopStrengthReduce.cpp	/^  static bool isEqual(const std::pair<const SCEV *, LSRUse::KindType> &LHS,$/;"	f	struct:__anon518::UseMapDenseMapInfo
isEqual	Transforms/Utils/BypassSlowDivision.cpp	/^    static bool isEqual(const DivOpInfo &Val1, const DivOpInfo &Val2) {$/;"	f	struct:llvm::DenseMapInfo
isEqual	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  static bool isEqual(const EltTy &LHS, const EltTy &RHS) {$/;"	f	struct:llvm::DenseMapInfo
isEqual	VMCore/ConstantsContext.h	/^    static bool isEqual(const ConstantClass *LHS, const ConstantClass *RHS) {$/;"	f	struct:llvm::ConstantAggrUniqueMap::MapInfo
isEqual	VMCore/ConstantsContext.h	/^    static bool isEqual(const LookupKey &LHS, const ConstantClass *RHS) {$/;"	f	struct:llvm::ConstantAggrUniqueMap::MapInfo
isEqual	VMCore/LLVMContextImpl.h	/^  static bool isEqual(const FunctionType *LHS, const FunctionType *RHS) {$/;"	f	struct:llvm::FunctionTypeKeyInfo
isEqual	VMCore/LLVMContextImpl.h	/^  static bool isEqual(const KeyTy &LHS, const KeyTy &RHS) {$/;"	f	struct:llvm::DenseMapAPFloatKeyInfo
isEqual	VMCore/LLVMContextImpl.h	/^  static bool isEqual(const KeyTy &LHS, const KeyTy &RHS) {$/;"	f	struct:llvm::DenseMapAPIntKeyInfo
isEqual	VMCore/LLVMContextImpl.h	/^  static bool isEqual(const KeyTy& LHS, const FunctionType *RHS) {$/;"	f	struct:llvm::FunctionTypeKeyInfo
isEqual	VMCore/LLVMContextImpl.h	/^  static bool isEqual(const KeyTy& LHS, const StructType *RHS) {$/;"	f	struct:llvm::AnonStructTypeKeyInfo
isEqual	VMCore/LLVMContextImpl.h	/^  static bool isEqual(const StructType *LHS, const StructType *RHS) {$/;"	f	struct:llvm::AnonStructTypeKeyInfo
isEqualTo	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SelectionDAG::isEqualTo(SDValue A, SDValue B) const {$/;"	f	class:SelectionDAG
isEquality	VMCore/Instructions.cpp	/^bool CmpInst::isEquality() const {$/;"	f	class:CmpInst
isEquivalentGEP	Transforms/IPO/MergeFunctions.cpp	/^  bool isEquivalentGEP(const GetElementPtrInst *GEP1,$/;"	f	class:__anon597::FunctionComparator	file:
isEquivalentGEP	Transforms/IPO/MergeFunctions.cpp	/^bool FunctionComparator::isEquivalentGEP(const GEPOperator *GEP1,$/;"	f	class:FunctionComparator
isEquivalentOperation	Transforms/IPO/MergeFunctions.cpp	/^bool FunctionComparator::isEquivalentOperation(const Instruction *I1,$/;"	f	class:FunctionComparator
isEquivalentType	Transforms/IPO/MergeFunctions.cpp	/^bool FunctionComparator::isEquivalentType(Type *Ty1,$/;"	f	class:FunctionComparator
isEscapeSource	Analysis/BasicAliasAnalysis.cpp	/^static bool isEscapeSource(const Value *V) {$/;"	f	file:
isEscaped	Transforms/Scalar/SROA.cpp	/^  bool isEscaped() const { return PointerEscapingInstr; }$/;"	f	class:__anon557::AllocaPartitioning
isEvenPlace	Target/CellSPU/SPUNopFiller.cpp	/^    bool isEvenPlace;  \/\/ the instruction slot (mem address) at hand is even\/odd$/;"	m	struct:__anon417::SPUNopFiller	file:
isExact	VMCore/Instructions.cpp	/^bool BinaryOperator::isExact() const {$/;"	f	class:BinaryOperator
isExactlyValue	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool ConstantFPSDNode::isExactlyValue(const APFloat& V) const {$/;"	f	class:ConstantFPSDNode
isExactlyValue	VMCore/Constants.cpp	/^bool ConstantFP::isExactlyValue(const APFloat &V) const {$/;"	f	class:ConstantFP
isExistingPhi	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isExistingPhi(const SCEVAddRecExpr *AR, ScalarEvolution &SE) {$/;"	f	file:
isExit	Transforms/Scalar/ObjCARC.cpp	/^    bool isExit() const { return Succs.empty(); }$/;"	f	class:__anon507::BBState
isExitBlock	CodeGen/MachineLICM.cpp	/^    bool isExitBlock(const MachineBasicBlock *MBB) const {$/;"	f	class:__anon156::MachineLICM	file:
isExitBlock	Transforms/Utils/LCSSA.cpp	/^static bool isExitBlock(BasicBlock *BB,$/;"	f	file:
isExitingLoop	CodeGen/MachineTraceMetrics.cpp	/^static bool isExitingLoop(const MachineLoop *From, const MachineLoop *To) {$/;"	f	file:
isExpandedAddRecExprPHI	Analysis/ScalarEvolutionExpander.cpp	/^bool SCEVExpander::isExpandedAddRecExprPHI(PHINode *PN, Instruction *IncV,$/;"	f	class:SCEVExpander
isExponentChar	Support/FileUtilities.cpp	/^static bool isExponentChar(char C) {$/;"	f	file:
isExportableFromCurrentBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^bool SelectionDAGBuilder::isExportableFromCurrentBlock(const Value *V,$/;"	f	class:SelectionDAGBuilder
isExtSymbol	Target/ARM/ARMConstantPoolValue.h	/^  bool isExtSymbol() const { return Kind == ARMCP::CPExtSymbol; }$/;"	f	class:llvm::ARMConstantPoolValue
isExtendable	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isExtendable(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isExtended	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isExtended(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isExtended1024BitVector	VMCore/ValueTypes.cpp	/^bool EVT::isExtended1024BitVector() const {$/;"	f	class:EVT
isExtended128BitVector	VMCore/ValueTypes.cpp	/^bool EVT::isExtended128BitVector() const {$/;"	f	class:EVT
isExtended16BitVector	VMCore/ValueTypes.cpp	/^bool EVT::isExtended16BitVector() const {$/;"	f	class:EVT
isExtended256BitVector	VMCore/ValueTypes.cpp	/^bool EVT::isExtended256BitVector() const {$/;"	f	class:EVT
isExtended32BitVector	VMCore/ValueTypes.cpp	/^bool EVT::isExtended32BitVector() const {$/;"	f	class:EVT
isExtended512BitVector	VMCore/ValueTypes.cpp	/^bool EVT::isExtended512BitVector() const {$/;"	f	class:EVT
isExtended64BitVector	VMCore/ValueTypes.cpp	/^bool EVT::isExtended64BitVector() const {$/;"	f	class:EVT
isExtendedBUILD_VECTOR	Target/ARM/ARMISelLowering.cpp	/^static bool isExtendedBUILD_VECTOR(SDNode *N, SelectionDAG &DAG,$/;"	f	file:
isExtendedFloatingPoint	VMCore/ValueTypes.cpp	/^bool EVT::isExtendedFloatingPoint() const {$/;"	f	class:EVT
isExtendedInteger	VMCore/ValueTypes.cpp	/^bool EVT::isExtendedInteger() const {$/;"	f	class:EVT
isExtendedVector	VMCore/ValueTypes.cpp	/^bool EVT::isExtendedVector() const {$/;"	f	class:EVT
isFBits16	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isFBits16() const {$/;"	f	class:__anon261::ARMOperand
isFBits32	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isFBits32() const {$/;"	f	class:__anon261::ARMOperand
isFMAFasterThanMulAndAdd	Target/PowerPC/PPCISelLowering.cpp	/^bool PPCTargetLowering::isFMAFasterThanMulAndAdd(EVT VT) const {$/;"	f	class:PPCTargetLowering
isFMAFasterThanMulAndAdd	Target/X86/X86ISelLowering.h	/^    virtual bool isFMAFasterThanMulAndAdd(EVT) const { return true; }$/;"	f	class:llvm::X86TargetLowering
isFNeg	VMCore/Instructions.cpp	/^bool BinaryOperator::isFNeg(const Value *V) {$/;"	f	class:BinaryOperator
isFP64	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool isFP64() const {$/;"	f	class:__anon422::MipsAsmParser	file:
isFP64bit	Target/Mips/MipsSubtarget.h	/^  bool isFP64bit() const { return IsFP64bit; }$/;"	f	class:llvm::MipsSubtarget
isFPBrccSlow	Target/ARM/ARMSubtarget.h	/^  bool isFPBrccSlow() const { return SlowFPBrcc; }$/;"	f	class:llvm::ARMSubtarget
isFPCopy	Target/X86/X86FloatingPoint.cpp	/^    bool isFPCopy(MachineInstr *MI) {$/;"	f	struct:__anon386::FPS	file:
isFPImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isFPImm() const {$/;"	f	class:__anon261::ARMOperand
isFPImmLegal	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::isFPImmLegal(const APFloat &Imm, EVT VT) const {$/;"	f	class:ARMTargetLowering
isFPImmLegal	Target/Hexagon/HexagonISelLowering.cpp	/^bool HexagonTargetLowering::isFPImmLegal(const APFloat &Imm, EVT VT) const {$/;"	f	class:HexagonTargetLowering
isFPImmLegal	Target/MBlaze/MBlazeISelLowering.cpp	/^bool MBlazeTargetLowering::isFPImmLegal(const APFloat &Imm, EVT VT) const {$/;"	f	class:MBlazeTargetLowering
isFPImmLegal	Target/Mips/MipsISelLowering.cpp	/^bool MipsTargetLowering::isFPImmLegal(const APFloat &Imm, EVT VT) const {$/;"	f	class:MipsTargetLowering
isFPImmLegal	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isFPImmLegal(const APFloat &Imm, EVT VT) const {$/;"	f	class:X86TargetLowering
isFPOnlySP	Target/ARM/ARMSubtarget.h	/^  bool isFPOnlySP() const { return FPOnlySP; }$/;"	f	class:llvm::ARMSubtarget
isFPOrFPVectorTy	VMCore/Type.cpp	/^bool Type::isFPOrFPVectorTy() const {$/;"	f	class:Type
isFPS16Immediate	Target/CellSPU/SPUISelDAGToDAG.cpp	/^  isFPS16Immediate(ConstantFPSDNode *FPN, short &Imm)$/;"	f	namespace:__anon414
isFalseWhenEqual	VMCore/Instructions.cpp	/^bool CmpInst::isFalseWhenEqual(unsigned short predicate) {$/;"	f	class:CmpInst
isFile	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isFile() const {$/;"	f	class:DIDescriptor
isFixed	Target/X86/X86FloatingPoint.cpp	/^      bool isFixed() const { return !Mask || FixCount; }$/;"	f	struct:__anon386::FPS::LiveBundle
isFixupKindPCRel	MC/ELFObjectWriter.cpp	/^bool ELFObjectWriter::isFixupKindPCRel(const MCAssembler &Asm, unsigned Kind) {$/;"	f	class:ELFObjectWriter
isFixupKindPCRel	MC/MachObjectWriter.cpp	/^bool MachObjectWriter::isFixupKindPCRel(const MCAssembler &Asm, unsigned Kind) {$/;"	f	class:MachObjectWriter
isFixupKindRIPRel	Target/X86/MCTargetDesc/X86MachObjectWriter.cpp	/^static bool isFixupKindRIPRel(unsigned Kind) {$/;"	f	file:
isFlipped	CodeGen/RegisterCoalescer.h	/^    bool isFlipped() const { return Flipped; }$/;"	f	class:llvm::CoalescerPair
isFloatingPointZero	Target/ARM/ARMISelLowering.cpp	/^static bool isFloatingPointZero(SDValue Op) {$/;"	f	file:
isFloatingPointZero	Target/PowerPC/PPCISelLowering.cpp	/^static bool isFloatingPointZero(SDValue Op) {$/;"	f	file:
isFlow	Analysis/DependenceAnalysis.cpp	/^bool Dependence::isFlow() const {$/;"	f	class:Dependence
isFoldable	Transforms/Scalar/CodeGenPrepare.cpp	/^  bool isFoldable(unsigned SizeCIOp, unsigned, bool) const {$/;"	f	class:__anon526::CodeGenPrepareFortifiedLibCalls
isFoldable	Transforms/Utils/SimplifyLibCalls.cpp	/^  bool isFoldable(unsigned SizeCIOp, unsigned SizeArgOp, bool isString) const {$/;"	f	struct:__anon473::InstFortifiedLibCallOptimization
isFoldedOrDeadInstruction	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^static bool isFoldedOrDeadInstruction(const Instruction *I,$/;"	f	file:
isFormingBranchFromSelectProfitable	Transforms/Scalar/CodeGenPrepare.cpp	/^static bool isFormingBranchFromSelectProfitable(SelectInst *SI) {$/;"	f	file:
isFpMLxInstruction	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::isFpMLxInstruction(unsigned Opcode, unsigned &MulOpc,$/;"	f	class:ARMBaseInstrInfo
isFpMLxInstruction	Target/ARM/ARMBaseInstrInfo.h	/^  bool isFpMLxInstruction(unsigned Opcode) const {$/;"	f	class:llvm::ARMBaseInstrInfo
isFpMulInstruction	Target/ARM/MLxExpansionPass.cpp	/^static bool isFpMulInstruction(unsigned Opcode) {$/;"	f	file:
isFragmentUpToDate	MC/MCAssembler.cpp	/^bool MCAsmLayout::isFragmentUpToDate(const MCFragment *F) const {$/;"	f	class:MCAsmLayout
isFrameLoadOpcode	Target/X86/X86InstrInfo.cpp	/^static bool isFrameLoadOpcode(int Opcode) {$/;"	f	file:
isFrameOffsetLegal	Target/ARM/ARMBaseRegisterInfo.cpp	/^bool ARMBaseRegisterInfo::isFrameOffsetLegal(const MachineInstr *MI,$/;"	f	class:ARMBaseRegisterInfo
isFrameOperand	Target/X86/X86InstrInfo.cpp	/^bool X86InstrInfo::isFrameOperand(const MachineInstr *MI, unsigned int Op,$/;"	f	class:X86InstrInfo
isFrameStoreOpcode	Target/X86/X86InstrInfo.cpp	/^static bool isFrameStoreOpcode(int Opcode) {$/;"	f	file:
isFreeCall	Analysis/MemoryBuiltins.cpp	/^const CallInst *llvm::isFreeCall(const Value *I, const TargetLibraryInfo *TLI) {$/;"	f	class:llvm
isFreeToInvert	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static inline bool isFreeToInvert(Value *V) {$/;"	f	file:
isFsl	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  bool isFsl() const { return Kind == Fsl; }$/;"	f	struct:__anon446::MBlazeOperand
isFullCopyOf	CodeGen/InlineSpiller.cpp	/^static unsigned isFullCopyOf(const MachineInstr *MI, unsigned Reg) {$/;"	f	file:
isFullSet	Support/ConstantRange.cpp	/^bool ConstantRange::isFullSet() const {$/;"	f	class:ConstantRange
isFunctionLocalValue	VMCore/Metadata.cpp	/^static bool isFunctionLocalValue(Value *V) {$/;"	f	file:
isFunctionVarArg	VMCore/Type.cpp	/^bool Type::isFunctionVarArg() const {$/;"	f	class:Type
isGAPlusOffset	CodeGen/SelectionDAG/TargetLowering.cpp	/^bool TargetLowering::isGAPlusOffset(SDNode *N, const GlobalValue *&GA,$/;"	f	class:TargetLowering
isGAPlusOffset	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isGAPlusOffset(SDNode *N,$/;"	f	class:X86TargetLowering
isGCDAFile	VMCore/GCOV.cpp	/^static bool isGCDAFile(GCOV::GCOVFormat Format) {$/;"	f	file:
isGCNOFile	VMCore/GCOV.cpp	/^static bool isGCNOFile(GCOV::GCOVFormat Format) {$/;"	f	file:
isGEPOffsetConstant	Analysis/InlineCost.cpp	/^bool CallAnalyzer::isGEPOffsetConstant(GetElementPtrInst &GEP) {$/;"	f	class:CallAnalyzer
isGEPWithNoNotionalOverIndexing	VMCore/Constants.cpp	/^bool ConstantExpr::isGEPWithNoNotionalOverIndexing() const {$/;"	f	class:ConstantExpr
isGP32bit	Target/Mips/MipsSubtarget.h	/^  bool isGP32bit() const { return !IsGP64bit; }$/;"	f	class:llvm::MipsSubtarget
isGP64bit	Target/Mips/MipsSubtarget.h	/^  bool isGP64bit() const { return IsGP64bit; }$/;"	f	class:llvm::MipsSubtarget
isGPRCalleeSavedArea1Frame	Target/ARM/ARMMachineFunctionInfo.h	/^  bool isGPRCalleeSavedArea1Frame(int fi) const {$/;"	f	class:llvm::ARMFunctionInfo
isGPRCalleeSavedArea2Frame	Target/ARM/ARMMachineFunctionInfo.h	/^  bool isGPRCalleeSavedArea2Frame(int fi) const {$/;"	f	class:llvm::ARMFunctionInfo
isGlobal	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isGlobal() const {$/;"	f	class:DIDescriptor
isGlobalMemoryObject	CodeGen/ScheduleDAGInstrs.cpp	/^static inline bool isGlobalMemoryObject(AliasAnalysis *AA, MachineInstr *MI) {$/;"	f	file:
isGlobalRelativeToPICBase	Target/X86/X86InstrInfo.h	/^inline static bool isGlobalRelativeToPICBase(unsigned char TargetFlag) {$/;"	f	namespace:llvm
isGlobalStubReference	Target/X86/X86InstrInfo.h	/^inline static bool isGlobalStubReference(unsigned char TargetFlag) {$/;"	f	namespace:llvm
isGlobalValue	Target/ARM/ARMConstantPoolValue.h	/^  bool isGlobalValue() const { return Kind == ARMCP::CPValue; }$/;"	f	class:llvm::ARMConstantPoolValue
isGlobalVariable	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isGlobalVariable() const {$/;"	f	class:DIDescriptor
isGrouping	Support/CommandLine.cpp	/^static inline bool isGrouping(const Option *O) {$/;"	f	file:
isGuaranteedToExecute	Transforms/Scalar/LICM.cpp	/^bool LICM::isGuaranteedToExecute(Instruction &Inst) {$/;"	f	class:LICM
isHReg	Target/X86/X86InstrInfo.cpp	/^static bool isHReg(unsigned Reg) {$/;"	f	file:
isHardwareLoop	Target/Hexagon/HexagonHardwareLoops.cpp	/^static bool isHardwareLoop(const MachineInstr *MI) {$/;"	f	file:
isHighCostExpansion	Transforms/Scalar/IndVarSimplify.cpp	/^static bool isHighCostExpansion(const SCEV *S, BranchInst *BI,$/;"	f	file:
isHighCostExpansion	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isHighCostExpansion(const SCEV *S,$/;"	f	file:
isHighLatencyDef	Target/X86/X86InstrInfo.cpp	/^bool X86InstrInfo::isHighLatencyDef(int opc) const {$/;"	f	class:X86InstrInfo
isHighOnes	Transforms/InstCombine/InstCombineCompares.cpp	/^static bool isHighOnes(const ConstantInt *CI) {$/;"	f	file:
isHint	CodeGen/AllocationOrder.h	/^  bool isHint(unsigned PhysReg) const { return PhysReg == Hint; }$/;"	f	class:llvm::AllocationOrder
isHomogeneousAggregate	Transforms/Scalar/ScalarReplAggregates.cpp	/^static bool isHomogeneousAggregate(Type *T, unsigned &NumElts,$/;"	f	file:
isHorizontalBinOp	Target/X86/X86ISelLowering.cpp	/^static bool isHorizontalBinOp(SDValue &LHS, SDValue &RHS, bool IsCommutative) {$/;"	f	file:
isI16IntS10Immediate	Target/CellSPU/SPUISelDAGToDAG.cpp	/^  isI16IntS10Immediate(ConstantSDNode *CN)$/;"	f	namespace:__anon414
isI16IntU10Immediate	Target/CellSPU/SPUISelDAGToDAG.cpp	/^  isI16IntU10Immediate(ConstantSDNode *CN)$/;"	f	namespace:__anon414
isI32IntS10Immediate	Target/CellSPU/SPUISelDAGToDAG.cpp	/^  isI32IntS10Immediate(ConstantSDNode *CN)$/;"	f	namespace:__anon414
isI32IntU10Immediate	Target/CellSPU/SPUISelDAGToDAG.cpp	/^  isI32IntU10Immediate(ConstantSDNode *CN)$/;"	f	namespace:__anon414
isITCondCode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isITCondCode() const { return Kind == k_CondCode; }$/;"	f	class:__anon261::ARMOperand
isITMask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isITMask() const { return Kind == k_ITCondMask; }$/;"	f	class:__anon261::ARMOperand
isIdempotent	VMCore/Instruction.cpp	/^bool Instruction::isIdempotent(unsigned Opcode) {$/;"	f	class:Instruction
isIdenticalTo	CodeGen/MachineInstr.cpp	/^bool MachineInstr::isIdenticalTo(const MachineInstr *Other,$/;"	f	class:MachineInstr
isIdenticalTo	CodeGen/MachineInstr.cpp	/^bool MachineOperand::isIdenticalTo(const MachineOperand &Other) const {$/;"	f	class:MachineOperand
isIdenticalTo	VMCore/Instruction.cpp	/^bool Instruction::isIdenticalTo(const Instruction *I) const {$/;"	f	class:Instruction
isIdenticalToWhenDefined	VMCore/Instruction.cpp	/^bool Instruction::isIdenticalToWhenDefined(const Instruction *I) const {$/;"	f	class:Instruction
isIdentifiedObject	Analysis/AliasAnalysis.cpp	/^bool llvm::isIdentifiedObject(const Value *V) {$/;"	f	class:llvm
isIdentifiedSafeObject	Transforms/Vectorize/LoopVectorize.cpp	/^bool LoopVectorizationLegality::isIdentifiedSafeObject(Value* Val) {$/;"	f	class:__anon605::LoopVectorizationLegality
isIdentifierChar	MC/MCParser/AsmParser.cpp	/^static bool isIdentifierChar(char c) {$/;"	f	file:
isImage	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::isImage(const llvm::Value &val) {$/;"	f	class:llvm
isImageOrSamplerVal	Target/NVPTX/NVPTXISelLowering.cpp	/^bool llvm::isImageOrSamplerVal(const Value *arg, const Module *context) {$/;"	f	class:llvm
isImageReadOnly	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::isImageReadOnly(const llvm::Value &val) {$/;"	f	class:llvm
isImageType	Target/NVPTX/NVPTXAsmPrinter.cpp	/^bool NVPTXAsmPrinter::isImageType(const Type *Ty) {$/;"	f	class:NVPTXAsmPrinter
isImageWriteOnly	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::isImageWriteOnly(const llvm::Value &val) {$/;"	f	class:llvm
isImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm() const { return Kind == k_Immediate; }$/;"	f	class:__anon261::ARMOperand
isImm	Target/Hexagon/HexagonHardwareLoops.cpp	/^    bool isImm() const { return Kind == CV_Immediate; }$/;"	f	class:__anon408::CountValue
isImm	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  bool isImm() const { return Kind == Immediate; }$/;"	f	struct:__anon446::MBlazeOperand
isImm	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool isImm() const { return Kind == k_Immediate; }$/;"	f	class:__anon423::MipsOperand
isImm	Target/PowerPC/PPCCTRLoops.cpp	/^    bool isImm() const { return Kind == CV_Immediate; }$/;"	f	class:__anon325::CountValue
isImm	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isImm() const { return Kind == Immediate; }$/;"	f	struct:__anon336::X86Operand
isImm0_1	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_1() const {$/;"	f	class:__anon261::ARMOperand
isImm0_1020s4	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_1020s4() const {$/;"	f	class:__anon261::ARMOperand
isImm0_15	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_15() const {$/;"	f	class:__anon261::ARMOperand
isImm0_255	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_255() const {$/;"	f	class:__anon261::ARMOperand
isImm0_3	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_3() const {$/;"	f	class:__anon261::ARMOperand
isImm0_31	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_31() const {$/;"	f	class:__anon261::ARMOperand
isImm0_32	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_32() const {$/;"	f	class:__anon261::ARMOperand
isImm0_4095	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_4095() const {$/;"	f	class:__anon261::ARMOperand
isImm0_4095Neg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_4095Neg() const {$/;"	f	class:__anon261::ARMOperand
isImm0_508s4	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_508s4() const {$/;"	f	class:__anon261::ARMOperand
isImm0_508s4Neg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_508s4Neg() const {$/;"	f	class:__anon261::ARMOperand
isImm0_63	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_63() const {$/;"	f	class:__anon261::ARMOperand
isImm0_65535	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_65535() const {$/;"	f	class:__anon261::ARMOperand
isImm0_65535Expr	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_65535Expr() const {$/;"	f	class:__anon261::ARMOperand
isImm0_7	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm0_7() const {$/;"	f	class:__anon261::ARMOperand
isImm16	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm16() const {$/;"	f	class:__anon261::ARMOperand
isImm1_15	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm1_15() const {$/;"	f	class:__anon261::ARMOperand
isImm1_16	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm1_16() const {$/;"	f	class:__anon261::ARMOperand
isImm1_31	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm1_31() const {$/;"	f	class:__anon261::ARMOperand
isImm1_32	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm1_32() const {$/;"	f	class:__anon261::ARMOperand
isImm1_7	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm1_7() const {$/;"	f	class:__anon261::ARMOperand
isImm24bit	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm24bit() const {$/;"	f	class:__anon261::ARMOperand
isImm32	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm32() const {$/;"	f	class:__anon261::ARMOperand
isImm8	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm8() const {$/;"	f	class:__anon261::ARMOperand
isImm8s4	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImm8s4() const {$/;"	f	class:__anon261::ARMOperand
isImmPCRel	Target/X86/MCTargetDesc/X86BaseInfo.h	/^  inline unsigned isImmPCRel(uint64_t TSFlags) {$/;"	f	namespace:llvm::X86II
isImmSExti16i8	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isImmSExti16i8() const {$/;"	f	struct:__anon336::X86Operand
isImmSExti16i8Value	Target/X86/AsmParser/X86AsmParser.cpp	/^static bool isImmSExti16i8Value(uint64_t Value) {$/;"	f	file:
isImmSExti32i8	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isImmSExti32i8() const {$/;"	f	struct:__anon336::X86Operand
isImmSExti32i8Value	Target/X86/AsmParser/X86AsmParser.cpp	/^static bool isImmSExti32i8Value(uint64_t Value) {$/;"	f	file:
isImmSExti64i32	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isImmSExti64i32() const {$/;"	f	struct:__anon336::X86Operand
isImmSExti64i32Value	Target/X86/AsmParser/X86AsmParser.cpp	/^static bool isImmSExti64i32Value(uint64_t Value) {$/;"	f	file:
isImmSExti64i8	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isImmSExti64i8() const {$/;"	f	struct:__anon336::X86Operand
isImmSExti64i8Value	Target/X86/AsmParser/X86AsmParser.cpp	/^static bool isImmSExti64i8Value(uint64_t Value) {$/;"	f	file:
isImmThumbSR	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isImmThumbSR() const {$/;"	f	class:__anon261::ARMOperand
isImmU16	Target/XCore/XCoreFrameLowering.cpp	/^static inline bool isImmU16(unsigned val) {$/;"	f	file:
isImmU16	Target/XCore/XCoreRegisterInfo.cpp	/^static inline bool isImmU16(unsigned val) {$/;"	f	file:
isImmU6	Target/XCore/XCoreFrameLowering.cpp	/^static inline bool isImmU6(unsigned val) {$/;"	f	file:
isImmU6	Target/XCore/XCoreRegisterInfo.cpp	/^static inline bool isImmU6(unsigned val) {$/;"	f	file:
isImmUs	Target/XCore/XCoreFrameLowering.cpp	/^static inline bool isImmUs(unsigned val) {$/;"	f	file:
isImmUs	Target/XCore/XCoreISelLowering.cpp	/^static inline bool isImmUs(int64_t val)$/;"	f	file:
isImmUs	Target/XCore/XCoreRegisterInfo.cpp	/^static inline bool isImmUs(unsigned val) {$/;"	f	file:
isImmUs2	Target/XCore/XCoreISelLowering.cpp	/^static inline bool isImmUs2(int64_t val)$/;"	f	file:
isImmUs4	Target/XCore/XCoreISelLowering.cpp	/^static inline bool isImmUs4(int64_t val)$/;"	f	file:
isImmZExtu32u8	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isImmZExtu32u8() const {$/;"	f	struct:__anon336::X86Operand
isImmZExtu32u8Value	Target/X86/AsmParser/X86AsmParser.cpp	/^static bool isImmZExtu32u8Value(uint64_t Value) {$/;"	f	file:
isImmediate	MC/MCDisassembler/EDOperand.cpp	/^int EDOperand::isImmediate() {$/;"	f	class:EDOperand
isImplicitlyDefined	CodeGen/PHIElimination.cpp	/^static bool isImplicitlyDefined(unsigned VirtReg,$/;"	f	file:
isImpliedCond	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isImpliedCond(ICmpInst::Predicate Pred,$/;"	f	class:ScalarEvolution
isImpliedCondOperands	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isImpliedCondOperands(ICmpInst::Predicate Pred,$/;"	f	class:ScalarEvolution
isImpliedCondOperandsHelper	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::isImpliedCondOperandsHelper(ICmpInst::Predicate Pred,$/;"	f	class:ScalarEvolution
isIn	Transforms/Instrumentation/BlackList.cpp	/^bool BlackList::isIn(const Function &F) {$/;"	f	class:llvm::BlackList
isIn	Transforms/Instrumentation/BlackList.cpp	/^bool BlackList::isIn(const GlobalVariable &G) {$/;"	f	class:llvm::BlackList
isIn	Transforms/Instrumentation/BlackList.cpp	/^bool BlackList::isIn(const Module &M) {$/;"	f	class:llvm::BlackList
isInArgFI	Target/Mips/MipsMachineFunction.h	/^  bool isInArgFI(int FI) const {$/;"	f	class:llvm::MipsFunctionInfo
isInBounds	VMCore/Instructions.cpp	/^bool GetElementPtrInst::isInBounds() const {$/;"	f	class:GetElementPtrInst
isInBoundsIndices	VMCore/ConstantFold.cpp	/^static bool isInBoundsIndices(ArrayRef<IndexTy> Idxs) {$/;"	f	file:
isInInit	Transforms/Instrumentation/BlackList.cpp	/^bool BlackList::isInInit(const GlobalVariable &G) {$/;"	f	class:llvm::BlackList
isInSpanningTree	Transforms/Instrumentation/PathProfiling.cpp	/^bool BLInstrumentationEdge::isInSpanningTree() const {$/;"	f	class:BLInstrumentationEdge
isInSymtab	MC/ELFObjectWriter.cpp	/^bool ELFObjectWriter::isInSymtab(const MCAssembler &Asm,$/;"	f	class:ELFObjectWriter
isInTailCallPosition	CodeGen/Analysis.cpp	/^bool llvm::isInTailCallPosition(ImmutableCallSite CS, Attributes CalleeRetAttr,$/;"	f	class:llvm
isInTailCallPosition	CodeGen/Analysis.cpp	/^bool llvm::isInTailCallPosition(SelectionDAG &DAG, SDNode *Node,$/;"	f	class:llvm
isIndirectBranchOpcode	Target/ARM/ARMBaseInstrInfo.h	/^bool isIndirectBranchOpcode(int Opc) {$/;"	f	namespace:llvm
isInductionOperation	Target/Hexagon/HexagonHardwareLoops.cpp	/^HexagonHardwareLoops::isInductionOperation(const MachineInstr *MI,$/;"	f	class:HexagonHardwareLoops
isInductionOperation	Target/PowerPC/PPCCTRLoops.cpp	/^PPCCTRLoops::isInductionOperation(const MachineInstr *MI,$/;"	f	class:PPCCTRLoops
isInductionVariable	Transforms/Vectorize/LoopVectorize.cpp	/^bool LoopVectorizationLegality::isInductionVariable(PHINode *Phi) {$/;"	f	class:__anon605::LoopVectorizationLegality
isInitialization	Transforms/Instrumentation/PathProfiling.cpp	/^bool BLInstrumentationEdge::isInitialization() const {$/;"	f	class:BLInstrumentationEdge
isInitializerStored	Transforms/IPO/GlobalOpt.cpp	/^    isInitializerStored,$/;"	e	enum:__anon590::GlobalStatus::StoredType	file:
isInlineViable	Transforms/IPO/InlineAlways.cpp	/^static bool isInlineViable(Function &F) {$/;"	f	file:
isInlinedCStr	DebugInfo/DWARFFormValue.h	/^  bool isInlinedCStr() const {$/;"	f	class:llvm::DWARFFormValue
isInlinedFnArgument	VMCore/DebugInfo.cpp	/^bool DIVariable::isInlinedFnArgument(const Function *CurFn) {$/;"	f	class:DIVariable
isInput	Analysis/DependenceAnalysis.cpp	/^bool Dependence::isInput() const {$/;"	f	class:Dependence
isInstInList	Transforms/Scalar/LICM.cpp	/^    virtual bool isInstInList(Instruction *I,$/;"	f	class:__anon569::LoopPromoter
isInstInList	Transforms/Scalar/SROA.cpp	/^  virtual bool isInstInList(Instruction *I,$/;"	f	class:__anon558::AllocaPromoter
isInstInList	Transforms/Scalar/ScalarReplAggregates.cpp	/^  virtual bool isInstInList(Instruction *I,$/;"	f	class:__anon524::AllocaPromoter
isInstInList	Transforms/Utils/SSAUpdater.cpp	/^LoadAndStorePromoter::isInstInList(Instruction *I,$/;"	f	class:LoadAndStorePromoter
isInstVectorizable	Transforms/Vectorize/BBVectorize.cpp	/^  bool BBVectorize::isInstVectorizable(Instruction *I,$/;"	f	class:__anon604::BBVectorize
isInstruction	MC/MCParser/AsmParser.cpp	/^  bool isInstruction() { return Opcode != (unsigned)~0x0; }$/;"	f	class:__anon211::AsmParser	file:
isInstructionFree	Analysis/CodeMetrics.cpp	/^bool llvm::isInstructionFree(const Instruction *I, const DataLayout *TD) {$/;"	f	class:llvm
isInstructionTriviallyDead	Transforms/Utils/Local.cpp	/^bool llvm::isInstructionTriviallyDead(Instruction *I,$/;"	f	class:llvm
isInt	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isInt() const         { return EntryKind == E_Integer; }$/;"	f	struct:llvm::DotDebugLocEntry
isInt32Immediate	Target/ARM/ARMISelDAGToDAG.cpp	/^static bool isInt32Immediate(SDNode *N, unsigned &Imm) {$/;"	f	file:
isInt32Immediate	Target/ARM/ARMISelDAGToDAG.cpp	/^static bool isInt32Immediate(SDValue N, unsigned &Imm) {$/;"	f	file:
isInt32Immediate	Target/PowerPC/PPCISelDAGToDAG.cpp	/^static bool isInt32Immediate(SDNode *N, unsigned &Imm) {$/;"	f	file:
isInt32Immediate	Target/PowerPC/PPCISelDAGToDAG.cpp	/^static bool isInt32Immediate(SDValue N, unsigned &Imm) {$/;"	f	file:
isInt64Immediate	Target/PowerPC/PPCISelDAGToDAG.cpp	/^static bool isInt64Immediate(SDNode *N, uint64_t &Imm) {$/;"	f	file:
isIntOrIntVectorTy	VMCore/Type.cpp	/^bool Type::isIntOrIntVectorTy() const {$/;"	f	class:Type
isIntS16Immediate	Target/CellSPU/SPUISelDAGToDAG.cpp	/^  isIntS16Immediate(ConstantSDNode *CN, short &Imm)$/;"	f	namespace:__anon414
isIntS16Immediate	Target/PowerPC/PPCISelDAGToDAG.cpp	/^static bool isIntS16Immediate(SDNode *N, short &Imm) {$/;"	f	file:
isIntS16Immediate	Target/PowerPC/PPCISelDAGToDAG.cpp	/^static bool isIntS16Immediate(SDValue Op, short &Imm) {$/;"	f	file:
isIntS16Immediate	Target/PowerPC/PPCISelLowering.cpp	/^static bool isIntS16Immediate(SDNode *N, short &Imm) {$/;"	f	file:
isIntS16Immediate	Target/PowerPC/PPCISelLowering.cpp	/^static bool isIntS16Immediate(SDValue Op, short &Imm) {$/;"	f	file:
isIntS32Immediate	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^static bool isIntS32Immediate(SDNode *N, int32_t &Imm) {$/;"	f	file:
isIntS32Immediate	Target/MBlaze/MBlazeISelDAGToDAG.cpp	/^static bool isIntS32Immediate(SDValue Op, int32_t &Imm) {$/;"	f	file:
isInteger	CodeGen/AsmPrinter/DIE.h	/^      isInteger,$/;"	e	enum:llvm::DIEValue::__anon60
isIntegerCast	VMCore/Instructions.cpp	/^bool CastInst::isIntegerCast() const {$/;"	f	class:CastInst
isIntegerTy	VMCore/Type.cpp	/^bool Type::isIntegerTy(unsigned Bitwidth) const {$/;"	f	class:Type
isIntegerTypeFTOL	Target/X86/X86ISelLowering.h	/^    bool isIntegerTypeFTOL(EVT VT) const {$/;"	f	class:llvm::X86TargetLowering
isIntegerValue	Bitcode/Writer/ValueEnumerator.cpp	/^static bool isIntegerValue(const std::pair<const Value*, unsigned> &V) {$/;"	f	file:
isIntegerWideningViable	Transforms/Scalar/SROA.cpp	/^static bool isIntegerWideningViable(const DataLayout &TD,$/;"	f	file:
isInteresting	Analysis/IVUsers.cpp	/^static bool isInteresting(const SCEV *S, const Instruction *I, const Loop *L,$/;"	f	file:
isInterestingInstruction	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    static bool isInterestingInstruction(const Instruction *I) {$/;"	f	class:__anon469::LargeBlockInfo
isInterestingMemoryAccess	Transforms/Instrumentation/AddressSanitizer.cpp	/^static Value *isInterestingMemoryAccess(Instruction *I, bool *IsWrite) {$/;"	f	file:
isInterestingPointer	Analysis/AliasAnalysisEvaluator.cpp	/^static inline bool isInterestingPointer(Value *V) {$/;"	f	file:
isInternalMember	Object/Archive.cpp	/^static bool isInternalMember(const ArchiveMemberHeader &amh) {$/;"	f	file:
isInvalid	TableGen/TGParser.cpp	/^  bool isInvalid() const { return MC == 0; }$/;"	f	struct:llvm::SubMultiClassReference
isInvalid	TableGen/TGParser.cpp	/^  bool isInvalid() const { return Rec == 0; }$/;"	f	struct:llvm::SubClassReference
isInvalidLoopOperation	Target/Hexagon/HexagonHardwareLoops.cpp	/^HexagonHardwareLoops::isInvalidLoopOperation(const MachineInstr *MI) const {$/;"	f	class:HexagonHardwareLoops
isInvalidLoopOperation	Target/PowerPC/PPCCTRLoops.cpp	/^PPCCTRLoops::isInvalidLoopOperation(const MachineInstr *MI) const {$/;"	f	class:PPCCTRLoops
isInvalidated	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  bool isInvalidated() { return Invalid; }$/;"	f	class:llvm::SDDbgValue
isInvariantLoad	CodeGen/MachineInstr.cpp	/^bool MachineInstr::isInvariantLoad(AliasAnalysis *AA) const {$/;"	f	class:MachineInstr
isJITCodeModel	Target/PowerPC/PPCSubtarget.h	/^  bool isJITCodeModel() const { return IsJITCodeModel; }$/;"	f	class:llvm::PPCSubtarget
isJumpTableBranchOpcode	Target/ARM/ARMBaseInstrInfo.h	/^bool isJumpTableBranchOpcode(int Opc) {$/;"	f	namespace:llvm
isKernelFunction	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::isKernelFunction(const Function &F) {$/;"	f	class:llvm
isKill	Target/ARM/ARMLoadStoreOptimizer.cpp	/^      bool isKill;$/;"	m	struct:__anon303::ARMLoadStoreOpt::MemOpQueueEntry	file:
isKilled	CodeGen/TwoAddressInstructionPass.cpp	/^static bool isKilled(MachineInstr &MI, unsigned Reg,$/;"	f	file:
isKnownNegative	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isKnownNegative(const SCEV *S) {$/;"	f	class:ScalarEvolution
isKnownNeverNaN	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SelectionDAG::isKnownNeverNaN(SDValue Op) const {$/;"	f	class:SelectionDAG
isKnownNeverZero	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SelectionDAG::isKnownNeverZero(SDValue Op) const {$/;"	f	class:SelectionDAG
isKnownNonNegative	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isKnownNonNegative(const SCEV *S) {$/;"	f	class:ScalarEvolution
isKnownNonNull	Analysis/AliasAnalysis.cpp	/^bool llvm::isKnownNonNull(const Value *V) {$/;"	f	class:llvm
isKnownNonPositive	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isKnownNonPositive(const SCEV *S) {$/;"	f	class:ScalarEvolution
isKnownNonZero	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isKnownNonZero(const SCEV *S) {$/;"	f	class:ScalarEvolution
isKnownNonZero	Analysis/ValueTracking.cpp	/^bool llvm::isKnownNonZero(Value *V, const DataLayout *TD, unsigned Depth) {$/;"	f	class:llvm
isKnownPositive	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isKnownPositive(const SCEV *S) {$/;"	f	class:ScalarEvolution
isKnownPredicate	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::isKnownPredicate(ICmpInst::Predicate Pred,$/;"	f	class:DependenceAnalysis
isKnownPredicate	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isKnownPredicate(ICmpInst::Predicate Pred,$/;"	f	class:ScalarEvolution
isKnownPredicateWithRanges	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::isKnownPredicateWithRanges(ICmpInst::Predicate Pred,$/;"	f	class:ScalarEvolution
isLCSSAForm	Analysis/LoopInfo.cpp	/^bool Loop::isLCSSAForm(DominatorTree &DT) const {$/;"	f	class:Loop
isLRSpilledForFarJump	Target/ARM/ARMMachineFunctionInfo.h	/^  bool isLRSpilledForFarJump() const { return LRSpilledForFarJump; }$/;"	f	class:llvm::ARMFunctionInfo
isLRStoreRequired	Target/PowerPC/PPCMachineFunctionInfo.h	/^  bool isLRStoreRequired() const { return LRStoreRequired; }$/;"	f	class:llvm::PPCFunctionInfo
isLSAAddress	Target/CellSPU/SPUISelLowering.cpp	/^static SDNode *isLSAAddress(SDValue Op, SelectionDAG &DAG) {$/;"	f	file:
isLSDA	Target/ARM/ARMConstantPoolValue.h	/^  bool isLSDA() const { return Kind == ARMCP::CPLSDA; }$/;"	f	class:llvm::ARMConstantPoolValue
isLabel	CodeGen/AsmPrinter/DIE.h	/^      isLabel,$/;"	e	enum:llvm::DIEValue::__anon60
isLabelChar	AsmParser/LLLexer.cpp	/^static bool isLabelChar(char C) {$/;"	f	file:
isLabelTail	AsmParser/LLLexer.cpp	/^static const char *isLabelTail(const char *CurPtr) {$/;"	f	file:
isLandingPad	VMCore/BasicBlock.cpp	/^bool BasicBlock::isLandingPad() const {$/;"	f	class:BasicBlock
isLastUseOfLocalReg	CodeGen/RegAllocFast.cpp	/^bool RAFast::isLastUseOfLocalReg(MachineOperand &MO) {$/;"	f	class:RAFast
isLayoutIdentical	VMCore/Type.cpp	/^bool StructType::isLayoutIdentical(StructType *Other) const {$/;"	f	class:StructType
isLayoutSuccessor	CodeGen/MachineBasicBlock.cpp	/^bool MachineBasicBlock::isLayoutSuccessor(const MachineBasicBlock *MBB) const {$/;"	f	class:MachineBasicBlock
isLeaMem	Target/X86/X86InstrInfo.h	/^inline static bool isLeaMem(const MachineInstr *MI, unsigned Op) {$/;"	f	namespace:llvm
isLeakCheckerRoot	Transforms/IPO/GlobalOpt.cpp	/^static bool isLeakCheckerRoot(GlobalVariable *GV) {$/;"	f	file:
isLegalAddImmediate	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::isLegalAddImmediate(int64_t Imm) const {$/;"	f	class:ARMTargetLowering
isLegalAddImmediate	Target/TargetTransformImpl.cpp	/^bool ScalarTargetTransformImpl::isLegalAddImmediate(int64_t imm) const {$/;"	f	class:ScalarTargetTransformImpl
isLegalAddImmediate	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isLegalAddImmediate(int64_t Imm) const {$/;"	f	class:X86TargetLowering
isLegalAddressImmediate	Target/ARM/ARMISelLowering.cpp	/^static bool isLegalAddressImmediate(int64_t V, EVT VT,$/;"	f	file:
isLegalAddressImmediate	Target/CellSPU/SPUISelLowering.cpp	/^bool SPUTargetLowering::isLegalAddressImmediate(GlobalValue* GV) const {$/;"	f	class:SPUTargetLowering
isLegalAddressImmediate	Target/CellSPU/SPUISelLowering.cpp	/^bool SPUTargetLowering::isLegalAddressImmediate(int64_t V,$/;"	f	class:SPUTargetLowering
isLegalAddressImmediate	Target/PowerPC/PPCISelLowering.cpp	/^bool PPCTargetLowering::isLegalAddressImmediate(GlobalValue* GV) const {$/;"	f	class:PPCTargetLowering
isLegalAddressImmediate	Target/PowerPC/PPCISelLowering.cpp	/^bool PPCTargetLowering::isLegalAddressImmediate(int64_t V,Type *Ty) const{$/;"	f	class:PPCTargetLowering
isLegalAddressingMode	CodeGen/SelectionDAG/TargetLowering.cpp	/^bool TargetLowering::isLegalAddressingMode(const AddrMode &AM,$/;"	f	class:TargetLowering
isLegalAddressingMode	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::isLegalAddressingMode(const AddrMode &AM,$/;"	f	class:ARMTargetLowering
isLegalAddressingMode	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::isLegalAddressingMode(const AddrMode &AM,$/;"	f	class:SPUTargetLowering
isLegalAddressingMode	Target/Hexagon/HexagonISelLowering.cpp	/^bool HexagonTargetLowering::isLegalAddressingMode(const AddrMode &AM,$/;"	f	class:HexagonTargetLowering
isLegalAddressingMode	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::isLegalAddressingMode(const AddrMode &AM,$/;"	f	class:NVPTXTargetLowering
isLegalAddressingMode	Target/PowerPC/PPCISelLowering.cpp	/^bool PPCTargetLowering::isLegalAddressingMode(const AddrMode &AM,$/;"	f	class:PPCTargetLowering
isLegalAddressingMode	Target/TargetTransformImpl.cpp	/^bool ScalarTargetTransformImpl::isLegalAddressingMode(const AddrMode &AM,$/;"	f	class:ScalarTargetTransformImpl
isLegalAddressingMode	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isLegalAddressingMode(const AddrMode &AM,$/;"	f	class:X86TargetLowering
isLegalAddressingMode	Target/XCore/XCoreISelLowering.cpp	/^XCoreTargetLowering::isLegalAddressingMode(const AddrMode &AM,$/;"	f	class:XCoreTargetLowering
isLegalICmpImmediate	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::isLegalICmpImmediate(int64_t Imm) const {$/;"	f	class:ARMTargetLowering
isLegalICmpImmediate	Target/CellSPU/SPUISelLowering.cpp	/^bool SPUTargetLowering::isLegalICmpImmediate(int64_t Imm) const {$/;"	f	class:SPUTargetLowering
isLegalICmpImmediate	Target/Hexagon/HexagonISelLowering.cpp	/^bool HexagonTargetLowering::isLegalICmpImmediate(int64_t Imm) const {$/;"	f	class:HexagonTargetLowering
isLegalICmpImmediate	Target/TargetTransformImpl.cpp	/^bool ScalarTargetTransformImpl::isLegalICmpImmediate(int64_t imm) const {$/;"	f	class:ScalarTargetTransformImpl
isLegalICmpImmediate	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isLegalICmpImmediate(int64_t Imm) const {$/;"	f	class:X86TargetLowering
isLegalRC	CodeGen/SelectionDAG/TargetLowering.cpp	/^bool TargetLowering::isLegalRC(const TargetRegisterClass *RC) const {$/;"	f	class:TargetLowering
isLegalT1AddressImmediate	Target/ARM/ARMISelLowering.cpp	/^static bool isLegalT1AddressImmediate(int64_t V, EVT VT) {$/;"	f	file:
isLegalT2AddressImmediate	Target/ARM/ARMISelLowering.cpp	/^static bool isLegalT2AddressImmediate(int64_t V, EVT VT,$/;"	f	file:
isLegalT2ScaledAddressingMode	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::isLegalT2ScaledAddressingMode(const AddrMode &AM,$/;"	f	class:ARMTargetLowering
isLegalToPacketizeTogether	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::isLegalToPacketizeTogether(SUnit *SUI, SUnit *SUJ) {$/;"	f	class:HexagonPacketizerList
isLegalToPruneDependencies	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::isLegalToPruneDependencies(SUnit *SUI, SUnit *SUJ) {$/;"	f	class:HexagonPacketizerList
isLegalToSplitMBBAt	Target/ARM/Thumb2InstrInfo.cpp	/^Thumb2InstrInfo::isLegalToSplitMBBAt(MachineBasicBlock &MBB,$/;"	f	class:Thumb2InstrInfo
isLegalUse	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isLegalUse(AddrMode AM,$/;"	f	file:
isLegalUse	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isLegalUse(const AddrMode &AM,$/;"	f	file:
isLessConstraining	Linker/LinkModules.cpp	/^static bool isLessConstraining(GlobalValue::VisibilityTypes a,$/;"	f	file:
isLexicalBlock	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isLexicalBlock() const {$/;"	f	class:DIDescriptor
isLexicalBlockFile	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isLexicalBlockFile() const {$/;"	f	class:DIDescriptor
isLifetimeStart	Transforms/Scalar/GVN.cpp	/^static bool isLifetimeStart(const Instruction *Inst) {$/;"	f	file:
isLikeA9	Target/ARM/ARMSubtarget.h	/^  bool isLikeA9() const { return isCortexA9() || isCortexA15(); }$/;"	f	class:llvm::ARMSubtarget
isLikeA9	Target/ARM/MLxExpansionPass.cpp	/^    bool isLikeA9;$/;"	m	struct:__anon301::MLxExpansion	file:
isLinux	Target/Mips/MipsSubtarget.h	/^  bool isLinux() const { return IsLinux; }$/;"	f	class:llvm::MipsSubtarget
isLittle	Target/Mips/MipsSubtarget.h	/^  bool isLittle() const { return IsLittle; }$/;"	f	class:llvm::MipsSubtarget
isLittleEndian	DebugInfo/DWARFContext.h	/^  bool isLittleEndian() const { return IsLittleEndian; }$/;"	f	class:llvm::DWARFContext
isLive	Target/X86/X86FloatingPoint.cpp	/^    bool isLive(unsigned RegNo) const {$/;"	f	struct:__anon386::FPS	file:
isLiveIn	CodeGen/LiveVariables.cpp	/^bool LiveVariables::VarInfo::isLiveIn(const MachineBasicBlock &MBB,$/;"	f	class:LiveVariables::VarInfo
isLiveIn	CodeGen/MachineBasicBlock.cpp	/^bool MachineBasicBlock::isLiveIn(unsigned Reg) const {$/;"	f	class:MachineBasicBlock
isLiveIn	CodeGen/MachineRegisterInfo.cpp	/^bool MachineRegisterInfo::isLiveIn(unsigned Reg) const {$/;"	f	class:MachineRegisterInfo
isLiveIn	Target/MBlaze/MBlazeMachineFunction.h	/^  bool isLiveIn(int FI) {$/;"	f	class:llvm::MBlazeFunctionInfo
isLiveOut	CodeGen/LiveVariables.cpp	/^bool LiveVariables::isLiveOut(unsigned Reg, const MachineBasicBlock &MBB) {$/;"	f	class:LiveVariables
isLiveOut	CodeGen/MachineRegisterInfo.cpp	/^bool MachineRegisterInfo::isLiveOut(unsigned Reg) const {$/;"	f	class:MachineRegisterInfo
isLiveOut	CodeGen/MachineVerifier.cpp	/^      bool isLiveOut(unsigned Reg) const {$/;"	f	struct:__anon139::MachineVerifier::BBInfo
isLoadFoldable	CodeGen/PeepholeOptimizer.cpp	/^bool PeepholeOptimizer::isLoadFoldable(MachineInstr *MI,$/;"	f	class:PeepholeOptimizer
isLoadFromGOTOrConstantPool	CodeGen/MachineLICM.cpp	/^static bool isLoadFromGOTOrConstantPool(MachineInstr &MI) {$/;"	f	file:
isLoadFromStackSlot	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::isLoadFromStackSlot(const MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
isLoadFromStackSlot	Target/CellSPU/SPUInstrInfo.cpp	/^SPUInstrInfo::isLoadFromStackSlot(const MachineInstr *MI,$/;"	f	class:SPUInstrInfo
isLoadFromStackSlot	Target/Hexagon/HexagonInstrInfo.cpp	/^unsigned HexagonInstrInfo::isLoadFromStackSlot(const MachineInstr *MI,$/;"	f	class:HexagonInstrInfo
isLoadFromStackSlot	Target/MBlaze/MBlazeInstrInfo.cpp	/^isLoadFromStackSlot(const MachineInstr *MI, int &FrameIndex) const {$/;"	f	class:MBlazeInstrInfo
isLoadFromStackSlot	Target/Mips/Mips16InstrInfo.cpp	/^isLoadFromStackSlot(const MachineInstr *MI, int &FrameIndex) const$/;"	f	class:Mips16InstrInfo
isLoadFromStackSlot	Target/Mips/MipsSEInstrInfo.cpp	/^isLoadFromStackSlot(const MachineInstr *MI, int &FrameIndex) const$/;"	f	class:MipsSEInstrInfo
isLoadFromStackSlot	Target/PowerPC/PPCInstrInfo.cpp	/^unsigned PPCInstrInfo::isLoadFromStackSlot(const MachineInstr *MI,$/;"	f	class:PPCInstrInfo
isLoadFromStackSlot	Target/Sparc/SparcInstrInfo.cpp	/^unsigned SparcInstrInfo::isLoadFromStackSlot(const MachineInstr *MI,$/;"	f	class:SparcInstrInfo
isLoadFromStackSlot	Target/X86/X86InstrInfo.cpp	/^unsigned X86InstrInfo::isLoadFromStackSlot(const MachineInstr *MI,$/;"	f	class:X86InstrInfo
isLoadFromStackSlot	Target/XCore/XCoreInstrInfo.cpp	/^XCoreInstrInfo::isLoadFromStackSlot(const MachineInstr *MI, int &FrameIndex) const{$/;"	f	class:XCoreInstrInfo
isLoadFromStackSlotPostFE	Target/ARM/ARMBaseInstrInfo.cpp	/^unsigned ARMBaseInstrInfo::isLoadFromStackSlotPostFE(const MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
isLoadFromStackSlotPostFE	Target/X86/X86InstrInfo.cpp	/^unsigned X86InstrInfo::isLoadFromStackSlotPostFE(const MachineInstr *MI,$/;"	f	class:X86InstrInfo
isLoadIncOrDecStore	Target/X86/X86ISelDAGToDAG.cpp	/^static bool isLoadIncOrDecStore(StoreSDNode *StoreNode, unsigned Opc,$/;"	f	file:
isLoadInstr	Target/NVPTX/NVPTXInstrInfo.cpp	/^bool NVPTXInstrInfo::isLoadInstr(const MachineInstr &MI,$/;"	f	class:NVPTXInstrInfo
isLoadLoadClobberIfExtendedToFullWidth	Analysis/MemoryDependenceAnalysis.cpp	/^isLoadLoadClobberIfExtendedToFullWidth(const AliasAnalysis::Location &MemLoc,$/;"	f	file:
isLoadMask	Target/NVPTX/NVPTX.h	/^  isLoadMask = 0x20,$/;"	e	enum:llvm::NVPTX::LoadStore
isLoadOfStoredAddress	Target/PowerPC/PPCHazardRecognizers.cpp	/^isLoadOfStoredAddress(uint64_t LoadSize, int64_t LoadOffset,$/;"	f	class:PPCHazardRecognizer970
isLoadOrStore	Analysis/DependenceAnalysis.cpp	/^bool isLoadOrStore(const Instruction *I) {$/;"	f	file:
isLoadShift	Target/NVPTX/NVPTX.h	/^  isLoadShift = 5,$/;"	e	enum:llvm::NVPTX::LoadStore
isLoadTypeLegal	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::isLoadTypeLegal(Type *Ty, MVT &VT) {$/;"	f	class:ARMFastISel
isLoaded	Transforms/IPO/GlobalOpt.cpp	/^  bool isLoaded;$/;"	m	struct:__anon590::GlobalStatus	file:
isLocal	MC/ELFObjectWriter.cpp	/^bool ELFObjectWriter::isLocal(const MCSymbolData &Data, bool isSignature,$/;"	f	class:ELFObjectWriter
isLocalCall	Target/PowerPC/PPCISelLowering.cpp	/^bool isLocalCall(const SDValue &Callee)$/;"	f	file:
isLocation	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isLocation() const    { return EntryKind == E_Location; }$/;"	f	struct:llvm::DotDebugLocEntry
isLoop	Analysis/Interval.cpp	/^bool Interval::isLoop() const {$/;"	f	class:Interval
isLoopBackedgeGuardedByCond	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::isLoopBackedgeGuardedByCond(const Loop *L,$/;"	f	class:ScalarEvolution
isLoopEntryGuardedByCond	Analysis/ScalarEvolution.cpp	/^ScalarEvolution::isLoopEntryGuardedByCond(const Loop *L,$/;"	f	class:ScalarEvolution
isLoopInvariant	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::isLoopInvariant(const SCEV *Expression,$/;"	f	class:DependenceAnalysis
isLoopInvariant	Analysis/LoopDependenceAnalysis.cpp	/^bool LoopDependenceAnalysis::isLoopInvariant(const SCEV *S) const {$/;"	f	class:LoopDependenceAnalysis
isLoopInvariant	Analysis/LoopInfo.cpp	/^bool Loop::isLoopInvariant(Value *V) const {$/;"	f	class:Loop
isLoopInvariant	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isLoopInvariant(const SCEV *S, const Loop *L) {$/;"	f	class:ScalarEvolution
isLoopInvariant	Transforms/Scalar/IndVarSimplify.cpp	/^static bool isLoopInvariant(Value *V, const Loop *L, const DominatorTree *DT) {$/;"	f	file:
isLoopSimplifyForm	Analysis/LoopInfo.cpp	/^bool Loop::isLoopSimplifyForm() const {$/;"	f	class:Loop
isLoser	Transforms/Scalar/LoopStrengthReduce.cpp	/^  bool isLoser() {$/;"	f	class:__anon515::Cost
isLosslessCast	VMCore/Instructions.cpp	/^bool CastInst::isLosslessCast() const {$/;"	f	class:CastInst
isMBlazeRegister	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^static inline bool isMBlazeRegister(unsigned Reg) {$/;"	f	namespace:llvm
isMClass	Target/ARM/ARMSubtarget.h	/^  bool isMClass() const { return IsMClass; }$/;"	f	class:llvm::ARMSubtarget
isMClass	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMClass() const {$/;"	f	class:__anon259::ARMAsmParser	file:
isMOVDDUPMask	Target/X86/X86ISelLowering.cpp	/^static bool isMOVDDUPMask(ArrayRef<int> Mask, EVT VT) {$/;"	f	file:
isMOVDDUPYMask	Target/X86/X86ISelLowering.cpp	/^static bool isMOVDDUPYMask(ArrayRef<int> Mask, EVT VT, bool HasAVX) {$/;"	f	file:
isMOVHLPSMask	Target/X86/X86ISelLowering.cpp	/^static bool isMOVHLPSMask(ArrayRef<int> Mask, EVT VT) {$/;"	f	file:
isMOVHLPS_v_undef_Mask	Target/X86/X86ISelLowering.cpp	/^static bool isMOVHLPS_v_undef_Mask(ArrayRef<int> Mask, EVT VT) {$/;"	f	file:
isMOVLHPSMask	Target/X86/X86ISelLowering.cpp	/^static bool isMOVLHPSMask(ArrayRef<int> Mask, EVT VT) {$/;"	f	file:
isMOVLMask	Target/X86/X86ISelLowering.cpp	/^static bool isMOVLMask(ArrayRef<int> Mask, EVT VT) {$/;"	f	file:
isMOVLPMask	Target/X86/X86ISelLowering.cpp	/^static bool isMOVLPMask(ArrayRef<int> Mask, EVT VT) {$/;"	f	file:
isMOVSHDUPMask	Target/X86/X86ISelLowering.cpp	/^static bool isMOVSHDUPMask(ArrayRef<int> Mask, EVT VT,$/;"	f	file:
isMOVSLDUPMask	Target/X86/X86ISelLowering.cpp	/^static bool isMOVSLDUPMask(ArrayRef<int> Mask, EVT VT,$/;"	f	file:
isMSRMask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMSRMask() const { return Kind == k_MSRMask; }$/;"	f	class:__anon261::ARMOperand
isMachineBasicBlock	Target/ARM/ARMConstantPoolValue.h	/^  bool isMachineBasicBlock() const{ return Kind == ARMCP::CPMachineBasicBlock; }$/;"	f	class:llvm::ARMConstantPoolValue
isMacro	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool isMacro() {return macro;}$/;"	f	class:__anon421::MipsAssemblerOptions
isMallocLikeFn	Analysis/MemoryBuiltins.cpp	/^bool llvm::isMallocLikeFn(const Value *V, const TargetLibraryInfo *TLI,$/;"	f	class:llvm
isMatchingDecrement	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static bool isMatchingDecrement(MachineInstr *MI, unsigned Base,$/;"	f	file:
isMatchingIncrement	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static bool isMatchingIncrement(MachineInstr *MI, unsigned Base,$/;"	f	file:
isMatchingInputConstraint	CodeGen/SelectionDAG/TargetLowering.cpp	/^bool TargetLowering::AsmOperandInfo::isMatchingInputConstraint() const {$/;"	f	class:TargetLowering::AsmOperandInfo
isMaterializable	Bitcode/Reader/BitcodeReader.cpp	/^bool BitcodeReader::isMaterializable(const GlobalValue *GV) const {$/;"	f	class:BitcodeReader
isMaterializable	VMCore/Globals.cpp	/^bool GlobalValue::isMaterializable() const {$/;"	f	class:GlobalValue
isMaterializable	VMCore/Module.cpp	/^bool Module::isMaterializable(const GlobalValue *GV) const {$/;"	f	class:Module
isMaybeZeroSizedType	VMCore/ConstantFold.cpp	/^static bool isMaybeZeroSizedType(Type *Ty) {$/;"	f	file:
isMem	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMem() const { return Kind == k_Memory; }$/;"	f	class:__anon261::ARMOperand
isMem	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  bool isMem() const { return Kind == Memory; }$/;"	f	struct:__anon446::MBlazeOperand
isMem	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool isMem() const { return Kind == k_Memory; }$/;"	f	class:__anon423::MipsOperand
isMem	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMem() const { return Kind == Memory; }$/;"	f	struct:__anon336::X86Operand
isMem	Target/X86/X86InstrInfo.h	/^inline static bool isMem(const MachineInstr *MI, unsigned Op) {$/;"	f	namespace:llvm
isMem128	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMem128() const {$/;"	f	struct:__anon336::X86Operand
isMem16	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMem16() const {$/;"	f	struct:__anon336::X86Operand
isMem256	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMem256() const {$/;"	f	struct:__anon336::X86Operand
isMem32	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMem32() const {$/;"	f	struct:__anon336::X86Operand
isMem64	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMem64() const {$/;"	f	struct:__anon336::X86Operand
isMem8	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMem8() const {$/;"	f	struct:__anon336::X86Operand
isMem80	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMem80() const {$/;"	f	struct:__anon336::X86Operand
isMemBarrierOpt	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemBarrierOpt() const { return Kind == k_MemBarrierOpt; }$/;"	f	class:__anon261::ARMOperand
isMemCpyDst	Transforms/Scalar/ScalarReplAggregates.cpp	/^      bool isMemCpyDst : 1;$/;"	m	struct:__anon521::SROA::AllocaInfo	file:
isMemCpySrc	Transforms/Scalar/ScalarReplAggregates.cpp	/^      bool isMemCpySrc : 1;$/;"	m	struct:__anon521::SROA::AllocaInfo	file:
isMemImm0_1020s4Offset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemImm0_1020s4Offset() const {$/;"	f	class:__anon261::ARMOperand
isMemImm12Offset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemImm12Offset() const {$/;"	f	class:__anon261::ARMOperand
isMemImm8Offset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemImm8Offset() const {$/;"	f	class:__anon261::ARMOperand
isMemImm8s4Offset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemImm8s4Offset() const {$/;"	f	class:__anon261::ARMOperand
isMemIntrinValue	Transforms/Scalar/GVN.cpp	/^  bool isMemIntrinValue() const { return Val.getInt() == MemIntrin; }$/;"	f	struct:__anon538::AvailableValueInBlock
isMemNegImm8Offset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemNegImm8Offset() const {$/;"	f	class:__anon261::ARMOperand
isMemNoOffset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemNoOffset(bool alignOK = false) const {$/;"	f	class:__anon261::ARMOperand
isMemOp	Target/Hexagon/HexagonInstrInfo.cpp	/^isMemOp(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isMemPCRelImm12	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemPCRelImm12() const {$/;"	f	class:__anon261::ARMOperand
isMemPosImm8Offset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemPosImm8Offset() const {$/;"	f	class:__anon261::ARMOperand
isMemRegOffset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemRegOffset() const {$/;"	f	class:__anon261::ARMOperand
isMemSrcFromString	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static bool isMemSrcFromString(SDValue Src, StringRef &Str) {$/;"	f	file:
isMemTBB	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemTBB() const {$/;"	f	class:__anon261::ARMOperand
isMemTBH	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemTBH() const {$/;"	f	class:__anon261::ARMOperand
isMemThumbRIs1	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemThumbRIs1() const {$/;"	f	class:__anon261::ARMOperand
isMemThumbRIs2	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemThumbRIs2() const {$/;"	f	class:__anon261::ARMOperand
isMemThumbRIs4	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemThumbRIs4() const {$/;"	f	class:__anon261::ARMOperand
isMemThumbRR	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemThumbRR() const {$/;"	f	class:__anon261::ARMOperand
isMemThumbSPI	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemThumbSPI() const {$/;"	f	class:__anon261::ARMOperand
isMemUImm12Offset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isMemUImm12Offset() const {$/;"	f	class:__anon261::ARMOperand
isMemVX32	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMemVX32() const {$/;"	f	struct:__anon336::X86Operand
isMemVX64	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMemVX64() const {$/;"	f	struct:__anon336::X86Operand
isMemVY32	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMemVY32() const {$/;"	f	struct:__anon336::X86Operand
isMemVY64	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isMemVY64() const {$/;"	f	struct:__anon336::X86Operand
isMemory	MC/MCDisassembler/EDOperand.cpp	/^int EDOperand::isMemory() {$/;"	f	class:EDOperand
isMemoryOp	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static bool isMemoryOp(const MachineInstr *MI) {$/;"	f	file:
isMemorySpaceTransferIntrinsic	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::isMemorySpaceTransferIntrinsic(Intrinsic::ID id) {$/;"	f	class:llvm
isMerged	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isMerged() { return Merged; }$/;"	f	struct:llvm::DotDebugLocEntry
isMips64	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool isMips64() const {$/;"	f	class:__anon422::MipsAsmParser	file:
isMove	MC/MCDisassembler/EDInst.cpp	/^bool EDInst::isMove() {$/;"	f	class:EDInst
isMoveImmediate	CodeGen/PeepholeOptimizer.cpp	/^bool PeepholeOptimizer::isMoveImmediate(MachineInstr *MI,$/;"	f	class:PeepholeOptimizer
isMoveInstr	CodeGen/RegisterCoalescer.cpp	/^static bool isMoveInstr(const TargetRegisterInfo &tri, const MachineInstr *MI,$/;"	f	file:
isMoveInstr	Target/NVPTX/NVPTXInstrInfo.cpp	/^bool NVPTXInstrInfo::isMoveInstr(const MachineInstr &MI,$/;"	f	class:NVPTXInstrInfo
isMulSExtable	Transforms/Scalar/LoopStrengthReduce.cpp	/^static bool isMulSExtable(const SCEVMulExpr *M, ScalarEvolution &SE) {$/;"	f	file:
isMultipleOfTypeSize	Transforms/InstCombine/InstCombineCasts.cpp	/^static bool isMultipleOfTypeSize(unsigned Value, Type *Ty) {$/;"	f	file:
isNEONModifiedImm	Target/ARM/ARMISelLowering.cpp	/^static SDValue isNEONModifiedImm(uint64_t SplatBits, uint64_t SplatUndef,$/;"	f	file:
isNEONi16splat	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isNEONi16splat() const {$/;"	f	class:__anon261::ARMOperand
isNEONi32splat	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isNEONi32splat() const {$/;"	f	class:__anon261::ARMOperand
isNEONi32vmov	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isNEONi32vmov() const {$/;"	f	class:__anon261::ARMOperand
isNEONi32vmovNeg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isNEONi32vmovNeg() const {$/;"	f	class:__anon261::ARMOperand
isNEONi64splat	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isNEONi64splat() const {$/;"	f	class:__anon261::ARMOperand
isNEONi8splat	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isNEONi8splat() const {$/;"	f	class:__anon261::ARMOperand
isNULL	DebugInfo/DWARFDebugInfoEntry.h	/^  bool isNULL() const { return AbbrevDecl == 0; }$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
isNVPTXVectorRegClass	Target/NVPTX/NVPTXRegisterInfo.cpp	/^bool isNVPTXVectorRegClass(TargetRegisterClass const *RC) {$/;"	f	namespace:llvm
isNameSpace	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isNameSpace() const {$/;"	f	class:DIDescriptor
isNarrowingProfitable	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isNarrowingProfitable(EVT VT1, EVT VT2) const {$/;"	f	class:X86TargetLowering
isNeg	Target/Hexagon/HexagonHardwareLoops.cpp	/^    bool isNeg() const { return isNegative; }$/;"	f	class:__anon408::CountValue
isNeg	Target/PowerPC/PPCCTRLoops.cpp	/^    bool isNeg() const { return isNegative; }$/;"	f	class:__anon325::CountValue
isNeg	VMCore/Instructions.cpp	/^bool BinaryOperator::isNeg(const Value *V) {$/;"	f	class:BinaryOperator
isNegatibleForFree	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static char isNegatibleForFree(SDValue Op, bool LegalOperations,$/;"	f	file:
isNegative	Target/ARM/AsmParser/ARMAsmParser.cpp	/^      unsigned isNegative : 1;  \/\/ Negated OffsetReg? (~'U' bit)$/;"	m	struct:__anon261::ARMOperand::__anon262::__anon275	file:
isNegative	Target/Hexagon/HexagonHardwareLoops.cpp	/^    bool isNegative;$/;"	m	class:__anon408::CountValue	file:
isNegative	Target/PowerPC/PPCCTRLoops.cpp	/^    bool isNegative;$/;"	m	class:__anon325::CountValue	file:
isNegativeZeroValue	VMCore/Constants.cpp	/^bool Constant::isNegativeZeroValue() const {$/;"	f	class:Constant
isNewRegClobberedByRefs	CodeGen/CriticalAntiDepBreaker.cpp	/^CriticalAntiDepBreaker::isNewRegClobberedByRefs(RegRefIter RegRefBegin,$/;"	f	class:CriticalAntiDepBreaker
isNewValueInst	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::isNewValueInst(MachineInstr* MI) {$/;"	f	class:HexagonPacketizerList
isNewValueJump	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isNewValueJump(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isNewValueJumpCandidate	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isNewValueJumpCandidate(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isNewValueStore	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isNewValueStore(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isNewifiable	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::isNewifiable(MachineInstr* MI) {$/;"	f	class:HexagonPacketizerList
isNilpotent	VMCore/Instruction.cpp	/^bool Instruction::isNilpotent(unsigned Opcode) {$/;"	f	class:Instruction
isNoAliasCall	Analysis/AliasAnalysis.cpp	/^bool llvm::isNoAliasCall(const Value *V) {$/;"	f	class:llvm
isNoAliasFn	Analysis/MemoryBuiltins.cpp	/^bool llvm::isNoAliasFn(const Value *V, const TargetLibraryInfo *TLI,$/;"	f	class:llvm
isNonConstantNegative	Analysis/ScalarEvolution.cpp	/^bool SCEV::isNonConstantNegative() const {$/;"	f	class:SCEV
isNonEscapingLocalObject	Analysis/BasicAliasAnalysis.cpp	/^static bool isNonEscapingLocalObject(const Value *V) {$/;"	f	file:
isNonGhostDeclaration	ExecutionEngine/JIT/JITEmitter.cpp	/^static bool isNonGhostDeclaration(const Function *F) {$/;"	f	file:
isNoopCast	VMCore/Instructions.cpp	/^bool CastInst::isNoopCast(Instruction::CastOps Opcode,$/;"	f	class:CastInst
isNoopCast	VMCore/Instructions.cpp	/^bool CastInst::isNoopCast(Type *IntPtrTy) const {$/;"	f	class:CastInst
isNoopInstruction	Transforms/Scalar/ObjCARC.cpp	/^static bool isNoopInstruction(const Instruction *I) {$/;"	f	file:
isNopCopy	CodeGen/MachineCopyPropagation.cpp	/^static bool isNopCopy(MachineInstr *CopyMI, unsigned Def, unsigned Src,$/;"	f	file:
isNormalAddRecExprPHI	Analysis/ScalarEvolutionExpander.cpp	/^bool SCEVExpander::isNormalAddRecExprPHI(PHINode *PN, Instruction *IncV,$/;"	f	class:SCEVExpander
isNot	VMCore/Instructions.cpp	/^bool BinaryOperator::isNot(const Value *V) {$/;"	f	class:BinaryOperator
isNotConstant	Analysis/LazyValueInfo.cpp	/^  bool isNotConstant() const   { return Tag == notconstant; }$/;"	f	class:__anon18::LVILatticeVal
isNotSingleFloat	Target/Mips/MipsSubtarget.h	/^  bool isNotSingleFloat() const { return !IsSingleFloat; }$/;"	f	class:llvm::MipsSubtarget
isNotUsedInLoop	Transforms/Scalar/LICM.cpp	/^bool LICM::isNotUsedInLoop(Instruction &I) {$/;"	f	class:LICM
isNullOrUndef	Transforms/Scalar/ObjCARC.cpp	/^static bool isNullOrUndef(const Value *V) {$/;"	f	file:
isNullValue	VMCore/Constants.cpp	/^bool Constant::isNullValue() const {$/;"	f	class:Constant
isNumberChar	Support/FileUtilities.cpp	/^static bool isNumberChar(char C) {$/;"	f	file:
isOProfileRunning	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^bool OProfileWrapper::isOProfileRunning() {$/;"	f	class:llvm::OProfileWrapper
isObjCClass	CodeGen/AsmPrinter/DwarfDebug.cpp	/^static bool isObjCClass(StringRef Name) {$/;"	f	file:
isObjCProperty	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isObjCProperty() const {$/;"	f	class:DIDescriptor
isObjectEnd	Support/StreamableMemoryObject.cpp	/^bool StreamingMemoryObject::isObjectEnd(uint64_t address) const {$/;"	f	class:llvm::StreamingMemoryObject
isObjectFile	Support/Path.cpp	/^Path::isObjectFile() const {$/;"	f	class:Path
isObjectPointer	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool isObjectPointer()             const {$/;"	f	class:llvm::DbgVariable
isObjectSize	Analysis/BasicAliasAnalysis.cpp	/^static bool isObjectSize(const Value *V, uint64_t Size,$/;"	f	file:
isObjectSmallerThan	Analysis/BasicAliasAnalysis.cpp	/^static bool isObjectSmallerThan(const Value *V, uint64_t Size,$/;"	f	file:
isObjectStart	TableGen/TGParser.cpp	/^static bool isObjectStart(tgtok::TokKind K) {$/;"	f	file:
isOffsetFoldingLegal	CodeGen/SelectionDAG/TargetLowering.cpp	/^TargetLowering::isOffsetFoldingLegal(const GlobalAddressSDNode *GA) const {$/;"	f	class:TargetLowering
isOffsetFoldingLegal	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::isOffsetFoldingLegal(const GlobalAddressSDNode *GA) const {$/;"	f	class:ARMTargetLowering
isOffsetFoldingLegal	Target/CellSPU/SPUISelLowering.cpp	/^SPUTargetLowering::isOffsetFoldingLegal(const GlobalAddressSDNode *GA) const {$/;"	f	class:SPUTargetLowering
isOffsetFoldingLegal	Target/MBlaze/MBlazeISelLowering.cpp	/^isOffsetFoldingLegal(const GlobalAddressSDNode *GA) const {$/;"	f	class:MBlazeTargetLowering
isOffsetFoldingLegal	Target/Mips/MipsISelLowering.cpp	/^MipsTargetLowering::isOffsetFoldingLegal(const GlobalAddressSDNode *GA) const {$/;"	f	class:MipsTargetLowering
isOffsetFoldingLegal	Target/PowerPC/PPCISelLowering.cpp	/^PPCTargetLowering::isOffsetFoldingLegal(const GlobalAddressSDNode *GA) const {$/;"	f	class:PPCTargetLowering
isOffsetFoldingLegal	Target/Sparc/SparcISelLowering.cpp	/^SparcTargetLowering::isOffsetFoldingLegal(const GlobalAddressSDNode *GA) const {$/;"	f	class:SparcTargetLowering
isOffsetInRange	Target/ARM/ARMConstantIslandPass.cpp	/^    bool isOffsetInRange(unsigned UserOffset, unsigned TrialOffset,$/;"	f	class:__anon310::ARMConstantIslands	file:
isOffsetInRange	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::isOffsetInRange(unsigned UserOffset,$/;"	f	class:ARMConstantIslands
isOffsetOf	Analysis/ScalarEvolution.cpp	/^bool SCEVUnknown::isOffsetOf(Type *&CTy, Constant *&FieldNo) const {$/;"	f	class:SCEVUnknown
isOffsetSuitableForCodeModel	Target/X86/X86ISelLowering.cpp	/^bool X86::isOffsetSuitableForCodeModel(int64_t Offset, CodeModel::Model M,$/;"	f	class:X86
isOne	Analysis/ScalarEvolution.cpp	/^bool SCEV::isOne() const {$/;"	f	class:SCEV
isOneInstr	CodeGen/SplitKit.h	/^    bool isOneInstr() const {$/;"	f	struct:llvm::SplitAnalysis::BlockInfo
isOneUseSetCC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static bool isOneUseSetCC(SDValue N) {$/;"	f	file:
isOnlyCopiedFromConstantGlobal	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^isOnlyCopiedFromConstantGlobal(AllocaInst *AI,$/;"	f	file:
isOnlyCopiedFromConstantGlobal	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^isOnlyCopiedFromConstantGlobal(Value *V, MemTransferInst *&TheCopy,$/;"	f	file:
isOnlyReachableViaThisEdge	Transforms/Scalar/GVN.cpp	/^static bool isOnlyReachableViaThisEdge(const BasicBlockEdge &E,$/;"	f	file:
isOnlyUsedInEntryBlock	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static bool isOnlyUsedInEntryBlock(const Argument *A, bool FastISel) {$/;"	f	file:
isOnlyUserOf	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SDNode::isOnlyUserOf(SDNode *N) const {$/;"	f	class:SDNode
isOpcWithIntImmediate	Target/ARM/ARMISelDAGToDAG.cpp	/^static bool isOpcWithIntImmediate(SDNode *N, unsigned Opc, unsigned& Imm) {$/;"	f	file:
isOpcWithIntImmediate	Target/PowerPC/PPCISelDAGToDAG.cpp	/^static bool isOpcWithIntImmediate(SDNode *N, unsigned Opc, unsigned& Imm) {$/;"	f	file:
isOperandKill	CodeGen/MachineLICM.cpp	/^static bool isOperandKill(const MachineOperand &MO, MachineRegisterInfo *MRI) {$/;"	f	file:
isOperandOf	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static bool isOperandOf(const SUnit *SU, SDNode *N) {$/;"	f	file:
isOperandOf	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SDNode::isOperandOf(SDNode *N) const {$/;"	f	class:SDNode
isOperandOf	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SDValue::isOperandOf(SDNode *N) const {$/;"	f	class:SDValue
isOptimized	VMCore/DebugInfo.cpp	/^unsigned DISubprogram::isOptimized() const {$/;"	f	class:DISubprogram
isOrdered	VMCore/Instructions.cpp	/^bool CmpInst::isOrdered(unsigned short predicate) {$/;"	f	class:CmpInst
isOriginalEndpoint	CodeGen/SplitKit.cpp	/^bool SplitAnalysis::isOriginalEndpoint(SlotIndex Idx) const {$/;"	f	class:SplitAnalysis
isOutput	Analysis/DependenceAnalysis.cpp	/^bool Dependence::isOutput() const {$/;"	f	class:Dependence
isOverdefined	Analysis/LazyValueInfo.cpp	/^  bool isOverdefined() const   { return Tag == overdefined; }$/;"	f	class:__anon18::LVILatticeVal
isOverdefined	Transforms/Scalar/SCCP.cpp	/^  bool isOverdefined() const { return getLatticeValue() == overdefined; }$/;"	f	class:__anon530::LatticeVal
isOverloaded	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^bool MBlazeIntrinsicInfo::isOverloaded(unsigned IntrID) const {$/;"	f	class:MBlazeIntrinsicInfo
isOverloaded	VMCore/Function.cpp	/^bool Intrinsic::isOverloaded(ID id) {$/;"	f	class:Intrinsic
isOverwrite	Transforms/Scalar/DeadStoreElimination.cpp	/^static OverwriteResult isOverwrite(const AliasAnalysis::Location &Later,$/;"	f	file:
isPALIGNRMask	Target/X86/X86ISelLowering.cpp	/^static bool isPALIGNRMask(ArrayRef<int> Mask, EVT VT,$/;"	f	file:
isPCRelativeRel	Target/ARM/ARMELFWriterInfo.cpp	/^bool ARMELFWriterInfo::isPCRelativeRel(unsigned RelTy) const {$/;"	f	class:ARMELFWriterInfo
isPCRelativeRel	Target/MBlaze/MBlazeELFWriterInfo.cpp	/^bool MBlazeELFWriterInfo::isPCRelativeRel(unsigned RelTy) const {$/;"	f	class:MBlazeELFWriterInfo
isPCRelativeRel	Target/Mips/MipsELFWriterInfo.cpp	/^bool MipsELFWriterInfo::isPCRelativeRel(unsigned RelTy) const {$/;"	f	class:MipsELFWriterInfo
isPCRelativeRel	Target/X86/X86ELFWriterInfo.cpp	/^bool X86ELFWriterInfo::isPCRelativeRel(unsigned RelTy) const {$/;"	f	class:X86ELFWriterInfo
isPICStyleGOT	Target/X86/X86Subtarget.h	/^  bool isPICStyleGOT() const { return PICStyle == PICStyles::GOT; }$/;"	f	class:llvm::X86Subtarget
isPICStyleRIPRel	Target/X86/X86Subtarget.h	/^  bool isPICStyleRIPRel() const { return PICStyle == PICStyles::RIPRel; }$/;"	f	class:llvm::X86Subtarget
isPICStyleSet	Target/X86/X86Subtarget.h	/^  bool isPICStyleSet() const { return PICStyle != PICStyles::None; }$/;"	f	class:llvm::X86Subtarget
isPICStyleStubAny	Target/X86/X86Subtarget.h	/^  bool isPICStyleStubAny() const {$/;"	f	class:llvm::X86Subtarget
isPICStyleStubNoDynamic	Target/X86/X86Subtarget.h	/^  bool isPICStyleStubNoDynamic() const {$/;"	f	class:llvm::X86Subtarget
isPICStyleStubPIC	Target/X86/X86Subtarget.h	/^  bool isPICStyleStubPIC() const {$/;"	f	class:llvm::X86Subtarget
isPKHASRImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isPKHASRImm() const {$/;"	f	class:__anon261::ARMOperand
isPKHLSLImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isPKHLSLImm() const {$/;"	f	class:__anon261::ARMOperand
isPPC64	Target/PowerPC/PPCSubtarget.h	/^  bool isPPC64() const { return IsPPC64; }$/;"	f	class:llvm::PPCSubtarget
isPSHUFDMask	Target/X86/X86ISelLowering.cpp	/^static bool isPSHUFDMask(ArrayRef<int> Mask, EVT VT) {$/;"	f	file:
isPSHUFHWMask	Target/X86/X86ISelLowering.cpp	/^static bool isPSHUFHWMask(ArrayRef<int> Mask, EVT VT, bool HasAVX2) {$/;"	f	file:
isPSHUFLWMask	Target/X86/X86ISelLowering.cpp	/^static bool isPSHUFLWMask(ArrayRef<int> Mask, EVT VT, bool HasAVX2) {$/;"	f	file:
isPacked	VMCore/LLVMContextImpl.h	/^    bool isPacked;$/;"	m	struct:llvm::AnonStructTypeKeyInfo::KeyTy
isParamLoad	Target/NVPTX/NVPTXutil.cpp	/^bool isParamLoad(const MachineInstr *MI)$/;"	f	namespace:llvm
isParsingInlineAsm	MC/MCParser/AsmParser.cpp	/^  bool isParsingInlineAsm() { return ParsingInlineAsm; }$/;"	f	class:__anon211::AsmParser
isParsingIntelSyntax	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isParsingIntelSyntax() {$/;"	f	class:__anon335::X86AsmParser
isPartial	CodeGen/RegisterCoalescer.h	/^    bool isPartial() const { return Partial; }$/;"	f	class:llvm::CoalescerPair
isPartialRedef	CodeGen/LiveIntervalAnalysis.cpp	/^bool LiveIntervals::isPartialRedef(SlotIndex MIIdx, MachineOperand &MO,$/;"	f	class:LiveIntervals
isPassDebuggingExecutionsOrMore	VMCore/PassManager.cpp	/^bool PMDataManager::isPassDebuggingExecutionsOrMore() const {$/;"	f	class:PMDataManager
isPassiveNode	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^    static bool isPassiveNode(SDNode *Node) {$/;"	f	class:llvm::ScheduleDAGSDNodes
isPeelFirst	Analysis/DependenceAnalysis.cpp	/^bool FullDependence::isPeelFirst(unsigned Level) const {$/;"	f	class:FullDependence
isPeelLast	Analysis/DependenceAnalysis.cpp	/^bool FullDependence::isPeelLast(unsigned Level) const {$/;"	f	class:FullDependence
isPhys	CodeGen/RegisterCoalescer.h	/^    bool isPhys() const { return !NewRC; }$/;"	f	class:llvm::CoalescerPair
isPhysDefTriviallyDead	CodeGen/MachineCSE.cpp	/^MachineCSE::isPhysDefTriviallyDead(unsigned Reg,$/;"	f	class:MachineCSE
isPodLike	Transforms/InstCombine/InstCombinePHI.cpp	/^  struct isPodLike<LoweredPHIRecord> { static const bool value = true; };$/;"	s	namespace:llvm	file:
isPodLike	Transforms/Scalar/EarlyCSE.cpp	/^  template<> struct isPodLike<CallValue> {$/;"	s	namespace:llvm	file:
isPodLike	Transforms/Scalar/EarlyCSE.cpp	/^template<> struct isPodLike<SimpleValue> {$/;"	s	namespace:llvm	file:
isPossibleSelfRead	Transforms/Scalar/DeadStoreElimination.cpp	/^static bool isPossibleSelfRead(Instruction *Inst,$/;"	f	file:
isPostDominatedBy	CodeGen/MachineSink.cpp	/^static bool isPostDominatedBy(MachineBasicBlock *A, MachineBasicBlock *B) {$/;"	f	file:
isPostIdxImm8	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isPostIdxImm8() const {$/;"	f	class:__anon261::ARMOperand
isPostIdxImm8s4	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isPostIdxImm8s4() const {$/;"	f	class:__anon261::ARMOperand
isPostIdxReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isPostIdxReg() const {$/;"	f	class:__anon261::ARMOperand
isPostIdxRegShifted	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isPostIdxRegShifted() const { return Kind == k_PostIndexRegister; }$/;"	f	class:__anon261::ARMOperand
isPostIncrement	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isPostIncrement (const MachineInstr* MI) const {$/;"	f	class:HexagonInstrInfo
isPowerOf2ByteWidth	VMCore/Type.cpp	/^bool IntegerType::isPowerOf2ByteWidth() const {$/;"	f	class:IntegerType
isPowerOfTwo	Analysis/ValueTracking.cpp	/^bool llvm::isPowerOfTwo(Value *V, const DataLayout *TD, bool OrZero,$/;"	f	class:llvm
isPredecessor	CodeGen/MachineBasicBlock.cpp	/^bool MachineBasicBlock::isPredecessor(const MachineBasicBlock *MBB) const {$/;"	f	class:MachineBasicBlock
isPredicable	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::isPredicable(MachineInstr *MI) const {$/;"	f	class:ARMBaseInstrInfo
isPredicable	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isPredicable(MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isPredicated	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::isPredicated(const MachineInstr *MI) const {$/;"	f	class:ARMBaseInstrInfo
isPredicated	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isPredicated(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isPrefixAtLocation	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static BOOL isPrefixAtLocation(struct InternalInstruction* insn,$/;"	f	file:
isPrefixedOrGrouping	Support/CommandLine.cpp	/^static inline bool isPrefixedOrGrouping(const Option *O) {$/;"	f	file:
isProcIFlags	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isProcIFlags() const { return Kind == k_ProcIFlags; }$/;"	f	class:__anon261::ARMOperand
isProcessed	Transforms/Scalar/EarlyCSE.cpp	/^    bool isProcessed() { return Processed; }$/;"	f	class:__anon566::EarlyCSE::StackNode
isProfitableChain	Transforms/Scalar/LoopStrengthReduce.cpp	/^isProfitableChain(IVChain &Chain, SmallPtrSet<Instruction*, 4> &Users,$/;"	f	file:
isProfitableIncrement	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool IVChain::isProfitableIncrement(const SCEV *OperExpr,$/;"	f	class:IVChain
isProfitableToCSE	CodeGen/MachineCSE.cpp	/^bool MachineCSE::isProfitableToCSE(unsigned CSReg, unsigned Reg,$/;"	f	class:MachineCSE
isProfitableToCommute	CodeGen/TwoAddressInstructionPass.cpp	/^TwoAddressInstructionPass::isProfitableToCommute(unsigned regA, unsigned regB,$/;"	f	class:TwoAddressInstructionPass
isProfitableToConv3Addr	CodeGen/TwoAddressInstructionPass.cpp	/^TwoAddressInstructionPass::isProfitableToConv3Addr(unsigned RegA,unsigned RegB){$/;"	f	class:TwoAddressInstructionPass
isProfitableToDupForIfCvt	Target/ARM/ARMBaseInstrInfo.h	/^  virtual bool isProfitableToDupForIfCvt(MachineBasicBlock &MBB,$/;"	f	class:llvm::ARMBaseInstrInfo
isProfitableToDupForIfCvt	Target/Hexagon/HexagonInstrInfo.cpp	/^isProfitableToDupForIfCvt(MachineBasicBlock &MBB,unsigned NumInstrs,$/;"	f	class:HexagonInstrInfo
isProfitableToFoldUnconditional	Transforms/Utils/SimplifyCFG.cpp	/^static bool isProfitableToFoldUnconditional(BranchInst *SI1,$/;"	f	file:
isProfitableToIfCvt	Target/ARM/ARMBaseInstrInfo.cpp	/^isProfitableToIfCvt(MachineBasicBlock &MBB,$/;"	f	class:ARMBaseInstrInfo
isProfitableToIfCvt	Target/ARM/ARMBaseInstrInfo.cpp	/^isProfitableToIfCvt(MachineBasicBlock &TMBB,$/;"	f	class:ARMBaseInstrInfo
isProfitableToIfCvt	Target/Hexagon/HexagonInstrInfo.cpp	/^isProfitableToIfCvt(MachineBasicBlock &MBB,$/;"	f	class:HexagonInstrInfo
isProfitableToIfCvt	Target/Hexagon/HexagonInstrInfo.cpp	/^isProfitableToIfCvt(MachineBasicBlock &TMBB,$/;"	f	class:HexagonInstrInfo
isProfitableToSinkTo	CodeGen/MachineSink.cpp	/^bool MachineSinking::isProfitableToSinkTo(unsigned Reg, MachineInstr *MI,$/;"	f	class:MachineSinking
isProfitableToUnpredicate	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::isProfitableToUnpredicate(MachineBasicBlock &TMBB,$/;"	f	class:ARMBaseInstrInfo
isProfitableToUseMemset	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemsetRange::isProfitableToUseMemset(const DataLayout &TD) const {$/;"	f	class:MemsetRange
isPrunedValue	CodeGen/RegisterCoalescer.cpp	/^bool JoinVals::isPrunedValue(unsigned ValNo, JoinVals &Other) {$/;"	f	class:JoinVals
isR9Reserved	Target/ARM/ARMSubtarget.h	/^  bool isR9Reserved() const { return IsR9Reserved; }$/;"	f	class:llvm::ARMSubtarget
isRIPRelative	Target/X86/X86ISelDAGToDAG.cpp	/^    bool isRIPRelative() const {$/;"	f	struct:__anon371::X86ISelAddressMode
isReachableFromEntry	VMCore/Dominators.cpp	/^bool DominatorTree::isReachableFromEntry(const Use &U) const {$/;"	f	class:DominatorTree
isReadSpecialReg	Target/NVPTX/NVPTXInstrInfo.cpp	/^bool  NVPTXInstrInfo::isReadSpecialReg(MachineInstr &MI) const$/;"	f	class:NVPTXInstrInfo
isReady	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool isReady(SUnit *SU) {$/;"	f	class:__anon76::ScheduleDAGRRList	file:
isReady	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool isReady(SUnit *U) const {$/;"	f	class:__anon77::RegReductionPriorityQueue
isReady	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool isReady(SUnit* SU, unsigned CurCycle) const { return true; }$/;"	f	struct:__anon77::queue_sort
isReady	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^bool hybrid_ls_rr_sort::isReady(SUnit *SU, unsigned CurCycle) const {$/;"	f	class:hybrid_ls_rr_sort
isReady	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^bool ilp_ls_rr_sort::isReady(SUnit *SU, unsigned CurCycle) const {$/;"	f	class:ilp_ls_rr_sort
isReallocLikeFn	Analysis/MemoryBuiltins.cpp	/^bool llvm::isReallocLikeFn(const Value *V, const TargetLibraryInfo *TLI,$/;"	f	class:llvm
isReallyTriviallyReMaterializable	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::isReallyTriviallyReMaterializable(const MachineInstr *MI,$/;"	f	class:X86InstrInfo
isReallyTriviallyReMaterializableGeneric	CodeGen/TargetInstrInfoImpl.cpp	/^isReallyTriviallyReMaterializableGeneric(const MachineInstr *MI,$/;"	f	class:TargetInstrInfo
isReassociableOp	Transforms/Scalar/Reassociate.cpp	/^static BinaryOperator *isReassociableOp(Value *V, unsigned Opcode) {$/;"	f	file:
isRecoveringFromCrash	Support/CrashRecoveryContext.cpp	/^bool CrashRecoveryContext::isRecoveringFromCrash() {$/;"	f	class:CrashRecoveryContext
isReductionInstr	Transforms/Vectorize/LoopVectorize.cpp	/^LoopVectorizationLegality::isReductionInstr(Instruction *I,$/;"	f	class:__anon605::LoopVectorizationLegality
isRedundantFlagInstr	Target/ARM/ARMBaseInstrInfo.cpp	/^inline static bool isRedundantFlagInstr(MachineInstr *CmpI, unsigned SrcReg,$/;"	f	file:
isRedundantFlagInstr	Target/X86/X86InstrInfo.cpp	/^inline static bool isRedundantFlagInstr(MachineInstr *FlagI, unsigned SrcReg,$/;"	f	file:
isReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isReg() const { return Kind == k_Register; }$/;"	f	class:__anon261::ARMOperand
isReg	Target/Hexagon/HexagonHardwareLoops.cpp	/^    bool isReg() const { return Kind == CV_Register; }$/;"	f	class:__anon408::CountValue
isReg	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  bool isReg() const { return Kind == Register; }$/;"	f	struct:__anon446::MBlazeOperand
isReg	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool isReg() const { return Kind == k_Register; }$/;"	f	class:__anon423::MipsOperand
isReg	Target/PowerPC/PPCCTRLoops.cpp	/^    bool isReg() const { return Kind == CV_Register; }$/;"	f	class:__anon325::CountValue
isReg	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isReg() const { return Kind == Register; }$/;"	f	struct:__anon336::X86Operand
isRegList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isRegList() const { return Kind == k_RegisterList; }$/;"	f	class:__anon261::ARMOperand
isRegShiftedImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isRegShiftedImm() const { return Kind == k_ShiftedImmediate; }$/;"	f	class:__anon261::ARMOperand
isRegShiftedReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isRegShiftedReg() const { return Kind == k_ShiftedRegister; }$/;"	f	class:__anon261::ARMOperand
isRegToSpill	CodeGen/InlineSpiller.cpp	/^  bool isRegToSpill(unsigned Reg) {$/;"	f	class:__anon155::InlineSpiller	file:
isRegUsedByUsesOtherThan	Transforms/Scalar/LoopStrengthReduce.cpp	/^RegUseTracker::isRegUsedByUsesOtherThan(const SCEV *Reg, size_t LUIdx) const {$/;"	f	class:RegUseTracker
isRegion	Analysis/RegionInfo.cpp	/^bool RegionInfo::isRegion(BasicBlock *entry, BasicBlock *exit) const {$/;"	f	class:RegionInfo
isRegister	MC/MCDisassembler/EDOperand.cpp	/^int EDOperand::isRegister() {$/;"	f	class:EDOperand
isRemainderZero	Analysis/DependenceAnalysis.cpp	/^bool isRemainderZero(const SCEVConstant *Dividend,$/;"	f	file:
isRematerializable	CodeGen/CalcSpillWeights.cpp	/^static bool isRematerializable(const LiveInterval &LI,$/;"	f	file:
isRemovable	Transforms/Scalar/DeadStoreElimination.cpp	/^static bool isRemovable(Instruction *I) {$/;"	f	file:
isReorder	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool isReorder() {return reorder;}$/;"	f	class:__anon421::MipsAssemblerOptions
isRepeatedByteSequence	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static int isRepeatedByteSequence(const ConstantDataSequential *V) {$/;"	f	file:
isRepeatedByteSequence	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static int isRepeatedByteSequence(const Value *V, TargetMachine &TM) {$/;"	f	file:
isReserved	CodeGen/MachineVerifier.cpp	/^    bool isReserved(unsigned Reg) {$/;"	f	struct:__anon139::MachineVerifier
isReservedReg	Target/ARM/ARMBaseRegisterInfo.cpp	/^bool ARMBaseRegisterInfo::isReservedReg(const MachineFunction &MF,$/;"	f	class:ARMBaseRegisterInfo
isResourceAvailable	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^bool ResourcePriorityQueue::isResourceAvailable(SUnit *SU) {$/;"	f	class:ResourcePriorityQueue
isResourceAvailable	Target/Hexagon/HexagonMachineScheduler.cpp	/^bool VLIWResourceModel::isResourceAvailable(SUnit *SU) {$/;"	f	class:VLIWResourceModel
isReturnBlock	CodeGen/ShrinkWrapping.cpp	/^bool PEI::isReturnBlock(MachineBasicBlock* MBB) {$/;"	f	class:PEI
isRotImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isRotImm() const { return Kind == k_RotateImmediate; }$/;"	f	class:__anon261::ARMOperand
isRotateAndMask	Target/PowerPC/PPCISelDAGToDAG.cpp	/^bool PPCDAGToDAGISel::isRotateAndMask(SDNode *N, unsigned Mask,$/;"	f	class:PPCDAGToDAGISel
isRunOfOnes	Target/PowerPC/PPCISelDAGToDAG.cpp	/^bool PPCDAGToDAGISel::isRunOfOnes(unsigned Val, unsigned &MB, unsigned &ME) {$/;"	f	class:PPCDAGToDAGISel
isRunOfOnes	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^static bool isRunOfOnes(ConstantInt *Val, uint32_t &MB, uint32_t &ME) {$/;"	f	file:
isSCEVable	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::isSCEVable(Type *Ty) const {$/;"	f	class:ScalarEvolution
isSHUFPMask	Target/X86/X86ISelLowering.cpp	/^static bool isSHUFPMask(ArrayRef<int> Mask, EVT VT, bool HasAVX,$/;"	f	file:
isSIVPair	Analysis/LoopDependenceAnalysis.cpp	/^bool LoopDependenceAnalysis::isSIVPair(const SCEV *A, const SCEV *B) const {$/;"	f	class:LoopDependenceAnalysis
isSOImmTwoPartVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline bool isSOImmTwoPartVal(unsigned V) {$/;"	f	namespace:llvm::ARM_AM
isSPRRegList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isSPRRegList() const { return Kind == k_SPRRegisterList; }$/;"	f	class:__anon261::ARMOperand
isSVR4ABI	Target/PowerPC/PPCSubtarget.h	/^  bool isSVR4ABI() const { return !isDarwin(); }$/;"	f	class:llvm::PPCSubtarget
isSafeAllocaToScalarRepl	Transforms/Scalar/ScalarReplAggregates.cpp	/^bool SROA::isSafeAllocaToScalarRepl(AllocaInst *AI) {$/;"	f	class:SROA
isSafeAndProfitableToSinkLoad	Transforms/InstCombine/InstCombinePHI.cpp	/^static bool isSafeAndProfitableToSinkLoad(LoadInst *L) {$/;"	f	file:
isSafeForScalarRepl	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::isSafeForScalarRepl(Instruction *I, uint64_t Offset,$/;"	f	class:SROA
isSafeGEP	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::isSafeGEP(GetElementPtrInst *GEPI,$/;"	f	class:SROA
isSafeMemAccess	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::isSafeMemAccess(uint64_t Offset, uint64_t MemSize,$/;"	f	class:SROA
isSafePHISelectUseForScalarRepl	Transforms/Scalar/ScalarReplAggregates.cpp	/^void SROA::isSafePHISelectUseForScalarRepl(Instruction *I, uint64_t Offset,$/;"	f	class:SROA
isSafePHIToSpeculate	Transforms/Scalar/SROA.cpp	/^  bool isSafePHIToSpeculate(PHINode &PN, SmallVectorImpl<LoadInst *> &Loads) {$/;"	f	class:__anon560::PHIOrSelectSpeculator	file:
isSafePHIToSpeculate	Transforms/Scalar/ScalarReplAggregates.cpp	/^static bool isSafePHIToSpeculate(PHINode *PN, const DataLayout *TD) {$/;"	f	file:
isSafeSROAElementUse	Transforms/IPO/GlobalOpt.cpp	/^static bool isSafeSROAElementUse(Value *V) {$/;"	f	file:
isSafeSelectToSpeculate	Transforms/Scalar/SROA.cpp	/^  bool isSafeSelectToSpeculate(SelectInst &SI,$/;"	f	class:__anon560::PHIOrSelectSpeculator	file:
isSafeSelectToSpeculate	Transforms/Scalar/ScalarReplAggregates.cpp	/^static bool isSafeSelectToSpeculate(SelectInst *SI, const DataLayout *TD) {$/;"	f	file:
isSafeToClobberEFLAGS	Target/X86/X86InstrInfo.cpp	/^static bool isSafeToClobberEFLAGS(MachineBasicBlock &MBB,$/;"	f	file:
isSafeToClone	Analysis/LoopInfo.cpp	/^bool Loop::isSafeToClone() const {$/;"	f	class:Loop
isSafeToEliminateVarargsCast	Transforms/InstCombine/InstCombineCalls.cpp	/^static bool isSafeToEliminateVarargsCast(const CallSite CS,$/;"	f	file:
isSafeToExecuteUnconditionally	Transforms/Scalar/LICM.cpp	/^bool LICM::isSafeToExecuteUnconditionally(Instruction &Inst) {$/;"	f	class:LICM
isSafeToExpand	Analysis/ScalarEvolutionExpander.cpp	/^bool isSafeToExpand(const SCEV *S) {$/;"	f	namespace:llvm
isSafeToHoistInvoke	Transforms/Utils/SimplifyCFG.cpp	/^static bool isSafeToHoistInvoke(BasicBlock *BB1, BasicBlock *BB2,$/;"	f	file:
isSafeToLoadUnconditionally	Analysis/Loads.cpp	/^bool llvm::isSafeToLoadUnconditionally(Value *V, Instruction *ScanFrom,$/;"	f	class:llvm
isSafeToMove	CodeGen/MachineInstr.cpp	/^bool MachineInstr::isSafeToMove(const TargetInstrInfo *TII,$/;"	f	class:MachineInstr
isSafeToMove	Transforms/Scalar/Sink.cpp	/^static bool isSafeToMove(Instruction *Inst, AliasAnalysis *AA,$/;"	f	file:
isSafeToMoveRegClassDefs	Target/X86/X86InstrInfo.cpp	/^isSafeToMoveRegClassDefs(const TargetRegisterClass *RC) const {$/;"	f	class:X86InstrInfo
isSafeToPromoteArgument	Transforms/IPO/ArgumentPromotion.cpp	/^bool ArgPromotion::isSafeToPromoteArgument(Argument *Arg, bool isByVal) const {$/;"	f	class:ArgPromotion
isSafeToReMat	CodeGen/MachineInstr.cpp	/^bool MachineInstr::isSafeToReMat(const TargetInstrInfo *TII,$/;"	f	class:MachineInstr
isSafeToSpeculativelyExecute	Analysis/ValueTracking.cpp	/^bool llvm::isSafeToSpeculativelyExecute(const Value *V,$/;"	f	class:llvm
isSameCompare	Analysis/InstructionSimplify.cpp	/^static bool isSameCompare(Value *V, CmpInst::Predicate Pred, Value *LHS,$/;"	f	file:
isSameOperationAs	VMCore/Instruction.cpp	/^bool Instruction::isSameOperationAs(const Instruction *I,$/;"	f	class:Instruction
isSampler	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::isSampler(const llvm::Value &val) {$/;"	f	class:llvm
isSaveCalleeSavedRegsCall	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isSaveCalleeSavedRegsCall(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isScalar	Analysis/DependenceAnalysis.cpp	/^bool Dependence::isScalar(unsigned level) const {$/;"	f	class:Dependence
isScalar	Analysis/DependenceAnalysis.cpp	/^bool FullDependence::isScalar(unsigned Level) const {$/;"	f	class:FullDependence
isScalarFPTypeInSSEReg	Target/X86/X86FastISel.cpp	/^  bool isScalarFPTypeInSSEReg(EVT VT) const {$/;"	f	class:__anon381::X86FastISel	file:
isScalarFPTypeInSSEReg	Target/X86/X86ISelLowering.h	/^    bool isScalarFPTypeInSSEReg(EVT VT) const {$/;"	f	class:llvm::X86TargetLowering
isScalarLoadToVector	Target/X86/X86ISelLowering.cpp	/^static bool isScalarLoadToVector(SDNode *N, LoadSDNode **LD = NULL) {$/;"	f	file:
isScalarToVector	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool ISD::isScalarToVector(const SDNode *N) {$/;"	f	class:ISD
isScale	Target/X86/X86InstrInfo.h	/^inline static bool isScale(const MachineOperand &MO) {$/;"	f	namespace:llvm
isScaledConstantInRange	Target/ARM/ARMISelDAGToDAG.cpp	/^static bool isScaledConstantInRange(SDValue Node, int Scale,$/;"	f	file:
isSchedulingBoundary	CodeGen/TargetInstrInfoImpl.cpp	/^bool TargetInstrInfoImpl::isSchedulingBoundary(const MachineInstr *MI,$/;"	f	class:TargetInstrInfoImpl
isSchedulingBoundary	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::isSchedulingBoundary(const MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
isSchedulingBoundary	Target/Hexagon/HexagonInstrInfo.cpp	/^bool HexagonInstrInfo::isSchedulingBoundary(const MachineInstr *MI,$/;"	f	class:HexagonInstrInfo
isScope	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isScope() const {$/;"	f	class:DIDescriptor
isScratchReg	Target/X86/X86FloatingPoint.cpp	/^    bool isScratchReg(unsigned RegNo) {$/;"	f	struct:__anon386::FPS	file:
isSecondInIteratorPair	Transforms/Vectorize/BBVectorize.cpp	/^    bool isSecondInIteratorPair(V J, std::pair<$/;"	f	struct:__anon604::BBVectorize
isSectionAtomizable	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^  virtual bool isSectionAtomizable(const MCSection &Section) const {$/;"	f	class:__anon345::DarwinX86_64AsmBackend
isSectionBSS	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::isSectionBSS(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
isSectionBSS	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::isSectionBSS(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
isSectionData	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::isSectionData(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
isSectionData	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::isSectionData(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
isSectionReadOnlyData	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::isSectionReadOnlyData(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
isSectionReadOnlyData	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::isSectionReadOnlyData(DataRefImpl Sec,$/;"	f	class:llvm::object::MachOObjectFile
isSectionRequiredForExecution	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::isSectionRequiredForExecution(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
isSectionRequiredForExecution	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::isSectionRequiredForExecution(DataRefImpl Sec,$/;"	f	class:llvm::object::MachOObjectFile
isSectionText	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::isSectionText(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
isSectionText	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::isSectionText(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
isSectionVirtual	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::isSectionVirtual(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
isSectionVirtual	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::isSectionVirtual(DataRefImpl Sec,$/;"	f	class:llvm::object::MachOObjectFile
isSectionZeroInit	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::isSectionZeroInit(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
isSectionZeroInit	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::isSectionZeroInit(DataRefImpl DRI,$/;"	f	class:llvm::object::MachOObjectFile
isSeenInterference	CodeGen/LiveIntervalUnion.cpp	/^bool LiveIntervalUnion::Query::isSeenInterference(LiveInterval *VirtReg) const {$/;"	f	class:LiveIntervalUnion::Query
isSelect01	Transforms/InstCombine/InstCombineSelect.cpp	/^static bool isSelect01(Constant *C1, Constant *C2) {$/;"	f	file:
isSelectSupported	Target/ARM/ARMISelLowering.h	/^    virtual bool isSelectSupported(SelectSupportKind Kind) const {$/;"	f	class:llvm::ARMTargetLowering
isSentinel	Transforms/Scalar/EarlyCSE.cpp	/^    bool isSentinel() const {$/;"	f	struct:__anon564::SimpleValue
isSentinel	Transforms/Scalar/EarlyCSE.cpp	/^    bool isSentinel() const {$/;"	f	struct:__anon565::CallValue
isSequentialInRange	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^static bool isSequentialInRange(const SmallVectorImpl<int> &Mask,$/;"	f	file:
isSequentialOrUndefInRange	Target/X86/X86ISelLowering.cpp	/^static bool isSequentialOrUndefInRange(ArrayRef<int> Mask,$/;"	f	file:
isSetCCEquivalent	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static bool isSetCCEquivalent(SDValue N, SDValue &LHS, SDValue &RHS,$/;"	f	file:
isSetEndImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isSetEndImm() const {$/;"	f	class:__anon261::ARMOperand
isShifterImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isShifterImm() const { return Kind == k_ShifterImmediate; }$/;"	f	class:__anon261::ARMOperand
isShifterOpProfitable	Target/ARM/ARMISelDAGToDAG.cpp	/^bool ARMDAGToDAGISel::isShifterOpProfitable(const SDValue &Shift,$/;"	f	class:ARMDAGToDAGISel
isShortenable	Transforms/Scalar/DeadStoreElimination.cpp	/^static bool isShortenable(Instruction *I) {$/;"	f	file:
isShrImm16	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isShrImm16() const {$/;"	f	class:__anon261::ARMOperand
isShrImm32	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isShrImm32() const {$/;"	f	class:__anon261::ARMOperand
isShrImm64	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isShrImm64() const {$/;"	f	class:__anon261::ARMOperand
isShrImm8	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isShrImm8() const {$/;"	f	class:__anon261::ARMOperand
isShuffleHigh128VectorInsertLow	Target/X86/X86ISelLowering.cpp	/^static bool isShuffleHigh128VectorInsertLow(ShuffleVectorSDNode *SVOp) {$/;"	f	file:
isShuffleLow128VectorInsertHigh	Target/X86/X86ISelLowering.cpp	/^static bool isShuffleLow128VectorInsertHigh(ShuffleVectorSDNode *SVOp) {$/;"	f	file:
isShuffleMaskConsecutive	Target/X86/X86ISelLowering.cpp	/^bool isShuffleMaskConsecutive(ShuffleVectorSDNode *SVOp,$/;"	f	file:
isShuffleMaskLegal	Target/ARM/ARMISelLowering.cpp	/^ARMTargetLowering::isShuffleMaskLegal(const SmallVectorImpl<int> &M,$/;"	f	class:ARMTargetLowering
isShuffleMaskLegal	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::isShuffleMaskLegal(const SmallVectorImpl<int> &M,$/;"	f	class:X86TargetLowering
isSibling	CodeGen/InlineSpiller.cpp	/^bool InlineSpiller::isSibling(unsigned Reg) {$/;"	f	class:InlineSpiller
isSignBitCheck	Transforms/InstCombine/InstCombineCompares.cpp	/^static bool isSignBitCheck(ICmpInst::Predicate pred, ConstantInt *RHS,$/;"	f	file:
isSignExtended	Target/ARM/ARMISelLowering.cpp	/^static bool isSignExtended(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
isSignWrappedSet	Support/ConstantRange.cpp	/^bool ConstantRange::isSignWrappedSet() const {$/;"	f	class:ConstantRange
isSigned	VMCore/Instructions.cpp	/^bool CmpInst::isSigned(unsigned short predicate) {$/;"	f	class:CmpInst
isSignedChar	Support/FileUtilities.cpp	/^static bool isSignedChar(char C) {$/;"	f	file:
isSignedOp	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static int isSignedOp(ISD::CondCode Opcode) {$/;"	f	file:
isSimple	Analysis/RegionInfo.cpp	/^bool Region::isSimple() const {$/;"	f	class:Region
isSimpleBB	CodeGen/TailDuplication.cpp	/^TailDuplicatePass::isSimpleBB(MachineBasicBlock *TailBB) {$/;"	f	class:TailDuplicatePass
isSimpleEnoughPointerToCommit	Transforms/IPO/GlobalOpt.cpp	/^static bool isSimpleEnoughPointerToCommit(Constant *C) {$/;"	f	file:
isSimpleEnoughValueToCommit	Transforms/IPO/GlobalOpt.cpp	/^isSimpleEnoughValueToCommit(Constant *C,$/;"	f	file:
isSimpleEnoughValueToCommitHelper	Transforms/IPO/GlobalOpt.cpp	/^static bool isSimpleEnoughValueToCommitHelper(Constant *C,$/;"	f	file:
isSimpleIVUser	Transforms/Utils/SimplifyIndVar.cpp	/^static bool isSimpleIVUser(Instruction *I, const Loop *L, ScalarEvolution *SE) {$/;"	f	file:
isSimpleMove	Target/NVPTX/VectorElementize.cpp	/^bool VectorElementize::isSimpleMove(MachineInstr *mi) {$/;"	f	class:VectorElementize
isSimpleValue	Transforms/Scalar/GVN.cpp	/^  bool isSimpleValue() const { return Val.getInt() == SimpleVal; }$/;"	f	struct:__anon538::AvailableValueInBlock
isSimplifiedLoopNest	Analysis/IVUsers.cpp	/^static bool isSimplifiedLoopNest(BasicBlock *BB, const DominatorTree *DT,$/;"	f	file:
isSingleEdge	VMCore/Dominators.cpp	/^bool BasicBlockEdge::isSingleEdge() const {$/;"	f	class:BasicBlockEdge
isSingleFloat	Target/Mips/MipsSubtarget.h	/^  bool isSingleFloat() const { return IsSingleFloat; }$/;"	f	class:llvm::MipsSubtarget
isSingleSpacedVectorAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isSingleSpacedVectorAllLanes() const {$/;"	f	class:__anon261::ARMOperand
isSingleSpacedVectorIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isSingleSpacedVectorIndexed() const {$/;"	f	class:__anon261::ARMOperand
isSingleSpacedVectorList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isSingleSpacedVectorList() const {$/;"	f	class:__anon261::ARMOperand
isSizeOf	Analysis/ScalarEvolution.cpp	/^bool SCEVUnknown::isSizeOf(Type *&AllocTy) const {$/;"	f	class:SCEVUnknown
isSized	VMCore/Type.cpp	/^bool StructType::isSized() const {$/;"	f	class:StructType
isSizedDerivedType	VMCore/Type.cpp	/^bool Type::isSizedDerivedType() const {$/;"	f	class:Type
isSnippet	CodeGen/InlineSpiller.cpp	/^bool InlineSpiller::isSnippet(const LiveInterval &SnipLI) {$/;"	f	class:InlineSpiller
isSoloInstruction	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::isSoloInstruction(MachineInstr *MI) {$/;"	f	class:HexagonPacketizerList
isSourceDefinedByImplicitDef	CodeGen/PHIElimination.cpp	/^static bool isSourceDefinedByImplicitDef(const MachineInstr *MPhi,$/;"	f	file:
isSpecialMBlazeRegister	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^static inline bool isSpecialMBlazeRegister(unsigned Reg) {$/;"	f	namespace:llvm
isSpillPredRegOp	Target/Hexagon/HexagonInstrInfo.cpp	/^isSpillPredRegOp(const MachineInstr *MI) const {$/;"	f	class:HexagonInstrInfo
isSplatMask	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool ShuffleVectorSDNode::isSplatMask(const int *Mask, EVT VT) {$/;"	f	class:ShuffleVectorSDNode
isSplatShuffleMask	Target/PowerPC/PPCISelLowering.cpp	/^bool PPC::isSplatShuffleMask(ShuffleVectorSDNode *N, unsigned EltSize) {$/;"	f	class:PPC
isSplatVector	Target/X86/X86ISelLowering.cpp	/^static bool isSplatVector(SDNode *N) {$/;"	f	file:
isSplitable	Analysis/DependenceAnalysis.cpp	/^bool FullDependence::isSplitable(unsigned Level) const {$/;"	f	class:FullDependence
isSrcOp	Target/X86/AsmParser/X86AsmParser.cpp	/^bool X86AsmParser::isSrcOp(X86Operand &Op) {$/;"	f	class:X86AsmParser
isStackAligningInlineAsm	CodeGen/MachineInstr.cpp	/^bool MachineInstr::isStackAligningInlineAsm() const {$/;"	f	class:MachineInstr
isStartPacket	Target/Hexagon/HexagonMCInst.h	/^    bool isStartPacket() const { return (startPacket); }$/;"	f	class:llvm::HexagonMCInst
isStartPacket	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  bool isStartPacket(const MachineInstr* MI) const {$/;"	f	class:llvm::HexagonMachineFunctionInfo
isStaticAlloca	VMCore/Instructions.cpp	/^bool AllocaInst::isStaticAlloca() const {$/;"	f	class:AllocaInst
isStoreInstr	Target/NVPTX/NVPTXInstrInfo.cpp	/^bool NVPTXInstrInfo::isStoreInstr(const MachineInstr &MI,$/;"	f	class:NVPTXInstrInfo
isStoreMask	Target/NVPTX/NVPTX.h	/^  isStoreMask = 0x40,$/;"	e	enum:llvm::NVPTX::LoadStore
isStoreShift	Target/NVPTX/NVPTX.h	/^  isStoreShift = 6$/;"	e	enum:llvm::NVPTX::LoadStore
isStoreToStackSlot	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::isStoreToStackSlot(const MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
isStoreToStackSlot	Target/CellSPU/SPUInstrInfo.cpp	/^SPUInstrInfo::isStoreToStackSlot(const MachineInstr *MI,$/;"	f	class:SPUInstrInfo
isStoreToStackSlot	Target/Hexagon/HexagonInstrInfo.cpp	/^unsigned HexagonInstrInfo::isStoreToStackSlot(const MachineInstr *MI,$/;"	f	class:HexagonInstrInfo
isStoreToStackSlot	Target/MBlaze/MBlazeInstrInfo.cpp	/^isStoreToStackSlot(const MachineInstr *MI, int &FrameIndex) const {$/;"	f	class:MBlazeInstrInfo
isStoreToStackSlot	Target/Mips/Mips16InstrInfo.cpp	/^isStoreToStackSlot(const MachineInstr *MI, int &FrameIndex) const$/;"	f	class:Mips16InstrInfo
isStoreToStackSlot	Target/Mips/MipsSEInstrInfo.cpp	/^isStoreToStackSlot(const MachineInstr *MI, int &FrameIndex) const$/;"	f	class:MipsSEInstrInfo
isStoreToStackSlot	Target/PowerPC/PPCInstrInfo.cpp	/^unsigned PPCInstrInfo::isStoreToStackSlot(const MachineInstr *MI,$/;"	f	class:PPCInstrInfo
isStoreToStackSlot	Target/Sparc/SparcInstrInfo.cpp	/^unsigned SparcInstrInfo::isStoreToStackSlot(const MachineInstr *MI,$/;"	f	class:SparcInstrInfo
isStoreToStackSlot	Target/X86/X86InstrInfo.cpp	/^unsigned X86InstrInfo::isStoreToStackSlot(const MachineInstr *MI,$/;"	f	class:X86InstrInfo
isStoreToStackSlot	Target/XCore/XCoreInstrInfo.cpp	/^XCoreInstrInfo::isStoreToStackSlot(const MachineInstr *MI,$/;"	f	class:XCoreInstrInfo
isStoreToStackSlotPostFE	Target/ARM/ARMBaseInstrInfo.cpp	/^unsigned ARMBaseInstrInfo::isStoreToStackSlotPostFE(const MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
isStoreToStackSlotPostFE	Target/X86/X86InstrInfo.cpp	/^unsigned X86InstrInfo::isStoreToStackSlotPostFE(const MachineInstr *MI,$/;"	f	class:X86InstrInfo
isStored	Transforms/IPO/GlobalOpt.cpp	/^    isStored$/;"	e	enum:__anon590::GlobalStatus::StoredType	file:
isStoredObjCPointer	Transforms/Scalar/ObjCARC.cpp	/^static bool isStoredObjCPointer(const Value *P) {$/;"	f	file:
isStoredOnce	Transforms/IPO/GlobalOpt.cpp	/^    isStoredOnce,$/;"	e	enum:__anon590::GlobalStatus::StoredType	file:
isString	CodeGen/AsmPrinter/DIE.h	/^      isString,$/;"	e	enum:llvm::DIEValue::__anon60
isString	VMCore/Constants.cpp	/^bool ConstantDataSequential::isString() const {$/;"	f	class:ConstantDataSequential
isSubprogram	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isSubprogram() const {$/;"	f	class:DIDescriptor
isSubprogramContext	VMCore/DebugInfo.cpp	/^bool llvm::isSubprogramContext(const MDNode *Context) {$/;"	f	class:llvm
isSubprogramDIE	DebugInfo/DWARFDebugInfoEntry.cpp	/^bool DWARFDebugInfoEntryMinimal::isSubprogramDIE() const {$/;"	f	class:DWARFDebugInfoEntryMinimal
isSubrange	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isSubrange() const {$/;"	f	class:DIDescriptor
isSubroutineDIE	DebugInfo/DWARFDebugInfoEntry.cpp	/^bool DWARFDebugInfoEntryMinimal::isSubroutineDIE() const {$/;"	f	class:DWARFDebugInfoEntryMinimal
isSubtargetV2	Target/Hexagon/HexagonSubtarget.h	/^  bool isSubtargetV2() const { return HexagonArchVersion == V2;}$/;"	f	class:llvm::HexagonSubtarget
isSuccessor	CodeGen/MachineBasicBlock.cpp	/^bool MachineBasicBlock::isSuccessor(const MachineBasicBlock *MBB) const {$/;"	f	class:MachineBasicBlock
isSuitableForBSS	Target/TargetLoweringObjectFile.cpp	/^static bool isSuitableForBSS(const GlobalVariable *GV, bool NoZerosInBSS) {$/;"	f	file:
isSuitableForMask	Target/ARM/ARMBaseInstrInfo.cpp	/^static bool isSuitableForMask(MachineInstr *&MI, unsigned SrcReg,$/;"	f	file:
isSupportedVersion	DebugInfo/DWARFContext.h	/^  static bool isSupportedVersion(unsigned version) {$/;"	f	class:llvm::DWARFContext
isSurface	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::isSurface(const llvm::Value &val) {$/;"	f	class:llvm
isSwift	Target/ARM/ARMSubtarget.h	/^  bool isSwift()    const { return ARMProcFamily == Swift; }$/;"	f	class:llvm::ARMSubtarget
isSwift	Target/ARM/MLxExpansionPass.cpp	/^    bool isSwift;$/;"	m	struct:__anon301::MLxExpansion	file:
isSymbolLinkerVisible	MC/MCAssembler.cpp	/^bool MCAssembler::isSymbolLinkerVisible(const MCSymbol &Symbol) const {$/;"	f	class:MCAssembler
isT2MemRegOffset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isT2MemRegOffset() const {$/;"	f	class:__anon261::ARMOperand
isT2SOImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isT2SOImm() const {$/;"	f	class:__anon261::ARMOperand
isT2SOImmNeg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isT2SOImmNeg() const {$/;"	f	class:__anon261::ARMOperand
isT2SOImmNot	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isT2SOImmNot() const {$/;"	f	class:__anon261::ARMOperand
isT2SOImmTwoPartVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline bool isT2SOImmTwoPartVal (unsigned Imm) {$/;"	f	namespace:llvm::ARM_AM
isT2i32Load	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static bool isT2i32Load(unsigned Opc) {$/;"	f	file:
isT2i32Store	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static bool isT2i32Store(unsigned Opc) {$/;"	f	file:
isTargetCOFF	Target/X86/X86Subtarget.h	/^  bool isTargetCOFF() const {$/;"	f	class:llvm::X86Subtarget
isTargetCygMing	Target/X86/X86Subtarget.h	/^  bool isTargetCygMing() const { return TargetTriple.isOSCygMing(); }$/;"	f	class:llvm::X86Subtarget
isTargetCygwin	Target/X86/X86Subtarget.h	/^  bool isTargetCygwin() const { return TargetTriple.getOS() == Triple::Cygwin; }$/;"	f	class:llvm::X86Subtarget
isTargetDarwin	Target/ARM/ARMSubtarget.h	/^  bool isTargetDarwin() const { return TargetTriple.isOSDarwin(); }$/;"	f	class:llvm::ARMSubtarget
isTargetDarwin	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  bool isTargetDarwin() const {$/;"	f	class:__anon283::ARMMCCodeEmitter
isTargetDarwin	Target/X86/X86Subtarget.h	/^  bool isTargetDarwin() const { return TargetTriple.isOSDarwin(); }$/;"	f	class:llvm::X86Subtarget
isTargetELF	Target/ARM/ARMSubtarget.h	/^  bool isTargetELF() const { return !isTargetDarwin(); }$/;"	f	class:llvm::ARMSubtarget
isTargetELF	Target/X86/X86Subtarget.h	/^  bool isTargetELF() const {$/;"	f	class:llvm::X86Subtarget
isTargetEnvMacho	Target/X86/X86Subtarget.h	/^  bool isTargetEnvMacho() const { return TargetTriple.isEnvironmentMachO(); }$/;"	f	class:llvm::X86Subtarget
isTargetFTOL	Target/X86/X86ISelLowering.h	/^    bool isTargetFTOL() const {$/;"	f	class:llvm::X86TargetLowering
isTargetFreeBSD	Target/X86/X86Subtarget.h	/^  bool isTargetFreeBSD() const {$/;"	f	class:llvm::X86Subtarget
isTargetIOS	Target/ARM/ARMSubtarget.h	/^  bool isTargetIOS() const { return TargetTriple.getOS() == Triple::IOS; }$/;"	f	class:llvm::ARMSubtarget
isTargetLinux	Target/X86/X86Subtarget.h	/^  bool isTargetLinux() const { return TargetTriple.getOS() == Triple::Linux; }$/;"	f	class:llvm::X86Subtarget
isTargetMingw	Target/X86/X86Subtarget.h	/^  bool isTargetMingw() const { return TargetTriple.getOS() == Triple::MinGW32; }$/;"	f	class:llvm::X86Subtarget
isTargetNaCl	Target/ARM/ARMSubtarget.h	/^  bool isTargetNaCl() const {$/;"	f	class:llvm::ARMSubtarget
isTargetNaCl	Target/X86/X86Subtarget.h	/^  bool isTargetNaCl() const {$/;"	f	class:llvm::X86Subtarget
isTargetNaCl32	Target/X86/X86Subtarget.h	/^  bool isTargetNaCl32() const { return isTargetNaCl() && !is64Bit(); }$/;"	f	class:llvm::X86Subtarget
isTargetNaCl64	Target/X86/X86Subtarget.h	/^  bool isTargetNaCl64() const { return isTargetNaCl() && is64Bit(); }$/;"	f	class:llvm::X86Subtarget
isTargetNullPtr	ExecutionEngine/ExecutionEngine.cpp	/^static bool isTargetNullPtr(ExecutionEngine *EE, void *Loc) {$/;"	f	file:
isTargetShuffle	Target/X86/X86ISelLowering.cpp	/^static bool isTargetShuffle(unsigned Opcode) {$/;"	f	file:
isTargetSolaris	Target/X86/X86Subtarget.h	/^  bool isTargetSolaris() const {$/;"	f	class:llvm::X86Subtarget
isTargetWin32	Target/X86/X86Subtarget.h	/^  bool isTargetWin32() const {$/;"	f	class:llvm::X86Subtarget
isTargetWin64	Target/X86/X86Subtarget.h	/^  bool isTargetWin64() const {$/;"	f	class:llvm::X86Subtarget
isTargetWindows	Target/X86/X86Subtarget.h	/^  bool isTargetWindows() const { return TargetTriple.getOS() == Triple::Win32; }$/;"	f	class:llvm::X86Subtarget
isTemplateTypeParameter	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isTemplateTypeParameter() const {$/;"	f	class:DIDescriptor
isTemplateValueParameter	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isTemplateValueParameter() const {$/;"	f	class:DIDescriptor
isTexture	Target/NVPTX/NVPTXUtilities.cpp	/^bool llvm::isTexture(const llvm::Value &val) {$/;"	f	class:llvm
isThroughBlock	CodeGen/SplitKit.h	/^  bool isThroughBlock(unsigned MBB) const { return ThroughBlocks.test(MBB); }$/;"	f	class:llvm::SplitAnalysis
isThumb	Target/ARM/ARMConstantIslandPass.cpp	/^    bool isThumb;$/;"	m	class:__anon310::ARMConstantIslands	file:
isThumb	Target/ARM/ARMMachineFunctionInfo.h	/^  bool isThumb;$/;"	m	class:llvm::ARMFunctionInfo
isThumb	Target/ARM/ARMSubtarget.h	/^  bool isThumb() const { return InThumbMode; }$/;"	f	class:llvm::ARMSubtarget
isThumb	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isThumb() const {$/;"	f	class:__anon259::ARMAsmParser	file:
isThumb	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  bool isThumb() const { return isThumbMode; }$/;"	f	class:__anon284::ARMAsmBackend
isThumb	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  bool isThumb() const {$/;"	f	class:__anon283::ARMMCCodeEmitter
isThumb1	Target/ARM/ARMConstantIslandPass.cpp	/^    bool isThumb1;$/;"	m	class:__anon310::ARMConstantIslands	file:
isThumb1Only	Target/ARM/ARMSubtarget.h	/^  bool isThumb1Only() const { return InThumbMode && !HasThumb2; }$/;"	f	class:llvm::ARMSubtarget
isThumb1OnlyFunction	Target/ARM/ARMMachineFunctionInfo.h	/^  bool isThumb1OnlyFunction() const { return isThumb && !hasThumb2; }$/;"	f	class:llvm::ARMFunctionInfo
isThumb2	Target/ARM/ARMConstantIslandPass.cpp	/^    bool isThumb2;$/;"	m	class:__anon310::ARMConstantIslands	file:
isThumb2	Target/ARM/ARMFastISel.cpp	/^  bool isThumb2;$/;"	m	class:__anon307::ARMFastISel	file:
isThumb2	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    bool isThumb2;$/;"	m	struct:__anon303::ARMLoadStoreOpt	file:
isThumb2	Target/ARM/ARMSubtarget.h	/^  bool isThumb2() const { return InThumbMode && HasThumb2; }$/;"	f	class:llvm::ARMSubtarget
isThumb2	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  bool isThumb2() const {$/;"	f	class:__anon283::ARMMCCodeEmitter
isThumb2Function	Target/ARM/ARMMachineFunctionInfo.h	/^  bool isThumb2Function() const { return isThumb && hasThumb2; }$/;"	f	class:llvm::ARMFunctionInfo
isThumbFunction	Target/ARM/ARMMachineFunctionInfo.h	/^  bool isThumbFunction() const { return isThumb; }$/;"	f	class:llvm::ARMFunctionInfo
isThumbImm16ShiftedVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline bool isThumbImm16ShiftedVal(unsigned V) {$/;"	f	namespace:llvm::ARM_AM
isThumbImmShiftedVal	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline bool isThumbImmShiftedVal(unsigned V) {$/;"	f	namespace:llvm::ARM_AM
isThumbMode	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  bool isThumbMode;  \/\/ Currently emitting Thumb code.$/;"	m	class:__anon284::ARMAsmBackend	file:
isThumbOne	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isThumbOne() const {$/;"	f	class:__anon259::ARMAsmParser	file:
isThumbTwo	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isThumbTwo() const {$/;"	f	class:__anon259::ARMAsmParser	file:
isToken	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isToken() const { return Kind == k_Token; }$/;"	f	class:__anon261::ARMOperand
isToken	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^  bool isToken() const { return Kind == Token; }$/;"	f	struct:__anon446::MBlazeOperand
isToken	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool isToken() const { return Kind == k_Token; }$/;"	f	class:__anon423::MipsOperand
isToken	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool isToken() const {return Kind == Token; }$/;"	f	struct:__anon336::X86Operand
isTop	CodeGen/MachineScheduler.cpp	/^    bool isTop() const {$/;"	f	struct:__anon126::ConvergingScheduler::SchedBoundary
isTop	Target/Hexagon/HexagonMachineScheduler.h	/^    bool isTop() const {$/;"	f	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
isTopClosed	CodeGen/RegisterPressure.cpp	/^bool RegPressureTracker::isTopClosed() const {$/;"	f	class:RegPressureTracker
isTriangle	CodeGen/EarlyIfConversion.cpp	/^  bool isTriangle() const { return TBB == Tail || FBB == Tail; }$/;"	f	class:__anon91::SSAIfConv
isTrivialLoopExitBlock	Transforms/Scalar/LoopUnswitch.cpp	/^static BasicBlock *isTrivialLoopExitBlock(Loop *L, BasicBlock *BB) {$/;"	f	file:
isTrivialLoopExitBlockHelper	Transforms/Scalar/LoopUnswitch.cpp	/^static bool isTrivialLoopExitBlockHelper(Loop *L, BasicBlock *BB,$/;"	f	file:
isTrivialRegion	Analysis/RegionInfo.cpp	/^bool RegionInfo::isTrivialRegion(BasicBlock *entry, BasicBlock *exit) const {$/;"	f	class:RegionInfo
isTrueWhenEqual	VMCore/Instructions.cpp	/^bool CmpInst::isTrueWhenEqual(unsigned short predicate) {$/;"	f	class:CmpInst
isTruncWithZeroHighBitsInput	Target/X86/X86ISelLowering.cpp	/^static bool isTruncWithZeroHighBitsInput(SDValue V, SelectionDAG &DAG) {$/;"	f	file:
isTruncateFree	Target/Hexagon/HexagonISelLowering.cpp	/^HexagonTargetLowering::isTruncateFree(Type *Ty1, Type *Ty2) const {$/;"	f	class:HexagonTargetLowering
isTruncateFree	Target/Hexagon/HexagonISelLowering.cpp	/^bool HexagonTargetLowering::isTruncateFree(EVT VT1, EVT VT2) const {$/;"	f	class:HexagonTargetLowering
isTruncateFree	Target/MSP430/MSP430ISelLowering.cpp	/^bool MSP430TargetLowering::isTruncateFree(EVT VT1, EVT VT2) const {$/;"	f	class:MSP430TargetLowering
isTruncateFree	Target/MSP430/MSP430ISelLowering.cpp	/^bool MSP430TargetLowering::isTruncateFree(Type *Ty1,$/;"	f	class:MSP430TargetLowering
isTruncateFree	Target/TargetTransformImpl.cpp	/^bool ScalarTargetTransformImpl::isTruncateFree(Type *Ty1, Type *Ty2) const {$/;"	f	class:ScalarTargetTransformImpl
isTruncateFree	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isTruncateFree(EVT VT1, EVT VT2) const {$/;"	f	class:X86TargetLowering
isTruncateFree	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isTruncateFree(Type *Ty1, Type *Ty2) const {$/;"	f	class:X86TargetLowering
isTruncateOf	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static bool isTruncateOf(SelectionDAG &DAG, SDValue N, SDValue &Op,$/;"	f	file:
isTwoAddrUse	CodeGen/TwoAddressInstructionPass.cpp	/^static bool isTwoAddrUse(MachineInstr &MI, unsigned Reg, unsigned &DstReg) {$/;"	f	file:
isType	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isType() const {$/;"	f	class:DIDescriptor
isTypeDesirableForOp	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isTypeDesirableForOp(unsigned Opc, EVT VT) const {$/;"	f	class:X86TargetLowering
isTypeLegal	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    bool isTypeLegal(const EVT &VT) {$/;"	f	class:__anon68::DAGCombiner
isTypeLegal	CodeGen/SelectionDAG/LegalizeTypes.h	/^  bool isTypeLegal(EVT VT) const {$/;"	f	class:llvm::DAGTypeLegalizer
isTypeLegal	Target/ARM/ARMFastISel.cpp	/^bool ARMFastISel::isTypeLegal(Type *Ty, MVT &VT) {$/;"	f	class:ARMFastISel
isTypeLegal	Target/TargetTransformImpl.cpp	/^bool ScalarTargetTransformImpl::isTypeLegal(Type *Ty) const {$/;"	f	class:ScalarTargetTransformImpl
isTypeLegal	Target/X86/X86FastISel.cpp	/^bool X86FastISel::isTypeLegal(Type *Ty, MVT &VT, bool AllowI1) {$/;"	f	class:X86FastISel
isTypeSigned	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^static bool isTypeSigned(DIType Ty, int *SizeInBits) {$/;"	f	file:
isTypeSupportedInIntrinsic	Target/NVPTX/NVPTXISelLowering.cpp	/^NVPTXTargetLowering::isTypeSupportedInIntrinsic(MVT VT) const {$/;"	f	class:NVPTXTargetLowering
isUNPCKHMask	Target/X86/X86ISelLowering.cpp	/^static bool isUNPCKHMask(ArrayRef<int> Mask, EVT VT,$/;"	f	file:
isUNPCKH_v_undef_Mask	Target/X86/X86ISelLowering.cpp	/^static bool isUNPCKH_v_undef_Mask(ArrayRef<int> Mask, EVT VT, bool HasAVX2) {$/;"	f	file:
isUNPCKLMask	Target/X86/X86ISelLowering.cpp	/^static bool isUNPCKLMask(ArrayRef<int> Mask, EVT VT,$/;"	f	file:
isUNPCKL_v_undef_Mask	Target/X86/X86ISelLowering.cpp	/^static bool isUNPCKL_v_undef_Mask(ArrayRef<int> Mask, EVT VT,$/;"	f	file:
isUnalignedMemAccessFast	Target/X86/X86Subtarget.h	/^  bool isUnalignedMemAccessFast() const { return IsUAMemFast; }$/;"	f	class:llvm::X86Subtarget
isUncondBranch	Target/CellSPU/SPUInstrInfo.cpp	/^  inline bool isUncondBranch(const MachineInstr *I) {$/;"	f	namespace:__anon416
isUncondBranchOpcode	Target/ARM/ARMBaseInstrInfo.h	/^bool isUncondBranchOpcode(int Opc) {$/;"	f	namespace:llvm
isUncondBranchOpcode	Target/MBlaze/MBlazeInstrInfo.h	/^  inline static bool isUncondBranchOpcode(int Opc) {$/;"	f	namespace:llvm::MBlaze
isUnconditionalBranch	Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp	/^  virtual bool isUnconditionalBranch(const MCInst &Inst) const {$/;"	f	class:__anon282::ARMMCInstrAnalysis
isUndefOrEqual	Target/X86/X86ISelLowering.cpp	/^static bool isUndefOrEqual(int Val, int CmpVal) {$/;"	f	file:
isUndefOrInRange	Target/X86/X86ISelLowering.cpp	/^static bool isUndefOrInRange(int Val, int Low, int Hi) {$/;"	f	file:
isUndefined	Analysis/LazyValueInfo.cpp	/^  bool isUndefined() const     { return Tag == undefined; }$/;"	f	class:__anon18::LVILatticeVal
isUndefined	Transforms/Scalar/SCCP.cpp	/^  bool isUndefined() const { return getLatticeValue() == undefined; }$/;"	f	class:__anon530::LatticeVal
isUnmovableInstruction	Transforms/Scalar/Reassociate.cpp	/^static bool isUnmovableInstruction(Instruction *I) {$/;"	f	file:
isUnordered	VMCore/Instructions.cpp	/^bool CmpInst::isUnordered(unsigned short predicate) {$/;"	f	class:CmpInst
isUnpredicatedTerminator	CodeGen/TargetInstrInfoImpl.cpp	/^TargetInstrInfoImpl::isUnpredicatedTerminator(const MachineInstr *MI) const {$/;"	f	class:TargetInstrInfoImpl
isUnpredicatedTerminator	Target/MSP430/MSP430InstrInfo.cpp	/^bool MSP430InstrInfo::isUnpredicatedTerminator(const MachineInstr *MI) const {$/;"	f	class:MSP430InstrInfo
isUnpredicatedTerminator	Target/X86/X86InstrInfo.cpp	/^bool X86InstrInfo::isUnpredicatedTerminator(const MachineInstr *MI) const {$/;"	f	class:X86InstrInfo
isUnsafe	Transforms/Scalar/ScalarReplAggregates.cpp	/^      bool isUnsafe : 1;$/;"	m	struct:__anon521::SROA::AllocaInfo	file:
isUnsafeMemoryObject	CodeGen/ScheduleDAGInstrs.cpp	/^static inline bool isUnsafeMemoryObject(MachineInstr *MI,$/;"	f	file:
isUnsigned	VMCore/Instructions.cpp	/^bool CmpInst::isUnsigned(unsigned short predicate) {$/;"	f	class:CmpInst
isUnsignedDIType	VMCore/DebugInfo.cpp	/^bool DIType::isUnsignedDIType() {$/;"	f	class:DIType
isUnspecifiedParameter	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isUnspecifiedParameter() const {$/;"	f	class:DIDescriptor
isUnswitched	Transforms/Scalar/LoopUnswitch.cpp	/^bool LUAnalysisCache::isUnswitched(const SwitchInst* SI, const Value* V) {$/;"	f	class:LUAnalysisCache
isUpdating	Target/ARM/ARMExpandPseudoInsts.cpp	/^    bool isUpdating;$/;"	m	struct:__anon312::NEONLdStTableEntry	file:
isUseFullyOutsideLoop	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool LSRFixup::isUseFullyOutsideLoop(const Loop *L) const {$/;"	f	class:LSRFixup
isUsedByLifetimeMarker	Transforms/Utils/InlineFunction.cpp	/^static bool isUsedByLifetimeMarker(Value *V) {$/;"	f	file:
isUsedByReturnOnly	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::isUsedByReturnOnly(SDNode *N, SDValue &Chain) const {$/;"	f	class:ARMTargetLowering
isUsedByReturnOnly	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isUsedByReturnOnly(SDNode *N, SDValue &Chain) const {$/;"	f	class:X86TargetLowering
isUsedInBasicBlock	VMCore/Value.cpp	/^bool Value::isUsedInBasicBlock(const BasicBlock *BB) const {$/;"	f	class:Value
isUsedOutsideOfBlock	VMCore/Instruction.cpp	/^bool Instruction::isUsedOutsideOfBlock(const BasicBlock *BB) const {$/;"	f	class:Instruction
isUsedOutsideOfDefiningBlock	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^static bool isUsedOutsideOfDefiningBlock(const Instruction *I) {$/;"	f	file:
isV9	Target/Sparc/SparcSubtarget.h	/^  bool isV9() const { return IsV9; }$/;"	f	class:llvm::SparcSubtarget
isVEXTMask	Target/ARM/ARMISelLowering.cpp	/^static bool isVEXTMask(ArrayRef<int> M, EVT VT,$/;"	f	file:
isVEXTRACTF128Index	Target/X86/X86ISelLowering.cpp	/^bool X86::isVEXTRACTF128Index(SDNode *N) {$/;"	f	class:X86
isVINSERTF128Index	Target/X86/X86ISelLowering.cpp	/^bool X86::isVINSERTF128Index(SDNode *N) {$/;"	f	class:X86
isVIS	Target/Sparc/SparcSubtarget.h	/^  bool isVIS() const { return IsVIS; }$/;"	f	class:llvm::SparcSubtarget
isVMRGHShuffleMask	Target/PowerPC/PPCISelLowering.cpp	/^bool PPC::isVMRGHShuffleMask(ShuffleVectorSDNode *N, unsigned UnitSize,$/;"	f	class:PPC
isVMRGLShuffleMask	Target/PowerPC/PPCISelLowering.cpp	/^bool PPC::isVMRGLShuffleMask(ShuffleVectorSDNode *N, unsigned UnitSize,$/;"	f	class:PPC
isVMerge	Target/PowerPC/PPCISelLowering.cpp	/^static bool isVMerge(ShuffleVectorSDNode *N, unsigned UnitSize,$/;"	f	file:
isVPERM2X128Mask	Target/X86/X86ISelLowering.cpp	/^static bool isVPERM2X128Mask(ArrayRef<int> Mask, EVT VT, bool HasAVX) {$/;"	f	file:
isVPERMILPMask	Target/X86/X86ISelLowering.cpp	/^static bool isVPERMILPMask(ArrayRef<int> Mask, EVT VT, bool HasAVX) {$/;"	f	file:
isVPKUHUMShuffleMask	Target/PowerPC/PPCISelLowering.cpp	/^bool PPC::isVPKUHUMShuffleMask(ShuffleVectorSDNode *N, bool isUnary) {$/;"	f	class:PPC
isVPKUWUMShuffleMask	Target/PowerPC/PPCISelLowering.cpp	/^bool PPC::isVPKUWUMShuffleMask(ShuffleVectorSDNode *N, bool isUnary) {$/;"	f	class:PPC
isVREVMask	Target/ARM/ARMISelLowering.cpp	/^static bool isVREVMask(ArrayRef<int> M, EVT VT, unsigned BlockSize) {$/;"	f	file:
isVSLDOIShuffleMask	Target/PowerPC/PPCISelLowering.cpp	/^int PPC::isVSLDOIShuffleMask(SDNode *N, bool isUnary) {$/;"	f	class:PPC
isVShiftLImm	Target/ARM/ARMISelLowering.cpp	/^static bool isVShiftLImm(SDValue Op, EVT VT, bool isLong, int64_t &Cnt) {$/;"	f	file:
isVShiftRImm	Target/ARM/ARMISelLowering.cpp	/^static bool isVShiftRImm(SDValue Op, EVT VT, bool isNarrow, bool isIntrinsic,$/;"	f	file:
isVTBLMask	Target/ARM/ARMISelLowering.cpp	/^static bool isVTBLMask(ArrayRef<int> M, EVT VT) {$/;"	f	file:
isVTRNMask	Target/ARM/ARMISelLowering.cpp	/^static bool isVTRNMask(ArrayRef<int> M, EVT VT, unsigned &WhichResult) {$/;"	f	file:
isVTRN_v_undef_Mask	Target/ARM/ARMISelLowering.cpp	/^static bool isVTRN_v_undef_Mask(ArrayRef<int> M, EVT VT, unsigned &WhichResult){$/;"	f	file:
isVUZPMask	Target/ARM/ARMISelLowering.cpp	/^static bool isVUZPMask(ArrayRef<int> M, EVT VT, unsigned &WhichResult) {$/;"	f	file:
isVUZP_v_undef_Mask	Target/ARM/ARMISelLowering.cpp	/^static bool isVUZP_v_undef_Mask(ArrayRef<int> M, EVT VT, unsigned &WhichResult){$/;"	f	file:
isVZIPMask	Target/ARM/ARMISelLowering.cpp	/^static bool isVZIPMask(ArrayRef<int> M, EVT VT, unsigned &WhichResult) {$/;"	f	file:
isVZIP_v_undef_Mask	Target/ARM/ARMISelLowering.cpp	/^static bool isVZIP_v_undef_Mask(ArrayRef<int> M, EVT VT, unsigned &WhichResult){$/;"	f	file:
isValid	DebugInfo/DWARFAbbreviationDeclaration.h	/^  bool isValid() const { return Code != 0 && Tag != 0; }$/;"	f	class:llvm::DWARFAbbreviationDeclaration
isValid	DebugInfo/DWARFDebugLine.h	/^    bool isValid() const {$/;"	f	struct:llvm::DWARFDebugLine::Sequence
isValid	Support/Regex.cpp	/^bool Regex::isValid(std::string &Error) {$/;"	f	class:Regex
isValid	Transforms/Scalar/LoopStrengthReduce.cpp	/^  bool isValid() {$/;"	f	class:__anon515::Cost
isValidAddress	Support/StreamableMemoryObject.cpp	/^bool StreamingMemoryObject::isValidAddress(uint64_t address) const {$/;"	f	class:llvm::StreamingMemoryObject
isValidArgumentType	VMCore/Type.cpp	/^bool FunctionType::isValidArgumentType(Type *ArgTy) {$/;"	f	class:FunctionType
isValidAutoIncImm	Target/Hexagon/HexagonInstrInfo.cpp	/^isValidAutoIncImm(const EVT VT, const int Offset) const {$/;"	f	class:HexagonInstrInfo
isValidDwarfFileNumber	MC/MCContext.cpp	/^bool MCContext::isValidDwarfFileNumber(unsigned FileNumber) {$/;"	f	class:MCContext
isValidElementType	VMCore/Type.cpp	/^bool ArrayType::isValidElementType(Type *ElemTy) {$/;"	f	class:ArrayType
isValidElementType	VMCore/Type.cpp	/^bool PointerType::isValidElementType(Type *ElemTy) {$/;"	f	class:PointerType
isValidElementType	VMCore/Type.cpp	/^bool StructType::isValidElementType(Type *ElemTy) {$/;"	f	class:StructType
isValidElementType	VMCore/Type.cpp	/^bool VectorType::isValidElementType(Type *ElemTy) {$/;"	f	class:VectorType
isValidEncoding	MC/MCParser/AsmParser.cpp	/^static bool isValidEncoding(int64_t Encoding) {$/;"	f	file:
isValidIndexedLoad	Target/MSP430/MSP430ISelDAGToDAG.cpp	/^static bool isValidIndexedLoad(const LoadSDNode *LD) {$/;"	f	file:
isValidName	VMCore/LLVMContext.cpp	/^static bool isValidName(StringRef MDName) {$/;"	f	file:
isValidOffset	Target/Hexagon/HexagonInstrInfo.cpp	/^isValidOffset(const int Opcode, const int Offset) const {$/;"	f	class:HexagonInstrInfo
isValidOperands	VMCore/Instructions.cpp	/^bool ExtractElementInst::isValidOperands(const Value *Val, const Value *Index) {$/;"	f	class:ExtractElementInst
isValidOperands	VMCore/Instructions.cpp	/^bool InsertElementInst::isValidOperands(const Value *Vec, const Value *Elt, $/;"	f	class:InsertElementInst
isValidOperands	VMCore/Instructions.cpp	/^bool ShuffleVectorInst::isValidOperands(const Value *V1, const Value *V2,$/;"	f	class:ShuffleVectorInst
isValidRange	DebugInfo/DWARFDebugAranges.h	/^    bool isValidRange() const { return Length > 0; }$/;"	f	struct:llvm::DWARFDebugAranges::Range
isValidReturnType	VMCore/Type.cpp	/^bool FunctionType::isValidReturnType(Type *RetTy) {$/;"	f	class:FunctionType
isValidRewrite	Transforms/Scalar/IndVarSimplify.cpp	/^bool IndVarSimplify::isValidRewrite(Value *FromVal, Value *ToVal) {$/;"	f	class:IndVarSimplify
isValueEqualityComparison	Transforms/Utils/SimplifyCFG.cpp	/^Value *SimplifyCFGOpt::isValueEqualityComparison(TerminatorInst *TI) {$/;"	f	class:SimplifyCFGOpt
isValueValidForType	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool ConstantFPSDNode::isValueValidForType(EVT VT,$/;"	f	class:ConstantFPSDNode
isValueValidForType	VMCore/Constants.cpp	/^bool ConstantFP::isValueValidForType(Type *Ty, const APFloat& Val) {$/;"	f	class:ConstantFP
isValueValidForType	VMCore/Constants.cpp	/^bool ConstantInt::isValueValidForType(Type *Ty, int64_t Val) {$/;"	f	class:ConstantInt
isValueValidForType	VMCore/Constants.cpp	/^bool ConstantInt::isValueValidForType(Type *Ty, uint64_t Val) {$/;"	f	class:ConstantInt
isVarArg	Target/Hexagon/HexagonCallingConvLower.h	/^  bool isVarArg() const { return IsVarArg; }$/;"	f	class:llvm::Hexagon_CCState
isVarArg	VMCore/Function.cpp	/^bool Function::isVarArg() const {$/;"	f	class:Function
isVarArg	VMCore/LLVMContextImpl.h	/^    bool isVarArg;$/;"	m	struct:llvm::FunctionTypeKeyInfo::KeyTy
isVariable	VMCore/DebugInfo.cpp	/^bool DIDescriptor::isVariable() const {$/;"	f	class:DIDescriptor
isVecListDPair	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListDPair() const {$/;"	f	class:__anon261::ARMOperand
isVecListDPairAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListDPairAllLanes() const {$/;"	f	class:__anon261::ARMOperand
isVecListDPairSpaced	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListDPairSpaced() const {$/;"	f	class:__anon261::ARMOperand
isVecListDPairSpacedAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListDPairSpacedAllLanes() const {$/;"	f	class:__anon261::ARMOperand
isVecListFourD	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListFourD() const {$/;"	f	class:__anon261::ARMOperand
isVecListFourDAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListFourDAllLanes() const {$/;"	f	class:__anon261::ARMOperand
isVecListFourDByteIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListFourDByteIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListFourDHWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListFourDHWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListFourDWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListFourDWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListFourQ	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListFourQ() const {$/;"	f	class:__anon261::ARMOperand
isVecListFourQAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListFourQAllLanes() const {$/;"	f	class:__anon261::ARMOperand
isVecListFourQHWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListFourQHWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListFourQWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListFourQWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListOneD	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListOneD() const {$/;"	f	class:__anon261::ARMOperand
isVecListOneDAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListOneDAllLanes() const {$/;"	f	class:__anon261::ARMOperand
isVecListOneDByteIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListOneDByteIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListOneDHWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListOneDHWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListOneDWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListOneDWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListThreeD	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListThreeD() const {$/;"	f	class:__anon261::ARMOperand
isVecListThreeDAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListThreeDAllLanes() const {$/;"	f	class:__anon261::ARMOperand
isVecListThreeDByteIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListThreeDByteIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListThreeDHWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListThreeDHWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListThreeDWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListThreeDWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListThreeQ	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListThreeQ() const {$/;"	f	class:__anon261::ARMOperand
isVecListThreeQAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListThreeQAllLanes() const {$/;"	f	class:__anon261::ARMOperand
isVecListThreeQHWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListThreeQHWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListThreeQWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListThreeQWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListTwoDByteIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListTwoDByteIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListTwoDHWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListTwoDHWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListTwoDWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListTwoDWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListTwoQHWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListTwoQHWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVecListTwoQWordIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVecListTwoQWordIndexed() const {$/;"	f	class:__anon261::ARMOperand
isVectorClearMaskLegal	Target/X86/X86ISelLowering.cpp	/^X86TargetLowering::isVectorClearMaskLegal(const SmallVectorImpl<int> &Mask,$/;"	f	class:X86TargetLowering
isVectorIndex16	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVectorIndex16() const {$/;"	f	class:__anon261::ARMOperand
isVectorIndex32	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVectorIndex32() const {$/;"	f	class:__anon261::ARMOperand
isVectorIndex8	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  bool isVectorIndex8() const {$/;"	f	class:__anon261::ARMOperand
isVectorInstr	Target/NVPTX/VectorElementize.cpp	/^bool VectorElementize::isVectorInstr(MachineInstr *mi) {$/;"	f	class:VectorElementize
isVectorPromotionViable	Transforms/Scalar/SROA.cpp	/^static bool isVectorPromotionViable(const DataLayout &TD,$/;"	f	file:
isVectorRegister	Target/NVPTX/VectorElementize.cpp	/^bool VectorElementize::isVectorRegister(unsigned reg) {$/;"	f	class:VectorElementize
isVectorShift	Target/X86/X86ISelLowering.cpp	/^static bool isVectorShift(ShuffleVectorSDNode *SVOp, SelectionDAG &DAG,$/;"	f	file:
isVectorShiftLeft	Target/X86/X86ISelLowering.cpp	/^static bool isVectorShiftLeft(ShuffleVectorSDNode *SVOp, SelectionDAG &DAG,$/;"	f	file:
isVectorShiftRight	Target/X86/X86ISelLowering.cpp	/^static bool isVectorShiftRight(ShuffleVectorSDNode *SVOp, SelectionDAG &DAG,$/;"	f	file:
isVectorizableIntrinsic	Transforms/Vectorize/BBVectorize.cpp	/^    bool isVectorizableIntrinsic(CallInst* I) {$/;"	f	struct:__anon604::BBVectorize
isVerboseAsm	MC/MCAsmStreamer.cpp	/^  virtual bool isVerboseAsm() const { return IsVerboseAsm; }$/;"	f	class:__anon214::MCAsmStreamer
isVirtualSection	MC/MCSectionCOFF.cpp	/^bool MCSectionCOFF::isVirtualSection() const {$/;"	f	class:MCSectionCOFF
isVirtualSection	MC/MCSectionELF.cpp	/^bool MCSectionELF::isVirtualSection() const {$/;"	f	class:MCSectionELF
isVirtualSection	MC/MCSectionMachO.cpp	/^bool MCSectionMachO::isVirtualSection() const {$/;"	f	class:MCSectionMachO
isVirtualSection	Target/NVPTX/NVPTXSection.h	/^  virtual bool isVirtualSection() const { return false; }$/;"	f	class:llvm::NVPTXSection
isVtableAccess	Transforms/Instrumentation/ThreadSanitizer.cpp	/^static bool isVtableAccess(Instruction *I) {$/;"	f	file:
isWaterInRange	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::isWaterInRange(unsigned UserOffset,$/;"	f	class:ARMConstantIslands
isWorthBreakingCriticalEdge	CodeGen/MachineSink.cpp	/^bool MachineSinking::isWorthBreakingCriticalEdge(MachineInstr *MI,$/;"	f	class:MachineSinking
isWrappedSet	Support/ConstantRange.cpp	/^bool ConstantRange::isWrappedSet() const {$/;"	f	class:ConstantRange
isX86LogicalCmp	Target/X86/X86ISelLowering.cpp	/^static bool isX86LogicalCmp(SDValue Op) {$/;"	f	file:
isX86_64ExtendedReg	Target/X86/MCTargetDesc/X86BaseInfo.h	/^  inline bool isX86_64ExtendedReg(unsigned RegNo) {$/;"	f	namespace:llvm::X86II
isX86_64ExtendedReg	Target/X86/X86InstrInfo.h	/^  static bool isX86_64ExtendedReg(const MachineOperand &MO) {$/;"	f	class:llvm::X86InstrInfo
isX86_64NonExtLowByteReg	Target/X86/MCTargetDesc/X86BaseInfo.h	/^  inline bool isX86_64NonExtLowByteReg(unsigned reg) {$/;"	f	namespace:llvm::X86II
isXor1OfSetCC	Target/X86/X86ISelLowering.cpp	/^static bool isXor1OfSetCC(SDValue Op) {$/;"	f	file:
isYmmReg	Target/X86/X86VZeroUpper.cpp	/^static bool isYmmReg(unsigned Reg) {$/;"	f	file:
isZExtFree	Target/MSP430/MSP430ISelLowering.cpp	/^bool MSP430TargetLowering::isZExtFree(EVT VT1, EVT VT2) const {$/;"	f	class:MSP430TargetLowering
isZExtFree	Target/MSP430/MSP430ISelLowering.cpp	/^bool MSP430TargetLowering::isZExtFree(Type *Ty1, Type *Ty2) const {$/;"	f	class:MSP430TargetLowering
isZExtFree	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isZExtFree(EVT VT1, EVT VT2) const {$/;"	f	class:X86TargetLowering
isZExtFree	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::isZExtFree(Type *Ty1, Type *Ty2) const {$/;"	f	class:X86TargetLowering
isZIVPair	Analysis/LoopDependenceAnalysis.cpp	/^bool LoopDependenceAnalysis::isZIVPair(const SCEV *A, const SCEV *B) const {$/;"	f	class:LoopDependenceAnalysis
isZero	Analysis/Lint.cpp	/^static bool isZero(Value *V, DataLayout *TD) {$/;"	f	file:
isZero	Analysis/ScalarEvolution.cpp	/^bool SCEV::isZero() const {$/;"	f	class:SCEV
isZero	Target/X86/X86ISelLowering.cpp	/^static bool isZero(SDValue V) {$/;"	f	file:
isZeroExtended	Target/ARM/ARMISelLowering.cpp	/^static bool isZeroExtended(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
isZeroImm	Target/MBlaze/MBlazeInstrInfo.cpp	/^static bool isZeroImm(const MachineOperand &op) {$/;"	f	file:
isZeroImm	Target/Mips/MipsInstrInfo.cpp	/^bool MipsInstrInfo::isZeroImm(const MachineOperand &op) const {$/;"	f	class:MipsInstrInfo
isZeroImm	Target/XCore/XCoreInstrInfo.cpp	/^static bool isZeroImm(const MachineOperand &op) {$/;"	f	file:
isZeroLengthArray	Target/XCore/XCoreISelLowering.cpp	/^static inline bool isZeroLengthArray(Type *Ty) {$/;"	f	file:
isZeroNode	Target/X86/X86ISelLowering.cpp	/^bool X86::isZeroNode(SDValue Elt) {$/;"	f	class:X86
isZeroOrAllOnes	Target/ARM/ARMISelLowering.cpp	/^static inline bool isZeroOrAllOnes(SDValue N, bool AllOnes) {$/;"	f	file:
isZeroShuffle	Target/X86/X86ISelLowering.cpp	/^static bool isZeroShuffle(ShuffleVectorSDNode *N) {$/;"	f	file:
is_absolute	Support/PathV2.cpp	/^bool is_absolute(const Twine &path) {$/;"	f	namespace:llvm::sys::path
is_align_stack	VMCore/ConstantsContext.h	/^  bool is_align_stack;$/;"	m	struct:llvm::InlineAsmKeyType
is_directory	Support/PathV2.cpp	/^bool is_directory(file_status status) {$/;"	f	namespace:llvm::sys::fs
is_directory	Support/PathV2.cpp	/^error_code is_directory(const Twine &path, bool &result) {$/;"	f	namespace:llvm::sys::fs
is_displayed	Support/raw_ostream.cpp	/^bool raw_fd_ostream::is_displayed() const {$/;"	f	class:raw_fd_ostream
is_inline	Target/CppBackend/CPPBackend.cpp	/^    bool is_inline;$/;"	m	class:__anon412::CppWriter	file:
is_ns_hex_digit	Support/YAMLParser.cpp	/^static bool is_ns_hex_digit(const char C) {$/;"	f	file:
is_ns_word_char	Support/YAMLParser.cpp	/^static bool is_ns_word_char(const char C) {$/;"	f	file:
is_other	Support/PathV2.cpp	/^bool is_other(file_status status) {$/;"	f	namespace:llvm::sys::fs
is_regular_file	Support/PathV2.cpp	/^bool is_regular_file(file_status status) {$/;"	f	namespace:llvm::sys::fs
is_regular_file	Support/PathV2.cpp	/^error_code is_regular_file(const Twine &path, bool &result) {$/;"	f	namespace:llvm::sys::fs
is_relative	Support/PathV2.cpp	/^bool is_relative(const Twine &path) {$/;"	f	namespace:llvm::sys::path
is_separator	Support/PathV2.cpp	/^bool is_separator(char value) {$/;"	f	namespace:llvm::sys::path
is_so_imm	Target/ARM/ARMISelDAGToDAG.cpp	/^  inline bool is_so_imm(unsigned Imm) const {$/;"	f	class:__anon302::ARMDAGToDAGISel
is_so_imm_not	Target/ARM/ARMISelDAGToDAG.cpp	/^  inline bool is_so_imm_not(unsigned Imm) const {$/;"	f	class:__anon302::ARMDAGToDAGISel
is_symlink	Support/PathV2.cpp	/^bool is_symlink(file_status status) {$/;"	f	namespace:llvm::sys::fs
is_symlink	Support/PathV2.cpp	/^error_code is_symlink(const Twine &path, bool &result) {$/;"	f	namespace:llvm::sys::fs
is_t2_so_imm	Target/ARM/ARMISelDAGToDAG.cpp	/^  inline bool is_t2_so_imm(unsigned Imm) const {$/;"	f	class:__anon302::ARMDAGToDAGISel
is_t2_so_imm_not	Target/ARM/ARMISelDAGToDAG.cpp	/^  inline bool is_t2_so_imm_not(unsigned Imm) const {$/;"	f	class:__anon302::ARMDAGToDAGISel
isi32Load	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static bool isi32Load(unsigned Opc) {$/;"	f	file:
isi32Store	Target/ARM/ARMLoadStoreOptimizer.cpp	/^static bool isi32Store(unsigned Opc) {$/;"	f	file:
isinsets	Support/regcomp.c	/^isinsets(struct re_guts *g, int c)$/;"	f	file:
isolatePHI	CodeGen/StrongPHIElimination.cpp	/^void StrongPHIElimination::isolatePHI(MachineInstr *PHI) {$/;"	f	class:StrongPHIElimination
isolateReg	CodeGen/StrongPHIElimination.cpp	/^void StrongPHIElimination::isolateReg(unsigned Reg) {$/;"	f	class:StrongPHIElimination
iterate	CodeGen/SpillPlacement.cpp	/^void SpillPlacement::iterate() {$/;"	f	class:SpillPlacement
iterateChainSucc	CodeGen/ScheduleDAGInstrs.cpp	/^iterateChainSucc(AliasAnalysis *AA, const MachineFrameInfo *MFI,$/;"	f	file:
iterateOnFunction	Transforms/Scalar/GVN.cpp	/^bool GVN::iterateOnFunction(Function &F) {$/;"	f	class:GVN
iterateOnFunction	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemCpyOpt::iterateOnFunction(Function &F) {$/;"	f	class:MemCpyOpt
iterativelySimplifyCFG	Transforms/Scalar/SimplifyCFGPass.cpp	/^static bool iterativelySimplifyCFG(Function &F, const DataLayout *TD) {$/;"	f	file:
iterator	CodeGen/MachineBlockPlacement.cpp	/^  typedef SmallVectorImpl<MachineBasicBlock *>::iterator iterator;$/;"	t	class:__anon106::BlockChain	file:
iterator	Transforms/IPO/FunctionAttrs.cpp	/^    typedef SmallVectorImpl<ArgumentGraphNode*>::iterator iterator;$/;"	t	class:__anon579::ArgumentGraph	file:
iterator	Transforms/Scalar/LoopStrengthReduce.cpp	/^  typedef SmallVectorImpl<const SCEV *>::iterator iterator;$/;"	t	class:__anon513::RegUseTracker	file:
iterator	Transforms/Scalar/ObjCARC.cpp	/^    typedef typename VectorTy::iterator iterator;$/;"	t	class:__anon498::MapVector	file:
iterator	Transforms/Scalar/SROA.cpp	/^  typedef SmallVectorImpl<Partition>::iterator iterator;$/;"	t	class:__anon557::AllocaPartitioning	file:
jitTheFunction	ExecutionEngine/JIT/JIT.cpp	/^void JIT::jitTheFunction(Function *F, const MutexGuard &locked) {$/;"	f	class:JIT
jit_actions_t	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^  } jit_actions_t;$/;"	t	typeref:enum:__anon177	file:
jit_atexit	ExecutionEngine/JIT/JITMemoryManager.cpp	/^static int jit_atexit(void (*Fn)()) {$/;"	f	file:
jit_code_entry	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^  struct jit_code_entry {$/;"	s	file:
jit_descriptor	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^  struct jit_descriptor {$/;"	s	file:
jit_exit	ExecutionEngine/JIT/JITMemoryManager.cpp	/^static void jit_exit(int Status) {$/;"	f	file:
jit_noop	ExecutionEngine/JIT/JITMemoryManager.cpp	/^static int jit_noop() {$/;"	f	file:
jitprofiling	ExecutionEngine/EventListenerCommon.h	/^namespace jitprofiling {$/;"	n	namespace:llvm
jitstate	ExecutionEngine/JIT/JIT.h	/^  JITState *jitstate;$/;"	m	class:llvm::JIT
join	CodeGen/LiveInterval.cpp	/^void LiveInterval::join(LiveInterval &Other,$/;"	f	class:LiveInterval
join	Support/IntEqClasses.cpp	/^void IntEqClasses::join(unsigned a, unsigned b) {$/;"	f	class:IntEqClasses
joinAllIntervals	CodeGen/RegisterCoalescer.cpp	/^void RegisterCoalescer::joinAllIntervals() {$/;"	f	class:RegisterCoalescer
joinCopy	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::joinCopy(MachineInstr *CopyMI, bool &Again) {$/;"	f	class:RegisterCoalescer
joinIntervals	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::joinIntervals(CoalescerPair &CP) {$/;"	f	class:RegisterCoalescer
joinReservedPhysReg	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::joinReservedPhysReg(CoalescerPair &CP) {$/;"	f	class:RegisterCoalescer
joinVirtRegs	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::joinVirtRegs(CoalescerPair &CP) {$/;"	f	class:RegisterCoalescer
kAsanCtorAndCtorPriority	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const int   kAsanCtorAndCtorPriority = 1;$/;"	v	file:
kAsanHandleNoReturnName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanHandleNoReturnName = "__asan_handle_no_return";$/;"	v	file:
kAsanInitName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanInitName = "__asan_init";$/;"	v	file:
kAsanMappingOffsetName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanMappingOffsetName = "__asan_mapping_offset";$/;"	v	file:
kAsanMappingScaleName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanMappingScaleName = "__asan_mapping_scale";$/;"	v	file:
kAsanModuleCtorName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanModuleCtorName = "asan.module_ctor";$/;"	v	file:
kAsanModuleDtorName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanModuleDtorName = "asan.module_dtor";$/;"	v	file:
kAsanPoisonGlobalsName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanPoisonGlobalsName = "__asan_before_dynamic_init";$/;"	v	file:
kAsanRegisterGlobalsName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanRegisterGlobalsName = "__asan_register_globals";$/;"	v	file:
kAsanReportErrorTemplate	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanReportErrorTemplate = "__asan_report_";$/;"	v	file:
kAsanStackFreeName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanStackFreeName = "__asan_stack_free";$/;"	v	file:
kAsanStackLeftRedzoneMagic	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const int kAsanStackLeftRedzoneMagic = 0xf1;$/;"	v	file:
kAsanStackMallocName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanStackMallocName = "__asan_stack_malloc";$/;"	v	file:
kAsanStackMidRedzoneMagic	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const int kAsanStackMidRedzoneMagic = 0xf2;$/;"	v	file:
kAsanStackPartialRedzoneMagic	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const int kAsanStackPartialRedzoneMagic = 0xf4;$/;"	v	file:
kAsanStackRightRedzoneMagic	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const int kAsanStackRightRedzoneMagic = 0xf3;$/;"	v	file:
kAsanUnpoisonGlobalsName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanUnpoisonGlobalsName = "__asan_after_dynamic_init";$/;"	v	file:
kAsanUnregisterGlobalsName	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const char *kAsanUnregisterGlobalsName = "__asan_unregister_globals";$/;"	v	file:
kCurrentStackFrameMagic	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const uintptr_t kCurrentStackFrameMagic = 0x41B58AB3;$/;"	v	file:
kDefaultShadowOffset32	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const uint64_t kDefaultShadowOffset32 = 1ULL << 29;$/;"	v	file:
kDefaultShadowOffset64	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const uint64_t kDefaultShadowOffset64 = 1ULL << 44;$/;"	v	file:
kDefaultShadowOffsetAndroid	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const uint64_t kDefaultShadowOffsetAndroid = 0;$/;"	v	file:
kDefaultShadowScale	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const uint64_t kDefaultShadowScale = 3;$/;"	v	file:
kEDAssemblySyntaxARMUAL	MC/MCDisassembler/EDDisassembler.h	/^    kEDAssemblySyntaxARMUAL    = 2$/;"	e	enum:llvm::EDDisassembler::__anon206
kEDAssemblySyntaxX86ATT	MC/MCDisassembler/EDDisassembler.h	/^    kEDAssemblySyntaxX86ATT    = 1,$/;"	e	enum:llvm::EDDisassembler::__anon206
kEDAssemblySyntaxX86Intel	MC/MCDisassembler/EDDisassembler.h	/^    kEDAssemblySyntaxX86Intel  = 0,$/;"	e	enum:llvm::EDDisassembler::__anon206
kInstructionTypeBranch	MC/MCDisassembler/EDInfo.h	/^  kInstructionTypeBranch,$/;"	e	enum:InstructionTypes
kInstructionTypeCall	MC/MCDisassembler/EDInfo.h	/^  kInstructionTypeCall,$/;"	e	enum:InstructionTypes
kInstructionTypeMove	MC/MCDisassembler/EDInfo.h	/^  kInstructionTypeMove,$/;"	e	enum:InstructionTypes
kInstructionTypeNone	MC/MCDisassembler/EDInfo.h	/^  kInstructionTypeNone,$/;"	e	enum:InstructionTypes
kInstructionTypePop	MC/MCDisassembler/EDInfo.h	/^  kInstructionTypePop,$/;"	e	enum:InstructionTypes
kInstructionTypePush	MC/MCDisassembler/EDInfo.h	/^  kInstructionTypePush,$/;"	e	enum:InstructionTypes
kInstructionTypeReturn	MC/MCDisassembler/EDInfo.h	/^  kInstructionTypeReturn$/;"	e	enum:InstructionTypes
kMaxStackMallocSize	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const size_t kMaxStackMallocSize = 1 << 16;  \/\/ 64K$/;"	v	file:
kNumberOfAccessSizes	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const size_t kNumberOfAccessSizes = 5;$/;"	v	file:
kNumberOfAccessSizes	Transforms/Instrumentation/ThreadSanitizer.cpp	/^  static const size_t kNumberOfAccessSizes = 5;$/;"	m	struct:__anon486::ThreadSanitizer	file:
kOperandFlagSource	MC/MCDisassembler/EDInfo.h	/^  kOperandFlagSource = 0x1,$/;"	e	enum:OperandFlags
kOperandFlagTarget	MC/MCDisassembler/EDInfo.h	/^  kOperandFlagTarget = 0x2$/;"	e	enum:OperandFlags
kOperandTypeARMAddrMode2	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrMode2,$/;"	e	enum:OperandTypes
kOperandTypeARMAddrMode2Offset	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrMode2Offset,$/;"	e	enum:OperandTypes
kOperandTypeARMAddrMode3	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrMode3,$/;"	e	enum:OperandTypes
kOperandTypeARMAddrMode3Offset	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrMode3Offset,$/;"	e	enum:OperandTypes
kOperandTypeARMAddrMode4	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrMode4,$/;"	e	enum:OperandTypes
kOperandTypeARMAddrMode5	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrMode5,$/;"	e	enum:OperandTypes
kOperandTypeARMAddrMode6	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrMode6,$/;"	e	enum:OperandTypes
kOperandTypeARMAddrMode6Offset	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrMode6Offset,$/;"	e	enum:OperandTypes
kOperandTypeARMAddrMode7	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrMode7,$/;"	e	enum:OperandTypes
kOperandTypeARMAddrModePC	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMAddrModePC,$/;"	e	enum:OperandTypes
kOperandTypeARMBranchTarget	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMBranchTarget,$/;"	e	enum:OperandTypes
kOperandTypeARMDPRRegisterList	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMDPRRegisterList,$/;"	e	enum:OperandTypes
kOperandTypeARMPredicate	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMPredicate,$/;"	e	enum:OperandTypes
kOperandTypeARMRegisterList	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMRegisterList,$/;"	e	enum:OperandTypes
kOperandTypeARMRotImm	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMRotImm,$/;"	e	enum:OperandTypes
kOperandTypeARMSPRRegisterList	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMSPRRegisterList,$/;"	e	enum:OperandTypes
kOperandTypeARMSoImm	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMSoImm,$/;"	e	enum:OperandTypes
kOperandTypeARMSoImm2Part	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMSoImm2Part,$/;"	e	enum:OperandTypes
kOperandTypeARMSoReg	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMSoReg,$/;"	e	enum:OperandTypes
kOperandTypeARMTBAddrMode	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeARMTBAddrMode,$/;"	e	enum:OperandTypes
kOperandTypeAddrModeImm12	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeAddrModeImm12,$/;"	e	enum:OperandTypes
kOperandTypeImmediate	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeImmediate,$/;"	e	enum:OperandTypes
kOperandTypeLdStSOReg	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeLdStSOReg,$/;"	e	enum:OperandTypes
kOperandTypeNone	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeNone,$/;"	e	enum:OperandTypes
kOperandTypeRegister	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeRegister,$/;"	e	enum:OperandTypes
kOperandTypeThumb2AddrModeImm12	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumb2AddrModeImm12,$/;"	e	enum:OperandTypes
kOperandTypeThumb2AddrModeImm8	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumb2AddrModeImm8,$/;"	e	enum:OperandTypes
kOperandTypeThumb2AddrModeImm8Offset	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumb2AddrModeImm8Offset,$/;"	e	enum:OperandTypes
kOperandTypeThumb2AddrModeImm8s4	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumb2AddrModeImm8s4,$/;"	e	enum:OperandTypes
kOperandTypeThumb2AddrModeImm8s4Offset	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumb2AddrModeImm8s4Offset$/;"	e	enum:OperandTypes
kOperandTypeThumb2AddrModeReg	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumb2AddrModeReg,$/;"	e	enum:OperandTypes
kOperandTypeThumb2AddrModeSoReg	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumb2AddrModeSoReg,$/;"	e	enum:OperandTypes
kOperandTypeThumb2SoImm	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumb2SoImm,$/;"	e	enum:OperandTypes
kOperandTypeThumb2SoReg	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumb2SoReg,$/;"	e	enum:OperandTypes
kOperandTypeThumbAddrModeImmS1	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbAddrModeImmS1,$/;"	e	enum:OperandTypes
kOperandTypeThumbAddrModeImmS2	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbAddrModeImmS2,$/;"	e	enum:OperandTypes
kOperandTypeThumbAddrModeImmS4	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbAddrModeImmS4,$/;"	e	enum:OperandTypes
kOperandTypeThumbAddrModePC	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbAddrModePC,$/;"	e	enum:OperandTypes
kOperandTypeThumbAddrModeRR	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbAddrModeRR,$/;"	e	enum:OperandTypes
kOperandTypeThumbAddrModeRegS1	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbAddrModeRegS1,$/;"	e	enum:OperandTypes
kOperandTypeThumbAddrModeRegS2	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbAddrModeRegS2,$/;"	e	enum:OperandTypes
kOperandTypeThumbAddrModeRegS4	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbAddrModeRegS4,$/;"	e	enum:OperandTypes
kOperandTypeThumbAddrModeSP	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbAddrModeSP,$/;"	e	enum:OperandTypes
kOperandTypeThumbITMask	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeThumbITMask,$/;"	e	enum:OperandTypes
kOperandTypeX86EffectiveAddress	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeX86EffectiveAddress,$/;"	e	enum:OperandTypes
kOperandTypeX86Memory	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeX86Memory,$/;"	e	enum:OperandTypes
kOperandTypeX86PCRelative	MC/MCDisassembler/EDInfo.h	/^  kOperandTypeX86PCRelative,$/;"	e	enum:OperandTypes
kPHIIsolatedFlag	CodeGen/StrongPHIElimination.cpp	/^        kPHIIsolatedFlag = 2$/;"	e	enum:__anon154::StrongPHIElimination::Node::Flags	file:
kRegisterIsolatedFlag	CodeGen/StrongPHIElimination.cpp	/^        kRegisterIsolatedFlag = 1,$/;"	e	enum:__anon154::StrongPHIElimination::Node::Flags	file:
kRetiredStackFrameMagic	Transforms/Instrumentation/AddressSanitizer.cpp	/^static const uintptr_t kRetiredStackFrameMagic = 0x45E0360E;$/;"	v	file:
kSplitStackAvailable	Target/X86/X86FrameLowering.cpp	/^static const uint64_t kSplitStackAvailable = 256;$/;"	v	file:
kTokenLiteral	MC/MCDisassembler/EDToken.h	/^    kTokenLiteral,$/;"	e	enum:llvm::EDToken::tokenType
kTokenOpcode	MC/MCDisassembler/EDToken.h	/^    kTokenOpcode,$/;"	e	enum:llvm::EDToken::tokenType
kTokenPunctuation	MC/MCDisassembler/EDToken.h	/^    kTokenPunctuation$/;"	e	enum:llvm::EDToken::tokenType
kTokenRegister	MC/MCDisassembler/EDToken.h	/^    kTokenRegister,$/;"	e	enum:llvm::EDToken::tokenType
kTokenWhitespace	MC/MCDisassembler/EDToken.h	/^    kTokenWhitespace,$/;"	e	enum:llvm::EDToken::tokenType
k_BitfieldDescriptor	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_BitfieldDescriptor,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_CCOut	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_CCOut,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_CondCode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_CondCode,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_CondCode	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    k_CondCode,$/;"	e	enum:__anon423::MipsOperand::KindTy	file:
k_CoprocNum	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_CoprocNum,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_CoprocNum	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    k_CoprocNum,$/;"	e	enum:__anon423::MipsOperand::KindTy	file:
k_CoprocOption	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_CoprocOption,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_CoprocReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_CoprocReg,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_DPRRegisterList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_DPRRegisterList,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_ITCondMask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_ITCondMask,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_Immediate	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_Immediate,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_Immediate	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    k_Immediate,$/;"	e	enum:__anon423::MipsOperand::KindTy	file:
k_MSRMask	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_MSRMask,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_MemBarrierOpt	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_MemBarrierOpt,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_Memory	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_Memory,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_Memory	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    k_Memory,$/;"	e	enum:__anon423::MipsOperand::KindTy	file:
k_PostIndexRegister	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_PostIndexRegister,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_PostIndexRegister	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    k_PostIndexRegister,$/;"	e	enum:__anon423::MipsOperand::KindTy	file:
k_ProcIFlags	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_ProcIFlags,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_Register	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_Register,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_Register	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    k_Register,$/;"	e	enum:__anon423::MipsOperand::KindTy	file:
k_RegisterList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_RegisterList,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_RotateImmediate	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_RotateImmediate,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_SPRRegisterList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_SPRRegisterList,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_ShiftedImmediate	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_ShiftedImmediate,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_ShiftedRegister	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_ShiftedRegister,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_ShifterImmediate	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_ShifterImmediate,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_Token	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_Token$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_Token	Target/Mips/AsmParser/MipsAsmParser.cpp	/^    k_Token$/;"	e	enum:__anon423::MipsOperand::KindTy	file:
k_VectorIndex	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_VectorIndex,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_VectorList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_VectorList,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_VectorListAllLanes	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_VectorListAllLanes,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
k_VectorListIndexed	Target/ARM/AsmParser/ARMAsmParser.cpp	/^    k_VectorListIndexed,$/;"	e	enum:__anon261::ARMOperand::KindTy	file:
key_val_pair_t	Target/NVPTX/NVPTXUtilities.cpp	/^typedef std::map<std::string, std::vector<unsigned> > key_val_pair_t;$/;"	t	file:
kill	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::kill(int rx) {$/;"	f	class:ExeDepsFix
kill	Transforms/Scalar/SROA.cpp	/^    void kill() {$/;"	f	struct:__anon557::AllocaPartitioning::Partition
killVirtReg	CodeGen/RegAllocFast.cpp	/^void RAFast::killVirtReg(LiveRegMap::iterator LRI) {$/;"	f	class:RAFast
killVirtReg	CodeGen/RegAllocFast.cpp	/^void RAFast::killVirtReg(unsigned VirtReg) {$/;"	f	class:RAFast
kind	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  enum DbgValueKind kind;$/;"	m	class:llvm::SDDbgValue	typeref:enum:llvm::SDDbgValue::DbgValueKind
kw_acq_rel	AsmParser/LLToken.h	/^    kw_unordered, kw_monotonic, kw_acquire, kw_release, kw_acq_rel, kw_seq_cst,$/;"	e	enum:llvm::lltok::Kind
kw_acquire	AsmParser/LLToken.h	/^    kw_unordered, kw_monotonic, kw_acquire, kw_release, kw_acq_rel, kw_seq_cst,$/;"	e	enum:llvm::lltok::Kind
kw_add	AsmParser/LLToken.h	/^    kw_add,  kw_fadd, kw_sub,  kw_fsub, kw_mul,  kw_fmul,$/;"	e	enum:llvm::lltok::Kind
kw_address_safety	AsmParser/LLToken.h	/^    kw_address_safety,$/;"	e	enum:llvm::lltok::Kind
kw_addrspace	AsmParser/LLToken.h	/^    kw_addrspace,$/;"	e	enum:llvm::lltok::Kind
kw_alias	AsmParser/LLToken.h	/^    kw_alias,$/;"	e	enum:llvm::lltok::Kind
kw_align	AsmParser/LLToken.h	/^    kw_align,$/;"	e	enum:llvm::lltok::Kind
kw_alignstack	AsmParser/LLToken.h	/^    kw_alignstack,$/;"	e	enum:llvm::lltok::Kind
kw_alloca	AsmParser/LLToken.h	/^    kw_alloca, kw_load, kw_store, kw_fence, kw_cmpxchg, kw_atomicrmw,$/;"	e	enum:llvm::lltok::Kind
kw_alwaysinline	AsmParser/LLToken.h	/^    kw_alwaysinline,$/;"	e	enum:llvm::lltok::Kind
kw_and	AsmParser/LLToken.h	/^    kw_and,  kw_or,   kw_xor,  kw_icmp, kw_fcmp,$/;"	e	enum:llvm::lltok::Kind
kw_appending	AsmParser/LLToken.h	/^    kw_weak, kw_weak_odr, kw_appending,$/;"	e	enum:llvm::lltok::Kind
kw_arm_aapcs_vfpcc	AsmParser/LLToken.h	/^    kw_arm_apcscc, kw_arm_aapcscc, kw_arm_aapcs_vfpcc,$/;"	e	enum:llvm::lltok::Kind
kw_arm_aapcscc	AsmParser/LLToken.h	/^    kw_arm_apcscc, kw_arm_aapcscc, kw_arm_aapcs_vfpcc,$/;"	e	enum:llvm::lltok::Kind
kw_arm_apcscc	AsmParser/LLToken.h	/^    kw_arm_apcscc, kw_arm_aapcscc, kw_arm_aapcs_vfpcc,$/;"	e	enum:llvm::lltok::Kind
kw_ashr	AsmParser/LLToken.h	/^    kw_urem, kw_srem, kw_frem, kw_shl,  kw_lshr, kw_ashr,$/;"	e	enum:llvm::lltok::Kind
kw_asm	AsmParser/LLToken.h	/^    kw_asm,$/;"	e	enum:llvm::lltok::Kind
kw_atomic	AsmParser/LLToken.h	/^    kw_atomic,$/;"	e	enum:llvm::lltok::Kind
kw_atomicrmw	AsmParser/LLToken.h	/^    kw_alloca, kw_load, kw_store, kw_fence, kw_cmpxchg, kw_atomicrmw,$/;"	e	enum:llvm::lltok::Kind
kw_available_externally	AsmParser/LLToken.h	/^    kw_dllimport, kw_dllexport, kw_common, kw_available_externally,$/;"	e	enum:llvm::lltok::Kind
kw_bitcast	AsmParser/LLToken.h	/^    kw_fptoui, kw_fptosi, kw_inttoptr, kw_ptrtoint, kw_bitcast,$/;"	e	enum:llvm::lltok::Kind
kw_blockaddress	AsmParser/LLToken.h	/^    kw_extractvalue, kw_insertvalue, kw_blockaddress,$/;"	e	enum:llvm::lltok::Kind
kw_br	AsmParser/LLToken.h	/^    kw_ret, kw_br, kw_switch, kw_indirectbr, kw_invoke, kw_resume,$/;"	e	enum:llvm::lltok::Kind
kw_byval	AsmParser/LLToken.h	/^    kw_byval,$/;"	e	enum:llvm::lltok::Kind
kw_c	AsmParser/LLToken.h	/^    kw_c,$/;"	e	enum:llvm::lltok::Kind
kw_call	AsmParser/LLToken.h	/^    kw_phi, kw_call,$/;"	e	enum:llvm::lltok::Kind
kw_catch	AsmParser/LLToken.h	/^    kw_landingpad, kw_personality, kw_cleanup, kw_catch, kw_filter,$/;"	e	enum:llvm::lltok::Kind
kw_cc	AsmParser/LLToken.h	/^    kw_cc, kw_ccc, kw_fastcc, kw_coldcc,$/;"	e	enum:llvm::lltok::Kind
kw_ccc	AsmParser/LLToken.h	/^    kw_cc, kw_ccc, kw_fastcc, kw_coldcc,$/;"	e	enum:llvm::lltok::Kind
kw_cleanup	AsmParser/LLToken.h	/^    kw_landingpad, kw_personality, kw_cleanup, kw_catch, kw_filter,$/;"	e	enum:llvm::lltok::Kind
kw_cmpxchg	AsmParser/LLToken.h	/^    kw_alloca, kw_load, kw_store, kw_fence, kw_cmpxchg, kw_atomicrmw,$/;"	e	enum:llvm::lltok::Kind
kw_coldcc	AsmParser/LLToken.h	/^    kw_cc, kw_ccc, kw_fastcc, kw_coldcc,$/;"	e	enum:llvm::lltok::Kind
kw_common	AsmParser/LLToken.h	/^    kw_dllimport, kw_dllexport, kw_common, kw_available_externally,$/;"	e	enum:llvm::lltok::Kind
kw_constant	AsmParser/LLToken.h	/^    kw_global,  kw_constant,$/;"	e	enum:llvm::lltok::Kind
kw_datalayout	AsmParser/LLToken.h	/^    kw_datalayout,$/;"	e	enum:llvm::lltok::Kind
kw_declare	AsmParser/LLToken.h	/^    kw_declare, kw_define,$/;"	e	enum:llvm::lltok::Kind
kw_default	AsmParser/LLToken.h	/^    kw_default, kw_hidden, kw_protected,$/;"	e	enum:llvm::lltok::Kind
kw_define	AsmParser/LLToken.h	/^    kw_declare, kw_define,$/;"	e	enum:llvm::lltok::Kind
kw_deplibs	AsmParser/LLToken.h	/^    kw_deplibs,$/;"	e	enum:llvm::lltok::Kind
kw_dllexport	AsmParser/LLToken.h	/^    kw_dllimport, kw_dllexport, kw_common, kw_available_externally,$/;"	e	enum:llvm::lltok::Kind
kw_dllimport	AsmParser/LLToken.h	/^    kw_dllimport, kw_dllexport, kw_common, kw_available_externally,$/;"	e	enum:llvm::lltok::Kind
kw_eq	AsmParser/LLToken.h	/^    kw_eq, kw_ne, kw_slt, kw_sgt, kw_sle, kw_sge, kw_ult, kw_ugt, kw_ule,$/;"	e	enum:llvm::lltok::Kind
kw_exact	AsmParser/LLToken.h	/^    kw_exact,$/;"	e	enum:llvm::lltok::Kind
kw_extern_weak	AsmParser/LLToken.h	/^    kw_extern_weak,$/;"	e	enum:llvm::lltok::Kind
kw_external	AsmParser/LLToken.h	/^    kw_external, kw_thread_local,$/;"	e	enum:llvm::lltok::Kind
kw_extractelement	AsmParser/LLToken.h	/^    kw_extractelement, kw_insertelement, kw_shufflevector,$/;"	e	enum:llvm::lltok::Kind
kw_extractvalue	AsmParser/LLToken.h	/^    kw_extractvalue, kw_insertvalue, kw_blockaddress,$/;"	e	enum:llvm::lltok::Kind
kw_fadd	AsmParser/LLToken.h	/^    kw_add,  kw_fadd, kw_sub,  kw_fsub, kw_mul,  kw_fmul,$/;"	e	enum:llvm::lltok::Kind
kw_false	AsmParser/LLToken.h	/^    kw_true,    kw_false,$/;"	e	enum:llvm::lltok::Kind
kw_fastcc	AsmParser/LLToken.h	/^    kw_cc, kw_ccc, kw_fastcc, kw_coldcc,$/;"	e	enum:llvm::lltok::Kind
kw_fcmp	AsmParser/LLToken.h	/^    kw_and,  kw_or,   kw_xor,  kw_icmp, kw_fcmp,$/;"	e	enum:llvm::lltok::Kind
kw_fdiv	AsmParser/LLToken.h	/^    kw_udiv, kw_sdiv, kw_fdiv,$/;"	e	enum:llvm::lltok::Kind
kw_fence	AsmParser/LLToken.h	/^    kw_alloca, kw_load, kw_store, kw_fence, kw_cmpxchg, kw_atomicrmw,$/;"	e	enum:llvm::lltok::Kind
kw_filter	AsmParser/LLToken.h	/^    kw_landingpad, kw_personality, kw_cleanup, kw_catch, kw_filter,$/;"	e	enum:llvm::lltok::Kind
kw_fmul	AsmParser/LLToken.h	/^    kw_add,  kw_fadd, kw_sub,  kw_fsub, kw_mul,  kw_fmul,$/;"	e	enum:llvm::lltok::Kind
kw_fpext	AsmParser/LLToken.h	/^    kw_trunc, kw_zext, kw_sext, kw_fptrunc, kw_fpext, kw_uitofp, kw_sitofp,$/;"	e	enum:llvm::lltok::Kind
kw_fptosi	AsmParser/LLToken.h	/^    kw_fptoui, kw_fptosi, kw_inttoptr, kw_ptrtoint, kw_bitcast,$/;"	e	enum:llvm::lltok::Kind
kw_fptoui	AsmParser/LLToken.h	/^    kw_fptoui, kw_fptosi, kw_inttoptr, kw_ptrtoint, kw_bitcast,$/;"	e	enum:llvm::lltok::Kind
kw_fptrunc	AsmParser/LLToken.h	/^    kw_trunc, kw_zext, kw_sext, kw_fptrunc, kw_fpext, kw_uitofp, kw_sitofp,$/;"	e	enum:llvm::lltok::Kind
kw_frem	AsmParser/LLToken.h	/^    kw_urem, kw_srem, kw_frem, kw_shl,  kw_lshr, kw_ashr,$/;"	e	enum:llvm::lltok::Kind
kw_fsub	AsmParser/LLToken.h	/^    kw_add,  kw_fadd, kw_sub,  kw_fsub, kw_mul,  kw_fmul,$/;"	e	enum:llvm::lltok::Kind
kw_gc	AsmParser/LLToken.h	/^    kw_gc,$/;"	e	enum:llvm::lltok::Kind
kw_getelementptr	AsmParser/LLToken.h	/^    kw_getelementptr,$/;"	e	enum:llvm::lltok::Kind
kw_global	AsmParser/LLToken.h	/^    kw_global,  kw_constant,$/;"	e	enum:llvm::lltok::Kind
kw_hidden	AsmParser/LLToken.h	/^    kw_default, kw_hidden, kw_protected,$/;"	e	enum:llvm::lltok::Kind
kw_icmp	AsmParser/LLToken.h	/^    kw_and,  kw_or,   kw_xor,  kw_icmp, kw_fcmp,$/;"	e	enum:llvm::lltok::Kind
kw_inbounds	AsmParser/LLToken.h	/^    kw_inbounds,$/;"	e	enum:llvm::lltok::Kind
kw_indirectbr	AsmParser/LLToken.h	/^    kw_ret, kw_br, kw_switch, kw_indirectbr, kw_invoke, kw_resume,$/;"	e	enum:llvm::lltok::Kind
kw_initialexec	AsmParser/LLToken.h	/^    kw_localdynamic, kw_initialexec, kw_localexec,$/;"	e	enum:llvm::lltok::Kind
kw_inlinehint	AsmParser/LLToken.h	/^    kw_inlinehint,$/;"	e	enum:llvm::lltok::Kind
kw_inreg	AsmParser/LLToken.h	/^    kw_inreg,$/;"	e	enum:llvm::lltok::Kind
kw_insertelement	AsmParser/LLToken.h	/^    kw_extractelement, kw_insertelement, kw_shufflevector,$/;"	e	enum:llvm::lltok::Kind
kw_insertvalue	AsmParser/LLToken.h	/^    kw_extractvalue, kw_insertvalue, kw_blockaddress,$/;"	e	enum:llvm::lltok::Kind
kw_inteldialect	AsmParser/LLToken.h	/^    kw_inteldialect,$/;"	e	enum:llvm::lltok::Kind
kw_internal	AsmParser/LLToken.h	/^    kw_internal,$/;"	e	enum:llvm::lltok::Kind
kw_inttoptr	AsmParser/LLToken.h	/^    kw_fptoui, kw_fptosi, kw_inttoptr, kw_ptrtoint, kw_bitcast,$/;"	e	enum:llvm::lltok::Kind
kw_invoke	AsmParser/LLToken.h	/^    kw_ret, kw_br, kw_switch, kw_indirectbr, kw_invoke, kw_resume,$/;"	e	enum:llvm::lltok::Kind
kw_landingpad	AsmParser/LLToken.h	/^    kw_landingpad, kw_personality, kw_cleanup, kw_catch, kw_filter,$/;"	e	enum:llvm::lltok::Kind
kw_linker_private	AsmParser/LLToken.h	/^    kw_private, kw_linker_private, kw_linker_private_weak,$/;"	e	enum:llvm::lltok::Kind
kw_linker_private_weak	AsmParser/LLToken.h	/^    kw_private, kw_linker_private, kw_linker_private_weak,$/;"	e	enum:llvm::lltok::Kind
kw_linker_private_weak_def_auto	AsmParser/LLToken.h	/^    kw_linker_private_weak_def_auto, \/\/ FIXME: For backwards compatibility.$/;"	e	enum:llvm::lltok::Kind
kw_linkonce	AsmParser/LLToken.h	/^    kw_linkonce, kw_linkonce_odr, kw_linkonce_odr_auto_hide,$/;"	e	enum:llvm::lltok::Kind
kw_linkonce_odr	AsmParser/LLToken.h	/^    kw_linkonce, kw_linkonce_odr, kw_linkonce_odr_auto_hide,$/;"	e	enum:llvm::lltok::Kind
kw_linkonce_odr_auto_hide	AsmParser/LLToken.h	/^    kw_linkonce, kw_linkonce_odr, kw_linkonce_odr_auto_hide,$/;"	e	enum:llvm::lltok::Kind
kw_load	AsmParser/LLToken.h	/^    kw_alloca, kw_load, kw_store, kw_fence, kw_cmpxchg, kw_atomicrmw,$/;"	e	enum:llvm::lltok::Kind
kw_localdynamic	AsmParser/LLToken.h	/^    kw_localdynamic, kw_initialexec, kw_localexec,$/;"	e	enum:llvm::lltok::Kind
kw_localexec	AsmParser/LLToken.h	/^    kw_localdynamic, kw_initialexec, kw_localexec,$/;"	e	enum:llvm::lltok::Kind
kw_lshr	AsmParser/LLToken.h	/^    kw_urem, kw_srem, kw_frem, kw_shl,  kw_lshr, kw_ashr,$/;"	e	enum:llvm::lltok::Kind
kw_max	AsmParser/LLToken.h	/^    kw_xchg, kw_nand, kw_max, kw_min, kw_umax, kw_umin,$/;"	e	enum:llvm::lltok::Kind
kw_min	AsmParser/LLToken.h	/^    kw_xchg, kw_nand, kw_max, kw_min, kw_umax, kw_umin,$/;"	e	enum:llvm::lltok::Kind
kw_module	AsmParser/LLToken.h	/^    kw_module,$/;"	e	enum:llvm::lltok::Kind
kw_monotonic	AsmParser/LLToken.h	/^    kw_unordered, kw_monotonic, kw_acquire, kw_release, kw_acq_rel, kw_seq_cst,$/;"	e	enum:llvm::lltok::Kind
kw_msp430_intrcc	AsmParser/LLToken.h	/^    kw_msp430_intrcc,$/;"	e	enum:llvm::lltok::Kind
kw_mul	AsmParser/LLToken.h	/^    kw_add,  kw_fadd, kw_sub,  kw_fsub, kw_mul,  kw_fmul,$/;"	e	enum:llvm::lltok::Kind
kw_naked	AsmParser/LLToken.h	/^    kw_naked,$/;"	e	enum:llvm::lltok::Kind
kw_nand	AsmParser/LLToken.h	/^    kw_xchg, kw_nand, kw_max, kw_min, kw_umax, kw_umin,$/;"	e	enum:llvm::lltok::Kind
kw_ne	AsmParser/LLToken.h	/^    kw_eq, kw_ne, kw_slt, kw_sgt, kw_sle, kw_sge, kw_ult, kw_ugt, kw_ule,$/;"	e	enum:llvm::lltok::Kind
kw_nest	AsmParser/LLToken.h	/^    kw_nest,$/;"	e	enum:llvm::lltok::Kind
kw_noalias	AsmParser/LLToken.h	/^    kw_noalias,$/;"	e	enum:llvm::lltok::Kind
kw_nocapture	AsmParser/LLToken.h	/^    kw_nocapture,$/;"	e	enum:llvm::lltok::Kind
kw_noimplicitfloat	AsmParser/LLToken.h	/^    kw_noimplicitfloat,$/;"	e	enum:llvm::lltok::Kind
kw_noinline	AsmParser/LLToken.h	/^    kw_noinline,$/;"	e	enum:llvm::lltok::Kind
kw_nonlazybind	AsmParser/LLToken.h	/^    kw_nonlazybind,$/;"	e	enum:llvm::lltok::Kind
kw_noredzone	AsmParser/LLToken.h	/^    kw_noredzone,$/;"	e	enum:llvm::lltok::Kind
kw_noreturn	AsmParser/LLToken.h	/^    kw_noreturn,$/;"	e	enum:llvm::lltok::Kind
kw_nounwind	AsmParser/LLToken.h	/^    kw_nounwind,$/;"	e	enum:llvm::lltok::Kind
kw_nsw	AsmParser/LLToken.h	/^    kw_nsw,$/;"	e	enum:llvm::lltok::Kind
kw_null	AsmParser/LLToken.h	/^    kw_undef, kw_null,$/;"	e	enum:llvm::lltok::Kind
kw_nuw	AsmParser/LLToken.h	/^    kw_nuw,$/;"	e	enum:llvm::lltok::Kind
kw_oeq	AsmParser/LLToken.h	/^    kw_uge, kw_oeq, kw_one, kw_olt, kw_ogt, kw_ole, kw_oge, kw_ord, kw_uno,$/;"	e	enum:llvm::lltok::Kind
kw_oge	AsmParser/LLToken.h	/^    kw_uge, kw_oeq, kw_one, kw_olt, kw_ogt, kw_ole, kw_oge, kw_ord, kw_uno,$/;"	e	enum:llvm::lltok::Kind
kw_ogt	AsmParser/LLToken.h	/^    kw_uge, kw_oeq, kw_one, kw_olt, kw_ogt, kw_ole, kw_oge, kw_ord, kw_uno,$/;"	e	enum:llvm::lltok::Kind
kw_ole	AsmParser/LLToken.h	/^    kw_uge, kw_oeq, kw_one, kw_olt, kw_ogt, kw_ole, kw_oge, kw_ord, kw_uno,$/;"	e	enum:llvm::lltok::Kind
kw_olt	AsmParser/LLToken.h	/^    kw_uge, kw_oeq, kw_one, kw_olt, kw_ogt, kw_ole, kw_oge, kw_ord, kw_uno,$/;"	e	enum:llvm::lltok::Kind
kw_one	AsmParser/LLToken.h	/^    kw_uge, kw_oeq, kw_one, kw_olt, kw_ogt, kw_ole, kw_oge, kw_ord, kw_uno,$/;"	e	enum:llvm::lltok::Kind
kw_opaque	AsmParser/LLToken.h	/^    kw_opaque,$/;"	e	enum:llvm::lltok::Kind
kw_optsize	AsmParser/LLToken.h	/^    kw_optsize,$/;"	e	enum:llvm::lltok::Kind
kw_or	AsmParser/LLToken.h	/^    kw_and,  kw_or,   kw_xor,  kw_icmp, kw_fcmp,$/;"	e	enum:llvm::lltok::Kind
kw_ord	AsmParser/LLToken.h	/^    kw_uge, kw_oeq, kw_one, kw_olt, kw_ogt, kw_ole, kw_oge, kw_ord, kw_uno,$/;"	e	enum:llvm::lltok::Kind
kw_personality	AsmParser/LLToken.h	/^    kw_landingpad, kw_personality, kw_cleanup, kw_catch, kw_filter,$/;"	e	enum:llvm::lltok::Kind
kw_phi	AsmParser/LLToken.h	/^    kw_phi, kw_call,$/;"	e	enum:llvm::lltok::Kind
kw_private	AsmParser/LLToken.h	/^    kw_private, kw_linker_private, kw_linker_private_weak,$/;"	e	enum:llvm::lltok::Kind
kw_protected	AsmParser/LLToken.h	/^    kw_default, kw_hidden, kw_protected,$/;"	e	enum:llvm::lltok::Kind
kw_ptrtoint	AsmParser/LLToken.h	/^    kw_fptoui, kw_fptosi, kw_inttoptr, kw_ptrtoint, kw_bitcast,$/;"	e	enum:llvm::lltok::Kind
kw_ptx_device	AsmParser/LLToken.h	/^    kw_ptx_kernel, kw_ptx_device,$/;"	e	enum:llvm::lltok::Kind
kw_ptx_kernel	AsmParser/LLToken.h	/^    kw_ptx_kernel, kw_ptx_device,$/;"	e	enum:llvm::lltok::Kind
kw_readnone	AsmParser/LLToken.h	/^    kw_readnone,$/;"	e	enum:llvm::lltok::Kind
kw_readonly	AsmParser/LLToken.h	/^    kw_readonly,$/;"	e	enum:llvm::lltok::Kind
kw_release	AsmParser/LLToken.h	/^    kw_unordered, kw_monotonic, kw_acquire, kw_release, kw_acq_rel, kw_seq_cst,$/;"	e	enum:llvm::lltok::Kind
kw_resume	AsmParser/LLToken.h	/^    kw_ret, kw_br, kw_switch, kw_indirectbr, kw_invoke, kw_resume,$/;"	e	enum:llvm::lltok::Kind
kw_ret	AsmParser/LLToken.h	/^    kw_ret, kw_br, kw_switch, kw_indirectbr, kw_invoke, kw_resume,$/;"	e	enum:llvm::lltok::Kind
kw_returns_twice	AsmParser/LLToken.h	/^    kw_returns_twice,$/;"	e	enum:llvm::lltok::Kind
kw_sdiv	AsmParser/LLToken.h	/^    kw_udiv, kw_sdiv, kw_fdiv,$/;"	e	enum:llvm::lltok::Kind
kw_section	AsmParser/LLToken.h	/^    kw_section,$/;"	e	enum:llvm::lltok::Kind
kw_select	AsmParser/LLToken.h	/^    kw_select, kw_va_arg,$/;"	e	enum:llvm::lltok::Kind
kw_seq_cst	AsmParser/LLToken.h	/^    kw_unordered, kw_monotonic, kw_acquire, kw_release, kw_acq_rel, kw_seq_cst,$/;"	e	enum:llvm::lltok::Kind
kw_sext	AsmParser/LLToken.h	/^    kw_trunc, kw_zext, kw_sext, kw_fptrunc, kw_fpext, kw_uitofp, kw_sitofp,$/;"	e	enum:llvm::lltok::Kind
kw_sge	AsmParser/LLToken.h	/^    kw_eq, kw_ne, kw_slt, kw_sgt, kw_sle, kw_sge, kw_ult, kw_ugt, kw_ule,$/;"	e	enum:llvm::lltok::Kind
kw_sgt	AsmParser/LLToken.h	/^    kw_eq, kw_ne, kw_slt, kw_sgt, kw_sle, kw_sge, kw_ult, kw_ugt, kw_ule,$/;"	e	enum:llvm::lltok::Kind
kw_shl	AsmParser/LLToken.h	/^    kw_urem, kw_srem, kw_frem, kw_shl,  kw_lshr, kw_ashr,$/;"	e	enum:llvm::lltok::Kind
kw_shufflevector	AsmParser/LLToken.h	/^    kw_extractelement, kw_insertelement, kw_shufflevector,$/;"	e	enum:llvm::lltok::Kind
kw_sideeffect	AsmParser/LLToken.h	/^    kw_sideeffect,$/;"	e	enum:llvm::lltok::Kind
kw_signext	AsmParser/LLToken.h	/^    kw_signext,$/;"	e	enum:llvm::lltok::Kind
kw_singlethread	AsmParser/LLToken.h	/^    kw_singlethread,$/;"	e	enum:llvm::lltok::Kind
kw_sitofp	AsmParser/LLToken.h	/^    kw_trunc, kw_zext, kw_sext, kw_fptrunc, kw_fpext, kw_uitofp, kw_sitofp,$/;"	e	enum:llvm::lltok::Kind
kw_sle	AsmParser/LLToken.h	/^    kw_eq, kw_ne, kw_slt, kw_sgt, kw_sle, kw_sge, kw_ult, kw_ugt, kw_ule,$/;"	e	enum:llvm::lltok::Kind
kw_slt	AsmParser/LLToken.h	/^    kw_eq, kw_ne, kw_slt, kw_sgt, kw_sle, kw_sge, kw_ult, kw_ugt, kw_ule,$/;"	e	enum:llvm::lltok::Kind
kw_spir_func	AsmParser/LLToken.h	/^    kw_spir_kernel, kw_spir_func,$/;"	e	enum:llvm::lltok::Kind
kw_spir_kernel	AsmParser/LLToken.h	/^    kw_spir_kernel, kw_spir_func,$/;"	e	enum:llvm::lltok::Kind
kw_srem	AsmParser/LLToken.h	/^    kw_urem, kw_srem, kw_frem, kw_shl,  kw_lshr, kw_ashr,$/;"	e	enum:llvm::lltok::Kind
kw_sret	AsmParser/LLToken.h	/^    kw_sret,$/;"	e	enum:llvm::lltok::Kind
kw_ssp	AsmParser/LLToken.h	/^    kw_ssp,$/;"	e	enum:llvm::lltok::Kind
kw_sspreq	AsmParser/LLToken.h	/^    kw_sspreq,$/;"	e	enum:llvm::lltok::Kind
kw_store	AsmParser/LLToken.h	/^    kw_alloca, kw_load, kw_store, kw_fence, kw_cmpxchg, kw_atomicrmw,$/;"	e	enum:llvm::lltok::Kind
kw_sub	AsmParser/LLToken.h	/^    kw_add,  kw_fadd, kw_sub,  kw_fsub, kw_mul,  kw_fmul,$/;"	e	enum:llvm::lltok::Kind
kw_switch	AsmParser/LLToken.h	/^    kw_ret, kw_br, kw_switch, kw_indirectbr, kw_invoke, kw_resume,$/;"	e	enum:llvm::lltok::Kind
kw_tail	AsmParser/LLToken.h	/^    kw_tail,$/;"	e	enum:llvm::lltok::Kind
kw_target	AsmParser/LLToken.h	/^    kw_target,$/;"	e	enum:llvm::lltok::Kind
kw_thread_local	AsmParser/LLToken.h	/^    kw_external, kw_thread_local,$/;"	e	enum:llvm::lltok::Kind
kw_to	AsmParser/LLToken.h	/^    kw_to,$/;"	e	enum:llvm::lltok::Kind
kw_triple	AsmParser/LLToken.h	/^    kw_triple,$/;"	e	enum:llvm::lltok::Kind
kw_true	AsmParser/LLToken.h	/^    kw_true,    kw_false,$/;"	e	enum:llvm::lltok::Kind
kw_trunc	AsmParser/LLToken.h	/^    kw_trunc, kw_zext, kw_sext, kw_fptrunc, kw_fpext, kw_uitofp, kw_sitofp,$/;"	e	enum:llvm::lltok::Kind
kw_type	AsmParser/LLToken.h	/^    kw_type,$/;"	e	enum:llvm::lltok::Kind
kw_udiv	AsmParser/LLToken.h	/^    kw_udiv, kw_sdiv, kw_fdiv,$/;"	e	enum:llvm::lltok::Kind
kw_ueq	AsmParser/LLToken.h	/^    kw_ueq, kw_une,$/;"	e	enum:llvm::lltok::Kind
kw_uge	AsmParser/LLToken.h	/^    kw_uge, kw_oeq, kw_one, kw_olt, kw_ogt, kw_ole, kw_oge, kw_ord, kw_uno,$/;"	e	enum:llvm::lltok::Kind
kw_ugt	AsmParser/LLToken.h	/^    kw_eq, kw_ne, kw_slt, kw_sgt, kw_sle, kw_sge, kw_ult, kw_ugt, kw_ule,$/;"	e	enum:llvm::lltok::Kind
kw_uitofp	AsmParser/LLToken.h	/^    kw_trunc, kw_zext, kw_sext, kw_fptrunc, kw_fpext, kw_uitofp, kw_sitofp,$/;"	e	enum:llvm::lltok::Kind
kw_ule	AsmParser/LLToken.h	/^    kw_eq, kw_ne, kw_slt, kw_sgt, kw_sle, kw_sge, kw_ult, kw_ugt, kw_ule,$/;"	e	enum:llvm::lltok::Kind
kw_ult	AsmParser/LLToken.h	/^    kw_eq, kw_ne, kw_slt, kw_sgt, kw_sle, kw_sge, kw_ult, kw_ugt, kw_ule,$/;"	e	enum:llvm::lltok::Kind
kw_umax	AsmParser/LLToken.h	/^    kw_xchg, kw_nand, kw_max, kw_min, kw_umax, kw_umin,$/;"	e	enum:llvm::lltok::Kind
kw_umin	AsmParser/LLToken.h	/^    kw_xchg, kw_nand, kw_max, kw_min, kw_umax, kw_umin,$/;"	e	enum:llvm::lltok::Kind
kw_undef	AsmParser/LLToken.h	/^    kw_undef, kw_null,$/;"	e	enum:llvm::lltok::Kind
kw_une	AsmParser/LLToken.h	/^    kw_ueq, kw_une,$/;"	e	enum:llvm::lltok::Kind
kw_unnamed_addr	AsmParser/LLToken.h	/^    kw_unnamed_addr,$/;"	e	enum:llvm::lltok::Kind
kw_uno	AsmParser/LLToken.h	/^    kw_uge, kw_oeq, kw_one, kw_olt, kw_ogt, kw_ole, kw_oge, kw_ord, kw_uno,$/;"	e	enum:llvm::lltok::Kind
kw_unordered	AsmParser/LLToken.h	/^    kw_unordered, kw_monotonic, kw_acquire, kw_release, kw_acq_rel, kw_seq_cst,$/;"	e	enum:llvm::lltok::Kind
kw_unreachable	AsmParser/LLToken.h	/^    kw_unreachable,$/;"	e	enum:llvm::lltok::Kind
kw_unwind	AsmParser/LLToken.h	/^    kw_unwind,$/;"	e	enum:llvm::lltok::Kind
kw_urem	AsmParser/LLToken.h	/^    kw_urem, kw_srem, kw_frem, kw_shl,  kw_lshr, kw_ashr,$/;"	e	enum:llvm::lltok::Kind
kw_uwtable	AsmParser/LLToken.h	/^    kw_uwtable,$/;"	e	enum:llvm::lltok::Kind
kw_va_arg	AsmParser/LLToken.h	/^    kw_select, kw_va_arg,$/;"	e	enum:llvm::lltok::Kind
kw_volatile	AsmParser/LLToken.h	/^    kw_volatile,$/;"	e	enum:llvm::lltok::Kind
kw_weak	AsmParser/LLToken.h	/^    kw_weak, kw_weak_odr, kw_appending,$/;"	e	enum:llvm::lltok::Kind
kw_weak_odr	AsmParser/LLToken.h	/^    kw_weak, kw_weak_odr, kw_appending,$/;"	e	enum:llvm::lltok::Kind
kw_x	AsmParser/LLToken.h	/^    kw_x,$/;"	e	enum:llvm::lltok::Kind
kw_x86_fastcallcc	AsmParser/LLToken.h	/^    kw_x86_stdcallcc, kw_x86_fastcallcc, kw_x86_thiscallcc,$/;"	e	enum:llvm::lltok::Kind
kw_x86_stdcallcc	AsmParser/LLToken.h	/^    kw_x86_stdcallcc, kw_x86_fastcallcc, kw_x86_thiscallcc,$/;"	e	enum:llvm::lltok::Kind
kw_x86_thiscallcc	AsmParser/LLToken.h	/^    kw_x86_stdcallcc, kw_x86_fastcallcc, kw_x86_thiscallcc,$/;"	e	enum:llvm::lltok::Kind
kw_xchg	AsmParser/LLToken.h	/^    kw_xchg, kw_nand, kw_max, kw_min, kw_umax, kw_umin,$/;"	e	enum:llvm::lltok::Kind
kw_xor	AsmParser/LLToken.h	/^    kw_and,  kw_or,   kw_xor,  kw_icmp, kw_fcmp,$/;"	e	enum:llvm::lltok::Kind
kw_zeroext	AsmParser/LLToken.h	/^    kw_zeroext,$/;"	e	enum:llvm::lltok::Kind
kw_zeroinitializer	AsmParser/LLToken.h	/^    kw_zeroinitializer,$/;"	e	enum:llvm::lltok::Kind
kw_zext	AsmParser/LLToken.h	/^    kw_trunc, kw_zext, kw_sext, kw_fptrunc, kw_fpext, kw_uitofp, kw_sitofp,$/;"	e	enum:llvm::lltok::Kind
lFromVEX2of2	Target/X86/Disassembler/X86DisassemblerDecoder.h	59;"	d
lFromVEX3of3	Target/X86/Disassembler/X86DisassemblerDecoder.h	54;"	d
l_brace	TableGen/TGLexer.h	/^    l_brace, r_brace,   \/\/ { }$/;"	e	enum:llvm::tgtok::TokKind
l_paren	TableGen/TGLexer.h	/^    l_paren, r_paren,   \/\/ ( )$/;"	e	enum:llvm::tgtok::TokKind
l_square	TableGen/TGLexer.h	/^    l_square, r_square, \/\/ [ ]$/;"	e	enum:llvm::tgtok::TokKind
last	CodeGen/InterferenceCache.h	/^    SlotIndex last() {$/;"	f	class:llvm::InterferenceCache::Cursor
lastIndex	CodeGen/MachineVerifier.cpp	/^    SlotIndex lastIndex;$/;"	m	struct:__anon139::MachineVerifier	file:
lastSigDigit	Support/APFloat.cpp	/^  const char *lastSigDigit;$/;"	m	struct:decimalInfo	file:
last_non_mblaze_intrinsic	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^    last_non_mblaze_intrinsic = Intrinsic::num_intrinsics-1,$/;"	e	enum:mblazeIntrinsic::ID	file:
laststate	Support/regex2.h	/^	sopno laststate;	\/* the final OEND *\/$/;"	m	struct:re_guts
layoutOnce	MC/MCAssembler.cpp	/^bool MCAssembler::layoutOnce(MCAsmLayout &Layout) {$/;"	f	class:MCAssembler
layoutSectionOnce	MC/MCAssembler.cpp	/^bool MCAssembler::layoutSectionOnce(MCAsmLayout &Layout,$/;"	f	class:MCAssembler
lbrace	AsmParser/LLToken.h	/^    lbrace, rbrace,    \/\/ {  }$/;"	e	enum:llvm::lltok::Kind
leader	CodeGen/LiveDebugVariables.cpp	/^  UserValue *leader;      \/\/\/< Equivalence class leader.$/;"	m	class:__anon152::UserValue	file:
leaveBasicBlock	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::leaveBasicBlock(MachineBasicBlock *MBB) {$/;"	f	class:ExeDepsFix
leaveIntvAfter	CodeGen/SplitKit.cpp	/^SlotIndex SplitEditor::leaveIntvAfter(SlotIndex Idx) {$/;"	f	class:SplitEditor
leaveIntvAtTop	CodeGen/SplitKit.cpp	/^SlotIndex SplitEditor::leaveIntvAtTop(MachineBasicBlock &MBB) {$/;"	f	class:SplitEditor
leaveIntvBefore	CodeGen/SplitKit.cpp	/^SlotIndex SplitEditor::leaveIntvBefore(SlotIndex Idx) {$/;"	f	class:SplitEditor
leaveLocalValueArea	CodeGen/SelectionDAG/FastISel.cpp	/^void FastISel::leaveLocalValueArea(SavePoint OldInsertPt) {$/;"	f	class:FastISel
length	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  size_t length;$/;"	m	struct:InternalInstruction
length	Transforms/Instrumentation/GCOVProfiling.cpp	/^    uint32_t length() {$/;"	f	class:__anon490::GCOVLines
lengthOfGCOVString	Transforms/Instrumentation/GCOVProfiling.cpp	/^    unsigned lengthOfGCOVString(StringRef s) {$/;"	f	class:__anon490::GCOVRecord
less	AsmParser/LLToken.h	/^    less, greater,     \/\/ <  >$/;"	e	enum:llvm::lltok::Kind
less	TableGen/TGLexer.h	/^    less, greater,      \/\/ < >$/;"	e	enum:llvm::tgtok::TokKind
lexDefinite	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  const AsmToken &lexDefinite() {$/;"	f	class:__anon258::ARMBaseAsmLexer	file:
lexDefinite	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^    const AsmToken &lexDefinite() {$/;"	f	class:__anon453::MBlazeBaseAsmLexer	file:
lexDefinite	Target/X86/AsmParser/X86AsmLexer.cpp	/^  const AsmToken &lexDefinite() {$/;"	f	class:__anon342::X86AsmLexer	file:
lexTentative	Target/X86/AsmParser/X86AsmLexer.cpp	/^  const AsmToken &lexTentative() {$/;"	f	class:__anon342::X86AsmLexer	file:
lib	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    lib_t                  lib;$/;"	m	struct:___itt_global
lib_t	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef HMODULE           lib_t;$/;"	t
lib_t	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef void*             lib_t;$/;"	t
lineOffset	Target/NVPTX/NVPTXAsmPrinter.h	/^  SmallVector<unsigned, 32> lineOffset;$/;"	m	class:llvm::LineReader
line_number_size	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int        line_number_size;       $/;"	m	struct:_iJIT_Method_Load
line_number_table	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    pLineNumberInfo     line_number_table;      $/;"	m	struct:_iJIT_Method_Load
linkAliasBodies	Linker/LinkModules.cpp	/^void ModuleLinker::linkAliasBodies() {$/;"	f	class:ModuleLinker
linkAliasProto	Linker/LinkModules.cpp	/^bool ModuleLinker::linkAliasProto(GlobalAlias *SGA) {$/;"	f	class:ModuleLinker
linkAppendingVarInit	Linker/LinkModules.cpp	/^void ModuleLinker::linkAppendingVarInit(const AppendingVarInfo &AVI) {$/;"	f	class:ModuleLinker
linkAppendingVarProto	Linker/LinkModules.cpp	/^bool ModuleLinker::linkAppendingVarProto(GlobalVariable *DstGV,$/;"	f	class:ModuleLinker
linkDefinedTypeBodies	Linker/LinkModules.cpp	/^void TypeMapTy::linkDefinedTypeBodies() {$/;"	f	class:TypeMapTy
linkFunctionBody	Linker/LinkModules.cpp	/^void ModuleLinker::linkFunctionBody(Function *Dst, Function *Src) {$/;"	f	class:ModuleLinker
linkFunctionProto	Linker/LinkModules.cpp	/^bool ModuleLinker::linkFunctionProto(Function *SF) {$/;"	f	class:ModuleLinker
linkGlobalInits	Linker/LinkModules.cpp	/^void ModuleLinker::linkGlobalInits() {$/;"	f	class:ModuleLinker
linkGlobalProto	Linker/LinkModules.cpp	/^bool ModuleLinker::linkGlobalProto(GlobalVariable *SGV) {$/;"	f	class:ModuleLinker
linkModuleFlagsMetadata	Linker/LinkModules.cpp	/^bool ModuleLinker::linkModuleFlagsMetadata() {$/;"	f	class:ModuleLinker
linkNamedMDNodes	Linker/LinkModules.cpp	/^void ModuleLinker::linkNamedMDNodes() {$/;"	f	class:ModuleLinker
linkOcamlGC	CodeGen/OcamlGC.cpp	/^void llvm::linkOcamlGC() { }$/;"	f	class:llvm
linkOcamlGCPrinter	CodeGen/AsmPrinter/OcamlGCPrinter.cpp	/^void llvm::linkOcamlGCPrinter() { }$/;"	f	class:llvm
linkShadowStackGC	CodeGen/ShadowStackGC.cpp	/^void llvm::linkShadowStackGC() { }$/;"	f	class:llvm
lintFunction	Analysis/Lint.cpp	/^void llvm::lintFunction(const Function &f) {$/;"	f	class:llvm
lintModule	Analysis/Lint.cpp	/^void llvm::lintModule(const Module &M) {$/;"	f	class:llvm
lis	CodeGen/RegAllocPBQP.cpp	/^  LiveIntervals *lis;$/;"	m	class:__anon135::RegAllocPBQP	file:
lis	CodeGen/Spiller.cpp	/^  LiveIntervals *lis;$/;"	m	class:__anon143::SpillerBase	file:
listContainsReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^static bool listContainsReg(MCInst &Inst, unsigned OpNo, unsigned Reg) {$/;"	f	file:
listScheduleTopDown	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^void ScheduleDAGVLIW::listScheduleTopDown() {$/;"	f	class:ScheduleDAGVLIW
literalAbsoluteValue	MC/MCDisassembler/EDToken.cpp	/^int EDToken::literalAbsoluteValue(uint64_t &value) const {$/;"	f	class:EDToken
literalSign	MC/MCDisassembler/EDToken.cpp	/^int EDToken::literalSign() const {$/;"	f	class:EDToken
lle_X_abort	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^GenericValue lle_X_abort(FunctionType *FT,$/;"	f	file:
lle_X_atexit	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^GenericValue lle_X_atexit(FunctionType *FT,$/;"	f	file:
lle_X_exit	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^GenericValue lle_X_exit(FunctionType *FT,$/;"	f	file:
lle_X_fprintf	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^GenericValue lle_X_fprintf(FunctionType *FT,$/;"	f	file:
lle_X_printf	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^GenericValue lle_X_printf(FunctionType *FT,$/;"	f	file:
lle_X_scanf	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^GenericValue lle_X_scanf(FunctionType *FT,$/;"	f	file:
lle_X_sprintf	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^GenericValue lle_X_sprintf(FunctionType *FT,$/;"	f	file:
lle_X_sscanf	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^GenericValue lle_X_sscanf(FunctionType *FT,$/;"	f	file:
lltok	AsmParser/LLToken.h	/^namespace lltok {$/;"	n	namespace:llvm
llvm	Analysis/DomPrinter.cpp	/^namespace llvm {$/;"	n	file:
llvm	Analysis/LazyValueInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	Analysis/ProfileEstimatorPass.cpp	/^namespace llvm {$/;"	n	file:
llvm	Analysis/ProfileInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	Analysis/ProfileVerifierPass.cpp	/^namespace llvm {$/;"	n	file:
llvm	Analysis/RegionInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	Analysis/RegionPrinter.cpp	/^namespace llvm {$/;"	n	file:
llvm	Analysis/ScalarEvolutionExpander.cpp	/^namespace llvm {$/;"	n	file:
llvm	Archive/ArchiveInternals.h	/^namespace llvm {$/;"	n
llvm	AsmParser/LLLexer.h	/^namespace llvm {$/;"	n
llvm	AsmParser/LLParser.h	/^namespace llvm {$/;"	n
llvm	AsmParser/LLToken.h	/^namespace llvm {$/;"	n
llvm	Bitcode/Reader/BitcodeReader.cpp	/^namespace llvm {$/;"	n	file:
llvm	Bitcode/Reader/BitcodeReader.h	/^namespace llvm {$/;"	n
llvm	Bitcode/Writer/ValueEnumerator.h	/^namespace llvm {$/;"	n
llvm	CodeGen/AggressiveAntiDepBreaker.h	/^namespace llvm {$/;"	n
llvm	CodeGen/AllocationOrder.h	/^namespace llvm {$/;"	n
llvm	CodeGen/AntiDepBreaker.h	/^namespace llvm {$/;"	n
llvm	CodeGen/AsmPrinter/DIE.h	/^namespace llvm {$/;"	n
llvm	CodeGen/AsmPrinter/DwarfAccelTable.h	/^namespace llvm {$/;"	n
llvm	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^namespace llvm {$/;"	n
llvm	CodeGen/AsmPrinter/DwarfDebug.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/AsmPrinter/DwarfDebug.h	/^namespace llvm {$/;"	n
llvm	CodeGen/AsmPrinter/DwarfException.h	/^namespace llvm {$/;"	n
llvm	CodeGen/BranchFolding.h	/^namespace llvm {$/;"	n
llvm	CodeGen/CriticalAntiDepBreaker.h	/^namespace llvm {$/;"	n
llvm	CodeGen/DFAPacketizer.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/InlineSpiller.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/InterferenceCache.h	/^namespace llvm {$/;"	n
llvm	CodeGen/LiveDebugVariables.h	/^namespace llvm {$/;"	n
llvm	CodeGen/LiveIntervalUnion.h	/^namespace llvm {$/;"	n
llvm	CodeGen/LiveRangeCalc.h	/^namespace llvm {$/;"	n
llvm	CodeGen/LiveRegMatrix.h	/^namespace llvm {$/;"	n
llvm	CodeGen/MachineDominators.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/MachineFunction.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/MachineFunctionPrinterPass.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/MachineModuleInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/MachineSSAUpdater.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/MachineScheduler.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/MachineTraceMetrics.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/MachineTraceMetrics.h	/^namespace llvm {$/;"	n
llvm	CodeGen/PHIEliminationUtils.h	/^namespace llvm {$/;"	n
llvm	CodeGen/Passes.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/PrologEpilogInserter.h	/^namespace llvm {$/;"	n
llvm	CodeGen/RegAllocBase.h	/^namespace llvm {$/;"	n
llvm	CodeGen/RegisterCoalescer.h	/^namespace llvm {$/;"	n
llvm	CodeGen/ScheduleDAGInstrs.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/ScheduleDAGPrinter.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/SelectionDAG/InstrEmitter.h	/^namespace llvm {$/;"	n
llvm	CodeGen/SelectionDAG/LegalizeTypes.h	/^namespace llvm {$/;"	n
llvm	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^namespace llvm {$/;"	n
llvm	CodeGen/SelectionDAG/SDNodeOrdering.h	/^namespace llvm {$/;"	n
llvm	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^namespace llvm {$/;"	n
llvm	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^namespace llvm {$/;"	n
llvm	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^namespace llvm {$/;"	n	file:
llvm	CodeGen/SpillPlacement.h	/^namespace llvm {$/;"	n
llvm	CodeGen/Spiller.h	/^namespace llvm {$/;"	n
llvm	CodeGen/SplitKit.h	/^namespace llvm {$/;"	n
llvm	CodeGen/VirtRegMap.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFAbbreviationDeclaration.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFAttribute.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFCompileUnit.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFContext.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFDebugAbbrev.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFDebugArangeSet.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFDebugAranges.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFDebugInfoEntry.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFDebugLine.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFDebugRangeList.h	/^namespace llvm {$/;"	n
llvm	DebugInfo/DWARFFormValue.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/EventListenerCommon.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^namespace llvm {$/;"	n	file:
llvm	ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/Interpreter/Interpreter.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/JIT/JIT.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/JIT/JITDwarfEmitter.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/MCJIT/MCJIT.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/MCJIT/MCJITMemoryManager.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^namespace llvm {$/;"	n	file:
llvm	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^namespace llvm {$/;"	n	file:
llvm	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^namespace llvm {$/;"	n	file:
llvm	ExecutionEngine/RuntimeDyld/JITRegistrar.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^namespace llvm {$/;"	n	file:
llvm	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^namespace llvm {$/;"	n	file:
llvm	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^namespace llvm {$/;"	n
llvm	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp	/^namespace llvm {$/;"	n	file:
llvm	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.h	/^namespace llvm {$/;"	n
llvm	MC/MCAssembler.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/MCDisassembler/Disassembler.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/MCDisassembler/Disassembler.h	/^namespace llvm {$/;"	n
llvm	MC/MCDisassembler/EDDisassembler.h	/^namespace llvm {$/;"	n
llvm	MC/MCDisassembler/EDInst.h	/^namespace llvm {$/;"	n
llvm	MC/MCDisassembler/EDOperand.h	/^namespace llvm {$/;"	n
llvm	MC/MCDisassembler/EDToken.h	/^namespace llvm {$/;"	n
llvm	MC/MCDwarf.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/MCELF.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/MCELF.h	/^namespace llvm {$/;"	n
llvm	MC/MCParser/AsmParser.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/MCParser/COFFAsmParser.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/MCParser/DarwinAsmParser.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/MCParser/ELFAsmParser.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/MCWin64EH.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/WinCOFFObjectWriter.cpp	/^namespace llvm {$/;"	n	file:
llvm	MC/WinCOFFStreamer.cpp	/^namespace llvm$/;"	n	file:
llvm	Object/COFFObjectFile.cpp	/^namespace llvm {$/;"	n	file:
llvm	Object/ELFObjectFile.cpp	/^namespace llvm {$/;"	n	file:
llvm	Object/MachOObjectFile.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/APFloat.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/Allocator.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/BlockFrequency.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/BranchProbability.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/CommandLine.cpp	/^namespace llvm { namespace cl {$/;"	n	file:
llvm	Support/DataStream.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/DynamicLibrary.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/Errno.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/FileOutputBuffer.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/IntervalMap.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/IsInf.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/IsNAN.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/Mutex.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/PathV2.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/PrettyStackTrace.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/Process.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/RWMutex.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/SearchForAddressOfSpecialSymbol.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/Signals.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/Statistic.cpp	/^namespace llvm { extern raw_ostream *CreateInfoOutputFile(); }$/;"	n	file:
llvm	Support/StreamableMemoryObject.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/ThreadLocal.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/TimeValue.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/Timer.cpp	/^namespace llvm { extern raw_ostream *CreateInfoOutputFile(); }$/;"	n	file:
llvm	Support/Windows/Windows.h	/^namespace llvm {$/;"	n
llvm	Support/YAMLParser.cpp	/^namespace llvm {$/;"	n	file:
llvm	Support/system_error.cpp	/^namespace llvm {$/;"	n	file:
llvm	TableGen/Error.cpp	/^namespace llvm {$/;"	n	file:
llvm	TableGen/Main.cpp	/^namespace llvm {$/;"	n	file:
llvm	TableGen/Record.cpp	/^namespace llvm {$/;"	n	file:
llvm	TableGen/TGLexer.h	/^namespace llvm {$/;"	n
llvm	TableGen/TGParser.cpp	/^namespace llvm {$/;"	n	file:
llvm	TableGen/TGParser.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARM.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMAsmPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMBaseInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMBaseRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMCallingConv.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMConstantPoolValue.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMELFWriterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMFastISel.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/ARM/ARMFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMHazardRecognizer.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMJITInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMLoadStoreOptimizer.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/ARM/ARMMachineFunctionInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMRelocations.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMSelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMSubtarget.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/ARMTargetObjectFile.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/ARM/Disassembler/ARMDisassembler.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/ARM/InstPrinter/ARMInstPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/MCTargetDesc/ARMBaseInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/MCTargetDesc/ARMFixupKinds.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/MCTargetDesc/ARMMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/MCTargetDesc/ARMMCExpr.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/MCTargetDesc/ARMMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/Thumb1FrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/Thumb1InstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/Thumb1RegisterInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/ARM/Thumb1RegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/Thumb2InstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/ARM/Thumb2RegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/MCTargetDesc/SPUMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPU.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPUFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPUHazardRecognizers.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPUISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPUInstrBuilder.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPUInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPUMachineFunction.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPURegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPUSelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPUSubtarget.h	/^namespace llvm {$/;"	n
llvm	Target/CellSPU/SPUTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/CppBackend/CPPTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/Hexagon.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonAsmPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonCallingConvLower.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonMCInst.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonMachineFunctionInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonMachineScheduler.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonSelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonSubtarget.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/HexagonTargetObjectFile.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/InstPrinter/HexagonInstPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/MCTargetDesc/HexagonMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/MBlaze/Disassembler/MBlazeDisassembler.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/InstPrinter/MBlazeInstPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlaze.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeELFWriterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeIntrinsicInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeMCInstLower.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeMachineFunction.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeRelocations.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeSelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeSubtarget.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MBlazeTargetObjectFile.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MCTargetDesc/MBlazeMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/InstPrinter/MSP430InstPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MCTargetDesc/MSP430MCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430FrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430ISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430InstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430MCInstLower.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430MachineFunctionInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430RegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430SelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430Subtarget.h	/^namespace llvm {$/;"	n
llvm	Target/MSP430/MSP430TargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/Disassembler/MipsDisassembler.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/Mips/InstPrinter/MipsInstPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MCTargetDesc/MipsBaseInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MCTargetDesc/MipsDirectObjLower.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MCTargetDesc/MipsFixupKinds.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MCTargetDesc/MipsMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MCTargetDesc/MipsMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/Mips.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/Mips16FrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/Mips16InstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/Mips16RegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsAnalyzeImmediate.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsAsmPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsELFWriterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsJITInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsMCInstLower.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsMachineFunction.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsRelocations.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsSEFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsSEInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsSERegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsSelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsSubtarget.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/Mips/MipsTargetObjectFile.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/MCTargetDesc/NVPTXMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/ManagedStringPool.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTX.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXAllocaHoisting.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/NVPTX/NVPTXAllocaHoisting.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXAsmPrinter.cpp	/^namespace llvm  {$/;"	n	file:
llvm	Target/NVPTX/NVPTXAsmPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXLowerAggrCopies.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/NVPTX/NVPTXLowerAggrCopies.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXNumRegisters.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXRegisterInfo.cpp	/^namespace llvm$/;"	n	file:
llvm	Target/NVPTX/NVPTXRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXSection.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXSplitBBatBar.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/NVPTX/NVPTXSplitBBatBar.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXSubtarget.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXTargetMachine.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/NVPTX/NVPTXTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXTargetObjectFile.h	/^namespace llvm {$/;"	n
llvm	Target/NVPTX/NVPTXUtilities.h	/^namespace llvm$/;"	n
llvm	Target/NVPTX/NVPTXutil.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/NVPTX/NVPTXutil.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/InstPrinter/PPCInstPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/MCTargetDesc/PPCBaseInfo.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/MCTargetDesc/PPCPredicates.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPC.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCHazardRecognizers.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCInstrBuilder.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCInstrInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/PowerPC/PPCInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCJITInfo.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCMachineFunctionInfo.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCRegisterInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/PowerPC/PPCRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCRelocations.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCSelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCSubtarget.h	/^namespace llvm {$/;"	n
llvm	Target/PowerPC/PPCTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/MCTargetDesc/SparcMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/MCTargetDesc/SparcMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/Sparc.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/SparcFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/SparcISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/SparcInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/SparcMachineFunctionInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/SparcRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/SparcSelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/SparcSubtarget.h	/^namespace llvm {$/;"	n
llvm	Target/Sparc/SparcTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/TargetMachine.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/X86/Disassembler/X86Disassembler.cpp	/^namespace llvm {  $/;"	n	file:
llvm	Target/X86/Disassembler/X86Disassembler.h	/^namespace llvm {$/;"	n
llvm	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/X86/InstPrinter/X86InstComments.h	/^namespace llvm {$/;"	n
llvm	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/X86/MCTargetDesc/X86BaseInfo.h	/^namespace llvm {$/;"	n
llvm	Target/X86/MCTargetDesc/X86FixupKinds.h	/^namespace llvm {$/;"	n
llvm	Target/X86/MCTargetDesc/X86MCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/X86/MCTargetDesc/X86MCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/X86/MCTargetDesc/X86WinCOFFObjectWriter.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/X86/Utils/X86ShuffleDecode.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/X86/Utils/X86ShuffleDecode.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86AsmPrinter.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86COFFMachineModuleInfo.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86ELFWriterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86FastISel.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/X86/X86FrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86ISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86InstrBuilder.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86InstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86JITInfo.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86MachineFunctionInfo.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86RegisterInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/X86/X86RegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86Relocations.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86SelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86Subtarget.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86TargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/X86/X86TargetObjectFile.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/MCTargetDesc/XCoreMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/MCTargetDesc/XCoreMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCore.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCoreFrameLowering.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCoreISelLowering.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCoreInstrInfo.cpp	/^namespace llvm {$/;"	n	file:
llvm	Target/XCore/XCoreInstrInfo.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCoreMachineFunctionInfo.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCoreRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCoreSelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCoreSubtarget.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCoreTargetMachine.h	/^namespace llvm {$/;"	n
llvm	Target/XCore/XCoreTargetObjectFile.h	/^namespace llvm {$/;"	n
llvm	Transforms/IPO/FunctionAttrs.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/IPO/MergeFunctions.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/InstCombine/InstCombine.h	/^namespace llvm {$/;"	n
llvm	Transforms/InstCombine/InstCombinePHI.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/InstCombine/InstCombineWorklist.h	/^namespace llvm {$/;"	n
llvm	Transforms/Instrumentation/BlackList.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/Instrumentation/BlackList.h	/^namespace llvm {$/;"	n
llvm	Transforms/Instrumentation/MaximumSpanningTree.h	/^namespace llvm {$/;"	n
llvm	Transforms/Instrumentation/PathProfiling.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/Instrumentation/ProfilingUtils.h	/^namespace llvm {$/;"	n
llvm	Transforms/Scalar/EarlyCSE.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/Scalar/GVN.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/Utils/BypassSlowDivision.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/Utils/PromoteMemoryToRegister.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/Utils/SSAUpdater.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/Utils/SimplifyIndVar.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/Utils/SimplifyLibCalls.cpp	/^namespace llvm {$/;"	n	file:
llvm	Transforms/Vectorize/LoopVectorize.cpp	/^namespace llvm {$/;"	n	file:
llvm	VMCore/Attributes.cpp	/^namespace llvm {$/;"	n	file:
llvm	VMCore/AttributesImpl.h	/^namespace llvm {$/;"	n
llvm	VMCore/ConstantFold.h	/^namespace llvm {$/;"	n
llvm	VMCore/ConstantsContext.h	/^namespace llvm {$/;"	n
llvm	VMCore/LLVMContextImpl.h	/^namespace llvm {$/;"	n
llvm	VMCore/LeaksContext.h	/^namespace llvm {$/;"	n
llvm	VMCore/Metadata.cpp	/^namespace llvm {$/;"	n	file:
llvm	VMCore/PassManager.cpp	/^namespace llvm {$/;"	n	file:
llvm	VMCore/SymbolTableListTraitsImpl.h	/^namespace llvm {$/;"	n
llvm	VMCore/Use.cpp	/^namespace llvm {$/;"	n	file:
llvm	VMCore/User.cpp	/^namespace llvm {$/;"	n	file:
llvmDecrementHashFunction	Transforms/Instrumentation/PathProfiling.cpp	/^  Constant* llvmDecrementHashFunction;$/;"	m	class:__anon488::PathProfiler	file:
llvmIncrementHashFunction	Transforms/Instrumentation/PathProfiling.cpp	/^  Constant* llvmIncrementHashFunction;$/;"	m	class:__anon488::PathProfiler	file:
llvmSyntaxVariant	MC/MCDisassembler/EDDisassembler.cpp	/^int EDDisassembler::llvmSyntaxVariant() const {$/;"	f	class:EDDisassembler
llvm_acquire_global_lock	Support/Threading.cpp	/^void llvm::llvm_acquire_global_lock() {$/;"	f	class:llvm
llvm_execute_on_thread	Support/Threading.cpp	/^void llvm::llvm_execute_on_thread(void (*Fn)(void*), void *UserData,$/;"	f	class:llvm
llvm_is_multithreaded	Support/Threading.cpp	/^bool llvm::llvm_is_multithreaded() {$/;"	f	class:llvm
llvm_regcomp	Support/regcomp.c	/^llvm_regcomp(llvm_regex_t *preg, const char *pattern, int cflags)$/;"	f
llvm_regerror	Support/regerror.c	/^llvm_regerror(int errcode, const llvm_regex_t *preg, char *errbuf, size_t errbuf_size)$/;"	f
llvm_regex	Support/regex_impl.h	/^typedef struct llvm_regex {$/;"	s
llvm_regex_t	Support/regex_impl.h	/^} llvm_regex_t;$/;"	t	typeref:struct:llvm_regex
llvm_regexec	Support/regexec.c	/^llvm_regexec(const llvm_regex_t *preg, const char *string, size_t nmatch,$/;"	f
llvm_regfree	Support/regfree.c	/^llvm_regfree(llvm_regex_t *preg)$/;"	f
llvm_regmatch_t	Support/regex_impl.h	/^} llvm_regmatch_t;$/;"	t	typeref:struct:__anon250
llvm_regoff_t	Support/regex_impl.h	/^typedef off_t llvm_regoff_t;$/;"	t
llvm_release_global_lock	Support/Threading.cpp	/^void llvm::llvm_release_global_lock() {$/;"	f	class:llvm
llvm_shutdown	Support/ManagedStatic.cpp	/^void llvm::llvm_shutdown() {$/;"	f	class:llvm
llvm_start_multithreaded	Support/Threading.cpp	/^bool llvm::llvm_start_multithreaded() {$/;"	f	class:llvm
llvm_stop_multithreaded	Support/Threading.cpp	/^void llvm::llvm_stop_multithreaded() {$/;"	f	class:llvm
llvm_strlcpy	Support/regstrlcpy.c	/^llvm_strlcpy(char *dst, const char *src, size_t siz)$/;"	f
llvm_unreachable_internal	Support/ErrorHandling.cpp	/^void llvm::llvm_unreachable_internal(const char *msg, const char *file,$/;"	f	class:llvm
loadArchive	Archive/ArchiveReader.cpp	/^Archive::loadArchive(std::string* error) {$/;"	f	class:Archive
loadConstant	Target/XCore/XCoreRegisterInfo.cpp	/^loadConstant(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:XCoreRegisterInfo
loadFromStack	Target/XCore/XCoreFrameLowering.cpp	/^static void loadFromStack(MachineBasicBlock &MBB,$/;"	f	file:
loadImmediate	Target/Mips/MipsSEInstrInfo.cpp	/^MipsSEInstrInfo::loadImmediate(int64_t Imm, MachineBasicBlock &MBB,$/;"	f	class:MipsSEInstrInfo
loadObject	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^ObjectImage *RuntimeDyld::loadObject(ObjectBuffer *InputBuffer) {$/;"	f	class:llvm::RuntimeDyld
loadObject	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^ObjectImage *RuntimeDyldImpl::loadObject(ObjectBuffer *InputBuffer) {$/;"	f	class:llvm::RuntimeDyldImpl
loadRegFromAddr	Target/Hexagon/HexagonInstrInfo.cpp	/^void HexagonInstrInfo::loadRegFromAddr(MachineFunction &MF, unsigned DestReg,$/;"	f	class:HexagonInstrInfo
loadRegFromAddr	Target/X86/X86InstrInfo.cpp	/^void X86InstrInfo::loadRegFromAddr(MachineFunction &MF, unsigned DestReg,$/;"	f	class:X86InstrInfo
loadRegFromStackSlot	Target/ARM/ARMBaseInstrInfo.cpp	/^loadRegFromStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:ARMBaseInstrInfo
loadRegFromStackSlot	Target/ARM/Thumb1InstrInfo.cpp	/^loadRegFromStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:Thumb1InstrInfo
loadRegFromStackSlot	Target/ARM/Thumb2InstrInfo.cpp	/^loadRegFromStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:Thumb2InstrInfo
loadRegFromStackSlot	Target/CellSPU/SPUInstrInfo.cpp	/^SPUInstrInfo::loadRegFromStackSlot(MachineBasicBlock &MBB,$/;"	f	class:SPUInstrInfo
loadRegFromStackSlot	Target/Hexagon/HexagonInstrInfo.cpp	/^loadRegFromStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:HexagonInstrInfo
loadRegFromStackSlot	Target/MBlaze/MBlazeInstrInfo.cpp	/^loadRegFromStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:MBlazeInstrInfo
loadRegFromStackSlot	Target/MSP430/MSP430InstrInfo.cpp	/^void MSP430InstrInfo::loadRegFromStackSlot(MachineBasicBlock &MBB,$/;"	f	class:MSP430InstrInfo
loadRegFromStackSlot	Target/Mips/Mips16InstrInfo.cpp	/^loadRegFromStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:Mips16InstrInfo
loadRegFromStackSlot	Target/Mips/MipsSEInstrInfo.cpp	/^loadRegFromStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:MipsSEInstrInfo
loadRegFromStackSlot	Target/PowerPC/PPCInstrInfo.cpp	/^PPCInstrInfo::loadRegFromStackSlot(MachineBasicBlock &MBB,$/;"	f	class:PPCInstrInfo
loadRegFromStackSlot	Target/Sparc/SparcInstrInfo.cpp	/^loadRegFromStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:SparcInstrInfo
loadRegFromStackSlot	Target/X86/X86InstrInfo.cpp	/^void X86InstrInfo::loadRegFromStackSlot(MachineBasicBlock &MBB,$/;"	f	class:X86InstrInfo
loadRegFromStackSlot	Target/XCore/XCoreInstrInfo.cpp	/^void XCoreInstrInfo::loadRegFromStackSlot(MachineBasicBlock &MBB,$/;"	f	class:XCoreInstrInfo
loadSymbolTable	Archive/ArchiveReader.cpp	/^Archive::loadSymbolTable(std::string* ErrorMsg) {$/;"	f	class:Archive
loadiJIT_Funcs	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^static int loadiJIT_Funcs()$/;"	f	file:
locInts	CodeGen/LiveDebugVariables.cpp	/^  LocMap locInts;$/;"	m	class:__anon152::UserValue	file:
localDecls	Target/NVPTX/NVPTXAsmPrinter.h	/^  std::map<const Function *, std::vector<GlobalVariable *> > localDecls;$/;"	m	class:llvm::NVPTXAsmPrinter
localType	MC/MCDisassembler/EDToken.cpp	/^uint64_t EDToken::localType() const {$/;"	f	class:EDToken
locations	CodeGen/LiveDebugVariables.cpp	/^  SmallVector<MachineOperand, 4> locations;$/;"	m	class:__anon152::UserValue	file:
logger	Target/X86/Disassembler/X86Disassembler.cpp	/^static void logger(void* arg, const char* log) {$/;"	f	file:
lookAtByte	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int lookAtByte(struct InternalInstruction* insn, uint8_t* byte) {$/;"	f	file:
lookUpRegForValue	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::lookUpRegForValue(const Value *V) {$/;"	f	class:FastISel
lookup	Analysis/LazyValueInfo.cpp	/^    ValueCacheEntryTy &lookup(Value *V) {$/;"	f	class:__anon20::LazyValueInfoCache	file:
lookup	Target/X86/X86InstrInfo.cpp	/^static const uint16_t *lookup(unsigned opcode, unsigned domain) {$/;"	f	file:
lookup	Transforms/Scalar/GVN.cpp	/^uint32_t ValueTable::lookup(Value *V) const {$/;"	f	class:ValueTable
lookupAVX2	Target/X86/X86InstrInfo.cpp	/^static const uint16_t *lookupAVX2(unsigned opcode, unsigned domain) {$/;"	f	file:
lookupAddress	DebugInfo/DWARFDebugLine.cpp	/^DWARFDebugLine::LineTable::lookupAddress(uint64_t address) const {$/;"	f	class:DWARFDebugLine::LineTable
lookupCandidateBaseReg	CodeGen/LocalStackSlotAllocation.cpp	/^lookupCandidateBaseReg(const SmallVector<std::pair<unsigned, int64_t>, 8> &Regs,$/;"	f	file:
lookupFunction	ExecutionEngine/Interpreter/ExternalFunctions.cpp	/^static ExFunc lookupFunction(const Function *F) {$/;"	f	file:
lookupGCCName	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^lookupGCCName(const char *Name) const {$/;"	f	class:MBlazeIntrinsicInfo
lookupName	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^lookupName(const char *Name, unsigned Len) const {$/;"	f	class:MBlazeIntrinsicInfo
lookupPassInfo	VMCore/Pass.cpp	/^const PassInfo *Pass::lookupPassInfo(StringRef Arg) {$/;"	f	class:Pass
lookupPassInfo	VMCore/Pass.cpp	/^const PassInfo *Pass::lookupPassInfo(const void *TI) {$/;"	f	class:Pass
lookupSROAArgAndCost	Analysis/InlineCost.cpp	/^bool CallAnalyzer::lookupSROAArgAndCost($/;"	f	class:CallAnalyzer
lookupTarget	Support/TargetRegistry.cpp	/^const Target *TargetRegistry::lookupTarget(const std::string &ArchName,$/;"	f	class:TargetRegistry
lookupTarget	Support/TargetRegistry.cpp	/^const Target *TargetRegistry::lookupTarget(const std::string &TT,$/;"	f	class:TargetRegistry
lookupVirtReg	CodeGen/LiveDebugVariables.cpp	/^UserValue *LDVImpl::lookupVirtReg(unsigned VirtReg) {$/;"	f	class:LDVImpl
lookup_or_add	Transforms/Scalar/GVN.cpp	/^uint32_t ValueTable::lookup_or_add(Value *V) {$/;"	f	class:ValueTable
lookup_or_add_call	Transforms/Scalar/GVN.cpp	/^uint32_t ValueTable::lookup_or_add_call(CallInst *C) {$/;"	f	class:ValueTable
lookup_or_add_cmp	Transforms/Scalar/GVN.cpp	/^uint32_t ValueTable::lookup_or_add_cmp(unsigned Opcode,$/;"	f	class:ValueTable
loopHeader	Transforms/Scalar/LoopUnswitch.cpp	/^    BasicBlock *loopHeader;$/;"	m	class:__anon494::LoopUnswitch	file:
loopInfo	CodeGen/RegAllocPBQP.cpp	/^  const MachineLoopInfo *loopInfo;$/;"	m	class:__anon135::RegAllocPBQP	file:
loopInfo	CodeGen/StackSlotColoring.cpp	/^    const MachineLoopInfo *loopInfo;$/;"	m	class:__anon94::StackSlotColoring	file:
loopPreheader	Transforms/Scalar/LoopUnswitch.cpp	/^    BasicBlock *loopPreheader;$/;"	m	class:__anon494::LoopUnswitch	file:
loops	CodeGen/SpillPlacement.h	/^  const MachineLoopInfo *loops;$/;"	m	class:llvm::SpillPlacement
lostFractionThroughTruncation	Support/APFloat.cpp	/^lostFractionThroughTruncation(const integerPart *parts,$/;"	f	file:
lowBitMask	Support/APInt.cpp	/^  lowBitMask(unsigned int bits)$/;"	f	namespace:__anon243
lowHalf	Support/APInt.cpp	/^  lowHalf(integerPart part)$/;"	f	namespace:__anon243
lower	Support/StringRef.cpp	/^std::string StringRef::lower() const {$/;"	f	class:StringRef
lowerAcrossUnwindEdges	CodeGen/SjLjEHPrepare.cpp	/^void SjLjEHPrepare::lowerAcrossUnwindEdges(Function &F,$/;"	f	class:SjLjEHPrepare
lowerCRRestore	Target/PowerPC/PPCRegisterInfo.cpp	/^void PPCRegisterInfo::lowerCRRestore(MachineBasicBlock::iterator II,$/;"	f	class:PPCRegisterInfo
lowerCRSpilling	Target/PowerPC/PPCRegisterInfo.cpp	/^void PPCRegisterInfo::lowerCRSpilling(MachineBasicBlock::iterator II,$/;"	f	class:PPCRegisterInfo
lowerConstant	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static const MCExpr *lowerConstant(const Constant *CV, AsmPrinter &AP) {$/;"	f	file:
lowerDynamicAlloc	Target/PowerPC/PPCRegisterInfo.cpp	/^void PPCRegisterInfo::lowerDynamicAlloc(MachineBasicBlock::iterator II,$/;"	f	class:PPCRegisterInfo
lowerEH_SJLJ_LONGJMP	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::lowerEH_SJLJ_LONGJMP(SDValue Op,$/;"	f	class:X86TargetLowering
lowerEH_SJLJ_SETJMP	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::lowerEH_SJLJ_SETJMP(SDValue Op,$/;"	f	class:X86TargetLowering
lowerFP_EXTEND	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::lowerFP_EXTEND(SDValue Op,$/;"	f	class:X86TargetLowering
lowerIncomingArguments	CodeGen/SjLjEHPrepare.cpp	/^void SjLjEHPrepare::lowerIncomingArguments(Function &F) {$/;"	f	class:SjLjEHPrepare
lowerOperand	Target/ARM/ARMMCInstLower.cpp	/^bool ARMAsmPrinter::lowerOperand(const MachineOperand &MO,$/;"	f	class:ARMAsmPrinter
lowerOperand	Target/Mips/MipsAsmPrinter.cpp	/^bool MipsAsmPrinter::lowerOperand(const MachineOperand &MO, MCOperand &MCOp) {$/;"	f	class:MipsAsmPrinter
lowerTRUNCATE	Target/X86/X86ISelLowering.cpp	/^SDValue X86TargetLowering::lowerTRUNCATE(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:X86TargetLowering
lower_lea64_32mem	Target/X86/X86MCInstLower.cpp	/^static void lower_lea64_32mem(MCInst *MI, unsigned OpNo) {$/;"	f	file:
lower_subreg32	Target/X86/X86MCInstLower.cpp	/^static void lower_subreg32(MCInst *MI, unsigned OpNo) {$/;"	f	file:
lparen	AsmParser/LLToken.h	/^    lparen, rparen,    \/\/ (  )$/;"	e	enum:llvm::lltok::Kind
lshr	Support/APInt.cpp	/^APInt APInt::lshr(const APInt &shiftAmt) const {$/;"	f	class:APInt
lshr	Support/APInt.cpp	/^APInt APInt::lshr(unsigned shiftAmt) const {$/;"	f	class:APInt
lshr	Support/ConstantRange.cpp	/^ConstantRange::lshr(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
lshrNear	Support/APInt.cpp	/^static void lshrNear(uint64_t *Dst, uint64_t *Src, unsigned Words,$/;"	f	file:
lsl	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    lsl,$/;"	e	enum:llvm::ARM_AM::ShiftOpc
lsquare	AsmParser/LLToken.h	/^    lsquare, rsquare,  \/\/ [  ]$/;"	e	enum:llvm::lltok::Kind
lsr	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    lsr,$/;"	e	enum:llvm::ARM_AM::ShiftOpc
lss	CodeGen/RegAllocPBQP.cpp	/^  LiveStacks *lss;$/;"	m	class:__anon135::RegAllocPBQP	file:
lv_name	Transforms/Vectorize/LoopVectorize.cpp	/^static const char lv_name[] = "Loop Vectorization";$/;"	v	file:
mMap	VMCore/AsmWriter.cpp	/^  ValueMap mMap;$/;"	m	class:__anon612::SlotTracker	file:
mNext	VMCore/AsmWriter.cpp	/^  unsigned mNext;$/;"	m	class:__anon612::SlotTracker	file:
m_libHandle	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^HINSTANCE m_libHandle = NULL;$/;"	v
m_libHandle	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^void* m_libHandle = NULL;$/;"	v
macro	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool macro;$/;"	m	class:__anon421::MipsAssemblerOptions	file:
magic	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    uint32_t   magic;           \/\/ 'HASH' magic value to allow endian detection$/;"	m	struct:llvm::DwarfAccelTable::TableHeader
magic	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    unsigned char          magic[8];$/;"	m	struct:___itt_global
magic	Support/APInt.cpp	/^APInt::ms APInt::magic() const {$/;"	f	class:APInt
magic	Support/regex2.h	/^	int magic;$/;"	m	struct:re_guts
magicu	Support/APInt.cpp	/^APInt::mu APInt::magicu(unsigned LeadingZeros) const {$/;"	f	class:APInt
makeConstantRange	VMCore/Instructions.cpp	/^ICmpInst::makeConstantRange(Predicate pred, const APInt &C) {$/;"	f	class:ICmpInst
makeEdgeSpanning	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::makeEdgeSpanning(BLInstrumentationEdge* edge) {$/;"	f	class:BLInstrumentationDag
makeICmpRegion	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::makeICmpRegion(unsigned Pred,$/;"	f	class:ConstantRange
makeLiteral	MC/MCDisassembler/EDToken.cpp	/^void EDToken::makeLiteral(bool sign, uint64_t absoluteValue) {$/;"	f	class:EDToken
makeLoopInvariant	Analysis/LoopInfo.cpp	/^bool Loop::makeLoopInvariant(Instruction *I, bool &Changed,$/;"	f	class:Loop
makeLoopInvariant	Analysis/LoopInfo.cpp	/^bool Loop::makeLoopInvariant(Value *V, bool &Changed,$/;"	f	class:Loop
makeNaN	Support/APFloat.cpp	/^APFloat APFloat::makeNaN(const fltSemantics &Sem, bool SNaN, bool Negative,$/;"	f	class:APFloat
makeNaN	Support/APFloat.cpp	/^void APFloat::makeNaN(bool SNaN, bool Negative, const APInt *fill)$/;"	f	class:APFloat
makeRegister	MC/MCDisassembler/EDToken.cpp	/^void EDToken::makeRegister(unsigned registerID) {$/;"	f	class:EDToken
makeVTList	CodeGen/SelectionDAG/SelectionDAG.cpp	/^static SDVTList makeVTList(const EVT *VTs, unsigned NumVTs) {$/;"	f	file:
make_absolute	Support/PathV2.cpp	/^error_code make_absolute(SmallVectorImpl<char> &path) {$/;"	f	namespace:llvm::sys::fs
make_vector	Target/NVPTX/NVPTXUtilities.h	/^inline std::vector<T> make_vector(T A, ...) {$/;"	f	namespace:llvm
mangleName	Transforms/Instrumentation/GCOVProfiling.cpp	/^std::string GCOVProfiler::mangleName(DICompileUnit CU, const char *NewStem) {$/;"	f	class:GCOVProfiler
map	MC/WinCOFFObjectWriter.cpp	/^  typedef llvm::StringMap<size_t> map;$/;"	t	class:__anon222::StringTable	file:
mapDstLoop	Analysis/DependenceAnalysis.cpp	/^unsigned DependenceAnalysis::mapDstLoop(const Loop *DstLoop) const {$/;"	f	class:DependenceAnalysis
mapPBQPToRegAlloc	CodeGen/RegAllocPBQP.cpp	/^bool RegAllocPBQP::mapPBQPToRegAlloc(const PBQPRAProblem &problem,$/;"	f	class:RegAllocPBQP
mapSectionAddress	ExecutionEngine/MCJIT/MCJIT.h	/^  virtual void mapSectionAddress(const void *LocalAddress,$/;"	f	class:llvm::MCJIT
mapSectionAddress	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyld::mapSectionAddress(const void *LocalAddress,$/;"	f	class:llvm::RuntimeDyld
mapSectionAddress	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyldImpl::mapSectionAddress(const void *LocalAddress,$/;"	f	class:llvm::RuntimeDyldImpl
mapSrcLoop	Analysis/DependenceAnalysis.cpp	/^unsigned DependenceAnalysis::mapSrcLoop(const Loop *SrcLoop) const {$/;"	f	class:DependenceAnalysis
mapToMemory	Archive/Archive.cpp	/^Archive::mapToMemory(std::string* ErrMsg) {$/;"	f	class:Archive
mapValues	CodeGen/RegisterCoalescer.cpp	/^bool JoinVals::mapValues(JoinVals &Other) {$/;"	f	class:JoinVals
mapVirtReg	CodeGen/LiveDebugVariables.cpp	/^void LDVImpl::mapVirtReg(unsigned VirtReg, UserValue *EC) {$/;"	f	class:LDVImpl
mapVirtRegs	CodeGen/LiveDebugVariables.cpp	/^void UserValue::mapVirtRegs(LDVImpl *LDV) {$/;"	f	class:UserValue
map_begin	VMCore/ConstantsContext.h	/^  typename MapTy::iterator map_begin() { return Map.begin(); }$/;"	f	class:llvm::ConstantAggrUniqueMap
map_begin	VMCore/ConstantsContext.h	/^  typename MapTy::iterator map_begin() { return Map.begin(); }$/;"	f	class:llvm::ConstantUniqueMap
map_end	VMCore/ConstantsContext.h	/^  typename MapTy::iterator map_end() { return Map.end(); }$/;"	f	class:llvm::ConstantAggrUniqueMap
map_end	VMCore/ConstantsContext.h	/^  typename MapTy::iterator map_end() { return Map.end(); }$/;"	f	class:llvm::ConstantUniqueMap
map_from_llvmopcode	VMCore/Core.cpp	/^static int map_from_llvmopcode(LLVMOpcode code)$/;"	f	file:
map_to_llvmopcode	VMCore/Core.cpp	/^static LLVMOpcode map_to_llvmopcode(int opcode)$/;"	f	file:
markAbsoluteVariableSymbols	MC/MachObjectWriter.cpp	/^void MachObjectWriter::markAbsoluteVariableSymbols(MCAssembler &Asm,$/;"	f	class:MachObjectWriter
markAliveBlocks	Transforms/Scalar/SimplifyCFGPass.cpp	/^static bool markAliveBlocks(BasicBlock *BB,$/;"	f	file:
markAnythingOverdefined	Transforms/Scalar/SCCP.cpp	/^  void markAnythingOverdefined(Value *V) {$/;"	f	class:__anon531::SCCPSolver
markAsDead	Transforms/Scalar/SROA.cpp	/^  void markAsDead(Instruction &I) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
markAsEscaping	Transforms/Scalar/SROA.cpp	/^  bool markAsEscaping(Instruction &I) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
markChainSuccessors	CodeGen/MachineBlockPlacement.cpp	/^void MachineBlockPlacement::markChainSuccessors($/;"	f	class:MachineBlockPlacement
markConstant	Analysis/LazyValueInfo.cpp	/^  bool markConstant(Constant *V) {$/;"	f	class:__anon18::LVILatticeVal
markConstant	Transforms/Scalar/SCCP.cpp	/^  bool markConstant(Constant *V) {$/;"	f	class:__anon530::LatticeVal
markConstant	Transforms/Scalar/SCCP.cpp	/^  void markConstant(LatticeVal &IV, Value *V, Constant *C) {$/;"	f	class:__anon531::SCCPSolver	file:
markConstant	Transforms/Scalar/SCCP.cpp	/^  void markConstant(Value *V, Constant *C) {$/;"	f	class:__anon531::SCCPSolver	file:
markConstantRange	Analysis/LazyValueInfo.cpp	/^  bool markConstantRange(const ConstantRange NewR) {$/;"	f	class:__anon18::LVILatticeVal
markEdgeExecutable	Analysis/SparsePropagation.cpp	/^void SparseSolver::markEdgeExecutable(BasicBlock *Source, BasicBlock *Dest) {$/;"	f	class:SparseSolver
markEdgeExecutable	Transforms/Scalar/SCCP.cpp	/^  void markEdgeExecutable(BasicBlock *Source, BasicBlock *Dest) {$/;"	f	class:__anon531::SCCPSolver	file:
markForcedConstant	Transforms/Scalar/SCCP.cpp	/^  void markForcedConstant(Constant *V) {$/;"	f	class:__anon530::LatticeVal
markForcedConstant	Transforms/Scalar/SCCP.cpp	/^  void markForcedConstant(Value *V, Constant *C) {$/;"	f	class:__anon531::SCCPSolver	file:
markInstructionForDeletion	Transforms/Scalar/GVN.cpp	/^    void markInstructionForDeletion(Instruction *I) {$/;"	f	class:__anon537::GVN
markNotConstant	Analysis/LazyValueInfo.cpp	/^  bool markNotConstant(Constant *V) {$/;"	f	class:__anon18::LVILatticeVal
markOverdefined	Analysis/LazyValueInfo.cpp	/^  bool markOverdefined() {$/;"	f	class:__anon18::LVILatticeVal
markOverdefined	Transforms/Scalar/SCCP.cpp	/^  bool markOverdefined() {$/;"	f	class:__anon530::LatticeVal
markOverdefined	Transforms/Scalar/SCCP.cpp	/^  void markOverdefined(LatticeVal &IV, Value *V) {$/;"	f	class:__anon531::SCCPSolver	file:
markOverdefined	Transforms/Scalar/SCCP.cpp	/^  void markOverdefined(Value *V) {$/;"	f	class:__anon531::SCCPSolver
markReachable	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::markReachable(const MachineBasicBlock *MBB) {$/;"	f	class:MachineVerifier
markResult	Analysis/LazyValueInfo.cpp	/^      bool markResult(bool changed) { $/;"	f	struct:__anon20::LazyValueInfoCache::OverDefinedCacheUpdater
markValNoForDeletion	CodeGen/LiveInterval.cpp	/^void LiveInterval::markValNoForDeletion(VNInfo *ValNo) {$/;"	f	class:LiveInterval
markValueUsed	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::markValueUsed(LiveInterval *LI, VNInfo *VNI) {$/;"	f	class:InlineSpiller
mask	Support/regex2.h	/^	uch mask;		\/* bit within array *\/$/;"	m	struct:__anon232
match	CodeGen/LiveDebugVariables.cpp	/^  bool match(const MDNode *Var, unsigned Offset) const {$/;"	f	class:__anon152::UserValue
match	Support/Regex.cpp	/^bool Regex::match(StringRef String, SmallVectorImpl<StringRef> *Matches){$/;"	f	class:Regex
matchAsm	Target/X86/X86ISelLowering.cpp	/^  const VariadicFunction1<bool, StringRef, StringRef, matchAsmImpl> matchAsm={};$/;"	m	namespace:__anon370	file:
matchAsmImpl	Target/X86/X86ISelLowering.cpp	/^  bool matchAsmImpl(StringRef s, ArrayRef<const StringRef *> args) {$/;"	f	namespace:__anon370
matchEdges	Analysis/ProfileDataLoaderPass.cpp	/^unsigned ProfileMetadataLoaderPass::matchEdges(Module &M, ProfileData &PB,$/;"	f	class:ProfileMetadataLoaderPass
matchPair	CodeGen/MachineVerifier.cpp	/^static bool matchPair(MachineBasicBlock::const_succ_iterator i,$/;"	f	file:
matchRegisterByNumber	Target/Mips/AsmParser/MipsAsmParser.cpp	/^int MipsAsmParser::matchRegisterByNumber(unsigned RegNum, StringRef Mnemonic) {$/;"	f	class:MipsAsmParser
matchRegisterName	Target/Mips/AsmParser/MipsAsmParser.cpp	/^int MipsAsmParser::matchRegisterName(StringRef Name) {$/;"	f	class:MipsAsmParser
materializeForwardReferencedFunctions	Bitcode/Reader/BitcodeReader.cpp	/^void BitcodeReader::materializeForwardReferencedFunctions() {$/;"	f	class:BitcodeReader
materializeFrameBaseRegister	Target/ARM/ARMBaseRegisterInfo.cpp	/^materializeFrameBaseRegister(MachineBasicBlock *MBB,$/;"	f	class:ARMBaseRegisterInfo
materializeRegForValue	CodeGen/SelectionDAG/FastISel.cpp	/^unsigned FastISel::materializeRegForValue(const Value *V, MVT VT) {$/;"	f	class:FastISel
maxAPInt	Analysis/DependenceAnalysis.cpp	/^APInt maxAPInt(APInt A, APInt B) {$/;"	f	file:
maxElements	Transforms/IPO/ArgumentPromotion.cpp	/^    unsigned maxElements;$/;"	m	struct:__anon602::ArgPromotion	file:
maxExponent	Support/APFloat.cpp	/^    exponent_t maxExponent;$/;"	m	struct:llvm::fltSemantics	file:
maxExponent	Support/APFloat.cpp	/^  const unsigned int maxExponent = 16383;$/;"	m	namespace:llvm	file:
maxFrameOffset	Target/CellSPU/SPUFrameLowering.h	/^    static int maxFrameOffset() {$/;"	f	class:llvm::SPUFrameLowering
maxPowerOfFiveExponent	Support/APFloat.cpp	/^  const unsigned int maxPowerOfFiveExponent = maxExponent + maxPrecision - 1;$/;"	m	namespace:llvm	file:
maxPowerOfFiveParts	Support/APFloat.cpp	/^  const unsigned int maxPowerOfFiveParts = 2 + ((maxPowerOfFiveExponent * 815)$/;"	m	namespace:llvm	file:
maxPrecision	Support/APFloat.cpp	/^  const unsigned int maxPrecision = 113;$/;"	m	namespace:llvm	file:
mayAlias	CodeGen/PseudoSourceValue.cpp	/^bool FixedStackPseudoSourceValue::mayAlias(const MachineFrameInfo *MFI) const {$/;"	f	class:FixedStackPseudoSourceValue
mayAlias	CodeGen/PseudoSourceValue.cpp	/^bool PseudoSourceValue::mayAlias(const MachineFrameInfo *MFI) const {$/;"	f	class:PseudoSourceValue
mayBeEmittedAsTailCall	Target/ARM/ARMISelLowering.cpp	/^bool ARMTargetLowering::mayBeEmittedAsTailCall(CallInst *CI) const {$/;"	f	class:ARMTargetLowering
mayBeEmittedAsTailCall	Target/X86/X86ISelLowering.cpp	/^bool X86TargetLowering::mayBeEmittedAsTailCall(CallInst *CI) const {$/;"	f	class:X86TargetLowering
mayLoopAccessLocation	Transforms/Scalar/LoopIdiomRecognize.cpp	/^static bool mayLoopAccessLocation(Value *Ptr,AliasAnalysis::ModRefResult Access,$/;"	f	file:
mayNeedRelaxation	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^bool ARMAsmBackend::mayNeedRelaxation(const MCInst &Inst) const {$/;"	f	class:ARMAsmBackend
mayNeedRelaxation	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^bool MBlazeAsmBackend::mayNeedRelaxation(const MCInst &Inst) const {$/;"	f	class:__anon455::MBlazeAsmBackend
mayNeedRelaxation	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  bool mayNeedRelaxation(const MCInst &Inst) const {$/;"	f	class:__anon429::MipsAsmBackend
mayNeedRelaxation	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  bool mayNeedRelaxation(const MCInst &Inst) const {$/;"	f	class:__anon320::PPCAsmBackend
mayNeedRelaxation	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^bool X86AsmBackend::mayNeedRelaxation(const MCInst &Inst) const {$/;"	f	class:X86AsmBackend
mayOptimizeThumb2Instruction	Target/ARM/ARMConstantIslandPass.cpp	/^ARMConstantIslands::mayOptimizeThumb2Instruction(const MachineInstr *MI) const {$/;"	f	class:ARMConstantIslands
mayReadFromMemory	VMCore/Instruction.cpp	/^bool Instruction::mayReadFromMemory() const {$/;"	f	class:Instruction
mayThrow	VMCore/Instruction.cpp	/^bool Instruction::mayThrow() const {$/;"	f	class:Instruction
mayWriteToMemory	VMCore/Instruction.cpp	/^bool Instruction::mayWriteToMemory() const {$/;"	f	class:Instruction
maybeInsertAsanInitAtFunctionEntry	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::maybeInsertAsanInitAtFunctionEntry(Function &F) {$/;"	f	class:AddressSanitizer
mblazeBinary2Opcode	Target/MBlaze/Disassembler/MBlazeDisassembler.cpp	/^static const uint16_t mblazeBinary2Opcode[] = {$/;"	v	file:
mblazeIntrinsic	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^namespace mblazeIntrinsic {$/;"	n	file:
mcadd	Support/regcomp.c	/^mcadd( struct parse *p, cset *cs, const char *cp)$/;"	f	file:
mccase	Support/regcomp.c	/^mccase(struct parse *p, cset *cs)$/;"	f	file:
mcinvert	Support/regcomp.c	/^mcinvert(struct parse *p, cset *cs)$/;"	f	file:
mdPtr	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  MDNode *mdPtr;$/;"	m	class:llvm::SDDbgValue
mdnMap	VMCore/AsmWriter.cpp	/^  DenseMap<const MDNode*, unsigned> mdnMap;$/;"	m	class:__anon612::SlotTracker	file:
mdnNext	VMCore/AsmWriter.cpp	/^  unsigned mdnNext;$/;"	m	class:__anon612::SlotTracker	file:
mdn_begin	VMCore/AsmWriter.cpp	/^  mdn_iterator mdn_begin() { return mdnMap.begin(); }$/;"	f	class:__anon612::SlotTracker
mdn_empty	VMCore/AsmWriter.cpp	/^  bool mdn_empty() const { return mdnMap.empty(); }$/;"	f	class:__anon612::SlotTracker
mdn_end	VMCore/AsmWriter.cpp	/^  mdn_iterator mdn_end() { return mdnMap.end(); }$/;"	f	class:__anon612::SlotTracker
mdn_iterator	VMCore/AsmWriter.cpp	/^  typedef DenseMap<const MDNode*, unsigned>::iterator mdn_iterator;$/;"	t	class:__anon612::SlotTracker	file:
mdn_size	VMCore/AsmWriter.cpp	/^  unsigned mdn_size() const { return mdnMap.size(); }$/;"	f	class:__anon612::SlotTracker
memOpAlign	Target/ARM/ARMISelLowering.cpp	/^static bool memOpAlign(unsigned DstAlign, unsigned SrcAlign,$/;"	f	file:
memToShadow	Transforms/Instrumentation/AddressSanitizer.cpp	/^Value *AddressSanitizer::memToShadow(Value *Shadow, IRBuilder<> &IRB) {$/;"	f	class:AddressSanitizer
memmove	Support/regutils.h	52;"	d
merge	CodeGen/ExecutionDepsFix.cpp	/^bool ExeDepsFix::merge(DomainValue *A, DomainValue *B) {$/;"	f	class:ExeDepsFix
merge	CodeGen/LiveDebugVariables.cpp	/^  static UserValue *merge(UserValue *L1, UserValue *L2) {$/;"	f	class:__anon152::UserValue
merge	CodeGen/MachineBlockPlacement.cpp	/^  void merge(MachineBasicBlock *BB, BlockChain *Chain) {$/;"	f	class:__anon106::BlockChain
mergeEmptyReturnBlocks	Transforms/Scalar/SimplifyCFGPass.cpp	/^static bool mergeEmptyReturnBlocks(Function &F) {$/;"	f	file:
mergeIn	Analysis/LazyValueInfo.cpp	/^  bool mergeIn(const LVILatticeVal &RHS) {$/;"	f	class:__anon18::LVILatticeVal
mergeInValue	Transforms/Scalar/SCCP.cpp	/^  void mergeInValue(LatticeVal &IV, Value *V, LatticeVal MergeWithV) {$/;"	f	class:__anon531::SCCPSolver	file:
mergeInValue	Transforms/Scalar/SCCP.cpp	/^  void mergeInValue(Value *V, LatticeVal MergeWithV) {$/;"	f	class:__anon531::SCCPSolver	file:
mergeIntervalRanges	CodeGen/LiveInterval.cpp	/^void LiveInterval::mergeIntervalRanges(const LiveInterval &RHS,$/;"	f	class:LiveInterval
mergeSPUpdates	Target/X86/X86FrameLowering.cpp	/^static int mergeSPUpdates(MachineBasicBlock &MBB,$/;"	f	file:
mergeSPUpdatesDown	Target/X86/X86FrameLowering.cpp	/^void mergeSPUpdatesDown(MachineBasicBlock &MBB,$/;"	f	file:
mergeSPUpdatesUp	Target/X86/X86FrameLowering.cpp	/^void mergeSPUpdatesUp(MachineBasicBlock &MBB, MachineBasicBlock::iterator &MBBI,$/;"	f	file:
mergeSetIn	Analysis/AliasSetTracker.cpp	/^void AliasSet::mergeSetIn(AliasSet &AS, AliasSetTracker &AST) {$/;"	f	class:AliasSet
mergeTwoFunctions	Transforms/IPO/MergeFunctions.cpp	/^void MergeFunctions::mergeTwoFunctions(Function *F, Function *G) {$/;"	f	class:MergeFunctions
message	Object/Error.cpp	/^std::string _object_error_category::message(int ev) const {$/;"	f	class:_object_error_category
message	Support/system_error.cpp	/^_do_message::message(int ev) const {$/;"	f	class:llvm::_do_message
message	Support/system_error.cpp	/^_generic_error_category::message(int ev) const {$/;"	f	class:llvm::_generic_error_category
message	Support/system_error.cpp	/^error_code::message() const {$/;"	f	class:llvm::error_code
message	Support/system_error.cpp	/^error_condition::message() const {$/;"	f	class:llvm::error_condition
method_id	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int        method_id;              $/;"	m	struct:_iJIT_Method_Load
method_id	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int       method_id;              $/;"	m	struct:_iJIT_Method_Id
method_id	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int       method_id;              $/;"	m	struct:_iJIT_Method_NIDS
method_load_address	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    void*               method_load_address;    $/;"	m	struct:_iJIT_Method_Load
method_name	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    char*               method_name;            $/;"	m	struct:_iJIT_Method_Load
method_name	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    char*              method_name;            $/;"	m	struct:_iJIT_Method_NIDS
method_size	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int        method_size;            $/;"	m	struct:_iJIT_Method_Load
mf	CodeGen/RegAllocPBQP.cpp	/^  MachineFunction *mf;$/;"	m	class:__anon135::RegAllocPBQP	file:
mf	CodeGen/Spiller.cpp	/^  MachineFunction *mf;$/;"	m	class:__anon143::SpillerBase	file:
mfi	CodeGen/Spiller.cpp	/^  MachineFrameInfo *mfi;$/;"	m	class:__anon143::SpillerBase	file:
minAPInt	Analysis/DependenceAnalysis.cpp	/^APInt minAPInt(APInt A, APInt B) {$/;"	f	file:
minExponent	Support/APFloat.cpp	/^    exponent_t minExponent;$/;"	m	struct:llvm::fltSemantics	file:
minFrameOffset	Target/CellSPU/SPUFrameLowering.h	/^    static int minFrameOffset() {$/;"	f	class:llvm::SPUFrameLowering
minStackSize	Target/CellSPU/SPUFrameLowering.h	/^    static int minStackSize() {$/;"	f	class:llvm::SPUFrameLowering
minus	TableGen/TGLexer.h	/^    minus, plus,        \/\/ - +$/;"	e	enum:llvm::tgtok::TokKind
mixed_encoding	ExecutionEngine/JIT/JIT.cpp	/^      unsigned long mixed_encoding : 1;$/;"	m	struct:__anon185::LibgccObject::__anon186::__anon187	file:
mlen	Support/regex2.h	/^	int mlen;		\/* length of must *\/$/;"	m	struct:re_guts
mmmmmFromVEX2of3	Target/X86/Disassembler/X86DisassemblerDecoder.h	51;"	d
mod	Support/APFloat.cpp	/^APFloat::mod(const APFloat &rhs, roundingMode rounding_mode)$/;"	f	class:APFloat
modFromModRM	Target/X86/Disassembler/X86DisassemblerDecoder.h	37;"	d
modRM	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t                       modRM;$/;"	m	struct:InternalInstruction
modRMDecisions	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  struct ModRMDecision modRMDecisions[256];$/;"	m	struct:OpcodeDecision	typeref:struct:OpcodeDecision::ModRMDecision
modRMExtension	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t modRMExtension;$/;"	m	struct:InternalInstruction
modRMRequired	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int modRMRequired(OpcodeType type,$/;"	f	file:
modSpecials	Support/APFloat.cpp	/^APFloat::modSpecials(const APFloat &rhs)$/;"	f	class:APFloat
mode	Archive/ArchiveInternals.h	/^      char mode[8];   \/\/\/< file mode in ASCII octal$/;"	m	class:llvm::ArchiveMemberHeader
mode	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  DisassemblerMode mode;$/;"	m	struct:InternalInstruction
modeIEEERndNear	Target/Hexagon/HexagonSubtarget.h	/^  bool modeIEEERndNear () const { return ModeIEEERndNear; }$/;"	f	class:llvm::HexagonSubtarget
modifierBase	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  uint8_t modifierBase;$/;"	m	struct:InstructionSpecifier
modifierType	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  uint8_t modifierType;$/;"	m	struct:InstructionSpecifier
modrm_type	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  uint8_t     modrm_type;$/;"	m	struct:ModRMDecision
moveAfter	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::moveAfter(MachineBasicBlock *NewBefore) {$/;"	f	class:MachineBasicBlock
moveAfter	VMCore/BasicBlock.cpp	/^void BasicBlock::moveAfter(BasicBlock *MovePos) {$/;"	f	class:BasicBlock
moveBefore	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::moveBefore(MachineBasicBlock *NewAfter) {$/;"	f	class:MachineBasicBlock
moveBefore	VMCore/BasicBlock.cpp	/^void BasicBlock::moveBefore(BasicBlock *MovePos) {$/;"	f	class:BasicBlock
moveBefore	VMCore/Instruction.cpp	/^void Instruction::moveBefore(Instruction *MovePos) {$/;"	f	class:Instruction
moveCodeToFunction	Transforms/Utils/CodeExtractor.cpp	/^void CodeExtractor::moveCodeToFunction(Function *newFunction) {$/;"	f	class:CodeExtractor
moveInstruction	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::moveInstruction(MachineInstr *MI,$/;"	f	class:ScheduleDAGMI
moveLeft	Support/IntervalMap.cpp	/^void Path::moveLeft(unsigned Level) {$/;"	f	class:llvm::IntervalMapImpl::Path
moveRight	Support/IntervalMap.cpp	/^void Path::moveRight(unsigned Level) {$/;"	f	class:llvm::IntervalMapImpl::Path
moveSourceID	MC/MCDisassembler/EDInst.cpp	/^int EDInst::moveSourceID() {$/;"	f	class:EDInst
moveTargetID	MC/MCDisassembler/EDInst.cpp	/^int EDInst::moveTargetID() {$/;"	f	class:EDInst
moveToBlock	CodeGen/InterferenceCache.h	/^    void moveToBlock(unsigned MBBNum) {$/;"	f	class:llvm::InterferenceCache::Cursor
moveToNextSection	Object/MachOObjectFile.cpp	/^void MachOObjectFile::moveToNextSection(DataRefImpl &DRI) const {$/;"	f	class:llvm::object::MachOObjectFile
moveToNextSymbol	Object/MachOObjectFile.cpp	/^void MachOObjectFile::moveToNextSymbol(DataRefImpl &DRI) const {$/;"	f	class:llvm::object::MachOObjectFile
moveToTop	Target/X86/X86FloatingPoint.cpp	/^    void moveToTop(unsigned RegNo, MachineBasicBlock::iterator I) {$/;"	f	struct:__anon386::FPS	file:
moveTypeModule	CodeGen/AsmPrinter/DwarfException.h	/^  AsmPrinter::CFIMoveType moveTypeModule;$/;"	m	class:llvm::DwarfCFIException
moveUsesOfIAfterJ	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::moveUsesOfIAfterJ(BasicBlock &BB,$/;"	f	class:__anon604::BBVectorize
mri	CodeGen/RegAllocPBQP.cpp	/^  MachineRegisterInfo *mri;$/;"	m	class:__anon135::RegAllocPBQP	file:
mri	CodeGen/Spiller.cpp	/^  MachineRegisterInfo *mri;$/;"	m	class:__anon143::SpillerBase	file:
mul	Support/APInt.cpp	/^static void mul(uint64_t dest[], uint64_t x[], unsigned xlen, uint64_t y[],$/;"	f	file:
mul_1	Support/APInt.cpp	/^static uint64_t mul_1(uint64_t dest[], uint64_t x[], unsigned len, uint64_t y) {$/;"	f	file:
mult96bit	Support/BlockFrequency.cpp	/^void mult96bit(uint64_t freq, uint32_t N, uint64_t W[2]) {$/;"	f	namespace:__anon254
multiplicativeInverse	Support/APInt.cpp	/^APInt APInt::multiplicativeInverse(const APInt& modulo) const {$/;"	f	class:APInt
multiply	Support/APFloat.cpp	/^APFloat::multiply(const APFloat &rhs, roundingMode rounding_mode)$/;"	f	class:APFloat
multiply	Support/ConstantRange.cpp	/^ConstantRange::multiply(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
multiplySignificand	Support/APFloat.cpp	/^APFloat::multiplySignificand(const APFloat &rhs, const APFloat *addend)$/;"	f	class:APFloat
multiplySpecials	Support/APFloat.cpp	/^APFloat::multiplySpecials(const APFloat &rhs)$/;"	f	class:APFloat
multis	Support/regcclass.h	/^	const char *multis;$/;"	m	struct:cclass
multis	Support/regex2.h	/^	char *multis;		\/* -> char[smulti]  ab\\0cd\\0ef\\0\\0 *\/$/;"	m	struct:__anon232
multithreaded_mode	Support/Threading.cpp	/^static bool multithreaded_mode = false;$/;"	v	file:
must	Support/regex2.h	/^	char *must;		\/* match must contain this string *\/$/;"	m	struct:re_guts
mustAddCurrentAddress	Target/ARM/ARMConstantPoolValue.h	/^  bool mustAddCurrentAddress() const { return AddCurrentAddress; }$/;"	f	class:llvm::ARMConstantPoolValue
mustPreserveAnalysisID	VMCore/Pass.cpp	/^bool Pass::mustPreserveAnalysisID(char &AID) const {$/;"	f	class:Pass
mustSaveLR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  bool mustSaveLR() const    { return MustSaveLR; }$/;"	f	class:llvm::PPCFunctionInfo
mustSpill	CodeGen/SpillPlacement.cpp	/^  bool mustSpill() const {$/;"	f	struct:SpillPlacement::Node
mutex	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    mutex_t                mutex;$/;"	m	struct:___itt_global
mutex_initialized	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    volatile long          mutex_initialized;$/;"	m	struct:___itt_global
mutex_t	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef CRITICAL_SECTION  mutex_t;$/;"	t
mutex_t	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^typedef pthread_mutex_t   mutex_t;$/;"	t
name	Archive/ArchiveInternals.h	/^      char name[16];  \/\/\/< Name of the file member.$/;"	m	class:llvm::ArchiveMemberHeader
name	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    const char*    name;$/;"	m	struct:___itt_api_info
name	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    const char*    name;$/;"	m	struct:___itt_api_info_20101001
name	ExecutionEngine/IntelJITEvents/ittnotify_types.h	/^    const char*    name;$/;"	m	struct:___itt_group_list
name	MC/WinCOFFObjectWriter.cpp	/^typedef llvm::SmallString<COFF::NameSize> name;$/;"	t	namespace:__anon222	file:
name	Object/Error.cpp	/^const char *_object_error_category::name() const {$/;"	f	class:_object_error_category
name	Support/regcclass.h	/^	const char *name;$/;"	m	struct:cclass
name	Support/regcname.h	/^	const char *name;$/;"	m	struct:cname
name	Support/regerror.c	/^	const char *name;$/;"	m	struct:rerr	file:
name	Support/system_error.cpp	/^_generic_error_category::name() const {$/;"	f	class:llvm::_generic_error_category
name	Support/system_error.cpp	/^_system_error_category::name() const {$/;"	f	class:llvm::_system_error_category
nameA	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    const char* nameA; \/*!< Copy of original name in ASCII. *\/$/;"	m	struct:___itt_thread_info
nameW	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    const wchar_t* nameW; \/*!< Copy of original name in UNICODE. *\/$/;"	m	struct:___itt_thread_info
nameW	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    void* nameW;$/;"	m	struct:___itt_thread_info
nameWithRegisterID	MC/MCDisassembler/EDDisassembler.cpp	/^const char *EDDisassembler::nameWithRegisterID(unsigned registerID) const {$/;"	f	class:EDDisassembler
native	Support/PathV2.cpp	/^void native(const Twine &path, SmallVectorImpl<char> &result) {$/;"	f	namespace:llvm::sys::path
nbol	Support/regex2.h	/^	int nbol;		\/* number of ^ used *\/$/;"	m	struct:re_guts
ncategories	Support/regex2.h	/^	int ncategories;	\/* how many character categories *\/$/;"	m	struct:re_guts
nch	Support/regcomp.c	/^nch(struct parse *p, cset *cs)$/;"	f	file:
ncsalloc	Support/regcomp.c	/^	int ncsalloc;		\/* number of csets allocated *\/$/;"	m	struct:parse	file:
ncsets	Support/regex2.h	/^	int ncsets;		\/* number of csets in use *\/$/;"	m	struct:re_guts
necessaryPrefixLocation	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint64_t necessaryPrefixLocation;$/;"	m	struct:InternalInstruction
needGPSaveRestore	Target/MBlaze/MBlazeMachineFunction.h	/^  bool needGPSaveRestore() const { return GPHolder.SPOffset != -1; }$/;"	f	class:llvm::MBlazeFunctionInfo
needSizeDirective	Target/X86/AsmParser/X86AsmParser.cpp	/^  bool needSizeDirective() const {$/;"	f	struct:__anon336::X86Operand
needsCFIMoves	CodeGen/AsmPrinter/AsmPrinter.cpp	/^AsmPrinter::CFIMoveType AsmPrinter::needsCFIMoves() {$/;"	f	class:AsmPrinter
needsExpansion	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::needsExpansion(MCInst &Inst) {$/;"	f	class:MipsAsmParser
needsFP	Target/PowerPC/PPCFrameLowering.cpp	/^bool PPCFrameLowering::needsFP(const MachineFunction &MF) const {$/;"	f	class:PPCFrameLowering
needsFrameBaseReg	Target/ARM/ARMBaseRegisterInfo.cpp	/^needsFrameBaseReg(MachineInstr *MI, int64_t Offset) const {$/;"	f	class:ARMBaseRegisterInfo
needsFrameMoves	Target/XCore/XCoreRegisterInfo.cpp	/^bool XCoreRegisterInfo::needsFrameMoves(const MachineFunction &MF) {$/;"	f	class:XCoreRegisterInfo
needsLFTR	Transforms/Scalar/IndVarSimplify.cpp	/^static bool needsLFTR(Loop *L, DominatorTree *DT) {$/;"	f	file:
needsRelocationsForDwarfStringPool	CodeGen/AsmPrinter/AsmPrinter.cpp	/^bool AsmPrinter::needsRelocationsForDwarfStringPool() const {$/;"	f	class:AsmPrinter
needsSEHMoves	CodeGen/AsmPrinter/AsmPrinter.cpp	/^bool AsmPrinter::needsSEHMoves() {$/;"	f	class:AsmPrinter
needsStackRealignment	Target/ARM/ARMBaseRegisterInfo.cpp	/^needsStackRealignment(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
needsStackRealignment	Target/X86/X86RegisterInfo.cpp	/^bool X86RegisterInfo::needsStackRealignment(const MachineFunction &MF) const {$/;"	f	class:X86RegisterInfo
needsUnimp	Target/Sparc/DelaySlotFiller.cpp	/^bool Filler::needsUnimp(MachineBasicBlock::iterator I, unsigned &StructSize)$/;"	f	class:Filler
negativeOffsetOpcode	Target/ARM/Thumb2InstrInfo.cpp	/^negativeOffsetOpcode(unsigned opcode)$/;"	f	file:
neol	Support/regex2.h	/^	int neol;		\/* number of $ used *\/$/;"	m	struct:re_guts
never	Support/regcomp.c	/^static int never = 0;		\/* for use in asserts; shuts lint up *\/$/;"	v	file:
never	Support/regcomp.c	150;"	d	file:
newLeafBlock	Transforms/Utils/LowerSwitch.cpp	/^BasicBlock* LowerSwitch::newLeafBlock(CaseRange& Leaf, Value* Val,$/;"	f	class:LowerSwitch
newSUnit	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^SUnit *ScheduleDAGSDNodes::newSUnit(SDNode *N) {$/;"	f	class:ScheduleDAGSDNodes
next	CodeGen/AllocationOrder.h	/^  unsigned next() {$/;"	f	class:llvm::AllocationOrder
next	CodeGen/LiveDebugVariables.cpp	/^  UserValue *next;        \/\/\/< Next value in equivalence class, or null.$/;"	m	class:__anon152::UserValue	file:
next	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    struct ___itt_global*  next;$/;"	m	struct:___itt_global	typeref:struct:___itt_global::___itt_global
next	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    struct ___itt_thread_info* next;$/;"	m	struct:___itt_thread_info	typeref:struct:___itt_thread_info::___itt_thread_info
next	ExecutionEngine/JIT/JIT.cpp	/^  struct LibgccObject *next;$/;"	m	struct:__anon185::LibgccObject	typeref:struct:__anon185::LibgccObject::LibgccObject	file:
next	Support/regcomp.c	/^	char *next;		\/* next character in RE *\/$/;"	m	struct:parse	file:
next	Transforms/Utils/MetaRenamer.cpp	/^    unsigned long next;$/;"	m	struct:__anon472::PRNG	file:
nextChild	Transforms/Scalar/EarlyCSE.cpp	/^    DomTreeNode *nextChild() {$/;"	f	class:__anon566::EarlyCSE::StackNode
nextGOTIndex	ExecutionEngine/JIT/JITEmitter.cpp	/^    unsigned nextGOTIndex;$/;"	m	class:__anon182::JITResolver	file:
nextIfDebug	CodeGen/MachineScheduler.cpp	/^nextIfDebug(MachineBasicBlock::iterator I, MachineBasicBlock::iterator End) {$/;"	f	file:
nextValueNumber	Transforms/Scalar/GVN.cpp	/^    uint32_t nextValueNumber;$/;"	m	class:__anon536::ValueTable	file:
next_entry	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    struct jit_code_entry *next_entry;$/;"	m	struct:jit_code_entry	typeref:struct:jit_code_entry::jit_code_entry	file:
nl	Target/CppBackend/CPPBackend.cpp	/^formatted_raw_ostream &CppWriter::nl(formatted_raw_ostream &Out, int delta) {$/;"	f	class:CppWriter
no_modifier	Target/ARM/ARMConstantPoolValue.h	/^    no_modifier,$/;"	e	enum:llvm::ARMCP::ARMCPModifier
no_shift	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    no_shift = 0,$/;"	e	enum:llvm::ARM_AM::ShiftOpc
node	Transforms/Scalar/EarlyCSE.cpp	/^    DomTreeNode *node() { return Node; }$/;"	f	class:__anon566::EarlyCSE::StackNode
nodefaults	Target/ARM/ARMBuildAttrs.h	/^    nodefaults                = 64,$/;"	e	enum:ARMBuildAttrs::AttrType
nodes	CodeGen/SpillPlacement.h	/^  Node *nodes;$/;"	m	class:llvm::SpillPlacement
nodes_begin	Transforms/IPO/FunctionAttrs.cpp	/^    static ChildIteratorType nodes_begin(ArgumentGraph *AG) {$/;"	f	struct:llvm::GraphTraits
nodes_end	Transforms/IPO/FunctionAttrs.cpp	/^    static ChildIteratorType nodes_end(ArgumentGraph *AG) {$/;"	f	struct:llvm::GraphTraits
none	Target/CellSPU/SPUNopFiller.cpp	/^    typedef enum { none   = 0, \/\/ no more instructions in this function \/ BB$/;"	e	enum:__anon417::SPUNopFiller::__anon418	file:
nonnewline	Support/regcomp.c	/^nonnewline(struct parse *p)$/;"	f	file:
normalize	Support/APFloat.cpp	/^APFloat::normalize(roundingMode rounding_mode,$/;"	f	class:APFloat
normalize	Support/TimeValue.cpp	/^TimeValue::normalize( void ) {$/;"	f	class:llvm::TimeValue
normalize	Support/Triple.cpp	/^std::string Triple::normalize(StringRef Str) {$/;"	f	class:Triple
normalizedExponent	Support/APFloat.cpp	/^  int normalizedExponent;$/;"	m	struct:decimalInfo	file:
notDifferentParent	Analysis/BasicAliasAnalysis.cpp	/^static bool notDifferentParent(const Value *O1, const Value *O2) {$/;"	f	file:
notconstant	Analysis/LazyValueInfo.cpp	/^    notconstant,$/;"	e	enum:__anon18::LVILatticeVal::LatticeValueTy	file:
noteHead	Support/YAMLParser.cpp	/^  static void noteHead(Token*, Token*) {}$/;"	f	struct:llvm::ilist_sentinel_traits
nplus	Support/regex2.h	/^	sopno nplus;		\/* how deep does it nest +s? *\/$/;"	m	struct:re_guts
npos	Support/StringRef.cpp	/^const size_t StringRef::npos;$/;"	m	class:StringRef	file:
nstates	Support/regex2.h	/^	sopno nstates;		\/* = number of sops *\/$/;"	m	struct:re_guts
nsub	Support/regex2.h	/^	size_t nsub;		\/* copy of re_nsub *\/$/;"	m	struct:re_guts
null_func	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    void*          null_func;$/;"	m	struct:___itt_api_info
nulls	Support/raw_ostream.cpp	/^raw_ostream &llvm::nulls() {$/;"	f	class:llvm
nuls	Support/regcomp.c	/^static char nuls[10];		\/* place to point scanner in event of error *\/$/;"	v	file:
numCopiesNeeded	Target/NVPTX/VectorElementize.cpp	/^unsigned VectorElementize::numCopiesNeeded(MachineInstr *Instr) {$/;"	f	class:VectorElementize
numEdgeDestLabels	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static unsigned numEdgeDestLabels(const void *Node) {$/;"	f	struct:llvm::DOTGraphTraits
numImmediatesConsumed	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t                       numImmediatesConsumed;$/;"	m	struct:InternalInstruction
numImmediatesTranslated	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t                       numImmediatesTranslated;$/;"	m	struct:InternalInstruction
numOperands	MC/MCDisassembler/EDInst.cpp	/^int EDInst::numOperands() {$/;"	f	class:EDInst
numSymbols	Target/NVPTX/NVPTXAsmPrinter.h	/^    unsigned numSymbols;   \/\/ number of symbol addresses$/;"	m	class:llvm::NVPTXAsmPrinter::AggBuffer
numTokens	MC/MCDisassembler/EDInst.cpp	/^int EDInst::numTokens() {$/;"	f	class:EDInst
numVbrBytes	Archive/ArchiveWriter.cpp	/^static inline unsigned numVbrBytes(unsigned num) {$/;"	f	file:
num_mblaze_intrinsics	Target/MBlaze/MBlazeIntrinsicInfo.cpp	/^    , num_mblaze_intrinsics$/;"	e	enum:mblazeIntrinsic::ID	file:
num_regs	Target/NVPTX/gen-register-defs.py	/^num_regs = 396$/;"	v
numberCtrlDepsInSU	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static unsigned numberCtrlDepsInSU(SUnit *SU) {$/;"	f	file:
numberCtrlPredInSU	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^static unsigned numberCtrlPredInSU(SUnit *SU) {$/;"	f	file:
numberRCValPredInSU	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^ResourcePriorityQueue::numberRCValPredInSU(SUnit *SU, unsigned RCId) {$/;"	f	class:ResourcePriorityQueue
numberRCValSuccInSU	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^unsigned ResourcePriorityQueue::numberRCValSuccInSU(SUnit *SU,$/;"	f	class:ResourcePriorityQueue
nvTM	Target/NVPTX/NVPTXISelLowering.h	/^  NVPTXTargetMachine *nvTM;$/;"	m	class:llvm::NVPTXTargetLowering
nvptx	Target/NVPTX/NVPTXAsmPrinter.h	/^namespace nvptx {$/;"	n
nvptxSubtarget	Target/NVPTX/NVPTXAsmPrinter.h	/^  const NVPTXSubtarget &nvptxSubtarget;$/;"	m	class:llvm::NVPTXAsmPrinter
nvptxSubtarget	Target/NVPTX/NVPTXISelLowering.h	/^  const NVPTXSubtarget &nvptxSubtarget;  \/\/ cache the subtarget here$/;"	m	class:llvm::NVPTXTargetLowering
object	Object/MachOObjectFile.cpp	/^namespace object {$/;"	n	namespace:llvm	file:
objectEnd	Support/StreamableMemoryObject.cpp	/^  bool objectEnd(uint64_t address) const {$/;"	f	class:__anon236::RawMemoryObject	file:
object_category	Object/Error.cpp	/^const error_category &object::object_category() {$/;"	f	class:object
odd	Target/CellSPU/SPUNopFiller.cpp	/^                   odd    = 3 } SPUOpPlace;$/;"	e	enum:__anon417::SPUNopFiller::__anon418	file:
offset	CodeGen/LiveDebugVariables.cpp	/^  unsigned offset;        \/\/\/< Byte offset into variable.$/;"	m	class:__anon152::UserValue	file:
offsetAtIndex	DebugInfo/DWARFDebugAranges.h	/^  uint32_t offsetAtIndex(uint32_t idx) const {$/;"	f	class:llvm::DWARFDebugAranges
onDelete	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngineState::AddressMapConfig::onDelete(ExecutionEngineState *EES,$/;"	f	class:ExecutionEngineState::AddressMapConfig
onDelete	ExecutionEngine/JIT/JITEmitter.cpp	/^void CallSiteValueMapConfig::onDelete(JITResolverState *JRS, Function *F) {$/;"	f	class:CallSiteValueMapConfig
onDelete	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::EmittedFunctionConfig::onDelete($/;"	f	class:JITEmitter::EmittedFunctionConfig
onRAUW	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngineState::AddressMapConfig::onRAUW(ExecutionEngineState *,$/;"	f	class:ExecutionEngineState::AddressMapConfig
onRAUW	ExecutionEngine/JIT/JITEmitter.cpp	/^    static void onRAUW(JITResolverState *, Value *Old, Value *New) {$/;"	f	struct:__anon182::NoRAUWValueMapConfig
onRAUW	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::EmittedFunctionConfig::onRAUW($/;"	f	class:JITEmitter::EmittedFunctionConfig
onestate	Support/regexec.c	119;"	d	file:
onestate	Support/regexec.c	70;"	d	file:
onestate	Support/regexec.c	96;"	d	file:
onlyUsedByLifetimeMarkers	Analysis/ValueTracking.cpp	/^bool llvm::onlyUsedByLifetimeMarkers(const Value *V) {$/;"	f	class:llvm
op_close_agent	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^int OProfileWrapper::op_close_agent() {$/;"	f	class:llvm::OProfileWrapper
op_major_version	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^int OProfileWrapper::op_major_version() {$/;"	f	class:llvm::OProfileWrapper
op_minor_version	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^int OProfileWrapper::op_minor_version() {$/;"	f	class:llvm::OProfileWrapper
op_open_agent	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^bool OProfileWrapper::op_open_agent() {$/;"	f	class:llvm::OProfileWrapper
op_unload_native_code	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^int  OProfileWrapper::op_unload_native_code(uint64_t Addr) {$/;"	f	class:llvm::OProfileWrapper
op_write_debug_line_info	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^int OProfileWrapper::op_write_debug_line_info($/;"	f	class:llvm::OProfileWrapper
op_write_native_code	ExecutionEngine/OProfileJIT/OProfileWrapper.cpp	/^int OProfileWrapper::op_write_native_code(const char* Name,$/;"	f	class:llvm::OProfileWrapper
opcode	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t opcode;$/;"	m	struct:InternalInstruction
opcode	Transforms/Scalar/GVN.cpp	/^    uint32_t opcode;$/;"	m	struct:__anon536::Expression	file:
opcode	VMCore/ConstantsContext.h	/^  uint8_t opcode;$/;"	m	struct:llvm::ExprMapKeyType
opcodeDecisions	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  struct OpcodeDecision opcodeDecisions[IC_max];$/;"	m	struct:ContextDecision	typeref:struct:ContextDecision::OpcodeDecision
opcodeModifier	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t                       opcodeModifier;$/;"	m	struct:InternalInstruction
opcodeRegister	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  Reg                           opcodeRegister;$/;"	m	struct:InternalInstruction
opcodeType	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  OpcodeType opcodeType;$/;"	m	struct:InternalInstruction
openBottom	CodeGen/RegisterPressure.cpp	/^void IntervalPressure::openBottom(SlotIndex PrevBottom) {$/;"	f	class:IntervalPressure
openBottom	CodeGen/RegisterPressure.cpp	/^void RegionPressure::openBottom(MachineBasicBlock::const_iterator PrevBottom) {$/;"	f	class:RegionPressure
openIntv	CodeGen/SplitKit.cpp	/^unsigned SplitEditor::openIntv() {$/;"	f	class:SplitEditor
openTop	CodeGen/RegisterPressure.cpp	/^void IntervalPressure::openTop(SlotIndex NextTop) {$/;"	f	class:IntervalPressure
openTop	CodeGen/RegisterPressure.cpp	/^void RegionPressure::openTop(MachineBasicBlock::const_iterator PrevTop) {$/;"	f	class:RegionPressure
operandID	MC/MCDisassembler/EDToken.cpp	/^int EDToken::operandID() const {$/;"	f	class:EDToken
operands	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  const struct OperandSpecifier *operands;$/;"	m	struct:InternalInstruction	typeref:struct:InternalInstruction::OperandSpecifier
operands	VMCore/ConstantsContext.h	/^  std::vector<Constant*> operands;$/;"	m	struct:llvm::ExprMapKeyType
operator !=	Analysis/BasicAliasAnalysis.cpp	/^    bool operator!=(const VariableGEPIndex &Other) const {$/;"	f	struct:__anon14::VariableGEPIndex
operator !=	CodeGen/MachineSSAUpdater.cpp	/^    bool operator!=(const PHI_iterator& x) const { return !operator==(x); }$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
operator !=	Support/PathV2.cpp	/^bool const_iterator::operator!=(const const_iterator &RHS) const {$/;"	f	class:llvm::sys::path::const_iterator
operator !=	Transforms/Scalar/SROA.cpp	/^    bool operator!=(const ByteRange &RHS) const { return !operator==(RHS); }$/;"	f	struct:__anon557::AllocaPartitioning::ByteRange
operator !=	Transforms/Utils/SSAUpdater.cpp	/^    bool operator!=(const PHI_iterator& x) const { return !operator==(x); }$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
operator !=	VMCore/ConstantsContext.h	/^  bool operator!=(const ExprMapKeyType& that) const {$/;"	f	struct:llvm::ExprMapKeyType
operator !=	VMCore/ConstantsContext.h	/^  bool operator!=(const InlineAsmKeyType& that) const {$/;"	f	struct:llvm::InlineAsmKeyType
operator !=	VMCore/LLVMContextImpl.h	/^    bool operator!=(const KeyTy& that) const {$/;"	f	struct:llvm::AnonStructTypeKeyInfo::KeyTy
operator !=	VMCore/LLVMContextImpl.h	/^    bool operator!=(const KeyTy& that) const {$/;"	f	struct:llvm::DenseMapAPFloatKeyInfo::KeyTy
operator !=	VMCore/LLVMContextImpl.h	/^    bool operator!=(const KeyTy& that) const {$/;"	f	struct:llvm::DenseMapAPIntKeyInfo::KeyTy
operator !=	VMCore/LLVMContextImpl.h	/^    bool operator!=(const KeyTy& that) const {$/;"	f	struct:llvm::FunctionTypeKeyInfo::KeyTy
operator &=	Support/APInt.cpp	/^APInt& APInt::operator&=(const APInt& RHS) {$/;"	f	class:APInt
operator ()	Analysis/ScalarEvolution.cpp	/^    bool operator()(const APInt &LHS, const APInt &RHS) const {$/;"	f	struct:__anon31::APIntCompare
operator ()	Analysis/ScalarEvolution.cpp	/^    bool operator()(const SCEV *LHS, const SCEV *RHS) const {$/;"	f	class:__anon30::SCEVComplexityCompare
operator ()	Analysis/ScalarEvolutionExpander.cpp	/^  bool operator()(std::pair<const Loop *, const SCEV *> LHS,$/;"	f	class:__anon22::LoopCompare
operator ()	Bitcode/Writer/ValueEnumerator.cpp	/^    bool operator()(const std::pair<const Value*, unsigned> &LHS,$/;"	f	struct:__anon56::CstSortPredicate
operator ()	CodeGen/LatencyPriorityQueue.cpp	/^bool latency_sort::operator()(const SUnit *LHS, const SUnit *RHS) const {$/;"	f	class:latency_sort
operator ()	CodeGen/MachineBlockPlacement.cpp	/^  bool operator()(MachineBasicBlock *BB) const {$/;"	f	class:__anon108::IsBlockPlaced
operator ()	CodeGen/MachineScheduler.cpp	/^  bool operator()(SUnit *A, SUnit *B) const {$/;"	f	struct:__anon129::SUnitOrder
operator ()	CodeGen/MachineScheduler.cpp	/^  bool operator()(const SUnit *A, const SUnit *B) const {$/;"	f	struct:__anon128::ILPOrder
operator ()	CodeGen/MachineSink.cpp	/^    bool operator()(const MachineBasicBlock *LHS,$/;"	f	struct:__anon101::SuccessorSorter
operator ()	CodeGen/RegAllocBasic.cpp	/^    bool operator()(LiveInterval *A, LiveInterval *B) const {$/;"	f	struct:__anon121::CompSpillWeight
operator ()	CodeGen/RegisterCoalescer.cpp	/^    bool operator()(const DepthMBBPair &LHS, const DepthMBBPair &RHS) const {$/;"	f	struct:__anon116::DepthMBBCompare
operator ()	CodeGen/SelectionDAG/DAGCombiner.cpp	/^  bool operator()(MemOpLink LHS, MemOpLink RHS) {$/;"	f	struct:ConsecutiveMemoryChainSorter
operator ()	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^bool resource_sort::operator()(const SUnit *LHS, const SUnit *RHS) const {$/;"	f	class:resource_sort
operator ()	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool operator()(SUnit* left, SUnit* right) const {$/;"	f	struct:__anon77::reverse_sort
operator ()	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^bool bu_ls_rr_sort::operator()(SUnit *left, SUnit *right) const {$/;"	f	class:bu_ls_rr_sort
operator ()	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^bool hybrid_ls_rr_sort::operator()(SUnit *left, SUnit *right) const {$/;"	f	class:hybrid_ls_rr_sort
operator ()	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^bool ilp_ls_rr_sort::operator()(SUnit *left, SUnit *right) const {$/;"	f	class:ilp_ls_rr_sort
operator ()	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^bool src_ls_rr_sort::operator()(SUnit *left, SUnit *right) const {$/;"	f	class:src_ls_rr_sort
operator ()	CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp	/^    bool operator()(const std::pair<unsigned, MachineInstr*> &A,$/;"	f	struct:__anon88::OrderSorter
operator ()	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    bool operator()(const CaseBits &C1, const CaseBits &C2) {$/;"	f	struct:llvm::SelectionDAGBuilder::CaseBitsCmp
operator ()	CodeGen/StackColoring.cpp	/^    bool operator()(int LHS, int RHS) {$/;"	f	struct:__anon113::StackColoring::SlotSizeSorter
operator ()	CodeGen/StackSlotColoring.cpp	/^    bool operator()(LiveInterval* LHS, LiveInterval* RHS) const {$/;"	f	struct:__anon95::IntervalSorter
operator ()	CodeGen/StrongPHIElimination.cpp	/^    bool operator()(const MachineInstr *LHS, const MachineInstr *RHS) const {$/;"	f	struct:__anon154::MIIndexCompare
operator ()	DebugInfo/DWARFContext.cpp	/^    bool operator()(const DWARFCompileUnit &LHS, uint32_t RHS) const {$/;"	f	struct:__anon172::OffsetComparator
operator ()	DebugInfo/DWARFContext.cpp	/^    bool operator()(const DWARFCompileUnit &LHS,$/;"	f	struct:__anon172::OffsetComparator
operator ()	DebugInfo/DWARFContext.cpp	/^    bool operator()(uint32_t LHS, const DWARFCompileUnit &RHS) const {$/;"	f	struct:__anon172::OffsetComparator
operator ()	DebugInfo/DWARFDebugArangeSet.cpp	/^    bool operator()(const DWARFDebugArangeSet::Descriptor &desc) const {$/;"	f	class:__anon171::DescriptorContainsAddress
operator ()	DebugInfo/DWARFDebugAranges.cpp	/^    void operator()(const DWARFDebugArangeSet &set) {$/;"	f	class:__anon173::CountArangeDescriptors
operator ()	DebugInfo/DWARFDebugAranges.cpp	/^    void operator()(const DWARFDebugArangeSet& set) {$/;"	f	class:__anon173::AddArangeDescriptors
operator ()	Support/Statistic.cpp	/^  bool operator()(const Statistic *LHS, const Statistic *RHS) const {$/;"	f	struct:__anon241::NameCompare
operator ()	Target/ARM/ARMLoadStoreOptimizer.cpp	/^    bool operator()(const MachineInstr *LHS, const MachineInstr *RHS) const {$/;"	f	struct:__anon305::OffsetCompare
operator ()	Transforms/Instrumentation/MaximumSpanningTree.h	/^      bool operator()(EdgeWeight X, EdgeWeight Y) const {$/;"	f	struct:llvm::MaximumSpanningTree::EdgeWeightCompare
operator ()	Transforms/Scalar/DeadStoreElimination.cpp	/^    bool operator()(Value *I) {$/;"	f	struct:__anon554::CouldRef
operator ()	Transforms/Scalar/DeadStoreElimination.cpp	/^    bool operator()(Value *I) {$/;"	f	struct:__anon555::CouldAlias
operator ()	Transforms/Scalar/GlobalMerge.cpp	/^      bool operator()(const GlobalVariable *GV1, const GlobalVariable *GV2) {$/;"	f	struct:__anon567::GlobalMerge::GlobalCmp
operator ()	Transforms/Scalar/Reassociate.cpp	/^      bool operator()(const Factor &LHS, const Factor &RHS) {$/;"	f	struct:__anon548::Factor::BaseEqual
operator ()	Transforms/Scalar/Reassociate.cpp	/^      bool operator()(const Factor &LHS, const Factor &RHS) {$/;"	f	struct:__anon548::Factor::BaseSorter
operator ()	Transforms/Scalar/Reassociate.cpp	/^      bool operator()(const Factor &LHS, const Factor &RHS) {$/;"	f	struct:__anon548::Factor::PowerDescendingSorter
operator ()	Transforms/Scalar/Reassociate.cpp	/^      bool operator()(const Factor &LHS, const Factor &RHS) {$/;"	f	struct:__anon548::Factor::PowerEqual
operator ()	Transforms/Scalar/Reassociate.cpp	/^    bool operator()(const ValueEntry &Entry) {$/;"	f	struct:__anon550::IsValueInMap
operator ()	Transforms/Scalar/SROA.cpp	/^    bool operator()(AllocaInst *AI) const { return Set.count(AI); }$/;"	f	class:__anon563::IsAllocaInSet
operator ()	Transforms/Scalar/SROA.cpp	/^  bool operator()() {$/;"	f	class:AllocaPartitioning::PartitionBuilder
operator ()	Transforms/Scalar/SROA.cpp	/^  void operator()() {$/;"	f	class:AllocaPartitioning::UseBuilder
operator ()	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    bool operator()(const DomTreeNodePair &LHS, const DomTreeNodePair &RHS) {$/;"	f	struct:__anon469::DomTreeNodeCompare
operator ()	Transforms/Utils/PromoteMemoryToRegister.cpp	/^  bool operator()(const std::pair<unsigned, StoreInst*> &LHS,$/;"	f	struct:__anon470::StoreIndexSearchPredicate
operator ()	Transforms/Utils/SimplifyCFG.cpp	/^    bool operator()(const ConstantInt *LHS, const ConstantInt *RHS) const {$/;"	f	struct:__anon479::ConstantIntOrdering
operator ()	VMCore/LLVMContextImpl.cpp	/^  void operator()(const PairT &P) {$/;"	f	struct:__anon608::DropFirst
operator ()	VMCore/LLVMContextImpl.cpp	/^  void operator()(const PairT &P) {$/;"	f	struct:__anon608::DropReferences
operator *	Support/APInt.cpp	/^APInt APInt::operator*(const APInt& RHS) const {$/;"	f	class:APInt
operator *	Support/BlockFrequency.cpp	/^BlockFrequency::operator*(const BranchProbability &Prob) const {$/;"	f	class:BlockFrequency
operator *=	Support/APInt.cpp	/^APInt& APInt::operator*=(const APInt& RHS) {$/;"	f	class:APInt
operator *=	Support/BlockFrequency.cpp	/^BlockFrequency &BlockFrequency::operator*=(const BranchProbability &Prob) {$/;"	f	class:BlockFrequency
operator +	Support/APInt.cpp	/^APInt APInt::operator+(const APInt& RHS) const {$/;"	f	class:APInt
operator +	Support/BlockFrequency.cpp	/^BlockFrequency::operator+(const BlockFrequency &Prob) const {$/;"	f	class:BlockFrequency
operator ++	CodeGen/MachineSSAUpdater.cpp	/^    PHI_iterator &operator++() { idx += 2; return *this; } $/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
operator ++	Support/APInt.cpp	/^APInt& APInt::operator++() {$/;"	f	class:APInt
operator ++	Support/PathV2.cpp	/^const_iterator &const_iterator::operator++() {$/;"	f	class:llvm::sys::path::const_iterator
operator ++	Transforms/Utils/SSAUpdater.cpp	/^    PHI_iterator &operator++() { ++idx; return *this; } $/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
operator +=	Support/APInt.cpp	/^APInt& APInt::operator+=(const APInt& RHS) {$/;"	f	class:APInt
operator +=	Support/BlockFrequency.cpp	/^BlockFrequency &BlockFrequency::operator+=(const BlockFrequency &Freq) {$/;"	f	class:BlockFrequency
operator -	Support/APInt.cpp	/^APInt APInt::operator-(const APInt& RHS) const {$/;"	f	class:APInt
operator -	Support/PathV2.cpp	/^ptrdiff_t const_iterator::operator-(const const_iterator &RHS) const {$/;"	f	class:llvm::sys::path::const_iterator
operator --	Support/APInt.cpp	/^APInt& APInt::operator--() {$/;"	f	class:APInt
operator --	Support/PathV2.cpp	/^const_iterator &const_iterator::operator--() {$/;"	f	class:llvm::sys::path::const_iterator
operator -=	Support/APInt.cpp	/^APInt& APInt::operator-=(const APInt& RHS) {$/;"	f	class:APInt
operator <	AsmParser/LLParser.h	/^    bool operator<(const ValID &RHS) const {$/;"	f	struct:llvm::ValID
operator <	CodeGen/BranchFolding.cpp	/^BranchFolder::MergePotentialsElt::operator<(const MergePotentialsElt &o) const {$/;"	f	class:BranchFolder::MergePotentialsElt
operator <	CodeGen/LocalStackSlotAllocation.cpp	/^    bool operator<(const FrameRef &RHS) const {$/;"	f	class:__anon136::FrameRef
operator <	CodeGen/RegAllocGreedy.cpp	/^    bool operator<(const EvictionCost &O) const {$/;"	f	struct:__anon158::RAGreedy::EvictionCost
operator <	CodeGen/SelectionDAG/SelectionDAG.cpp	/^  bool operator<(const UseMemo &L, const UseMemo &R) {$/;"	f	namespace:__anon74
operator <	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  inline bool operator <(const RelocationValueRef &Other) const {$/;"	f	class:llvm::RelocationValueRef
operator <	MC/ELFObjectWriter.cpp	/^      bool operator<(const ELFSymbolData &RHS) const {$/;"	f	struct:__anon225::ELFObjectWriter::ELFSymbolData
operator <	MC/MCDisassembler/EDDisassembler.h	/^    bool operator<(const CPUKey &key) const {$/;"	f	struct:llvm::EDDisassembler::CPUKey
operator <	MC/MachObjectWriter.cpp	/^MachSymbolData::operator<(const MachSymbolData &RHS) const {$/;"	f	class:MachObjectWriter::MachSymbolData
operator <	Support/FoldingSet.cpp	/^bool FoldingSetNodeID::operator<(FoldingSetNodeIDRef RHS) const {$/;"	f	class:FoldingSetNodeID
operator <	Support/FoldingSet.cpp	/^bool FoldingSetNodeID::operator<(const FoldingSetNodeID &RHS)const{$/;"	f	class:FoldingSetNodeID
operator <	Support/FoldingSet.cpp	/^bool FoldingSetNodeIDRef::operator<(FoldingSetNodeIDRef RHS) const {$/;"	f	class:FoldingSetNodeIDRef
operator <	Support/Path.cpp	/^bool Path::operator<(const Path& that) const {$/;"	f	class:Path
operator <	Target/ARM/ARMExpandPseudoInsts.cpp	/^    bool operator<(const NEONLdStTableEntry &TE) const {$/;"	f	struct:__anon312::NEONLdStTableEntry
operator <	Target/ARM/ARMExpandPseudoInsts.cpp	/^    friend bool LLVM_ATTRIBUTE_UNUSED operator<(unsigned PseudoOpc,$/;"	f	struct:__anon312::NEONLdStTableEntry
operator <	Target/ARM/ARMExpandPseudoInsts.cpp	/^    friend bool operator<(const NEONLdStTableEntry &TE, unsigned PseudoOpc) {$/;"	f	struct:__anon312::NEONLdStTableEntry
operator <	Target/X86/X86FloatingPoint.cpp	/^    bool operator<(const TableEntry &TE) const { return from < TE.from; }$/;"	f	struct:__anon388::TableEntry
operator <	Target/X86/X86FloatingPoint.cpp	/^    friend bool LLVM_ATTRIBUTE_UNUSED operator<(unsigned V,$/;"	f	struct:__anon388::TableEntry
operator <	Target/X86/X86FloatingPoint.cpp	/^    friend bool operator<(const TableEntry &TE, unsigned V) {$/;"	f	struct:__anon388::TableEntry
operator <	Transforms/IPO/DeadArgumentElimination.cpp	/^      bool operator<(const RetOrArg &O) const {$/;"	f	struct:__anon600::DAE::RetOrArg
operator <	Transforms/InstCombine/InstCombinePHI.cpp	/^  bool operator<(const PHIUsageRecord &RHS) const {$/;"	f	struct:__anon603::PHIUsageRecord
operator <	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool Cost::operator<(const Cost &Other) const {$/;"	f	class:Cost
operator <	Transforms/Scalar/Reassociate.cpp	/^  inline bool operator<(const ValueEntry &LHS, const ValueEntry &RHS) {$/;"	f	namespace:__anon547
operator <	Transforms/Scalar/SROA.cpp	/^    bool operator<(const ByteRange &RHS) const {$/;"	f	struct:__anon557::AllocaPartitioning::ByteRange
operator <	Transforms/Scalar/SROA.cpp	/^    friend LLVM_ATTRIBUTE_UNUSED bool operator<(uint64_t LHSOffset,$/;"	f	struct:__anon557::AllocaPartitioning::ByteRange
operator <	Transforms/Scalar/SROA.cpp	/^    friend bool operator<(const ByteRange &LHS, uint64_t RHSOffset) {$/;"	f	struct:__anon557::AllocaPartitioning::ByteRange
operator <	Transforms/Utils/SimplifyCFG.cpp	/^    bool operator<(ValueEqualityComparisonCase RHS) const {$/;"	f	struct:__anon478::ValueEqualityComparisonCase
operator <	VMCore/ConstantsContext.h	/^  bool operator<(const ExprMapKeyType & that) const {$/;"	f	struct:llvm::ExprMapKeyType
operator <	VMCore/ConstantsContext.h	/^  bool operator<(const InlineAsmKeyType& that) const {$/;"	f	struct:llvm::InlineAsmKeyType
operator <<	Analysis/LazyValueInfo.cpp	/^raw_ostream &operator<<(raw_ostream &OS, const LVILatticeVal &Val) {$/;"	f	namespace:llvm
operator <<	Analysis/ProfileDataLoader.cpp	/^raw_ostream &llvm::operator<<(raw_ostream &O, std::pair<const BasicBlock *,$/;"	f	class:llvm
operator <<	Analysis/ProfileInfo.cpp	/^raw_ostream& operator<<(raw_ostream &O, const MachineBasicBlock *MBB) {$/;"	f	namespace:llvm
operator <<	Analysis/ProfileInfo.cpp	/^raw_ostream& operator<<(raw_ostream &O, const MachineFunction *MF) {$/;"	f	namespace:llvm
operator <<	Analysis/ProfileInfo.cpp	/^raw_ostream& operator<<(raw_ostream &O, std::pair<const MachineBasicBlock *, const MachineBasicBlock *> E) {$/;"	f	namespace:llvm
operator <<	CodeGen/InlineSpiller.cpp	/^static raw_ostream &operator<<(raw_ostream &OS,$/;"	f	file:
operator <<	CodeGen/LiveInterval.cpp	/^raw_ostream& llvm::operator<<(raw_ostream& os, const LiveRange &LR) {$/;"	f	class:llvm
operator <<	CodeGen/MachineBasicBlock.cpp	/^raw_ostream &llvm::operator<<(raw_ostream &OS, const MachineBasicBlock &MBB) {$/;"	f	class:llvm
operator <<	CodeGen/MachineInstr.cpp	/^raw_ostream &llvm::operator<<(raw_ostream &OS, const MachineMemOperand &MMO) {$/;"	f	class:llvm
operator <<	CodeGen/MachineLoopRanges.cpp	/^raw_ostream &llvm::operator<<(raw_ostream &OS, const MachineLoopRange &MLR) {$/;"	f	class:llvm
operator <<	CodeGen/MachineTraceMetrics.h	/^inline raw_ostream &operator<<(raw_ostream &OS,$/;"	f	namespace:llvm
operator <<	CodeGen/ScheduleDAGInstrs.cpp	/^raw_ostream &operator<<(raw_ostream &OS, const ILPValue &Val) {$/;"	f	namespace:llvm
operator <<	CodeGen/VirtRegMap.h	/^  inline raw_ostream &operator<<(raw_ostream &OS, const VirtRegMap &VRM) {$/;"	f	namespace:llvm
operator <<	MC/MCAssembler.cpp	/^raw_ostream &operator<<(raw_ostream &OS, const MCFixup &AF) {$/;"	f	namespace:llvm
operator <<	Support/BlockFrequency.cpp	/^raw_ostream &operator<<(raw_ostream &OS, const BlockFrequency &Freq) {$/;"	f	namespace:llvm
operator <<	Support/BranchProbability.cpp	/^raw_ostream &operator<<(raw_ostream &OS, const BranchProbability &Prob) {$/;"	f	namespace:llvm
operator <<	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::operator<<(const format_object_base &Fmt) {$/;"	f	class:raw_ostream
operator <<	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::operator<<(const void *P) {$/;"	f	class:raw_ostream
operator <<	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::operator<<(double N) {$/;"	f	class:raw_ostream
operator <<	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::operator<<(long N) {$/;"	f	class:raw_ostream
operator <<	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::operator<<(long long N) {$/;"	f	class:raw_ostream
operator <<	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::operator<<(unsigned long N) {$/;"	f	class:raw_ostream
operator <<	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::operator<<(unsigned long long N) {$/;"	f	class:raw_ostream
operator <<	TableGen/Record.cpp	/^raw_ostream &llvm::operator<<(raw_ostream &OS, const Record &R) {$/;"	f	class:llvm
operator <<	TableGen/Record.cpp	/^raw_ostream &llvm::operator<<(raw_ostream &OS, const RecordKeeper &RK) {$/;"	f	class:llvm
operator <<	Target/ARM/ARMConstantPoolValue.h	/^inline raw_ostream &operator<<(raw_ostream &O, const ARMConstantPoolValue &V) {$/;"	f	namespace:llvm
operator <<	Transforms/Instrumentation/PathProfiling.cpp	/^  raw_ostream& operator<<(raw_ostream& os,$/;"	f	namespace:llvm
operator <<	Transforms/Utils/LowerSwitch.cpp	/^static raw_ostream& operator<<(raw_ostream &O,$/;"	f	file:
operator =	Analysis/AliasSetTracker.cpp	/^AliasSetTracker::ASTCallbackVH::operator=(Value *V) {$/;"	f	class:AliasSetTracker::ASTCallbackVH
operator =	CodeGen/InterferenceCache.h	/^    Cursor &operator=(const Cursor &O) {$/;"	f	class:llvm::InterferenceCache::Cursor
operator =	Support/APFloat.cpp	/^APFloat::operator=(const APFloat &rhs)$/;"	f	class:APFloat
operator =	Support/APInt.cpp	/^APInt& APInt::operator=(uint64_t RHS) {$/;"	f	class:APInt
operator =	Support/CommandLine.cpp	/^  void operator=(bool OptionWasSpecified) {$/;"	f	class:__anon248::VersionPrinter
operator =	Support/CommandLine.cpp	/^  void operator=(bool Value) {$/;"	f	class:__anon247::HelpPrinter
operator =	Support/Debug.cpp	/^  void operator=(const std::string &Val) const {$/;"	f	struct:__anon253::DebugOnlyOpt
operator =	Support/PluginLoader.cpp	/^void PluginLoader::operator=(const std::string &Filename) {$/;"	f	class:PluginLoader
operator =	Support/Windows/Windows.h	/^  ScopedHandle &operator=(handle_type h) {$/;"	f	class:ScopedHandle
operator =	VMCore/Attributes.cpp	/^const AttrListPtr &AttrListPtr::operator=(const AttrListPtr &RHS) {$/;"	f	class:AttrListPtr
operator ==	Analysis/BasicAliasAnalysis.cpp	/^    bool operator==(const VariableGEPIndex &Other) const {$/;"	f	struct:__anon14::VariableGEPIndex
operator ==	CodeGen/MachineSSAUpdater.cpp	/^    bool operator==(const PHI_iterator& x) const { return idx == x.idx; }$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
operator ==	ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h	/^  inline bool operator==(const RelocationValueRef &Other) const {$/;"	f	class:llvm::RelocationValueRef
operator ==	MC/MCDisassembler/EDDisassembler.h	/^    bool operator==(const CPUKey &key) const {$/;"	f	struct:llvm::EDDisassembler::CPUKey
operator ==	Support/FoldingSet.cpp	/^bool FoldingSetNodeID::operator==(FoldingSetNodeIDRef RHS) const {$/;"	f	class:FoldingSetNodeID
operator ==	Support/FoldingSet.cpp	/^bool FoldingSetNodeID::operator==(const FoldingSetNodeID &RHS)const{$/;"	f	class:FoldingSetNodeID
operator ==	Support/FoldingSet.cpp	/^bool FoldingSetNodeIDRef::operator==(FoldingSetNodeIDRef RHS) const {$/;"	f	class:FoldingSetNodeIDRef
operator ==	Support/Path.cpp	/^bool Path::operator==(const Path &that) const {$/;"	f	class:Path
operator ==	Support/PathV2.cpp	/^bool const_iterator::operator==(const const_iterator &RHS) const {$/;"	f	class:llvm::sys::path::const_iterator
operator ==	Support/YAMLParser.cpp	/^  bool operator ==(const SimpleKey &Other) {$/;"	f	struct:__anon244::SimpleKey
operator ==	Transforms/IPO/DeadArgumentElimination.cpp	/^      bool operator==(const RetOrArg &O) const {$/;"	f	struct:__anon600::DAE::RetOrArg
operator ==	Transforms/Scalar/GVN.cpp	/^    bool operator==(const Expression &other) const {$/;"	f	struct:__anon536::Expression
operator ==	Transforms/Scalar/SROA.cpp	/^    bool operator==(const ByteRange &RHS) const {$/;"	f	struct:__anon557::AllocaPartitioning::ByteRange
operator ==	Transforms/Utils/SSAUpdater.cpp	/^    bool operator==(const PHI_iterator& x) const { return idx == x.idx; }$/;"	f	class:llvm::SSAUpdaterTraits::PHI_iterator
operator ==	Transforms/Utils/SimplifyCFG.cpp	/^    bool operator==(BasicBlock *RHSDest) const { return Dest == RHSDest; }$/;"	f	struct:__anon478::ValueEqualityComparisonCase
operator ==	VMCore/ConstantsContext.h	/^  bool operator==(const ExprMapKeyType& that) const {$/;"	f	struct:llvm::ExprMapKeyType
operator ==	VMCore/ConstantsContext.h	/^  bool operator==(const InlineAsmKeyType& that) const {$/;"	f	struct:llvm::InlineAsmKeyType
operator ==	VMCore/DataLayout.cpp	/^LayoutAlignElem::operator==(const LayoutAlignElem &rhs) const {$/;"	f	class:LayoutAlignElem
operator ==	VMCore/DataLayout.cpp	/^PointerAlignElem::operator==(const PointerAlignElem &rhs) const {$/;"	f	class:PointerAlignElem
operator ==	VMCore/LLVMContextImpl.h	/^    bool operator==(const KeyTy& that) const {$/;"	f	struct:llvm::AnonStructTypeKeyInfo::KeyTy
operator ==	VMCore/LLVMContextImpl.h	/^    bool operator==(const KeyTy& that) const {$/;"	f	struct:llvm::DenseMapAPFloatKeyInfo::KeyTy
operator ==	VMCore/LLVMContextImpl.h	/^    bool operator==(const KeyTy& that) const {$/;"	f	struct:llvm::DenseMapAPIntKeyInfo::KeyTy
operator ==	VMCore/LLVMContextImpl.h	/^    bool operator==(const KeyTy& that) const {$/;"	f	struct:llvm::FunctionTypeKeyInfo::KeyTy
operator []	Analysis/RegionInfo.cpp	/^Region *RegionInfo::operator[](BasicBlock *BB) const {$/;"	f	class:RegionInfo
operator []	Bitcode/Reader/BitcodeReader.h	/^  Value *operator[](unsigned i) const {$/;"	f	class:llvm::BitcodeReaderMDValueList
operator []	Bitcode/Reader/BitcodeReader.h	/^  Value *operator[](unsigned i) const {$/;"	f	class:llvm::BitcodeReaderValueList
operator []	CodeGen/LiveIntervalUnion.h	/^    LiveIntervalUnion& operator[](unsigned idx) {$/;"	f	class:llvm::LiveIntervalUnion::Array
operator []	Transforms/IPO/FunctionAttrs.cpp	/^    ArgumentGraphNode *operator[](Argument *A) {$/;"	f	class:__anon579::ArgumentGraph
operator []	Transforms/Scalar/ObjCARC.cpp	/^    ValueT &operator[](const KeyT &Arg) {$/;"	f	class:__anon498::MapVector
operator []	VMCore/DataLayout.cpp	/^  StructLayout *&operator[](StructType *STy) {$/;"	f	class:__anon617::StructLayoutMap
operator ^=	Support/APInt.cpp	/^APInt& APInt::operator^=(const APInt& RHS) {$/;"	f	class:APInt
operator bool	Support/Windows/Windows.h	/^  operator bool() const {$/;"	f	class:ScopedHandle
operator delete	VMCore/User.cpp	/^void User::operator delete(void *Usr) {$/;"	f	class:llvm::User
operator handle_type	Support/Windows/Windows.h	/^  operator handle_type() const {$/;"	f	class:ScopedHandle
operator new	Bitcode/Reader/BitcodeReader.cpp	/^    void *operator new(size_t s) {$/;"	f	class:llvm::__anon55::ConstantPlaceHolder
operator new	VMCore/ConstantsContext.h	/^  void *operator new(size_t s) {$/;"	f	class:llvm::BinaryConstantExpr
operator new	VMCore/ConstantsContext.h	/^  void *operator new(size_t s) {$/;"	f	class:llvm::CompareConstantExpr
operator new	VMCore/ConstantsContext.h	/^  void *operator new(size_t s) {$/;"	f	class:llvm::ExtractElementConstantExpr
operator new	VMCore/ConstantsContext.h	/^  void *operator new(size_t s) {$/;"	f	class:llvm::ExtractValueConstantExpr
operator new	VMCore/ConstantsContext.h	/^  void *operator new(size_t s) {$/;"	f	class:llvm::InsertElementConstantExpr
operator new	VMCore/ConstantsContext.h	/^  void *operator new(size_t s) {$/;"	f	class:llvm::InsertValueConstantExpr
operator new	VMCore/ConstantsContext.h	/^  void *operator new(size_t s) {$/;"	f	class:llvm::SelectConstantExpr
operator new	VMCore/ConstantsContext.h	/^  void *operator new(size_t s) {$/;"	f	class:llvm::ShuffleVectorConstantExpr
operator new	VMCore/ConstantsContext.h	/^  void *operator new(size_t s) {$/;"	f	class:llvm::UnaryConstantExpr
operator new	VMCore/User.cpp	/^void *User::operator new(size_t s, unsigned Us) {$/;"	f	class:llvm::User
operator |=	Support/APInt.cpp	/^APInt& APInt::operator|=(const APInt& RHS) {$/;"	f	class:APInt
optimizeBitcastInstr	CodeGen/PeepholeOptimizer.cpp	/^bool PeepholeOptimizer::optimizeBitcastInstr(MachineInstr *MI,$/;"	f	class:PeepholeOptimizer
optimizeCall	Transforms/Utils/SimplifyLibCalls.cpp	/^  Value *optimizeCall(CallInst *CI, const DataLayout *TD,$/;"	f	class:__anon473::LibCallOptimization
optimizeCall	Transforms/Utils/SimplifyLibCalls.cpp	/^Value *LibCallSimplifier::optimizeCall(CallInst *CI) {$/;"	f	class:llvm::LibCallSimplifier
optimizeCall	Transforms/Utils/SimplifyLibCalls.cpp	/^Value *LibCallSimplifierImpl::optimizeCall(CallInst *CI) {$/;"	f	class:llvm::LibCallSimplifierImpl
optimizeCmpInstr	CodeGen/PeepholeOptimizer.cpp	/^bool PeepholeOptimizer::optimizeCmpInstr(MachineInstr *MI,$/;"	f	class:PeepholeOptimizer
optimizeCompareInstr	Target/ARM/ARMBaseInstrInfo.cpp	/^optimizeCompareInstr(MachineInstr *CmpInstr, unsigned SrcReg, unsigned SrcReg2,$/;"	f	class:ARMBaseInstrInfo
optimizeCompareInstr	Target/X86/X86InstrInfo.cpp	/^optimizeCompareInstr(MachineInstr *CmpInstr, unsigned SrcReg, unsigned SrcReg2,$/;"	f	class:X86InstrInfo
optimizeExtInstr	CodeGen/PeepholeOptimizer.cpp	/^optimizeExtInstr(MachineInstr *MI, MachineBasicBlock *MBB,$/;"	f	class:PeepholeOptimizer
optimizeLoadInstr	Target/X86/X86InstrInfo.cpp	/^optimizeLoadInstr(MachineInstr *MI, const MachineRegisterInfo *MRI,$/;"	f	class:X86InstrInfo
optimizeSelect	CodeGen/PeepholeOptimizer.cpp	/^bool PeepholeOptimizer::optimizeSelect(MachineInstr *MI) {$/;"	f	class:PeepholeOptimizer
optimizeSelect	Target/ARM/ARMBaseInstrInfo.cpp	/^MachineInstr *ARMBaseInstrInfo::optimizeSelect(MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
optimizeThumb2Branches	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::optimizeThumb2Branches() {$/;"	f	class:ARMConstantIslands
optimizeThumb2Instructions	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::optimizeThumb2Instructions() {$/;"	f	class:ARMConstantIslands
optimizeThumb2JumpTables	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::optimizeThumb2JumpTables() {$/;"	f	class:ARMConstantIslands
opvec_t	MC/MCDisassembler/EDInst.h	/^  typedef llvm::SmallVector<EDOperand*, 5> opvec_t;$/;"	t	struct:llvm::EDInst
orderByAddress	DebugInfo/DWARFDebugLine.h	/^    static bool orderByAddress(const Row& LHS, const Row& RHS) {$/;"	f	struct:llvm::DWARFDebugLine::Row
orderByLowPC	DebugInfo/DWARFDebugLine.h	/^    static bool orderByLowPC(const Sequence& LHS, const Sequence& RHS) {$/;"	f	struct:llvm::DWARFDebugLine::Sequence
ordinary	Support/regcomp.c	/^ordinary(struct parse *p, int ch)$/;"	f	file:
os	Transforms/Instrumentation/GCOVProfiling.cpp	/^    raw_ostream *os;$/;"	m	class:__anon490::GCOVRecord	file:
othercase	Support/regcomp.c	/^othercase(int ch)$/;"	f	file:
out	Target/CppBackend/CPPBackend.cpp	/^    inline void out() { if (indent_level >0) indent_level--; }$/;"	f	class:__anon412::CppWriter
outCount	Analysis/ProfileVerifierPass.cpp	/^      int         outCount;$/;"	m	struct:__anon36::ProfileVerifierPassT::DetailedBlockInfo	file:
outFile	Target/NVPTX/gen-register-defs.py	/^outFile = open('NVPTXNumRegisters.h', 'w')$/;"	v
outFile	Target/NVPTX/gen-register-defs.py	/^outFile = open('NVPTXRegisterInfo.td', 'w')$/;"	v
outWeight	Analysis/ProfileVerifierPass.cpp	/^      double      outWeight;$/;"	m	struct:__anon36::ProfileVerifierPassT::DetailedBlockInfo	file:
outermostLoopInRegion	Analysis/RegionInfo.cpp	/^Loop *Region::outermostLoopInRegion(Loop *L) const {$/;"	f	class:Region
outermostLoopInRegion	Analysis/RegionInfo.cpp	/^Loop *Region::outermostLoopInRegion(LoopInfo *LI, BasicBlock* BB) const {$/;"	f	class:Region
outs	Support/raw_ostream.cpp	/^raw_ostream &llvm::outs() {$/;"	f	class:llvm
overdefined	Analysis/LazyValueInfo.cpp	/^    overdefined$/;"	e	enum:__anon18::LVILatticeVal::LatticeValueTy	file:
overdefined	Transforms/Scalar/SCCP.cpp	/^    overdefined$/;"	e	enum:__anon530::LatticeVal::LatticeValueTy	file:
overlap	CodeGen/LiveIntervalUnion.h	/^overlap(const LiveRange &VRSeg,$/;"	f	namespace:llvm
overlapIntv	CodeGen/SplitKit.cpp	/^void SplitEditor::overlapIntv(SlotIndex Start, SlotIndex End) {$/;"	f	class:SplitEditor
overlaps	CodeGen/LiveInterval.cpp	/^bool LiveInterval::overlaps(SlotIndex Start, SlotIndex End) const {$/;"	f	class:LiveInterval
overlaps	CodeGen/LiveInterval.cpp	/^bool LiveInterval::overlaps(const LiveInterval &Other,$/;"	f	class:LiveInterval
overlaps	CodeGen/MachineLoopRanges.cpp	/^bool MachineLoopRange::overlaps(SlotIndex Start, SlotIndex Stop) {$/;"	f	class:MachineLoopRange
overlapsFrom	CodeGen/LiveInterval.cpp	/^bool LiveInterval::overlapsFrom(const LiveInterval& other,$/;"	f	class:LiveInterval
overridePass	CodeGen/Passes.cpp	/^static AnalysisID overridePass(AnalysisID StandardID, AnalysisID TargetID) {$/;"	f	file:
pImpl	CodeGen/LiveDebugVariables.h	/^  void *pImpl;$/;"	m	class:llvm::LiveDebugVariables
pLineNumberInfo	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} *pLineNumberInfo, LineNumberInfo;$/;"	t	typeref:struct:_LineNumberInfo
pThreadStack	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^} ThreadStack, *pThreadStack;$/;"	t	typeref:struct:__anon195	file:
p_b_cclass	Support/regcomp.c	/^p_b_cclass(struct parse *p, cset *cs)$/;"	f	file:
p_b_coll_elem	Support/regcomp.c	/^p_b_coll_elem(struct parse *p,$/;"	f	file:
p_b_eclass	Support/regcomp.c	/^p_b_eclass(struct parse *p, cset *cs)$/;"	f	file:
p_b_symbol	Support/regcomp.c	/^p_b_symbol(struct parse *p)$/;"	f	file:
p_b_term	Support/regcomp.c	/^p_b_term(struct parse *p, cset *cs)$/;"	f	file:
p_bracket	Support/regcomp.c	/^p_bracket(struct parse *p)$/;"	f	file:
p_bre	Support/regcomp.c	/^p_bre(struct parse *p,$/;"	f	file:
p_count	Support/regcomp.c	/^p_count(struct parse *p)$/;"	f	file:
p_ere	Support/regcomp.c	/^p_ere(struct parse *p, int stop)	\/* character this ERE should end at *\/$/;"	f	file:
p_ere_exp	Support/regcomp.c	/^p_ere_exp(struct parse *p)$/;"	f	file:
p_simp_re	Support/regcomp.c	/^p_simp_re(struct parse *p,$/;"	f	file:
p_str	Support/regcomp.c	/^p_str(struct parse *p)$/;"	f	file:
pairWillFormCycle	Transforms/Vectorize/BBVectorize.cpp	/^  bool BBVectorize::pairWillFormCycle(ValuePair P,$/;"	f	class:__anon604::BBVectorize
pairsConflict	Transforms/Vectorize/BBVectorize.cpp	/^  bool BBVectorize::pairsConflict(ValuePair P, ValuePair Q,$/;"	f	class:__anon604::BBVectorize
param	Support/Threading.cpp	/^  void *param;$/;"	m	struct:ThreadInfo	file:
paramHasAttr	VMCore/Instructions.cpp	/^bool CallInst::paramHasAttr(unsigned i, Attributes::AttrVal A) const {$/;"	f	class:CallInst
paramHasAttr	VMCore/Instructions.cpp	/^bool InvokeInst::paramHasAttr(unsigned i, Attributes::AttrVal A) const {$/;"	f	class:InvokeInst
parent	CodeGen/StrongPHIElimination.cpp	/^      PointerIntPair<Node*, 2> parent;$/;"	m	struct:__anon154::StrongPHIElimination::Node	file:
parentBB	Analysis/DominanceFrontier.cpp	/^    BasicBlock *parentBB;$/;"	m	class:__anon6::DFCalculateWorkObject	file:
parentNode	Analysis/DominanceFrontier.cpp	/^    const DomTreeNode *parentNode;$/;"	m	class:__anon6::DFCalculateWorkObject	file:
parent_path	Support/PathV2.cpp	/^const StringRef parent_path(StringRef path) {$/;"	f	namespace:llvm::sys::path
parent_path_end	Support/PathV2.cpp	/^  size_t parent_path_end(StringRef path) {$/;"	f	namespace:__anon251
parse	DebugInfo/DWARFDebugAbbrev.cpp	/^void DWARFDebugAbbrev::parse(DataExtractor data) {$/;"	f	class:DWARFDebugAbbrev
parse	Support/CommandLine.cpp	/^bool parser<bool>::parse(Option &O, StringRef ArgName,$/;"	f	class:parser
parse	Support/CommandLine.cpp	/^bool parser<boolOrDefault>::parse(Option &O, StringRef ArgName,$/;"	f	class:parser
parse	Support/CommandLine.cpp	/^bool parser<double>::parse(Option &O, StringRef ArgName,$/;"	f	class:parser
parse	Support/CommandLine.cpp	/^bool parser<float>::parse(Option &O, StringRef ArgName,$/;"	f	class:parser
parse	Support/CommandLine.cpp	/^bool parser<int>::parse(Option &O, StringRef ArgName,$/;"	f	class:parser
parse	Support/CommandLine.cpp	/^bool parser<unsigned long long>::parse(Option &O, StringRef ArgName,$/;"	f	class:parser
parse	Support/CommandLine.cpp	/^bool parser<unsigned>::parse(Option &O, StringRef ArgName,$/;"	f	class:parser
parse	Support/regcomp.c	/^struct parse {$/;"	s	file:
parseAM3Offset	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseAM3Offset(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseArch	Support/Triple.cpp	/^static Triple::ArchType parseArch(StringRef ArchName) {$/;"	f	file:
parseBitfield	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseBitfield(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseBlockNode	Support/YAMLParser.cpp	/^Node *Document::parseBlockNode() {$/;"	f	class:Document
parseBlockNode	Support/YAMLParser.cpp	/^Node *Node::parseBlockNode() {$/;"	f	class:Node
parseCompileUnits	DebugInfo/DWARFContext.cpp	/^void DWARFContext::parseCompileUnits() {$/;"	f	class:DWARFContext
parseCoprocNumOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseCoprocNumOperand(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseCoprocOptionOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseCoprocOptionOperand(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseCoprocRegOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseCoprocRegOperand(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseDirectiveARM	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveARM(SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectiveArch	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveArch(SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectiveCode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveCode(SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectiveEabiAttr	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveEabiAttr(SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectiveReq	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveReq(StringRef Name, SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectiveSet	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::parseDirectiveSet() {$/;"	f	class:MipsAsmParser
parseDirectiveSyntax	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveSyntax(SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectiveThumb	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveThumb(SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectiveThumbFunc	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveThumbFunc(SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectiveUnreq	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveUnreq(SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectiveWord	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseDirectiveWord(unsigned Size, SMLoc L) {$/;"	f	class:ARMAsmParser
parseDirectives	Support/YAMLParser.cpp	/^bool Document::parseDirectives() {$/;"	f	class:Document
parseDouble	Support/CommandLine.cpp	/^static bool parseDouble(Option &O, StringRef Arg, double &Value) {$/;"	f	file:
parseEnvironment	Support/Triple.cpp	/^static Triple::EnvironmentType parseEnvironment(StringRef EnvironmentName) {$/;"	f	file:
parseFPImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseFPImm(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseHexChar	AsmParser/LLLexer.cpp	/^static char parseHexChar(char C) {$/;"	f	file:
parseITCondCode	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseITCondCode(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseInst	MC/MCDisassembler/EDDisassembler.cpp	/^int EDDisassembler::parseInst(SmallVectorImpl<MCParsedAsmOperand*> &operands,$/;"	f	class:EDDisassembler
parseMSRMaskOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseMSRMaskOperand(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseMathOperation	Target/Mips/AsmParser/MipsAsmParser.cpp	/^parseMathOperation(StringRef Name, SMLoc NameLoc,$/;"	f	class:MipsAsmParser
parseMemBarrierOptOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseMemBarrierOptOperand(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseMemOffset	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::parseMemOffset(const MCExpr *&Res) {$/;"	f	class:MipsAsmParser
parseMemOperand	Target/Mips/AsmParser/MipsAsmParser.cpp	/^MipsAsmParser::OperandMatchResultTy MipsAsmParser::parseMemOperand($/;"	f	class:MipsAsmParser
parseMemRegOffsetShift	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseMemRegOffsetShift(ARM_AM::ShiftOpc &St,$/;"	f	class:ARMAsmParser
parseMemberHeader	Archive/ArchiveReader.cpp	/^Archive::parseMemberHeader(const char*& At, const char* End, std::string* error)$/;"	f	class:Archive
parseMemory	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseMemory(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseOS	Support/Triple.cpp	/^static Triple::OSType parseOS(StringRef OSName) {$/;"	f	file:
parseOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parseOperand(SmallVectorImpl<MCParsedAsmOperand*> &Operands,$/;"	f	class:ARMAsmParser
parseOperands	MC/MCDisassembler/EDInst.cpp	/^int EDInst::parseOperands() {$/;"	f	class:EDInst
parsePKHASRImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  OperandMatchResultTy parsePKHASRImm(SmallVectorImpl<MCParsedAsmOperand*> &O) {$/;"	f	class:__anon259::ARMAsmParser	file:
parsePKHImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parsePKHImm(SmallVectorImpl<MCParsedAsmOperand*> &Operands, StringRef Op,$/;"	f	class:ARMAsmParser
parsePKHLSLImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^  OperandMatchResultTy parsePKHLSLImm(SmallVectorImpl<MCParsedAsmOperand*> &O) {$/;"	f	class:__anon259::ARMAsmParser	file:
parsePostIdxReg	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parsePostIdxReg(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parsePrefix	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::parsePrefix(ARMMCExpr::VariantKind &RefKind) {$/;"	f	class:ARMAsmParser
parseProcIFlagsOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseProcIFlagsOperand(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parsePrologue	DebugInfo/DWARFDebugLine.cpp	/^DWARFDebugLine::parsePrologue(DataExtractor debug_line_data,$/;"	f	class:DWARFDebugLine
parseRegisterList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseRegisterList(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseRelocOperand	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::parseRelocOperand(const MCExpr *&Res) {$/;"	f	class:MipsAsmParser
parseRotImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseRotImm(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseSectionFlags	MC/MCParser/ELFAsmParser.cpp	/^static int parseSectionFlags(StringRef flagsStr) {$/;"	f	file:
parseSetAtDirective	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::parseSetAtDirective() {$/;"	f	class:MipsAsmParser
parseSetEndImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseSetEndImm(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseSetMacroDirective	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::parseSetMacroDirective() {$/;"	f	class:MipsAsmParser
parseSetNoAtDirective	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::parseSetNoAtDirective() {$/;"	f	class:MipsAsmParser
parseSetNoMacroDirective	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::parseSetNoMacroDirective() {$/;"	f	class:MipsAsmParser
parseSetNoReorderDirective	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::parseSetNoReorderDirective() {$/;"	f	class:MipsAsmParser
parseSetReorderDirective	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::parseSetReorderDirective() {$/;"	f	class:MipsAsmParser
parseShifterImm	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseShifterImm(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseSpecifier	VMCore/DataLayout.cpp	/^std::string DataLayout::parseSpecifier(StringRef Desc, DataLayout *td) {$/;"	f	class:DataLayout
parseStatementTable	DebugInfo/DWARFDebugLine.cpp	/^DWARFDebugLine::parseStatementTable(DataExtractor debug_line_data,$/;"	f	class:DWARFDebugLine
parseSymbolTable	Archive/ArchiveReader.cpp	/^Archive::parseSymbolTable(const void* data, unsigned size, std::string* error) {$/;"	f	class:Archive
parseVectorLane	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseVectorLane(VectorLaneTy &LaneKind, unsigned &Index) {$/;"	f	class:ARMAsmParser
parseVectorList	Target/ARM/AsmParser/ARMAsmParser.cpp	/^parseVectorList(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
parseVendor	Support/Triple.cpp	/^static Triple::VendorType parseVendor(StringRef VendorName) {$/;"	f	file:
partAsHex	Support/APFloat.cpp	/^partAsHex (char *dst, integerPart part, unsigned int count,$/;"	f	file:
partCount	Support/APFloat.cpp	/^APFloat::partCount() const$/;"	f	class:APFloat
partCountForBits	Support/APFloat.cpp	/^partCountForBits(unsigned int bits)$/;"	f	file:
partLSB	Support/APInt.cpp	/^  partLSB(integerPart value)$/;"	f	namespace:__anon243
partMSB	Support/APInt.cpp	/^  partMSB(integerPart value)$/;"	f	namespace:__anon243
pass	CodeGen/LiveDebugVariables.cpp	/^  LiveDebugVariables &pass;$/;"	m	class:__anon153::LDVImpl	file:
pass	CodeGen/Spiller.cpp	/^  MachineFunctionPass *pass;$/;"	m	class:__anon143::SpillerBase	file:
passEnumerate	VMCore/Pass.cpp	/^    void passEnumerate(const PassInfo *P) {$/;"	f	struct:__anon616::GetCFGOnlyPasses
passingValueIsAlwaysUndefined	Transforms/Utils/SimplifyCFG.cpp	/^static bool passingValueIsAlwaysUndefined(Value *V, Instruction *I) {$/;"	f	file:
paste	TableGen/TGLexer.h	/^    paste,              \/\/ #$/;"	e	enum:llvm::tgtok::TokKind
patchAndReplaceAllUsesWith	Transforms/Scalar/GVN.cpp	/^static void patchAndReplaceAllUsesWith(Value *Repl, Instruction *I) {$/;"	f	file:
patchReplacementInstruction	Transforms/Scalar/GVN.cpp	/^static void patchReplacementInstruction(Value *Repl, Instruction *I) {$/;"	f	file:
path	Support/PathV2.cpp	/^namespace path {$/;"	n	namespace:llvm::sys	file:
pathBegin	Analysis/PathProfileInfo.cpp	/^ProfilePathIterator PathProfileInfo::pathBegin() {$/;"	f	class:PathProfileInfo
pathEnd	Analysis/PathProfileInfo.cpp	/^ProfilePathIterator PathProfileInfo::pathEnd() {$/;"	f	class:PathProfileInfo
pathsRun	Analysis/PathProfileInfo.cpp	/^unsigned int PathProfileInfo::pathsRun() {$/;"	f	class:PathProfileInfo
pbegin	Support/regcomp.c	/^	sopno pbegin[NPAREN];	\/* -> ( ([0] unused) *\/$/;"	m	struct:parse	file:
peekNext	Support/YAMLParser.cpp	/^Token &Document::peekNext() {$/;"	f	class:Document
peekNext	Support/YAMLParser.cpp	/^Token &Node::peekNext() {$/;"	f	class:Node
peekNext	Support/YAMLParser.cpp	/^Token &Scanner::peekNext() {$/;"	f	class:Scanner
peekNextChar	TableGen/TGLexer.cpp	/^int TGLexer::peekNextChar(int Index) {$/;"	f	class:TGLexer
pend	Support/regcomp.c	/^	sopno pend[NPAREN];	\/* -> ) ([0] unused) *\/$/;"	m	struct:parse	file:
per_module_annot_t	Target/NVPTX/NVPTXUtilities.cpp	/^typedef std::map<const Module *, global_val_annot_t> per_module_annot_t;$/;"	t	file:
perform	Analysis/LoopInfo.cpp	/^void LoopBlocksDFS::perform(LoopInfo *LI) {$/;"	f	class:LoopBlocksDFS
performCallSlotOptzn	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemCpyOpt::performCallSlotOptzn(Instruction *cpy,$/;"	f	class:MemCpyOpt
performCustomLowering	CodeGen/GCStrategy.cpp	/^bool GCStrategy::performCustomLowering(Function &F) {$/;"	f	class:GCStrategy
performCustomLowering	CodeGen/ShadowStackGC.cpp	/^bool ShadowStackGC::performCustomLowering(Function &F) {$/;"	f	class:ShadowStackGC
performIntegerAbsCombine	Target/X86/X86ISelLowering.cpp	/^static SDValue performIntegerAbsCombine(SDNode *N, SelectionDAG &DAG) {$/;"	f	file:
performPRE	Transforms/Scalar/GVN.cpp	/^bool GVN::performPRE(Function &F) {$/;"	f	class:GVN
performPromotion	Transforms/Scalar/ScalarReplAggregates.cpp	/^bool SROA::performPromotion(Function &F) {$/;"	f	class:SROA
performScalarRepl	Transforms/Scalar/ScalarReplAggregates.cpp	/^bool SROA::performScalarRepl(Function &F) {$/;"	f	class:SROA
period	TableGen/TGLexer.h	/^    comma, period,      \/\/ , .$/;"	e	enum:llvm::tgtok::TokKind
piJIT_Method_Id	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} *piJIT_Method_Id, iJIT_Method_Id;$/;"	t	typeref:struct:_iJIT_Method_Id
piJIT_Method_Load	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} *piJIT_Method_Load, iJIT_Method_Load;$/;"	t	typeref:struct:_iJIT_Method_Load
piJIT_Method_NIDS	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^} *piJIT_Method_NIDS, iJIT_Method_NIDS;$/;"	t	typeref:struct:_iJIT_Method_NIDS
pickNode	CodeGen/MachineScheduler.cpp	/^  virtual SUnit *pickNode(bool &IsTopNode) {$/;"	f	class:__anon128::ILPScheduler
pickNode	CodeGen/MachineScheduler.cpp	/^  virtual SUnit *pickNode(bool &IsTopNode) {$/;"	f	class:__anon129::InstructionShuffler
pickNode	CodeGen/MachineScheduler.cpp	/^SUnit *ConvergingScheduler::pickNode(bool &IsTopNode) {$/;"	f	class:ConvergingScheduler
pickNode	Target/Hexagon/HexagonMachineScheduler.cpp	/^SUnit *ConvergingVLIWScheduler::pickNode(bool &IsTopNode) {$/;"	f	class:ConvergingVLIWScheduler
pickNodeBidrectional	CodeGen/MachineScheduler.cpp	/^SUnit *ConvergingScheduler::pickNodeBidrectional(bool &IsTopNode) {$/;"	f	class:ConvergingScheduler
pickNodeBidrectional	Target/Hexagon/HexagonMachineScheduler.cpp	/^SUnit *ConvergingVLIWScheduler::pickNodeBidrectional(bool &IsTopNode) {$/;"	f	class:ConvergingVLIWScheduler
pickNodeFromQueue	CodeGen/MachineScheduler.cpp	/^pickNodeFromQueue(ReadyQueue &Q, const RegPressureTracker &RPTracker,$/;"	f	class:ConvergingScheduler
pickNodeFromQueue	Target/Hexagon/HexagonMachineScheduler.cpp	/^pickNodeFromQueue(ReadyQueue &Q, const RegPressureTracker &RPTracker,$/;"	f	class:ConvergingVLIWScheduler
pickOnlyChoice	CodeGen/MachineScheduler.cpp	/^SUnit *ConvergingScheduler::SchedBoundary::pickOnlyChoice() {$/;"	f	class:ConvergingScheduler::SchedBoundary
pickOnlyChoice	Target/Hexagon/HexagonMachineScheduler.cpp	/^SUnit *ConvergingVLIWScheduler::SchedBoundary::pickOnlyChoice() {$/;"	f	class:ConvergingVLIWScheduler::SchedBoundary
pickTracePred	CodeGen/MachineTraceMetrics.cpp	/^MinInstrCountEnsemble::pickTracePred(const MachineBasicBlock *MBB) {$/;"	f	class:MinInstrCountEnsemble
pickTraceSucc	CodeGen/MachineTraceMetrics.cpp	/^MinInstrCountEnsemble::pickTraceSucc(const MachineBasicBlock *MBB) {$/;"	f	class:MinInstrCountEnsemble
placeCSRSpillsAndRestores	CodeGen/ShrinkWrapping.cpp	/^void PEI::placeCSRSpillsAndRestores(MachineFunction &Fn) {$/;"	f	class:PEI
placeDebugValues	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::placeDebugValues() {$/;"	f	class:ScheduleDAGMI
placeSpillsAndRestores	CodeGen/ShrinkWrapping.cpp	/^void PEI::placeSpillsAndRestores(MachineFunction &Fn) {$/;"	f	class:PEI
plus	TableGen/TGLexer.h	/^    minus, plus,        \/\/ - +$/;"	e	enum:llvm::tgtok::TokKind
pluscount	Support/regcomp.c	/^pluscount(struct parse *p, struct re_guts *g)$/;"	f	file:
po_iterator_storage	CodeGen/MachineTraceMetrics.cpp	/^  po_iterator_storage(LoopBounds &lb) : LB(lb) {}$/;"	f	class:llvm::po_iterator_storage
po_iterator_storage	CodeGen/MachineTraceMetrics.cpp	/^class po_iterator_storage<LoopBounds, true> {$/;"	c	namespace:llvm	file:
pointerInvalidatedByLoop	Transforms/Scalar/LICM.cpp	/^    bool pointerInvalidatedByLoop(Value *V, uint64_t Size,$/;"	f	struct:__anon568::LICM	file:
pointsToConstantGlobal	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^static bool pointsToConstantGlobal(Value *V) {$/;"	f	file:
pointsToConstantMemory	Analysis/AliasAnalysis.cpp	/^bool AliasAnalysis::pointsToConstantMemory(const Location &Loc,$/;"	f	class:AliasAnalysis
pointsToConstantMemory	Analysis/AliasAnalysisCounter.cpp	/^    bool pointsToConstantMemory(const Location &Loc, bool OrLocal) {$/;"	f	class:__anon43::AliasAnalysisCounter
pointsToConstantMemory	Analysis/AliasDebugger.cpp	/^    bool pointsToConstantMemory(const Location &Loc, bool OrLocal) {$/;"	f	class:__anon44::AliasDebugger
pointsToConstantMemory	Analysis/BasicAliasAnalysis.cpp	/^BasicAliasAnalysis::pointsToConstantMemory(const Location &Loc, bool OrLocal) {$/;"	f	class:BasicAliasAnalysis
pointsToConstantMemory	Analysis/NoAliasAnalysis.cpp	/^    virtual bool pointsToConstantMemory(const Location &Loc,$/;"	f	struct:__anon42::NoAA
pointsToConstantMemory	Analysis/TypeBasedAliasAnalysis.cpp	/^bool TypeBasedAliasAnalysis::pointsToConstantMemory(const Location &Loc,$/;"	f	class:TypeBasedAliasAnalysis
pointsToConstantMemory	Transforms/Scalar/ObjCARC.cpp	/^ObjCARCAliasAnalysis::pointsToConstantMemory(const Location &Loc,$/;"	f	class:ObjCARCAliasAnalysis
poisonStackInFunction	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::poisonStackInFunction(Function &F) {$/;"	f	class:AddressSanitizer
pop	CodeGen/LatencyPriorityQueue.cpp	/^SUnit *LatencyPriorityQueue::pop() {$/;"	f	class:LatencyPriorityQueue
pop	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^SUnit *ResourcePriorityQueue::pop() {$/;"	f	class:ResourcePriorityQueue
pop	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^    SUnit *pop() {$/;"	f	struct:__anon86::FastPriorityQueue
pop	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  SUnit *pop() {$/;"	f	class:__anon77::RegReductionPriorityQueue
pop	VMCore/PassManager.cpp	/^void PMStack::pop() {$/;"	f	class:PMStack
popFromQueue	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^SUnit *popFromQueue(std::vector<SUnit*> &Q, SF &Picker, ScheduleDAG *DAG) {$/;"	f	namespace:__anon77
popFromQueueImpl	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static SUnit *popFromQueueImpl(std::vector<SUnit*> &Q, SF &Picker) {$/;"	f	namespace:__anon77
popStackAfter	Target/X86/X86FloatingPoint.cpp	/^void FPS::popStackAfter(MachineBasicBlock::iterator &I) {$/;"	f	class:FPS
popStackAndReturnValueToCaller	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::popStackAndReturnValueToCaller(Type *RetTy,$/;"	f	class:Interpreter
popValue	Bitcode/Reader/BitcodeReader.h	/^  bool popValue(SmallVector<uint64_t, 64> &Record, unsigned &Slot,$/;"	f	class:llvm::BitcodeReader
pop_back	Bitcode/Reader/BitcodeReader.h	/^    void pop_back() { ValuePtrs.pop_back(); }$/;"	f	class:llvm::BitcodeReaderValueList
pop_back	Bitcode/Reader/BitcodeReader.h	/^  void pop_back()             { MDValuePtrs.pop_back(); }$/;"	f	class:llvm::BitcodeReaderMDValueList
populateADROperands	Target/ARM/ARMAsmPrinter.cpp	/^static void populateADROperands(MCInst &Inst, unsigned Dest,$/;"	f	file:
populateFunctionPassManager	Transforms/IPO/PassManagerBuilder.cpp	/^void PassManagerBuilder::populateFunctionPassManager(FunctionPassManager &FPM) {$/;"	f	class:PassManagerBuilder
populateLTOPassManager	Transforms/IPO/PassManagerBuilder.cpp	/^void PassManagerBuilder::populateLTOPassManager(PassManagerBase &PM,$/;"	f	class:PassManagerBuilder
populateModulePassManager	Transforms/IPO/PassManagerBuilder.cpp	/^void PassManagerBuilder::populateModulePassManager(PassManagerBase &MPM) {$/;"	f	class:PassManagerBuilder
positiveOffsetOpcode	Target/ARM/Thumb2InstrInfo.cpp	/^positiveOffsetOpcode(unsigned opcode)$/;"	f	file:
posix_category	Support/system_error.cpp	/^posix_category() {$/;"	f	namespace:llvm
postAppend	DebugInfo/DWARFDebugLine.cpp	/^void DWARFDebugLine::Row::postAppend() {$/;"	f	class:DWARFDebugLine::Row
postKnownBits	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned postKnownBits(unsigned LogAlign = 0) const {$/;"	f	struct:__anon310::ARMConstantIslands::BasicBlockInfo
postOffset	Target/ARM/ARMConstantIslandPass.cpp	/^      unsigned postOffset(unsigned LogAlign = 0) const {$/;"	f	struct:__anon310::ARMConstantIslands::BasicBlockInfo
postRAScheduler	Target/X86/X86Subtarget.h	/^  bool postRAScheduler() const { return PostRAScheduler; }$/;"	f	class:llvm::X86Subtarget
postprocessDAG	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::postprocessDAG() {$/;"	f	class:ScheduleDAGMI
postprocessDAG	Target/Hexagon/HexagonMachineScheduler.cpp	/^void VLIWMachineScheduler::postprocessDAG() {$/;"	f	class:VLIWMachineScheduler
powerOf5	Support/APFloat.cpp	/^powerOf5(integerPart *dst, unsigned int power)$/;"	f	file:
ppFromVEX2of2	Target/X86/Disassembler/X86DisassemblerDecoder.h	60;"	d
ppFromVEX3of3	Target/X86/Disassembler/X86DisassemblerDecoder.h	55;"	d
precision	Support/APFloat.cpp	/^    unsigned int precision;$/;"	m	struct:llvm::fltSemantics	file:
predBegin	Analysis/PathNumbering.cpp	/^BLEdgeIterator BallLarusNode::predBegin() {$/;"	f	class:BallLarusNode
predEnd	Analysis/PathNumbering.cpp	/^BLEdgeIterator BallLarusNode::predEnd() {$/;"	f	class:BallLarusNode
pred_begin	Support/DAGDeltaAlgorithm.cpp	/^  pred_iterator_ty pred_begin(change_ty Node) {$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
pred_begin	Transforms/Scalar/ObjCARC.cpp	/^    edge_iterator pred_begin() { return Preds.begin(); }$/;"	f	class:__anon507::BBState
pred_closure_begin	Support/DAGDeltaAlgorithm.cpp	/^  pred_closure_iterator_ty pred_closure_begin(change_ty Node) {$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
pred_closure_end	Support/DAGDeltaAlgorithm.cpp	/^  pred_closure_iterator_ty pred_closure_end(change_ty Node) {$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
pred_closure_iterator_ty	Support/DAGDeltaAlgorithm.cpp	/^  typedef std::set<change_ty>::iterator pred_closure_iterator_ty;$/;"	t	class:__anon233::DAGDeltaAlgorithmImpl	file:
pred_end	Support/DAGDeltaAlgorithm.cpp	/^  pred_iterator_ty pred_end(change_ty Node) {$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
pred_end	Transforms/Scalar/ObjCARC.cpp	/^    edge_iterator pred_end() { return Preds.end(); }$/;"	f	class:__anon507::BBState
pred_iterator_ty	Support/DAGDeltaAlgorithm.cpp	/^  typedef std::vector<change_ty>::iterator pred_iterator_ty;$/;"	t	class:__anon233::DAGDeltaAlgorithmImpl	file:
predicate	VMCore/ConstantsContext.h	/^  unsigned short predicate;$/;"	m	class:llvm::CompareConstantExpr
preferReg	CodeGen/SpillPlacement.cpp	/^  bool preferReg() const {$/;"	f	struct:SpillPlacement::Node
prefered_separator	Support/PathV2.cpp	/^  const char  prefered_separator = '\\\\';$/;"	m	namespace:__anon251	file:
preferred_buffer_size	Support/raw_ostream.cpp	/^size_t raw_fd_ostream::preferred_buffer_size() const {$/;"	f	class:raw_fd_ostream
preferred_buffer_size	Support/raw_ostream.cpp	/^size_t raw_ostream::preferred_buffer_size() const {$/;"	f	class:raw_ostream
prefers32BitThumb	Target/ARM/ARMSubtarget.h	/^  bool prefers32BitThumb() const { return Pref32BitThumb; }$/;"	f	class:llvm::ARMSubtarget
prefixLocations	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint64_t prefixLocations[0x100];$/;"	m	struct:InternalInstruction
prefixPresent	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t prefixPresent[0x100];$/;"	m	struct:InternalInstruction
prefslotOffset	Target/CellSPU/SPUISelLowering.cpp	/^  int prefslotOffset(EVT VT) {$/;"	f	namespace:__anon419
prepare	CodeGen/SpillPlacement.cpp	/^void SpillPlacement::prepare(BitVector &RegBundles) {$/;"	f	class:SpillPlacement
preparePHI	Transforms/Instrumentation/PathProfiling.cpp	/^void PathProfiler::preparePHI(BLInstrumentationNode* node) {$/;"	f	class:PathProfiler
preparePassManager	Analysis/LoopPass.cpp	/^void LoopPass::preparePassManager(PMStack &PMS) {$/;"	f	class:LoopPass
preparePassManager	Analysis/RegionPass.cpp	/^void RegionPass::preparePassManager(PMStack &PMS) {$/;"	f	class:RegionPass
preparePassManager	VMCore/Pass.cpp	/^void Pass::preparePassManager(PMStack &) {$/;"	f	class:Pass
preserveHigherLevelAnalysis	VMCore/PassManager.cpp	/^bool PMDataManager::preserveHigherLevelAnalysis(Pass *P) {$/;"	f	class:PMDataManager
prevDebugLoc	Target/NVPTX/NVPTXAsmPrinter.h	/^  DebugLoc prevDebugLoc;$/;"	m	class:llvm::NVPTXAsmPrinter
prev_entry	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    struct jit_code_entry *prev_entry;$/;"	m	struct:jit_code_entry	typeref:struct:jit_code_entry::jit_code_entry	file:
print	Analysis/AliasSetTracker.cpp	/^void AliasSet::print(raw_ostream &OS) const {$/;"	f	class:AliasSet
print	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::print(raw_ostream &OS) const {$/;"	f	class:AliasSetTracker
print	Analysis/BlockFrequencyInfo.cpp	/^void BlockFrequencyInfo::print(raw_ostream &O, const Module *) const {$/;"	f	class:BlockFrequencyInfo
print	Analysis/BranchProbabilityInfo.cpp	/^void BranchProbabilityInfo::print(raw_ostream &OS, const Module *) const {$/;"	f	class:BranchProbabilityInfo
print	Analysis/CFGPrinter.cpp	/^    void print(raw_ostream &OS, const Module* = 0) const {}$/;"	f	struct:__anon24::CFGViewer
print	Analysis/CFGPrinter.cpp	/^    void print(raw_ostream &OS, const Module* = 0) const {}$/;"	f	struct:__anon25::CFGOnlyViewer
print	Analysis/CFGPrinter.cpp	/^    void print(raw_ostream &OS, const Module* = 0) const {}$/;"	f	struct:__anon26::CFGPrinter
print	Analysis/CFGPrinter.cpp	/^    void print(raw_ostream &OS, const Module* = 0) const {}$/;"	f	struct:__anon27::CFGOnlyPrinter
print	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::print(raw_ostream &OS, const Module*) const {$/;"	f	class:DependenceAnalysis
print	Analysis/DominanceFrontier.cpp	/^void DominanceFrontierBase::print(raw_ostream &OS, const Module* ) const {$/;"	f	class:DominanceFrontierBase
print	Analysis/IPA/CallGraph.cpp	/^  virtual void print(raw_ostream &OS, const Module *) const {$/;"	f	class:__anon2::BasicCallGraph
print	Analysis/IPA/CallGraph.cpp	/^void CallGraph::print(raw_ostream &OS, Module*) const {$/;"	f	class:CallGraph
print	Analysis/IPA/CallGraph.cpp	/^void CallGraphNode::print(raw_ostream &OS) const {$/;"	f	class:CallGraphNode
print	Analysis/IPA/FindUsedTypes.cpp	/^void FindUsedTypes::print(raw_ostream &OS, const Module *M) const {$/;"	f	class:FindUsedTypes
print	Analysis/IVUsers.cpp	/^void IVUsers::print(raw_ostream &OS, const Module *M) const {$/;"	f	class:IVUsers
print	Analysis/InstCount.cpp	/^    virtual void print(raw_ostream &O, const Module *M) const {}$/;"	f	class:__anon17::InstCount
print	Analysis/Interval.cpp	/^void Interval::print(raw_ostream &OS) const {$/;"	f	class:Interval
print	Analysis/IntervalPartition.cpp	/^void IntervalPartition::print(raw_ostream &O, const Module*) const {$/;"	f	class:IntervalPartition
print	Analysis/Lint.cpp	/^    virtual void print(raw_ostream &O, const Module *M) const {}$/;"	f	class:__anon5::Lint
print	Analysis/LoopDependenceAnalysis.cpp	/^void LoopDependenceAnalysis::print(raw_ostream &OS, const Module*) const {$/;"	f	class:LoopDependenceAnalysis
print	Analysis/LoopInfo.cpp	/^void LoopInfo::print(raw_ostream &OS, const Module*) const {$/;"	f	class:LoopInfo
print	Analysis/MemDepPrinter.cpp	/^void MemDepPrinter::print(raw_ostream &OS, const Module *M) const {$/;"	f	class:MemDepPrinter
print	Analysis/ModuleDebugInfoPrinter.cpp	/^void ModuleDebugInfoPrinter::print(raw_ostream &O, const Module *M) const {$/;"	f	class:ModuleDebugInfoPrinter
print	Analysis/PostDominators.cpp	/^void PostDominatorTree::print(raw_ostream &OS, const Module *) const {$/;"	f	class:PostDominatorTree
print	Analysis/RegionInfo.cpp	/^void Region::print(raw_ostream &OS, bool print_tree, unsigned level,$/;"	f	class:Region
print	Analysis/RegionInfo.cpp	/^void RegionInfo::print(raw_ostream &OS, const Module *) const {$/;"	f	class:RegionInfo
print	Analysis/ScalarEvolution.cpp	/^void SCEV::print(raw_ostream &OS) const {$/;"	f	class:SCEV
print	Analysis/ScalarEvolution.cpp	/^void ScalarEvolution::print(raw_ostream &OS, const Module *) const {$/;"	f	class:ScalarEvolution
print	Analysis/Trace.cpp	/^void Trace::print(raw_ostream &O) const {$/;"	f	class:Trace
print	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::print(raw_ostream &OS, const ValueMapType &Map,$/;"	f	class:ValueEnumerator
print	CodeGen/AsmPrinter/DIE.cpp	/^void DIE::print(raw_ostream &O, unsigned IncIndent) {$/;"	f	class:DIE
print	CodeGen/AsmPrinter/DIE.cpp	/^void DIEAbbrev::print(raw_ostream &O) {$/;"	f	class:DIEAbbrev
print	CodeGen/AsmPrinter/DIE.cpp	/^void DIEBlock::print(raw_ostream &O) {$/;"	f	class:DIEBlock
print	CodeGen/AsmPrinter/DIE.cpp	/^void DIEDelta::print(raw_ostream &O) {$/;"	f	class:DIEDelta
print	CodeGen/AsmPrinter/DIE.cpp	/^void DIEEntry::print(raw_ostream &O) {$/;"	f	class:DIEEntry
print	CodeGen/AsmPrinter/DIE.cpp	/^void DIEInteger::print(raw_ostream &O) {$/;"	f	class:DIEInteger
print	CodeGen/AsmPrinter/DIE.cpp	/^void DIELabel::print(raw_ostream &O) {$/;"	f	class:DIELabel
print	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^void DwarfAccelTable::print(raw_ostream &O) {$/;"	f	class:DwarfAccelTable
print	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    void print (raw_ostream &O) {$/;"	f	struct:llvm::DwarfAccelTable::TableHeaderData
print	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    void print(raw_ostream &O) const {$/;"	f	struct:llvm::DwarfAccelTable::HashDataContents
print	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    void print(raw_ostream &O) {$/;"	f	struct:llvm::DwarfAccelTable::Atom
print	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    void print(raw_ostream &O) {$/;"	f	struct:llvm::DwarfAccelTable::HashData
print	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    void print(raw_ostream &O) {$/;"	f	struct:llvm::DwarfAccelTable::TableHeader
print	CodeGen/LiveDebugVariables.cpp	/^void LDVImpl::print(raw_ostream &OS) {$/;"	f	class:LDVImpl
print	CodeGen/LiveDebugVariables.cpp	/^void UserValue::print(raw_ostream &OS, const TargetMachine *TM) {$/;"	f	class:UserValue
print	CodeGen/LiveInterval.cpp	/^void LiveInterval::print(raw_ostream &OS) const {$/;"	f	class:LiveInterval
print	CodeGen/LiveInterval.cpp	/^void LiveRange::print(raw_ostream &os) const {$/;"	f	class:LiveRange
print	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::print(raw_ostream &OS, const Module* ) const {$/;"	f	class:LiveIntervals
print	CodeGen/LiveIntervalUnion.cpp	/^LiveIntervalUnion::print(raw_ostream &OS, const TargetRegisterInfo *TRI) const {$/;"	f	class:LiveIntervalUnion
print	CodeGen/LiveStackAnalysis.cpp	/^void LiveStacks::print(raw_ostream &OS, const Module*) const {$/;"	f	class:LiveStacks
print	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::print(raw_ostream &OS, SlotIndexes *Indexes) const {$/;"	f	class:MachineBasicBlock
print	CodeGen/MachineDominators.cpp	/^void MachineDominatorTree::print(raw_ostream &OS, const Module*) const {$/;"	f	class:MachineDominatorTree
print	CodeGen/MachineFunction.cpp	/^void MachineConstantPool::print(raw_ostream &OS) const {$/;"	f	class:MachineConstantPool
print	CodeGen/MachineFunction.cpp	/^void MachineFrameInfo::print(const MachineFunction &MF, raw_ostream &OS) const{$/;"	f	class:MachineFrameInfo
print	CodeGen/MachineFunction.cpp	/^void MachineFunction::print(raw_ostream &OS, SlotIndexes *Indexes) const {$/;"	f	class:MachineFunction
print	CodeGen/MachineFunction.cpp	/^void MachineJumpTableInfo::print(raw_ostream &OS) const {$/;"	f	class:MachineJumpTableInfo
print	CodeGen/MachineInstr.cpp	/^void MachineInstr::print(raw_ostream &OS, const TargetMachine *TM) const {$/;"	f	class:MachineInstr
print	CodeGen/MachineInstr.cpp	/^void MachineOperand::print(raw_ostream &OS, const TargetMachine *TM) const {$/;"	f	class:MachineOperand
print	CodeGen/MachineLoopRanges.cpp	/^void MachineLoopRange::print(raw_ostream &OS) const {$/;"	f	class:MachineLoopRange
print	CodeGen/MachinePostDominators.cpp	/^MachinePostDominatorTree::print(llvm::raw_ostream &OS, const Module *M) const {$/;"	f	class:MachinePostDominatorTree
print	CodeGen/MachineScheduler.cpp	/^void MachineScheduler::print(raw_ostream &O, const Module* m) const {$/;"	f	class:MachineScheduler
print	CodeGen/MachineTraceMetrics.cpp	/^void MachineTraceMetrics::Ensemble::print(raw_ostream &OS) const {$/;"	f	class:MachineTraceMetrics::Ensemble
print	CodeGen/MachineTraceMetrics.cpp	/^void MachineTraceMetrics::Trace::print(raw_ostream &OS) const {$/;"	f	class:MachineTraceMetrics::Trace
print	CodeGen/MachineTraceMetrics.cpp	/^void MachineTraceMetrics::TraceBlockInfo::print(raw_ostream &OS) const {$/;"	f	class:MachineTraceMetrics::TraceBlockInfo
print	CodeGen/RegisterCoalescer.cpp	/^void RegisterCoalescer::print(raw_ostream &O, const Module* m) const {$/;"	f	class:RegisterCoalescer
print	CodeGen/ScheduleDAGInstrs.cpp	/^void ILPValue::print(raw_ostream &OS) const {$/;"	f	class:ILPValue
print	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::print(raw_ostream &OS, const SelectionDAG *G) const {$/;"	f	class:SDNode
print	CodeGen/SlotIndexes.cpp	/^void SlotIndex::print(raw_ostream &os) const {$/;"	f	class:SlotIndex
print	CodeGen/VirtRegMap.cpp	/^void VirtRegMap::print(raw_ostream &OS, const Module*) const {$/;"	f	class:VirtRegMap
print	MC/MCDwarf.cpp	/^void MCDwarfFile::print(raw_ostream &OS) const {$/;"	f	class:MCDwarfFile
print	MC/MCExpr.cpp	/^void MCExpr::print(raw_ostream &OS) const {$/;"	f	class:MCExpr
print	MC/MCInst.cpp	/^void MCInst::print(raw_ostream &OS, const MCAsmInfo *MAI) const {$/;"	f	class:MCInst
print	MC/MCInst.cpp	/^void MCOperand::print(raw_ostream &OS, const MCAsmInfo *MAI) const {$/;"	f	class:MCOperand
print	MC/MCLabel.cpp	/^void MCLabel::print(raw_ostream &OS) const {$/;"	f	class:MCLabel
print	MC/MCSymbol.cpp	/^void MCSymbol::print(raw_ostream &OS) const {$/;"	f	class:MCSymbol
print	MC/MCValue.cpp	/^void MCValue::print(raw_ostream &OS, const MCAsmInfo *MAI) const {$/;"	f	class:MCValue
print	MC/SubtargetFeature.cpp	/^void SubtargetFeatures::print(raw_ostream &OS) const {$/;"	f	class:SubtargetFeatures
print	Object/MachOObject.cpp	/^void MachOObject::print(raw_ostream &O) const {$/;"	f	class:MachOObject
print	Support/APInt.cpp	/^void APInt::print(raw_ostream &OS, bool isSigned) const {$/;"	f	class:APInt
print	Support/BlockFrequency.cpp	/^void BlockFrequency::print(raw_ostream &OS) const {$/;"	f	class:BlockFrequency
print	Support/BranchProbability.cpp	/^void BranchProbability::print(raw_ostream &OS) const {$/;"	f	class:BranchProbability
print	Support/CommandLine.cpp	/^  void print() {$/;"	f	class:__anon248::VersionPrinter
print	Support/ConstantRange.cpp	/^void ConstantRange::print(raw_ostream &OS) const {$/;"	f	class:ConstantRange
print	Support/PrettyStackTrace.cpp	/^void PrettyStackTraceProgram::print(raw_ostream &OS) const {$/;"	f	class:PrettyStackTraceProgram
print	Support/PrettyStackTrace.cpp	/^void PrettyStackTraceString::print(raw_ostream &OS) const {$/;"	f	class:PrettyStackTraceString
print	Support/SourceMgr.cpp	/^void SMDiagnostic::print(const char *ProgName, raw_ostream &S,$/;"	f	class:SMDiagnostic
print	Support/Timer.cpp	/^void TimeRecord::print(const TimeRecord &Total, raw_ostream &OS) const {$/;"	f	class:TimeRecord
print	Support/Timer.cpp	/^void TimerGroup::print(raw_ostream &OS) {$/;"	f	class:TimerGroup
print	Support/Twine.cpp	/^void Twine::print(raw_ostream &OS) const {$/;"	f	class:Twine
print	TableGen/Record.cpp	/^void RecordVal::print(raw_ostream &OS, bool PrintSem) const {$/;"	f	class:RecordVal
print	Target/ARM/ARMConstantPoolValue.cpp	/^void ARMConstantPoolConstant::print(raw_ostream &O) const {$/;"	f	class:ARMConstantPoolConstant
print	Target/ARM/ARMConstantPoolValue.cpp	/^void ARMConstantPoolMBB::print(raw_ostream &O) const {$/;"	f	class:ARMConstantPoolMBB
print	Target/ARM/ARMConstantPoolValue.cpp	/^void ARMConstantPoolSymbol::print(raw_ostream &O) const {$/;"	f	class:ARMConstantPoolSymbol
print	Target/ARM/ARMConstantPoolValue.cpp	/^void ARMConstantPoolValue::print(raw_ostream &O) const {$/;"	f	class:ARMConstantPoolValue
print	Target/ARM/ARMConstantPoolValue.h	/^  void print(raw_ostream *O) const { if (O) print(*O); }$/;"	f	class:llvm::ARMConstantPoolValue
print	Target/ARM/AsmParser/ARMAsmParser.cpp	/^void ARMOperand::print(raw_ostream &OS) const {$/;"	f	class:ARMOperand
print	Target/Hexagon/HexagonHardwareLoops.cpp	/^    void print(raw_ostream &OS, const TargetMachine *TM = 0) const {$/;"	f	class:__anon408::CountValue
print	Target/MBlaze/AsmParser/MBlazeAsmParser.cpp	/^void MBlazeOperand::print(raw_ostream &OS) const {$/;"	f	class:MBlazeOperand
print	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  virtual void print(raw_ostream &OS) const {$/;"	f	class:__anon423::MipsOperand
print	Target/NVPTX/NVPTXAsmPrinter.h	/^    void print() {$/;"	f	class:llvm::NVPTXAsmPrinter::AggBuffer
print	Target/PowerPC/PPCCTRLoops.cpp	/^    void print(raw_ostream &OS, const TargetMachine *TM = 0) const {$/;"	f	class:__anon325::CountValue
print	Target/TargetRegisterInfo.cpp	/^void PrintReg::print(raw_ostream &OS) const {$/;"	f	class:PrintReg
print	Target/TargetRegisterInfo.cpp	/^void PrintRegUnit::print(raw_ostream &OS) const {$/;"	f	class:PrintRegUnit
print	Target/X86/AsmParser/X86AsmParser.cpp	/^  virtual void print(raw_ostream &OS) const {}$/;"	f	struct:__anon336::X86Operand
print	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Cost::print(raw_ostream &OS) const {$/;"	f	class:Cost
print	Transforms/Scalar/LoopStrengthReduce.cpp	/^void Formula::print(raw_ostream &OS) const {$/;"	f	class:Formula
print	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRFixup::print(raw_ostream &OS) const {$/;"	f	class:LSRFixup
print	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::print(raw_ostream &OS) const {$/;"	f	class:LSRInstance
print	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRUse::print(raw_ostream &OS) const {$/;"	f	class:LSRUse
print	Transforms/Scalar/LoopStrengthReduce.cpp	/^void RegSortData::print(raw_ostream &OS) const {$/;"	f	class:RegSortData
print	Transforms/Scalar/LoopStrengthReduce.cpp	/^void WorkItem::print(raw_ostream &OS) const {$/;"	f	class:WorkItem
print	Transforms/Scalar/SROA.cpp	/^void AllocaPartitioning::print(raw_ostream &OS) const {$/;"	f	class:AllocaPartitioning
print	Transforms/Scalar/SROA.cpp	/^void AllocaPartitioning::print(raw_ostream &OS, const_iterator I,$/;"	f	class:AllocaPartitioning
print	Transforms/Utils/AddrModeMatcher.cpp	/^void ExtAddrMode::print(raw_ostream &OS) const {$/;"	f	class:ExtAddrMode
print	VMCore/AsmWriter.cpp	/^void Module::print(raw_ostream &ROS, AssemblyAnnotationWriter *AAW) const {$/;"	f	class:Module
print	VMCore/AsmWriter.cpp	/^void NamedMDNode::print(raw_ostream &ROS, AssemblyAnnotationWriter *AAW) const {$/;"	f	class:NamedMDNode
print	VMCore/AsmWriter.cpp	/^void Type::print(raw_ostream &OS) const {$/;"	f	class:Type
print	VMCore/AsmWriter.cpp	/^void TypePrinting::print(Type *Ty, raw_ostream &OS) {$/;"	f	class:TypePrinting
print	VMCore/AsmWriter.cpp	/^void Value::print(raw_ostream &ROS, AssemblyAnnotationWriter *AAW) const {$/;"	f	class:Value
print	VMCore/DebugInfo.cpp	/^void DIDescriptor::print(raw_ostream &OS) const {$/;"	f	class:DIDescriptor
print	VMCore/Dominators.cpp	/^void DominatorTree::print(raw_ostream &OS, const Module *) const {$/;"	f	class:DominatorTree
print	VMCore/GCOV.cpp	/^void FileInfo::print() {$/;"	f	class:FileInfo
print	VMCore/LeaksContext.h	/^  static void print(const T* P) { errs() << P; }$/;"	f	struct:llvm::PrinterTrait
print	VMCore/LeaksContext.h	/^  static void print(const Value* P) { errs() << *P; }$/;"	f	struct:llvm::PrinterTrait
print	VMCore/Pass.cpp	/^void Pass::print(raw_ostream &O,const Module*) const {$/;"	f	class:Pass
print	VMCore/PassManager.cpp	/^void PassManagerPrettyStackEntry::print(raw_ostream &OS) const {$/;"	f	class:PassManagerPrettyStackEntry
printAM2PreOrOffsetIndexOp	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAM2PreOrOffsetIndexOp(const MCInst *MI, unsigned Op,$/;"	f	class:ARMInstPrinter
printAM3PostIndexOp	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAM3PostIndexOp(const MCInst *MI, unsigned Op,$/;"	f	class:ARMInstPrinter
printAM3PreOrOffsetIndexOp	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAM3PreOrOffsetIndexOp(const MCInst *MI, unsigned Op,$/;"	f	class:ARMInstPrinter
printAVXCC	Target/X86/InstPrinter/X86ATTInstPrinter.cpp	/^void X86ATTInstPrinter::printAVXCC(const MCInst *MI, unsigned Op,$/;"	f	class:X86ATTInstPrinter
printAVXCC	Target/X86/InstPrinter/X86IntelInstPrinter.cpp	/^void X86IntelInstPrinter::printAVXCC(const MCInst *MI, unsigned Op,$/;"	f	class:X86IntelInstPrinter
printAbsAddrOperand	Target/Hexagon/HexagonAsmPrinter.h	/^    void printAbsAddrOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:llvm::HexagonAsmPrinter
printAbsAddrOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printAbsAddrOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printAbsAddrOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printAbsAddrOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printAddr256K	Target/CellSPU/SPUAsmPrinter.cpp	/^    printAddr256K(const MachineInstr *MI, unsigned OpNo, raw_ostream &O)$/;"	f	class:__anon413::SPUAsmPrinter
printAddrMode2OffsetOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrMode2OffsetOperand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printAddrMode2Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrMode2Operand(const MCInst *MI, unsigned Op,$/;"	f	class:ARMInstPrinter
printAddrMode3OffsetOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrMode3OffsetOperand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printAddrMode3Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrMode3Operand(const MCInst *MI, unsigned Op,$/;"	f	class:ARMInstPrinter
printAddrMode5Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrMode5Operand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printAddrMode6OffsetOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrMode6OffsetOperand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printAddrMode6Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrMode6Operand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printAddrMode7Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrMode7Operand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printAddrModeBasePlusOffset	Target/Hexagon/HexagonAsmPrinter.cpp	/^void HexagonAsmPrinter::printAddrModeBasePlusOffset(const MachineInstr *MI,$/;"	f	class:HexagonAsmPrinter
printAddrModeImm12Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrModeImm12Operand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printAddrModeTBB	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrModeTBB(const MCInst *MI, unsigned Op,$/;"	f	class:ARMInstPrinter
printAddrModeTBH	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAddrModeTBH(const MCInst *MI, unsigned Op,$/;"	f	class:ARMInstPrinter
printAdrLabelOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printAdrLabelOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printAlias	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printAlias(const GlobalAlias *GA) {$/;"	f	class:AssemblyWriter
printAll	Support/Timer.cpp	/^void TimerGroup::printAll(raw_ostream &OS) {$/;"	f	class:TimerGroup
printAndVerify	CodeGen/Passes.cpp	/^void TargetPassConfig::printAndVerify(const char *Banner) {$/;"	f	class:TargetPassConfig
printAnnotation	MC/MCInstPrinter.cpp	/^void MCInstPrinter::printAnnotation(raw_ostream &OS, StringRef Annot) {$/;"	f	class:MCInstPrinter
printArgument	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printArgument(const Argument *Arg,$/;"	f	class:AssemblyWriter
printAsmMRegister	Target/X86/X86AsmPrinter.cpp	/^bool X86AsmPrinter::printAsmMRegister(const MachineOperand &MO, char Mode,$/;"	f	class:X86AsmPrinter
printAttributes	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printAttributes(const AttrListPtr &PAL,$/;"	f	class:CppWriter
printBasicBlock	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printBasicBlock(const BasicBlock *BB) {$/;"	f	class:AssemblyWriter
printBitfieldInvMaskImmOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printBitfieldInvMaskImmOperand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printBranchOperand	Target/Hexagon/HexagonAsmPrinter.h	/^    void printBranchOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:llvm::HexagonAsmPrinter
printBranchOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printBranchOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printBranchOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printBranchOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printCCOperand	Target/MSP430/InstPrinter/MSP430InstPrinter.cpp	/^void MSP430InstPrinter::printCCOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:MSP430InstPrinter
printCCOperand	Target/Sparc/SparcAsmPrinter.cpp	/^void SparcAsmPrinter::printCCOperand(const MachineInstr *MI, int opNum,$/;"	f	class:SparcAsmPrinter
printCFP	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printCFP(const ConstantFP *CFP) {$/;"	f	class:CppWriter
printCImmediate	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printCImmediate(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printCPSIFlag	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printCPSIFlag(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printCPSIMod	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printCPSIMod(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printCallOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    void printCallOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:__anon413::SPUAsmPrinter
printCallOperand	Target/Hexagon/HexagonAsmPrinter.h	/^    void printCallOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:llvm::HexagonAsmPrinter
printCallOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printCallOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printCallingConv	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printCallingConv(CallingConv::ID cc){$/;"	f	class:CppWriter
printConstant	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printConstant(const Constant *CV) {$/;"	f	class:CppWriter
printConstantPool	Target/Hexagon/HexagonAsmPrinter.cpp	/^void HexagonAsmPrinter::printConstantPool(const MachineInstr *MI, int OpNo,$/;"	f	class:HexagonAsmPrinter
printConstantPool	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printConstantPool(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printConstants	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printConstants(const Module* M) {$/;"	f	class:CppWriter
printContents	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printContents(const std::string& fname,$/;"	f	class:CppWriter
printCoprocOptionImm	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printCoprocOptionImm(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printCppName	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printCppName(Type* Ty) {$/;"	f	class:CppWriter
printCppName	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printCppName(const Value* val) {$/;"	f	class:CppWriter
printCustom	CodeGen/PseudoSourceValue.cpp	/^void FixedStackPseudoSourceValue::printCustom(raw_ostream &OS) const {$/;"	f	class:FixedStackPseudoSourceValue
printCustom	CodeGen/PseudoSourceValue.cpp	/^void PseudoSourceValue::printCustom(raw_ostream &O) const {$/;"	f	class:PseudoSourceValue
printCustom	VMCore/AsmWriter.cpp	/^void Value::printCustom(raw_ostream &OS) const {$/;"	f	class:Value
printDFormAddr	Target/CellSPU/SPUAsmPrinter.cpp	/^    printDFormAddr(const MachineInstr *MI, unsigned OpNo, raw_ostream &O)$/;"	f	class:__anon413::SPUAsmPrinter
printDebugInfo	Analysis/ProfileVerifierPass.cpp	/^  void ProfileVerifierPassT<FType, BType>::printDebugInfo(const BType *BB) {$/;"	f	class:__anon36::ProfileVerifierPassT
printDebugLoc	CodeGen/MachineInstr.cpp	/^static void printDebugLoc(DebugLoc DL, const MachineFunction *MF,$/;"	f	file:
printDebugLoc	VMCore/DebugInfo.cpp	/^static void printDebugLoc(DebugLoc DL, raw_ostream &CommentOS,$/;"	f	file:
printEdgeCounter	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	/^inline static void printEdgeCounter(ProfileInfo::Edge e,$/;"	f	file:
printEdgeError	Analysis/ProfileEstimatorPass.cpp	/^static void inline printEdgeError(ProfileInfo::Edge e, const char *M) {$/;"	f	file:
printEdgeProbability	Analysis/BranchProbabilityInfo.cpp	/^BranchProbabilityInfo::printEdgeProbability(raw_ostream &OS,$/;"	f	class:BranchProbabilityInfo
printEdgeProbability	CodeGen/MachineBranchProbabilityInfo.cpp	/^printEdgeProbability(raw_ostream &OS, MachineBasicBlock *Src,$/;"	f	class:MachineBranchProbabilityInfo
printEdgeWeight	Analysis/ProfileEstimatorPass.cpp	/^void inline ProfileEstimatorPass::printEdgeWeight(Edge E) {$/;"	f	class:ProfileEstimatorPass
printError	Support/YAMLParser.cpp	/^  void printError(SMLoc Loc, SourceMgr::DiagKind Kind, const Twine &Message,$/;"	f	class:llvm::yaml::Scanner
printError	Support/YAMLParser.cpp	/^void Stream::printError(Node *N, const Twine &Msg) {$/;"	f	class:Stream
printEscapedString	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printEscapedString(const std::string &Str) {$/;"	f	class:CppWriter
printExpr	Target/Mips/InstPrinter/MipsInstPrinter.cpp	/^static void printExpr(const MCExpr *Expr, raw_ostream &OS) {$/;"	f	file:
printExtOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printExtOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printExtendedName	VMCore/DebugInfo.cpp	/^void DIVariable::printExtendedName(raw_ostream &OS) const {$/;"	f	class:DIVariable
printFBits16	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printFBits16(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printFBits32	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printFBits32(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printFCCOperand	Target/Mips/InstPrinter/MipsInstPrinter.cpp	/^printFCCOperand(const MCInst *MI, int opNum, raw_ostream &O) {$/;"	f	class:MipsInstPrinter
printFCCOperand	Target/Mips/MipsAsmPrinter.cpp	/^printFCCOperand(const MachineInstr *MI, int opNum, raw_ostream &O,$/;"	f	class:MipsAsmPrinter
printFPConstant	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printFPConstant(const ConstantFP *Fp, raw_ostream &O) {$/;"	f	class:NVPTXAsmPrinter
printFPImmOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printFPImmOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printFSLImm	Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp	/^void MBlazeInstPrinter::printFSLImm(const MCInst *MI, int OpNo,$/;"	f	class:MBlazeInstPrinter
printFSLImm	Target/MBlaze/MBlazeAsmPrinter.cpp	/^void MBlazeAsmPrinter::printFSLImm(const MachineInstr *MI, int opNum,$/;"	f	class:MBlazeAsmPrinter
printFrameIndexOperand	Target/Hexagon/HexagonAsmPrinter.h	/^    void printFrameIndexOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:llvm::HexagonAsmPrinter
printFrameIndexOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printFrameIndexOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printFunction	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printFunction(const std::string& fname,$/;"	f	class:CppWriter
printFunction	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printFunction(const Function *F) {$/;"	f	class:AssemblyWriter
printFunctionBody	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printFunctionBody(const Function *F) {$/;"	f	class:CppWriter
printFunctionHead	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printFunctionHead(const Function* F) {$/;"	f	class:CppWriter
printFunctionUses	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printFunctionUses(const Function* F) {$/;"	f	class:CppWriter
printFunctions	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printFunctions() {$/;"	f	class:CppWriter
printGenericOptionDiff	Support/CommandLine.cpp	/^printGenericOptionDiff(const Option &O, const GenericOptionValue &Value,$/;"	f	class:generic_parser_base
printGetPCX	Target/Sparc/SparcAsmPrinter.cpp	/^bool SparcAsmPrinter::printGetPCX(const MachineInstr *MI, unsigned opNum,$/;"	f	class:SparcAsmPrinter
printGlobal	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printGlobal(const GlobalVariable *GV) {$/;"	f	class:AssemblyWriter
printGlobalOperand	Target/Hexagon/HexagonAsmPrinter.cpp	/^void HexagonAsmPrinter::printGlobalOperand(const MachineInstr *MI, int OpNo,$/;"	f	class:HexagonAsmPrinter
printGlobalOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printGlobalOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printHBROperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    void printHBROperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:__anon413::SPUAsmPrinter
printHeader	Object/MachOObject.cpp	/^void MachOObject::printHeader(raw_ostream &O) const {$/;"	f	class:MachOObject
printHex32	Target/MBlaze/MBlazeAsmPrinter.cpp	/^static void printHex32(unsigned int Value, raw_ostream &O) {$/;"	f	file:
printHex32	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::printHex32(unsigned Value, raw_ostream &O) {$/;"	f	class:MipsAsmPrinter
printImmOperand	Target/Hexagon/HexagonAsmPrinter.h	/^    void printImmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:llvm::HexagonAsmPrinter
printImmOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printImmPlusOneOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printImmPlusOneOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printImplicitDef	Target/NVPTX/NVPTXAsmPrinter.cpp	/^printImplicitDef(const MachineInstr *MI, raw_ostream &O) const {$/;"	f	class:NVPTXAsmPrinter
printInfoComment	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printInfoComment(const Value &V) {$/;"	f	class:AssemblyWriter
printInline	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printInline(const std::string& fname,$/;"	f	class:CppWriter
printInlineJT	Target/XCore/XCoreAsmPrinter.cpp	/^printInlineJT(const MachineInstr *MI, int opNum, raw_ostream &O,$/;"	f	class:XCoreAsmPrinter
printInlineJT32	Target/XCore/XCoreAsmPrinter.cpp	/^    void printInlineJT32(const MachineInstr *MI, int opNum, raw_ostream &O) {$/;"	f	class:__anon333::XCoreAsmPrinter
printInst	MC/MCDisassembler/EDDisassembler.cpp	/^int EDDisassembler::printInst(std::string &str, MCInst &inst) {$/;"	f	class:EDDisassembler
printInst	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printInst(const MCInst *MI, raw_ostream &O,$/;"	f	class:ARMInstPrinter
printInst	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printInst(const HexagonMCInst *MI, raw_ostream &O,$/;"	f	class:HexagonInstPrinter
printInst	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printInst(const MCInst *MI, raw_ostream &O,$/;"	f	class:HexagonInstPrinter
printInst	Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp	/^void MBlazeInstPrinter::printInst(const MCInst *MI, raw_ostream &O,$/;"	f	class:MBlazeInstPrinter
printInst	Target/MSP430/InstPrinter/MSP430InstPrinter.cpp	/^void MSP430InstPrinter::printInst(const MCInst *MI, raw_ostream &O,$/;"	f	class:MSP430InstPrinter
printInst	Target/Mips/InstPrinter/MipsInstPrinter.cpp	/^void MipsInstPrinter::printInst(const MCInst *MI, raw_ostream &O,$/;"	f	class:MipsInstPrinter
printInst	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printInst(const MCInst *MI, raw_ostream &O,$/;"	f	class:PPCInstPrinter
printInst	Target/X86/InstPrinter/X86ATTInstPrinter.cpp	/^void X86ATTInstPrinter::printInst(const MCInst *MI, raw_ostream &OS,$/;"	f	class:X86ATTInstPrinter
printInst	Target/X86/InstPrinter/X86IntelInstPrinter.cpp	/^void X86IntelInstPrinter::printInst(const MCInst *MI, raw_ostream &OS,$/;"	f	class:X86IntelInstPrinter
printInstrs	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::printInstrs(raw_ostream &OS) const {$/;"	f	class:LiveIntervals
printInstruction	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printInstruction(const Instruction *I,$/;"	f	class:CppWriter
printInstruction	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printInstruction(const Instruction &I) {$/;"	f	class:AssemblyWriter
printIntelMemReference	Target/X86/X86AsmPrinter.cpp	/^void X86AsmPrinter::printIntelMemReference(const MachineInstr *MI, unsigned Op,$/;"	f	class:X86AsmPrinter
printInternal	VMCore/DebugInfo.cpp	/^void DICompileUnit::printInternal(raw_ostream &OS) const {$/;"	f	class:DICompileUnit
printInternal	VMCore/DebugInfo.cpp	/^void DICompositeType::printInternal(raw_ostream &OS) const {$/;"	f	class:DICompositeType
printInternal	VMCore/DebugInfo.cpp	/^void DIDerivedType::printInternal(raw_ostream &OS) const {$/;"	f	class:DIDerivedType
printInternal	VMCore/DebugInfo.cpp	/^void DIEnumerator::printInternal(raw_ostream &OS) const {$/;"	f	class:DIEnumerator
printInternal	VMCore/DebugInfo.cpp	/^void DIGlobalVariable::printInternal(raw_ostream &OS) const {$/;"	f	class:DIGlobalVariable
printInternal	VMCore/DebugInfo.cpp	/^void DIObjCProperty::printInternal(raw_ostream &OS) const {$/;"	f	class:DIObjCProperty
printInternal	VMCore/DebugInfo.cpp	/^void DIScope::printInternal(raw_ostream &OS) const {$/;"	f	class:DIScope
printInternal	VMCore/DebugInfo.cpp	/^void DISubprogram::printInternal(raw_ostream &OS) const {$/;"	f	class:DISubprogram
printInternal	VMCore/DebugInfo.cpp	/^void DISubrange::printInternal(raw_ostream &OS) const {$/;"	f	class:DISubrange
printInternal	VMCore/DebugInfo.cpp	/^void DIType::printInternal(raw_ostream &OS) const {$/;"	f	class:DIType
printInternal	VMCore/DebugInfo.cpp	/^void DIVariable::printInternal(raw_ostream &OS) const {$/;"	f	class:DIVariable
printJumpTable	Target/Hexagon/HexagonAsmPrinter.cpp	/^void HexagonAsmPrinter::printJumpTable(const MachineInstr *MI, int OpNo,$/;"	f	class:HexagonAsmPrinter
printJumpTable	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printJumpTable(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printLdStCode	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printLdStCode(const MachineInstr *MI, int opNum,$/;"	f	class:NVPTXAsmPrinter
printLdStmModeOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printLdStmModeOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printLeaMemReference	Target/X86/X86AsmPrinter.cpp	/^void X86AsmPrinter::printLeaMemReference(const MachineInstr *MI, unsigned Op,$/;"	f	class:X86AsmPrinter
printLine	Analysis/AliasAnalysisCounter.cpp	/^    void printLine(const char *Desc, unsigned Val, unsigned Sum) {$/;"	f	class:__anon43::AliasAnalysisCounter
printLine	TableGen/TableGenBackend.cpp	/^static void printLine(raw_ostream &OS, const Twine &Prefix, char Fill,$/;"	f	file:
printLinkageType	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printLinkageType(GlobalValue::LinkageTypes LT) {$/;"	f	class:CppWriter
printMDNodeBody	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printMDNodeBody(const MDNode *Node) {$/;"	f	class:AssemblyWriter
printMEMriOperand	Target/Hexagon/HexagonAsmPrinter.h	/^    void printMEMriOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:llvm::HexagonAsmPrinter
printMEMriOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printMEMriOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printMSRMaskOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printMSRMaskOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printMandatoryPredicateOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printMandatoryPredicateOperand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printMemBOption	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printMemBOption(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printMemOperand	Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp	/^void MBlazeInstPrinter::printMemOperand(const MCInst *MI, int OpNo,$/;"	f	class:MBlazeInstPrinter
printMemOperand	Target/MBlaze/MBlazeAsmPrinter.cpp	/^printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &O,$/;"	f	class:MBlazeAsmPrinter
printMemOperand	Target/Mips/InstPrinter/MipsInstPrinter.cpp	/^printMemOperand(const MCInst *MI, int opNum, raw_ostream &O) {$/;"	f	class:MipsInstPrinter
printMemOperand	Target/Mips/MipsAsmPrinter.cpp	/^printMemOperand(const MachineInstr *MI, int opNum, raw_ostream &O) {$/;"	f	class:MipsAsmPrinter
printMemOperand	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printMemOperand(const MachineInstr *MI, int opNum,$/;"	f	class:NVPTXAsmPrinter
printMemOperand	Target/Sparc/SparcAsmPrinter.cpp	/^void SparcAsmPrinter::printMemOperand(const MachineInstr *MI, int opNum,$/;"	f	class:SparcAsmPrinter
printMemOperand	Target/XCore/XCoreAsmPrinter.cpp	/^void XCoreAsmPrinter::printMemOperand(const MachineInstr *MI, int opNum,$/;"	f	class:XCoreAsmPrinter
printMemOperandEA	Target/Mips/InstPrinter/MipsInstPrinter.cpp	/^printMemOperandEA(const MCInst *MI, int opNum, raw_ostream &O) {$/;"	f	class:MipsInstPrinter
printMemOperandEA	Target/Mips/MipsAsmPrinter.cpp	/^printMemOperandEA(const MachineInstr *MI, int opNum, raw_ostream &O) {$/;"	f	class:MipsAsmPrinter
printMemReference	Target/X86/InstPrinter/X86ATTInstPrinter.cpp	/^void X86ATTInstPrinter::printMemReference(const MCInst *MI, unsigned Op,$/;"	f	class:X86ATTInstPrinter
printMemReference	Target/X86/InstPrinter/X86IntelInstPrinter.cpp	/^void X86IntelInstPrinter::printMemReference(const MCInst *MI, unsigned Op,$/;"	f	class:X86IntelInstPrinter
printMemReference	Target/X86/X86AsmPrinter.cpp	/^void X86AsmPrinter::printMemReference(const MachineInstr *MI, unsigned Op,$/;"	f	class:X86AsmPrinter
printMemRegImm	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printMemRegImm(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printMemRegImmShifted	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printMemRegImmShifted(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printMemRegReg	Target/CellSPU/SPUAsmPrinter.cpp	/^    printMemRegReg(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:__anon413::SPUAsmPrinter
printMemRegReg	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printMemRegReg(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printModule	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printModule(const std::string& fname,$/;"	f	class:CppWriter
printModule	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printModule(const Module *M) {$/;"	f	class:AssemblyWriter
printModuleBody	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printModuleBody() {$/;"	f	class:CppWriter
printModuleLevelGV	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printModuleLevelGV(GlobalVariable* GVar, raw_ostream &O,$/;"	f	class:NVPTXAsmPrinter
printNEONModImmOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printNEONModImmOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printNOneImmOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printNOneImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printNamedMDNode	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printNamedMDNode(const NamedMDNode *NMD) {$/;"	f	class:AssemblyWriter
printNegImmOperand	Target/Hexagon/HexagonAsmPrinter.h	/^    void printNegImmOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:llvm::HexagonAsmPrinter
printNegImmOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printNegImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printNoHashImmediate	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printNoHashImmediate(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printOffset	CodeGen/AsmPrinter/AsmPrinter.cpp	/^void AsmPrinter::printOffset(int64_t Offset, raw_ostream &OS) const {$/;"	f	class:AsmPrinter
printOneChild	Support/Twine.cpp	/^void Twine::printOneChild(raw_ostream &OS, Child Ptr,$/;"	f	class:Twine
printOneChildRepr	Support/Twine.cpp	/^void Twine::printOneChildRepr(raw_ostream &OS, Child Ptr,$/;"	f	class:Twine
printOp	Target/CellSPU/SPUAsmPrinter.cpp	/^void SPUAsmPrinter::printOp(const MachineOperand &MO, raw_ostream &O) {$/;"	f	class:SPUAsmPrinter
printOperand	Target/ARM/ARMAsmPrinter.cpp	/^void ARMAsmPrinter::printOperand(const MachineInstr *MI, int OpNum,$/;"	f	class:ARMAsmPrinter
printOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:ARMInstPrinter
printOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    void printOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:__anon413::SPUAsmPrinter
printOperand	Target/Hexagon/HexagonAsmPrinter.cpp	/^void HexagonAsmPrinter::printOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:HexagonAsmPrinter
printOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printOperand	Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp	/^void MBlazeInstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:MBlazeInstPrinter
printOperand	Target/MBlaze/MBlazeAsmPrinter.cpp	/^void MBlazeAsmPrinter::printOperand(const MachineInstr *MI, int opNum,$/;"	f	class:MBlazeAsmPrinter
printOperand	Target/MSP430/InstPrinter/MSP430InstPrinter.cpp	/^void MSP430InstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:MSP430InstPrinter
printOperand	Target/MSP430/MSP430AsmPrinter.cpp	/^void MSP430AsmPrinter::printOperand(const MachineInstr *MI, int OpNum,$/;"	f	class:MSP430AsmPrinter
printOperand	Target/Mips/InstPrinter/MipsInstPrinter.cpp	/^void MipsInstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:MipsInstPrinter
printOperand	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::printOperand(const MachineInstr *MI, int opNum,$/;"	f	class:MipsAsmPrinter
printOperand	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printOperand(const MachineInstr *MI, int opNum,$/;"	f	class:NVPTXAsmPrinter
printOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printOperand	Target/PowerPC/PPCAsmPrinter.cpp	/^void PPCAsmPrinter::printOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:PPCAsmPrinter
printOperand	Target/Sparc/SparcAsmPrinter.cpp	/^void SparcAsmPrinter::printOperand(const MachineInstr *MI, int opNum,$/;"	f	class:SparcAsmPrinter
printOperand	Target/X86/InstPrinter/X86ATTInstPrinter.cpp	/^void X86ATTInstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:X86ATTInstPrinter
printOperand	Target/X86/InstPrinter/X86IntelInstPrinter.cpp	/^void X86IntelInstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:X86IntelInstPrinter
printOperand	Target/X86/X86AsmPrinter.cpp	/^void X86AsmPrinter::printOperand(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:X86AsmPrinter
printOperand	Target/XCore/XCoreAsmPrinter.cpp	/^void XCoreAsmPrinter::printOperand(const MachineInstr *MI, int opNum,$/;"	f	class:XCoreAsmPrinter
printOptionDiff	Support/CommandLine.cpp	/^printOptionDiff(const Option &O, StringRef V, OptionValue<std::string> D,$/;"	f	class:parser
printOptionInfo	Support/CommandLine.cpp	/^void alias::printOptionInfo(size_t GlobalWidth) const {$/;"	f	class:alias
printOptionInfo	Support/CommandLine.cpp	/^void basic_parser_impl::printOptionInfo(const Option &O,$/;"	f	class:basic_parser_impl
printOptionInfo	Support/CommandLine.cpp	/^void generic_parser_base::printOptionInfo(const Option &O,$/;"	f	class:generic_parser_base
printOptionName	Support/CommandLine.cpp	/^void basic_parser_impl::printOptionName(const Option &O,$/;"	f	class:basic_parser_impl
printOptionNoValue	Support/CommandLine.cpp	/^printOptionNoValue(const Option &O, size_t GlobalWidth) const {$/;"	f	class:basic_parser_impl
printPCLabel	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printPCLabel(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printPCRelImm	Target/X86/InstPrinter/X86ATTInstPrinter.cpp	/^void X86ATTInstPrinter::printPCRelImm(const MCInst *MI, unsigned OpNo,$/;"	f	class:X86ATTInstPrinter
printPCRelImm	Target/X86/InstPrinter/X86IntelInstPrinter.cpp	/^void X86IntelInstPrinter::printPCRelImm(const MCInst *MI, unsigned OpNo,$/;"	f	class:X86IntelInstPrinter
printPCRelImm	Target/X86/X86AsmPrinter.cpp	/^void X86AsmPrinter::printPCRelImm(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:X86AsmPrinter
printPCRelImmOperand	Target/MSP430/InstPrinter/MSP430InstPrinter.cpp	/^void MSP430InstPrinter::printPCRelImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:MSP430InstPrinter
printPCRelativeOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    void printPCRelativeOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:__anon413::SPUAsmPrinter
printPImmediate	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printPImmediate(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printPKHASRShiftImm	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printPKHASRShiftImm(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printPKHLSLShiftImm	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printPKHLSLShiftImm(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printParamName	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printParamName(Function::const_arg_iterator I,$/;"	f	class:NVPTXAsmPrinter
printParamName	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printParamName(int paramIndex, raw_ostream &O) {$/;"	f	class:NVPTXAsmPrinter
printPostIdxImm8Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printPostIdxImm8Operand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printPostIdxImm8s4Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printPostIdxImm8s4Operand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printPostIdxRegOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printPostIdxRegOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printPredicateOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printPredicateOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printPredicateOperand	Target/Hexagon/HexagonAsmPrinter.cpp	/^void HexagonAsmPrinter::printPredicateOperand(const MachineInstr *MI,$/;"	f	class:HexagonAsmPrinter
printPredicateOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printPredicateOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printPredicateOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printPredicateOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printProgram	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printProgram(const std::string& fname,$/;"	f	class:CppWriter
printROTHNeg7Imm	Target/CellSPU/SPUAsmPrinter.cpp	/^    void printROTHNeg7Imm(const MachineInstr *MI, unsigned OpNo,$/;"	f	class:__anon413::SPUAsmPrinter
printROTNeg7Imm	Target/CellSPU/SPUAsmPrinter.cpp	/^    void printROTNeg7Imm(const MachineInstr *MI, unsigned OpNo, raw_ostream &O){$/;"	f	class:__anon413::SPUAsmPrinter
printRegImmShift	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^static void printRegImmShift(raw_ostream &O, ARM_AM::ShiftOpc ShOpc,$/;"	f	file:
printRegName	MC/MCInstPrinter.cpp	/^void MCInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {$/;"	f	class:MCInstPrinter
printRegName	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {$/;"	f	class:ARMInstPrinter
printRegName	Target/Mips/InstPrinter/MipsInstPrinter.cpp	/^void MipsInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {$/;"	f	class:MipsInstPrinter
printRegName	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {$/;"	f	class:PPCInstPrinter
printRegName	Target/X86/InstPrinter/X86ATTInstPrinter.cpp	/^void X86ATTInstPrinter::printRegName(raw_ostream &OS,$/;"	f	class:X86ATTInstPrinter
printRegName	Target/X86/InstPrinter/X86IntelInstPrinter.cpp	/^void X86IntelInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {$/;"	f	class:X86IntelInstPrinter
printRegionCluster	Analysis/RegionPrinter.cpp	/^  static void printRegionCluster(const Region *R, GraphWriter<RegionInfo*> &GW,$/;"	f	struct:llvm::DOTGraphTraits
printRegister	Target/Hexagon/HexagonAsmPrinter.h	/^    void printRegister(const MachineOperand &MO, bool R0AsZero,$/;"	f	class:llvm::HexagonAsmPrinter
printRegisterList	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printRegisterList(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printRegisteredTargetsForVersion	Support/TargetRegistry.cpp	/^void TargetRegistry::printRegisteredTargetsForVersion() {$/;"	f	class:TargetRegistry
printRelocationTargetName	Object/MachOObjectFile.cpp	/^void MachOObjectFile::printRelocationTargetName($/;"	f	class:llvm::object::MachOObjectFile
printRepr	Support/Twine.cpp	/^void Twine::printRepr(raw_ostream &OS) const {$/;"	f	class:Twine
printReturnValStr	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printReturnValStr(const Function *F,$/;"	f	class:NVPTXAsmPrinter
printReturnValStr	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printReturnValStr(const MachineFunction &MF,$/;"	f	class:NVPTXAsmPrinter
printRotImmOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printRotImmOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printS10ImmOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    printS10ImmOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O)$/;"	f	class:__anon413::SPUAsmPrinter
printS16ImmOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    printS16ImmOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O)$/;"	f	class:__anon413::SPUAsmPrinter
printS16ImmOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printS16ImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printS16X4ImmOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printS16X4ImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printS5ImmOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printS5ImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printSBitModifierOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printSBitModifierOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printSORegImmOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printSORegImmOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printSORegRegOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printSORegRegOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printSSECC	Target/X86/InstPrinter/X86ATTInstPrinter.cpp	/^void X86ATTInstPrinter::printSSECC(const MCInst *MI, unsigned Op,$/;"	f	class:X86ATTInstPrinter
printSSECC	Target/X86/InstPrinter/X86IntelInstPrinter.cpp	/^void X86IntelInstPrinter::printSSECC(const MCInst *MI, unsigned Op,$/;"	f	class:X86IntelInstPrinter
printSavedRegsBitmask	Target/MBlaze/MBlazeAsmPrinter.cpp	/^void MBlazeAsmPrinter::printSavedRegsBitmask() {$/;"	f	class:MBlazeAsmPrinter
printSavedRegsBitmask	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::printSavedRegsBitmask(raw_ostream &O) {$/;"	f	class:MipsAsmPrinter
printScalarConstant	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printScalarConstant(Constant *CPV, raw_ostream &O) {$/;"	f	class:NVPTXAsmPrinter
printSetendOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printSetendOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printShiftImmOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printShiftImmOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printShufAddr	Target/CellSPU/SPUAsmPrinter.cpp	/^    printShufAddr(const MachineInstr *MI, unsigned OpNo, raw_ostream &O)$/;"	f	class:__anon413::SPUAsmPrinter
printSrcMemOperand	Target/MSP430/InstPrinter/MSP430InstPrinter.cpp	/^void MSP430InstPrinter::printSrcMemOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:MSP430InstPrinter
printSrcMemOperand	Target/MSP430/MSP430AsmPrinter.cpp	/^void MSP430AsmPrinter::printSrcMemOperand(const MachineInstr *MI, int OpNum,$/;"	f	class:MSP430AsmPrinter
printStructBody	VMCore/AsmWriter.cpp	/^void TypePrinting::printStructBody(StructType *STy, raw_ostream &OS) {$/;"	f	class:TypePrinting
printSymbol	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printSymbol(const MCInst *MI, unsigned OpNo,$/;"	f	class:HexagonInstPrinter
printSymbolHi	Target/CellSPU/SPUAsmPrinter.cpp	/^    void printSymbolHi(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:__anon413::SPUAsmPrinter
printSymbolHi	Target/Hexagon/HexagonAsmPrinter.h	/^    void printSymbolHi(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::HexagonAsmPrinter
printSymbolHi	Target/Hexagon/InstPrinter/HexagonInstPrinter.h	/^    void printSymbolHi(const MCInst *MI, unsigned OpNo, raw_ostream &O) const$/;"	f	class:llvm::HexagonInstPrinter
printSymbolHi	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printSymbolHi(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printSymbolLSA	Target/CellSPU/SPUAsmPrinter.cpp	/^    void printSymbolLSA(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:__anon413::SPUAsmPrinter
printSymbolLo	Target/CellSPU/SPUAsmPrinter.cpp	/^    void printSymbolLo(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:__anon413::SPUAsmPrinter
printSymbolLo	Target/Hexagon/HexagonAsmPrinter.h	/^    void printSymbolLo(const MachineInstr *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::HexagonAsmPrinter
printSymbolLo	Target/Hexagon/InstPrinter/HexagonInstPrinter.h	/^    void printSymbolLo(const MCInst *MI, unsigned OpNo, raw_ostream &O) const$/;"	f	class:llvm::HexagonInstPrinter
printSymbolLo	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printSymbolLo(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printSymbolOperand	Target/X86/X86AsmPrinter.cpp	/^void X86AsmPrinter::printSymbolOperand(const MachineOperand &MO,$/;"	f	class:X86AsmPrinter
printT2AddrModeImm0_1020s4Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printT2AddrModeImm0_1020s4Operand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printT2AddrModeImm8OffsetOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printT2AddrModeImm8OffsetOperand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printT2AddrModeImm8Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printT2AddrModeImm8Operand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printT2AddrModeImm8s4OffsetOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printT2AddrModeImm8s4OffsetOperand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printT2AddrModeImm8s4Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printT2AddrModeImm8s4Operand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printT2AddrModeSoRegOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printT2AddrModeSoRegOperand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printT2LdrLabelOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printT2LdrLabelOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printT2SOOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printT2SOOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printThreadLocalMode	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printThreadLocalMode(GlobalVariable::ThreadLocalMode TLM) {$/;"	f	class:CppWriter
printThumbAddrModeImm5S1Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printThumbAddrModeImm5S1Operand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printThumbAddrModeImm5S2Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printThumbAddrModeImm5S2Operand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printThumbAddrModeImm5S4Operand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printThumbAddrModeImm5S4Operand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printThumbAddrModeImm5SOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printThumbAddrModeImm5SOperand(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printThumbAddrModeRROperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printThumbAddrModeRROperand(const MCInst *MI, unsigned Op,$/;"	f	class:ARMInstPrinter
printThumbAddrModeSPOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printThumbAddrModeSPOperand(const MCInst *MI, unsigned Op,$/;"	f	class:ARMInstPrinter
printThumbITMask	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printThumbITMask(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printThumbS4ImmOperand	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printThumbS4ImmOperand(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printThumbSRImm	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printThumbSRImm(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printType	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printType(Type* Ty) {$/;"	f	class:CppWriter
printType	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printType(const std::string &fname,$/;"	f	class:CppWriter
printTypeIdentities	VMCore/AsmWriter.cpp	/^void AssemblyWriter::printTypeIdentities() {$/;"	f	class:AssemblyWriter
printTypes	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printTypes(const Module* M) {$/;"	f	class:CppWriter
printU10ImmOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    printU10ImmOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O)$/;"	f	class:__anon413::SPUAsmPrinter
printU16ImmOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    printU16ImmOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O)$/;"	f	class:__anon413::SPUAsmPrinter
printU16ImmOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printU16ImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printU18ImmOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    printU18ImmOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O)$/;"	f	class:__anon413::SPUAsmPrinter
printU5ImmOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printU5ImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printU6ImmOperand	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printU6ImmOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printU7ImmOperand	Target/CellSPU/SPUAsmPrinter.cpp	/^    printU7ImmOperand(const MachineInstr *MI, unsigned OpNo, raw_ostream &O)$/;"	f	class:__anon413::SPUAsmPrinter
printUnsignedImm	Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp	/^void MBlazeInstPrinter::printUnsignedImm(const MCInst *MI, int OpNo,$/;"	f	class:MBlazeInstPrinter
printUnsignedImm	Target/MBlaze/MBlazeAsmPrinter.cpp	/^void MBlazeAsmPrinter::printUnsignedImm(const MachineInstr *MI, int opNum,$/;"	f	class:MBlazeAsmPrinter
printUnsignedImm	Target/Mips/InstPrinter/MipsInstPrinter.cpp	/^void MipsInstPrinter::printUnsignedImm(const MCInst *MI, int opNum,$/;"	f	class:MipsInstPrinter
printUnsignedImm	Target/Mips/MipsAsmPrinter.cpp	/^void MipsAsmPrinter::printUnsignedImm(const MachineInstr *MI, int opNum,$/;"	f	class:MipsAsmPrinter
printUnsignedImmOperand	Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp	/^void HexagonInstPrinter::printUnsignedImmOperand(const MCInst *MI,$/;"	f	class:HexagonInstPrinter
printUsers	Transforms/Scalar/SROA.cpp	/^void AllocaPartitioning::printUsers(raw_ostream &OS, const_iterator I,$/;"	f	class:AllocaPartitioning
printVal	Support/Timer.cpp	/^static void printVal(double Val, double Total, raw_ostream &OS) {$/;"	f	file:
printVariable	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printVariable(const std::string& fname,$/;"	f	class:CppWriter
printVariableBody	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printVariableBody(const GlobalVariable *GV) {$/;"	f	class:CppWriter
printVariableDeclaration	Analysis/DbgInfoPrinter.cpp	/^void PrintDbgInfo::printVariableDeclaration(const Value *V) {$/;"	f	class:PrintDbgInfo
printVariableHead	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printVariableHead(const GlobalVariable *GV) {$/;"	f	class:CppWriter
printVariableUses	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printVariableUses(const GlobalVariable *GV) {$/;"	f	class:CppWriter
printVecModifiedImmediate	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::printVecModifiedImmediate(const MachineOperand &MO,$/;"	f	class:NVPTXAsmPrinter
printVectorIndex	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorIndex(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printVectorListFour	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListFour(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printVectorListFourAllLanes	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListFourAllLanes(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVectorListFourSpaced	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListFourSpaced(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVectorListFourSpacedAllLanes	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListFourSpacedAllLanes(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVectorListOne	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListOne(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printVectorListOneAllLanes	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListOneAllLanes(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVectorListThree	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListThree(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printVectorListThreeAllLanes	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListThreeAllLanes(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVectorListThreeSpaced	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListThreeSpaced(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVectorListThreeSpacedAllLanes	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListThreeSpacedAllLanes(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVectorListTwo	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListTwo(const MCInst *MI, unsigned OpNum,$/;"	f	class:ARMInstPrinter
printVectorListTwoAllLanes	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListTwoAllLanes(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVectorListTwoSpaced	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListTwoSpaced(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVectorListTwoSpacedAllLanes	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^void ARMInstPrinter::printVectorListTwoSpacedAllLanes(const MCInst *MI,$/;"	f	class:ARMInstPrinter
printVisibilityType	Target/CppBackend/CPPBackend.cpp	/^void CppWriter::printVisibilityType(GlobalValue::VisibilityTypes VisType) {$/;"	f	class:CppWriter
print_details	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::print_details(raw_ostream &OS, const SelectionDAG *G) const {$/;"	f	class:SDNode
print_factors_and_types	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::print_factors_and_types(raw_ostream &OS) const {$/;"	f	class:LSRInstance
print_fixups	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::print_fixups(raw_ostream &OS) const {$/;"	f	class:LSRInstance
print_types	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::print_types(raw_ostream &OS, const SelectionDAG *G) const {$/;"	f	class:SDNode
print_uses	Transforms/Scalar/LoopStrengthReduce.cpp	/^void LSRInstance::print_uses(raw_ostream &OS) const {$/;"	f	class:LSRInstance
printcrbitm	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^void PPCInstPrinter::printcrbitm(const MCInst *MI, unsigned OpNo,$/;"	f	class:PPCInstPrinter
printf128mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printf128mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printf128mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printf128mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printf256mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printf256mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printf256mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printf256mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printf32mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printf32mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printf32mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printf32mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printf64mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printf64mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printf64mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printf64mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printf80mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printf80mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printf80mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printf80mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printi128mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printi128mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printi128mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printi128mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printi16mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printi16mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printi16mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printi16mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printi256mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printi256mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printi256mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printi256mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printi32mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printi32mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printi32mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printi32mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printi64mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printi64mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printi64mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printi64mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printi8mem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printi8mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printi8mem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printi8mem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printopaquemem	Target/X86/InstPrinter/X86ATTInstPrinter.h	/^  void printopaquemem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86ATTInstPrinter
printopaquemem	Target/X86/InstPrinter/X86IntelInstPrinter.h	/^  void printopaquemem(const MCInst *MI, unsigned OpNo, raw_ostream &O) {$/;"	f	class:llvm::X86IntelInstPrinter
printr	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::printr(raw_ostream &OS, const SelectionDAG *G) const {$/;"	f	class:SDNode
printrFull	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::printrFull(raw_ostream &OS, const SelectionDAG *G) const {$/;"	f	class:SDNode
printrWithDepth	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^void SDNode::printrWithDepth(raw_ostream &OS, const SelectionDAG *G,$/;"	f	class:SDNode
printrWithDepthHelper	CodeGen/SelectionDAG/SelectionDAGDumper.cpp	/^static void printrWithDepthHelper(raw_ostream &OS, const SDNode *N,$/;"	f	file:
priorNonDebug	CodeGen/MachineScheduler.cpp	/^priorNonDebug(MachineBasicBlock::iterator I, MachineBasicBlock::iterator Beg) {$/;"	f	file:
priority_order	CodeGen/AsmPrinter/AsmPrinter.cpp	/^static bool priority_order(const Structor& lhs, const Structor& rhs) {$/;"	f	file:
process	Transforms/Scalar/EarlyCSE.cpp	/^    void process() { Processed = true; }$/;"	f	class:__anon566::EarlyCSE::StackNode
processBasicBlock	Target/X86/X86FloatingPoint.cpp	/^bool FPS::processBasicBlock(MachineFunction &MF, MachineBasicBlock &BB) {$/;"	f	class:FPS
processBasicBlock	Target/X86/X86VZeroUpper.cpp	/^bool VZeroUpperInserter::processBasicBlock(MachineFunction &MF,$/;"	f	class:VZeroUpperInserter
processBlock	Transforms/Scalar/GVN.cpp	/^bool GVN::processBlock(BasicBlock *BB) {$/;"	f	class:GVN
processByValArgument	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemCpyOpt::processByValArgument(CallSite CS, unsigned ArgNo) {$/;"	f	class:MemCpyOpt
processCmp	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^bool CorrelatedValuePropagation::processCmp(CmpInst *C) {$/;"	f	class:CorrelatedValuePropagation
processCurrentLoop	Transforms/Scalar/LoopUnswitch.cpp	/^bool LoopUnswitch::processCurrentLoop() {$/;"	f	class:LoopUnswitch
processDebugLoc	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::processDebugLoc(DebugLoc DL, bool BeforePrintingInsn) {$/;"	f	class:JITEmitter
processDeclare	VMCore/DebugInfo.cpp	/^void DebugInfoFinder::processDeclare(DbgDeclareInst *DDI) {$/;"	f	class:DebugInfoFinder
processDefs	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::processDefs(MachineInstr *MI, bool Kill) {$/;"	f	class:ExeDepsFix
processFixupValue	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^void ARMAsmBackend::processFixupValue(const MCAssembler &Asm,$/;"	f	class:ARMAsmBackend
processFunction	VMCore/AsmWriter.cpp	/^void SlotTracker::processFunction() {$/;"	f	class:SlotTracker
processFunctionBeforeCalleeSavedScan	Target/ARM/ARMFrameLowering.cpp	/^ARMFrameLowering::processFunctionBeforeCalleeSavedScan(MachineFunction &MF,$/;"	f	class:ARMFrameLowering
processFunctionBeforeCalleeSavedScan	Target/CellSPU/SPUFrameLowering.cpp	/^void SPUFrameLowering::processFunctionBeforeCalleeSavedScan(MachineFunction &MF,$/;"	f	class:SPUFrameLowering
processFunctionBeforeCalleeSavedScan	Target/MBlaze/MBlazeFrameLowering.cpp	/^processFunctionBeforeCalleeSavedScan(MachineFunction &MF,$/;"	f	class:MBlazeFrameLowering
processFunctionBeforeCalleeSavedScan	Target/Mips/Mips16FrameLowering.cpp	/^processFunctionBeforeCalleeSavedScan(MachineFunction &MF,$/;"	f	class:Mips16FrameLowering
processFunctionBeforeCalleeSavedScan	Target/Mips/MipsSEFrameLowering.cpp	/^processFunctionBeforeCalleeSavedScan(MachineFunction &MF,$/;"	f	class:MipsSEFrameLowering
processFunctionBeforeCalleeSavedScan	Target/PowerPC/PPCFrameLowering.cpp	/^PPCFrameLowering::processFunctionBeforeCalleeSavedScan(MachineFunction &MF,$/;"	f	class:PPCFrameLowering
processFunctionBeforeCalleeSavedScan	Target/X86/X86FrameLowering.cpp	/^X86FrameLowering::processFunctionBeforeCalleeSavedScan(MachineFunction &MF,$/;"	f	class:X86FrameLowering
processFunctionBeforeCalleeSavedScan	Target/XCore/XCoreFrameLowering.cpp	/^XCoreFrameLowering::processFunctionBeforeCalleeSavedScan(MachineFunction &MF,$/;"	f	class:XCoreFrameLowering
processFunctionBeforeFrameFinalized	Target/MBlaze/MBlazeRegisterInfo.cpp	/^processFunctionBeforeFrameFinalized(MachineFunction &MF) const {$/;"	f	class:MBlazeRegisterInfo
processFunctionBeforeFrameFinalized	Target/MSP430/MSP430FrameLowering.cpp	/^MSP430FrameLowering::processFunctionBeforeFrameFinalized(MachineFunction &MF)$/;"	f	class:MSP430FrameLowering
processFunctionBeforeFrameFinalized	Target/PowerPC/PPCFrameLowering.cpp	/^void PPCFrameLowering::processFunctionBeforeFrameFinalized(MachineFunction &MF)$/;"	f	class:PPCFrameLowering
processImplicitDef	CodeGen/ProcessImplicitDefs.cpp	/^void ProcessImplicitDefs::processImplicitDef(MachineInstr *MI) {$/;"	f	class:ProcessImplicitDefs
processInstruction	Target/ARM/AsmParser/ARMAsmParser.cpp	/^processInstruction(MCInst &Inst,$/;"	f	class:ARMAsmParser
processInstruction	Target/X86/AsmParser/X86AsmParser.cpp	/^processInstruction(MCInst &Inst,$/;"	f	class:X86AsmParser
processInstruction	Transforms/Scalar/GVN.cpp	/^bool GVN::processInstruction(Instruction *I) {$/;"	f	class:GVN
processLexicalBlock	VMCore/DebugInfo.cpp	/^void DebugInfoFinder::processLexicalBlock(DILexicalBlock LB) {$/;"	f	class:DebugInfoFinder
processLoad	Transforms/Scalar/GVN.cpp	/^bool GVN::processLoad(LoadInst *L) {$/;"	f	class:GVN
processLocation	VMCore/DebugInfo.cpp	/^void DebugInfoFinder::processLocation(DILocation Loc) {$/;"	f	class:DebugInfoFinder
processLoopMemSet	Transforms/Scalar/LoopIdiomRecognize.cpp	/^processLoopMemSet(MemSetInst *MSI, const SCEV *BECount) {$/;"	f	class:LoopIdiomRecognize
processLoopStore	Transforms/Scalar/LoopIdiomRecognize.cpp	/^bool LoopIdiomRecognize::processLoopStore(StoreInst *SI, const SCEV *BECount) {$/;"	f	class:LoopIdiomRecognize
processLoopStoreOfLoopLoad	Transforms/Scalar/LoopIdiomRecognize.cpp	/^processLoopStoreOfLoopLoad(StoreInst *SI, unsigned StoreSize,$/;"	f	class:LoopIdiomRecognize
processLoopStridedStore	Transforms/Scalar/LoopIdiomRecognize.cpp	/^processLoopStridedStore(Value *DestPtr, unsigned StoreSize,$/;"	f	class:LoopIdiomRecognize
processMemAccess	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^bool CorrelatedValuePropagation::processMemAccess(Instruction *I) {$/;"	f	class:CorrelatedValuePropagation
processMemCpy	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemCpyOpt::processMemCpy(MemCpyInst *M) {$/;"	f	class:MemCpyOpt
processMemCpyMemCpyDependence	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemCpyOpt::processMemCpyMemCpyDependence(MemCpyInst *M, MemCpyInst *MDep,$/;"	f	class:MemCpyOpt
processMemMove	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemCpyOpt::processMemMove(MemMoveInst *M) {$/;"	f	class:MemCpyOpt
processMemSet	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemCpyOpt::processMemSet(MemSetInst *MSI, BasicBlock::iterator &BBI) {$/;"	f	class:MemCpyOpt
processModule	VMCore/AsmWriter.cpp	/^void SlotTracker::processModule() {$/;"	f	class:SlotTracker
processModule	VMCore/DebugInfo.cpp	/^void DebugInfoFinder::processModule(Module &M) {$/;"	f	class:DebugInfoFinder
processNode	Transforms/Scalar/EarlyCSE.cpp	/^bool EarlyCSE::processNode(DomTreeNode *Node) {$/;"	f	class:EarlyCSE
processNonLocalLoad	Transforms/Scalar/GVN.cpp	/^bool GVN::processNonLocalLoad(LoadInst *LI) {$/;"	f	class:GVN
processPHI	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^bool CorrelatedValuePropagation::processPHI(PHINode *P) {$/;"	f	class:CorrelatedValuePropagation
processRelocationRef	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^void RuntimeDyldELF::processRelocationRef(const ObjRelocationInfo &Rel,$/;"	f	class:llvm::RuntimeDyldELF
processRelocationRef	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp	/^void RuntimeDyldMachO::processRelocationRef(const ObjRelocationInfo &Rel,$/;"	f	class:llvm::RuntimeDyldMachO
processSelect	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^bool CorrelatedValuePropagation::processSelect(SelectInst *S) {$/;"	f	class:CorrelatedValuePropagation
processStillExecuting	Support/LockFileManager.cpp	/^bool LockFileManager::processStillExecuting(StringRef Hostname, int PID) {$/;"	f	class:LockFileManager
processStore	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemCpyOpt::processStore(StoreInst *SI, BasicBlock::iterator &BBI) {$/;"	f	class:MemCpyOpt
processSubprogram	VMCore/DebugInfo.cpp	/^void DebugInfoFinder::processSubprogram(DISubprogram SP) {$/;"	f	class:DebugInfoFinder
processSwitch	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^bool CorrelatedValuePropagation::processSwitch(SwitchInst *SI) {$/;"	f	class:CorrelatedValuePropagation
processSwitchInst	Transforms/Utils/LowerSwitch.cpp	/^void LowerSwitch::processSwitchInst(SwitchInst *SI) {$/;"	f	class:LowerSwitch
processTiedPairs	CodeGen/TwoAddressInstructionPass.cpp	/^TwoAddressInstructionPass::processTiedPairs(MachineInstr *MI,$/;"	f	class:TwoAddressInstructionPass
processType	VMCore/DebugInfo.cpp	/^void DebugInfoFinder::processType(DIType DT) {$/;"	f	class:DebugInfoFinder
produceSameValue	CodeGen/TargetInstrInfoImpl.cpp	/^TargetInstrInfoImpl::produceSameValue(const MachineInstr *MI0,$/;"	f	class:TargetInstrInfoImpl
produceSameValue	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::produceSameValue(const MachineInstr *MI0,$/;"	f	class:ARMBaseInstrInfo
profileFunction	Transforms/IPO/MergeFunctions.cpp	/^static unsigned profileFunction(const Function *F) {$/;"	f	file:
programCounters	MC/MCDisassembler/EDDisassembler.h	/^  std::set<unsigned> programCounters;$/;"	m	struct:llvm::EDDisassembler
promoteAllocas	Transforms/Scalar/SROA.cpp	/^bool SROA::promoteAllocas(Function &F) {$/;"	f	class:SROA
propagate	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::propagate(const SCEV *&Src,$/;"	f	class:DependenceAnalysis
propagateDistance	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::propagateDistance(const SCEV *&Src,$/;"	f	class:DependenceAnalysis
propagateEquality	Transforms/Scalar/GVN.cpp	/^bool GVN::propagateEquality(Value *LHS, Value *RHS,$/;"	f	class:GVN
propagateLine	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::propagateLine(const SCEV *&Src,$/;"	f	class:DependenceAnalysis
propagatePoint	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::propagatePoint(const SCEV *&Src,$/;"	f	class:DependenceAnalysis
propagateSiblingValue	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::propagateSiblingValue(SibValueMap::iterator SVI,$/;"	f	class:InlineSpiller
propagateUsesAroundLoop	CodeGen/ShrinkWrapping.cpp	/^void PEI::propagateUsesAroundLoop(MachineBasicBlock* MBB, MachineLoop* LP) {$/;"	f	class:PEI
properlyDominates	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::properlyDominates(const SCEV *S, const BasicBlock *BB) {$/;"	f	class:ScalarEvolution
provideInitialHead	Support/YAMLParser.cpp	/^  Token *provideInitialHead() const { return createSentinel(); }$/;"	f	struct:llvm::ilist_sentinel_traits
pruneTreeFor	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::pruneTreeFor($/;"	f	class:__anon604::BBVectorize
pruneValue	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::pruneValue(LiveInterval *LI, SlotIndex Kill,$/;"	f	class:LiveIntervals
pruneValues	CodeGen/RegisterCoalescer.cpp	/^void JoinVals::pruneValues(JoinVals &Other,$/;"	f	class:JoinVals
pseudo	Target/CellSPU/SPUNopFiller.cpp	/^                   pseudo = 1, \/\/ this does not get executed$/;"	e	enum:__anon417::SPUNopFiller::__anon418	file:
ptr	Support/regex2.h	/^	uch *ptr;		\/* -> uch [csetsize] *\/$/;"	m	struct:__anon232
ptr_const_iterator	Transforms/Scalar/ObjCARC.cpp	/^    typedef MapTy::const_iterator ptr_const_iterator;$/;"	t	class:__anon507::BBState	file:
ptr_iterator	Transforms/Scalar/ObjCARC.cpp	/^    typedef MapTy::iterator ptr_iterator;$/;"	t	class:__anon507::BBState	file:
purgeFunction	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::purgeFunction() {$/;"	f	class:ValueEnumerator
purgeFunction	VMCore/AsmWriter.cpp	/^void SlotTracker::purgeFunction() {$/;"	f	class:SlotTracker
push	CodeGen/LatencyPriorityQueue.cpp	/^void LatencyPriorityQueue::push(SUnit *SU) {$/;"	f	class:LatencyPriorityQueue
push	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^void ResourcePriorityQueue::push(SUnit *SU) {$/;"	f	class:ResourcePriorityQueue
push	CodeGen/SelectionDAG/ScheduleDAGFast.cpp	/^    void push(SUnit *U) {$/;"	f	struct:__anon86::FastPriorityQueue
push	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  void push(SUnit *U) {$/;"	f	class:__anon77::RegReductionPQBase
push	VMCore/PassManager.cpp	/^void PMStack::push(PMDataManager *PM) {$/;"	f	class:PMStack
pushCounters	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::pushCounters() {$/;"	f	class:BLInstrumentationDag
pushCountersFromEdge	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::pushCountersFromEdge(BLInstrumentationEdge* edge) {$/;"	f	class:BLInstrumentationDag
pushDepHeight	CodeGen/MachineTraceMetrics.cpp	/^static bool pushDepHeight(const DataDep &Dep,$/;"	f	file:
pushIVUsers	Transforms/Utils/SimplifyIndVar.cpp	/^static void pushIVUsers($/;"	f	file:
pushInitialization	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::pushInitialization() {$/;"	f	class:BLInstrumentationDag
pushInitializationFromEdge	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::pushInitializationFromEdge($/;"	f	class:BLInstrumentationDag
pushNarrowIVUsers	Transforms/Scalar/IndVarSimplify.cpp	/^void WidenIV::pushNarrowIVUsers(Instruction *NarrowDef, Instruction *WideDef) {$/;"	f	class:WidenIV
pushReg	Target/X86/X86FloatingPoint.cpp	/^    void pushReg(unsigned Reg) {$/;"	f	struct:__anon386::FPS	file:
pushStack	Target/ARM/MLxExpansionPass.cpp	/^void MLxExpansion::pushStack(MachineInstr *MI) {$/;"	f	class:MLxExpansion
pushValue	Bitcode/Writer/BitcodeWriter.cpp	/^static void pushValue(const Value *V, unsigned InstID,$/;"	f	file:
pushValue64	Bitcode/Writer/BitcodeWriter.cpp	/^static void pushValue64(const Value *V, unsigned InstID,$/;"	f	file:
pushValueIntoNode	Transforms/Instrumentation/PathProfiling.cpp	/^void PathProfiler::pushValueIntoNode(BLInstrumentationNode* source,$/;"	f	class:PathProfiler
pushValueIntoPHI	Transforms/Instrumentation/PathProfiling.cpp	/^void PathProfiler::pushValueIntoPHI(BLInstrumentationNode* target,$/;"	f	class:PathProfiler
pushValueSigned	Bitcode/Writer/BitcodeWriter.cpp	/^static void pushValueSigned(const Value *V, unsigned InstID,$/;"	f	file:
push_back	Bitcode/Reader/BitcodeReader.h	/^  void push_back(Value *V)    { MDValuePtrs.push_back(V);  }$/;"	f	class:llvm::BitcodeReaderMDValueList
push_back	Bitcode/Reader/BitcodeReader.h	/^  void push_back(Value *V) {$/;"	f	class:llvm::BitcodeReaderValueList
query	CodeGen/LiveRegMatrix.cpp	/^LiveIntervalUnion::Query &LiveRegMatrix::query(LiveInterval &VirtReg,$/;"	f	class:LiveRegMatrix
question	TableGen/TGLexer.h	/^    equal, question,    \/\/ = ?$/;"	e	enum:llvm::tgtok::TokKind
queue_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^struct queue_sort : public std::binary_function<SUnit*, SUnit*, bool> {$/;"	s	namespace:__anon77	file:
rFromREX	Target/X86/Disassembler/X86DisassemblerDecoder.h	44;"	d
rFromVEX2of2	Target/X86/Disassembler/X86DisassemblerDecoder.h	57;"	d
rFromVEX2of3	Target/X86/Disassembler/X86DisassemblerDecoder.h	48;"	d
r_brace	TableGen/TGLexer.h	/^    l_brace, r_brace,   \/\/ { }$/;"	e	enum:llvm::tgtok::TokKind
r_paren	TableGen/TGLexer.h	/^    l_paren, r_paren,   \/\/ ( )$/;"	e	enum:llvm::tgtok::TokKind
r_square	TableGen/TGLexer.h	/^    l_square, r_square, \/\/ [ ]$/;"	e	enum:llvm::tgtok::TokKind
rand	Transforms/Utils/MetaRenamer.cpp	/^    int rand(void) {$/;"	f	struct:__anon472::PRNG
rangeAtIndex	DebugInfo/DWARFDebugAranges.h	/^  const Range *rangeAtIndex(uint32_t idx) const {$/;"	f	class:llvm::DWARFDebugAranges
rangeOnlyContains	VMCore/Constants.cpp	/^static bool rangeOnlyContains(ItTy Start, ItTy End, EltTy Elt) {$/;"	f	file:
range_iterator	Transforms/Scalar/MemCpyOptimizer.cpp	/^  typedef std::list<MemsetRange>::iterator range_iterator;$/;"	t	class:__anon574::MemsetRanges	file:
rank	CodeGen/StrongPHIElimination.cpp	/^      unsigned rank;$/;"	m	struct:__anon154::StrongPHIElimination::Node	file:
rawRegPressureDelta	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^signed ResourcePriorityQueue::rawRegPressureDelta(SUnit *SU, unsigned RCId) {$/;"	f	class:ResourcePriorityQueue
raw_fd_ostream	Support/raw_ostream.cpp	/^raw_fd_ostream::raw_fd_ostream(const char *Filename, std::string &ErrorInfo,$/;"	f	class:raw_fd_ostream
raw_fd_ostream	Support/raw_ostream.cpp	/^raw_fd_ostream::raw_fd_ostream(int fd, bool shouldClose, bool unbuffered)$/;"	f	class:raw_fd_ostream
raw_svector_ostream	Support/raw_ostream.cpp	/^raw_svector_ostream::raw_svector_ostream(SmallVectorImpl<char> &O) : OS(O) {$/;"	f	class:raw_svector_ostream
rbrace	AsmParser/LLToken.h	/^    lbrace, rbrace,    \/\/ {  }$/;"	e	enum:llvm::lltok::Kind
rcsid	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^static const char rcsid[] = "\\n@(#) $Revision: 243501 $\\n";$/;"	v	file:
reMaterialize	CodeGen/TargetInstrInfoImpl.cpp	/^void TargetInstrInfoImpl::reMaterialize(MachineBasicBlock &MBB,$/;"	f	class:TargetInstrInfoImpl
reMaterialize	Target/ARM/ARMBaseInstrInfo.cpp	/^reMaterialize(MachineBasicBlock &MBB,$/;"	f	class:ARMBaseInstrInfo
reMaterialize	Target/X86/X86InstrInfo.cpp	/^void X86InstrInfo::reMaterialize(MachineBasicBlock &MBB,$/;"	f	class:X86InstrInfo
reMaterializeAll	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::reMaterializeAll() {$/;"	f	class:InlineSpiller
reMaterializeFor	CodeGen/InlineSpiller.cpp	/^bool InlineSpiller::reMaterializeFor(LiveInterval &VirtReg,$/;"	f	class:InlineSpiller
reMaterializeTrivialDef	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::reMaterializeTrivialDef(LiveInterval &SrcInt,$/;"	f	class:RegisterCoalescer
re_endp	Support/regex_impl.h	/^  const char *re_endp;	\/* end pointer for REG_PEND *\/$/;"	m	struct:llvm_regex
re_g	Support/regex_impl.h	/^  struct re_guts *re_g;	\/* none of your business :-) *\/$/;"	m	struct:llvm_regex	typeref:struct:llvm_regex::re_guts
re_guts	Support/regex2.h	/^struct re_guts {$/;"	s
re_magic	Support/regex_impl.h	/^  int re_magic;$/;"	m	struct:llvm_regex
re_nsub	Support/regex_impl.h	/^  size_t re_nsub;		\/* number of parenthesized subexpressions *\/$/;"	m	struct:llvm_regex
reachable	CodeGen/MachineVerifier.cpp	/^      bool reachable;$/;"	m	struct:__anon139::MachineVerifier::BBInfo	file:
reachesChainWithoutSideEffects	CodeGen/SelectionDAG/SelectionDAG.cpp	/^bool SDValue::reachesChainWithoutSideEffects(SDValue Dest,$/;"	f	class:SDValue
read	VMCore/GCOV.cpp	/^bool GCOVFile::read(GCOVBuffer &Buffer) {$/;"	f	class:GCOVFile
read	VMCore/GCOV.cpp	/^bool GCOVFunction::read(GCOVBuffer &Buff, GCOV::GCOVFormat Format) {$/;"	f	class:GCOVFunction
readByte	MC/MCDisassembler/Disassembler.cpp	/^  int readByte(uint64_t Addr, uint8_t *Byte) const {$/;"	f	class:__anon207::DisasmMemoryObject
readByte	MC/MCDisassembler/EDDisassembler.cpp	/^    int readByte(uint64_t address, uint8_t *ptr) const {$/;"	f	class:__anon204::EDMemoryObject
readByte	Support/StreamableMemoryObject.cpp	/^int RawMemoryObject::readByte(uint64_t address, uint8_t* ptr) const {$/;"	f	class:__anon236::RawMemoryObject
readByte	Support/StreamableMemoryObject.cpp	/^int StreamingMemoryObject::readByte(uint64_t address, uint8_t* ptr) const {$/;"	f	class:llvm::StreamingMemoryObject
readBytes	Support/MemoryObject.cpp	/^int MemoryObject::readBytes(uint64_t address,$/;"	f	class:MemoryObject
readBytes	Support/StreamableMemoryObject.cpp	/^int RawMemoryObject::readBytes(uint64_t address,$/;"	f	class:__anon236::RawMemoryObject
readBytes	Support/StreamableMemoryObject.cpp	/^int StreamingMemoryObject::readBytes(uint64_t address,$/;"	f	class:llvm::StreamingMemoryObject
readDisplacement	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readDisplacement(struct InternalInstruction* insn) {  $/;"	f	file:
readEdge	Analysis/ProfileDataLoaderPass.cpp	/^void ProfileMetadataLoaderPass::readEdge(unsigned ReadCount,$/;"	f	class:ProfileMetadataLoaderPass
readEdge	Analysis/ProfileInfo.cpp	/^static void readEdge(ProfileInfo *PI, ProfileInfo::Edge e, double &calcw, std::set<ProfileInfo::Edge> &misscount) {$/;"	f	namespace:llvm
readEdge	Analysis/ProfileInfoLoaderPass.cpp	/^void LoaderPass::readEdge(ProfileInfo::Edge e,$/;"	f	class:LoaderPass
readEdgeOrRemember	Analysis/ProfileInfo.cpp	/^static double readEdgeOrRemember(ProfileInfo::Edge edge, double w,$/;"	f	namespace:llvm
readEdgeOrRemember	Analysis/ProfileInfoLoaderPass.cpp	/^void LoaderPass::readEdgeOrRemember(Edge edge, Edge &tocalc, $/;"	f	class:LoaderPass
readExponent	Support/APFloat.cpp	/^readExponent(StringRef::iterator begin, StringRef::iterator end)$/;"	f	file:
readImmediate	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readImmediate(struct InternalInstruction* insn, uint8_t size) {$/;"	f	file:
readInstruction32	Target/Mips/Disassembler/MipsDisassembler.cpp	/^static DecodeStatus readInstruction32(const MemoryObject &region,$/;"	f	file:
readInteger	Archive/ArchiveReader.cpp	/^static inline unsigned readInteger(const char*&At, const char*End) {$/;"	f	file:
readLine	Target/NVPTX/NVPTXAsmPrinter.cpp	/^LineReader::readLine(unsigned lineNum) {$/;"	f	class:LineReader
readLockFile	Support/LockFileManager.cpp	/^LockFileManager::readLockFile(StringRef LockFileName) {$/;"	f	class:LockFileManager
readModRM	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readModRM(struct InternalInstruction* insn) {  $/;"	f	file:
readOpcode	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readOpcode(struct InternalInstruction* insn) {  $/;"	f	file:
readOpcodeModifier	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readOpcodeModifier(struct InternalInstruction* insn) {$/;"	f	file:
readOpcodeRegister	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readOpcodeRegister(struct InternalInstruction* insn, uint8_t size) {$/;"	f	file:
readOperands	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readOperands(struct InternalInstruction* insn) {$/;"	f	file:
readPrefixes	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readPrefixes(struct InternalInstruction* insn) {$/;"	f	file:
readSIB	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readSIB(struct InternalInstruction* insn) {$/;"	f	file:
readVVVV	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static int readVVVV(struct InternalInstruction* insn) {$/;"	f	file:
reader	Target/NVPTX/NVPTXAsmPrinter.h	/^  LineReader *reader;$/;"	m	class:llvm::NVPTXAsmPrinter
reader	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  byteReader_t reader;$/;"	m	struct:InternalInstruction
readerArg	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  const void* readerArg;$/;"	m	struct:InternalInstruction
readerCursor	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint64_t readerCursor;$/;"	m	struct:InternalInstruction
readerWrapperCallback	MC/MCDisassembler/EDMain.cpp	/^static int readerWrapperCallback(uint8_t *byte,$/;"	f	file:
readerWrapperCallback	MC/MCDisassembler/EDOperand.cpp	/^static int readerWrapperCallback(uint64_t *value, unsigned regID, void *arg) {$/;"	f	file:
reader_acquire	Support/RWMutex.cpp	/^bool RWMutexImpl::reader_acquire() { return true; }$/;"	f	class:llvm::RWMutexImpl
reader_release	Support/RWMutex.cpp	/^bool RWMutexImpl::reader_release() { return true; }$/;"	f	class:llvm::RWMutexImpl
readsWritesVirtualRegister	CodeGen/MachineInstr.cpp	/^MachineInstr::readsWritesVirtualRegister(unsigned Reg,$/;"	f	class:MachineInstr
reassignSectionAddress	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyld::reassignSectionAddress(unsigned SectionID,$/;"	f	class:llvm::RuntimeDyld
reassignSectionAddress	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyldImpl::reassignSectionAddress(unsigned SectionID,$/;"	f	class:llvm::RuntimeDyldImpl
recede	CodeGen/RegisterPressure.cpp	/^bool RegPressureTracker::recede() {$/;"	f	class:RegPressureTracker
recompileAndRelinkFunction	ExecutionEngine/Interpreter/Interpreter.h	/^  virtual void *recompileAndRelinkFunction(Function *F) {$/;"	f	class:llvm::Interpreter
recompileAndRelinkFunction	ExecutionEngine/JIT/JIT.cpp	/^void *JIT::recompileAndRelinkFunction(Function *F) {$/;"	f	class:JIT
recompileAndRelinkFunction	ExecutionEngine/MCJIT/MCJIT.cpp	/^void *MCJIT::recompileAndRelinkFunction(Function *F) {$/;"	f	class:MCJIT
recomputeInsertPt	CodeGen/SelectionDAG/FastISel.cpp	/^void FastISel::recomputeInsertPt() {$/;"	f	class:FastISel
recomputeRegClass	CodeGen/MachineRegisterInfo.cpp	/^MachineRegisterInfo::recomputeRegClass(unsigned Reg, const TargetMachine &TM) {$/;"	f	class:MachineRegisterInfo
reconcileNewOffset	Transforms/Scalar/LoopStrengthReduce.cpp	/^LSRInstance::reconcileNewOffset(LSRUse &LU, int64_t NewOffset, bool HasBaseReg,$/;"	f	class:LSRInstance
recordAndEmitFilenames	Target/NVPTX/NVPTXAsmPrinter.cpp	/^void NVPTXAsmPrinter::recordAndEmitFilenames(Module &M) {$/;"	f	class:NVPTXAsmPrinter
recordAvailableAnalysis	VMCore/PassManager.cpp	/^void PMDataManager::recordAvailableAnalysis(Pass *P) {$/;"	f	class:PMDataManager
recordCPEClone	Target/ARM/ARMMachineFunctionInfo.h	/^  void recordCPEClone(unsigned CPIdx, unsigned CPCloneIdx) {$/;"	f	class:llvm::ARMFunctionInfo
recordLiveIn	Target/MBlaze/MBlazeMachineFunction.h	/^  void recordLiveIn(int FI) {$/;"	f	class:llvm::MBlazeFunctionInfo
recordLoadArgsFI	Target/MBlaze/MBlazeMachineFunction.h	/^  void recordLoadArgsFI(int FI, int SPOffset) {$/;"	f	class:llvm::MBlazeFunctionInfo
recordReplacement	Target/MBlaze/MBlazeMachineFunction.h	/^  void recordReplacement(int OFI, int NFI) {$/;"	f	class:llvm::MBlazeFunctionInfo
recordSourceLine	CodeGen/AsmPrinter/DwarfDebug.cpp	/^void DwarfDebug::recordSourceLine(unsigned Line, unsigned Col, const MDNode *S,$/;"	f	class:DwarfDebug
recordStoreVarArgsFI	Target/MBlaze/MBlazeMachineFunction.h	/^  void recordStoreVarArgsFI(int FI, int SPOffset) {$/;"	f	class:llvm::MBlazeFunctionInfo
recurseBasicBlock	Analysis/ProfileEstimatorPass.cpp	/^void ProfileEstimatorPass::recurseBasicBlock(BasicBlock *BB) {$/;"	f	class:ProfileEstimatorPass
recurseBasicBlock	Analysis/ProfileInfoLoaderPass.cpp	/^void LoaderPass::recurseBasicBlock(const BasicBlock *BB) {$/;"	f	class:LoaderPass
recurseBasicBlock	Analysis/ProfileVerifierPass.cpp	/^  void ProfileVerifierPassT<FType, BType>::recurseBasicBlock(const BType *BB) {$/;"	f	class:__anon36::ProfileVerifierPassT
recursivelySimplifyInstruction	Analysis/InstructionSimplify.cpp	/^bool llvm::recursivelySimplifyInstruction(Instruction *I,$/;"	f	class:llvm
redoLoop	Analysis/LoopPass.cpp	/^void LPPassManager::redoLoop(Loop *L) {$/;"	f	class:LPPassManager
redoLoop	Transforms/Scalar/LoopUnswitch.cpp	/^    bool redoLoop;$/;"	m	class:__anon494::LoopUnswitch	file:
reduceToSingleValueType	Transforms/InstCombine/InstCombineCalls.cpp	/^static Type *reduceToSingleValueType(Type *T) {$/;"	f	file:
referencesReg	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool Formula::referencesReg(const SCEV *S) const {$/;"	f	class:Formula
refineAlignment	CodeGen/MachineInstr.cpp	/^void MachineMemOperand::refineAlignment(const MachineMemOperand *MMO) {$/;"	f	class:MachineMemOperand
reg	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  Reg                           reg;$/;"	m	struct:InternalInstruction
regBase	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  Reg                           regBase;$/;"	m	struct:InternalInstruction
regBlock	MC/MCDisassembler/EDOperand.cpp	/^    EDOperand::EDRegisterBlock_t regBlock;$/;"	m	struct:__anon203::RegisterReaderWrapper	file:
regDisabled	CodeGen/RegAllocFast.cpp	/^      regDisabled,$/;"	e	enum:__anon140::RAFast::RegState	file:
regFree	CodeGen/RegAllocFast.cpp	/^      regFree,$/;"	e	enum:__anon140::RAFast::RegState	file:
regFromModRM	Target/X86/Disassembler/X86DisassemblerDecoder.h	38;"	d
regID	MC/MCDisassembler/EDOperand.h	/^  typedef int (^EDRegisterBlock_t)(uint64_t *value, unsigned regID);$/;"	m	struct:llvm::EDOperand
regIndex	CodeGen/ExecutionDepsFix.cpp	/^int ExeDepsFix::regIndex(unsigned Reg) {$/;"	f	class:ExeDepsFix
regIsPICBase	Target/X86/X86InstrInfo.cpp	/^static bool regIsPICBase(unsigned BaseReg, const MachineRegisterInfo &MRI) {$/;"	f	file:
regMasks	CodeGen/MachineVerifier.cpp	/^    RegMaskVector regMasks;$/;"	m	struct:__anon139::MachineVerifier	file:
regPressureDelta	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^signed ResourcePriorityQueue::regPressureDelta(SUnit *SU, bool RawPressure) {$/;"	f	class:ResourcePriorityQueue
regReserved	CodeGen/RegAllocFast.cpp	/^      regReserved$/;"	e	enum:__anon140::RAFast::RegState	file:
regVal	MC/MCDisassembler/EDOperand.cpp	/^unsigned EDOperand::regVal() {$/;"	f	class:EDOperand
regatoi	Support/regerror.c	/^regatoi(const llvm_regex_t *preg, char *localbuf, int localbufsize)$/;"	f	file:
regionReader	Target/X86/Disassembler/X86Disassembler.cpp	/^static int regionReader(const void* arg, uint8_t* byte, uint64_t address) {$/;"	f	file:
registerAnalysisGroup	VMCore/PassRegistry.cpp	/^void PassRegistry::registerAnalysisGroup(const void *InterfaceID, $/;"	f	class:PassRegistry
registerCleanup	Support/CrashRecoveryContext.cpp	/^void CrashRecoveryContext::registerCleanup(CrashRecoveryContextCleanup *cleanup)$/;"	f	class:CrashRecoveryContext
registerID	MC/MCDisassembler/EDToken.cpp	/^int EDToken::registerID(unsigned &registerID) const {$/;"	f	class:EDToken
registerIDWithName	MC/MCDisassembler/EDDisassembler.cpp	/^unsigned EDDisassembler::registerIDWithName(const char *name) const {$/;"	f	class:EDDisassembler
registerIsProgramCounter	MC/MCDisassembler/EDDisassembler.cpp	/^bool EDDisassembler::registerIsProgramCounter(unsigned registerID) {$/;"	f	class:EDDisassembler
registerIsStackPointer	MC/MCDisassembler/EDDisassembler.cpp	/^bool EDDisassembler::registerIsStackPointer(unsigned registerID) {$/;"	f	class:EDDisassembler
registerObject	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^void GDBJITRegistrar::registerObject(const ObjectBuffer &Object) {$/;"	f	class:__anon178::GDBJITRegistrar
registerPass	VMCore/PassRegistry.cpp	/^void PassRegistry::registerPass(const PassInfo &PI, bool ShouldFree) {$/;"	f	class:PassRegistry
registerRoots	CodeGen/MachineScheduler.cpp	/^  virtual void registerRoots() {$/;"	f	class:__anon128::ILPScheduler
registerSize	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t registerSize;$/;"	m	struct:InternalInstruction
registerWithDebugger	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual void registerWithDebugger() {}$/;"	f	class:llvm::ObjectImageCommon
registerWithDebugger	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^    virtual void registerWithDebugger()$/;"	f	class:__anon180::ELFObjectImage
regrmap_t	MC/MCDisassembler/EDDisassembler.h	/^  typedef std::map<std::string, unsigned> regrmap_t;$/;"	t	struct:llvm::EDDisassembler
regsAreCompatible	CodeGen/TwoAddressInstructionPass.cpp	/^regsAreCompatible(unsigned RegA, unsigned RegB, const TargetRegisterInfo *TRI) {$/;"	f	file:
regsDead	CodeGen/MachineVerifier.cpp	/^    RegVector regsDefined, regsDead, regsKilled;$/;"	m	struct:__anon139::MachineVerifier	file:
regsDefined	CodeGen/MachineVerifier.cpp	/^    RegVector regsDefined, regsDead, regsKilled;$/;"	m	struct:__anon139::MachineVerifier	file:
regsKilled	CodeGen/MachineVerifier.cpp	/^      RegSet regsKilled;$/;"	m	struct:__anon139::MachineVerifier::BBInfo	file:
regsKilled	CodeGen/MachineVerifier.cpp	/^    RegVector regsDefined, regsDead, regsKilled;$/;"	m	struct:__anon139::MachineVerifier	file:
regsLive	CodeGen/MachineVerifier.cpp	/^    RegSet regsLive;$/;"	m	struct:__anon139::MachineVerifier	file:
regsLiveInButUnused	CodeGen/MachineVerifier.cpp	/^    RegSet regsLiveInButUnused;$/;"	m	struct:__anon139::MachineVerifier	file:
regsLiveOut	CodeGen/MachineVerifier.cpp	/^      RegSet regsLiveOut;$/;"	m	struct:__anon139::MachineVerifier::BBInfo	file:
regsReserved	CodeGen/MachineVerifier.cpp	/^    BitVector regsReserved;$/;"	m	struct:__anon139::MachineVerifier	file:
regvec_t	MC/MCDisassembler/EDDisassembler.h	/^  typedef std::vector<std::string> regvec_t;$/;"	t	struct:llvm::EDDisassembler
reinsertValue	VMCore/ValueSymbolTable.cpp	/^void ValueSymbolTable::reinsertValue(Value* V) {$/;"	f	class:ValueSymbolTable
related	Transforms/Scalar/ObjCARC.cpp	/^bool ProvenanceAnalysis::related(const Value *A, const Value *B) {$/;"	f	class:ProvenanceAnalysis
relatedCheck	Transforms/Scalar/ObjCARC.cpp	/^bool ProvenanceAnalysis::relatedCheck(const Value *A, const Value *B) {$/;"	f	class:ProvenanceAnalysis
relatedPHI	Transforms/Scalar/ObjCARC.cpp	/^bool ProvenanceAnalysis::relatedPHI(const PHINode *A, const Value *B) {$/;"	f	class:ProvenanceAnalysis
relatedSelect	Transforms/Scalar/ObjCARC.cpp	/^bool ProvenanceAnalysis::relatedSelect(const SelectInst *A, const Value *B) {$/;"	f	class:ProvenanceAnalysis
relative_path	Support/PathV2.cpp	/^const StringRef relative_path(StringRef path) {$/;"	f	namespace:llvm::sys::path
relaxDwarfCallFrameFragment	MC/MCAssembler.cpp	/^bool MCAssembler::relaxDwarfCallFrameFragment(MCAsmLayout &Layout,$/;"	f	class:MCAssembler
relaxDwarfLineAddr	MC/MCAssembler.cpp	/^bool MCAssembler::relaxDwarfLineAddr(MCAsmLayout &Layout,$/;"	f	class:MCAssembler
relaxInstruction	MC/MCAssembler.cpp	/^bool MCAssembler::relaxInstruction(MCAsmLayout &Layout,$/;"	f	class:MCAssembler
relaxInstruction	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^void ARMAsmBackend::relaxInstruction(const MCInst &Inst, MCInst &Res) const {$/;"	f	class:ARMAsmBackend
relaxInstruction	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^void MBlazeAsmBackend::relaxInstruction(const MCInst &Inst, MCInst &Res) const {$/;"	f	class:__anon455::MBlazeAsmBackend
relaxInstruction	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  void relaxInstruction(const MCInst &Inst, MCInst &Res) const {$/;"	f	class:__anon429::MipsAsmBackend
relaxInstruction	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  void relaxInstruction(const MCInst &Inst, MCInst &Res) const {$/;"	f	class:__anon320::PPCAsmBackend
relaxInstruction	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^void X86AsmBackend::relaxInstruction(const MCInst &Inst, MCInst &Res) const {$/;"	f	class:X86AsmBackend
relaxLEB	MC/MCAssembler.cpp	/^bool MCAssembler::relaxLEB(MCAsmLayout &Layout, MCLEBFragment &LF) {$/;"	f	class:MCAssembler
release	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::release(DomainValue *DV) {$/;"	f	class:ExeDepsFix
release	Support/Mutex.cpp	/^bool MutexImpl::release() { return true; }$/;"	f	class:llvm::MutexImpl
release	Transforms/IPO/MergeFunctions.cpp	/^  void release() {$/;"	f	class:__anon596::ComparableFunction
releaseBottomNode	CodeGen/MachineScheduler.cpp	/^  virtual void releaseBottomNode(SUnit *SU) {$/;"	f	class:__anon128::ILPScheduler
releaseBottomNode	CodeGen/MachineScheduler.cpp	/^  virtual void releaseBottomNode(SUnit *SU) {$/;"	f	class:__anon129::InstructionShuffler
releaseBottomNode	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::releaseBottomNode(SUnit *SU) {$/;"	f	class:ConvergingScheduler
releaseBottomNode	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::releaseBottomNode(SUnit *SU) {$/;"	f	class:ConvergingVLIWScheduler
releaseMemory	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::releaseMemory() {$/;"	f	class:DependenceAnalysis
releaseMemory	Analysis/IPA/CallGraph.cpp	/^  virtual void releaseMemory() {$/;"	f	class:__anon2::BasicCallGraph
releaseMemory	Analysis/IVUsers.cpp	/^void IVUsers::releaseMemory() {$/;"	f	class:IVUsers
releaseMemory	Analysis/IntervalPartition.cpp	/^void IntervalPartition::releaseMemory() {$/;"	f	class:IntervalPartition
releaseMemory	Analysis/LazyValueInfo.cpp	/^void LazyValueInfo::releaseMemory() {$/;"	f	class:LazyValueInfo
releaseMemory	Analysis/LoopDependenceAnalysis.cpp	/^void LoopDependenceAnalysis::releaseMemory() {$/;"	f	class:LoopDependenceAnalysis
releaseMemory	Analysis/MemDepPrinter.cpp	/^    virtual void releaseMemory() {$/;"	f	struct:__anon33::MemDepPrinter
releaseMemory	Analysis/MemoryDependenceAnalysis.cpp	/^void MemoryDependenceAnalysis::releaseMemory() {$/;"	f	class:MemoryDependenceAnalysis
releaseMemory	Analysis/RegionInfo.cpp	/^void RegionInfo::releaseMemory() {$/;"	f	class:RegionInfo
releaseMemory	Analysis/ScalarEvolution.cpp	/^void ScalarEvolution::releaseMemory() {$/;"	f	class:ScalarEvolution
releaseMemory	CodeGen/LexicalScopes.cpp	/^void LexicalScopes::releaseMemory() {$/;"	f	class:LexicalScopes
releaseMemory	CodeGen/LiveDebugVariables.cpp	/^void LiveDebugVariables::releaseMemory() {$/;"	f	class:LiveDebugVariables
releaseMemory	CodeGen/LiveIntervalAnalysis.cpp	/^void LiveIntervals::releaseMemory() {$/;"	f	class:LiveIntervals
releaseMemory	CodeGen/LiveRegMatrix.cpp	/^void LiveRegMatrix::releaseMemory() {$/;"	f	class:LiveRegMatrix
releaseMemory	CodeGen/LiveStackAnalysis.cpp	/^void LiveStacks::releaseMemory() {$/;"	f	class:LiveStacks
releaseMemory	CodeGen/MachineCSE.cpp	/^    virtual void releaseMemory() {$/;"	f	class:__anon161::MachineCSE
releaseMemory	CodeGen/MachineDominators.cpp	/^void MachineDominatorTree::releaseMemory() {$/;"	f	class:MachineDominatorTree
releaseMemory	CodeGen/MachineFunctionAnalysis.cpp	/^void MachineFunctionAnalysis::releaseMemory() {$/;"	f	class:MachineFunctionAnalysis
releaseMemory	CodeGen/MachineLICM.cpp	/^    virtual void releaseMemory() {$/;"	f	class:__anon156::MachineLICM
releaseMemory	CodeGen/MachineLoopRanges.cpp	/^void MachineLoopRanges::releaseMemory() {$/;"	f	class:MachineLoopRanges
releaseMemory	CodeGen/MachineScheduler.cpp	/^  virtual void releaseMemory() {}$/;"	f	class:__anon125::MachineScheduler
releaseMemory	CodeGen/MachineSink.cpp	/^    virtual void releaseMemory() {$/;"	f	class:__anon101::MachineSinking
releaseMemory	CodeGen/MachineTraceMetrics.cpp	/^void MachineTraceMetrics::releaseMemory() {$/;"	f	class:MachineTraceMetrics
releaseMemory	CodeGen/RegAllocBasic.cpp	/^void RABasic::releaseMemory() {$/;"	f	class:RABasic
releaseMemory	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::releaseMemory() {$/;"	f	class:RAGreedy
releaseMemory	CodeGen/RegisterCoalescer.cpp	/^void RegisterCoalescer::releaseMemory() {$/;"	f	class:RegisterCoalescer
releaseMemory	CodeGen/SlotIndexes.cpp	/^void SlotIndexes::releaseMemory() {$/;"	f	class:SlotIndexes
releaseMemory	CodeGen/SpillPlacement.cpp	/^void SpillPlacement::releaseMemory() {$/;"	f	class:SpillPlacement
releaseMemory	Transforms/Scalar/IndVarSimplify.cpp	/^    virtual void releaseMemory() {$/;"	f	class:__anon495::IndVarSimplify	file:
releaseMemory	Transforms/Scalar/LoopUnswitch.cpp	/^    virtual void releaseMemory() {$/;"	f	class:__anon494::LoopUnswitch	file:
releaseMemory	Transforms/Scalar/ObjCARC.cpp	/^void ObjCARCOpt::releaseMemory() {$/;"	f	class:ObjCARCOpt
releaseMemory	VMCore/Pass.cpp	/^void Pass::releaseMemory() {$/;"	f	class:Pass
releaseMemoryOnTheFly	VMCore/PassManager.cpp	/^void FunctionPassManagerImpl::releaseMemoryOnTheFly() {$/;"	f	class:FunctionPassManagerImpl
releaseModule	Linker/Linker.cpp	/^Linker::releaseModule() {$/;"	f	class:Linker
releaseNode	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::SchedBoundary::releaseNode(SUnit *SU,$/;"	f	class:ConvergingScheduler::SchedBoundary
releaseNode	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::SchedBoundary::releaseNode(SUnit *SU,$/;"	f	class:ConvergingVLIWScheduler::SchedBoundary
releasePending	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::SchedBoundary::releasePending() {$/;"	f	class:ConvergingScheduler::SchedBoundary
releasePending	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::SchedBoundary::releasePending() {$/;"	f	class:ConvergingVLIWScheduler::SchedBoundary
releasePred	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::releasePred(SUnit *SU, SDep *PredEdge) {$/;"	f	class:ScheduleDAGMI
releasePredecessors	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::releasePredecessors(SUnit *SU) {$/;"	f	class:ScheduleDAGMI
releaseRoots	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::releaseRoots() {$/;"	f	class:ScheduleDAGMI
releaseState	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  void releaseState() {$/;"	f	class:__anon77::RegReductionPQBase
releaseSucc	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::releaseSucc(SUnit *SU, SDep *SuccEdge) {$/;"	f	class:ScheduleDAGMI
releaseSucc	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^void ScheduleDAGVLIW::releaseSucc(SUnit *SU, const SDep &D) {$/;"	f	class:ScheduleDAGVLIW
releaseSuccessors	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::releaseSuccessors(SUnit *SU) {$/;"	f	class:ScheduleDAGMI
releaseSuccessors	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^void ScheduleDAGVLIW::releaseSuccessors(SUnit *SU) {$/;"	f	class:ScheduleDAGVLIW
releaseTopNode	CodeGen/MachineScheduler.cpp	/^  virtual void releaseTopNode(SUnit *) { \/*only called for top roots*\/ }$/;"	f	class:__anon128::ILPScheduler
releaseTopNode	CodeGen/MachineScheduler.cpp	/^  virtual void releaseTopNode(SUnit *SU) {$/;"	f	class:__anon129::InstructionShuffler
releaseTopNode	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::releaseTopNode(SUnit *SU) {$/;"	f	class:ConvergingScheduler
releaseTopNode	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::releaseTopNode(SUnit *SU) {$/;"	f	class:ConvergingVLIWScheduler
relevant_entry	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    struct jit_code_entry *relevant_entry;$/;"	m	struct:jit_descriptor	typeref:struct:jit_descriptor::jit_code_entry	file:
reloadVirtReg	CodeGen/RegAllocFast.cpp	/^RAFast::reloadVirtReg(MachineInstr *MI, unsigned OpNum,$/;"	f	class:RAFast
reloc_absolute_dword	Target/MBlaze/MBlazeRelocations.h	/^      reloc_absolute_dword = 4$/;"	e	enum:llvm::MBlaze::RelocationType
reloc_absolute_dword	Target/X86/X86Relocations.h	/^      reloc_absolute_dword = 4$/;"	e	enum:llvm::X86::RelocationType
reloc_absolute_high	Target/PowerPC/PPCRelocations.h	/^      reloc_absolute_high,$/;"	e	enum:llvm::PPC::RelocationType
reloc_absolute_low	Target/PowerPC/PPCRelocations.h	/^      reloc_absolute_low,$/;"	e	enum:llvm::PPC::RelocationType
reloc_absolute_low_ix	Target/PowerPC/PPCRelocations.h	/^      reloc_absolute_low_ix$/;"	e	enum:llvm::PPC::RelocationType
reloc_absolute_word	Target/MBlaze/MBlazeRelocations.h	/^      reloc_absolute_word = 2,$/;"	e	enum:llvm::MBlaze::RelocationType
reloc_absolute_word	Target/X86/X86Relocations.h	/^      reloc_absolute_word = 2,$/;"	e	enum:llvm::X86::RelocationType
reloc_absolute_word_sext	Target/MBlaze/MBlazeRelocations.h	/^      reloc_absolute_word_sext = 3,$/;"	e	enum:llvm::MBlaze::RelocationType
reloc_absolute_word_sext	Target/X86/X86Relocations.h	/^      reloc_absolute_word_sext = 3,$/;"	e	enum:llvm::X86::RelocationType
reloc_arm_absolute	Target/ARM/ARMRelocations.h	/^      reloc_arm_absolute,$/;"	e	enum:llvm::ARM::RelocationType
reloc_arm_branch	Target/ARM/ARMRelocations.h	/^      reloc_arm_branch,$/;"	e	enum:llvm::ARM::RelocationType
reloc_arm_cp_entry	Target/ARM/ARMRelocations.h	/^      reloc_arm_cp_entry,$/;"	e	enum:llvm::ARM::RelocationType
reloc_arm_jt_base	Target/ARM/ARMRelocations.h	/^      reloc_arm_jt_base,$/;"	e	enum:llvm::ARM::RelocationType
reloc_arm_machine_cp_entry	Target/ARM/ARMRelocations.h	/^      reloc_arm_machine_cp_entry,$/;"	e	enum:llvm::ARM::RelocationType
reloc_arm_movt	Target/ARM/ARMRelocations.h	/^      reloc_arm_movt,$/;"	e	enum:llvm::ARM::RelocationType
reloc_arm_movw	Target/ARM/ARMRelocations.h	/^      reloc_arm_movw$/;"	e	enum:llvm::ARM::RelocationType
reloc_arm_pic_jt	Target/ARM/ARMRelocations.h	/^      reloc_arm_pic_jt,$/;"	e	enum:llvm::ARM::RelocationType
reloc_arm_relative	Target/ARM/ARMRelocations.h	/^      reloc_arm_relative,$/;"	e	enum:llvm::ARM::RelocationType
reloc_arm_vfp_cp_entry	Target/ARM/ARMRelocations.h	/^      reloc_arm_vfp_cp_entry,$/;"	e	enum:llvm::ARM::RelocationType
reloc_global_offset_table	Target/X86/MCTargetDesc/X86FixupKinds.h	/^  reloc_global_offset_table,                 \/\/ 32-bit, relative to the start$/;"	e	enum:llvm::X86::Fixups
reloc_mips_26	Target/Mips/MipsRelocations.h	/^      reloc_mips_26 = 4$/;"	e	enum:llvm::Mips::RelocationType
reloc_mips_hi	Target/Mips/MipsRelocations.h	/^      reloc_mips_hi = 2,$/;"	e	enum:llvm::Mips::RelocationType
reloc_mips_lo	Target/Mips/MipsRelocations.h	/^      reloc_mips_lo = 3,$/;"	e	enum:llvm::Mips::RelocationType
reloc_mips_pc16	Target/Mips/MipsRelocations.h	/^      reloc_mips_pc16 = 1,$/;"	e	enum:llvm::Mips::RelocationType
reloc_pcrel_bcx	Target/PowerPC/PPCRelocations.h	/^      reloc_pcrel_bcx,$/;"	e	enum:llvm::PPC::RelocationType
reloc_pcrel_bx	Target/PowerPC/PPCRelocations.h	/^      reloc_pcrel_bx,$/;"	e	enum:llvm::PPC::RelocationType
reloc_pcrel_word	Target/MBlaze/MBlazeRelocations.h	/^      reloc_pcrel_word = 0,$/;"	e	enum:llvm::MBlaze::RelocationType
reloc_pcrel_word	Target/X86/X86Relocations.h	/^      reloc_pcrel_word = 0,$/;"	e	enum:llvm::X86::RelocationType
reloc_picrel_word	Target/MBlaze/MBlazeRelocations.h	/^      reloc_picrel_word = 1,$/;"	e	enum:llvm::MBlaze::RelocationType
reloc_picrel_word	Target/X86/X86Relocations.h	/^      reloc_picrel_word = 1,$/;"	e	enum:llvm::X86::RelocationType
reloc_riprel_4byte	Target/X86/MCTargetDesc/X86FixupKinds.h	/^  reloc_riprel_4byte = FirstTargetFixupKind, \/\/ 32-bit rip-relative$/;"	e	enum:llvm::X86::Fixups
reloc_riprel_4byte_movq_load	Target/X86/MCTargetDesc/X86FixupKinds.h	/^  reloc_riprel_4byte_movq_load,              \/\/ 32-bit rip-relative in movq$/;"	e	enum:llvm::X86::Fixups
reloc_signed_4byte	Target/X86/MCTargetDesc/X86FixupKinds.h	/^  reloc_signed_4byte,                        \/\/ 32-bit signed. Unlike FK_Data_4$/;"	e	enum:llvm::X86::Fixups
reloc_vanilla	Target/PowerPC/PPCRelocations.h	/^      reloc_vanilla,$/;"	e	enum:llvm::PPC::RelocationType
relocate	Target/ARM/ARMJITInfo.cpp	/^void ARMJITInfo::relocate(void *Function, MachineRelocation *MR,$/;"	f	class:ARMJITInfo
relocate	Target/Mips/MipsJITInfo.cpp	/^void MipsJITInfo::relocate(void *Function, MachineRelocation *MR,$/;"	f	class:MipsJITInfo
relocate	Target/PowerPC/PPCJITInfo.cpp	/^void PPCJITInfo::relocate(void *Function, MachineRelocation *MR,$/;"	f	class:PPCJITInfo
relocate	Target/X86/X86JITInfo.cpp	/^void X86JITInfo::relocate(void *Function, MachineRelocation *MR,$/;"	f	class:X86JITInfo
relocations	MC/WinCOFFObjectWriter.cpp	/^typedef std::vector<COFFRelocation> relocations;$/;"	t	namespace:__anon222	file:
remainder	Support/APFloat.cpp	/^APFloat::remainder(const APFloat &rhs)$/;"	f	class:APFloat
remap	MC/MCModule.cpp	/^void MCModule::remap(MCAtom *Atom, uint64_t NewBegin, uint64_t NewEnd) {$/;"	f	class:MCModule
remapInstructions	CodeGen/StackColoring.cpp	/^void StackColoring::remapInstructions(DenseMap<int, int> &SlotRemap) {$/;"	f	class:StackColoring
remapType	Linker/LinkModules.cpp	/^  Type *remapType(Type *SrcTy) {$/;"	f	class:__anon201::TypeMapTy	file:
rematerializeAt	CodeGen/LiveRangeEdit.cpp	/^SlotIndex LiveRangeEdit::rematerializeAt(MachineBasicBlock &MBB,$/;"	f	class:LiveRangeEdit
rememberInstruction	Analysis/ScalarEvolutionExpander.cpp	/^void SCEVExpander::rememberInstruction(Value *I) {$/;"	f	class:SCEVExpander
remove	Analysis/AliasSetTracker.cpp	/^AliasSetTracker::remove(Value *Ptr, uint64_t Size, const MDNode *TBAAInfo) {$/;"	f	class:AliasSetTracker
remove	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::remove(Instruction *I) {$/;"	f	class:AliasSetTracker
remove	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::remove(LoadInst *LI) {$/;"	f	class:AliasSetTracker
remove	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::remove(StoreInst *SI) {$/;"	f	class:AliasSetTracker
remove	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::remove(VAArgInst *VAAI) {$/;"	f	class:AliasSetTracker
remove	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::remove(AliasSet &AS) {$/;"	f	class:AliasSetTracker
remove	CodeGen/LatencyPriorityQueue.cpp	/^void LatencyPriorityQueue::remove(SUnit *SU) {$/;"	f	class:LatencyPriorityQueue
remove	CodeGen/MachineBasicBlock.cpp	/^MachineInstr *MachineBasicBlock::remove(MachineInstr *I) {$/;"	f	class:MachineBasicBlock
remove	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^void ResourcePriorityQueue::remove(SUnit *SU) {$/;"	f	class:ResourcePriorityQueue
remove	CodeGen/SelectionDAG/SDNodeOrdering.h	/^  void remove(const SDNode *Node) {$/;"	f	class:llvm::SDNodeOrdering
remove	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  void remove(SUnit *SU) {$/;"	f	class:__anon77::RegReductionPQBase
remove	Transforms/IPO/MergeFunctions.cpp	/^void MergeFunctions::remove(Function *F) {$/;"	f	class:MergeFunctions
remove	VMCore/ConstantsContext.h	/^  void remove(ConstantClass *CP) {$/;"	f	class:llvm::ConstantAggrUniqueMap
remove	VMCore/ConstantsContext.h	/^  void remove(ConstantClass *CP) {$/;"	f	class:llvm::ConstantUniqueMap
removeAliasSet	Analysis/AliasSetTracker.cpp	/^void AliasSetTracker::removeAliasSet(AliasSet *AS) {$/;"	f	class:AliasSetTracker
removeAllMarkers	CodeGen/StackColoring.cpp	/^bool StackColoring::removeAllMarkers() {$/;"	f	class:StackColoring
removeAnyCallEdgeTo	Analysis/IPA/CallGraph.cpp	/^void CallGraphNode::removeAnyCallEdgeTo(CallGraphNode *Callee) {$/;"	f	class:CallGraphNode
removeAttr	VMCore/Attributes.cpp	/^AttrListPtr AttrListPtr::removeAttr(LLVMContext &C, unsigned Idx,$/;"	f	class:AttrListPtr
removeAttr	VMCore/Function.cpp	/^void Argument::removeAttr(Attributes attr) {$/;"	f	class:Argument
removeAttribute	VMCore/Attributes.cpp	/^AttrBuilder &AttrBuilder::removeAttribute(Attributes::AttrVal Val) {$/;"	f	class:AttrBuilder
removeAttribute	VMCore/Function.cpp	/^void Function::removeAttribute(unsigned i, Attributes attr) {$/;"	f	class:Function
removeAttribute	VMCore/Instructions.cpp	/^void CallInst::removeAttribute(unsigned i, Attributes attr) {$/;"	f	class:CallInst
removeAttribute	VMCore/Instructions.cpp	/^void InvokeInst::removeAttribute(unsigned i, Attributes attr) {$/;"	f	class:InvokeInst
removeAttributes	VMCore/Attributes.cpp	/^AttrBuilder &AttrBuilder::removeAttributes(const Attributes &A){$/;"	f	class:AttrBuilder
removeBackCopies	CodeGen/SplitKit.cpp	/^void SplitEditor::removeBackCopies(SmallVectorImpl<VNInfo*> &Copies) {$/;"	f	class:SplitEditor
removeBlock	Analysis/ProfileInfo.cpp	/^void ProfileInfoT<Function,BasicBlock>::removeBlock(const BasicBlock *BB) {$/;"	f	class:llvm::ProfileInfoT
removeBlocksFromAncestors	Analysis/LoopInfo.cpp	/^void UnloopUpdater::removeBlocksFromAncestors() {$/;"	f	class:UnloopUpdater
removeCallEdgeFor	Analysis/IPA/CallGraph.cpp	/^void CallGraphNode::removeCallEdgeFor(CallSite CS) {$/;"	f	class:CallGraphNode
removeCase	VMCore/Instructions.cpp	/^void SwitchInst::removeCase(CaseIt& i) {$/;"	f	class:SwitchInst
removeCopyByCommutingDef	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::removeCopyByCommutingDef(const CoalescerPair &CP,$/;"	f	class:RegisterCoalescer
removeDeadCPEMI	Target/ARM/ARMConstantIslandPass.cpp	/^void ARMConstantIslands::removeDeadCPEMI(MachineInstr *CPEMI) {$/;"	f	class:ARMConstantIslands
removeDeadCode	CodeGen/SelectionDAG/FastISel.cpp	/^void FastISel::removeDeadCode(MachineBasicBlock::iterator I,$/;"	f	class:FastISel
removeDeadConstantUsers	VMCore/Constants.cpp	/^void Constant::removeDeadConstantUsers() const {$/;"	f	class:Constant
removeDeadFunctions	Transforms/IPO/Inliner.cpp	/^bool Inliner::removeDeadFunctions(CallGraph &CG, bool AlwaysInlineOnly) {$/;"	f	class:Inliner
removeDeadMoves	Target/NVPTX/VectorElementize.cpp	/^unsigned VectorElementize::removeDeadMoves(MachineFunction &F) {$/;"	f	class:VectorElementize
removeDeadPasses	VMCore/PassManager.cpp	/^void PMDataManager::removeDeadPasses(Pass *P, StringRef Msg,$/;"	f	class:PMDataManager
removeDeadUsersOfConstant	VMCore/Constants.cpp	/^static bool removeDeadUsersOfConstant(const Constant *C) {$/;"	f	file:
removeDestination	VMCore/Instructions.cpp	/^void IndirectBrInst::removeDestination(unsigned idx) {$/;"	f	class:IndirectBrInst
removeEdge	Analysis/PathNumbering.cpp	/^void BallLarusNode::removeEdge(BLEdgeVector& v, BallLarusEdge* e) {$/;"	f	class:BallLarusNode
removeEdge	Analysis/ProfileInfo.cpp	/^void ProfileInfoT<Function,BasicBlock>::removeEdge(Edge e) {$/;"	f	class:llvm::ProfileInfoT
removeFromLeaderTable	Transforms/Scalar/GVN.cpp	/^    void removeFromLeaderTable(uint32_t N, Instruction *I, BasicBlock *BB) {$/;"	f	class:__anon537::GVN	file:
removeFromParent	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock *MachineBasicBlock::removeFromParent() {$/;"	f	class:MachineBasicBlock
removeFromParent	CodeGen/MachineInstr.cpp	/^MachineInstr *MachineInstr::removeFromParent() {$/;"	f	class:MachineInstr
removeFromParent	VMCore/BasicBlock.cpp	/^void BasicBlock::removeFromParent() {$/;"	f	class:BasicBlock
removeFromParent	VMCore/Function.cpp	/^void Function::removeFromParent() {$/;"	f	class:Function
removeFromParent	VMCore/Globals.cpp	/^void GlobalAlias::removeFromParent() {$/;"	f	class:GlobalAlias
removeFromParent	VMCore/Globals.cpp	/^void GlobalVariable::removeFromParent() {$/;"	f	class:GlobalVariable
removeFromParent	VMCore/Instruction.cpp	/^void Instruction::removeFromParent() {$/;"	f	class:Instruction
removeFromTracker	Analysis/AliasSetTracker.cpp	/^void AliasSet::removeFromTracker(AliasSetTracker &AST) {$/;"	f	class:AliasSet
removeFromWorkList	CodeGen/SelectionDAG/DAGCombiner.cpp	/^    void removeFromWorkList(SDNode *N) {$/;"	f	class:__anon68::DAGCombiner
removeFunctionFromModule	Analysis/IPA/CallGraph.cpp	/^Function *CallGraph::removeFunctionFromModule(CallGraphNode *CGN) {$/;"	f	class:CallGraph
removeGarbage	VMCore/LeaksContext.h	/^  void removeGarbage(const T* o) {$/;"	f	struct:llvm::LeakDetectorImpl
removeGarbageObjectImpl	VMCore/LeakDetector.cpp	/^void LeakDetector::removeGarbageObjectImpl(const Value *Object) {$/;"	f	class:LeakDetector
removeGarbageObjectImpl	VMCore/LeakDetector.cpp	/^void LeakDetector::removeGarbageObjectImpl(void *Object) {$/;"	f	class:LeakDetector
removeHBR	Target/CellSPU/SPUInstrInfo.cpp	/^static void removeHBR( MachineBasicBlock &MBB) {$/;"	f	file:
removeIfDead	Target/PowerPC/PPCCTRLoops.cpp	/^void PPCCTRLoops::removeIfDead(MachineInstr *MI) {$/;"	f	class:PPCCTRLoops
removeIncomingValue	VMCore/Instructions.cpp	/^Value *PHINode::removeIncomingValue(unsigned Idx, bool DeletePHIIfEmpty) {$/;"	f	class:PHINode
removeInstance	Support/ThreadLocal.cpp	/^void ThreadLocalImpl::removeInstance() {$/;"	f	class:llvm::ThreadLocalImpl
removeInstruction	Analysis/MemoryDependenceAnalysis.cpp	/^void MemoryDependenceAnalysis::removeInstruction(Instruction *RemInst) {$/;"	f	class:MemoryDependenceAnalysis
removeInvalidSlotRanges	CodeGen/StackColoring.cpp	/^void StackColoring::removeInvalidSlotRanges() {$/;"	f	class:StackColoring
removeLibrary	VMCore/Module.cpp	/^void Module::removeLibrary(StringRef Lib) {$/;"	f	class:Module
removeLifetimeIntrinsicUsers	Transforms/Utils/PromoteMemoryToRegister.cpp	/^static void removeLifetimeIntrinsicUsers(AllocaInst *AI) {$/;"	f	file:
removeLiveIn	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::removeLiveIn(unsigned Reg) {$/;"	f	class:MachineBasicBlock
removeMatchingExtensions	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::removeMatchingExtensions(Subscript *Pair) {$/;"	f	class:DependenceAnalysis
removeModule	ExecutionEngine/ExecutionEngine.cpp	/^bool ExecutionEngine::removeModule(Module *M) {$/;"	f	class:ExecutionEngine
removeModule	ExecutionEngine/JIT/JIT.cpp	/^bool JIT::removeModule(Module *M) {$/;"	f	class:JIT
removeModule	VMCore/LLVMContext.cpp	/^void LLVMContext::removeModule(Module *M) {$/;"	f	class:LLVMContext
removeNodeFromList	CodeGen/MachineBasicBlock.cpp	/^void ilist_traits<MachineBasicBlock>::removeNodeFromList(MachineBasicBlock *N) {$/;"	f	class:ilist_traits
removeNodeFromList	CodeGen/MachineBasicBlock.cpp	/^void ilist_traits<MachineInstr>::removeNodeFromList(MachineInstr *N) {$/;"	f	class:ilist_traits
removeNodeFromList	Support/YAMLParser.cpp	/^  void removeNodeFromList(Token *) {}$/;"	f	struct:llvm::ilist_node_traits
removeNodeFromList	VMCore/SymbolTableListTraitsImpl.h	/^::removeNodeFromList(ValueSubClass *V) {$/;"	f	class:llvm::SymbolTableListTraits
removeNotPreservedAnalysis	VMCore/PassManager.cpp	/^void PMDataManager::removeNotPreservedAnalysis(Pass *P) {$/;"	f	class:PMDataManager
removeOneAbstractEdgeTo	Analysis/IPA/CallGraph.cpp	/^void CallGraphNode::removeOneAbstractEdgeTo(CallGraphNode *Callee) {$/;"	f	class:CallGraphNode
removeOperands	Target/ARM/Thumb1RegisterInfo.cpp	/^static void removeOperands(MachineInstr &MI, unsigned i) {$/;"	f	file:
removePred	CodeGen/ScheduleDAG.cpp	/^void SUnit::removePred(const SDep &D) {$/;"	f	class:SUnit
removePredEdge	Analysis/PathNumbering.cpp	/^void BallLarusNode::removePredEdge(BallLarusEdge* edge) {$/;"	f	class:BallLarusNode
removePredecessor	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::removePredecessor(MachineBasicBlock *pred) {$/;"	f	class:MachineBasicBlock
removePredecessor	VMCore/BasicBlock.cpp	/^void BasicBlock::removePredecessor(BasicBlock *Pred,$/;"	f	class:BasicBlock
removeRange	CodeGen/LiveInterval.cpp	/^void LiveInterval::removeRange(SlotIndex Start, SlotIndex End,$/;"	f	class:LiveInterval
removeReady	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::SchedBoundary::removeReady(SUnit *SU) {$/;"	f	class:ConvergingScheduler::SchedBoundary
removeReady	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::SchedBoundary::removeReady(SUnit *SU) {$/;"	f	class:ConvergingVLIWScheduler::SchedBoundary
removeRegOperandFromUseList	CodeGen/MachineRegisterInfo.cpp	/^void MachineRegisterInfo::removeRegOperandFromUseList(MachineOperand *MO) {$/;"	f	class:MachineRegisterInfo
removeRegistrationListener	VMCore/PassRegistry.cpp	/^void PassRegistry::removeRegistrationListener(PassRegistrationListener *L) {$/;"	f	class:PassRegistry
removeSimpleKeyCandidatesOnFlowLevel	Support/YAMLParser.cpp	/^void Scanner::removeSimpleKeyCandidatesOnFlowLevel(unsigned Level) {$/;"	f	class:Scanner
removeStaleSimpleKeyCandidates	Support/YAMLParser.cpp	/^void Scanner::removeStaleSimpleKeyCandidates() {$/;"	f	class:Scanner
removeSubRegion	Analysis/RegionInfo.cpp	/^Region *Region::removeSubRegion(Region *Child) {$/;"	f	class:Region
removeSuccEdge	Analysis/PathNumbering.cpp	/^void BallLarusNode::removeSuccEdge(BallLarusEdge* edge) {$/;"	f	class:BallLarusNode
removeSuccessor	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::removeSuccessor(succ_iterator I) {$/;"	f	class:MachineBasicBlock
removeSuccessor	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::removeSuccessor(MachineBasicBlock *succ) {$/;"	f	class:MachineBasicBlock
removeTimer	Support/Timer.cpp	/^void TimerGroup::removeTimer(Timer &T) {$/;"	f	class:TimerGroup
removeUndefIntroducingPredecessor	Transforms/Utils/SimplifyCFG.cpp	/^static bool removeUndefIntroducingPredecessor(BasicBlock *BB) {$/;"	f	file:
removeUnknown	Analysis/AliasSetTracker.cpp	/^bool AliasSetTracker::removeUnknown(Instruction *I) {$/;"	f	class:AliasSetTracker
removeUnreachableBlocksFromFn	Transforms/Scalar/SimplifyCFGPass.cpp	/^static bool removeUnreachableBlocksFromFn(Function &F) {$/;"	f	file:
removeUnusedCPEntries	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::removeUnusedCPEntries() {$/;"	f	class:ARMConstantIslands
removeUsers	Transforms/IPO/MergeFunctions.cpp	/^void MergeFunctions::removeUsers(Value *V) {$/;"	f	class:MergeFunctions
removeValNo	CodeGen/LiveInterval.cpp	/^void LiveInterval::removeValNo(VNInfo *ValNo) {$/;"	f	class:LiveInterval
removeValueName	VMCore/ValueSymbolTable.cpp	/^void ValueSymbolTable::removeValueName(ValueName *V) {$/;"	f	class:ValueSymbolTable
removeVirtualRegistersKilled	CodeGen/LiveVariables.cpp	/^void LiveVariables::removeVirtualRegistersKilled(MachineInstr *MI) {$/;"	f	class:LiveVariables
remove_all	Support/PathV2.cpp	/^error_code remove_all(const Twine &path, uint32_t &num_removed) {$/;"	f	namespace:llvm::sys::fs
remove_all_r	Support/PathV2.cpp	/^error_code remove_all_r(StringRef path, file_type ft, uint32_t &count) {$/;"	f	namespace:llvm::sys::fs::__anon252
remove_fatal_error_handler	Support/ErrorHandling.cpp	/^void llvm::remove_fatal_error_handler() {$/;"	f	class:llvm
remove_filename	Support/PathV2.cpp	/^void remove_filename(SmallVectorImpl<char> &path) {$/;"	f	namespace:llvm::sys::path
renameRegister	CodeGen/LiveDebugVariables.cpp	/^renameRegister(unsigned OldReg, unsigned NewReg, unsigned SubIdx) {$/;"	f	class:LDVImpl
renameRegister	CodeGen/LiveDebugVariables.cpp	/^renameRegister(unsigned OldReg, unsigned NewReg, unsigned SubIdx) {$/;"	f	class:LiveDebugVariables
renameRegister	CodeGen/LiveDebugVariables.cpp	/^renameRegister(unsigned OldReg, unsigned NewReg, unsigned SubIdx,$/;"	f	class:UserValue
renderGraphFromBottomUp	CodeGen/ScheduleDAGPrinter.cpp	/^    static bool renderGraphFromBottomUp() {$/;"	f	struct:llvm::DOTGraphTraits
renderGraphFromBottomUp	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^    static bool renderGraphFromBottomUp() {$/;"	f	struct:llvm::DOTGraphTraits
renumberIndexes	CodeGen/SlotIndexes.cpp	/^void SlotIndexes::renumberIndexes() {$/;"	f	class:SlotIndexes
renumberIndexes	CodeGen/SlotIndexes.cpp	/^void SlotIndexes::renumberIndexes(IndexList::iterator curItr) {$/;"	f	class:SlotIndexes
reorder	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  bool reorder;$/;"	m	class:__anon421::MipsAssemblerOptions	file:
reorderThumb2JumpTables	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::reorderThumb2JumpTables() {$/;"	f	class:ARMConstantIslands
repair	Analysis/ProfileInfo.cpp	/^void ProfileInfoT<Function,BasicBlock>::repair(const Function *F) {$/;"	f	class:llvm::ProfileInfoT
repeat	Support/regcomp.c	/^repeat(struct parse *p,$/;"	f	file:
replaceAllDominatedUsesWith	Transforms/Scalar/GVN.cpp	/^unsigned GVN::replaceAllDominatedUsesWith(Value *From, Value *To,$/;"	f	class:GVN
replaceAllUses	Analysis/ProfileInfo.cpp	/^        replaceAllUses(const BasicBlock *RmBB, const BasicBlock *DestBB) {$/;"	f	class:llvm::ProfileInfoT
replaceAllUsesWith	VMCore/DebugInfo.cpp	/^void DIType::replaceAllUsesWith(DIDescriptor &D) {$/;"	f	class:DIType
replaceAllUsesWith	VMCore/DebugInfo.cpp	/^void DIType::replaceAllUsesWith(MDNode *D) {$/;"	f	class:DIType
replaceAllUsesWith	VMCore/Value.cpp	/^void Value::replaceAllUsesWith(Value *New) {$/;"	f	class:Value
replaceAndRecursivelySimplify	Analysis/InstructionSimplify.cpp	/^bool llvm::replaceAndRecursivelySimplify(Instruction *I, Value *SimpleV,$/;"	f	class:llvm
replaceAndRecursivelySimplifyImpl	Analysis/InstructionSimplify.cpp	/^static bool replaceAndRecursivelySimplifyImpl(Instruction *I, Value *SimpleV,$/;"	f	file:
replaceBranch	Target/Mips/MipsLongBranch.cpp	/^void MipsLongBranch::replaceBranch(MachineBasicBlock &MBB, Iter Br,$/;"	f	class:MipsLongBranch
replaceCall	Transforms/Scalar/CodeGenPrepare.cpp	/^  void replaceCall(Value *With) {$/;"	f	class:__anon526::CodeGenPrepareFortifiedLibCalls
replaceCallEdge	Analysis/IPA/CallGraph.cpp	/^void CallGraphNode::replaceCallEdge(CallSite CS,$/;"	f	class:CallGraphNode
replaceCongruentIVs	Analysis/ScalarEvolutionExpander.cpp	/^unsigned SCEVExpander::replaceCongruentIVs(Loop *L, const DominatorTree *DT,$/;"	f	class:SCEVExpander
replaceDirectCallers	Transforms/IPO/MergeFunctions.cpp	/^void MergeFunctions::replaceDirectCallers(Function *Old, Function *New) {$/;"	f	class:MergeFunctions
replaceEdge	Analysis/ProfileInfo.cpp	/^        replaceEdge(const Edge &oldedge, const Edge &newedge) {$/;"	f	class:llvm::ProfileInfoT
replaceEntry	Analysis/RegionInfo.cpp	/^void Region::replaceEntry(BasicBlock *BB) {$/;"	f	class:Region
replaceExit	Analysis/RegionInfo.cpp	/^void Region::replaceExit(BasicBlock *BB) {$/;"	f	class:Region
replaceFrameIndexes	Target/MBlaze/MBlazeFrameLowering.cpp	/^static void replaceFrameIndexes(MachineFunction &MF, $/;"	f	file:
replaceFrameIndices	CodeGen/PrologEpilogInserter.cpp	/^void PEI::replaceFrameIndices(MachineFunction &Fn) {$/;"	f	class:PEI
replaceFunctionField	VMCore/DebugInfo.cpp	/^void DIDescriptor::replaceFunctionField(unsigned Elt, Function *F) {$/;"	f	class:DIDescriptor
replaceInChain	Target/XCore/XCoreISelDAGToDAG.cpp	/^replaceInChain(SelectionDAG *CurDAG, SDValue Chain, SDValue Old, SDValue New)$/;"	f	file:
replaceKillInstruction	CodeGen/LiveVariables.cpp	/^void LiveVariables::replaceKillInstruction(unsigned Reg, MachineInstr *OldMI,$/;"	f	class:LiveVariables
replaceLoadWithValue	Transforms/Scalar/LICM.cpp	/^    virtual void replaceLoadWithValue(LoadInst *LI, Value *V) const {$/;"	f	class:__anon569::LoopPromoter
replaceMachineCodeForFunction	Target/ARM/ARMJITInfo.cpp	/^void ARMJITInfo::replaceMachineCodeForFunction(void *Old, void *New) {$/;"	f	class:ARMJITInfo
replaceMachineCodeForFunction	Target/Mips/MipsJITInfo.cpp	/^void MipsJITInfo::replaceMachineCodeForFunction(void *Old, void *New) {$/;"	f	class:MipsJITInfo
replaceMachineCodeForFunction	Target/PowerPC/PPCJITInfo.cpp	/^void PPCJITInfo::replaceMachineCodeForFunction(void *Old, void *New) {$/;"	f	class:PPCJITInfo
replaceMachineCodeForFunction	Target/X86/X86JITInfo.cpp	/^void X86JITInfo::replaceMachineCodeForFunction(void *Old, void *New) {$/;"	f	class:X86JITInfo
replaceOperand	VMCore/Metadata.cpp	/^void MDNode::replaceOperand(MDNodeOperand *Op, Value *To) {$/;"	f	class:MDNode
replaceOperandWith	VMCore/Metadata.cpp	/^void MDNode::replaceOperandWith(unsigned i, Value *Val) {$/;"	f	class:MDNode
replaceOutputsOfPair	Transforms/Vectorize/BBVectorize.cpp	/^  void BBVectorize::replaceOutputsOfPair(LLVMContext& Context, Instruction *I,$/;"	f	class:__anon604::BBVectorize
replacePHIInstrs	CodeGen/EarlyIfConversion.cpp	/^void SSAIfConv::replacePHIInstrs() {$/;"	f	class:SSAIfConv
replaceRegWith	CodeGen/MachineRegisterInfo.cpp	/^void MachineRegisterInfo::replaceRegWith(unsigned FromReg, unsigned ToReg) {$/;"	f	class:MachineRegisterInfo
replaceRoot	Support/IntervalMap.cpp	/^void Path::replaceRoot(void *Root, unsigned Size, IdxPair Offsets) {$/;"	f	class:llvm::IntervalMapImpl::Path
replaceSuccessor	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::replaceSuccessor(MachineBasicBlock *Old,$/;"	f	class:MachineBasicBlock
replaceSuccessorsPhiUsesWith	VMCore/BasicBlock.cpp	/^void BasicBlock::replaceSuccessorsPhiUsesWith(BasicBlock *New) {$/;"	f	class:BasicBlock
replaceUsesOfWith	VMCore/User.cpp	/^void User::replaceUsesOfWith(Value *From, Value *To) {$/;"	f	class:llvm::User
replaceUsesOfWithOnConstant	VMCore/Constants.cpp	/^void BlockAddress::replaceUsesOfWithOnConstant(Value *From, Value *To, Use *U) {$/;"	f	class:BlockAddress
replaceUsesOfWithOnConstant	VMCore/Constants.cpp	/^void ConstantArray::replaceUsesOfWithOnConstant(Value *From, Value *To,$/;"	f	class:ConstantArray
replaceUsesOfWithOnConstant	VMCore/Constants.cpp	/^void ConstantExpr::replaceUsesOfWithOnConstant(Value *From, Value *ToV,$/;"	f	class:ConstantExpr
replaceUsesOfWithOnConstant	VMCore/Constants.cpp	/^void ConstantStruct::replaceUsesOfWithOnConstant(Value *From, Value *To,$/;"	f	class:ConstantStruct
replaceUsesOfWithOnConstant	VMCore/Constants.cpp	/^void ConstantVector::replaceUsesOfWithOnConstant(Value *From, Value *To,$/;"	f	class:ConstantVector
replaceUsesOfWithOnConstant	VMCore/Globals.cpp	/^void GlobalVariable::replaceUsesOfWithOnConstant(Value *From, Value *To,$/;"	f	class:GlobalVariable
replaceWith	Archive/Archive.cpp	/^bool ArchiveMember::replaceWith(const sys::Path& newFile, std::string* ErrMsg) {$/;"	f	class:ArchiveMember
replace_extension	Support/PathV2.cpp	/^void replace_extension(SmallVectorImpl<char> &path, const Twine &extension) {$/;"	f	namespace:llvm::sys::path
replace_filename	Support/PathV2.cpp	/^void directory_entry::replace_filename(const Twine &filename, file_status st) {$/;"	f	class:llvm::sys::fs::directory_entry
report	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::report(const char *msg, const MachineBasicBlock *MBB) {$/;"	f	class:MachineVerifier
report	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::report(const char *msg, const MachineBasicBlock *MBB,$/;"	f	class:MachineVerifier
report	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::report(const char *msg, const MachineFunction *MF) {$/;"	f	class:MachineVerifier
report	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::report(const char *msg, const MachineFunction *MF,$/;"	f	class:MachineVerifier
report	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::report(const char *msg, const MachineInstr *MI) {$/;"	f	class:MachineVerifier
report	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::report(const char *msg,$/;"	f	class:MachineVerifier
reportParseError	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::reportParseError(StringRef ErrorMsg) {$/;"	f	class:MipsAsmParser
report_fatal_error	Support/ErrorHandling.cpp	/^void llvm::report_fatal_error(StringRef Reason) {$/;"	f	class:llvm
report_fatal_error	Support/ErrorHandling.cpp	/^void llvm::report_fatal_error(const Twine &Reason) {$/;"	f	class:llvm
report_fatal_error	Support/ErrorHandling.cpp	/^void llvm::report_fatal_error(const char *Reason) {$/;"	f	class:llvm
report_fatal_error	Support/ErrorHandling.cpp	/^void llvm::report_fatal_error(const std::string &Reason) {$/;"	f	class:llvm
reqPTX20	Target/NVPTX/NVPTXSubtarget.h	/^  bool reqPTX20() const { return SmVersion >= 20; }$/;"	f	class:llvm::NVPTXSubtarget
requestLabelAfterInsn	CodeGen/AsmPrinter/DwarfDebug.h	/^  void requestLabelAfterInsn(const MachineInstr *MI) {$/;"	f	class:llvm::DwarfDebug
requestLabelBeforeInsn	CodeGen/AsmPrinter/DwarfDebug.h	/^  void requestLabelBeforeInsn(const MachineInstr *MI) {$/;"	f	class:llvm::DwarfDebug
requestsDoubleOperand	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAsmParser::requestsDoubleOperand(StringRef Mnemonic){$/;"	f	class:MipsAsmParser
requiresExternRelocation	Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp	/^bool ARMMachObjectWriter::requiresExternRelocation(MachObjectWriter *Writer,$/;"	f	class:ARMMachObjectWriter
requiresFrameIndexScavenging	Target/ARM/ARMBaseRegisterInfo.cpp	/^requiresFrameIndexScavenging(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
requiresRegisterScavenging	Target/ARM/ARMBaseRegisterInfo.cpp	/^requiresRegisterScavenging(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
requiresRegisterScavenging	Target/CellSPU/SPURegisterInfo.h	/^    virtual bool requiresRegisterScavenging(const MachineFunction &MF) const$/;"	f	class:llvm::SPURegisterInfo
requiresRegisterScavenging	Target/Hexagon/HexagonRegisterInfo.h	/^  bool requiresRegisterScavenging(const MachineFunction &MF) const {$/;"	f	struct:llvm::HexagonRegisterInfo
requiresRegisterScavenging	Target/Mips/MipsRegisterInfo.cpp	/^MipsRegisterInfo::requiresRegisterScavenging(const MachineFunction &MF) const {$/;"	f	class:MipsRegisterInfo
requiresRegisterScavenging	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::requiresRegisterScavenging(const MachineFunction &) const {$/;"	f	class:PPCRegisterInfo
requiresRegisterScavenging	Target/XCore/XCoreRegisterInfo.cpp	/^XCoreRegisterInfo::requiresRegisterScavenging(const MachineFunction &MF) const {$/;"	f	class:XCoreRegisterInfo
requiresVirtualBaseRegisters	Target/ARM/ARMBaseRegisterInfo.cpp	/^requiresVirtualBaseRegisters(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
rerr	Support/regerror.c	/^static struct rerr {$/;"	s	file:
rerrs	Support/regerror.c	/^} rerrs[] = {$/;"	v	typeref:struct:rerr	file:
reserveResources	CodeGen/DFAPacketizer.cpp	/^void DFAPacketizer::reserveResources(const llvm::MCInstrDesc *MID) {$/;"	f	class:DFAPacketizer
reserveResources	CodeGen/DFAPacketizer.cpp	/^void DFAPacketizer::reserveResources(llvm::MachineInstr *MI) {$/;"	f	class:DFAPacketizer
reserveResources	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^void ResourcePriorityQueue::reserveResources(SUnit *SU) {$/;"	f	class:ResourcePriorityQueue
reserveResources	Target/Hexagon/HexagonMachineScheduler.cpp	/^bool VLIWResourceModel::reserveResources(SUnit *SU) {$/;"	f	class:VLIWResourceModel
reserveResourcesForConstExt	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^void HexagonPacketizerList::reserveResourcesForConstExt(MachineInstr* MI) {$/;"	f	class:HexagonPacketizerList
reset	CodeGen/InterferenceCache.cpp	/^void InterferenceCache::Entry::reset(unsigned physReg,$/;"	f	class:InterferenceCache::Entry
reset	CodeGen/LiveRangeCalc.cpp	/^void LiveRangeCalc::reset(const MachineFunction *MF,$/;"	f	class:LiveRangeCalc
reset	CodeGen/RegAllocGreedy.cpp	/^    void reset(InterferenceCache &Cache, unsigned Reg) {$/;"	f	struct:__anon158::RAGreedy::GlobalSplitCandidate
reset	CodeGen/RegisterPressure.cpp	/^void IntervalPressure::reset() {$/;"	f	class:IntervalPressure
reset	CodeGen/RegisterPressure.cpp	/^void RegionPressure::reset() {$/;"	f	class:RegionPressure
reset	CodeGen/SplitKit.cpp	/^void SplitEditor::reset(LiveRangeEdit &LRE, ComplementSpillMode SM) {$/;"	f	class:SplitEditor
reset	DebugInfo/DWARFDebugLine.cpp	/^void DWARFDebugLine::Row::reset(bool default_is_stmt) {$/;"	f	class:DWARFDebugLine::Row
reset	DebugInfo/DWARFDebugLine.h	/^    virtual void reset() {$/;"	f	struct:llvm::DWARFDebugLine::State
reset	DebugInfo/DWARFDebugLine.h	/^    void reset() {$/;"	f	struct:llvm::DWARFDebugLine::Sequence
reset	ExecutionEngine/ExecutionEngine.cpp	/^void *ArgvArray::reset(LLVMContext &C, ExecutionEngine *EE,$/;"	f	class:ArgvArray
reset	Target/Hexagon/HexagonMachineScheduler.h	/^  void reset() {$/;"	f	class:llvm::VLIWResourceModel
resetColor	Support/raw_ostream.cpp	/^raw_ostream &raw_fd_ostream::resetColor() {$/;"	f	class:raw_fd_ostream
resetDFA	Target/Hexagon/HexagonMachineScheduler.h	/^  void resetDFA() {$/;"	f	class:llvm::VLIWResourceModel
resetPacketState	Target/Hexagon/HexagonMachineScheduler.h	/^  void resetPacketState() {$/;"	f	class:llvm::VLIWResourceModel
resetVRegCycle	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^static void resetVRegCycle(SUnit *SU) {$/;"	f	file:
resize	Bitcode/Reader/BitcodeReader.h	/^  void resize(unsigned N)     { MDValuePtrs.resize(N); }$/;"	f	class:llvm::BitcodeReaderMDValueList
resize	Bitcode/Reader/BitcodeReader.h	/^  void resize(unsigned N) { ValuePtrs.resize(N); }$/;"	f	class:llvm::BitcodeReaderValueList
resize	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGILP::resize(unsigned NumSUnits) {$/;"	f	class:ScheduleDAGILP
resolve	CodeGen/ExecutionDepsFix.cpp	/^DomainValue *ExeDepsFix::resolve(DomainValue *&DVRef) {$/;"	f	class:ExeDepsFix
resolveARMRelocation	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^void RuntimeDyldELF::resolveARMRelocation(uint8_t *LocalAddress,$/;"	f	class:llvm::RuntimeDyldELF
resolveARMRelocation	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp	/^bool RuntimeDyldMachO::resolveARMRelocation(uint8_t *LocalAddress,$/;"	f	class:llvm::RuntimeDyldMachO
resolveAliasedGlobal	VMCore/Globals.cpp	/^const GlobalValue *GlobalAlias::resolveAliasedGlobal(bool stopOnWeak) const {$/;"	f	class:GlobalAlias
resolveCompileUnitReferences	DebugInfo/DWARFFormValue.cpp	/^DWARFFormValue::resolveCompileUnitReferences(const DWARFCompileUnit *cu) {$/;"	f	class:DWARFFormValue
resolveConflicts	CodeGen/RegisterCoalescer.cpp	/^bool JoinVals::resolveConflicts(JoinVals &Other) {$/;"	f	class:JoinVals
resolveDanglingDebugInfo	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::resolveDanglingDebugInfo(const Value *V,$/;"	f	class:SelectionDAGBuilder
resolveExternalSymbols	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyldImpl::resolveExternalSymbols() {$/;"	f	class:llvm::RuntimeDyldImpl
resolveFrameIndex	Target/ARM/ARMBaseRegisterInfo.cpp	/^ARMBaseRegisterInfo::resolveFrameIndex(MachineBasicBlock::iterator I,$/;"	f	class:ARMBaseRegisterInfo
resolveFrameIndex	Target/ARM/Thumb1RegisterInfo.cpp	/^Thumb1RegisterInfo::resolveFrameIndex(MachineBasicBlock::iterator I,$/;"	f	class:Thumb1RegisterInfo
resolveI386Relocation	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp	/^bool RuntimeDyldMachO::resolveI386Relocation(uint8_t *LocalAddress,$/;"	f	class:llvm::RuntimeDyldMachO
resolveListElementReference	TableGen/Record.cpp	/^Init *FieldInit::resolveListElementReference(Record &R, const RecordVal *RV,$/;"	f	class:FieldInit
resolveListElementReference	TableGen/Record.cpp	/^Init *ListInit::resolveListElementReference(Record &R, const RecordVal *IRV,$/;"	f	class:ListInit
resolveListElementReference	TableGen/Record.cpp	/^Init *OpInit::resolveListElementReference(Record &R, const RecordVal *IRV,$/;"	f	class:OpInit
resolveListElementReference	TableGen/Record.cpp	/^Init *VarInit::resolveListElementReference(Record &R,$/;"	f	class:VarInit
resolveListElementReference	TableGen/Record.cpp	/^Init *VarListElementInit:: resolveListElementReference(Record &R,$/;"	f	class:VarListElementInit
resolveMIPSRelocation	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^void RuntimeDyldELF::resolveMIPSRelocation(uint8_t *LocalAddress,$/;"	f	class:llvm::RuntimeDyldELF
resolveReferences	TableGen/Record.cpp	/^Init *BinOpInit::resolveReferences(Record &R, const RecordVal *RV) const {$/;"	f	class:BinOpInit
resolveReferences	TableGen/Record.cpp	/^Init *BitsInit::resolveReferences(Record &R, const RecordVal *RV) const {$/;"	f	class:BitsInit
resolveReferences	TableGen/Record.cpp	/^Init *DagInit::resolveReferences(Record &R, const RecordVal *RV) const {$/;"	f	class:DagInit
resolveReferences	TableGen/Record.cpp	/^Init *FieldInit::resolveReferences(Record &R, const RecordVal *RV) const {$/;"	f	class:FieldInit
resolveReferences	TableGen/Record.cpp	/^Init *ListInit::resolveReferences(Record &R, const RecordVal *RV) const {$/;"	f	class:ListInit
resolveReferences	TableGen/Record.cpp	/^Init *TernOpInit::resolveReferences(Record &R,$/;"	f	class:TernOpInit
resolveReferences	TableGen/Record.cpp	/^Init *UnOpInit::resolveReferences(Record &R, const RecordVal *RV) const {$/;"	f	class:UnOpInit
resolveReferences	TableGen/Record.cpp	/^Init *VarBitInit::resolveReferences(Record &R, const RecordVal *RV) const {$/;"	f	class:VarBitInit
resolveReferences	TableGen/Record.cpp	/^Init *VarInit::resolveReferences(Record &R, const RecordVal *RV) const {$/;"	f	class:VarInit
resolveReferences	TableGen/Record.cpp	/^VarListElementInit::resolveReferences(Record &R, const RecordVal *RV) const {$/;"	f	class:VarListElementInit
resolveReferencesTo	TableGen/Record.cpp	/^void Record::resolveReferencesTo(const RecordVal *RV) {$/;"	f	class:Record
resolveRelocDestAddr	Target/ARM/ARMJITInfo.cpp	/^intptr_t ARMJITInfo::resolveRelocDestAddr(MachineRelocation *MR) const {$/;"	f	class:ARMJITInfo
resolveRelocation	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^void RuntimeDyldELF::resolveRelocation(uint8_t *LocalAddress,$/;"	f	class:llvm::RuntimeDyldELF
resolveRelocation	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp	/^void RuntimeDyldMachO::resolveRelocation(uint8_t *LocalAddress,$/;"	f	class:llvm::RuntimeDyldMachO
resolveRelocationEntry	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyldImpl::resolveRelocationEntry(const RelocationEntry &RE,$/;"	f	class:llvm::RuntimeDyldImpl
resolveRelocationList	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyldImpl::resolveRelocationList(const RelocationList &Relocs,$/;"	f	class:llvm::RuntimeDyldImpl
resolveRelocations	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyld::resolveRelocations() {$/;"	f	class:llvm::RuntimeDyld
resolveRelocations	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^void RuntimeDyldImpl::resolveRelocations() {$/;"	f	class:llvm::RuntimeDyldImpl
resolveSchedClass	CodeGen/TargetSchedule.cpp	/^resolveSchedClass(const MachineInstr *MI) const {$/;"	f	class:TargetSchedModel
resolveTypes	TableGen/Record.cpp	/^RecTy *llvm::resolveTypes(RecTy *T1, RecTy *T2) {$/;"	f	class:llvm
resolveX86Relocation	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^void RuntimeDyldELF::resolveX86Relocation(uint8_t *LocalAddress,$/;"	f	class:llvm::RuntimeDyldELF
resolveX86_64Relocation	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^void RuntimeDyldELF::resolveX86_64Relocation(uint8_t *LocalAddress,$/;"	f	class:llvm::RuntimeDyldELF
resolveX86_64Relocation	ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp	/^bool RuntimeDyldMachO::resolveX86_64Relocation(uint8_t *LocalAddress,$/;"	f	class:llvm::RuntimeDyldMachO
restoreCRs	Target/PowerPC/PPCFrameLowering.cpp	/^restoreCRs(bool isPPC64, bool CR2Spilled, bool CR3Spilled, bool CR4Spilled,$/;"	f	file:
restoreCalleeSavedRegisters	Target/ARM/ARMFrameLowering.cpp	/^bool ARMFrameLowering::restoreCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:ARMFrameLowering
restoreCalleeSavedRegisters	Target/ARM/Thumb1FrameLowering.cpp	/^restoreCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:Thumb1FrameLowering
restoreCalleeSavedRegisters	Target/Hexagon/HexagonFrameLowering.cpp	/^bool HexagonFrameLowering::restoreCalleeSavedRegisters($/;"	f	class:HexagonFrameLowering
restoreCalleeSavedRegisters	Target/MSP430/MSP430FrameLowering.cpp	/^MSP430FrameLowering::restoreCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:MSP430FrameLowering
restoreCalleeSavedRegisters	Target/Mips/Mips16FrameLowering.cpp	/^bool Mips16FrameLowering::restoreCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:Mips16FrameLowering
restoreCalleeSavedRegisters	Target/PowerPC/PPCFrameLowering.cpp	/^PPCFrameLowering::restoreCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:PPCFrameLowering
restoreCalleeSavedRegisters	Target/X86/X86FrameLowering.cpp	/^bool X86FrameLowering::restoreCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:X86FrameLowering
restoreCalleeSavedRegisters	Target/XCore/XCoreFrameLowering.cpp	/^bool XCoreFrameLowering::restoreCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:XCoreFrameLowering
restoreInsertPoint	Analysis/ScalarEvolutionExpander.cpp	/^void SCEVExpander::restoreInsertPoint(BasicBlock *BB, BasicBlock::iterator I) {$/;"	f	class:SCEVExpander
result	MC/MCDisassembler/EDInst.h	/^  int result() { return Result; }$/;"	f	struct:llvm::CachedResult
resync	Support/raw_ostream.cpp	/^void raw_svector_ostream::resync() {$/;"	f	class:raw_svector_ostream
retain	CodeGen/ExecutionDepsFix.cpp	/^  DomainValue *retain(DomainValue *DV) {$/;"	f	class:__anon120::ExeDepsFix	file:
retainType	VMCore/DIBuilder.cpp	/^void DIBuilder::retainType(DIType T) {$/;"	f	class:DIBuilder
retryWithMoreMemory	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::retryWithMoreMemory(MachineFunction &F) {$/;"	f	class:JITEmitter
reuseOrInsertFastDiv	Transforms/Utils/BypassSlowDivision.cpp	/^static bool reuseOrInsertFastDiv(Function &F,$/;"	f	file:
revGOTMap	ExecutionEngine/JIT/JITEmitter.cpp	/^    std::map<void*, unsigned> revGOTMap;$/;"	m	class:__anon182::JITResolver	file:
revalidate	CodeGen/InterferenceCache.cpp	/^void InterferenceCache::Entry::revalidate(LiveIntervalUnion *LIUArray,$/;"	f	class:InterferenceCache::Entry
reverseColor	Support/raw_ostream.cpp	/^raw_ostream &raw_fd_ostream::reverseColor() {$/;"	f	class:raw_fd_ostream
reverse_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  reverse_sort(SF &sf) : SortFunc(sf) {}$/;"	f	struct:__anon77::reverse_sort
reverse_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  reverse_sort(const reverse_sort &RHS) : SortFunc(RHS.SortFunc) {}$/;"	f	struct:__anon77::reverse_sort
reverse_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^struct reverse_sort : public queue_sort {$/;"	s	namespace:__anon77	file:
rewind	CodeGen/AllocationOrder.h	/^  void rewind() { Pos = 0; }$/;"	f	class:llvm::AllocationOrder
rewrite	CodeGen/VirtRegMap.cpp	/^void VirtRegRewriter::rewrite() {$/;"	f	class:VirtRegRewriter
rewrite	Transforms/Scalar/SROA.cpp	/^  bool rewrite(Instruction &I) {$/;"	f	class:__anon562::AggLoadStoreRewriter
rewriteARMFrameIndex	Target/ARM/ARMBaseInstrInfo.cpp	/^bool llvm::rewriteARMFrameIndex(MachineInstr &MI, unsigned FrameRegIdx,$/;"	f	class:llvm
rewriteAllocaPartition	Transforms/Scalar/SROA.cpp	/^bool SROA::rewriteAllocaPartition(AllocaInst &AI,$/;"	f	class:SROA
rewriteAssigned	CodeGen/SplitKit.cpp	/^void SplitEditor::rewriteAssigned(bool ExtendRanges) {$/;"	f	class:SplitEditor
rewriteExpensiveInvoke	Transforms/Utils/LowerInvoke.cpp	/^void LowerInvoke::rewriteExpensiveInvoke(InvokeInst *II, unsigned InvokeNo,$/;"	f	class:LowerInvoke
rewriteFrameIndex	Target/ARM/Thumb1RegisterInfo.cpp	/^rewriteFrameIndex(MachineBasicBlock::iterator II, unsigned FrameRegIdx,$/;"	f	class:Thumb1RegisterInfo
rewriteIntegerLoad	Transforms/Scalar/SROA.cpp	/^  bool rewriteIntegerLoad(IRBuilder<> &IRB, LoadInst &LI) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
rewriteIntegerStore	Transforms/Scalar/SROA.cpp	/^  bool rewriteIntegerStore(IRBuilder<> &IRB, StoreInst &SI) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
rewriteLocations	CodeGen/LiveDebugVariables.cpp	/^UserValue::rewriteLocations(VirtRegMap &VRM, const TargetRegisterInfo &TRI) {$/;"	f	class:UserValue
rewritePHIOperands	CodeGen/EarlyIfConversion.cpp	/^void SSAIfConv::rewritePHIOperands() {$/;"	f	class:SSAIfConv
rewriteT2FrameIndex	Target/ARM/Thumb2InstrInfo.cpp	/^bool llvm::rewriteT2FrameIndex(MachineInstr &MI, unsigned FrameRegIdx,$/;"	f	class:llvm
rewriteVectorizedLoadInst	Transforms/Scalar/SROA.cpp	/^  bool rewriteVectorizedLoadInst(IRBuilder<> &IRB, LoadInst &LI, Value *OldOp) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
rewriteVectorizedStoreInst	Transforms/Scalar/SROA.cpp	/^  bool rewriteVectorizedStoreInst(IRBuilder<> &IRB, StoreInst &SI,$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
rexPrefix	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t rexPrefix;$/;"	m	struct:InternalInstruction
rfind	Support/StringRef.cpp	/^size_t StringRef::rfind(StringRef Str) const {$/;"	f	class:StringRef
rmFromModRM	Target/X86/Disassembler/X86DisassemblerDecoder.h	39;"	d
rm_eo	Support/regex_impl.h	/^  llvm_regoff_t rm_eo;		\/* end of match *\/$/;"	m	struct:__anon250
rm_so	Support/regex_impl.h	/^  llvm_regoff_t rm_so;		\/* start of match *\/$/;"	m	struct:__anon250
rmap_ty	Target/ARM/AsmParser/ARMAsmLexer.cpp	/^  typedef std::map <std::string, unsigned> rmap_ty;$/;"	t	class:__anon258::ARMBaseAsmLexer	file:
rmap_ty	Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp	/^    typedef std::map <std::string, unsigned> rmap_ty;$/;"	t	class:__anon453::MBlazeBaseAsmLexer	file:
rollIndent	Support/YAMLParser.cpp	/^bool Scanner::rollIndent( int ToColumn$/;"	f	class:Scanner
root_dir_start	Support/PathV2.cpp	/^  size_t root_dir_start(StringRef str) {$/;"	f	namespace:__anon251
root_directory	Support/PathV2.cpp	/^const StringRef root_directory(StringRef path) {$/;"	f	namespace:llvm::sys::path
root_name	Support/PathV2.cpp	/^const StringRef root_name(StringRef path) {$/;"	f	namespace:llvm::sys::path
root_path	Support/PathV2.cpp	/^const StringRef root_path(StringRef path) {$/;"	f	namespace:llvm::sys::path
ror	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    ror,$/;"	e	enum:llvm::ARM_AM::ShiftOpc
rotateLoop	CodeGen/MachineBlockPlacement.cpp	/^void MachineBlockPlacement::rotateLoop(BlockChain &LoopChain,$/;"	f	class:MachineBlockPlacement
rotateLoop	Transforms/Scalar/LoopRotation.cpp	/^bool LoopRotate::rotateLoop(Loop *L) {$/;"	f	class:LoopRotate
rotl	Support/APInt.cpp	/^APInt APInt::rotl(const APInt &rotateAmt) const {$/;"	f	class:APInt
rotl	Support/APInt.cpp	/^APInt APInt::rotl(unsigned rotateAmt) const {$/;"	f	class:APInt
rotl32	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned rotl32(unsigned Val, unsigned Amt) {$/;"	f	namespace:llvm::ARM_AM
rotr	Support/APInt.cpp	/^APInt APInt::rotr(const APInt &rotateAmt) const {$/;"	f	class:APInt
rotr	Support/APInt.cpp	/^APInt APInt::rotr(unsigned rotateAmt) const {$/;"	f	class:APInt
rotr32	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^  static inline unsigned rotr32(unsigned Val, unsigned Amt) {$/;"	f	namespace:llvm::ARM_AM
roundAwayFromZero	Support/APFloat.cpp	/^APFloat::roundAwayFromZero(roundingMode rounding_mode,$/;"	f	class:APFloat
roundSignificandWithExponent	Support/APFloat.cpp	/^APFloat::roundSignificandWithExponent(const integerPart *decSigParts,$/;"	f	class:APFloat
roundToDouble	Support/APInt.cpp	/^double APInt::roundToDouble(bool isSigned) const {$/;"	f	class:APInt
roundToIntegral	Support/APFloat.cpp	/^APFloat::opStatus APFloat::roundToIntegral(roundingMode rounding_mode) {$/;"	f	class:APFloat
row	DebugInfo/DWARFDebugLine.h	/^    unsigned row;$/;"	m	struct:llvm::DWARFDebugLine::State
rparen	AsmParser/LLToken.h	/^    lparen, rparen,    \/\/ (  )$/;"	e	enum:llvm::lltok::Kind
rrx	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    rrx$/;"	e	enum:llvm::ARM_AM::ShiftOpc
rsquare	AsmParser/LLToken.h	/^    lsquare, rsquare,  \/\/ [  ]$/;"	e	enum:llvm::lltok::Kind
run	CodeGen/SelectionDAG/LegalizeTypes.cpp	/^bool DAGTypeLegalizer::run() {$/;"	f	class:DAGTypeLegalizer
run	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::run() {$/;"	f	class:Interpreter
run	Linker/LinkModules.cpp	/^bool ModuleLinker::run() {$/;"	f	class:ModuleLinker
run	Transforms/Scalar/SROA.cpp	/^  void run(const SmallVectorImpl<Instruction*> &Insts) {$/;"	f	class:__anon558::AllocaPromoter
run	Transforms/Scalar/ScalarReplAggregates.cpp	/^  void run(AllocaInst *AI, const SmallVectorImpl<Instruction*> &Insts) {$/;"	f	class:__anon524::AllocaPromoter
run	Transforms/Utils/PromoteMemoryToRegister.cpp	/^void PromoteMem2Reg::run() {$/;"	f	class:PromoteMem2Reg
run	Transforms/Utils/SSAUpdater.cpp	/^run(const SmallVectorImpl<Instruction*> &Insts) const {$/;"	f	class:LoadAndStorePromoter
run	Transforms/Utils/SimplifyCFG.cpp	/^bool SimplifyCFGOpt::run(BasicBlock *BB) {$/;"	f	class:SimplifyCFGOpt
run	VMCore/PassManager.cpp	/^bool FunctionPassManager::run(Function &F) {$/;"	f	class:FunctionPassManager
run	VMCore/PassManager.cpp	/^bool FunctionPassManagerImpl::run(Function &F) {$/;"	f	class:FunctionPassManagerImpl
run	VMCore/PassManager.cpp	/^bool PassManager::run(Module &M) {$/;"	f	class:PassManager
run	VMCore/PassManager.cpp	/^bool PassManagerImpl::run(Module &M) {$/;"	f	class:PassManagerImpl
run	VMCore/TypeFinder.cpp	/^void TypeFinder::run(const Module &M, bool onlyNamed) {$/;"	f	class:TypeFinder
runAtExitHandlers	ExecutionEngine/Interpreter/Interpreter.cpp	/^void Interpreter::runAtExitHandlers () {$/;"	f	class:Interpreter
runAtExitHandlers	ExecutionEngine/JIT/JITMemoryManager.cpp	/^static void runAtExitHandlers() {$/;"	f	file:
runFunction	ExecutionEngine/Interpreter/Interpreter.cpp	/^Interpreter::runFunction(Function *F,$/;"	f	class:Interpreter
runFunction	ExecutionEngine/JIT/JIT.cpp	/^GenericValue JIT::runFunction(Function *F,$/;"	f	class:JIT
runFunction	ExecutionEngine/MCJIT/MCJIT.cpp	/^GenericValue MCJIT::runFunction(Function *F,$/;"	f	class:MCJIT
runFunctionAsMain	ExecutionEngine/ExecutionEngine.cpp	/^int ExecutionEngine::runFunctionAsMain(Function *Fn,$/;"	f	class:ExecutionEngine
runJITOnFunction	ExecutionEngine/JIT/JIT.cpp	/^void JIT::runJITOnFunction(Function *F, MachineCodeInfo *MCI) {$/;"	f	class:JIT
runJITOnFunctionUnlocked	ExecutionEngine/JIT/JIT.cpp	/^void JIT::runJITOnFunctionUnlocked(Function *F, const MutexGuard &locked) {$/;"	f	class:JIT
runOnAlloca	Transforms/Scalar/SROA.cpp	/^bool SROA::runOnAlloca(AllocaInst &AI) {$/;"	f	class:SROA
runOnBasicBlock	Transforms/Scalar/DCE.cpp	/^    virtual bool runOnBasicBlock(BasicBlock &BB) {$/;"	f	struct:__anon539::DeadInstElimination
runOnBasicBlock	Transforms/Scalar/DeadStoreElimination.cpp	/^bool DSE::runOnBasicBlock(BasicBlock &BB) {$/;"	f	class:DSE
runOnBasicBlock	Transforms/Scalar/LowerAtomic.cpp	/^    bool runOnBasicBlock(BasicBlock &BB) {$/;"	f	struct:__anon570::LowerAtomic
runOnBasicBlock	Transforms/Vectorize/BBVectorize.cpp	/^    virtual bool runOnBasicBlock(BasicBlock &BB) {$/;"	f	struct:__anon604::BBVectorize
runOnFunction	Analysis/AliasAnalysisEvaluator.cpp	/^bool AAEval::runOnFunction(Function &F) {$/;"	f	class:AAEval
runOnFunction	Analysis/AliasSetTracker.cpp	/^    virtual bool runOnFunction(Function &F) {$/;"	f	class:__anon35::AliasSetPrinter
runOnFunction	Analysis/BlockFrequencyInfo.cpp	/^bool BlockFrequencyInfo::runOnFunction(Function &F) {$/;"	f	class:BlockFrequencyInfo
runOnFunction	Analysis/BranchProbabilityInfo.cpp	/^bool BranchProbabilityInfo::runOnFunction(Function &F) {$/;"	f	class:BranchProbabilityInfo
runOnFunction	Analysis/CFGPrinter.cpp	/^    virtual bool runOnFunction(Function &F) {$/;"	f	struct:__anon24::CFGViewer
runOnFunction	Analysis/CFGPrinter.cpp	/^    virtual bool runOnFunction(Function &F) {$/;"	f	struct:__anon25::CFGOnlyViewer
runOnFunction	Analysis/CFGPrinter.cpp	/^    virtual bool runOnFunction(Function &F) {$/;"	f	struct:__anon26::CFGPrinter
runOnFunction	Analysis/CFGPrinter.cpp	/^    virtual bool runOnFunction(Function &F) {$/;"	f	struct:__anon27::CFGOnlyPrinter
runOnFunction	Analysis/DbgInfoPrinter.cpp	/^bool PrintDbgInfo::runOnFunction(Function &F) {$/;"	f	class:PrintDbgInfo
runOnFunction	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::runOnFunction(Function &F) {$/;"	f	class:DependenceAnalysis
runOnFunction	Analysis/InstCount.cpp	/^bool InstCount::runOnFunction(Function &F) {$/;"	f	class:InstCount
runOnFunction	Analysis/IntervalPartition.cpp	/^bool IntervalPartition::runOnFunction(Function &F) {$/;"	f	class:IntervalPartition
runOnFunction	Analysis/LazyValueInfo.cpp	/^bool LazyValueInfo::runOnFunction(Function &F) {$/;"	f	class:LazyValueInfo
runOnFunction	Analysis/Lint.cpp	/^bool Lint::runOnFunction(Function &F) {$/;"	f	class:Lint
runOnFunction	Analysis/LoopInfo.cpp	/^bool LoopInfo::runOnFunction(Function &) {$/;"	f	class:LoopInfo
runOnFunction	Analysis/LoopPass.cpp	/^bool LPPassManager::runOnFunction(Function &F) {$/;"	f	class:LPPassManager
runOnFunction	Analysis/MemDepPrinter.cpp	/^bool MemDepPrinter::runOnFunction(Function &F) {$/;"	f	class:MemDepPrinter
runOnFunction	Analysis/MemoryDependenceAnalysis.cpp	/^bool MemoryDependenceAnalysis::runOnFunction(Function &) {$/;"	f	class:MemoryDependenceAnalysis
runOnFunction	Analysis/PostDominators.cpp	/^bool PostDominatorTree::runOnFunction(Function &F) {$/;"	f	class:PostDominatorTree
runOnFunction	Analysis/ProfileEstimatorPass.cpp	/^bool ProfileEstimatorPass::runOnFunction(Function &F) {$/;"	f	class:ProfileEstimatorPass
runOnFunction	Analysis/ProfileVerifierPass.cpp	/^  bool ProfileVerifierPassT<FType, BType>::runOnFunction(FType &F) {$/;"	f	class:__anon36::ProfileVerifierPassT
runOnFunction	Analysis/RegionInfo.cpp	/^bool RegionInfo::runOnFunction(Function &F) {$/;"	f	class:RegionInfo
runOnFunction	Analysis/RegionPass.cpp	/^bool RGPassManager::runOnFunction(Function &F) {$/;"	f	class:RGPassManager
runOnFunction	Analysis/ScalarEvolution.cpp	/^bool ScalarEvolution::runOnFunction(Function &F) {$/;"	f	class:ScalarEvolution
runOnFunction	Analysis/ScalarEvolutionAliasAnalysis.cpp	/^ScalarEvolutionAliasAnalysis::runOnFunction(Function &F) {$/;"	f	class:ScalarEvolutionAliasAnalysis
runOnFunction	CodeGen/DwarfEHPrepare.cpp	/^bool DwarfEHPrepare::runOnFunction(Function &Fn) {$/;"	f	class:DwarfEHPrepare
runOnFunction	CodeGen/GCMetadata.cpp	/^bool Deleter::runOnFunction(Function &MF) {$/;"	f	class:Deleter
runOnFunction	CodeGen/GCMetadata.cpp	/^bool Printer::runOnFunction(Function &F) {$/;"	f	class:Printer
runOnFunction	CodeGen/GCStrategy.cpp	/^bool LowerIntrinsics::runOnFunction(Function &F) {$/;"	f	class:LowerIntrinsics
runOnFunction	CodeGen/MachineFunctionAnalysis.cpp	/^bool MachineFunctionAnalysis::runOnFunction(Function &F) {$/;"	f	class:MachineFunctionAnalysis
runOnFunction	CodeGen/MachineFunctionPass.cpp	/^bool MachineFunctionPass::runOnFunction(Function &F) {$/;"	f	class:MachineFunctionPass
runOnFunction	CodeGen/SjLjEHPrepare.cpp	/^bool SjLjEHPrepare::runOnFunction(Function &F) {$/;"	f	class:SjLjEHPrepare
runOnFunction	CodeGen/StackProtector.cpp	/^bool StackProtector::runOnFunction(Function &Fn) {$/;"	f	class:StackProtector
runOnFunction	CodeGen/UnreachableBlockElim.cpp	/^bool UnreachableBlockElim::runOnFunction(Function &F) {$/;"	f	class:UnreachableBlockElim
runOnFunction	Target/Hexagon/HexagonRemoveSZExtArgs.cpp	/^bool HexagonRemoveExtendArgs::runOnFunction(Function &F) {$/;"	f	class:HexagonRemoveExtendArgs
runOnFunction	Target/NVPTX/NVPTXAllocaHoisting.cpp	/^bool NVPTXAllocaHoisting::runOnFunction(Function &function) {$/;"	f	class:llvm::NVPTXAllocaHoisting
runOnFunction	Target/NVPTX/NVPTXLowerAggrCopies.cpp	/^bool NVPTXLowerAggrCopies::runOnFunction(Function &F) {$/;"	f	class:NVPTXLowerAggrCopies
runOnFunction	Target/NVPTX/NVPTXSplitBBatBar.cpp	/^bool NVPTXSplitBBatBar::runOnFunction(Function &F) {$/;"	f	class:NVPTXSplitBBatBar
runOnFunction	Transforms/DDA/DDProfiling.cpp	/^    virtual bool runOnFunction( Function &F ){$/;"	f	class:__anon606::DDInstrument
runOnFunction	Transforms/Hello/Hello.cpp	/^    virtual bool runOnFunction(Function &F) {$/;"	f	struct:__anon484::Hello
runOnFunction	Transforms/Hello/Hello.cpp	/^    virtual bool runOnFunction(Function &F) {$/;"	f	struct:__anon485::Hello2
runOnFunction	Transforms/InstCombine/InstructionCombining.cpp	/^bool InstCombiner::runOnFunction(Function &F) {$/;"	f	class:InstCombiner
runOnFunction	Transforms/Instrumentation/AddressSanitizer.cpp	/^bool AddressSanitizer::runOnFunction(Function &F) {$/;"	f	class:AddressSanitizer
runOnFunction	Transforms/Instrumentation/BoundsChecking.cpp	/^bool BoundsChecking::runOnFunction(Function &F) {$/;"	f	class:BoundsChecking
runOnFunction	Transforms/Instrumentation/PathProfiling.cpp	/^void PathProfiler::runOnFunction(std::vector<Constant*> &ftInit,$/;"	f	class:PathProfiler
runOnFunction	Transforms/Instrumentation/ThreadSanitizer.cpp	/^bool ThreadSanitizer::runOnFunction(Function &F) {$/;"	f	class:ThreadSanitizer
runOnFunction	Transforms/Scalar/ADCE.cpp	/^bool ADCE::runOnFunction(Function& F) {$/;"	f	class:ADCE
runOnFunction	Transforms/Scalar/BasicBlockPlacement.cpp	/^bool BlockPlacement::runOnFunction(Function &F) {$/;"	f	class:BlockPlacement
runOnFunction	Transforms/Scalar/CodeGenPrepare.cpp	/^bool CodeGenPrepare::runOnFunction(Function &F) {$/;"	f	class:CodeGenPrepare
runOnFunction	Transforms/Scalar/ConstantProp.cpp	/^bool ConstantPropagation::runOnFunction(Function &F) {$/;"	f	class:ConstantPropagation
runOnFunction	Transforms/Scalar/CorrelatedValuePropagation.cpp	/^bool CorrelatedValuePropagation::runOnFunction(Function &F) {$/;"	f	class:CorrelatedValuePropagation
runOnFunction	Transforms/Scalar/DCE.cpp	/^bool DCE::runOnFunction(Function &F) {$/;"	f	class:DCE
runOnFunction	Transforms/Scalar/DeadStoreElimination.cpp	/^    virtual bool runOnFunction(Function &F) {$/;"	f	struct:__anon552::DSE
runOnFunction	Transforms/Scalar/EarlyCSE.cpp	/^bool EarlyCSE::runOnFunction(Function &F) {$/;"	f	class:EarlyCSE
runOnFunction	Transforms/Scalar/GVN.cpp	/^bool GVN::runOnFunction(Function& F) {$/;"	f	class:GVN
runOnFunction	Transforms/Scalar/GlobalMerge.cpp	/^bool GlobalMerge::runOnFunction(Function &F) {$/;"	f	class:GlobalMerge
runOnFunction	Transforms/Scalar/JumpThreading.cpp	/^bool JumpThreading::runOnFunction(Function &F) {$/;"	f	class:JumpThreading
runOnFunction	Transforms/Scalar/MemCpyOptimizer.cpp	/^bool MemCpyOpt::runOnFunction(Function &F) {$/;"	f	class:MemCpyOpt
runOnFunction	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCContract::runOnFunction(Function &F) {$/;"	f	class:ObjCARCContract
runOnFunction	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCExpand::runOnFunction(Function &F) {$/;"	f	class:ObjCARCExpand
runOnFunction	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCOpt::runOnFunction(Function &F) {$/;"	f	class:ObjCARCOpt
runOnFunction	Transforms/Scalar/Reassociate.cpp	/^bool Reassociate::runOnFunction(Function &F) {$/;"	f	class:Reassociate
runOnFunction	Transforms/Scalar/Reg2Mem.cpp	/^bool RegToMem::runOnFunction(Function &F) {$/;"	f	class:RegToMem
runOnFunction	Transforms/Scalar/SCCP.cpp	/^bool SCCP::runOnFunction(Function &F) {$/;"	f	class:SCCP
runOnFunction	Transforms/Scalar/SROA.cpp	/^bool SROA::runOnFunction(Function &F) {$/;"	f	class:SROA
runOnFunction	Transforms/Scalar/ScalarReplAggregates.cpp	/^bool SROA::runOnFunction(Function &F) {$/;"	f	class:SROA
runOnFunction	Transforms/Scalar/SimplifyCFGPass.cpp	/^bool CFGSimplifyPass::runOnFunction(Function &F) {$/;"	f	class:CFGSimplifyPass
runOnFunction	Transforms/Scalar/SimplifyLibCalls.cpp	/^bool SimplifyLibCalls::runOnFunction(Function &F) {$/;"	f	class:SimplifyLibCalls
runOnFunction	Transforms/Scalar/Sink.cpp	/^bool Sinking::runOnFunction(Function &F) {$/;"	f	class:Sinking
runOnFunction	Transforms/Scalar/TailRecursionElimination.cpp	/^bool TailCallElim::runOnFunction(Function &F) {$/;"	f	class:TailCallElim
runOnFunction	Transforms/Utils/BreakCriticalEdges.cpp	/^bool BreakCriticalEdges::runOnFunction(Function &F) {$/;"	f	class:BreakCriticalEdges
runOnFunction	Transforms/Utils/InstructionNamer.cpp	/^    bool runOnFunction(Function &F) {$/;"	f	struct:__anon464::InstNamer
runOnFunction	Transforms/Utils/LowerExpectIntrinsic.cpp	/^bool LowerExpectIntrinsic::runOnFunction(Function &F) {$/;"	f	class:LowerExpectIntrinsic
runOnFunction	Transforms/Utils/LowerInvoke.cpp	/^bool LowerInvoke::runOnFunction(Function &F) {$/;"	f	class:LowerInvoke
runOnFunction	Transforms/Utils/LowerSwitch.cpp	/^bool LowerSwitch::runOnFunction(Function &F) {$/;"	f	class:LowerSwitch
runOnFunction	Transforms/Utils/Mem2Reg.cpp	/^bool PromotePass::runOnFunction(Function &F) {$/;"	f	class:PromotePass
runOnFunction	Transforms/Utils/MetaRenamer.cpp	/^    bool runOnFunction(Function &F) {$/;"	f	struct:__anon472::MetaRenamer
runOnFunction	Transforms/Utils/SimplifyInstructions.cpp	/^    bool runOnFunction(Function &F) {$/;"	f	struct:__anon467::InstSimplifier
runOnFunction	Transforms/Utils/UnifyFunctionExitNodes.cpp	/^bool UnifyFunctionExitNodes::runOnFunction(Function &F) {$/;"	f	class:UnifyFunctionExitNodes
runOnFunction	VMCore/Dominators.cpp	/^bool DominatorTree::runOnFunction(Function &F) {$/;"	f	class:DominatorTree
runOnFunction	VMCore/PassManager.cpp	/^bool BBPassManager::runOnFunction(Function &F) {$/;"	f	class:BBPassManager
runOnFunction	VMCore/PassManager.cpp	/^bool FPPassManager::runOnFunction(Function &F) {$/;"	f	class:FPPassManager
runOnFunction	VMCore/PrintModulePass.cpp	/^    bool runOnFunction(Function &F) {$/;"	f	class:__anon619::PrintFunctionPass
runOnFunction	VMCore/Verifier.cpp	/^    bool runOnFunction(Function &F) {$/;"	f	struct:__anon609::PreVerifier
runOnFunction	VMCore/Verifier.cpp	/^    bool runOnFunction(Function &F) {$/;"	f	struct:__anon610::Verifier
runOnLoop	Analysis/IVUsers.cpp	/^bool IVUsers::runOnLoop(Loop *l, LPPassManager &LPM) {$/;"	f	class:IVUsers
runOnLoop	Analysis/LoopDependenceAnalysis.cpp	/^bool LoopDependenceAnalysis::runOnLoop(Loop *L, LPPassManager &) {$/;"	f	class:LoopDependenceAnalysis
runOnLoop	Analysis/LoopPass.cpp	/^  bool runOnLoop(Loop *L, LPPassManager &) {$/;"	f	class:__anon45::PrintLoopPass
runOnLoop	Transforms/IPO/LoopExtractor.cpp	/^bool LoopExtractor::runOnLoop(Loop *L, LPPassManager &LPM) {$/;"	f	class:LoopExtractor
runOnLoop	Transforms/Scalar/IndVarSimplify.cpp	/^bool IndVarSimplify::runOnLoop(Loop *L, LPPassManager &LPM) {$/;"	f	class:IndVarSimplify
runOnLoop	Transforms/Scalar/LICM.cpp	/^bool LICM::runOnLoop(Loop *L, LPPassManager &LPM) {$/;"	f	class:LICM
runOnLoop	Transforms/Scalar/LoopDeletion.cpp	/^bool LoopDeletion::runOnLoop(Loop* L, LPPassManager& LPM) {$/;"	f	class:LoopDeletion
runOnLoop	Transforms/Scalar/LoopIdiomRecognize.cpp	/^bool LoopIdiomRecognize::runOnLoop(Loop *L, LPPassManager &LPM) {$/;"	f	class:LoopIdiomRecognize
runOnLoop	Transforms/Scalar/LoopInstSimplify.cpp	/^bool LoopInstSimplify::runOnLoop(Loop *L, LPPassManager &LPM) {$/;"	f	class:LoopInstSimplify
runOnLoop	Transforms/Scalar/LoopRotation.cpp	/^bool LoopRotate::runOnLoop(Loop *L, LPPassManager &LPM) {$/;"	f	class:LoopRotate
runOnLoop	Transforms/Scalar/LoopStrengthReduce.cpp	/^bool LoopStrengthReduce::runOnLoop(Loop *L, LPPassManager & \/*LPM*\/) {$/;"	f	class:LoopStrengthReduce
runOnLoop	Transforms/Scalar/LoopUnrollPass.cpp	/^bool LoopUnroll::runOnLoop(Loop *L, LPPassManager &LPM) {$/;"	f	class:LoopUnroll
runOnLoop	Transforms/Scalar/LoopUnswitch.cpp	/^bool LoopUnswitch::runOnLoop(Loop *L, LPPassManager &LPM_Ref) {$/;"	f	class:LoopUnswitch
runOnLoop	Transforms/Utils/LCSSA.cpp	/^bool LCSSA::runOnLoop(Loop *TheLoop, LPPassManager &LPM) {$/;"	f	class:LCSSA
runOnLoop	Transforms/Utils/LoopSimplify.cpp	/^bool LoopSimplify::runOnLoop(Loop *l, LPPassManager &LPM) {$/;"	f	class:LoopSimplify
runOnLoop	Transforms/Vectorize/LoopVectorize.cpp	/^  virtual bool runOnLoop(Loop *L, LPPassManager &LPM) {$/;"	f	struct:__anon605::LoopVectorize
runOnLoopBlock	Transforms/Scalar/LoopIdiomRecognize.cpp	/^bool LoopIdiomRecognize::runOnLoopBlock(BasicBlock *BB, const SCEV *BECount,$/;"	f	class:LoopIdiomRecognize
runOnMachineBasicBlock	Target/CellSPU/SPUNopFiller.cpp	/^runOnMachineBasicBlock(MachineBasicBlock &MBB) $/;"	f	class:SPUNopFiller
runOnMachineBasicBlock	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^bool Filler::runOnMachineBasicBlock(MachineBasicBlock &MBB) {$/;"	f	class:Filler
runOnMachineBasicBlock	Target/Mips/MipsDelaySlotFiller.cpp	/^runOnMachineBasicBlock(MachineBasicBlock &MBB) {$/;"	f	class:Filler
runOnMachineBasicBlock	Target/Sparc/DelaySlotFiller.cpp	/^bool Filler::runOnMachineBasicBlock(MachineBasicBlock &MBB) {$/;"	f	class:Filler
runOnMachineBasicBlock	Target/Sparc/FPMover.cpp	/^bool FPMover::runOnMachineBasicBlock(MachineBasicBlock &MBB) {$/;"	f	class:FPMover
runOnMachineFunction	CodeGen/BranchFolding.cpp	/^bool BranchFolderPass::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:BranchFolderPass
runOnMachineFunction	CodeGen/CalcSpillWeights.cpp	/^bool CalculateSpillWeights::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:CalculateSpillWeights
runOnMachineFunction	CodeGen/CodePlacementOpt.cpp	/^bool CodePlacementOpt::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:CodePlacementOpt
runOnMachineFunction	CodeGen/DeadMachineInstructionElim.cpp	/^bool DeadMachineInstructionElim::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:DeadMachineInstructionElim
runOnMachineFunction	CodeGen/EarlyIfConversion.cpp	/^  void runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:__anon91::SSAIfConv
runOnMachineFunction	CodeGen/EarlyIfConversion.cpp	/^bool EarlyIfConverter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:EarlyIfConverter
runOnMachineFunction	CodeGen/EdgeBundles.cpp	/^bool EdgeBundles::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:EdgeBundles
runOnMachineFunction	CodeGen/ExecutionDepsFix.cpp	/^bool ExeDepsFix::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:ExeDepsFix
runOnMachineFunction	CodeGen/ExpandISelPseudos.cpp	/^bool ExpandISelPseudos::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:ExpandISelPseudos
runOnMachineFunction	CodeGen/ExpandPostRAPseudos.cpp	/^bool ExpandPostRA::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:ExpandPostRA
runOnMachineFunction	CodeGen/GCStrategy.cpp	/^bool GCMachineCodeAnalysis::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:GCMachineCodeAnalysis
runOnMachineFunction	CodeGen/IfConversion.cpp	/^bool IfConverter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:IfConverter
runOnMachineFunction	CodeGen/LiveDebugVariables.cpp	/^bool LDVImpl::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:LDVImpl
runOnMachineFunction	CodeGen/LiveDebugVariables.cpp	/^bool LiveDebugVariables::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:LiveDebugVariables
runOnMachineFunction	CodeGen/LiveIntervalAnalysis.cpp	/^bool LiveIntervals::runOnMachineFunction(MachineFunction &fn) {$/;"	f	class:LiveIntervals
runOnMachineFunction	CodeGen/LiveRegMatrix.cpp	/^bool LiveRegMatrix::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:LiveRegMatrix
runOnMachineFunction	CodeGen/LiveStackAnalysis.cpp	/^bool LiveStacks::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:LiveStacks
runOnMachineFunction	CodeGen/LiveVariables.cpp	/^bool LiveVariables::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:LiveVariables
runOnMachineFunction	CodeGen/LocalStackSlotAllocation.cpp	/^bool LocalStackSlotPass::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:LocalStackSlotPass
runOnMachineFunction	CodeGen/MachineBlockFrequencyInfo.cpp	/^bool MachineBlockFrequencyInfo::runOnMachineFunction(MachineFunction &F) {$/;"	f	class:MachineBlockFrequencyInfo
runOnMachineFunction	CodeGen/MachineBlockPlacement.cpp	/^bool MachineBlockPlacement::runOnMachineFunction(MachineFunction &F) {$/;"	f	class:MachineBlockPlacement
runOnMachineFunction	CodeGen/MachineBlockPlacement.cpp	/^bool MachineBlockPlacementStats::runOnMachineFunction(MachineFunction &F) {$/;"	f	class:MachineBlockPlacementStats
runOnMachineFunction	CodeGen/MachineCSE.cpp	/^bool MachineCSE::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:MachineCSE
runOnMachineFunction	CodeGen/MachineCopyPropagation.cpp	/^bool MachineCopyPropagation::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:MachineCopyPropagation
runOnMachineFunction	CodeGen/MachineDominators.cpp	/^bool MachineDominatorTree::runOnMachineFunction(MachineFunction &F) {$/;"	f	class:MachineDominatorTree
runOnMachineFunction	CodeGen/MachineFunctionPrinterPass.cpp	/^  bool runOnMachineFunction(MachineFunction &MF) {$/;"	f	struct:__anon96::MachineFunctionPrinterPass
runOnMachineFunction	CodeGen/MachineInstrBundle.cpp	/^bool FinalizeMachineBundles::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:FinalizeMachineBundles
runOnMachineFunction	CodeGen/MachineInstrBundle.cpp	/^bool UnpackMachineBundles::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:UnpackMachineBundles
runOnMachineFunction	CodeGen/MachineLICM.cpp	/^bool MachineLICM::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:MachineLICM
runOnMachineFunction	CodeGen/MachineLoopInfo.cpp	/^bool MachineLoopInfo::runOnMachineFunction(MachineFunction &) {$/;"	f	class:MachineLoopInfo
runOnMachineFunction	CodeGen/MachineLoopRanges.cpp	/^bool MachineLoopRanges::runOnMachineFunction(MachineFunction &) {$/;"	f	class:MachineLoopRanges
runOnMachineFunction	CodeGen/MachinePostDominators.cpp	/^MachinePostDominatorTree::runOnMachineFunction(MachineFunction &F) {$/;"	f	class:MachinePostDominatorTree
runOnMachineFunction	CodeGen/MachineScheduler.cpp	/^bool MachineScheduler::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:MachineScheduler
runOnMachineFunction	CodeGen/MachineSink.cpp	/^bool MachineSinking::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:MachineSinking
runOnMachineFunction	CodeGen/MachineTraceMetrics.cpp	/^bool MachineTraceMetrics::runOnMachineFunction(MachineFunction &Func) {$/;"	f	class:MachineTraceMetrics
runOnMachineFunction	CodeGen/MachineVerifier.cpp	/^    bool runOnMachineFunction(MachineFunction &MF) {$/;"	f	struct:__anon139::MachineVerifierPass
runOnMachineFunction	CodeGen/MachineVerifier.cpp	/^bool MachineVerifier::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:MachineVerifier
runOnMachineFunction	CodeGen/OptimizePHIs.cpp	/^bool OptimizePHIs::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:OptimizePHIs
runOnMachineFunction	CodeGen/PHIElimination.cpp	/^bool PHIElimination::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:PHIElimination
runOnMachineFunction	CodeGen/PeepholeOptimizer.cpp	/^bool PeepholeOptimizer::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:PeepholeOptimizer
runOnMachineFunction	CodeGen/PostRASchedulerList.cpp	/^bool PostRAScheduler::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:PostRAScheduler
runOnMachineFunction	CodeGen/ProcessImplicitDefs.cpp	/^bool ProcessImplicitDefs::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:ProcessImplicitDefs
runOnMachineFunction	CodeGen/PrologEpilogInserter.cpp	/^bool PEI::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:PEI
runOnMachineFunction	CodeGen/RegAllocBasic.cpp	/^bool RABasic::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:RABasic
runOnMachineFunction	CodeGen/RegAllocFast.cpp	/^bool RAFast::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:RAFast
runOnMachineFunction	CodeGen/RegAllocGreedy.cpp	/^bool RAGreedy::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:RAGreedy
runOnMachineFunction	CodeGen/RegAllocPBQP.cpp	/^bool RegAllocPBQP::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:RegAllocPBQP
runOnMachineFunction	CodeGen/RegisterClassInfo.cpp	/^void RegisterClassInfo::runOnMachineFunction(const MachineFunction &mf) {$/;"	f	class:RegisterClassInfo
runOnMachineFunction	CodeGen/RegisterCoalescer.cpp	/^bool RegisterCoalescer::runOnMachineFunction(MachineFunction &fn) {$/;"	f	class:RegisterCoalescer
runOnMachineFunction	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^bool SelectionDAGISel::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:SelectionDAGISel
runOnMachineFunction	CodeGen/SlotIndexes.cpp	/^bool SlotIndexes::runOnMachineFunction(MachineFunction &fn) {$/;"	f	class:SlotIndexes
runOnMachineFunction	CodeGen/SpillPlacement.cpp	/^bool SpillPlacement::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:SpillPlacement
runOnMachineFunction	CodeGen/StackColoring.cpp	/^bool StackColoring::runOnMachineFunction(MachineFunction &Func) {$/;"	f	class:StackColoring
runOnMachineFunction	CodeGen/StackSlotColoring.cpp	/^bool StackSlotColoring::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:StackSlotColoring
runOnMachineFunction	CodeGen/StrongPHIElimination.cpp	/^bool StrongPHIElimination::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:StrongPHIElimination
runOnMachineFunction	CodeGen/TailDuplication.cpp	/^bool TailDuplicatePass::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:TailDuplicatePass
runOnMachineFunction	CodeGen/TwoAddressInstructionPass.cpp	/^bool TwoAddressInstructionPass::runOnMachineFunction(MachineFunction &Func) {$/;"	f	class:TwoAddressInstructionPass
runOnMachineFunction	CodeGen/UnreachableBlockElim.cpp	/^bool UnreachableMachineBlockElim::runOnMachineFunction(MachineFunction &F) {$/;"	f	class:UnreachableMachineBlockElim
runOnMachineFunction	CodeGen/VirtRegMap.cpp	/^bool VirtRegMap::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:VirtRegMap
runOnMachineFunction	CodeGen/VirtRegMap.cpp	/^bool VirtRegRewriter::runOnMachineFunction(MachineFunction &fn) {$/;"	f	class:VirtRegRewriter
runOnMachineFunction	Target/ARM/ARMAsmPrinter.cpp	/^bool ARMAsmPrinter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:ARMAsmPrinter
runOnMachineFunction	Target/ARM/ARMCodeEmitter.cpp	/^bool ARMCodeEmitter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:ARMCodeEmitter
runOnMachineFunction	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::runOnMachineFunction(MachineFunction &mf) {$/;"	f	class:ARMConstantIslands
runOnMachineFunction	Target/ARM/ARMExpandPseudoInsts.cpp	/^bool ARMExpandPseudo::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:ARMExpandPseudo
runOnMachineFunction	Target/ARM/ARMInstrInfo.cpp	/^    virtual bool runOnMachineFunction(MachineFunction &MF) {$/;"	f	struct:__anon292::ARMCGBR
runOnMachineFunction	Target/ARM/ARMLoadStoreOptimizer.cpp	/^bool ARMLoadStoreOpt::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:ARMLoadStoreOpt
runOnMachineFunction	Target/ARM/ARMLoadStoreOptimizer.cpp	/^bool ARMPreAllocLoadStoreOpt::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:ARMPreAllocLoadStoreOpt
runOnMachineFunction	Target/ARM/MLxExpansionPass.cpp	/^bool MLxExpansion::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:MLxExpansion
runOnMachineFunction	Target/ARM/Thumb2ITBlockPass.cpp	/^bool Thumb2ITBlockPass::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:Thumb2ITBlockPass
runOnMachineFunction	Target/ARM/Thumb2SizeReduction.cpp	/^bool Thumb2SizeReduce::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:Thumb2SizeReduce
runOnMachineFunction	Target/CellSPU/SPUISelDAGToDAG.cpp	/^    virtual bool runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:__anon414::SPUDAGToDAGISel
runOnMachineFunction	Target/CellSPU/SPUNopFiller.cpp	/^    bool runOnMachineFunction(MachineFunction &F) {$/;"	f	struct:__anon417::SPUNopFiller
runOnMachineFunction	Target/Hexagon/HexagonCFGOptimizer.cpp	/^bool HexagonCFGOptimizer::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:__anon402::HexagonCFGOptimizer
runOnMachineFunction	Target/Hexagon/HexagonExpandPredSpillCode.cpp	/^bool HexagonExpandPredSpillCode::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:__anon401::HexagonExpandPredSpillCode
runOnMachineFunction	Target/Hexagon/HexagonHardwareLoops.cpp	/^bool HexagonFixupHwLoops::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:HexagonFixupHwLoops
runOnMachineFunction	Target/Hexagon/HexagonHardwareLoops.cpp	/^bool HexagonHardwareLoops::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:HexagonHardwareLoops
runOnMachineFunction	Target/Hexagon/HexagonNewValueJump.cpp	/^bool HexagonNewValueJump::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:HexagonNewValueJump
runOnMachineFunction	Target/Hexagon/HexagonPeephole.cpp	/^bool HexagonPeephole::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:HexagonPeephole
runOnMachineFunction	Target/Hexagon/HexagonSplitTFRCondSets.cpp	/^bool HexagonSplitTFRCondSets::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:__anon407::HexagonSplitTFRCondSets
runOnMachineFunction	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizer::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:HexagonPacketizer
runOnMachineFunction	Target/MBlaze/MBlazeDelaySlotFiller.cpp	/^    bool runOnMachineFunction(MachineFunction &F) {$/;"	f	struct:__anon462::Filler
runOnMachineFunction	Target/MSP430/MSP430BranchSelector.cpp	/^bool MSP430BSel::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:MSP430BSel
runOnMachineFunction	Target/Mips/MipsAsmPrinter.cpp	/^bool MipsAsmPrinter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:MipsAsmPrinter
runOnMachineFunction	Target/Mips/MipsCodeEmitter.cpp	/^bool MipsCodeEmitter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:MipsCodeEmitter
runOnMachineFunction	Target/Mips/MipsDelaySlotFiller.cpp	/^    bool runOnMachineFunction(MachineFunction &F) {$/;"	f	struct:__anon436::Filler
runOnMachineFunction	Target/Mips/MipsISelDAGToDAG.cpp	/^bool MipsDAGToDAGISel::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:MipsDAGToDAGISel
runOnMachineFunction	Target/Mips/MipsLongBranch.cpp	/^bool MipsLongBranch::runOnMachineFunction(MachineFunction &F) {$/;"	f	class:MipsLongBranch
runOnMachineFunction	Target/NVPTX/VectorElementize.cpp	/^bool VectorElementize::runOnMachineFunction(MachineFunction &F) {$/;"	f	class:VectorElementize
runOnMachineFunction	Target/PowerPC/PPCBranchSelector.cpp	/^bool PPCBSel::runOnMachineFunction(MachineFunction &Fn) {$/;"	f	class:PPCBSel
runOnMachineFunction	Target/PowerPC/PPCCTRLoops.cpp	/^bool PPCCTRLoops::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:PPCCTRLoops
runOnMachineFunction	Target/PowerPC/PPCCodeEmitter.cpp	/^bool PPCCodeEmitter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:PPCCodeEmitter
runOnMachineFunction	Target/PowerPC/PPCISelDAGToDAG.cpp	/^    virtual bool runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:__anon331::PPCDAGToDAGISel
runOnMachineFunction	Target/Sparc/DelaySlotFiller.cpp	/^    bool runOnMachineFunction(MachineFunction &F) {$/;"	f	struct:__anon439::Filler
runOnMachineFunction	Target/Sparc/FPMover.cpp	/^bool FPMover::runOnMachineFunction(MachineFunction &F) {$/;"	f	class:FPMover
runOnMachineFunction	Target/X86/X86AsmPrinter.cpp	/^bool X86AsmPrinter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:X86AsmPrinter
runOnMachineFunction	Target/X86/X86CodeEmitter.cpp	/^bool Emitter<CodeEmitter>::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:Emitter
runOnMachineFunction	Target/X86/X86FloatingPoint.cpp	/^bool FPS::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:FPS
runOnMachineFunction	Target/X86/X86InstrInfo.cpp	/^    virtual bool runOnMachineFunction(MachineFunction &MF) {$/;"	f	struct:__anon375::CGBR
runOnMachineFunction	Target/X86/X86InstrInfo.cpp	/^    virtual bool runOnMachineFunction(MachineFunction &MF) {$/;"	f	struct:__anon376::LDTLSCleanup
runOnMachineFunction	Target/X86/X86RegisterInfo.cpp	/^    virtual bool runOnMachineFunction(MachineFunction &MF) {$/;"	f	struct:__anon378::MSAH
runOnMachineFunction	Target/X86/X86VZeroUpper.cpp	/^bool VZeroUpperInserter::runOnMachineFunction(MachineFunction &MF) {$/;"	f	class:VZeroUpperInserter
runOnModule	Analysis/AliasAnalysisCounter.cpp	/^    bool runOnModule(Module &M) {$/;"	f	class:__anon43::AliasAnalysisCounter
runOnModule	Analysis/AliasDebugger.cpp	/^    bool runOnModule(Module &M) {$/;"	f	class:__anon44::AliasDebugger
runOnModule	Analysis/IPA/CallGraph.cpp	/^  virtual bool runOnModule(Module &M) {$/;"	f	class:__anon2::BasicCallGraph
runOnModule	Analysis/IPA/CallGraphSCCPass.cpp	/^bool CGPassManager::runOnModule(Module &M) {$/;"	f	class:CGPassManager
runOnModule	Analysis/IPA/FindUsedTypes.cpp	/^bool FindUsedTypes::runOnModule(Module &m) {$/;"	f	class:FindUsedTypes
runOnModule	Analysis/IPA/GlobalsModRef.cpp	/^    bool runOnModule(Module &M) {$/;"	f	class:__anon1::GlobalsModRef
runOnModule	Analysis/ModuleDebugInfoPrinter.cpp	/^bool ModuleDebugInfoPrinter::runOnModule(Module &M) {$/;"	f	class:ModuleDebugInfoPrinter
runOnModule	Analysis/PathProfileInfo.cpp	/^bool PathProfileLoaderPass::runOnModule(Module &M) {$/;"	f	class:PathProfileLoaderPass
runOnModule	Analysis/PathProfileVerifier.cpp	/^bool PathProfileVerifier::runOnModule (Module &M) {$/;"	f	class:PathProfileVerifier
runOnModule	Analysis/ProfileDataLoaderPass.cpp	/^bool ProfileMetadataLoaderPass::runOnModule(Module &M) {$/;"	f	class:ProfileMetadataLoaderPass
runOnModule	Analysis/ProfileInfoLoaderPass.cpp	/^bool LoaderPass::runOnModule(Module &M) {$/;"	f	class:LoaderPass
runOnModule	Bitcode/Writer/BitcodeWriterPass.cpp	/^    bool runOnModule(Module &M) {$/;"	f	class:__anon59::WriteBitcodePass
runOnModule	Target/CppBackend/CPPBackend.cpp	/^bool CppWriter::runOnModule(Module &M) {$/;"	f	class:CppWriter
runOnModule	Transforms/IPO/BarrierNoopPass.cpp	/^  bool runOnModule(Module &M) { return false; }$/;"	f	class:__anon585::BarrierNoop
runOnModule	Transforms/IPO/ConstantMerge.cpp	/^bool ConstantMerge::runOnModule(Module &M) {$/;"	f	class:ConstantMerge
runOnModule	Transforms/IPO/DeadArgumentElimination.cpp	/^bool DAE::runOnModule(Module &M) {$/;"	f	class:DAE
runOnModule	Transforms/IPO/ExtractGV.cpp	/^    bool runOnModule(Module &M) {$/;"	f	class:__anon584::GVExtractorPass
runOnModule	Transforms/IPO/GlobalDCE.cpp	/^bool GlobalDCE::runOnModule(Module &M) {$/;"	f	class:GlobalDCE
runOnModule	Transforms/IPO/GlobalOpt.cpp	/^bool GlobalOpt::runOnModule(Module &M) {$/;"	f	class:GlobalOpt
runOnModule	Transforms/IPO/IPConstantPropagation.cpp	/^bool IPCP::runOnModule(Module &M) {$/;"	f	class:IPCP
runOnModule	Transforms/IPO/Internalize.cpp	/^bool InternalizePass::runOnModule(Module &M) {$/;"	f	class:InternalizePass
runOnModule	Transforms/IPO/LoopExtractor.cpp	/^bool BlockExtractorPass::runOnModule(Module &M) {$/;"	f	class:BlockExtractorPass
runOnModule	Transforms/IPO/MergeFunctions.cpp	/^bool MergeFunctions::runOnModule(Module &M) {$/;"	f	class:MergeFunctions
runOnModule	Transforms/IPO/PartialInlining.cpp	/^bool PartialInliner::runOnModule(Module& M) {$/;"	f	class:PartialInliner
runOnModule	Transforms/IPO/StripDeadPrototypes.cpp	/^bool StripDeadPrototypesPass::runOnModule(Module &M) {$/;"	f	class:StripDeadPrototypesPass
runOnModule	Transforms/IPO/StripSymbols.cpp	/^bool StripDeadDebugInfo::runOnModule(Module &M) {$/;"	f	class:StripDeadDebugInfo
runOnModule	Transforms/IPO/StripSymbols.cpp	/^bool StripDebugDeclare::runOnModule(Module &M) {$/;"	f	class:StripDebugDeclare
runOnModule	Transforms/IPO/StripSymbols.cpp	/^bool StripNonDebugSymbols::runOnModule(Module &M) {$/;"	f	class:StripNonDebugSymbols
runOnModule	Transforms/IPO/StripSymbols.cpp	/^bool StripSymbols::runOnModule(Module &M) {$/;"	f	class:StripSymbols
runOnModule	Transforms/Instrumentation/EdgeProfiling.cpp	/^bool EdgeProfiler::runOnModule(Module &M) {$/;"	f	class:EdgeProfiler
runOnModule	Transforms/Instrumentation/GCOVProfiling.cpp	/^bool GCOVProfiler::runOnModule(Module &M) {$/;"	f	class:GCOVProfiler
runOnModule	Transforms/Instrumentation/OptimalEdgeProfiling.cpp	/^bool OptimalEdgeProfiler::runOnModule(Module &M) {$/;"	f	class:OptimalEdgeProfiler
runOnModule	Transforms/Instrumentation/PathProfiling.cpp	/^bool PathProfiler::runOnModule(Module &M) {$/;"	f	class:PathProfiler
runOnModule	Transforms/Scalar/ObjCARC.cpp	/^bool ObjCARCAPElim::runOnModule(Module &M) {$/;"	f	class:ObjCARCAPElim
runOnModule	Transforms/Scalar/SCCP.cpp	/^bool IPSCCP::runOnModule(Module &M) {$/;"	f	class:IPSCCP
runOnModule	Transforms/Utils/MetaRenamer.cpp	/^    bool runOnModule(Module &M) {$/;"	f	struct:__anon472::MetaRenamer
runOnModule	VMCore/PassManager.cpp	/^MPPassManager::runOnModule(Module &M) {$/;"	f	class:MPPassManager
runOnModule	VMCore/PassManager.cpp	/^bool FPPassManager::runOnModule(Module &M) {$/;"	f	class:FPPassManager
runOnModule	VMCore/PrintModulePass.cpp	/^    bool runOnModule(Module &M) {$/;"	f	class:__anon619::PrintModulePass
runOnRegion	Analysis/RegionPass.cpp	/^  virtual bool runOnRegion(Region *R, RGPassManager &RGM) {$/;"	f	class:__anon8::PrintRegionPass
runOnSCC	Analysis/IPA/CallGraphSCCPass.cpp	/^    bool runOnSCC(CallGraphSCC &SCC) {$/;"	f	class:__anon4::PrintCallGraphPass
runOnSCC	Transforms/IPO/ArgumentPromotion.cpp	/^bool ArgPromotion::runOnSCC(CallGraphSCC &SCC) {$/;"	f	class:ArgPromotion
runOnSCC	Transforms/IPO/FunctionAttrs.cpp	/^bool FunctionAttrs::runOnSCC(CallGraphSCC &SCC) {$/;"	f	class:FunctionAttrs
runOnSCC	Transforms/IPO/Inliner.cpp	/^bool Inliner::runOnSCC(CallGraphSCC &SCC) {$/;"	f	class:Inliner
runOnSCC	Transforms/IPO/PruneEH.cpp	/^bool PruneEH::runOnSCC(CallGraphSCC &SCC) {$/;"	f	class:PruneEH
runStaticConstructorsDestructors	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::runStaticConstructorsDestructors(Module *module,$/;"	f	class:ExecutionEngine
runStaticConstructorsDestructors	ExecutionEngine/ExecutionEngine.cpp	/^void ExecutionEngine::runStaticConstructorsDestructors(bool isDtors) {$/;"	f	class:ExecutionEngine
s	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^    } s;$/;"	m	union:llvm::SDDbgValue::__anon89	typeref:struct:llvm::SDDbgValue::__anon89::__anon90
sCurrentExceptionHandle	Support/CrashRecoveryContext.cpp	/^static sys::ThreadLocal<const void> sCurrentExceptionHandle;$/;"	v	file:
sDisassemblers	MC/MCDisassembler/EDDisassembler.h	/^  static DisassemblerMap_t sDisassemblers;$/;"	m	struct:llvm::EDDisassembler
sadd_ov	Support/APInt.cpp	/^APInt APInt::sadd_ov(const APInt &RHS, bool &Overflow) const {$/;"	f	class:APInt
samesets	Support/regcomp.c	/^samesets(struct re_guts *g, int c1, int c2)$/;"	f	file:
sanitize	Target/CppBackend/CPPBackend.cpp	/^static inline void sanitize(std::string &str) {$/;"	f	file:
saveScavengerRegister	Target/ARM/Thumb1RegisterInfo.cpp	/^Thumb1RegisterInfo::saveScavengerRegister(MachineBasicBlock &MBB,$/;"	f	class:Thumb1RegisterInfo
saveSimpleKeyCandidate	Support/YAMLParser.cpp	/^void Scanner::saveSimpleKeyCandidate( TokenQueueT::iterator Tok$/;"	f	class:Scanner
scalarizeInstruction	Transforms/Vectorize/LoopVectorize.cpp	/^void SingleBlockLoopVectorizer::scalarizeInstruction(Instruction *Instr) {$/;"	f	class:__anon605::SingleBlockLoopVectorizer
scaleFromSIB	Target/X86/Disassembler/X86DisassemblerDecoder.h	40;"	d
scanActiveBundles	CodeGen/SpillPlacement.cpp	/^bool SpillPlacement::scanActiveBundles() {$/;"	f	class:SpillPlacement
scanAliasOrAnchor	Support/YAMLParser.cpp	/^bool Scanner::scanAliasOrAnchor(bool IsAlias) {$/;"	f	class:Scanner
scanBlockEntry	Support/YAMLParser.cpp	/^bool Scanner::scanBlockEntry() {$/;"	f	class:Scanner
scanBlockScalar	Support/YAMLParser.cpp	/^bool Scanner::scanBlockScalar(bool IsLiteral) {$/;"	f	class:Scanner
scanDirective	Support/YAMLParser.cpp	/^bool Scanner::scanDirective() {$/;"	f	class:Scanner
scanDocumentIndicator	Support/YAMLParser.cpp	/^bool Scanner::scanDocumentIndicator(bool IsStart) {$/;"	f	class:Scanner
scanFlowCollectionEnd	Support/YAMLParser.cpp	/^bool Scanner::scanFlowCollectionEnd(bool IsSequence) {$/;"	f	class:Scanner
scanFlowCollectionStart	Support/YAMLParser.cpp	/^bool Scanner::scanFlowCollectionStart(bool IsSequence) {$/;"	f	class:Scanner
scanFlowEntry	Support/YAMLParser.cpp	/^bool Scanner::scanFlowEntry() {$/;"	f	class:Scanner
scanFlowScalar	Support/YAMLParser.cpp	/^bool Scanner::scanFlowScalar(bool IsDoubleQuoted) {$/;"	f	class:Scanner
scanForRegions	Analysis/RegionInfo.cpp	/^void RegionInfo::scanForRegions(Function &F, BBtoBBMap *ShortCut) {$/;"	f	class:RegionInfo
scanFunctionJumpTables	Target/ARM/ARMConstantIslandPass.cpp	/^void ARMConstantIslands::scanFunctionJumpTables() {$/;"	f	class:ARMConstantIslands
scanKey	Support/YAMLParser.cpp	/^bool Scanner::scanKey() {$/;"	f	class:Scanner
scanPlainScalar	Support/YAMLParser.cpp	/^bool Scanner::scanPlainScalar() {$/;"	f	class:Scanner
scanRemattable	CodeGen/LiveRangeEdit.cpp	/^void LiveRangeEdit::scanRemattable(AliasAnalysis *aa) {$/;"	f	class:LiveRangeEdit
scanStreamEnd	Support/YAMLParser.cpp	/^bool Scanner::scanStreamEnd() {$/;"	f	class:Scanner
scanStreamStart	Support/YAMLParser.cpp	/^bool Scanner::scanStreamStart() {$/;"	f	class:Scanner
scanTag	Support/YAMLParser.cpp	/^bool Scanner::scanTag() {$/;"	f	class:Scanner
scanToNextToken	Support/YAMLParser.cpp	/^void Scanner::scanToNextToken() {$/;"	f	class:Scanner
scanTokens	Support/YAMLParser.cpp	/^bool yaml::scanTokens(StringRef Input) {$/;"	f	class:yaml
scanValue	Support/YAMLParser.cpp	/^bool Scanner::scanValue() {$/;"	f	class:Scanner
scan_ns_plain_one_line	Support/YAMLParser.cpp	/^StringRef Scanner::scan_ns_plain_one_line() {$/;"	f	class:Scanner
scan_ns_uri_char	Support/YAMLParser.cpp	/^StringRef Scanner::scan_ns_uri_char() {$/;"	f	class:Scanner
scavengeFrameVirtualRegs	CodeGen/PrologEpilogInserter.cpp	/^void PEI::scavengeFrameVirtualRegs(MachineFunction &Fn) {$/;"	f	class:PEI
scavengeRegister	CodeGen/RegisterScavenging.cpp	/^unsigned RegScavenger::scavengeRegister(const TargetRegisterClass *RC,$/;"	f	class:RegScavenger
schedNode	CodeGen/MachineScheduler.cpp	/^  virtual void schedNode(SUnit *, bool) {}$/;"	f	class:__anon128::ILPScheduler
schedNode	CodeGen/MachineScheduler.cpp	/^  virtual void schedNode(SUnit *SU, bool IsTopNode) {}$/;"	f	class:__anon129::InstructionShuffler
schedNode	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::schedNode(SUnit *SU, bool IsTopNode) {$/;"	f	class:ConvergingScheduler
schedNode	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::schedNode(SUnit *SU, bool IsTopNode) {$/;"	f	class:ConvergingVLIWScheduler
schedule	CodeGen/DFAPacketizer.cpp	/^void DefaultVLIWScheduler::schedule() {$/;"	f	class:DefaultVLIWScheduler
schedule	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::schedule() {$/;"	f	class:ScheduleDAGMI
schedule	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::schedule() {$/;"	f	class:SchedulePostRATDList
schedule	Target/Hexagon/HexagonMachineScheduler.cpp	/^void VLIWMachineScheduler::schedule() {$/;"	f	class:VLIWMachineScheduler
scheduleDAG	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  ScheduleDAGRRList *scheduleDAG;$/;"	m	class:__anon77::RegReductionPQBase	file:
scheduleMI	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::scheduleMI(SUnit *SU, bool IsTopNode) {$/;"	f	class:ScheduleDAGMI
scheduleNodeTopDown	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^void ScheduleDAGVLIW::scheduleNodeTopDown(SUnit *SU, unsigned CurCycle) {$/;"	f	class:ScheduleDAGVLIW
schedulePass	VMCore/PassManager.cpp	/^void PMTopLevelManager::schedulePass(Pass *P) {$/;"	f	class:PMTopLevelManager
scheduledNode	CodeGen/LatencyPriorityQueue.cpp	/^void LatencyPriorityQueue::scheduledNode(SUnit *SU) {$/;"	f	class:LatencyPriorityQueue
scheduledNode	CodeGen/SelectionDAG/ResourcePriorityQueue.cpp	/^void ResourcePriorityQueue::scheduledNode(SUnit *SU) {$/;"	f	class:ResourcePriorityQueue
scheduledNode	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void RegReductionPQBase::scheduledNode(SUnit *SU) {$/;"	f	class:RegReductionPQBase
sdiv_ov	Support/APInt.cpp	/^APInt APInt::sdiv_ov(const APInt &RHS, bool &Overflow) const {$/;"	f	class:APInt
sectionContainsSymbol	Object/COFFObjectFile.cpp	/^error_code COFFObjectFile::sectionContainsSymbol(DataRefImpl Sec,$/;"	f	class:COFFObjectFile
sectionContainsSymbol	Object/MachOObjectFile.cpp	/^error_code MachOObjectFile::sectionContainsSymbol(DataRefImpl Sec,$/;"	f	class:llvm::object::MachOObjectFile
section_map	MC/WinCOFFObjectWriter.cpp	/^  typedef DenseMap<MCSection const *, COFFSection *> section_map;$/;"	t	class:__anon222::WinCOFFObjectWriter	file:
sections	MC/WinCOFFObjectWriter.cpp	/^  typedef std::vector<COFFSection*> sections;$/;"	t	class:__anon222::WinCOFFObjectWriter	file:
seedLiveRegs	CodeGen/RegAllocBase.cpp	/^void RegAllocBase::seedLiveRegs() {$/;"	f	class:RegAllocBase
seek	Support/raw_ostream.cpp	/^uint64_t raw_fd_ostream::seek(uint64_t off) {$/;"	f	class:raw_fd_ostream
seenAllInterferences	CodeGen/LiveIntervalUnion.h	/^    bool seenAllInterferences() const { return SeenAllInterferences; }$/;"	f	class:llvm::LiveIntervalUnion::Query
seenObjects	ExecutionEngine/JIT/JIT.cpp	/^  struct LibgccObject* seenObjects;$/;"	m	struct:__anon185::LibgccObjectInfo	typeref:struct:__anon185::LibgccObjectInfo::LibgccObject	file:
seenUnspillableVReg	CodeGen/LiveIntervalUnion.h	/^    bool seenUnspillableVReg() const { return SeenUnspillableVReg; }$/;"	f	class:llvm::LiveIntervalUnion::Query
seen_values	Transforms/IPO/MergeFunctions.cpp	/^  DenseSet<const Value *> seen_values;$/;"	m	class:__anon597::FunctionComparator	file:
segmentOverride	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SegmentOverride segmentOverride;$/;"	m	struct:InternalInstruction
selectAlternative	VMCore/InlineAsm.cpp	/^void InlineAsm::ConstraintInfo::selectAlternative(unsigned index) {$/;"	f	class:InlineAsm::ConstraintInfo
selectBestCandidateBlock	CodeGen/MachineBlockPlacement.cpp	/^MachineBasicBlock *MachineBlockPlacement::selectBestCandidateBlock($/;"	f	class:MachineBlockPlacement
selectBestSuccessor	CodeGen/MachineBlockPlacement.cpp	/^MachineBasicBlock *MachineBlockPlacement::selectBestSuccessor($/;"	f	class:MachineBlockPlacement
selectIntv	CodeGen/SplitKit.cpp	/^void SplitEditor::selectIntv(unsigned Idx) {$/;"	f	class:SplitEditor
selectOrSplit	CodeGen/RegAllocBasic.cpp	/^unsigned RABasic::selectOrSplit(LiveInterval &VirtReg,$/;"	f	class:RABasic
selectOrSplit	CodeGen/RegAllocGreedy.cpp	/^unsigned RAGreedy::selectOrSplit(LiveInterval &VirtReg,$/;"	f	class:RAGreedy
selectTarget	ExecutionEngine/TargetSelect.cpp	/^TargetMachine *EngineBuilder::selectTarget() {$/;"	f	class:EngineBuilder
selectTarget	ExecutionEngine/TargetSelect.cpp	/^TargetMachine *EngineBuilder::selectTarget(const Triple &TargetTriple,$/;"	f	class:EngineBuilder
semanticsPrecision	Support/APFloat.cpp	/^APFloat::semanticsPrecision(const fltSemantics &semantics)$/;"	f	class:APFloat
semi	TableGen/TGLexer.h	/^    colon, semi,        \/\/ : ;$/;"	e	enum:llvm::tgtok::TokKind
separators	Support/PathV2.cpp	/^  const char *separators = "\\\\\/";$/;"	m	namespace:__anon251	file:
set	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^void FunctionLoweringInfo::set(const Function &fn, MachineFunction &mf) {$/;"	f	class:FunctionLoweringInfo
set	VMCore/Metadata.cpp	/^  void set(Value *V) {$/;"	f	class:llvm::MDNodeOperand
setAA	Transforms/Scalar/ObjCARC.cpp	/^    void setAA(AliasAnalysis *aa) { AA = aa; }$/;"	f	class:__anon503::ProvenanceAnalysis
setATReg	Target/Mips/AsmParser/MipsAsmParser.cpp	/^bool MipsAssemblerOptions::setATReg(unsigned Reg) {$/;"	f	class:MipsAssemblerOptions
setAliasAnalysis	Transforms/Scalar/GVN.cpp	/^    void setAliasAnalysis(AliasAnalysis* A) { AA = A; }$/;"	f	class:__anon536::ValueTable
setAliasee	VMCore/Globals.cpp	/^void GlobalAlias::setAliasee(Constant *Aliasee) {$/;"	f	class:GlobalAlias
setAlignment	VMCore/DataLayout.cpp	/^DataLayout::setAlignment(AlignTypeEnum align_type, unsigned abi_align,$/;"	f	class:DataLayout
setAlignment	VMCore/Globals.cpp	/^void GlobalValue::setAlignment(unsigned Align) {$/;"	f	class:GlobalValue
setAlignment	VMCore/Instructions.cpp	/^void AllocaInst::setAlignment(unsigned Align) {$/;"	f	class:AllocaInst
setAlignment	VMCore/Instructions.cpp	/^void LoadInst::setAlignment(unsigned Align) {$/;"	f	class:LoadInst
setAlignment	VMCore/Instructions.cpp	/^void StoreInst::setAlignment(unsigned Align) {$/;"	f	class:StoreInst
setAndEmitFunctionVirtualRegisters	Target/NVPTX/NVPTXAsmPrinter.cpp	/^setAndEmitFunctionVirtualRegisters(const MachineFunction &MF) {$/;"	f	class:NVPTXAsmPrinter
setAny	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::Constraint::setAny(ScalarEvolution *NewSE) {$/;"	f	class:DependenceAnalysis::Constraint
setArch	Support/Triple.cpp	/^void Triple::setArch(ArchType Kind) {$/;"	f	class:Triple
setArchName	Support/Triple.cpp	/^void Triple::setArchName(StringRef Str) {$/;"	f	class:Triple
setArgumentFrameIndex	CodeGen/SelectionDAG/FunctionLoweringInfo.cpp	/^void FunctionLoweringInfo::setArgumentFrameIndex(const Argument *A,$/;"	f	class:FunctionLoweringInfo
setArgumentStackSize	Target/X86/X86MachineFunctionInfo.h	/^  void setArgumentStackSize(unsigned size) { ArgumentStackSize = size; }$/;"	f	class:llvm::X86MachineFunctionInfo
setAsFirstOperand	VMCore/Metadata.cpp	/^  void setAsFirstOperand(unsigned V) { this->setValPtrInt(V); }$/;"	f	class:llvm::MDNodeOperand
setAsmVerbosityDefault	Target/TargetMachine.cpp	/^void TargetMachine::setAsmVerbosityDefault(bool V) {$/;"	f	class:TargetMachine
setAssemblerDialect	MC/MCParser/AsmParser.cpp	/^  virtual void setAssemblerDialect(unsigned i) {$/;"	f	class:__anon211::AsmParser
setBaseAddress	DebugInfo/DWARFCompileUnit.h	/^  void setBaseAddress(uint64_t base_addr) {$/;"	f	class:llvm::DWARFCompileUnit
setBaseReg	Target/X86/X86ISelDAGToDAG.cpp	/^    void setBaseReg(SDValue Reg) {$/;"	f	struct:__anon371::X86ISelAddressMode
setBit	Support/APInt.cpp	/^void APInt::setBit(unsigned bitPosition) {$/;"	f	class:APInt
setBlock	CodeGen/BranchFolding.h	/^      void setBlock(MachineBasicBlock *MBB) {$/;"	f	class:llvm::BranchFolder::MergePotentialsElt
setBlock	CodeGen/BranchFolding.h	/^      void setBlock(MachineBasicBlock *MBB) {$/;"	f	class:llvm::BranchFolder::SameTailElt
setBody	VMCore/Type.cpp	/^void StructType::setBody(ArrayRef<Type*> Elements, bool isPacked) {$/;"	f	class:StructType
setBody	VMCore/Type.cpp	/^void StructType::setBody(Type *type, ...) {$/;"	f	class:StructType
setBranchWeightMetadata	Analysis/ProfileDataLoaderPass.cpp	/^void ProfileMetadataLoaderPass::setBranchWeightMetadata(Module &M,$/;"	f	class:ProfileMetadataLoaderPass
setBuffer	MC/MCParser/AsmLexer.cpp	/^void AsmLexer::setBuffer(const MemoryBuffer *buf, const char *ptr) {$/;"	f	class:AsmLexer
setBufferOwned	Bitcode/Reader/BitcodeReader.h	/^  void setBufferOwned(bool Owned) { BufferOwned = Owned; }$/;"	f	class:llvm::BitcodeReader
setBytesToPopOnReturn	Target/X86/X86MachineFunctionInfo.h	/^  void setBytesToPopOnReturn (unsigned bytes) { BytesToPopOnReturn = bytes;}$/;"	f	class:llvm::X86MachineFunctionInfo
setCallSiteLandingPad	CodeGen/MachineModuleInfo.cpp	/^void MachineModuleInfo::setCallSiteLandingPad(MCSymbol *Sym,$/;"	f	class:MachineModuleInfo
setCalleeSavedFrameSize	Target/MSP430/MSP430MachineFunctionInfo.h	/^  void setCalleeSavedFrameSize(unsigned bytes) { CalleeSavedFrameSize = bytes; }$/;"	f	class:llvm::MSP430MachineFunctionInfo
setCalleeSavedFrameSize	Target/X86/X86MachineFunctionInfo.h	/^  void setCalleeSavedFrameSize(unsigned bytes) { CalleeSavedFrameSize = bytes; }$/;"	f	class:llvm::X86MachineFunctionInfo
setChildrenFlag	CodeGen/AsmPrinter/DIE.h	/^    void setChildrenFlag(uint16_t CF) { ChildrenFlag = CF; }$/;"	f	class:llvm::DIEAbbrev
setColor	Analysis/PathNumbering.cpp	/^void BallLarusNode::setColor(BallLarusNode::NodeColor color) {$/;"	f	class:BallLarusNode
setCounterArray	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::setCounterArray(GlobalVariable* c) {$/;"	f	class:BLInstrumentationDag
setCurrentDebugType	Support/Debug.cpp	/^void llvm::setCurrentDebugType(const char *Type) {$/;"	f	class:llvm
setCurrentFunction	Analysis/PathProfileInfo.cpp	/^void PathProfileInfo::setCurrentFunction(Function* F) {$/;"	f	class:PathProfileInfo
setCurrentW64UnwindInfo	MC/MCStreamer.cpp	/^void MCStreamer::setCurrentW64UnwindInfo(MCWin64EHUnwindInfo *Frame) {$/;"	f	class:MCStreamer
setDIE	CodeGen/AsmPrinter/DwarfDebug.h	/^  void setDIE(DIE *D)                      { TheDIE = D; }$/;"	f	class:llvm::DbgVariable
setDIERelations	DebugInfo/DWARFCompileUnit.cpp	/^void DWARFCompileUnit::setDIERelations() {$/;"	f	class:DWARFCompileUnit
setDPRCalleeSavedAreaOffset	Target/ARM/ARMMachineFunctionInfo.h	/^  void setDPRCalleeSavedAreaOffset(unsigned o)  { DPRCSOffset = o; }$/;"	f	class:llvm::ARMFunctionInfo
setDPRCalleeSavedAreaSize	Target/ARM/ARMMachineFunctionInfo.h	/^  void setDPRCalleeSavedAreaSize(unsigned s)  { DPRCSSize = s; }$/;"	f	class:llvm::ARMFunctionInfo
setDataSections	Target/TargetMachine.cpp	/^void TargetMachine::setDataSections(bool V) {$/;"	f	class:TargetMachine
setDefault	CodeGen/MachinePassRegistry.cpp	/^void MachinePassRegistry::setDefault(StringRef Name) {$/;"	f	class:MachinePassRegistry
setDefaultFpFormat	Target/Mips/AsmParser/MipsAsmParser.cpp	/^void MipsAsmParser::setDefaultFpFormat() {$/;"	f	class:MipsAsmParser
setDepthDirty	CodeGen/ScheduleDAG.cpp	/^void SUnit::setDepthDirty() {$/;"	f	class:SUnit
setDepthToAtLeast	CodeGen/ScheduleDAG.cpp	/^void SUnit::setDepthToAtLeast(unsigned NewDepth) {$/;"	f	class:SUnit
setDistance	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::Constraint::setDistance(const SCEV *D,$/;"	f	class:DependenceAnalysis::Constraint
setDoesNotAccessMemory	Transforms/Scalar/SimplifyLibCalls.cpp	/^void SimplifyLibCalls::setDoesNotAccessMemory(Function &F) {$/;"	f	class:SimplifyLibCalls
setDoesNotAlias	Transforms/Scalar/SimplifyLibCalls.cpp	/^void SimplifyLibCalls::setDoesNotAlias(Function &F, unsigned n) {$/;"	f	class:SimplifyLibCalls
setDoesNotCapture	Transforms/Scalar/SimplifyLibCalls.cpp	/^void SimplifyLibCalls::setDoesNotCapture(Function &F, unsigned n) {$/;"	f	class:SimplifyLibCalls
setDoesNotThrow	Transforms/Scalar/SimplifyLibCalls.cpp	/^void SimplifyLibCalls::setDoesNotThrow(Function &F) {$/;"	f	class:SimplifyLibCalls
setDomTree	Transforms/Scalar/GVN.cpp	/^    void setDomTree(DominatorTree* D) { DT = D; }$/;"	f	class:__anon536::ValueTable
setDotDebugLocOffset	CodeGen/AsmPrinter/DwarfDebug.h	/^  void setDotDebugLocOffset(unsigned O)    { DotDebugLocOffset = O; }$/;"	f	class:llvm::DbgVariable
setEdgeWeight	Analysis/BranchProbabilityInfo.cpp	/^setEdgeWeight(const BasicBlock *Src, unsigned IndexInSuccessors,$/;"	f	class:BranchProbabilityInfo
setEmitNOAT	Target/Mips/MipsMachineFunction.h	/^  void setEmitNOAT() { EmitNOAT = true; }$/;"	f	class:llvm::MipsFunctionInfo
setEmpty	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::Constraint::setEmpty() {$/;"	f	class:DependenceAnalysis::Constraint
setEndPacket	Target/Hexagon/HexagonMCInst.h	/^    void setEndPacket(bool yes) { endPacket = yes; }$/;"	f	class:llvm::HexagonMCInst
setEndPacket	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  void setEndPacket(MachineInstr* MI)   {$/;"	f	class:llvm::HexagonMachineFunctionInfo
setEndingPathNumber	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationNode::setEndingPathNumber(Value* pathNumber) {$/;"	f	class:BLInstrumentationNode
setEntry	CodeGen/InterferenceCache.h	/^    void setEntry(Entry *E) {$/;"	f	class:llvm::InterferenceCache::Cursor
setEnvironment	Support/Triple.cpp	/^void Triple::setEnvironment(EnvironmentType Kind) {$/;"	f	class:Triple
setEnvironmentName	Support/Triple.cpp	/^void Triple::setEnvironmentName(StringRef Str) {$/;"	f	class:Triple
setError	Support/YAMLParser.cpp	/^  void setError(const Twine &Message) {$/;"	f	class:llvm::yaml::Scanner
setError	Support/YAMLParser.cpp	/^  void setError(const Twine &Message, StringRef::iterator Position) {$/;"	f	class:llvm::yaml::Scanner
setError	Support/YAMLParser.cpp	/^void Document::setError(const Twine &Message, Token &Location) const {$/;"	f	class:Document
setError	Support/YAMLParser.cpp	/^void Node::setError(const Twine &Msg, Token &Tok) const {$/;"	f	class:Node
setExecutionCount	Analysis/ProfileInfo.cpp	/^        setExecutionCount(const BasicBlock *BB, double w) {$/;"	f	class:llvm::ProfileInfoT
setExecutionCount	Analysis/ProfileInfo.cpp	/^        setExecutionCount(const MachineBasicBlock *MBB, double w) {$/;"	f	class:llvm::ProfileInfoT
setExecutionDomain	Target/ARM/ARMBaseInstrInfo.cpp	/^ARMBaseInstrInfo::setExecutionDomain(MachineInstr *MI, unsigned Domain) const {$/;"	f	class:ARMBaseInstrInfo
setExecutionDomain	Target/X86/X86InstrInfo.cpp	/^void X86InstrInfo::setExecutionDomain(MachineInstr *MI, unsigned Domain) const {$/;"	f	class:X86InstrInfo
setFPSpillSlot	Target/XCore/XCoreMachineFunctionInfo.h	/^  void setFPSpillSlot(int off) { FPSpillSlot = off; }$/;"	f	class:llvm::XCoreFunctionInfo
setFPStackOffset	Target/MBlaze/MBlazeMachineFunction.h	/^  void setFPStackOffset(int Off) { FPStackOffset = Off; }$/;"	f	class:llvm::MBlazeFunctionInfo
setForceFramePointer	Target/X86/X86MachineFunctionInfo.h	/^  void setForceFramePointer(bool forceFP) { ForceFramePointer = forceFP; }$/;"	f	class:llvm::X86MachineFunctionInfo
setFpFormat	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  void setFpFormat(FpFormatTy Format) {$/;"	f	class:__anon422::MipsAsmParser	file:
setFpFormat	Target/Mips/AsmParser/MipsAsmParser.cpp	/^void MipsAsmParser::setFpFormat(StringRef Format) {$/;"	f	class:MipsAsmParser
setFrameIndex	CodeGen/AsmPrinter/DwarfDebug.h	/^  void setFrameIndex(int FI)               { FrameIndex = FI; }$/;"	f	class:llvm::DbgVariable
setFramePointerSaveIndex	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setFramePointerSaveIndex(int Idx) { FramePointerSaveIndex = Idx; }$/;"	f	class:llvm::PPCFunctionInfo
setFramePtrSpillOffset	Target/ARM/ARMMachineFunctionInfo.h	/^  void setFramePtrSpillOffset(unsigned o) { FramePtrSpillOffset = o; }$/;"	f	class:llvm::ARMFunctionInfo
setFunctionSections	Target/TargetMachine.cpp	/^void TargetMachine::setFunctionSections(bool V) {$/;"	f	class:TargetMachine
setGC	VMCore/Function.cpp	/^void Function::setGC(const char *Str) {$/;"	f	class:Function
setGPFI	Target/MBlaze/MBlazeMachineFunction.h	/^  void setGPFI(int FI) { GPHolder.FI = FI; }$/;"	f	class:llvm::MBlazeFunctionInfo
setGPRCalleeSavedArea1Offset	Target/ARM/ARMMachineFunctionInfo.h	/^  void setGPRCalleeSavedArea1Offset(unsigned o) { GPRCS1Offset = o; }$/;"	f	class:llvm::ARMFunctionInfo
setGPRCalleeSavedArea1Size	Target/ARM/ARMMachineFunctionInfo.h	/^  void setGPRCalleeSavedArea1Size(unsigned s) { GPRCS1Size = s; }$/;"	f	class:llvm::ARMFunctionInfo
setGPRCalleeSavedArea2Offset	Target/ARM/ARMMachineFunctionInfo.h	/^  void setGPRCalleeSavedArea2Offset(unsigned o) { GPRCS2Offset = o; }$/;"	f	class:llvm::ARMFunctionInfo
setGPRCalleeSavedArea2Size	Target/ARM/ARMMachineFunctionInfo.h	/^  void setGPRCalleeSavedArea2Size(unsigned s) { GPRCS2Size = s; }$/;"	f	class:llvm::ARMFunctionInfo
setGPStackOffset	Target/MBlaze/MBlazeMachineFunction.h	/^  void setGPStackOffset(int Off) { GPHolder.SPOffset = Off; }$/;"	f	class:llvm::MBlazeFunctionInfo
setGlobalBaseReg	Target/ARM/ARMMachineFunctionInfo.h	/^  void setGlobalBaseReg(unsigned Reg) { GlobalBaseReg = Reg; }$/;"	f	class:llvm::ARMFunctionInfo
setGlobalBaseReg	Target/MBlaze/MBlazeMachineFunction.h	/^  void setGlobalBaseReg(unsigned Reg) { GlobalBaseReg = Reg; }$/;"	f	class:llvm::MBlazeFunctionInfo
setGlobalBaseReg	Target/Sparc/SparcMachineFunctionInfo.h	/^    void setGlobalBaseReg(unsigned Reg) { GlobalBaseReg = Reg; }$/;"	f	class:llvm::SparcMachineFunctionInfo
setGlobalBaseReg	Target/X86/X86MachineFunctionInfo.h	/^  void setGlobalBaseReg(unsigned Reg) { GlobalBaseReg = Reg; }$/;"	f	class:llvm::X86MachineFunctionInfo
setGraphAttrs	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^void SelectionDAG::setGraphAttrs(const SDNode *N, const char *Attrs) {$/;"	f	class:SelectionDAG
setGraphColor	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^void SelectionDAG::setGraphColor(const SDNode *N, const char *Color) {$/;"	f	class:SelectionDAG
setHasClobberLR	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  void setHasClobberLR(bool v) { HasClobberLR = v;  }$/;"	f	class:llvm::HexagonMachineFunctionInfo
setHasFastCall	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setHasFastCall() { HasFastCall = true; }$/;"	f	class:llvm::PPCFunctionInfo
setHasITBlocks	Target/ARM/ARMMachineFunctionInfo.h	/^  void setHasITBlocks(bool h) { HasITBlocks = h; }$/;"	f	class:llvm::ARMFunctionInfo
setHasInstrumentation	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationEdge::setHasInstrumentation(bool hasInstrumentation) {$/;"	f	class:BLInstrumentationEdge
setHasNoSignedWrap	VMCore/Instructions.cpp	/^void BinaryOperator::setHasNoSignedWrap(bool b) {$/;"	f	class:BinaryOperator
setHasNoUnsignedWrap	VMCore/Instructions.cpp	/^void BinaryOperator::setHasNoUnsignedWrap(bool b) {$/;"	f	class:BinaryOperator
setHasStackFrame	Target/ARM/ARMMachineFunctionInfo.h	/^  void setHasStackFrame(bool s) { HasStackFrame = s; }$/;"	f	class:llvm::ARMFunctionInfo
setHeightDirty	CodeGen/ScheduleDAG.cpp	/^void SUnit::setHeightDirty() {$/;"	f	class:SUnit
setHeightToAtLeast	CodeGen/ScheduleDAG.cpp	/^void SUnit::setHeightToAtLeast(unsigned NewHeight) {$/;"	f	class:SUnit
setHiPC	DebugInfo/DWARFDebugAranges.h	/^    void setHiPC(uint64_t HiPC) {$/;"	f	struct:llvm::DWARFDebugAranges::Range
setITState	Target/ARM/Disassembler/ARMDisassembler.cpp	/^      void setITState(char Firstcond, char Mask) {$/;"	f	class:__anon290::ITStatus
setImm	Target/Hexagon/HexagonHardwareLoops.cpp	/^    void setImm(int64_t Val) {$/;"	f	class:__anon408::CountValue
setImm	Target/PowerPC/PPCCTRLoops.cpp	/^    void setImm(int64_t Val) {$/;"	f	class:__anon325::CountValue
setIncrement	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationEdge::setIncrement(long increment) {$/;"	f	class:BLInstrumentationEdge
setIndexTyDie	CodeGen/AsmPrinter/DwarfCompileUnit.h	/^  void setIndexTyDie(DIE *D) {$/;"	f	class:llvm::CompileUnit
setInitializer	VMCore/Globals.cpp	/^void GlobalVariable::setInitializer(Constant *InitVal) {$/;"	f	class:GlobalVariable
setInlineAsmDiagnosticHandler	VMCore/LLVMContext.cpp	/^setInlineAsmDiagnosticHandler(InlineAsmDiagHandlerTy DiagHandler,$/;"	f	class:LLVMContext
setInstance	Support/ThreadLocal.cpp	/^void ThreadLocalImpl::setInstance(const void* d) {$/;"	f	class:llvm::ThreadLocalImpl
setInstructionID	Bitcode/Writer/ValueEnumerator.cpp	/^void ValueEnumerator::setInstructionID(const Instruction *I) {$/;"	f	class:ValueEnumerator
setIsCounterIncrement	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationEdge::setIsCounterIncrement(bool isCounterIncrement) {$/;"	f	class:BLInstrumentationEdge
setIsDef	CodeGen/MachineInstr.cpp	/^void MachineOperand::setIsDef(bool Val) {$/;"	f	class:MachineOperand
setIsExact	VMCore/Instructions.cpp	/^void BinaryOperator::setIsExact(bool b) {$/;"	f	class:BinaryOperator
setIsInBounds	VMCore/Instructions.cpp	/^void GetElementPtrInst::setIsInBounds(bool B) {$/;"	f	class:GetElementPtrInst
setIsInSpanningTree	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationEdge::setIsInSpanningTree(bool isInSpanningTree) {$/;"	f	class:BLInstrumentationEdge
setIsInitialization	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationEdge::setIsInitialization(bool isInitialization) {$/;"	f	class:BLInstrumentationEdge
setIsInvalidated	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  void setIsInvalidated() { Invalid = true; }$/;"	f	class:llvm::SDDbgValue
setIsNotUniqued	VMCore/Metadata.cpp	/^void MDNode::setIsNotUniqued() {$/;"	f	class:MDNode
setIsSplitFromReg	CodeGen/VirtRegMap.h	/^    void setIsSplitFromReg(unsigned virtReg, unsigned SReg) {$/;"	f	class:llvm::VirtRegMap
setIsThumb	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  void setIsThumb(bool it) { isThumbMode = it; }$/;"	f	class:__anon284::ARMAsmBackend
setKnownObjectSize	Support/StreamableMemoryObject.cpp	/^void StreamingMemoryObject::setKnownObjectSize(size_t size) {$/;"	f	class:llvm::StreamingMemoryObject
setLRIsSpilledForFarJump	Target/ARM/ARMMachineFunctionInfo.h	/^  void setLRIsSpilledForFarJump(bool s) { LRSpilledForFarJump = s; }$/;"	f	class:llvm::ARMFunctionInfo
setLRSpillSlot	Target/XCore/XCoreMachineFunctionInfo.h	/^  void setLRSpillSlot(int off) { LRSpillSlot = off; }$/;"	f	class:llvm::XCoreFunctionInfo
setLRStoreRequired	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setLRStoreRequired() { LRStoreRequired = true; }$/;"	f	class:llvm::PPCFunctionInfo
setLastInArgFI	Target/Mips/MipsMachineFunction.h	/^  void setLastInArgFI(int FI) { InArgFIRange.second = FI; }$/;"	f	class:llvm::MipsFunctionInfo
setLastUser	VMCore/PassManager.cpp	/^PMTopLevelManager::setLastUser(ArrayRef<Pass*> AnalysisPasses, Pass *P) {$/;"	f	class:PMTopLevelManager
setLine	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::Constraint::setLine(const SCEV *AA,$/;"	f	class:DependenceAnalysis::Constraint
setLiveOutValue	CodeGen/LiveRangeCalc.h	/^  void setLiveOutValue(MachineBasicBlock *MBB, VNInfo *VNI) {$/;"	f	class:llvm::LiveRangeCalc
setLiveReg	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::setLiveReg(int rx, DomainValue *dv) {$/;"	f	class:ExeDepsFix
setMI	Target/Hexagon/HexagonMCInst.h	/^    void setMI(const MachineInstr *MI) { MachineI = MI; }$/;"	f	class:llvm::HexagonMCInst
setMInsn	CodeGen/AsmPrinter/DwarfDebug.h	/^  void setMInsn(const MachineInstr *M)     { MInsn = M; }$/;"	f	class:llvm::DbgVariable
setMacro	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  void setMacro() {macro = true;}$/;"	f	class:__anon421::MipsAssemblerOptions
setMap	CodeGen/MachineModuleInfo.cpp	/^  void setMap(MMIAddrLabelMap *map) { Map = map; }$/;"	f	class:llvm::MMIAddrLabelMapCallbackPtr
setMaterializer	VMCore/Module.cpp	/^void Module::setMaterializer(GVMaterializer *GVM) {$/;"	f	class:Module
setMemDep	Transforms/Scalar/GVN.cpp	/^    void setMemDep(MemoryDependenceAnalysis* M) { MD = M; }$/;"	f	class:__anon536::ValueTable
setMemoryExecutable	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void setMemoryExecutable()$/;"	f	class:__anon190::DefaultJITMemoryManager
setMemoryWritable	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void setMemoryWritable()$/;"	f	class:__anon190::DefaultJITMemoryManager
setMetadata	VMCore/Metadata.cpp	/^void Instruction::setMetadata(StringRef Kind, MDNode *Node) {$/;"	f	class:Instruction
setMetadata	VMCore/Metadata.cpp	/^void Instruction::setMetadata(unsigned KindID, MDNode *Node) {$/;"	f	class:Instruction
setMinReservedArea	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setMinReservedArea(unsigned size) { MinReservedArea = size; }$/;"	f	class:llvm::PPCFunctionInfo
setModuleInfo	ExecutionEngine/JIT/JITDwarfEmitter.h	/^  void setModuleInfo(MachineModuleInfo* Info) {$/;"	f	class:llvm::JITDwarfEmitter
setModuleInfo	ExecutionEngine/JIT/JITEmitter.cpp	/^    virtual void setModuleInfo(MachineModuleInfo* Info) {$/;"	f	class:__anon182::JITEmitter
setMustSaveLR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setMustSaveLR(bool U) { MustSaveLR = U; }$/;"	f	class:llvm::PPCFunctionInfo
setName	TableGen/Record.cpp	/^void Record::setName(Init *NewName) {$/;"	f	class:Record
setName	TableGen/Record.cpp	/^void Record::setName(const std::string &Name) {$/;"	f	class:Record
setName	VMCore/LeaksContext.h	/^  void setName(const char* n) { $/;"	f	struct:llvm::LeakDetectorImpl
setName	VMCore/Type.cpp	/^void StructType::setName(StringRef Name) {$/;"	f	class:StructType
setName	VMCore/Value.cpp	/^void Value::setName(const Twine &NewName) {$/;"	f	class:Value
setNomacro	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  void setNomacro() {macro = false;}$/;"	f	class:__anon421::MipsAssemblerOptions
setNoreorder	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  void setNoreorder() {reorder = false;}$/;"	f	class:__anon421::MipsAssemblerOptions
setNumAlignedDPRCS2Regs	Target/ARM/ARMMachineFunctionInfo.h	/^  void setNumAlignedDPRCS2Regs(unsigned n) { NumAlignedDPRCS2Regs = n; }$/;"	f	class:llvm::ARMFunctionInfo
setNumber	CodeGen/AsmPrinter/DIE.h	/^    void setNumber(unsigned N) { Number = N; }$/;"	f	class:llvm::DIEAbbrev
setNumberPaths	Analysis/PathNumbering.cpp	/^void BallLarusNode::setNumberPaths(unsigned numberPaths) {$/;"	f	class:BallLarusNode
setOS	Support/Triple.cpp	/^void Triple::setOS(OSType Kind) {$/;"	f	class:Triple
setOSAndEnvironmentName	Support/Triple.cpp	/^void Triple::setOSAndEnvironmentName(StringRef Str) {$/;"	f	class:Triple
setOSName	Support/Triple.cpp	/^void Triple::setOSName(StringRef Str) {$/;"	f	class:Triple
setOffset	CodeGen/AsmPrinter/DIE.h	/^    void setOffset(unsigned O) { Offset = O; }$/;"	f	class:llvm::DIE
setOnlyReadsMemory	Transforms/Scalar/SimplifyLibCalls.cpp	/^void SimplifyLibCalls::setOnlyReadsMemory(Function &F) {$/;"	f	class:SimplifyLibCalls
setOpcode	MC/MCParser/AsmParser.cpp	/^  void setOpcode(unsigned Value) { Opcode = Value; }$/;"	f	class:__anon211::AsmParser	file:
setOperandID	MC/MCDisassembler/EDToken.cpp	/^void EDToken::setOperandID(int operandID) {$/;"	f	class:EDToken
setOpt	CodeGen/Passes.cpp	/^void TargetPassConfig::setOpt(bool &Opt, bool Val) {$/;"	f	class:TargetPassConfig
setPICBase	Target/X86/X86JITInfo.h	/^    void setPICBase(uintptr_t Base) { PICBase = Base; }$/;"	f	class:llvm::X86JITInfo
setPICStyle	Target/X86/X86Subtarget.h	/^  void setPICStyle(PICStyles::Style Style)  { PICStyle = Style; }$/;"	f	class:llvm::X86Subtarget
setParent	DebugInfo/DWARFDebugInfoEntry.h	/^  void setParent(DWARFDebugInfoEntryMinimal *parent) {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
setParent	VMCore/BasicBlock.cpp	/^void BasicBlock::setParent(Function *parent) {$/;"	f	class:BasicBlock
setParent	VMCore/Function.cpp	/^void Argument::setParent(Function *parent) {$/;"	f	class:Argument
setParent	VMCore/Function.cpp	/^void Function::setParent(Module *parent) {$/;"	f	class:Function
setParent	VMCore/Globals.cpp	/^void GlobalAlias::setParent(Module *parent) {$/;"	f	class:GlobalAlias
setParent	VMCore/Globals.cpp	/^void GlobalVariable::setParent(Module *parent) {$/;"	f	class:GlobalVariable
setParent	VMCore/Instruction.cpp	/^void Instruction::setParent(BasicBlock *P) {$/;"	f	class:Instruction
setParsingInlineAsm	MC/MCParser/AsmParser.cpp	/^  void setParsingInlineAsm(bool V) { ParsingInlineAsm = V; }$/;"	f	class:__anon211::AsmParser
setPathPHI	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationNode::setPathPHI(PHINode* pathPHI) {$/;"	f	class:BLInstrumentationNode
setPhonyExit	Analysis/PathNumbering.cpp	/^void BallLarusEdge::setPhonyExit(BallLarusEdge* phonyExit) {$/;"	f	class:BallLarusEdge
setPhonyRoot	Analysis/PathNumbering.cpp	/^void BallLarusEdge::setPhonyRoot(BallLarusEdge* phonyRoot) {$/;"	f	class:BallLarusEdge
setPhysReg	CodeGen/InterferenceCache.h	/^    void setPhysReg(InterferenceCache &Cache, unsigned PhysReg) {$/;"	f	class:llvm::InterferenceCache::Cursor
setPhysReg	CodeGen/RegAllocFast.cpp	/^bool RAFast::setPhysReg(MachineInstr *MI, unsigned OpNum, unsigned PhysReg) {$/;"	f	class:RAFast
setPhysRegsDeadExcept	CodeGen/MachineInstr.cpp	/^void MachineInstr::setPhysRegsDeadExcept(ArrayRef<unsigned> UsedRegs,$/;"	f	class:MachineInstr
setPoint	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::Constraint::setPoint(const SCEV *X,$/;"	f	class:DependenceAnalysis::Constraint
setPointerAlignment	VMCore/DataLayout.cpp	/^DataLayout::setPointerAlignment(uint32_t addr_space, unsigned abi_align,$/;"	f	class:DataLayout
setPoisonMemory	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    void setPoisonMemory(bool poison) {$/;"	f	class:__anon190::DefaultJITMemoryManager
setPrefixPresent	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static void setPrefixPresent(struct InternalInstruction* insn,$/;"	f	file:
setPreservesCFG	VMCore/Pass.cpp	/^void AnalysisUsage::setPreservesCFG() {$/;"	f	class:AnalysisUsage
setPtr	CodeGen/MachineModuleInfo.cpp	/^  void setPtr(BasicBlock *BB) {$/;"	f	class:llvm::MMIAddrLabelMapCallbackPtr
setRAIndex	Target/MSP430/MSP430MachineFunctionInfo.h	/^  void setRAIndex(int Index) { ReturnAddrIndex = Index; }$/;"	f	class:llvm::MSP430MachineFunctionInfo
setRAIndex	Target/X86/X86MachineFunctionInfo.h	/^  void setRAIndex(int Index) { ReturnAddrIndex = Index; }$/;"	f	class:llvm::X86MachineFunctionInfo
setRAStackOffset	Target/MBlaze/MBlazeMachineFunction.h	/^  void setRAStackOffset(int Off) { RAStackOffset = Off; }$/;"	f	class:llvm::MBlazeFunctionInfo
setRealEdge	Analysis/PathNumbering.cpp	/^void BallLarusEdge::setRealEdge(BallLarusEdge* realEdge) {$/;"	f	class:BallLarusEdge
setReg	CodeGen/MachineInstr.cpp	/^void MachineOperand::setReg(unsigned Reg) {$/;"	f	class:MachineOperand
setReg	Target/Hexagon/HexagonHardwareLoops.cpp	/^    void setReg(unsigned Val) {$/;"	f	class:__anon408::CountValue
setReg	Target/PowerPC/PPCCTRLoops.cpp	/^    void setReg(unsigned Val) {$/;"	f	class:__anon325::CountValue
setRegClass	CodeGen/MachineRegisterInfo.cpp	/^MachineRegisterInfo::setRegClass(unsigned Reg, const TargetRegisterClass *RC) {$/;"	f	class:MachineRegisterInfo
setRegLimit	CodeGen/ScheduleDAGInstrs.cpp	/^void Reg2SUnitsMap::setRegLimit(unsigned Limit) {$/;"	f	class:Reg2SUnitsMap
setRegSaveFrameIndex	Target/X86/X86MachineFunctionInfo.h	/^  void setRegSaveFrameIndex(int Idx) { RegSaveFrameIndex = Idx; }$/;"	f	class:llvm::X86MachineFunctionInfo
setRegionFor	Analysis/RegionInfo.cpp	/^void RegionInfo::setRegionFor(BasicBlock *BB, Region *R) {$/;"	f	class:RegionInfo
setRegisters	CodeGen/RegisterCoalescer.cpp	/^bool CoalescerPair::setRegisters(const MachineInstr *MI) {$/;"	f	class:CoalescerPair
setReorder	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  void setReorder() {reorder = true;}$/;"	f	class:__anon421::MipsAssemblerOptions
setResolver	VMCore/Pass.cpp	/^void Pass::setResolver(AnalysisResolver *AR) {$/;"	f	class:Pass
setResult	MC/MCDisassembler/EDInst.h	/^  int setResult(int result) { Result = result; Valid = true; return result; }$/;"	f	struct:llvm::CachedResult
setReturnAddrSaveIndex	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setReturnAddrSaveIndex(int idx) { ReturnAddrSaveIndex = idx; }$/;"	f	class:llvm::PPCFunctionInfo
setSRetReturnReg	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  void setSRetReturnReg(unsigned Reg) { SRetReturnReg = Reg; }$/;"	f	class:llvm::HexagonMachineFunctionInfo
setSRetReturnReg	Target/MBlaze/MBlazeMachineFunction.h	/^  void setSRetReturnReg(unsigned Reg) { SRetReturnReg = Reg; }$/;"	f	class:llvm::MBlazeFunctionInfo
setSRetReturnReg	Target/Mips/MipsMachineFunction.h	/^  void setSRetReturnReg(unsigned Reg) { SRetReturnReg = Reg; }$/;"	f	class:llvm::MipsFunctionInfo
setSRetReturnReg	Target/Sparc/SparcMachineFunctionInfo.h	/^    void setSRetReturnReg(unsigned Reg) { SRetReturnReg = Reg; }$/;"	f	class:llvm::SparcMachineFunctionInfo
setSRetReturnReg	Target/X86/X86MachineFunctionInfo.h	/^  void setSRetReturnReg(unsigned Reg) { SRetReturnReg = Reg; }$/;"	f	class:llvm::X86MachineFunctionInfo
setScheduleDAG	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  void setScheduleDAG(ScheduleDAGRRList *scheduleDag) {$/;"	f	class:__anon77::RegReductionPQBase
setSectionStart	MC/MCDwarf.cpp	/^    void setSectionStart(const MCSymbol *Label) { SectionStart = Label; }$/;"	f	class:__anon223::FrameEmitterImpl
setShouldRestoreSPFromFP	Target/ARM/ARMMachineFunctionInfo.h	/^  void setShouldRestoreSPFromFP(bool s) { RestoreSPFromFP = s; }$/;"	f	class:llvm::ARMFunctionInfo
setSibling	DebugInfo/DWARFDebugInfoEntry.h	/^  void setSibling(DWARFDebugInfoEntryMinimal *sibling) {$/;"	f	class:llvm::DWARFDebugInfoEntryMinimal
setSingleDomain	CodeGen/ExecutionDepsFix.cpp	/^  void setSingleDomain(unsigned domain) {$/;"	f	struct:__anon118::DomainValue
setSize	CodeGen/AsmPrinter/DIE.h	/^    void setSize(unsigned S) { Size = S; }$/;"	f	class:llvm::DIE
setSpillsCR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setSpillsCR()       { SpillsCR = true; }$/;"	f	class:llvm::PPCFunctionInfo
setStage	CodeGen/RegAllocGreedy.cpp	/^  void setStage(Iterator Begin, Iterator End, LiveRangeStage NewStage) {$/;"	f	class:__anon158::RAGreedy	file:
setStage	CodeGen/RegAllocGreedy.cpp	/^  void setStage(const LiveInterval &VirtReg, LiveRangeStage Stage) {$/;"	f	class:__anon158::RAGreedy	file:
setStartPacket	Target/Hexagon/HexagonMCInst.h	/^    void setStartPacket(bool yes) { startPacket = yes; }$/;"	f	class:llvm::HexagonMCInst
setStartPacket	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  void setStartPacket(MachineInstr* MI) {$/;"	f	class:llvm::HexagonMachineFunctionInfo
setStartingPathNumber	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationNode::setStartingPathNumber(Value* pathNumber) {$/;"	f	class:BLInstrumentationNode
setSubgraphColor	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^void SelectionDAG::setSubgraphColor(SDNode *N, const char *Color) {$/;"	f	class:SelectionDAG
setSubgraphColorHelper	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^bool SelectionDAG::setSubgraphColorHelper(SDNode *N, const char *Color, DenseSet<SDNode *> &visited,$/;"	f	class:SelectionDAG
setSuccessorV	VMCore/Instructions.cpp	/^void BranchInst::setSuccessorV(unsigned idx, BasicBlock *B) {$/;"	f	class:BranchInst
setSuccessorV	VMCore/Instructions.cpp	/^void IndirectBrInst::setSuccessorV(unsigned idx, BasicBlock *B) {$/;"	f	class:IndirectBrInst
setSuccessorV	VMCore/Instructions.cpp	/^void InvokeInst::setSuccessorV(unsigned idx, BasicBlock *B) {$/;"	f	class:InvokeInst
setSuccessorV	VMCore/Instructions.cpp	/^void ResumeInst::setSuccessorV(unsigned idx, BasicBlock *NewSucc) {$/;"	f	class:ResumeInst
setSuccessorV	VMCore/Instructions.cpp	/^void ReturnInst::setSuccessorV(unsigned idx, BasicBlock *NewSucc) {$/;"	f	class:ReturnInst
setSuccessorV	VMCore/Instructions.cpp	/^void SwitchInst::setSuccessorV(unsigned idx, BasicBlock *B) {$/;"	f	class:SwitchInst
setSuccessorV	VMCore/Instructions.cpp	/^void UnreachableInst::setSuccessorV(unsigned idx, BasicBlock *NewSucc) {$/;"	f	class:UnreachableInst
setSymTabObject	VMCore/SymbolTableListTraitsImpl.h	/^::setSymTabObject(TPtr *Dest, TPtr Src) {$/;"	f	class:llvm::SymbolTableListTraits
setTCReturnAddrDelta	Target/X86/X86MachineFunctionInfo.h	/^  void setTCReturnAddrDelta(int delta) {TailCallReturnAddrDelta = delta;}$/;"	f	class:llvm::X86MachineFunctionInfo
setTag	CodeGen/AsmPrinter/DIE.h	/^    void setTag(uint16_t T) { Tag = T; }$/;"	f	class:llvm::DIEAbbrev
setTag	CodeGen/AsmPrinter/DIE.h	/^    void setTag(unsigned Tag) { Abbrev.setTag(Tag); }$/;"	f	class:llvm::DIE
setTailCallSPDelta	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setTailCallSPDelta(int size) { TailCallSPDelta = size; }$/;"	f	class:llvm::PPCFunctionInfo
setTailStartPos	CodeGen/BranchFolding.h	/^      void setTailStartPos(MachineBasicBlock::iterator Pos) {$/;"	f	class:llvm::BranchFolder::SameTailElt
setTarget	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationEdge::setTarget(BallLarusNode* node) {$/;"	f	class:BLInstrumentationEdge
setTargetParser	MC/MCParser/MCAsmParser.cpp	/^void MCAsmParser::setTargetParser(MCTargetAsmParser &P) {$/;"	f	class:MCAsmParser
setTokenValue	Target/X86/AsmParser/X86AsmParser.cpp	/^  void setTokenValue(StringRef Value) {$/;"	f	struct:__anon336::X86Operand
setTriple	Support/Triple.cpp	/^void Triple::setTriple(const Twine &Str) {$/;"	f	class:Triple
setType	Analysis/PathNumbering.cpp	/^void BallLarusEdge::setType(EdgeType type) {$/;"	f	class:BallLarusEdge
setUnswitched	Transforms/Scalar/LoopUnswitch.cpp	/^void LUAnalysisCache::setUnswitched(const SwitchInst* SI, const Value* V) {$/;"	f	class:LUAnalysisCache
setUnusedArgValue	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void setUnusedArgValue(const Value *V, SDValue NewN) {$/;"	f	class:llvm::SelectionDAGBuilder
setUsed	CodeGen/RegisterScavenging.cpp	/^void RegScavenger::setUsed(unsigned Reg) {$/;"	f	class:RegScavenger
setUsesLR	Target/CellSPU/SPUMachineFunction.h	/^  void setUsesLR(bool U) { UsesLR = U; }$/;"	f	class:llvm::SPUFunctionInfo
setUsesLR	Target/XCore/XCoreMachineFunctionInfo.h	/^  void setUsesLR(bool val) { UsesLR = val; }$/;"	f	class:llvm::XCoreFunctionInfo
setVal	Transforms/IPO/GlobalOpt.cpp	/^  void setVal(Value *V, Constant *C) {$/;"	f	class:__anon591::Evaluator
setValue	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void setValue(const Value *V, SDValue NewN) {$/;"	f	class:llvm::SelectionDAGBuilder
setVarArgsFPOffset	Target/X86/X86MachineFunctionInfo.h	/^  void setVarArgsFPOffset(unsigned Offset) { VarArgsFPOffset = Offset; }$/;"	f	class:llvm::X86MachineFunctionInfo
setVarArgsFrameIndex	Target/ARM/ARMMachineFunctionInfo.h	/^  void setVarArgsFrameIndex(int Index) { VarArgsFrameIndex = Index; }$/;"	f	class:llvm::ARMFunctionInfo
setVarArgsFrameIndex	Target/CellSPU/SPUMachineFunction.h	/^  void setVarArgsFrameIndex(int Index) { VarArgsFrameIndex = Index; }$/;"	f	class:llvm::SPUFunctionInfo
setVarArgsFrameIndex	Target/Hexagon/HexagonMachineFunctionInfo.h	/^  void setVarArgsFrameIndex(int v) { VarArgsFrameIndex = v; }$/;"	f	class:llvm::HexagonMachineFunctionInfo
setVarArgsFrameIndex	Target/MBlaze/MBlazeMachineFunction.h	/^  void setVarArgsFrameIndex(int Index) { VarArgsFrameIndex = Index; }$/;"	f	class:llvm::MBlazeFunctionInfo
setVarArgsFrameIndex	Target/Mips/MipsMachineFunction.h	/^  void setVarArgsFrameIndex(int Index) { VarArgsFrameIndex = Index; }$/;"	f	class:llvm::MipsFunctionInfo
setVarArgsFrameIndex	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setVarArgsFrameIndex(int Index) { VarArgsFrameIndex = Index; }$/;"	f	class:llvm::PPCFunctionInfo
setVarArgsFrameIndex	Target/X86/X86MachineFunctionInfo.h	/^  void setVarArgsFrameIndex(int Idx) { VarArgsFrameIndex = Idx; }$/;"	f	class:llvm::X86MachineFunctionInfo
setVarArgsFrameIndex	Target/XCore/XCoreMachineFunctionInfo.h	/^  void setVarArgsFrameIndex(int off) { VarArgsFrameIndex = off; }$/;"	f	class:llvm::XCoreFunctionInfo
setVarArgsFrameOffset	Target/Sparc/SparcMachineFunctionInfo.h	/^    void setVarArgsFrameOffset(int Offset) { VarArgsFrameOffset = Offset; }$/;"	f	class:llvm::SparcMachineFunctionInfo
setVarArgsGPOffset	Target/X86/X86MachineFunctionInfo.h	/^  void setVarArgsGPOffset(unsigned Offset) { VarArgsGPOffset = Offset; }$/;"	f	class:llvm::X86MachineFunctionInfo
setVarArgsNumFPR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setVarArgsNumFPR(unsigned Num) { VarArgsNumFPR = Num; }$/;"	f	class:llvm::PPCFunctionInfo
setVarArgsNumGPR	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setVarArgsNumGPR(unsigned Num) { VarArgsNumGPR = Num; }$/;"	f	class:llvm::PPCFunctionInfo
setVarArgsRegSaveSize	Target/ARM/ARMMachineFunctionInfo.h	/^  void setVarArgsRegSaveSize(unsigned s) { VarArgsRegSaveSize = s; }$/;"	f	class:llvm::ARMFunctionInfo
setVarArgsStackOffset	Target/PowerPC/PPCMachineFunctionInfo.h	/^  void setVarArgsStackOffset(int Offset) { VarArgsStackOffset = Offset; }$/;"	f	class:llvm::PPCFunctionInfo
setVariableValue	MC/MCSymbol.cpp	/^void MCSymbol::setVariableValue(const MCExpr *Value) {$/;"	f	class:MCSymbol
setVendor	Support/Triple.cpp	/^void Triple::setVendor(VendorType Kind) {$/;"	f	class:Triple
setVendorName	Support/Triple.cpp	/^void Triple::setVendorName(StringRef Str) {$/;"	f	class:Triple
setWeight	Analysis/PathNumbering.cpp	/^void BallLarusEdge::setWeight(unsigned weight) {$/;"	f	class:BallLarusEdge
set_fixed_execution_hash_seed	Support/Hashing.cpp	/^void llvm::set_fixed_execution_hash_seed(size_t fixed_value) {$/;"	f	class:llvm
set_name_offset	MC/WinCOFFObjectWriter.cpp	/^void COFFSymbol::set_name_offset(uint32_t Offset) {$/;"	f	class:COFFSymbol
setbits	Support/regex2.h	/^	uch *setbits;		\/* -> uch[csetsize][ncsets\/CHAR_BIT] *\/$/;"	m	struct:re_guts
seterr	Support/regcomp.c	/^seterr(struct parse *p, int e)$/;"	f	file:
setjmp	CodeGen/IntrinsicLowering.cpp	91;"	d	file:
setjmp	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	4525;"	d	file:
setjmp	Transforms/Utils/LowerInvoke.cpp	148;"	d	file:
setjmp_undefined_for_msvc	CodeGen/IntrinsicLowering.cpp	92;"	d	file:
setjmp_undefined_for_msvc	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	4526;"	d	file:
setjmp_undefined_for_msvc	Transforms/Utils/LowerInvoke.cpp	149;"	d	file:
setjmp_undefined_for_msvc	Transforms/Utils/LowerInvoke.cpp	157;"	d	file:
sets	Support/regex2.h	/^	cset *sets;		\/* -> cset [ncsets] *\/$/;"	m	struct:re_guts
setupBlockStack	Target/X86/X86FloatingPoint.cpp	/^void FPS::setupBlockStack() {$/;"	f	class:FPS
setupEntryBlockAndCallSites	CodeGen/SjLjEHPrepare.cpp	/^bool SjLjEHPrepare::setupEntryBlockAndCallSites(Function &F) {$/;"	f	class:SjLjEHPrepare
setupFunctionContext	CodeGen/SjLjEHPrepare.cpp	/^setupFunctionContext(Function &F, ArrayRef<LandingPadInst*> LPads) {$/;"	f	class:SjLjEHPrepare
severSplitPHINodes	Transforms/Utils/CodeExtractor.cpp	/^void CodeExtractor::severSplitPHINodes(BasicBlock *&Header) {$/;"	f	class:CodeExtractor
sext	Support/APInt.cpp	/^APInt APInt::sext(unsigned width) const {$/;"	f	class:APInt
sextOrSelf	Support/APInt.cpp	/^APInt APInt::sextOrSelf(unsigned width) const {$/;"	f	class:APInt
sextOrTrunc	Support/APInt.cpp	/^APInt APInt::sextOrTrunc(unsigned width) const {$/;"	f	class:APInt
sextOrTrunc	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::sextOrTrunc(uint32_t DstTySize) const {$/;"	f	class:ConstantRange
shiftRight	Support/APFloat.cpp	/^shiftRight(integerPart *dst, unsigned int parts, unsigned int bits)$/;"	f	file:
shiftSignificandLeft	Support/APFloat.cpp	/^APFloat::shiftSignificandLeft(unsigned int bits)$/;"	f	class:APFloat
shiftSignificandRight	Support/APFloat.cpp	/^APFloat::shiftSignificandRight(unsigned int bits)$/;"	f	class:APFloat
shl	Support/APInt.cpp	/^APInt APInt::shl(const APInt &shiftAmt) const {$/;"	f	class:APInt
shl	Support/ConstantRange.cpp	/^ConstantRange::shl(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
shlSlowCase	Support/APInt.cpp	/^APInt APInt::shlSlowCase(unsigned shiftAmt) const {$/;"	f	class:APInt
shorter_filter	Transforms/InstCombine/InstructionCombining.cpp	/^static bool shorter_filter(const Value *LHS, const Value *RHS) {$/;"	f	file:
shouldConvertIf	CodeGen/EarlyIfConversion.cpp	/^bool EarlyIfConverter::shouldConvertIf() {$/;"	f	class:EarlyIfConverter
shouldEmitLSDA	CodeGen/AsmPrinter/DwarfException.h	/^  bool shouldEmitLSDA;$/;"	m	class:llvm::DwarfCFIException
shouldEmitLSDA	CodeGen/AsmPrinter/DwarfException.h	/^  bool shouldEmitLSDA;$/;"	m	class:llvm::Win64Exception
shouldEmitMoves	CodeGen/AsmPrinter/DwarfException.h	/^  bool shouldEmitMoves;$/;"	m	class:llvm::DwarfCFIException
shouldEmitMoves	CodeGen/AsmPrinter/DwarfException.h	/^  bool shouldEmitMoves;$/;"	m	class:llvm::Win64Exception
shouldEmitPersonality	CodeGen/AsmPrinter/DwarfException.h	/^  bool shouldEmitPersonality;$/;"	m	class:llvm::DwarfCFIException
shouldEmitPersonality	CodeGen/AsmPrinter/DwarfException.h	/^  bool shouldEmitPersonality;$/;"	m	class:llvm::Win64Exception
shouldEmitUsedDirectiveFor	CodeGen/TargetLoweringObjectFileImpl.cpp	/^shouldEmitUsedDirectiveFor(const GlobalValue *GV, Mangler *Mang) const {$/;"	f	class:TargetLoweringObjectFileMachO
shouldEvict	CodeGen/RegAllocGreedy.cpp	/^bool RAGreedy::shouldEvict(LiveInterval &A, bool IsHint,$/;"	f	class:RAGreedy
shouldExplore	Analysis/AliasAnalysis.cpp	/^    bool shouldExplore(Use *U) {$/;"	f	struct:__anon21::CapturesBefore
shouldExplore	Analysis/CaptureTracking.cpp	/^bool CaptureTracker::shouldExplore(Use *U) { return true; }$/;"	f	class:CaptureTracker
shouldExplore	Transforms/Scalar/TailRecursionElimination.cpp	/^  bool shouldExplore(Use *U) {$/;"	f	struct:AllocaCaptureTracker
shouldInline	Transforms/IPO/Inliner.cpp	/^bool Inliner::shouldInline(CallSite CS) {$/;"	f	class:Inliner
shouldMergeGEPs	Transforms/InstCombine/InstructionCombining.cpp	/^static bool shouldMergeGEPs(GEPOperator &GEP, GEPOperator &Src) {$/;"	f	file:
shouldOmitCCOutOperand	Target/ARM/AsmParser/ARMAsmParser.cpp	/^bool ARMAsmParser::shouldOmitCCOutOperand(StringRef Mnemonic,$/;"	f	class:ARMAsmParser
shouldRestoreSPFromFP	Target/ARM/ARMMachineFunctionInfo.h	/^  bool shouldRestoreSPFromFP() const { return RestoreSPFromFP; }$/;"	f	class:llvm::ARMFunctionInfo
shouldScheduleLoadsNear	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::shouldScheduleLoadsNear(SDNode *Load1, SDNode *Load2,$/;"	f	class:ARMBaseInstrInfo
shouldScheduleLoadsNear	Target/X86/X86InstrInfo.cpp	/^bool X86InstrInfo::shouldScheduleLoadsNear(SDNode *Load1, SDNode *Load2,$/;"	f	class:X86InstrInfo
shouldSpeculateInstrs	Transforms/Scalar/LoopRotation.cpp	/^static bool shouldSpeculateInstrs(BasicBlock::iterator Begin,$/;"	f	file:
shouldSplitSingleBlock	CodeGen/SplitKit.cpp	/^bool SplitAnalysis::shouldSplitSingleBlock(const BlockInfo &BI,$/;"	f	class:SplitAnalysis
shouldTailDuplicate	CodeGen/TailDuplication.cpp	/^TailDuplicatePass::shouldTailDuplicate(const MachineFunction &MF,$/;"	f	class:TailDuplicatePass
shouldUseMmap	Support/MemoryBuffer.cpp	/^static bool shouldUseMmap(int FD,$/;"	f	file:
should_keep	MC/WinCOFFObjectWriter.cpp	/^bool COFFSymbol::should_keep() const {$/;"	f	class:COFFSymbol
shrinkTo	Bitcode/Reader/BitcodeReader.h	/^  void shrinkTo(unsigned N) {$/;"	f	class:llvm::BitcodeReaderMDValueList
shrinkTo	Bitcode/Reader/BitcodeReader.h	/^  void shrinkTo(unsigned N) {$/;"	f	class:llvm::BitcodeReaderValueList
shrinkToUses	CodeGen/LiveIntervalAnalysis.cpp	/^bool LiveIntervals::shrinkToUses(LiveInterval *li,$/;"	f	class:LiveIntervals
shrink_and_clear	Support/SmallPtrSet.cpp	/^void SmallPtrSetImpl::shrink_and_clear() {$/;"	f	class:SmallPtrSetImpl
shuffleStackTop	Target/X86/X86FloatingPoint.cpp	/^void FPS::shuffleStackTop(const unsigned char *FixStack,$/;"	f	class:FPS
sib	Target/X86/Disassembler/X86Disassembler.cpp	/^    sib   = 504,$/;"	e	enum:llvm::X86::__anon362	file:
sib	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t                       sib;$/;"	m	struct:InternalInstruction
sib64	Target/X86/Disassembler/X86Disassembler.cpp	/^    sib64 = 505$/;"	e	enum:llvm::X86::__anon362	file:
sibBase	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SIBBase                       sibBase;$/;"	m	struct:InternalInstruction
sibIndex	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  SIBIndex                      sibIndex;$/;"	m	struct:InternalInstruction
sibScale	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t                       sibScale;$/;"	m	struct:InternalInstruction
signExtend	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::signExtend(uint32_t DstTySize) const {$/;"	f	class:ConstantRange
significandLSB	Support/APFloat.cpp	/^APFloat::significandLSB() const$/;"	f	class:APFloat
significandMSB	Support/APFloat.cpp	/^APFloat::significandMSB() const$/;"	f	class:APFloat
significandParts	Support/APFloat.cpp	/^APFloat::significandParts() const$/;"	f	class:APFloat
significandParts	Support/APFloat.cpp	/^APFloat::significandParts()$/;"	f	class:APFloat
simplifyLoopIVs	Transforms/Utils/SimplifyIndVar.cpp	/^bool simplifyLoopIVs(Loop *L, ScalarEvolution *SE, LPPassManager *LPM,$/;"	f	namespace:llvm
simplifyLoopLatch	Transforms/Scalar/LoopRotation.cpp	/^void LoopRotate::simplifyLoopLatch(Loop *L) {$/;"	f	class:LoopRotate
simplifyUsers	Transforms/Utils/SimplifyIndVar.cpp	/^void SimplifyIndvar::simplifyUsers(PHINode *CurrIV, IVVisitor *V) {$/;"	f	class:SimplifyIndvar
simplifyUsersOfIV	Transforms/Utils/SimplifyIndVar.cpp	/^bool simplifyUsersOfIV(PHINode *CurrIV, ScalarEvolution *SE, LPPassManager *LPM,$/;"	f	namespace:llvm
simplifyValueKnownNonZero	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^static Value *simplifyValueKnownNonZero(Value *V, InstCombiner &IC) {$/;"	f	file:
sink	Transforms/Scalar/LICM.cpp	/^void LICM::sink(Instruction &I) {$/;"	f	class:LICM
size	Archive/ArchiveInternals.h	/^      char size[10];  \/\/\/< file size in ASCII decimal$/;"	m	class:llvm::ArchiveMemberHeader
size	Bitcode/Reader/BitcodeReader.h	/^  unsigned size() const       { return MDValuePtrs.size(); }$/;"	f	class:llvm::BitcodeReaderMDValueList
size	Bitcode/Reader/BitcodeReader.h	/^  unsigned size() const { return ValuePtrs.size(); }$/;"	f	class:llvm::BitcodeReaderValueList
size	CodeGen/LiveIntervalUnion.h	/^    unsigned size() const { return Size; }$/;"	f	class:llvm::LiveIntervalUnion::Array
size	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^    APInt size() const {$/;"	f	struct:llvm::SelectionDAGBuilder::Case
size	MC/WinCOFFObjectWriter.cpp	/^  static size_t size() { return COFF::RelocationSize; }$/;"	f	struct:__anon222::COFFRelocation
size	MC/WinCOFFObjectWriter.cpp	/^size_t COFFSection::size() {$/;"	f	class:COFFSection
size	MC/WinCOFFObjectWriter.cpp	/^size_t COFFSymbol::size() const {$/;"	f	class:COFFSymbol
size	MC/WinCOFFObjectWriter.cpp	/^size_t StringTable::size() const {$/;"	f	class:StringTable
size	Target/NVPTX/NVPTXAsmPrinter.h	/^    unsigned size;   \/\/ size of the buffer in bytes$/;"	m	class:llvm::NVPTXAsmPrinter::AggBuffer
skip	Support/YAMLParser.cpp	/^bool Document::skip()  {$/;"	f	class:Document
skip	Support/YAMLParser.cpp	/^void Scanner::skip(uint32_t Distance) {$/;"	f	class:Scanner
skip	Support/YAMLParser.cpp	/^void Stream::skip() {$/;"	f	class:Stream
skipAlignedDPRCS2Spills	Target/ARM/ARMFrameLowering.cpp	/^skipAlignedDPRCS2Spills(MachineBasicBlock::iterator MI,$/;"	f	file:
skipLeadingZeroesAndAnyDot	Support/APFloat.cpp	/^skipLeadingZeroesAndAnyDot(StringRef::iterator begin, StringRef::iterator end,$/;"	f	file:
skipPointerTransfer	Target/NVPTX/NVPTXUtilities.cpp	/^const Value *llvm::skipPointerTransfer(const Value *V,$/;"	f	class:llvm
skipValue	DebugInfo/DWARFFormValue.cpp	/^DWARFFormValue::skipValue(DataExtractor debug_info_data, uint32_t* offset_ptr,$/;"	f	class:DWARFFormValue
skipValue	DebugInfo/DWARFFormValue.cpp	/^DWARFFormValue::skipValue(uint16_t form, DataExtractor debug_info_data,$/;"	f	class:DWARFFormValue
skip_b_break	Support/YAMLParser.cpp	/^StringRef::iterator Scanner::skip_b_break(StringRef::iterator Position) {$/;"	f	class:Scanner
skip_nb_char	Support/YAMLParser.cpp	/^StringRef::iterator Scanner::skip_nb_char(StringRef::iterator Position) {$/;"	f	class:Scanner
skip_ns_char	Support/YAMLParser.cpp	/^StringRef::iterator Scanner::skip_ns_char(StringRef::iterator Position) {$/;"	f	class:Scanner
skip_s_white	Support/YAMLParser.cpp	/^StringRef::iterator Scanner::skip_s_white(StringRef::iterator Position) {$/;"	f	class:Scanner
skip_while	Support/YAMLParser.cpp	/^StringRef::iterator Scanner::skip_while( SkipWhileFunc Func$/;"	f	class:Scanner
slen	Support/regcomp.c	/^	sopno slen;		\/* malloced strip length (used) *\/$/;"	m	struct:parse	file:
slt	Support/APInt.cpp	/^bool APInt::slt(const APInt& RHS) const {$/;"	f	class:APInt
smax	Support/ConstantRange.cpp	/^ConstantRange::smax(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
smul_ov	Support/APInt.cpp	/^APInt APInt::smul_ov(const APInt &RHS, bool &Overflow) const {$/;"	f	class:APInt
smultis	Support/regex2.h	/^	size_t smultis;$/;"	m	struct:__anon232
snprintf	Support/regerror.c	49;"	d	file:
solve	Analysis/LazyValueInfo.cpp	/^void LazyValueInfoCache::solve() {$/;"	f	class:LazyValueInfoCache
solveBlockValue	Analysis/LazyValueInfo.cpp	/^bool LazyValueInfoCache::solveBlockValue(Value *Val, BasicBlock *BB) {$/;"	f	class:LazyValueInfoCache
solveBlockValueConstantRange	Analysis/LazyValueInfo.cpp	/^bool LazyValueInfoCache::solveBlockValueConstantRange(LVILatticeVal &BBLV,$/;"	f	class:LazyValueInfoCache
solveBlockValueNonLocal	Analysis/LazyValueInfo.cpp	/^bool LazyValueInfoCache::solveBlockValueNonLocal(LVILatticeVal &BBLV,$/;"	f	class:LazyValueInfoCache
solveBlockValuePHINode	Analysis/LazyValueInfo.cpp	/^bool LazyValueInfoCache::solveBlockValuePHINode(LVILatticeVal &BBLV,$/;"	f	class:LazyValueInfoCache
sop	Support/regex2.h	/^typedef unsigned long sop;	\/* strip operator *\/$/;"	t
sopno	Support/regex2.h	/^typedef long sopno;$/;"	t
sort	DebugInfo/DWARFDebugAranges.cpp	/^void DWARFDebugAranges::sort(bool minimize, uint32_t n) {$/;"	f	class:DWARFDebugAranges
sortOpts	Support/CommandLine.cpp	/^sortOpts(StringMap<Option*> &OptMap,$/;"	f	file:
sortRelocs	MC/MCELFObjectTargetWriter.cpp	/^MCELFObjectTargetWriter::sortRelocs(const MCAssembler &Asm,$/;"	f	class:MCELFObjectTargetWriter
sortRelocs	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^void MipsELFObjectWriter::sortRelocs(const MCAssembler &Asm,$/;"	f	class:MipsELFObjectWriter
sorted	ExecutionEngine/JIT/JIT.cpp	/^      unsigned long sorted : 1;$/;"	m	struct:__anon185::LibgccObject::__anon186::__anon187	file:
source_file_name	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    char*               source_file_name;       $/;"	m	struct:_iJIT_Method_Load
spec	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  const struct InstructionSpecifier *spec;$/;"	m	struct:InternalInstruction	typeref:struct:InternalInstruction::InstructionSpecifier
specifierForUID	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static const struct InstructionSpecifier *specifierForUID(InstrUID uid) {$/;"	f	file:
spill	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::spill(LiveRangeEdit &edit) {$/;"	f	class:InlineSpiller
spill	CodeGen/Spiller.cpp	/^  void spill(LiveRangeEdit &LRE) {$/;"	f	class:__anon144::TrivialSpiller
spillAll	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::spillAll() {$/;"	f	class:InlineSpiller
spillAll	CodeGen/RegAllocFast.cpp	/^void RAFast::spillAll(MachineInstr *MI) {$/;"	f	class:RAFast
spillAroundUses	CodeGen/InlineSpiller.cpp	/^void InlineSpiller::spillAroundUses(unsigned Reg) {$/;"	f	class:InlineSpiller
spillCalleeSavedRegisters	Target/ARM/ARMFrameLowering.cpp	/^bool ARMFrameLowering::spillCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:ARMFrameLowering
spillCalleeSavedRegisters	Target/ARM/Thumb1FrameLowering.cpp	/^spillCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:Thumb1FrameLowering
spillCalleeSavedRegisters	Target/Hexagon/HexagonFrameLowering.cpp	/^HexagonFrameLowering::spillCalleeSavedRegisters($/;"	f	class:HexagonFrameLowering
spillCalleeSavedRegisters	Target/MSP430/MSP430FrameLowering.cpp	/^MSP430FrameLowering::spillCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:MSP430FrameLowering
spillCalleeSavedRegisters	Target/Mips/Mips16FrameLowering.cpp	/^spillCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:Mips16FrameLowering
spillCalleeSavedRegisters	Target/Mips/MipsSEFrameLowering.cpp	/^spillCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:MipsSEFrameLowering
spillCalleeSavedRegisters	Target/PowerPC/PPCFrameLowering.cpp	/^PPCFrameLowering::spillCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:PPCFrameLowering
spillCalleeSavedRegisters	Target/X86/X86FrameLowering.cpp	/^bool X86FrameLowering::spillCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:X86FrameLowering
spillCalleeSavedRegisters	Target/XCore/XCoreFrameLowering.cpp	/^bool XCoreFrameLowering::spillCalleeSavedRegisters(MachineBasicBlock &MBB,$/;"	f	class:XCoreFrameLowering
spillClean	CodeGen/RegAllocFast.cpp	/^      spillClean = 1,$/;"	e	enum:__anon140::RAFast::__anon141	file:
spillDirty	CodeGen/RegAllocFast.cpp	/^      spillDirty = 100,$/;"	e	enum:__anon140::RAFast::__anon141	file:
spillImpossible	CodeGen/RegAllocFast.cpp	/^      spillImpossible = ~0u$/;"	e	enum:__anon140::RAFast::__anon141	file:
spillInterferences	CodeGen/RegAllocBasic.cpp	/^bool RABasic::spillInterferences(LiveInterval &VirtReg, unsigned PhysReg,$/;"	f	class:RABasic
spillVirtReg	CodeGen/RegAllocFast.cpp	/^void RAFast::spillVirtReg(MachineBasicBlock::iterator MI, unsigned VirtReg) {$/;"	f	class:RAFast
spillVirtReg	CodeGen/RegAllocFast.cpp	/^void RAFast::spillVirtReg(MachineBasicBlock::iterator MI,$/;"	f	class:RAFast
spiller	CodeGen/RegAllocBasic.cpp	/^  virtual Spiller &spiller() { return *SpillerInstance; }$/;"	f	class:__anon122::RABasic
spiller	CodeGen/RegAllocGreedy.cpp	/^  virtual Spiller &spiller() { return *SpillerInstance; }$/;"	f	class:__anon158::RAGreedy
spiller	CodeGen/RegAllocPBQP.cpp	/^  std::auto_ptr<Spiller> spiller;$/;"	m	class:__anon135::RegAllocPBQP	file:
spillsCR	Target/PowerPC/PPCFrameLowering.cpp	/^static bool spillsCR(const MachineFunction &MF) {$/;"	f	file:
splice	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::splice(MachineBasicBlock::iterator where,$/;"	f	class:MachineBasicBlock
spliceFunction	Analysis/IPA/CallGraph.cpp	/^void CallGraph::spliceFunction(const Function *From, const Function *To) {$/;"	f	class:CallGraph
split	MC/MCAtom.cpp	/^MCAtom *MCAtom::split(uint64_t SplitPt) {$/;"	f	class:MCAtom
split	Support/StringRef.cpp	/^void StringRef::split(SmallVectorImpl<StringRef> &A,$/;"	f	class:StringRef
splitAlloca	Transforms/Scalar/SROA.cpp	/^bool SROA::splitAlloca(AllocaInst &AI, AllocaPartitioning &P) {$/;"	f	class:SROA
splitAndMergePartitions	Transforms/Scalar/SROA.cpp	/^void AllocaPartitioning::splitAndMergePartitions() {$/;"	f	class:AllocaPartitioning
splitAroundRegion	CodeGen/RegAllocGreedy.cpp	/^void RAGreedy::splitAroundRegion(LiveRangeEdit &LREdit,$/;"	f	class:RAGreedy
splitBasicBlock	VMCore/BasicBlock.cpp	/^BasicBlock *BasicBlock::splitBasicBlock(iterator I, const Twine &BBName) {$/;"	f	class:BasicBlock
splitBlock	Analysis/ProfileInfo.cpp	/^void ProfileInfoT<Function,BasicBlock>::splitBlock(const BasicBlock *BB,$/;"	f	class:llvm::ProfileInfoT
splitBlock	Analysis/ProfileInfo.cpp	/^void ProfileInfoT<Function,BasicBlock>::splitBlock(const BasicBlock *Old,$/;"	f	class:llvm::ProfileInfoT
splitBlock	Analysis/RegionInfo.cpp	/^void RegionInfo::splitBlock(BasicBlock* NewBB, BasicBlock *OldBB)$/;"	f	class:RegionInfo
splitBlockBeforeInstr	Target/ARM/ARMConstantIslandPass.cpp	/^MachineBasicBlock *ARMConstantIslands::splitBlockBeforeInstr(MachineInstr *MI) {$/;"	f	class:ARMConstantIslands
splitCritical	Transforms/Instrumentation/PathProfiling.cpp	/^bool PathProfiler::splitCritical(BLInstrumentationEdge* edge,$/;"	f	class:PathProfiler
splitCriticalEdges	Transforms/Scalar/GVN.cpp	/^bool GVN::splitCriticalEdges() {$/;"	f	class:GVN
splitEdge	Analysis/ProfileInfo.cpp	/^void ProfileInfoT<Function,BasicBlock>::splitEdge(const BasicBlock *FirstBB,$/;"	f	class:llvm::ProfileInfoT
splitLiveRangesLiveAcrossInvokes	Transforms/Utils/LowerInvoke.cpp	/^splitLiveRangesLiveAcrossInvokes(SmallVectorImpl<InvokeInst*> &Invokes) {$/;"	f	class:LowerInvoke
splitLiveThroughBlock	CodeGen/SplitKit.cpp	/^void SplitEditor::splitLiveThroughBlock(unsigned MBBNum,$/;"	f	class:SplitEditor
splitLocation	CodeGen/LiveDebugVariables.cpp	/^UserValue::splitLocation(unsigned OldLocNo, ArrayRef<LiveInterval*> NewRegs) {$/;"	f	class:UserValue
splitMBB	Target/Mips/MipsLongBranch.cpp	/^void MipsLongBranch::splitMBB(MachineBasicBlock *MBB) {$/;"	f	class:MipsLongBranch
splitMnemonic	Target/ARM/AsmParser/ARMAsmParser.cpp	/^StringRef ARMAsmParser::splitMnemonic(StringRef Mnemonic,$/;"	f	class:ARMAsmParser
splitRegInBlock	CodeGen/SplitKit.cpp	/^void SplitEditor::splitRegInBlock(const SplitAnalysis::BlockInfo &BI,$/;"	f	class:SplitEditor
splitRegOutBlock	CodeGen/SplitKit.cpp	/^void SplitEditor::splitRegOutBlock(const SplitAnalysis::BlockInfo &BI,$/;"	f	class:SplitEditor
splitRegister	CodeGen/LiveDebugVariables.cpp	/^UserValue::splitRegister(unsigned OldReg, ArrayRef<LiveInterval*> NewRegs) {$/;"	f	class:UserValue
splitRegister	CodeGen/LiveDebugVariables.cpp	/^splitRegister(unsigned OldReg, ArrayRef<LiveInterval*> NewRegs) {$/;"	f	class:LiveDebugVariables
splitRegister	CodeGen/LiveDebugVariables.cpp	/^void LDVImpl::splitRegister(unsigned OldReg, ArrayRef<LiveInterval*> NewRegs) {$/;"	f	class:LDVImpl
splitReturnBlocks	Transforms/Utils/CodeExtractor.cpp	/^void CodeExtractor::splitReturnBlocks() {$/;"	f	class:CodeExtractor
splitSingleBlock	CodeGen/SplitKit.cpp	/^void SplitEditor::splitSingleBlock(const SplitAnalysis::BlockInfo &BI) {$/;"	f	class:SplitEditor
splitUpdate	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::splitUpdate(BLInstrumentationEdge* formerEdge,$/;"	f	class:BLInstrumentationDag
sqrt	Support/APInt.cpp	/^APInt APInt::sqrt() const {$/;"	f	class:APInt
srand	Transforms/Utils/MetaRenamer.cpp	/^    void srand(unsigned int seed) {$/;"	f	struct:__anon472::PRNG
srcMgrDiagHandler	CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp	/^static void srcMgrDiagHandler(const SMDiagnostic &Diag, void *diagInfo) {$/;"	f	file:
src_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  src_ls_rr_sort(RegReductionPQBase *spq)$/;"	f	struct:__anon77::src_ls_rr_sort
src_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  src_ls_rr_sort(const src_ls_rr_sort &RHS)$/;"	f	struct:__anon77::src_ls_rr_sort
src_ls_rr_sort	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^struct src_ls_rr_sort : public queue_sort {$/;"	s	namespace:__anon77	file:
sshl_ov	Support/APInt.cpp	/^APInt APInt::sshl_ov(unsigned ShAmt, bool &Overflow) const {$/;"	f	class:APInt
ssize	Support/regcomp.c	/^	sopno ssize;		\/* malloced strip size (allocated) *\/$/;"	m	struct:parse	file:
ssub_ov	Support/APInt.cpp	/^APInt APInt::ssub_ov(const APInt &RHS, bool &Overflow) const {$/;"	f	class:APInt
stackAlignment	Target/ARM/ARMSubtarget.h	/^  unsigned stackAlignment;$/;"	m	class:llvm::ARMSubtarget
stackAlignment	Target/X86/X86Subtarget.h	/^  unsigned stackAlignment;$/;"	m	class:llvm::X86Subtarget
stackGrowthDirection	ExecutionEngine/JIT/JITDwarfEmitter.h	/^  bool stackGrowthDirection;$/;"	m	class:llvm::JITDwarfEmitter
stackPointers	MC/MCDisassembler/EDDisassembler.h	/^  std::set<unsigned> stackPointers;$/;"	m	struct:llvm::EDDisassembler
stackSlotSize	Target/CellSPU/SPUFrameLowering.h	/^    static int stackSlotSize() {$/;"	f	class:llvm::SPUFrameLowering
stackSlotSize	Target/XCore/XCoreFrameLowering.h	/^    static int stackSlotSize() {$/;"	f	class:llvm::XCoreFrameLowering
stack_id	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int       stack_id;               $/;"	m	struct:_iJIT_Method_NIDS
star	AsmParser/LLToken.h	/^    star,              \/\/ *$/;"	e	enum:llvm::lltok::Kind
startBlock	CodeGen/PostRASchedulerList.cpp	/^void SchedulePostRATDList::startBlock(MachineBasicBlock *BB) {$/;"	f	class:SchedulePostRATDList
startBlock	CodeGen/ScheduleDAGInstrs.cpp	/^void ScheduleDAGInstrs::startBlock(MachineBasicBlock *bb) {$/;"	f	class:ScheduleDAGInstrs
startExceptionTable	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uint8_t* startExceptionTable(const Function* F, uintptr_t &ActualSize) {$/;"	f	class:__anon190::DefaultJITMemoryManager
startFunction	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::startFunction(MachineFunction &F) {$/;"	f	class:JITEmitter
startFunctionBody	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    uint8_t *startFunctionBody(const Function *F, uintptr_t &ActualSize) {$/;"	f	class:__anon190::DefaultJITMemoryManager
startGVStub	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::startGVStub(const GlobalValue* GV,$/;"	f	class:JITEmitter
startGVStub	ExecutionEngine/JIT/JITEmitter.cpp	/^void JITEmitter::startGVStub(void *Buffer, unsigned StubSize) {$/;"	f	class:JITEmitter
startIndex	CodeGen/LiveIntervalUnion.h	/^  SlotIndex startIndex() const { return Segments.start(); }$/;"	f	class:llvm::LiveIntervalUnion
startLocation	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint64_t startLocation;$/;"	m	struct:InternalInstruction
startNewBlock	CodeGen/SelectionDAG/FastISel.cpp	/^void FastISel::startNewBlock() {$/;"	f	class:FastISel
startTimer	Support/Timer.cpp	/^void Timer::startTimer() {$/;"	f	class:Timer
state	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_collection_state state;$/;"	m	struct:___itt_global
state	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_thread_state state;   \/*!< Thread state (paused or normal) *\/$/;"	m	struct:___itt_thread_info
state	ExecutionEngine/JIT/JITEmitter.cpp	/^    JITResolverState state;$/;"	m	class:__anon182::JITResolver	file:
states	Support/regexec.c	106;"	d	file:
states	Support/regexec.c	59;"	d	file:
states	Support/regexec.c	85;"	d	file:
states1	Support/regexec.c	58;"	d	file:
stats	MC/MCAssembler.cpp	/^namespace stats {$/;"	n	namespace:__anon216	file:
stats	MC/MCExpr.cpp	/^namespace stats {$/;"	n	namespace:__anon220	file:
status	Support/PathV2.cpp	/^error_code directory_entry::status(file_status &result) const {$/;"	f	class:llvm::sys::fs::directory_entry
status_known	Support/PathV2.cpp	/^bool status_known(file_status s) {$/;"	f	namespace:llvm::sys::fs
stem	Support/PathV2.cpp	/^const StringRef stem(StringRef path) {$/;"	f	namespace:llvm::sys::path
stopTimer	Support/Timer.cpp	/^void Timer::stopTimer() {$/;"	f	class:Timer
storeRegToAddr	Target/Hexagon/HexagonInstrInfo.cpp	/^void HexagonInstrInfo::storeRegToAddr($/;"	f	class:HexagonInstrInfo
storeRegToAddr	Target/X86/X86InstrInfo.cpp	/^void X86InstrInfo::storeRegToAddr(MachineFunction &MF, unsigned SrcReg,$/;"	f	class:X86InstrInfo
storeRegToStackSlot	Target/ARM/ARMBaseInstrInfo.cpp	/^storeRegToStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:ARMBaseInstrInfo
storeRegToStackSlot	Target/ARM/Thumb1InstrInfo.cpp	/^storeRegToStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:Thumb1InstrInfo
storeRegToStackSlot	Target/ARM/Thumb2InstrInfo.cpp	/^storeRegToStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:Thumb2InstrInfo
storeRegToStackSlot	Target/CellSPU/SPUInstrInfo.cpp	/^SPUInstrInfo::storeRegToStackSlot(MachineBasicBlock &MBB,$/;"	f	class:SPUInstrInfo
storeRegToStackSlot	Target/Hexagon/HexagonInstrInfo.cpp	/^storeRegToStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:HexagonInstrInfo
storeRegToStackSlot	Target/MBlaze/MBlazeInstrInfo.cpp	/^storeRegToStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:MBlazeInstrInfo
storeRegToStackSlot	Target/MSP430/MSP430InstrInfo.cpp	/^void MSP430InstrInfo::storeRegToStackSlot(MachineBasicBlock &MBB,$/;"	f	class:MSP430InstrInfo
storeRegToStackSlot	Target/Mips/Mips16InstrInfo.cpp	/^storeRegToStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:Mips16InstrInfo
storeRegToStackSlot	Target/Mips/MipsSEInstrInfo.cpp	/^storeRegToStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:MipsSEInstrInfo
storeRegToStackSlot	Target/PowerPC/PPCInstrInfo.cpp	/^PPCInstrInfo::storeRegToStackSlot(MachineBasicBlock &MBB,$/;"	f	class:PPCInstrInfo
storeRegToStackSlot	Target/Sparc/SparcInstrInfo.cpp	/^storeRegToStackSlot(MachineBasicBlock &MBB, MachineBasicBlock::iterator I,$/;"	f	class:SparcInstrInfo
storeRegToStackSlot	Target/X86/X86InstrInfo.cpp	/^void X86InstrInfo::storeRegToStackSlot(MachineBasicBlock &MBB,$/;"	f	class:X86InstrInfo
storeRegToStackSlot	Target/XCore/XCoreInstrInfo.cpp	/^void XCoreInstrInfo::storeRegToStackSlot(MachineBasicBlock &MBB,$/;"	f	class:XCoreInstrInfo
storeToStack	Target/XCore/XCoreFrameLowering.cpp	/^static void storeToStack(MachineBasicBlock &MBB,$/;"	f	file:
str	Support/Twine.cpp	/^std::string Twine::str() const {$/;"	f	class:Twine
str	Support/raw_ostream.cpp	/^StringRef raw_svector_ostream::str() {$/;"	f	class:raw_svector_ostream
str	TableGen/Record.cpp	/^  const std::string &str() const { return data; }$/;"	f	class:llvm::TableGenStringKey
string	MC/MCDisassembler/EDToken.cpp	/^StringRef EDToken::string() const {$/;"	f	class:EDToken
string_list	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    struct ___itt_string_handle* string_list;$/;"	m	struct:___itt_global	typeref:struct:___itt_global::___itt_string_handle
stringify	MC/MCDisassembler/EDInst.cpp	/^int EDInst::stringify() {$/;"	f	class:EDInst
stringifyCSRegSet	CodeGen/ShrinkWrapping.cpp	/^std::string PEI::stringifyCSRegSet(const CSRegSet& s) {$/;"	f	class:PEI
strip	Support/regcomp.c	/^	sop *strip;		\/* malloced strip *\/$/;"	m	struct:parse	file:
strip	Support/regex2.h	/^	sop *strip;		\/* malloced area for strip *\/$/;"	m	struct:re_guts
stripAggregateTypeWrapping	Transforms/Scalar/SROA.cpp	/^static Type *stripAggregateTypeWrapping(const DataLayout &DL, Type *Ty) {$/;"	f	file:
stripAndComputeConstantOffsets	Analysis/InstructionSimplify.cpp	/^static Constant *stripAndComputeConstantOffsets(const DataLayout &TD,$/;"	f	file:
stripAndComputeInBoundsConstantOffsets	Analysis/InlineCost.cpp	/^ConstantInt *CallAnalyzer::stripAndComputeInBoundsConstantOffsets(Value *&V) {$/;"	f	class:CallAnalyzer
stripCopies	CodeGen/RegisterCoalescer.cpp	/^VNInfo *JoinVals::stripCopies(VNInfo *VNI) {$/;"	f	class:JoinVals
stripInBoundsConstantOffsets	VMCore/Value.cpp	/^Value *Value::stripInBoundsConstantOffsets() {$/;"	f	class:Value
stripInBoundsOffsets	VMCore/Value.cpp	/^Value *Value::stripInBoundsOffsets() {$/;"	f	class:Value
stripPointerCasts	VMCore/Value.cpp	/^Value *Value::stripPointerCasts() {$/;"	f	class:Value
stripPointerCastsAndOffsets	VMCore/Value.cpp	/^static Value *stripPointerCastsAndOffsets(Value *V) {$/;"	f	namespace:__anon618
stripRegisterPrefix	Target/PowerPC/InstPrinter/PPCInstPrinter.cpp	/^static const char *stripRegisterPrefix(const char *RegName) {$/;"	f	file:
stripRegisterPrefix	Target/PowerPC/PPCAsmPrinter.cpp	/^static const char *stripRegisterPrefix(const char *RegName) {$/;"	f	file:
stripsnug	Support/regcomp.c	/^stripsnug(struct parse *p, struct re_guts *g)$/;"	f	file:
strongSIVtest	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::strongSIVtest(const SCEV *Coeff,$/;"	f	class:DependenceAnalysis
strong_alias	ExecutionEngine/IntelJITEvents/ittnotify_config.h	182;"	d
strong_alias	ExecutionEngine/IntelJITEvents/ittnotify_config.h	198;"	d
sub	Support/APInt.cpp	/^static bool sub(uint64_t *dest, const uint64_t *x, const uint64_t *y,$/;"	f	file:
sub	Support/ConstantRange.cpp	/^ConstantRange::sub(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
sub	Support/Regex.cpp	/^std::string Regex::sub(StringRef Repl, StringRef String,$/;"	f	class:Regex
sub	Target/ARM/MCTargetDesc/ARMAddressingModes.h	/^    sub = 0,$/;"	e	enum:llvm::ARM_AM::AddrOpc
sub_1	Support/APInt.cpp	/^static bool sub_1(uint64_t x[], unsigned len, uint64_t y) {$/;"	f	file:
subclassdata	VMCore/ConstantsContext.h	/^  uint16_t subclassdata;$/;"	m	struct:llvm::ExprMapKeyType
subclassoptionaldata	VMCore/ConstantsContext.h	/^  uint8_t subclassoptionaldata;$/;"	m	struct:llvm::ExprMapKeyType
substPhysReg	CodeGen/MachineInstr.cpp	/^void MachineOperand::substPhysReg(unsigned Reg, const TargetRegisterInfo &TRI) {$/;"	f	class:MachineOperand
substVirtReg	CodeGen/MachineInstr.cpp	/^void MachineOperand::substVirtReg(unsigned Reg, unsigned SubIdx,$/;"	f	class:MachineOperand
substituteLPadValues	CodeGen/SjLjEHPrepare.cpp	/^void SjLjEHPrepare::substituteLPadValues(LandingPadInst *LPI, Value *ExnVal,$/;"	f	class:SjLjEHPrepare
substitutePass	CodeGen/Passes.cpp	/^void TargetPassConfig::substitutePass(AnalysisID StandardID,$/;"	f	class:TargetPassConfig
substituteRegister	CodeGen/MachineInstr.cpp	/^void MachineInstr::substituteRegister(unsigned FromReg,$/;"	f	class:MachineInstr
subtract	Support/APFloat.cpp	/^APFloat::subtract(const APFloat &rhs, roundingMode rounding_mode)$/;"	f	class:APFloat
subtract	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::subtract(const APInt &Val) const {$/;"	f	class:ConstantRange
subtractSignificand	Support/APFloat.cpp	/^APFloat::subtractSignificand(const APFloat &rhs, integerPart borrow)$/;"	f	class:APFloat
succBegin	Analysis/PathNumbering.cpp	/^BLEdgeIterator BallLarusNode::succBegin() {$/;"	f	class:BallLarusNode
succEnd	Analysis/PathNumbering.cpp	/^BLEdgeIterator BallLarusNode::succEnd() {$/;"	f	class:BallLarusNode
succ_begin	Support/DAGDeltaAlgorithm.cpp	/^  succ_iterator_ty succ_begin(change_ty Node) {$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
succ_begin	Transforms/Scalar/ObjCARC.cpp	/^    edge_iterator succ_begin() { return Succs.begin(); }$/;"	f	class:__anon507::BBState
succ_closure_begin	Support/DAGDeltaAlgorithm.cpp	/^  succ_closure_iterator_ty succ_closure_begin(change_ty Node) {$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
succ_closure_end	Support/DAGDeltaAlgorithm.cpp	/^  succ_closure_iterator_ty succ_closure_end(change_ty Node) {$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
succ_closure_iterator_ty	Support/DAGDeltaAlgorithm.cpp	/^  typedef std::set<change_ty>::iterator succ_closure_iterator_ty;$/;"	t	class:__anon233::DAGDeltaAlgorithmImpl	file:
succ_end	Support/DAGDeltaAlgorithm.cpp	/^  succ_iterator_ty succ_end(change_ty Node) {$/;"	f	class:__anon233::DAGDeltaAlgorithmImpl	file:
succ_end	Transforms/Scalar/ObjCARC.cpp	/^    edge_iterator succ_end() { return Succs.end(); }$/;"	f	class:__anon507::BBState
succ_iterator_ty	Support/DAGDeltaAlgorithm.cpp	/^  typedef std::vector<change_ty>::iterator succ_iterator_ty;$/;"	t	class:__anon233::DAGDeltaAlgorithmImpl	file:
supportsTailCall	Target/ARM/ARMSubtarget.h	/^  bool supportsTailCall() const { return SupportsTailCall; }$/;"	f	class:llvm::ARMSubtarget
sval	DebugInfo/DWARFFormValue.h	/^      int64_t sval;$/;"	m	union:llvm::DWARFFormValue::ValueType::__anon175
swap	Support/SmallPtrSet.cpp	/^void SmallPtrSetImpl::swap(SmallPtrSetImpl &RHS) {$/;"	f	class:SmallPtrSetImpl
swap	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    void swap(RenamePassData &RHS) {$/;"	f	class:__anon469::RenamePassData
swap	VMCore/Use.cpp	/^void Use::swap(Use &RHS) {$/;"	f	class:llvm::Use
swapOperands	VMCore/Instructions.cpp	/^bool BinaryOperator::swapOperands() {$/;"	f	class:BinaryOperator
swapOperands	VMCore/Instructions.cpp	/^void CmpInst::swapOperands() {$/;"	f	class:CmpInst
swapSuccessors	VMCore/Instructions.cpp	/^void BranchInst::swapSuccessors() {$/;"	f	class:BranchInst
switchConvert	Transforms/Utils/LowerSwitch.cpp	/^BasicBlock* LowerSwitch::switchConvert(CaseItr Begin, CaseItr End,$/;"	f	class:LowerSwitch
symbolPosInBuffer	Target/NVPTX/NVPTXAsmPrinter.h	/^    SmallVector<unsigned, 4> symbolPosInBuffer;$/;"	m	class:llvm::NVPTXAsmPrinter::AggBuffer
symbol_map	MC/WinCOFFObjectWriter.cpp	/^  typedef DenseMap<MCSymbol  const *, COFFSymbol *>   symbol_map;$/;"	t	class:__anon222::WinCOFFObjectWriter	file:
symbolicRDIVtest	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::symbolicRDIVtest(const SCEV *A1,$/;"	f	class:DependenceAnalysis
symbols	MC/WinCOFFObjectWriter.cpp	/^  typedef std::vector<COFFSymbol*>  symbols;$/;"	t	class:__anon222::WinCOFFObjectWriter	file:
symfile_addr	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    const char *symfile_addr;$/;"	m	struct:jit_code_entry	file:
symfile_size	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    uint64_t symfile_size;$/;"	m	struct:jit_code_entry	file:
sys	Support/Errno.cpp	/^namespace sys {$/;"	n	namespace:llvm	file:
sys	Support/PathV2.cpp	/^namespace sys  {$/;"	n	namespace:llvm	file:
system_category	Support/system_error.cpp	/^system_category() {$/;"	f	namespace:llvm
system_temp_directory	Support/PathV2.cpp	/^void system_temp_directory(bool erasedOnReboot, SmallVectorImpl<char> &result) {$/;"	f	namespace:llvm::sys::path
tCALL	Target/ARM/ARMISelLowering.h	/^      tCALL,        \/\/ Thumb function call.$/;"	e	enum:llvm::ARMISD::NodeType
t_APFloat	AsmParser/LLParser.h	/^      t_APSInt, t_APFloat,        \/\/ Value in APSIntVal\/APFloatVal.$/;"	e	enum:llvm::ValID::__anon53
t_APSInt	AsmParser/LLParser.h	/^      t_APSInt, t_APFloat,        \/\/ Value in APSIntVal\/APFloatVal.$/;"	e	enum:llvm::ValID::__anon53
t_Constant	AsmParser/LLParser.h	/^      t_Constant,                 \/\/ Value in ConstantVal.$/;"	e	enum:llvm::ValID::__anon53
t_ConstantStruct	AsmParser/LLParser.h	/^      t_ConstantStruct,           \/\/ Value in ConstantStructElts.$/;"	e	enum:llvm::ValID::__anon53
t_EmptyArray	AsmParser/LLParser.h	/^      t_EmptyArray,               \/\/ No value:  []$/;"	e	enum:llvm::ValID::__anon53
t_GlobalID	AsmParser/LLParser.h	/^      t_LocalID, t_GlobalID,      \/\/ ID in UIntVal.$/;"	e	enum:llvm::ValID::__anon53
t_GlobalName	AsmParser/LLParser.h	/^      t_LocalName, t_GlobalName,  \/\/ Name in StrVal.$/;"	e	enum:llvm::ValID::__anon53
t_InlineAsm	AsmParser/LLParser.h	/^      t_InlineAsm,                \/\/ Value in StrVal\/StrVal2\/UIntVal.$/;"	e	enum:llvm::ValID::__anon53
t_LocalID	AsmParser/LLParser.h	/^      t_LocalID, t_GlobalID,      \/\/ ID in UIntVal.$/;"	e	enum:llvm::ValID::__anon53
t_LocalName	AsmParser/LLParser.h	/^      t_LocalName, t_GlobalName,  \/\/ Name in StrVal.$/;"	e	enum:llvm::ValID::__anon53
t_MDNode	AsmParser/LLParser.h	/^      t_MDNode,                   \/\/ Value in MDNodeVal.$/;"	e	enum:llvm::ValID::__anon53
t_MDString	AsmParser/LLParser.h	/^      t_MDString,                 \/\/ Value in MDStringVal.$/;"	e	enum:llvm::ValID::__anon53
t_Null	AsmParser/LLParser.h	/^      t_Null, t_Undef, t_Zero,    \/\/ No value.$/;"	e	enum:llvm::ValID::__anon53
t_PackedConstantStruct	AsmParser/LLParser.h	/^      t_PackedConstantStruct      \/\/ Value in ConstantStructElts.$/;"	e	enum:llvm::ValID::__anon53
t_Undef	AsmParser/LLParser.h	/^      t_Null, t_Undef, t_Zero,    \/\/ No value.$/;"	e	enum:llvm::ValID::__anon53
t_Zero	AsmParser/LLParser.h	/^      t_Null, t_Undef, t_Zero,    \/\/ No value.$/;"	e	enum:llvm::ValID::__anon53
tailIsWholeBlock	CodeGen/BranchFolding.h	/^      bool tailIsWholeBlock() const {$/;"	f	class:llvm::BranchFolder::SameTailElt
tailUserInst	Transforms/Scalar/LoopStrengthReduce.cpp	/^  Instruction *tailUserInst() const { return Incs.back().UserInst; }$/;"	f	struct:__anon518::IVChain
taintExtent	CodeGen/RegisterCoalescer.cpp	/^taintExtent(unsigned ValNo, unsigned TaintedLanes, JoinVals &Other,$/;"	f	class:JoinVals
take	Support/Windows/Windows.h	/^  handle_type take() {$/;"	f	class:ScopedHandle
takeDeletedSymbolsForFunction	CodeGen/MachineModuleInfo.cpp	/^takeDeletedSymbolsForFunction(Function *F, std::vector<MCSymbol*> &Result) {$/;"	f	class:MMIAddrLabelMap
takeDeletedSymbolsForFunction	CodeGen/MachineModuleInfo.cpp	/^takeDeletedSymbolsForFunction(const Function *F,$/;"	f	class:MachineModuleInfo
takeName	VMCore/Value.cpp	/^void Value::takeName(Value *V) {$/;"	f	class:Value
targetHandlesStackFrameRounding	Target/MBlaze/MBlazeFrameLowering.h	/^  bool targetHandlesStackFrameRounding() const { return true; }$/;"	f	class:llvm::MBlazeFrameLowering
targetHandlesStackFrameRounding	Target/PowerPC/PPCFrameLowering.h	/^  bool targetHandlesStackFrameRounding() const { return true; }$/;"	f	class:llvm::PPCFrameLowering
tcAdd	Support/APInt.cpp	/^APInt::tcAdd(integerPart *dst, const integerPart *rhs,$/;"	f	class:APInt
tcAnd	Support/APInt.cpp	/^APInt::tcAnd(integerPart *dst, const integerPart *rhs, unsigned int parts)$/;"	f	class:APInt
tcAssign	Support/APInt.cpp	/^APInt::tcAssign(integerPart *dst, const integerPart *src, unsigned int parts)$/;"	f	class:APInt
tcClearBit	Support/APInt.cpp	/^APInt::tcClearBit(integerPart *parts, unsigned int bit)$/;"	f	class:APInt
tcCompare	Support/APInt.cpp	/^APInt::tcCompare(const integerPart *lhs, const integerPart *rhs,$/;"	f	class:APInt
tcComplement	Support/APInt.cpp	/^APInt::tcComplement(integerPart *dst, unsigned int parts)$/;"	f	class:APInt
tcDivide	Support/APInt.cpp	/^APInt::tcDivide(integerPart *lhs, const integerPart *rhs,$/;"	f	class:APInt
tcExtract	Support/APInt.cpp	/^APInt::tcExtract(integerPart *dst, unsigned int dstCount,const integerPart *src,$/;"	f	class:APInt
tcExtractBit	Support/APInt.cpp	/^APInt::tcExtractBit(const integerPart *parts, unsigned int bit)$/;"	f	class:APInt
tcFullMultiply	Support/APInt.cpp	/^APInt::tcFullMultiply(integerPart *dst, const integerPart *lhs,$/;"	f	class:APInt
tcIncrement	Support/APInt.cpp	/^APInt::tcIncrement(integerPart *dst, unsigned int parts)$/;"	f	class:APInt
tcIsZero	Support/APInt.cpp	/^APInt::tcIsZero(const integerPart *src, unsigned int parts)$/;"	f	class:APInt
tcLSB	Support/APInt.cpp	/^APInt::tcLSB(const integerPart *parts, unsigned int n)$/;"	f	class:APInt
tcMSB	Support/APInt.cpp	/^APInt::tcMSB(const integerPart *parts, unsigned int n)$/;"	f	class:APInt
tcMultiply	Support/APInt.cpp	/^APInt::tcMultiply(integerPart *dst, const integerPart *lhs,$/;"	f	class:APInt
tcMultiplyPart	Support/APInt.cpp	/^APInt::tcMultiplyPart(integerPart *dst, const integerPart *src,$/;"	f	class:APInt
tcNegate	Support/APInt.cpp	/^APInt::tcNegate(integerPart *dst, unsigned int parts)$/;"	f	class:APInt
tcOr	Support/APInt.cpp	/^APInt::tcOr(integerPart *dst, const integerPart *rhs, unsigned int parts)$/;"	f	class:APInt
tcSet	Support/APInt.cpp	/^APInt::tcSet(integerPart *dst, integerPart part, unsigned int parts)$/;"	f	class:APInt
tcSetBit	Support/APInt.cpp	/^APInt::tcSetBit(integerPart *parts, unsigned int bit)$/;"	f	class:APInt
tcSetLeastSignificantBits	Support/APInt.cpp	/^APInt::tcSetLeastSignificantBits(integerPart *dst, unsigned int parts,$/;"	f	class:APInt
tcShiftLeft	Support/APInt.cpp	/^APInt::tcShiftLeft(integerPart *dst, unsigned int parts, unsigned int count)$/;"	f	class:APInt
tcShiftRight	Support/APInt.cpp	/^APInt::tcShiftRight(integerPart *dst, unsigned int parts, unsigned int count)$/;"	f	class:APInt
tcSubtract	Support/APInt.cpp	/^APInt::tcSubtract(integerPart *dst, const integerPart *rhs,$/;"	f	class:APInt
tcXor	Support/APInt.cpp	/^APInt::tcXor(integerPart *dst, const integerPart *rhs, unsigned int parts)$/;"	f	class:APInt
tentativeIsValid	Target/X86/AsmParser/X86AsmLexer.cpp	/^  bool tentativeIsValid;$/;"	m	class:__anon342::X86AsmLexer	file:
tentativeToken	Target/X86/AsmParser/X86AsmLexer.cpp	/^  AsmToken tentativeToken;$/;"	m	class:__anon342::X86AsmLexer	file:
testBounds	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::testBounds(unsigned char DirKind,$/;"	f	class:DependenceAnalysis
testMIV	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::testMIV(const SCEV *Src,$/;"	f	class:DependenceAnalysis
testRDIV	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::testRDIV(const SCEV *Src,$/;"	f	class:DependenceAnalysis
testSIV	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::testSIV(const SCEV *Src,$/;"	f	class:DependenceAnalysis
testZIV	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::testZIV(const SCEV *Src,$/;"	f	class:DependenceAnalysis
tgtok	TableGen/TGLexer.h	/^namespace tgtok {$/;"	n	namespace:llvm
theCurLine	Target/NVPTX/NVPTXAsmPrinter.h	/^  unsigned theCurLine ;$/;"	m	class:llvm::LineReader
theFileName	Target/NVPTX/NVPTXAsmPrinter.h	/^  std::string theFileName;$/;"	m	class:llvm::LineReader
threadEdge	Analysis/LazyValueInfo.cpp	/^void LazyValueInfo::threadEdge(BasicBlock *PredBB, BasicBlock *OldSucc,$/;"	f	class:LazyValueInfo
threadEdge	Analysis/LazyValueInfo.cpp	/^void LazyValueInfoCache::threadEdge(BasicBlock *PredBB, BasicBlock *OldSucc,$/;"	f	class:LazyValueInfoCache
threadLocalStorageHandle	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^static DWORD threadLocalStorageHandle = 0;$/;"	v	file:
threadLocalStorageHandle	ExecutionEngine/IntelJITEvents/jitprofiling.c	/^static pthread_key_t threadLocalStorageHandle = (pthread_key_t)0;$/;"	v	file:
thread_list	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    __itt_thread_info*     thread_list;$/;"	m	struct:___itt_global
threeByteEscape	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t threeByteEscape;$/;"	m	struct:InternalInstruction
tid	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    TIDT               tid;$/;"	m	struct:___itt_thread_info
tieOperands	CodeGen/MachineInstr.cpp	/^void MachineInstr::tieOperands(unsigned DefIdx, unsigned UseIdx) {$/;"	f	class:MachineInstr
tii	CodeGen/RegAllocPBQP.cpp	/^  const TargetInstrInfo *tii;$/;"	m	class:__anon135::RegAllocPBQP	file:
tii	CodeGen/Spiller.cpp	/^  const TargetInstrInfo *tii;$/;"	m	class:__anon143::SpillerBase	file:
tlIsRecoveringFromCrash	Support/CrashRecoveryContext.cpp	/^       tlIsRecoveringFromCrash;$/;"	v	file:
tm	CodeGen/RegAllocPBQP.cpp	/^  const TargetMachine *tm;$/;"	m	class:__anon135::RegAllocPBQP	file:
tm	Target/NVPTX/NVPTXFrameLowering.h	/^  NVPTXTargetMachine &tm;$/;"	m	class:llvm::NVPTXFrameLowering
to	Target/X86/X86FloatingPoint.cpp	/^    uint16_t to;$/;"	m	struct:__anon388::TableEntry	file:
toNullTerminatedStringRef	Support/Twine.cpp	/^StringRef Twine::toNullTerminatedStringRef(SmallVectorImpl<char> &Out) const {$/;"	f	class:Twine
toOctal	MC/MCAsmStreamer.cpp	/^static inline char toOctal(int X) { return (X&7)+'0'; }$/;"	f	file:
toRel	Object/COFFObjectFile.cpp	/^const coff_relocation *COFFObjectFile::toRel(DataRefImpl Rel) const {$/;"	f	class:COFFObjectFile
toSec	Object/COFFObjectFile.cpp	/^const coff_section *COFFObjectFile::toSec(DataRefImpl Sec) const {$/;"	f	class:COFFObjectFile
toSplit	Transforms/Scalar/GVN.cpp	/^    SmallVector<std::pair<TerminatorInst*, unsigned>, 4> toSplit;$/;"	m	class:__anon537::GVN	file:
toString	Support/APFloat.cpp	/^void APFloat::toString(SmallVectorImpl<char> &Str,$/;"	f	class:APFloat
toString	Support/APInt.cpp	/^std::string APInt::toString(unsigned Radix = 10, bool Signed = true) const {$/;"	f	class:APInt
toString	Support/APInt.cpp	/^void APInt::toString(SmallVectorImpl<char> &Str, unsigned Radix,$/;"	f	class:APInt
toStringRef	Support/Twine.cpp	/^StringRef Twine::toStringRef(SmallVectorImpl<char> &Out) const {$/;"	f	class:Twine
toSymb	Object/COFFObjectFile.cpp	/^const coff_symbol *COFFObjectFile::toSymb(DataRefImpl Symb) const {$/;"	f	class:COFFObjectFile
toVector	Support/Twine.cpp	/^void Twine::toVector(SmallVectorImpl<char> &Out) const {$/;"	f	class:Twine
token	MC/MCDisassembler/EDInst.h	/^  typedef int (^EDTokenVisitor_t)(EDToken *token);$/;"	m	namespace:llvm
tokenType	MC/MCDisassembler/EDToken.h	/^  enum tokenType {$/;"	g	struct:llvm::EDToken
tokenize	MC/MCDisassembler/EDInst.cpp	/^int EDInst::tokenize() {$/;"	f	class:EDInst
tokenize	MC/MCDisassembler/EDToken.cpp	/^int EDToken::tokenize(std::vector<EDToken*> &tokens,$/;"	f	class:EDToken
tokvec_t	MC/MCDisassembler/EDInst.h	/^  typedef std::vector<EDToken*> tokvec_t;$/;"	t	struct:llvm::EDInst
tooManyUses	Analysis/AliasAnalysis.cpp	/^    void tooManyUses() { Captured = true; }$/;"	f	struct:__anon21::CapturesBefore
tooManyUses	Analysis/CaptureTracking.cpp	/^    void tooManyUses() { Captured = true; }$/;"	f	struct:__anon10::SimpleCaptureTracker
tooManyUses	Transforms/IPO/FunctionAttrs.cpp	/^    void tooManyUses() { Captured = true; }$/;"	f	struct:__anon579::ArgumentUsesTracker
tooManyUses	Transforms/Scalar/TailRecursionElimination.cpp	/^  void tooManyUses() { Captured = true; }$/;"	f	struct:AllocaCaptureTracker
tool_output_file	Support/ToolOutputFile.cpp	/^tool_output_file::tool_output_file(const char *filename, std::string &ErrorInfo,$/;"	f	class:tool_output_file
top_down_ptr_begin	Transforms/Scalar/ObjCARC.cpp	/^    ptr_const_iterator top_down_ptr_begin() const {$/;"	f	class:__anon507::BBState
top_down_ptr_begin	Transforms/Scalar/ObjCARC.cpp	/^    ptr_iterator top_down_ptr_begin() { return PerPtrTopDown.begin(); }$/;"	f	class:__anon507::BBState
top_down_ptr_end	Transforms/Scalar/ObjCARC.cpp	/^    ptr_const_iterator top_down_ptr_end() const {$/;"	f	class:__anon507::BBState
top_down_ptr_end	Transforms/Scalar/ObjCARC.cpp	/^    ptr_iterator top_down_ptr_end() { return PerPtrTopDown.end(); }$/;"	f	class:__anon507::BBState
totalExponent	Support/APFloat.cpp	/^totalExponent(StringRef::iterator p, StringRef::iterator end,$/;"	f	file:
traceCandidate	CodeGen/MachineScheduler.cpp	/^void ConvergingScheduler::traceCandidate(const char *Label, const ReadyQueue &Q,$/;"	f	class:ConvergingScheduler
traceCandidate	Target/Hexagon/HexagonMachineScheduler.cpp	/^void ConvergingVLIWScheduler::traceCandidate(const char *Label,$/;"	f	class:ConvergingVLIWScheduler
traceSiblingValue	CodeGen/InlineSpiller.cpp	/^MachineInstr *InlineSpiller::traceSiblingValue(unsigned UseReg, VNInfo *UseVNI,$/;"	f	class:InlineSpiller
trackLivenessAfterRegAlloc	Target/ARM/ARMBaseRegisterInfo.cpp	/^trackLivenessAfterRegAlloc(const MachineFunction &MF) const {$/;"	f	class:ARMBaseRegisterInfo
trackLivenessAfterRegAlloc	Target/CellSPU/SPURegisterInfo.h	/^    virtual bool trackLivenessAfterRegAlloc(const MachineFunction &MF) const$/;"	f	class:llvm::SPURegisterInfo
trackLivenessAfterRegAlloc	Target/Hexagon/HexagonRegisterInfo.h	/^  bool trackLivenessAfterRegAlloc(const MachineFunction &MF) const {$/;"	f	struct:llvm::HexagonRegisterInfo
trackLivenessAfterRegAlloc	Target/Mips/MipsRegisterInfo.cpp	/^MipsRegisterInfo::trackLivenessAfterRegAlloc(const MachineFunction &MF) const {$/;"	f	class:MipsRegisterInfo
trackLivenessAfterRegAlloc	Target/PowerPC/PPCRegisterInfo.cpp	/^PPCRegisterInfo::trackLivenessAfterRegAlloc(const MachineFunction &MF) const {$/;"	f	class:PPCRegisterInfo
trackLivenessAfterRegAlloc	Target/X86/X86RegisterInfo.cpp	/^X86RegisterInfo::trackLivenessAfterRegAlloc(const MachineFunction &MF) const {$/;"	f	class:X86RegisterInfo
trackLivenessAfterRegAlloc	Target/XCore/XCoreRegisterInfo.cpp	/^XCoreRegisterInfo::trackLivenessAfterRegAlloc(const MachineFunction &MF) const {$/;"	f	class:XCoreRegisterInfo
trackUsesOfI	Transforms/Vectorize/BBVectorize.cpp	/^  bool BBVectorize::trackUsesOfI(DenseSet<Value *> &Users,$/;"	f	class:__anon604::BBVectorize
tracksRegPressure	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  bool tracksRegPressure() const { return TracksRegPressure; }$/;"	f	class:__anon77::RegReductionPQBase
trailingHexadecimalFraction	Support/APFloat.cpp	/^trailingHexadecimalFraction(StringRef::iterator p, StringRef::iterator end,$/;"	f	file:
transfer	Analysis/ProfileInfo.cpp	/^void ProfileInfoT<Function,BasicBlock>::transfer(const Function *Old,$/;"	f	class:llvm::ProfileInfoT
transferChildrenTo	Analysis/RegionInfo.cpp	/^void Region::transferChildrenTo(Region *To) {$/;"	f	class:Region
transferNodesFromList	CodeGen/MachineBasicBlock.cpp	/^transferNodesFromList(ilist_traits<MachineInstr> &fromList,$/;"	f	class:ilist_traits
transferNodesFromList	Support/YAMLParser.cpp	/^  void transferNodesFromList(ilist_node_traits &    \/*SrcTraits*\/,$/;"	f	struct:llvm::ilist_node_traits
transferNodesFromList	VMCore/SymbolTableListTraitsImpl.h	/^::transferNodesFromList(ilist_traits<ValueSubClass> &L2,$/;"	f	class:llvm::SymbolTableListTraits
transferSuccessors	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::transferSuccessors(MachineBasicBlock *fromMBB) {$/;"	f	class:MachineBasicBlock
transferSuccessorsAndUpdatePHIs	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::transferSuccessorsAndUpdatePHIs(MachineBasicBlock *fromMBB) {$/;"	f	class:MachineBasicBlock
transferValues	CodeGen/SplitKit.cpp	/^bool SplitEditor::transferValues() {$/;"	f	class:SplitEditor
transformCallThroughTrampoline	Transforms/InstCombine/InstCombineCalls.cpp	/^InstCombiner::transformCallThroughTrampoline(CallSite CS,$/;"	f	class:InstCombiner
transformConstExprCastCall	Transforms/InstCombine/InstCombineCalls.cpp	/^bool InstCombiner::transformConstExprCastCall(CallSite CS) {$/;"	f	class:InstCombiner
transformSExtICmp	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::transformSExtICmp(ICmpInst *ICI, Instruction &CI) {$/;"	f	class:InstCombiner
transformToPostInc	Analysis/IVUsers.cpp	/^void IVStrideUse::transformToPostInc(const Loop *L) {$/;"	f	class:IVStrideUse
transformZExtICmp	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::transformZExtICmp(ICmpInst *ICI, Instruction &CI,$/;"	f	class:InstCombiner
translateFPRegister	Target/X86/Disassembler/X86Disassembler.cpp	/^static bool translateFPRegister(MCInst &mcInst,$/;"	f	file:
translateImmediate	Target/X86/Disassembler/X86Disassembler.cpp	/^static void translateImmediate(MCInst &mcInst, uint64_t immediate,$/;"	f	file:
translateInstruction	Target/X86/Disassembler/X86Disassembler.cpp	/^static bool translateInstruction(MCInst &mcInst,$/;"	f	file:
translateOperand	Target/X86/Disassembler/X86Disassembler.cpp	/^static bool translateOperand(MCInst &mcInst, const OperandSpecifier &operand,$/;"	f	file:
translateRM	Target/X86/Disassembler/X86Disassembler.cpp	/^static bool translateRM(MCInst &mcInst, const OperandSpecifier &operand,$/;"	f	file:
translateRMMemory	Target/X86/Disassembler/X86Disassembler.cpp	/^static bool translateRMMemory(MCInst &mcInst, InternalInstruction &insn,$/;"	f	file:
translateRMRegister	Target/X86/Disassembler/X86Disassembler.cpp	/^static bool translateRMRegister(MCInst &mcInst,$/;"	f	file:
translateRegister	Target/X86/Disassembler/X86Disassembler.cpp	/^static void translateRegister(MCInst &mcInst, Reg reg) {$/;"	f	file:
translateShiftImm	Target/ARM/InstPrinter/ARMInstPrinter.cpp	/^static unsigned translateShiftImm(unsigned imm) {$/;"	f	file:
tri	CodeGen/RegAllocPBQP.cpp	/^  const TargetRegisterInfo *tri;$/;"	m	class:__anon135::RegAllocPBQP	file:
tri	CodeGen/Spiller.cpp	/^  const TargetRegisterInfo *tri;$/;"	m	class:__anon143::SpillerBase	file:
tripleFromArch	MC/MCDisassembler/EDDisassembler.cpp	/^static const char *tripleFromArch(Triple::ArchType arch) {$/;"	f	file:
triplemap	MC/MCDisassembler/EDDisassembler.cpp	/^static const struct TripleMap triplemap[] = {$/;"	v	typeref:struct:TripleMap	file:
trivial	CodeGen/Spiller.cpp	/^  enum SpillerName { trivial, inline_ };$/;"	e	enum:__anon142::SpillerName	file:
trivialSpillEverywhere	CodeGen/Spiller.cpp	/^  void trivialSpillEverywhere(LiveRangeEdit& LRE) {$/;"	f	class:__anon143::SpillerBase
trunc	Support/APInt.cpp	/^APInt APInt::trunc(unsigned width) const {$/;"	f	class:APInt
truncate	MC/MCAtom.cpp	/^void MCAtom::truncate(uint64_t TruncPt) {$/;"	f	class:MCAtom
truncate	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::truncate(uint32_t DstTySize) const {$/;"	f	class:ConstantRange
truncateToSize	MC/MCAsmStreamer.cpp	/^static inline int64_t truncateToSize(int64_t Value, unsigned Bytes) {$/;"	f	file:
tryAddingPcLoadReferenceComment	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static void tryAddingPcLoadReferenceComment(uint64_t Address, int Value,$/;"	f	file:
tryAddingPcLoadReferenceComment	Target/X86/Disassembler/X86Disassembler.cpp	/^static void tryAddingPcLoadReferenceComment(uint64_t Address, uint64_t Value,$/;"	f	file:
tryAddingSymbolicOperand	Target/ARM/Disassembler/ARMDisassembler.cpp	/^static bool tryAddingSymbolicOperand(uint64_t Address, int32_t Value,$/;"	f	file:
tryAddingSymbolicOperand	Target/X86/Disassembler/X86Disassembler.cpp	/^static bool tryAddingSymbolicOperand(int64_t Value, bool isBranch,$/;"	f	file:
tryAllocateResourcesForConstExt	Target/Hexagon/HexagonVLIWPacketizer.cpp	/^bool HexagonPacketizerList::tryAllocateResourcesForConstExt(MachineInstr* MI) {$/;"	f	class:HexagonPacketizerList
tryAssign	CodeGen/RegAllocGreedy.cpp	/^unsigned RAGreedy::tryAssign(LiveInterval &VirtReg,$/;"	f	class:RAGreedy
tryBlockSplit	CodeGen/RegAllocGreedy.cpp	/^unsigned RAGreedy::tryBlockSplit(LiveInterval &VirtReg, AllocationOrder &Order,$/;"	f	class:RAGreedy
tryConvertIf	CodeGen/EarlyIfConversion.cpp	/^bool EarlyIfConverter::tryConvertIf(MachineBasicBlock *MBB) {$/;"	f	class:EarlyIfConverter
tryEvict	CodeGen/RegAllocGreedy.cpp	/^unsigned RAGreedy::tryEvict(LiveInterval &VirtReg,$/;"	f	class:RAGreedy
tryFoldToZero	CodeGen/SelectionDAG/DAGCombiner.cpp	/^static SDValue tryFoldToZero(DebugLoc DL, const TargetLowering &TLI, EVT VT,$/;"	f	file:
tryInstructionSplit	CodeGen/RegAllocGreedy.cpp	/^RAGreedy::tryInstructionSplit(LiveInterval &VirtReg, AllocationOrder &Order,$/;"	f	class:RAGreedy
tryLocalSplit	CodeGen/RegAllocGreedy.cpp	/^unsigned RAGreedy::tryLocalSplit(LiveInterval &VirtReg, AllocationOrder &Order,$/;"	f	class:RAGreedy
tryMergeRange	VMCore/Metadata.cpp	/^static bool tryMergeRange(SmallVector<Value*, 4> &EndPoints, ConstantInt *Low,$/;"	f	file:
tryMergingIntoMemset	Transforms/Scalar/MemCpyOptimizer.cpp	/^Instruction *MemCpyOpt::tryMergingIntoMemset(Instruction *StartInst,$/;"	f	class:MemCpyOpt
tryOptimizeCall	Transforms/InstCombine/InstCombineCalls.cpp	/^Instruction *InstCombiner::tryOptimizeCall(CallInst *CI, const DataLayout *TD) {$/;"	f	class:InstCombiner
tryParseRegister	Target/ARM/AsmParser/ARMAsmParser.cpp	/^int ARMAsmParser::tryParseRegister() {$/;"	f	class:ARMAsmParser
tryParseRegister	Target/Mips/AsmParser/MipsAsmParser.cpp	/^int MipsAsmParser::tryParseRegister(StringRef Mnemonic) {$/;"	f	class:MipsAsmParser
tryParseRegisterOperand	Target/Mips/AsmParser/MipsAsmParser.cpp	/^  tryParseRegisterOperand(SmallVectorImpl<MCParsedAsmOperand*> &Operands,$/;"	f	class:MipsAsmParser
tryParseRegisterWithWriteBack	Target/ARM/AsmParser/ARMAsmParser.cpp	/^tryParseRegisterWithWriteBack(SmallVectorImpl<MCParsedAsmOperand*> &Operands) {$/;"	f	class:ARMAsmParser
tryParseShiftRegister	Target/ARM/AsmParser/ARMAsmParser.cpp	/^int ARMAsmParser::tryParseShiftRegister($/;"	f	class:ARMAsmParser
tryRegionSplit	CodeGen/RegAllocGreedy.cpp	/^unsigned RAGreedy::tryRegionSplit(LiveInterval &VirtReg, AllocationOrder &Order,$/;"	f	class:RAGreedy
trySplit	CodeGen/RegAllocGreedy.cpp	/^unsigned RAGreedy::trySplit(LiveInterval &VirtReg, AllocationOrder &Order,$/;"	f	class:RAGreedy
tryToMakeAllocaBePromotable	Transforms/Scalar/ScalarReplAggregates.cpp	/^static bool tryToMakeAllocaBePromotable(AllocaInst *AI, const DataLayout *TD) {$/;"	f	file:
tryacquire	Support/Mutex.cpp	/^bool MutexImpl::tryacquire() { return true; }$/;"	f	class:llvm::MutexImpl
twoByteEscape	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t twoByteEscape;$/;"	m	struct:InternalInstruction
type	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    AtomType type; \/\/ enum AtomType$/;"	m	struct:llvm::DwarfAccelTable::Atom
type	MC/MCDisassembler/EDToken.cpp	/^enum EDToken::tokenType EDToken::type() const {$/;"	f	class:EDToken
type	Target/X86/Disassembler/X86DisassemblerDecoderCommon.h	/^  uint8_t type;$/;"	m	struct:OperandSpecifier
type	Transforms/Scalar/GVN.cpp	/^    Type *type;$/;"	m	struct:__anon536::Expression	file:
type	VMCore/LLVMContextImpl.h	/^    Type* type;$/;"	m	struct:llvm::DenseMapAPIntKeyInfo::KeyTy
typeIncompatible	VMCore/Attributes.cpp	/^Attributes Attributes::typeIncompatible(Type *Ty) {$/;"	f	class:Attributes
u	CodeGen/SelectionDAG/SDNodeDbgValue.h	/^  } u;$/;"	m	class:llvm::SDDbgValue	typeref:union:llvm::SDDbgValue::__anon89
uadd_ov	Support/APInt.cpp	/^APInt APInt::uadd_ov(const APInt &RHS, bool &Overflow) const {$/;"	f	class:APInt
uch	Support/regutils.h	/^typedef unsigned char uch;$/;"	t
udiv	Support/APInt.cpp	/^APInt APInt::udiv(const APInt& RHS) const {$/;"	f	class:APInt
udiv	Support/ConstantRange.cpp	/^ConstantRange::udiv(const ConstantRange &RHS) const {$/;"	f	class:ConstantRange
udivrem	Support/APInt.cpp	/^void APInt::udivrem(const APInt &LHS, const APInt &RHS,$/;"	f	class:APInt
uid	Archive/ArchiveInternals.h	/^      char uid[6];    \/\/\/< user id in ASCII decimal$/;"	m	class:llvm::ArchiveMemberHeader
ulpsFromBoundary	Support/APFloat.cpp	/^ulpsFromBoundary(const integerPart *parts, unsigned int bits, bool isNearest)$/;"	f	file:
ult	Support/APInt.cpp	/^bool APInt::ult(const APInt& RHS) const {$/;"	f	class:APInt
umax	Support/ConstantRange.cpp	/^ConstantRange::umax(const ConstantRange &Other) const {$/;"	f	class:ConstantRange
umul_ov	Analysis/ScalarEvolution.cpp	/^static uint64_t umul_ov(uint64_t i, uint64_t j, bool &Overflow) {$/;"	f	file:
umul_ov	Support/APInt.cpp	/^APInt APInt::umul_ov(const APInt &RHS, bool &Overflow) const {$/;"	f	class:APInt
unassign	CodeGen/LiveRegMatrix.cpp	/^void LiveRegMatrix::unassign(LiveInterval &VirtReg) {$/;"	f	class:LiveRegMatrix
uncompress	Support/IntEqClasses.cpp	/^void IntEqClasses::uncompress() {$/;"	f	class:IntEqClasses
unconsumeByte	Target/X86/Disassembler/X86DisassemblerDecoder.c	/^static void unconsumeByte(struct InternalInstruction* insn) {$/;"	f	file:
undefined	Analysis/LazyValueInfo.cpp	/^    undefined,$/;"	e	enum:__anon18::LVILatticeVal::LatticeValueTy	file:
undefined	Transforms/Scalar/SCCP.cpp	/^    undefined,$/;"	e	enum:__anon530::LatticeVal::LatticeValueTy	file:
underlyingObjectsAlias	Analysis/DependenceAnalysis.cpp	/^AliasAnalysis::AliasResult underlyingObjectsAlias(AliasAnalysis *AA,$/;"	f	file:
undoLRSpillRestore	Target/ARM/ARMConstantIslandPass.cpp	/^bool ARMConstantIslands::undoLRSpillRestore() {$/;"	f	class:ARMConstantIslands
unescapeDoubleQuoted	Support/YAMLParser.cpp	/^StringRef ScalarNode::unescapeDoubleQuoted( StringRef UnquotedValue$/;"	f	class:ScalarNode
unfoldMemoryOperand	Target/X86/X86InstrInfo.cpp	/^X86InstrInfo::unfoldMemoryOperand(SelectionDAG &DAG, SDNode *N,$/;"	f	class:X86InstrInfo
unfoldMemoryOperand	Target/X86/X86InstrInfo.cpp	/^bool X86InstrInfo::unfoldMemoryOperand(MachineFunction &MF, MachineInstr *MI,$/;"	f	class:X86InstrInfo
unify	CodeGen/LiveIntervalUnion.cpp	/^void LiveIntervalUnion::unify(LiveInterval &VirtReg) {$/;"	f	class:LiveIntervalUnion
unionRegs	CodeGen/StrongPHIElimination.cpp	/^void StrongPHIElimination::unionRegs(unsigned Reg1, unsigned Reg2) {$/;"	f	class:StrongPHIElimination
unionWith	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::unionWith(const ConstantRange &CR) const {$/;"	f	class:ConstantRange
uniqueCallSite	Target/NVPTX/NVPTXISelLowering.cpp	/^static unsigned int uniqueCallSite = 0;$/;"	v	file:
uniqueNum	Target/CppBackend/CPPBackend.cpp	/^    uint64_t uniqueNum;$/;"	m	class:__anon412::CppWriter	file:
uniqueSuperReg	Target/Hexagon/HexagonFrameLowering.cpp	/^unsigned uniqueSuperReg(unsigned Reg, const TargetRegisterInfo *TRI) {$/;"	f	file:
unlinkEdge	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::unlinkEdge(BallLarusEdge* edge) {$/;"	f	class:BLInstrumentationDag
unlinkPhony	Transforms/Instrumentation/PathProfiling.cpp	/^void BLInstrumentationDag::unlinkPhony() {$/;"	f	class:BLInstrumentationDag
unregisterCleanup	Support/CrashRecoveryContext.cpp	/^CrashRecoveryContext::unregisterCleanup(CrashRecoveryContextCleanup *cleanup) {$/;"	f	class:CrashRecoveryContext
unregisterPass	VMCore/PassRegistry.cpp	/^void PassRegistry::unregisterPass(const PassInfo &PI) {$/;"	f	class:PassRegistry
unrollIndent	Support/YAMLParser.cpp	/^bool Scanner::unrollIndent(int ToColumn) {$/;"	f	class:Scanner
unscheduledNode	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void RegReductionPQBase::unscheduledNode(SUnit *SU) {$/;"	f	class:RegReductionPQBase
unseenObjects	ExecutionEngine/JIT/JIT.cpp	/^  struct LibgccObject* unseenObjects;$/;"	m	struct:__anon185::LibgccObjectInfo	typeref:struct:__anon185::LibgccObjectInfo::LibgccObject	file:
unswitchFunction	Transforms/IPO/PartialInlining.cpp	/^Function* PartialInliner::unswitchFunction(Function* F) {$/;"	f	class:PartialInliner
unused	ExecutionEngine/JIT/JIT.cpp	/^  unsigned unused[2];$/;"	m	struct:__anon185::LibgccObjectInfo	file:
unused1	ExecutionEngine/JIT/JIT.cpp	/^  void *unused1;$/;"	m	struct:__anon185::LibgccObject	file:
unused2	ExecutionEngine/JIT/JIT.cpp	/^  void *unused2;$/;"	m	struct:__anon185::LibgccObject	file:
unused3	ExecutionEngine/JIT/JIT.cpp	/^  void *unused3;$/;"	m	struct:__anon185::LibgccObject	file:
update	CodeGen/InterferenceCache.cpp	/^void InterferenceCache::Entry::update(unsigned MBBNum) {$/;"	f	class:InterferenceCache::Entry
update	CodeGen/SpillPlacement.cpp	/^  bool update(const Node nodes[]) {$/;"	f	struct:SpillPlacement::Node
updateAllRanges	CodeGen/LiveIntervalAnalysis.cpp	/^  void updateAllRanges(MachineInstr *MI) {$/;"	f	class:LiveIntervals::HMEditor
updateBlockParents	Analysis/LoopInfo.cpp	/^void UnloopUpdater::updateBlockParents() {$/;"	f	class:UnloopUpdater
updateDebugInfo	Transforms/Scalar/SROA.cpp	/^  virtual void updateDebugInfo(Instruction *Inst) const {$/;"	f	class:__anon558::AllocaPromoter
updateDebugInfo	Transforms/Scalar/ScalarReplAggregates.cpp	/^  virtual void updateDebugInfo(Instruction *Inst) const {$/;"	f	class:__anon524::AllocaPromoter
updateDirection	Analysis/DependenceAnalysis.cpp	/^void DependenceAnalysis::updateDirection(Dependence::DVEntry &Level,$/;"	f	class:DependenceAnalysis
updateDomTree	CodeGen/EarlyIfConversion.cpp	/^void EarlyIfConverter::updateDomTree(ArrayRef<MachineBasicBlock*> Removed) {$/;"	f	class:EarlyIfConverter
updateForInsertedWaterBlock	Target/ARM/ARMConstantIslandPass.cpp	/^void ARMConstantIslands::updateForInsertedWaterBlock(MachineBasicBlock *NewBB) {$/;"	f	class:ARMConstantIslands
updateFunctionStub	ExecutionEngine/JIT/JITEmitter.cpp	/^void JIT::updateFunctionStub(Function *F) {$/;"	f	class:JIT
updateGlobalMapping	ExecutionEngine/ExecutionEngine.cpp	/^void *ExecutionEngine::updateGlobalMapping(const GlobalValue *GV, void *Addr) {$/;"	f	class:ExecutionEngine
updateInlinedAtInfo	Transforms/Utils/InlineFunction.cpp	/^static DebugLoc updateInlinedAtInfo(const DebugLoc &DL, $/;"	f	file:
updateLiveIns	CodeGen/LiveRangeCalc.cpp	/^void LiveRangeCalc::updateLiveIns(VNInfo *OverrideVNI) {$/;"	f	class:LiveRangeCalc
updateLoops	CodeGen/EarlyIfConversion.cpp	/^void EarlyIfConverter::updateLoops(ArrayRef<MachineBasicBlock*> Removed) {$/;"	f	class:EarlyIfConverter
updateNode	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^void RegReductionPQBase::updateNode(const SUnit *SU) {$/;"	f	class:RegReductionPQBase
updatePhysDepsDownwards	CodeGen/MachineTraceMetrics.cpp	/^static void updatePhysDepsDownwards(const MachineInstr *UseMI,$/;"	f	file:
updatePhysDepsUpwards	CodeGen/MachineTraceMetrics.cpp	/^static unsigned updatePhysDepsUpwards(const MachineInstr *MI, unsigned Height,$/;"	f	file:
updatePredecessors	Analysis/IntervalPartition.cpp	/^void IntervalPartition::updatePredecessors(Interval *Int) {$/;"	f	class:IntervalPartition
updateQueues	CodeGen/MachineScheduler.cpp	/^void ScheduleDAGMI::updateQueues(SUnit *SU, bool IsTopNode) {$/;"	f	class:ScheduleDAGMI
updateRange	CodeGen/LiveIntervalAnalysis.cpp	/^  void updateRange(LiveInterval &LI) {$/;"	f	class:LiveIntervals::HMEditor	file:
updateRegDefsUses	CodeGen/RegisterCoalescer.cpp	/^void RegisterCoalescer::updateRegDefsUses(unsigned SrcReg,$/;"	f	class:RegisterCoalescer
updateRegMaskSlots	CodeGen/LiveIntervalAnalysis.cpp	/^  void updateRegMaskSlots() {$/;"	f	class:LiveIntervals::HMEditor	file:
updateSSA	CodeGen/LiveRangeCalc.cpp	/^void LiveRangeCalc::updateSSA() {$/;"	f	class:LiveRangeCalc
updateScheduledPressure	CodeGen/MachineScheduler.cpp	/^updateScheduledPressure(std::vector<unsigned> NewMaxPressure) {$/;"	f	class:ScheduleDAGMI
updateSectionAddress	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual void updateSectionAddress(const object::SectionRef &Sec,$/;"	f	class:llvm::ObjectImageCommon
updateSectionAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^    virtual void updateSectionAddress(const SectionRef &Sec, uint64_t Addr)$/;"	f	class:__anon180::ELFObjectImage
updateSectionAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^void DyldELFObject<target_endianness, is64Bits>::updateSectionAddress($/;"	f	class:__anon180::DyldELFObject
updateStatistics	Analysis/RegionInfo.cpp	/^void RegionInfo::updateStatistics(Region *R) {$/;"	f	class:RegionInfo
updateSubloopParents	Analysis/LoopInfo.cpp	/^void UnloopUpdater::updateSubloopParents() {$/;"	f	class:UnloopUpdater
updateSubprogramScopeDIE	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DIE *DwarfDebug::updateSubprogramScopeDIE(CompileUnit *SPCU,$/;"	f	class:DwarfDebug
updateSymbolAddress	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual void updateSymbolAddress(const object::SymbolRef &Sym, uint64_t Addr)$/;"	f	class:llvm::ObjectImageCommon
updateSymbolAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^    virtual void updateSymbolAddress(const SymbolRef &Sym, uint64_t Addr)$/;"	f	class:__anon180::ELFObjectImage
updateSymbolAddress	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^void DyldELFObject<target_endianness, is64Bits>::updateSymbolAddress($/;"	f	class:__anon180::DyldELFObject
updateTerminator	CodeGen/MachineBasicBlock.cpp	/^void MachineBasicBlock::updateTerminator() {$/;"	f	class:MachineBasicBlock
updateUnloop	Analysis/LoopInfo.cpp	/^void LoopInfo::updateUnloop(Loop *Unloop) {$/;"	f	class:LoopInfo
update_length	MC/WinCOFFObjectWriter.cpp	/^void StringTable::update_length() {$/;"	f	class:StringTable
upper	Support/StringRef.cpp	/^std::string StringRef::upper() const {$/;"	f	class:StringRef
urem	Support/APInt.cpp	/^APInt APInt::urem(const APInt& RHS) const {$/;"	f	class:APInt
use64BitRegs	Target/PowerPC/PPCSubtarget.h	/^  bool use64BitRegs() const { return Use64BitRegs; }$/;"	f	class:llvm::PPCSubtarget
useDarwinGDBCompat	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool useDarwinGDBCompat() { return isDarwinGDBCompat; }$/;"	f	class:llvm::DwarfDebug
useDefaultMachineSched	CodeGen/MachineScheduler.cpp	/^static ScheduleDAGInstrs *useDefaultMachineSched(MachineSchedContext *C) {$/;"	f	file:
useDefaultRegisterAllocator	CodeGen/Passes.cpp	/^static FunctionPass *useDefaultRegisterAllocator() { return 0; }$/;"	f	file:
useDeprecatedV8Instructions	Target/Sparc/SparcSubtarget.h	/^  bool useDeprecatedV8Instructions() const { return V8DeprecatedInsts; }$/;"	f	class:llvm::SparcSubtarget
useDivRem	CodeGen/SelectionDAG/LegalizeDAG.cpp	/^static bool useDivRem(SDNode *Node, bool isSigned, bool isDIV) {$/;"	f	file:
useDwarfAccelTables	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool useDwarfAccelTables() { return hasDwarfAccelTables; }$/;"	f	class:llvm::DwarfDebug
useExpensiveEHSupport	Transforms/Utils/LowerInvoke.cpp	/^    bool useExpensiveEHSupport;$/;"	m	class:__anon474::LowerInvoke	file:
useFPForScavengingIndex	Target/XCore/XCoreRegisterInfo.cpp	/^XCoreRegisterInfo::useFPForScavengingIndex(const MachineFunction &MF) const {$/;"	f	class:XCoreRegisterInfo
useFPVMLx	Target/ARM/ARMSubtarget.h	/^  bool useFPVMLx() const { return !SlowFPVMLx; }$/;"	f	class:llvm::ARMSubtarget
useFuncSeen	Target/NVPTX/NVPTXAsmPrinter.cpp	/^static bool useFuncSeen(const Constant *C,$/;"	f	file:
useIntv	CodeGen/SplitKit.cpp	/^void SplitEditor::useIntv(SlotIndex Start, SlotIndex End) {$/;"	f	class:SplitEditor
useIntv	CodeGen/SplitKit.cpp	/^void SplitEditor::useIntv(const MachineBasicBlock &MBB) {$/;"	f	class:SplitEditor
useLeaForSP	Target/X86/X86Subtarget.h	/^  bool useLeaForSP() const { return UseLeaForSP; }$/;"	f	class:llvm::X86Subtarget
useMemOps	Target/Hexagon/HexagonSubtarget.h	/^  bool useMemOps () const { return HexagonArchVersion >= V4 && UseMemOps; }$/;"	f	class:llvm::HexagonSubtarget
useMovt	Target/ARM/ARMSubtarget.h	/^  bool useMovt() const { return UseMovt && hasV6T2Ops(); }$/;"	f	class:llvm::ARMSubtarget
useMulOps	Target/ARM/ARMSubtarget.h	/^  bool useMulOps() const { return UseMulOps; }$/;"	f	class:llvm::ARMSubtarget
useNEONForSinglePrecisionFP	Target/ARM/ARMSubtarget.h	/^  bool useNEONForSinglePrecisionFP() const {$/;"	f	class:llvm::ARMSubtarget
usePhysReg	CodeGen/RegAllocFast.cpp	/^void RAFast::usePhysReg(MachineOperand &MO) {$/;"	f	class:RAFast
usePreRAHazardRecognizer	CodeGen/TargetInstrInfoImpl.cpp	/^bool TargetInstrInfoImpl::usePreRAHazardRecognizer() const {$/;"	f	class:TargetInstrInfoImpl
useSmallSection	Target/Mips/MipsSubtarget.h	/^  bool useSmallSection() const { return UseSmallSection; }$/;"	f	class:llvm::MipsSubtarget
use_begin	Transforms/Scalar/SROA.cpp	/^  const_use_iterator use_begin(const_iterator I) const {$/;"	f	class:__anon557::AllocaPartitioning
use_begin	Transforms/Scalar/SROA.cpp	/^  const_use_iterator use_begin(unsigned Idx) const { return Uses[Idx].begin(); }$/;"	f	class:__anon557::AllocaPartitioning
use_begin	Transforms/Scalar/SROA.cpp	/^  use_iterator use_begin(const_iterator I) { return Uses[I - begin()].begin(); }$/;"	f	class:__anon557::AllocaPartitioning
use_begin	Transforms/Scalar/SROA.cpp	/^  use_iterator use_begin(unsigned Idx) { return Uses[Idx].begin(); }$/;"	f	class:__anon557::AllocaPartitioning
use_end	Transforms/Scalar/SROA.cpp	/^  const_use_iterator use_end(const_iterator I) const {$/;"	f	class:__anon557::AllocaPartitioning
use_end	Transforms/Scalar/SROA.cpp	/^  const_use_iterator use_end(unsigned Idx) const { return Uses[Idx].end(); }$/;"	f	class:__anon557::AllocaPartitioning
use_end	Transforms/Scalar/SROA.cpp	/^  use_iterator use_end(const_iterator I) { return Uses[I - begin()].end(); }$/;"	f	class:__anon557::AllocaPartitioning
use_end	Transforms/Scalar/SROA.cpp	/^  use_iterator use_end(unsigned Idx) { return Uses[Idx].end(); }$/;"	f	class:__anon557::AllocaPartitioning
use_iterator	Transforms/Scalar/SROA.cpp	/^  typedef SmallVectorImpl<PartitionUse>::iterator use_iterator;$/;"	t	class:__anon557::AllocaPartitioning	file:
use_push_back	Transforms/Scalar/SROA.cpp	/^  void use_push_back(const_iterator I, const PartitionUse &PU) {$/;"	f	class:__anon557::AllocaPartitioning
use_push_back	Transforms/Scalar/SROA.cpp	/^  void use_push_back(unsigned Idx, const PartitionUse &PU) {$/;"	f	class:__anon557::AllocaPartitioning
use_size	Transforms/Scalar/SROA.cpp	/^  unsigned use_size(const_iterator I) const { return Uses[I - begin()].size(); }$/;"	f	class:__anon557::AllocaPartitioning
use_size	Transforms/Scalar/SROA.cpp	/^  unsigned use_size(unsigned Idx) const { return Uses[Idx].size(); }$/;"	f	class:__anon557::AllocaPartitioning
usedInGlobalVarDef	Target/NVPTX/NVPTXAsmPrinter.cpp	/^static bool usedInGlobalVarDef(const Constant *C)$/;"	f	file:
usedInOneFunc	Target/NVPTX/NVPTXAsmPrinter.cpp	/^static bool usedInOneFunc(const User *U, Function const *&oneFunc)$/;"	f	file:
userValues	CodeGen/LiveDebugVariables.cpp	/^  SmallVector<UserValue*, 8> userValues;$/;"	m	class:__anon153::LDVImpl	file:
userVarMap	CodeGen/LiveDebugVariables.cpp	/^  UVMap userVarMap;$/;"	m	class:__anon153::LDVImpl	file:
user_data	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    void*               user_data;              $/;"	m	struct:_iJIT_Method_Load
user_data_size	ExecutionEngine/IntelJITEvents/jitprofiling.h	/^    unsigned int        user_data_size;         $/;"	m	struct:_iJIT_Method_Load
uses	VMCore/ConstantsContext.h	/^  static unsigned uses(Constant * const & v) {$/;"	f	struct:llvm::ConstantTraits
uses	VMCore/ConstantsContext.h	/^  static unsigned uses(const std::vector<T, Alloc>& v) {$/;"	f	struct:llvm::ConstantTraits
usesLR	Target/CellSPU/SPUMachineFunction.h	/^  bool usesLR()          { return UsesLR; }$/;"	f	class:llvm::SPUFunctionInfo
usesLanes	CodeGen/RegisterCoalescer.cpp	/^bool JoinVals::usesLanes(MachineInstr *MI, unsigned Reg, unsigned SubIdx,$/;"	f	class:JoinVals
usingLargeMem	Target/CellSPU/SPUSubtarget.h	/^    bool usingLargeMem() const {$/;"	f	class:llvm::SPUSubtarget
usub_ov	Support/APInt.cpp	/^APInt APInt::usub_ov(const APInt &RHS, bool &Overflow) const {$/;"	f	class:APInt
uval	DebugInfo/DWARFFormValue.h	/^      uint64_t uval;$/;"	m	union:llvm::DWARFFormValue::ValueType::__anon175
v4	Target/ARM/ARMBuildAttrs.h	/^    v4       = 1,   \/\/ e.g. SA110$/;"	e	enum:ARMBuildAttrs::CPUArch
v4T	Target/ARM/ARMBuildAttrs.h	/^    v4T      = 2,   \/\/ e.g. ARM7TDMI$/;"	e	enum:ARMBuildAttrs::CPUArch
v5T	Target/ARM/ARMBuildAttrs.h	/^    v5T      = 3,   \/\/ e.g. ARM9TDMI$/;"	e	enum:ARMBuildAttrs::CPUArch
v5TE	Target/ARM/ARMBuildAttrs.h	/^    v5TE     = 4,   \/\/ e.g. ARM946E_S$/;"	e	enum:ARMBuildAttrs::CPUArch
v5TEJ	Target/ARM/ARMBuildAttrs.h	/^    v5TEJ    = 5,   \/\/ e.g. ARM926EJ_S$/;"	e	enum:ARMBuildAttrs::CPUArch
v6	Target/ARM/ARMBuildAttrs.h	/^    v6       = 6,   \/\/ e.g. ARM1136J_S$/;"	e	enum:ARMBuildAttrs::CPUArch
v6K	Target/ARM/ARMBuildAttrs.h	/^    v6K      = 9,   \/\/ e.g. ARM1136J_S$/;"	e	enum:ARMBuildAttrs::CPUArch
v6KZ	Target/ARM/ARMBuildAttrs.h	/^    v6KZ     = 7,   \/\/ e.g. ARM1176JZ_S$/;"	e	enum:ARMBuildAttrs::CPUArch
v6S_M	Target/ARM/ARMBuildAttrs.h	/^    v6S_M    = 12,  \/\/ v6_M with the System extensions$/;"	e	enum:ARMBuildAttrs::CPUArch
v6T2	Target/ARM/ARMBuildAttrs.h	/^    v6T2     = 8,   \/\/ e.g. ARM1156T2F_S$/;"	e	enum:ARMBuildAttrs::CPUArch
v6_M	Target/ARM/ARMBuildAttrs.h	/^    v6_M     = 11,  \/\/ e.g. Cortex M1$/;"	e	enum:ARMBuildAttrs::CPUArch
v7	Target/ARM/ARMBuildAttrs.h	/^    v7       = 10,  \/\/ e.g. Cortex A8, Cortex M3$/;"	e	enum:ARMBuildAttrs::CPUArch
v7E_M	Target/ARM/ARMBuildAttrs.h	/^    v7E_M    = 13   \/\/ v7_M with DSP extensions$/;"	e	enum:ARMBuildAttrs::CPUArch
val	VMCore/LLVMContextImpl.h	/^    APFloat val;$/;"	m	struct:llvm::DenseMapAPFloatKeyInfo::KeyTy
val	VMCore/LLVMContextImpl.h	/^    APInt val;$/;"	m	struct:llvm::DenseMapAPIntKeyInfo::KeyTy
valid	CodeGen/InterferenceCache.cpp	/^bool InterferenceCache::Entry::valid(LiveIntervalUnion *LIUArray,$/;"	f	class:InterferenceCache::Entry
valid	MC/MCDisassembler/EDDisassembler.h	/^  bool valid() {$/;"	f	struct:llvm::EDDisassembler
valid	MC/MCDisassembler/EDInst.h	/^  bool valid() { return Valid; }$/;"	f	struct:llvm::CachedResult
validAddress	Support/StreamableMemoryObject.cpp	/^  bool validAddress(uint64_t address) const {$/;"	f	class:__anon236::RawMemoryObject	file:
validateInstruction	Target/ARM/AsmParser/ARMAsmParser.cpp	/^validateInstruction(MCInst &Inst,$/;"	f	class:ARMAsmParser
value	CodeGen/StrongPHIElimination.cpp	/^      unsigned value;$/;"	m	struct:__anon154::StrongPHIElimination::Node	file:
value	DebugInfo/DWARFFormValue.h	/^  const ValueType& value() const { return Value; }$/;"	f	class:llvm::DWARFFormValue
value	MC/MCDisassembler/EDOperand.h	/^  typedef int (^EDRegisterBlock_t)(uint64_t *value, unsigned regID);$/;"	m	struct:llvm::EDOperand
value	Transforms/InstCombine/InstCombinePHI.cpp	/^  struct isPodLike<LoweredPHIRecord> { static const bool value = true; };$/;"	m	struct:llvm::isPodLike	file:
value	Transforms/Scalar/EarlyCSE.cpp	/^    static const bool value = true;$/;"	m	struct:llvm::isPodLike	file:
value	Transforms/Scalar/EarlyCSE.cpp	/^  static const bool value = true;$/;"	m	struct:llvm::isPodLike	file:
valueEscapes	Transforms/Scalar/Reg2Mem.cpp	/^   bool valueEscapes(const Instruction *Inst) const {$/;"	f	struct:__anon541::RegToMem
valueNumbering	Transforms/Scalar/GVN.cpp	/^    DenseMap<Value*, uint32_t> valueNumbering;$/;"	m	class:__anon536::ValueTable	file:
varargs	Transforms/Scalar/GVN.cpp	/^    SmallVector<uint32_t, 4> varargs;$/;"	m	struct:__anon536::Expression	file:
variable	CodeGen/LiveDebugVariables.cpp	/^  const MDNode *variable; \/\/\/< The debug info variable we are part of.$/;"	m	class:__anon152::UserValue	file:
variableHasComplexAddress	CodeGen/AsmPrinter/DwarfDebug.h	/^  bool variableHasComplexAddress()   const {$/;"	f	class:llvm::DbgVariable
vectorize	Transforms/Vectorize/LoopVectorize.cpp	/^  void vectorize(LoopVectorizationLegality *Legal) {$/;"	f	class:__anon605::SingleBlockLoopVectorizer
vectorizeBB	Transforms/Vectorize/BBVectorize.cpp	/^    bool vectorizeBB(BasicBlock &BB) {$/;"	f	struct:__anon604::BBVectorize
vectorizeBasicBlock	Transforms/Vectorize/BBVectorize.cpp	/^llvm::vectorizeBasicBlock(Pass *P, BasicBlock &BB, const VectorizeConfig &C) {$/;"	f	class:llvm
vectorizeLoop	Transforms/Vectorize/LoopVectorize.cpp	/^SingleBlockLoopVectorizer::vectorizeLoop(LoopVectorizationLegality *Legal) {$/;"	f	class:__anon605::SingleBlockLoopVectorizer
vectorizePairs	Transforms/Vectorize/BBVectorize.cpp	/^  bool BBVectorize::vectorizePairs(BasicBlock &BB, bool NonPow2Len) {$/;"	f	class:__anon604::BBVectorize
verbose	Linker/Linker.cpp	/^Linker::verbose(StringRef message) {$/;"	f	class:Linker
verify	CodeGen/LiveInterval.cpp	/^void LiveInterval::verify() const {$/;"	f	class:LiveInterval
verify	CodeGen/LiveIntervalUnion.cpp	/^void LiveIntervalUnion::verify(LiveVirtRegBitSet& VisitedVRegs) {$/;"	f	class:LiveIntervalUnion
verify	CodeGen/MachineTraceMetrics.cpp	/^void MachineTraceMetrics::Ensemble::verify() const {$/;"	f	class:MachineTraceMetrics::Ensemble
verify	CodeGen/MachineVerifier.cpp	/^void MachineFunction::verify(Pass *p, const char *Banner) const {$/;"	f	class:MachineFunction
verify	Target/ARM/ARMConstantIslandPass.cpp	/^void ARMConstantIslands::verify() {$/;"	f	class:ARMConstantIslands
verifyAnalysis	Analysis/LoopInfo.cpp	/^void LoopInfo::verifyAnalysis() const {$/;"	f	class:LoopInfo
verifyAnalysis	Analysis/RegionInfo.cpp	/^void RegionInfo::verifyAnalysis() const {$/;"	f	class:RegionInfo
verifyAnalysis	CodeGen/MachineTraceMetrics.cpp	/^void MachineTraceMetrics::verifyAnalysis() const {$/;"	f	class:MachineTraceMetrics
verifyAnalysis	Transforms/Utils/LCSSA.cpp	/^    virtual void verifyAnalysis() const {$/;"	f	struct:__anon475::LCSSA	file:
verifyAnalysis	Transforms/Utils/LoopSimplify.cpp	/^void LoopSimplify::verifyAnalysis() const {$/;"	f	class:LoopSimplify
verifyAnalysis	VMCore/Dominators.cpp	/^void DominatorTree::verifyAnalysis() const {$/;"	f	class:DominatorTree
verifyAnalysis	VMCore/Pass.cpp	/^void Pass::verifyAnalysis() const {$/;"	f	class:Pass
verifyBBInRegion	Analysis/RegionInfo.cpp	/^void Region::verifyBBInRegion(BasicBlock *BB) const {$/;"	f	class:Region
verifyDominatesUse	VMCore/Verifier.cpp	/^void Verifier::verifyDominatesUse(Instruction &I, unsigned i) {$/;"	f	class:Verifier
verifyFunction	VMCore/Verifier.cpp	/^bool llvm::verifyFunction(const Function &f, VerifierFailureAction action) {$/;"	f	class:llvm
verifyInlineAsm	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::verifyInlineAsm(const MachineInstr *MI) {$/;"	f	class:MachineVerifier
verifyInstruction	Target/ARM/ARMBaseInstrInfo.cpp	/^bool ARMBaseInstrInfo::verifyInstruction(const MachineInstr *MI,$/;"	f	class:ARMBaseInstrInfo
verifyLiveInterval	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::verifyLiveInterval(const LiveInterval &LI) {$/;"	f	class:MachineVerifier
verifyLiveIntervalSegment	CodeGen/MachineVerifier.cpp	/^MachineVerifier::verifyLiveIntervalSegment(const LiveInterval &LI,$/;"	f	class:MachineVerifier
verifyLiveIntervalValue	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::verifyLiveIntervalValue(const LiveInterval &LI,$/;"	f	class:MachineVerifier
verifyLiveIntervals	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::verifyLiveIntervals() {$/;"	f	class:MachineVerifier
verifyLiveVariables	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::verifyLiveVariables() {$/;"	f	class:MachineVerifier
verifyModule	VMCore/Verifier.cpp	/^bool llvm::verifyModule(const Module &M, VerifierFailureAction action,$/;"	f	class:llvm
verifyPreservedAnalysis	VMCore/PassManager.cpp	/^void PMDataManager::verifyPreservedAnalysis(Pass *P) {$/;"	f	class:PMDataManager
verifyRegion	Analysis/RegionInfo.cpp	/^void Region::verifyRegion() const {$/;"	f	class:Region
verifyRegionNest	Analysis/RegionInfo.cpp	/^void Region::verifyRegionNest() const {$/;"	f	class:Region
verifyRemoved	Analysis/MemoryDependenceAnalysis.cpp	/^void MemoryDependenceAnalysis::verifyRemoved(Instruction *D) const {$/;"	f	class:MemoryDependenceAnalysis
verifyRemoved	Transforms/Scalar/GVN.cpp	/^void GVN::verifyRemoved(const Instruction *Inst) const {$/;"	f	class:GVN
verifyRemoved	Transforms/Scalar/GVN.cpp	/^void ValueTable::verifyRemoved(const Value *V) const {$/;"	f	class:ValueTable
verifySpillRestorePlacement	CodeGen/ShrinkWrapping.cpp	/^void PEI::verifySpillRestorePlacement() {$/;"	f	class:PEI
verifyWalk	Analysis/RegionInfo.cpp	/^void Region::verifyWalk(BasicBlock *BB, std::set<BasicBlock*> *visited) const {$/;"	f	class:Region
version	CodeGen/AsmPrinter/DwarfAccelTable.h	/^    uint16_t   version;         \/\/ Version number.$/;"	m	struct:llvm::DwarfAccelTable::TableHeader
version	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^    uint32_t version;$/;"	m	struct:jit_descriptor	file:
version_build	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    unsigned long          version_build;$/;"	m	struct:___itt_global
version_major	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    unsigned long          version_major;$/;"	m	struct:___itt_global
version_minor	ExecutionEngine/IntelJITEvents/ittnotify_config.h	/^    unsigned long          version_minor;$/;"	m	struct:___itt_global
vexPrefix	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t vexPrefix[3];$/;"	m	struct:InternalInstruction
vexSize	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  uint8_t vexSize;$/;"	m	struct:InternalInstruction
view	CodeGen/EdgeBundles.cpp	/^void EdgeBundles::view() const {$/;"	f	class:EdgeBundles
viewCFG	Analysis/CFGPrinter.cpp	/^void Function::viewCFG() const {$/;"	f	class:Function
viewCFG	CodeGen/MachineFunction.cpp	/^void MachineFunction::viewCFG() const$/;"	f	class:MachineFunction
viewCFGOnly	Analysis/CFGPrinter.cpp	/^void Function::viewCFGOnly() const {$/;"	f	class:Function
viewCFGOnly	CodeGen/MachineFunction.cpp	/^void MachineFunction::viewCFGOnly() const$/;"	f	class:MachineFunction
viewGraph	CodeGen/ScheduleDAGPrinter.cpp	/^void ScheduleDAG::viewGraph() {$/;"	f	class:ScheduleDAG
viewGraph	CodeGen/ScheduleDAGPrinter.cpp	/^void ScheduleDAG::viewGraph(const Twine &Name, const Twine &Title) {$/;"	f	class:ScheduleDAG
viewGraph	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^void SelectionDAG::viewGraph() {$/;"	f	class:SelectionDAG
viewGraph	CodeGen/SelectionDAG/SelectionDAGPrinter.cpp	/^void SelectionDAG::viewGraph(const std::string &Title) {$/;"	f	class:SelectionDAG
virtReg	CodeGen/LiveIntervalUnion.h	/^    LiveInterval &virtReg() const {$/;"	f	class:llvm::LiveIntervalUnion::Query
virtRegToEqClass	CodeGen/LiveDebugVariables.cpp	/^  VRMap virtRegToEqClass;$/;"	m	class:__anon153::LDVImpl	file:
visit	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visit(SDNode *N) {$/;"	f	class:DAGCombiner
visit	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visit(const Instruction &I) {$/;"	f	class:SelectionDAGBuilder
visit	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visit(unsigned Opcode, const User &I) {$/;"	f	class:SelectionDAGBuilder
visit	VMCore/Verifier.cpp	/^void Verifier::visit(Instruction &I) {$/;"	f	class:Verifier
visitADD	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitADD(SDNode *N) {$/;"	f	class:DAGCombiner
visitADDC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitADDC(SDNode *N) {$/;"	f	class:DAGCombiner
visitADDE	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitADDE(SDNode *N) {$/;"	f	class:DAGCombiner
visitAND	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitAND(SDNode *N) {$/;"	f	class:DAGCombiner
visitANY_EXTEND	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitANY_EXTEND(SDNode *N) {$/;"	f	class:DAGCombiner
visitAShr	Analysis/Lint.cpp	/^void Lint::visitAShr(BinaryOperator &I) {$/;"	f	class:Lint
visitAShr	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitAShr(const User &I) { visitShift(I, ISD::SRA); }$/;"	f	class:llvm::SelectionDAGBuilder
visitAShr	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitAShr(BinaryOperator &I) {$/;"	f	class:Interpreter
visitAShr	Transforms/InstCombine/InstCombineShifts.cpp	/^Instruction *InstCombiner::visitAShr(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitAdd	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitAdd(const User &I)  { visitBinary(I, ISD::ADD); }$/;"	f	class:llvm::SelectionDAGBuilder
visitAdd	Transforms/InstCombine/InstCombineAddSub.cpp	/^Instruction *InstCombiner::visitAdd(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitAddExpr	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::visitAddExpr(const SCEVAddExpr *S) {$/;"	f	class:SCEVExpander
visitAddRecExpr	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::visitAddRecExpr(const SCEVAddRecExpr *S) {$/;"	f	class:SCEVExpander
visitAllocSite	Transforms/InstCombine/InstructionCombining.cpp	/^Instruction *InstCombiner::visitAllocSite(Instruction &MI) {$/;"	f	class:InstCombiner
visitAlloca	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitAlloca(AllocaInst &I) {$/;"	f	class:CallAnalyzer
visitAlloca	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitAlloca(const AllocaInst &I) {$/;"	f	class:SelectionDAGBuilder
visitAllocaInst	Analysis/Lint.cpp	/^void Lint::visitAllocaInst(AllocaInst &I) {$/;"	f	class:Lint
visitAllocaInst	Analysis/MemoryBuiltins.cpp	/^SizeOffsetEvalType ObjectSizeOffsetEvaluator::visitAllocaInst(AllocaInst &I) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitAllocaInst	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitAllocaInst(AllocaInst &I) {$/;"	f	class:ObjectSizeOffsetVisitor
visitAllocaInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitAllocaInst(AllocaInst &I) {$/;"	f	class:Interpreter
visitAllocaInst	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^Instruction *InstCombiner::visitAllocaInst(AllocaInst &AI) {$/;"	f	class:InstCombiner
visitAllocaInst	Transforms/Scalar/SCCP.cpp	/^  void visitAllocaInst    (Instruction &I) { markOverdefined(&I); }$/;"	f	class:__anon531::SCCPSolver	file:
visitAllocaInst	VMCore/Verifier.cpp	/^void Verifier::visitAllocaInst(AllocaInst &AI) {$/;"	f	class:Verifier
visitAnd	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitAnd (const User &I) { visitBinary(I, ISD::AND); }$/;"	f	class:llvm::SelectionDAGBuilder
visitAnd	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Instruction *InstCombiner::visitAnd(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitArgument	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitArgument(Argument &A) {$/;"	f	class:ObjectSizeOffsetVisitor
visitAtomicCmpXchg	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitAtomicCmpXchg(const AtomicCmpXchgInst &I) {$/;"	f	class:SelectionDAGBuilder
visitAtomicCmpXchgInst	Transforms/Scalar/SCCP.cpp	/^  void visitAtomicCmpXchgInst (AtomicCmpXchgInst &I) { markOverdefined(&I); }$/;"	f	class:__anon531::SCCPSolver	file:
visitAtomicCmpXchgInst	VMCore/Verifier.cpp	/^void Verifier::visitAtomicCmpXchgInst(AtomicCmpXchgInst &CXI) {$/;"	f	class:Verifier
visitAtomicLoad	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitAtomicLoad(const LoadInst &I) {$/;"	f	class:SelectionDAGBuilder
visitAtomicRMW	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitAtomicRMW(const AtomicRMWInst &I) {$/;"	f	class:SelectionDAGBuilder
visitAtomicRMWInst	Transforms/Scalar/SCCP.cpp	/^  void visitAtomicRMWInst (AtomicRMWInst &I) { markOverdefined(&I); }$/;"	f	class:__anon531::SCCPSolver	file:
visitAtomicRMWInst	VMCore/Verifier.cpp	/^void Verifier::visitAtomicRMWInst(AtomicRMWInst &RMWI) {$/;"	f	class:Verifier
visitAtomicStore	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitAtomicStore(const StoreInst &I) {$/;"	f	class:SelectionDAGBuilder
visitBITCAST	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitBITCAST(SDNode *N) {$/;"	f	class:DAGCombiner
visitBRCOND	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitBRCOND(SDNode *N) {$/;"	f	class:DAGCombiner
visitBR_CC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitBR_CC(SDNode *N) {$/;"	f	class:DAGCombiner
visitBUILD_PAIR	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitBUILD_PAIR(SDNode *N) {$/;"	f	class:DAGCombiner
visitBUILD_VECTOR	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitBUILD_VECTOR(SDNode *N) {$/;"	f	class:DAGCombiner
visitBasicBlock	Analysis/InstCount.cpp	/^    void visitBasicBlock(BasicBlock &BB) { ++TotalBlocks; }$/;"	f	class:__anon17::InstCount	file:
visitBasicBlock	VMCore/Verifier.cpp	/^void Verifier::visitBasicBlock(BasicBlock &BB) {$/;"	f	class:Verifier
visitBinary	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitBinary(const User &I, unsigned OpCode) {$/;"	f	class:SelectionDAGBuilder
visitBinaryOperator	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitBinaryOperator(BinaryOperator &I) {$/;"	f	class:CallAnalyzer
visitBinaryOperator	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitBinaryOperator(BinaryOperator &I) {$/;"	f	class:Interpreter
visitBinaryOperator	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitBinaryOperator(Instruction &I) {$/;"	f	class:SCCPSolver
visitBinaryOperator	VMCore/Verifier.cpp	/^void Verifier::visitBinaryOperator(BinaryOperator &B) {$/;"	f	class:Verifier
visitBitCast	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitBitCast(BitCastInst &I) {$/;"	f	class:CallAnalyzer
visitBitCast	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitBitCast(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitBitCast	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitBitCast(BitCastInst &CI) {$/;"	f	class:InstCombiner
visitBitCastInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitBitCastInst(BitCastInst &I) {$/;"	f	class:Interpreter
visitBitCastInst	Transforms/Scalar/SROA.cpp	/^  bool visitBitCastInst(BitCastInst &BC) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitBitCastInst	Transforms/Scalar/SROA.cpp	/^  bool visitBitCastInst(BitCastInst &BC) {$/;"	f	class:__anon562::AggLoadStoreRewriter	file:
visitBitCastInst	Transforms/Scalar/SROA.cpp	/^  void visitBitCastInst(BitCastInst &BC) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitBitCastInst	VMCore/Verifier.cpp	/^void Verifier::visitBitCastInst(BitCastInst &I) {$/;"	f	class:Verifier
visitBitTestCase	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitBitTestCase(BitTestBlock &BB,$/;"	f	class:SelectionDAGBuilder
visitBitTestHeader	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitBitTestHeader(BitTestBlock &B,$/;"	f	class:SelectionDAGBuilder
visitBr	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitBr(const BranchInst &I) {$/;"	f	class:SelectionDAGBuilder
visitBranchInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitBranchInst(BranchInst &I) {$/;"	f	class:Interpreter
visitBranchInst	Transforms/InstCombine/InstructionCombining.cpp	/^Instruction *InstCombiner::visitBranchInst(BranchInst &BI) {$/;"	f	class:InstCombiner
visitBranchInst	VMCore/Verifier.cpp	/^void Verifier::visitBranchInst(BranchInst &BI) {$/;"	f	class:Verifier
visitCONCAT_VECTORS	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitCONCAT_VECTORS(SDNode *N) {$/;"	f	class:DAGCombiner
visitCTLZ	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitCTLZ(SDNode *N) {$/;"	f	class:DAGCombiner
visitCTLZ_ZERO_UNDEF	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitCTLZ_ZERO_UNDEF(SDNode *N) {$/;"	f	class:DAGCombiner
visitCTPOP	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitCTPOP(SDNode *N) {$/;"	f	class:DAGCombiner
visitCTTZ	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitCTTZ(SDNode *N) {$/;"	f	class:DAGCombiner
visitCTTZ_ZERO_UNDEF	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitCTTZ_ZERO_UNDEF(SDNode *N) {$/;"	f	class:DAGCombiner
visitCall	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitCall(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitCallInst	Analysis/Lint.cpp	/^void Lint::visitCallInst(CallInst &I) {$/;"	f	class:Lint
visitCallInst	ExecutionEngine/Interpreter/Interpreter.h	/^  void visitCallInst(CallInst &I) { visitCallSite (CallSite (&I)); }$/;"	f	class:llvm::Interpreter
visitCallInst	Transforms/InstCombine/InstCombineCalls.cpp	/^Instruction *InstCombiner::visitCallInst(CallInst &CI) {$/;"	f	class:InstCombiner
visitCallInst	Transforms/Scalar/SCCP.cpp	/^  void visitCallInst      (CallInst &I) {$/;"	f	class:__anon531::SCCPSolver	file:
visitCallInst	VMCore/Verifier.cpp	/^void Verifier::visitCallInst(CallInst &CI) {$/;"	f	class:Verifier
visitCallSite	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitCallSite(CallSite CS) {$/;"	f	class:CallAnalyzer
visitCallSite	Analysis/Lint.cpp	/^void Lint::visitCallSite(CallSite CS) {$/;"	f	class:Lint
visitCallSite	Analysis/MemoryBuiltins.cpp	/^SizeOffsetEvalType ObjectSizeOffsetEvaluator::visitCallSite(CallSite CS) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitCallSite	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitCallSite(CallSite CS) {$/;"	f	class:ObjectSizeOffsetVisitor
visitCallSite	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitCallSite(CallSite CS) {$/;"	f	class:Interpreter
visitCallSite	Transforms/InstCombine/InstCombineCalls.cpp	/^Instruction *InstCombiner::visitCallSite(CallSite CS) {$/;"	f	class:InstCombiner
visitCallSite	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitCallSite(CallSite CS) {$/;"	f	class:SCCPSolver
visitCast	Transforms/Scalar/IndVarSimplify.cpp	/^void WideIVVisitor::visitCast(CastInst *Cast) {$/;"	f	class:WideIVVisitor
visitCastInst	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitCastInst(CastInst &I) {$/;"	f	class:CallAnalyzer
visitCastInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitCastInst(CastInst &I) {$/;"	f	class:SCCPSolver
visitCmpInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitCmpInst(CmpInst &I) {$/;"	f	class:SCCPSolver
visitConstantPointerNull	Analysis/MemoryBuiltins.cpp	/^ObjectSizeOffsetVisitor::visitConstantPointerNull(ConstantPointerNull&) {$/;"	f	class:ObjectSizeOffsetVisitor
visitEXTRACT_SUBVECTOR	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitEXTRACT_SUBVECTOR(SDNode* N) {$/;"	f	class:DAGCombiner
visitEXTRACT_VECTOR_ELT	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitEXTRACT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGCombiner
visitExp	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::visitExp(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitExp2	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::visitExp2(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitExtractElement	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitExtractElement(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitExtractElementInst	Analysis/Lint.cpp	/^void Lint::visitExtractElementInst(ExtractElementInst &I) {$/;"	f	class:Lint
visitExtractElementInst	Analysis/MemoryBuiltins.cpp	/^ObjectSizeOffsetEvaluator::visitExtractElementInst(ExtractElementInst&) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitExtractElementInst	Analysis/MemoryBuiltins.cpp	/^ObjectSizeOffsetVisitor::visitExtractElementInst(ExtractElementInst&) {$/;"	f	class:ObjectSizeOffsetVisitor
visitExtractElementInst	Transforms/InstCombine/InstCombineVectorOps.cpp	/^Instruction *InstCombiner::visitExtractElementInst(ExtractElementInst &EI) {$/;"	f	class:InstCombiner
visitExtractElementInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitExtractElementInst(ExtractElementInst &I) {$/;"	f	class:SCCPSolver
visitExtractElementInst	VMCore/Verifier.cpp	/^void Verifier::visitExtractElementInst(ExtractElementInst &EI) {$/;"	f	class:Verifier
visitExtractValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitExtractValue(const ExtractValueInst &I) {$/;"	f	class:SelectionDAGBuilder
visitExtractValueInst	Analysis/MemoryBuiltins.cpp	/^ObjectSizeOffsetEvaluator::visitExtractValueInst(ExtractValueInst&) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitExtractValueInst	Analysis/MemoryBuiltins.cpp	/^ObjectSizeOffsetVisitor::visitExtractValueInst(ExtractValueInst&) {$/;"	f	class:ObjectSizeOffsetVisitor
visitExtractValueInst	Transforms/InstCombine/InstructionCombining.cpp	/^Instruction *InstCombiner::visitExtractValueInst(ExtractValueInst &EV) {$/;"	f	class:InstCombiner
visitExtractValueInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitExtractValueInst(ExtractValueInst &EVI) {$/;"	f	class:SCCPSolver
visitExtractValueInst	VMCore/Verifier.cpp	/^void Verifier::visitExtractValueInst(ExtractValueInst &EVI) {$/;"	f	class:Verifier
visitFABS	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFABS(SDNode *N) {$/;"	f	class:DAGCombiner
visitFADD	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFADD(SDNode *N) {$/;"	f	class:DAGCombiner
visitFAdd	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitFAdd(const User &I) { visitBinary(I, ISD::FADD); }$/;"	f	class:llvm::SelectionDAGBuilder
visitFAdd	Transforms/InstCombine/InstCombineAddSub.cpp	/^Instruction *InstCombiner::visitFAdd(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitFCEIL	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFCEIL(SDNode *N) {$/;"	f	class:DAGCombiner
visitFCOPYSIGN	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFCOPYSIGN(SDNode *N) {$/;"	f	class:DAGCombiner
visitFCmp	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitFCmp(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitFCmpInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitFCmpInst(FCmpInst &I) {$/;"	f	class:Interpreter
visitFCmpInst	Transforms/InstCombine/InstCombineCompares.cpp	/^Instruction *InstCombiner::visitFCmpInst(FCmpInst &I) {$/;"	f	class:InstCombiner
visitFCmpInst	VMCore/Verifier.cpp	/^void Verifier::visitFCmpInst(FCmpInst &FC) {$/;"	f	class:Verifier
visitFDIV	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFDIV(SDNode *N) {$/;"	f	class:DAGCombiner
visitFDiv	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitFDiv(const User &I) { visitBinary(I, ISD::FDIV); }$/;"	f	class:llvm::SelectionDAGBuilder
visitFDiv	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::visitFDiv(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitFFLOOR	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFFLOOR(SDNode *N) {$/;"	f	class:DAGCombiner
visitFMA	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFMA(SDNode *N) {$/;"	f	class:DAGCombiner
visitFMUL	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFMUL(SDNode *N) {$/;"	f	class:DAGCombiner
visitFMul	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitFMul(const User &I) { visitBinary(I, ISD::FMUL); }$/;"	f	class:llvm::SelectionDAGBuilder
visitFMul	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::visitFMul(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitFNEG	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFNEG(SDNode *N) {$/;"	f	class:DAGCombiner
visitFPExt	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitFPExt(const User &I){$/;"	f	class:SelectionDAGBuilder
visitFPExt	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitFPExt(CastInst &CI) {$/;"	f	class:InstCombiner
visitFPExtInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitFPExtInst(FPExtInst &I) {$/;"	f	class:Interpreter
visitFPExtInst	VMCore/Verifier.cpp	/^void Verifier::visitFPExtInst(FPExtInst &I) {$/;"	f	class:Verifier
visitFPToSI	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitFPToSI(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitFPToSI	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitFPToSI(FPToSIInst &FI) {$/;"	f	class:InstCombiner
visitFPToSIInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitFPToSIInst(FPToSIInst &I) {$/;"	f	class:Interpreter
visitFPToSIInst	VMCore/Verifier.cpp	/^void Verifier::visitFPToSIInst(FPToSIInst &I) {$/;"	f	class:Verifier
visitFPToUI	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitFPToUI(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitFPToUI	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitFPToUI(FPToUIInst &FI) {$/;"	f	class:InstCombiner
visitFPToUIInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitFPToUIInst(FPToUIInst &I) {$/;"	f	class:Interpreter
visitFPToUIInst	VMCore/Verifier.cpp	/^void Verifier::visitFPToUIInst(FPToUIInst &I) {$/;"	f	class:Verifier
visitFPTrunc	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitFPTrunc(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitFPTrunc	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitFPTrunc(FPTruncInst &CI) {$/;"	f	class:InstCombiner
visitFPTruncInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitFPTruncInst(FPTruncInst &I) {$/;"	f	class:Interpreter
visitFPTruncInst	VMCore/Verifier.cpp	/^void Verifier::visitFPTruncInst(FPTruncInst &I) {$/;"	f	class:Verifier
visitFP_EXTEND	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFP_EXTEND(SDNode *N) {$/;"	f	class:DAGCombiner
visitFP_ROUND	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFP_ROUND(SDNode *N) {$/;"	f	class:DAGCombiner
visitFP_ROUND_INREG	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFP_ROUND_INREG(SDNode *N) {$/;"	f	class:DAGCombiner
visitFP_TO_SINT	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFP_TO_SINT(SDNode *N) {$/;"	f	class:DAGCombiner
visitFP_TO_UINT	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFP_TO_UINT(SDNode *N) {$/;"	f	class:DAGCombiner
visitFREM	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFREM(SDNode *N) {$/;"	f	class:DAGCombiner
visitFRem	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitFRem(const User &I) { visitBinary(I, ISD::FREM); }$/;"	f	class:llvm::SelectionDAGBuilder
visitFRem	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::visitFRem(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitFSUB	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFSUB(SDNode *N) {$/;"	f	class:DAGCombiner
visitFSub	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitFSub(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitFSub	Transforms/InstCombine/InstCombineAddSub.cpp	/^Instruction *InstCombiner::visitFSub(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitFTRUNC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitFTRUNC(SDNode *N) {$/;"	f	class:DAGCombiner
visitFence	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitFence(const FenceInst &I) {$/;"	f	class:SelectionDAGBuilder
visitFenceInst	Transforms/Scalar/SCCP.cpp	/^  void visitFenceInst     (FenceInst &I) { \/*returns void*\/ }$/;"	f	class:__anon531::SCCPSolver	file:
visitFenceInst	VMCore/Verifier.cpp	/^void Verifier::visitFenceInst(FenceInst &FI) {$/;"	f	class:Verifier
visitFree	Transforms/InstCombine/InstructionCombining.cpp	/^Instruction *InstCombiner::visitFree(CallInst &FI) {$/;"	f	class:InstCombiner
visitFunction	Analysis/InstCount.cpp	/^    void visitFunction  (Function &F) { ++TotalFuncs; }$/;"	f	class:__anon17::InstCount	file:
visitFunction	Analysis/Lint.cpp	/^void Lint::visitFunction(Function &F) {$/;"	f	class:Lint
visitFunction	VMCore/Verifier.cpp	/^void Verifier::visitFunction(Function &F) {$/;"	f	class:Verifier
visitGEPOperator	Analysis/MemoryBuiltins.cpp	/^ObjectSizeOffsetEvaluator::visitGEPOperator(GEPOperator &GEP) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitGEPOperator	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitGEPOperator(GEPOperator &GEP) {$/;"	f	class:ObjectSizeOffsetVisitor
visitGetElementPtr	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitGetElementPtr(GetElementPtrInst &I) {$/;"	f	class:CallAnalyzer
visitGetElementPtr	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitGetElementPtr(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitGetElementPtrInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitGetElementPtrInst(GetElementPtrInst &I) {$/;"	f	class:Interpreter
visitGetElementPtrInst	Transforms/InstCombine/InstructionCombining.cpp	/^Instruction *InstCombiner::visitGetElementPtrInst(GetElementPtrInst &GEP) {$/;"	f	class:InstCombiner
visitGetElementPtrInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitGetElementPtrInst(GetElementPtrInst &I) {$/;"	f	class:SCCPSolver
visitGetElementPtrInst	Transforms/Scalar/SROA.cpp	/^  bool visitGetElementPtrInst(GetElementPtrInst &GEPI) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitGetElementPtrInst	Transforms/Scalar/SROA.cpp	/^  bool visitGetElementPtrInst(GetElementPtrInst &GEPI) {$/;"	f	class:__anon562::AggLoadStoreRewriter	file:
visitGetElementPtrInst	Transforms/Scalar/SROA.cpp	/^  void visitGetElementPtrInst(GetElementPtrInst &GEPI) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitGetElementPtrInst	VMCore/Verifier.cpp	/^void Verifier::visitGetElementPtrInst(GetElementPtrInst &GEP) {$/;"	f	class:Verifier
visitGlobalAlias	VMCore/Verifier.cpp	/^void Verifier::visitGlobalAlias(GlobalAlias &GA) {$/;"	f	class:Verifier
visitGlobalValue	VMCore/Verifier.cpp	/^void Verifier::visitGlobalValue(GlobalValue &GV) {$/;"	f	class:Verifier
visitGlobalVariable	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitGlobalVariable(GlobalVariable &GV){$/;"	f	class:ObjectSizeOffsetVisitor
visitGlobalVariable	VMCore/Verifier.cpp	/^void Verifier::visitGlobalVariable(GlobalVariable &GV) {$/;"	f	class:Verifier
visitHardInstr	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::visitHardInstr(MachineInstr *mi, unsigned domain) {$/;"	f	class:ExeDepsFix
visitICmp	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitICmp(ICmpInst &I) {$/;"	f	class:CallAnalyzer
visitICmp	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitICmp(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitICmpInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitICmpInst(ICmpInst &I) {$/;"	f	class:Interpreter
visitICmpInst	Transforms/InstCombine/InstCombineCompares.cpp	/^Instruction *InstCombiner::visitICmpInst(ICmpInst &I) {$/;"	f	class:InstCombiner
visitICmpInst	VMCore/Verifier.cpp	/^void Verifier::visitICmpInst(ICmpInst &IC) {$/;"	f	class:Verifier
visitICmpInstWithCastAndCast	Transforms/InstCombine/InstCombineCompares.cpp	/^Instruction *InstCombiner::visitICmpInstWithCastAndCast(ICmpInst &ICI) {$/;"	f	class:InstCombiner
visitICmpInstWithInstAndIntCst	Transforms/InstCombine/InstCombineCompares.cpp	/^Instruction *InstCombiner::visitICmpInstWithInstAndIntCst(ICmpInst &ICI,$/;"	f	class:InstCombiner
visitINSERT_VECTOR_ELT	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitINSERT_VECTOR_ELT(SDNode *N) {$/;"	f	class:DAGCombiner
visitIndirectBr	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitIndirectBr(const IndirectBrInst &I) {$/;"	f	class:SelectionDAGBuilder
visitIndirectBrInst	Analysis/Lint.cpp	/^void Lint::visitIndirectBrInst(IndirectBrInst &I) {$/;"	f	class:Lint
visitIndirectBrInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitIndirectBrInst(IndirectBrInst &I) {$/;"	f	class:Interpreter
visitIndirectBrInst	VMCore/Verifier.cpp	/^void Verifier::visitIndirectBrInst(IndirectBrInst &BI) {$/;"	f	class:Verifier
visitInlineAsm	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitInlineAsm(ImmutableCallSite CS) {$/;"	f	class:SelectionDAGBuilder
visitInsertElement	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitInsertElement(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitInsertElementInst	Analysis/Lint.cpp	/^void Lint::visitInsertElementInst(InsertElementInst &I) {$/;"	f	class:Lint
visitInsertElementInst	Transforms/InstCombine/InstCombineVectorOps.cpp	/^Instruction *InstCombiner::visitInsertElementInst(InsertElementInst &IE) {$/;"	f	class:InstCombiner
visitInsertElementInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitInsertElementInst(InsertElementInst &I) {$/;"	f	class:SCCPSolver
visitInsertElementInst	VMCore/Verifier.cpp	/^void Verifier::visitInsertElementInst(InsertElementInst &IE) {$/;"	f	class:Verifier
visitInsertValue	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitInsertValue(const InsertValueInst &I) {$/;"	f	class:SelectionDAGBuilder
visitInsertValueInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitInsertValueInst(InsertValueInst &IVI) {$/;"	f	class:SCCPSolver
visitInsertValueInst	VMCore/Verifier.cpp	/^void Verifier::visitInsertValueInst(InsertValueInst &IVI) {$/;"	f	class:Verifier
visitInst	Analysis/SparsePropagation.cpp	/^void SparseSolver::visitInst(Instruction &I) {$/;"	f	class:SparseSolver
visitInstr	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::visitInstr(MachineInstr *MI) {$/;"	f	class:ExeDepsFix
visitInstruction	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitInstruction(Instruction &I) {$/;"	f	class:CallAnalyzer
visitInstruction	Analysis/InstCount.cpp	/^    void visitInstruction(Instruction &I) {$/;"	f	class:__anon17::InstCount	file:
visitInstruction	Analysis/MemoryBuiltins.cpp	/^SizeOffsetEvalType ObjectSizeOffsetEvaluator::visitInstruction(Instruction &I) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitInstruction	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitInstruction(Instruction &I) {$/;"	f	class:ObjectSizeOffsetVisitor
visitInstruction	ExecutionEngine/Interpreter/Interpreter.h	/^  void visitInstruction(Instruction &I) {$/;"	f	class:llvm::Interpreter
visitInstruction	Transforms/InstCombine/InstCombine.h	/^  Instruction *visitInstruction(Instruction &I) { return 0; }$/;"	f	class:llvm::InstCombiner
visitInstruction	Transforms/Scalar/SCCP.cpp	/^  void visitInstruction(Instruction &I) {$/;"	f	class:__anon531::SCCPSolver	file:
visitInstruction	Transforms/Scalar/SROA.cpp	/^  bool visitInstruction(Instruction &I) { return false; }$/;"	f	class:__anon562::AggLoadStoreRewriter	file:
visitInstruction	Transforms/Scalar/SROA.cpp	/^  bool visitInstruction(Instruction &I) { return markAsEscaping(I); }$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitInstruction	Transforms/Scalar/SROA.cpp	/^  bool visitInstruction(Instruction &I) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
visitInstruction	Transforms/Scalar/SROA.cpp	/^  void visitInstruction(Instruction &I) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitInstruction	Transforms/Scalar/SROA.cpp	/^  void visitInstruction(Instruction &I) {}$/;"	f	class:__anon560::PHIOrSelectSpeculator	file:
visitInstruction	VMCore/Verifier.cpp	/^void Verifier::visitInstruction(Instruction &I) {$/;"	f	class:Verifier
visitIntToPtr	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitIntToPtr(IntToPtrInst &I) {$/;"	f	class:CallAnalyzer
visitIntToPtr	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitIntToPtr(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitIntToPtr	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitIntToPtr(IntToPtrInst &CI) {$/;"	f	class:InstCombiner
visitIntToPtrInst	Analysis/MemoryBuiltins.cpp	/^SizeOffsetEvalType ObjectSizeOffsetEvaluator::visitIntToPtrInst(IntToPtrInst&) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitIntToPtrInst	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitIntToPtrInst(IntToPtrInst&) {$/;"	f	class:ObjectSizeOffsetVisitor
visitIntToPtrInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitIntToPtrInst(IntToPtrInst &I) {$/;"	f	class:Interpreter
visitIntToPtrInst	VMCore/Verifier.cpp	/^void Verifier::visitIntToPtrInst(IntToPtrInst &I) {$/;"	f	class:Verifier
visitIntrinsicCall	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::visitIntrinsicCall(const CallInst &I, unsigned Intrinsic) {$/;"	f	class:SelectionDAGBuilder
visitIntrinsicFunctionCall	VMCore/Verifier.cpp	/^void Verifier::visitIntrinsicFunctionCall(Intrinsic::ID ID, CallInst &CI) {$/;"	f	class:Verifier
visitIntrinsicInst	Transforms/Scalar/SROA.cpp	/^  bool visitIntrinsicInst(IntrinsicInst &II) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitIntrinsicInst	Transforms/Scalar/SROA.cpp	/^  bool visitIntrinsicInst(IntrinsicInst &II) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
visitIntrinsicInst	Transforms/Scalar/SROA.cpp	/^  void visitIntrinsicInst(IntrinsicInst &II) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitInvoke	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitInvoke(const InvokeInst &I) {$/;"	f	class:SelectionDAGBuilder
visitInvokeInst	Analysis/Lint.cpp	/^void Lint::visitInvokeInst(InvokeInst &I) {$/;"	f	class:Lint
visitInvokeInst	ExecutionEngine/Interpreter/Interpreter.h	/^  void visitInvokeInst(InvokeInst &I) { visitCallSite (CallSite (&I)); }$/;"	f	class:llvm::Interpreter
visitInvokeInst	Transforms/InstCombine/InstCombineCalls.cpp	/^Instruction *InstCombiner::visitInvokeInst(InvokeInst &II) {$/;"	f	class:InstCombiner
visitInvokeInst	Transforms/Scalar/SCCP.cpp	/^  void visitInvokeInst    (InvokeInst &II) {$/;"	f	class:__anon531::SCCPSolver	file:
visitInvokeInst	VMCore/Verifier.cpp	/^void Verifier::visitInvokeInst(InvokeInst &II) {$/;"	f	class:Verifier
visitJumpTable	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitJumpTable(JumpTable &JT) {$/;"	f	class:SelectionDAGBuilder
visitJumpTableHeader	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitJumpTableHeader(JumpTable &JT,$/;"	f	class:SelectionDAGBuilder
visitLOAD	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitLOAD(SDNode *N) {$/;"	f	class:DAGCombiner
visitLShr	Analysis/Lint.cpp	/^void Lint::visitLShr(BinaryOperator &I) {$/;"	f	class:Lint
visitLShr	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitLShr(const User &I) { visitShift(I, ISD::SRL); }$/;"	f	class:llvm::SelectionDAGBuilder
visitLShr	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitLShr(BinaryOperator &I) {$/;"	f	class:Interpreter
visitLShr	Transforms/InstCombine/InstCombineShifts.cpp	/^Instruction *InstCombiner::visitLShr(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitLandingPad	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitLandingPad(const LandingPadInst &LP) {$/;"	f	class:SelectionDAGBuilder
visitLandingPadInst	Transforms/InstCombine/InstructionCombining.cpp	/^Instruction *InstCombiner::visitLandingPadInst(LandingPadInst &LI) {$/;"	f	class:InstCombiner
visitLandingPadInst	Transforms/Scalar/SCCP.cpp	/^  void visitLandingPadInst(LandingPadInst &I) { markAnythingOverdefined(&I); }$/;"	f	class:__anon531::SCCPSolver	file:
visitLandingPadInst	VMCore/Verifier.cpp	/^void Verifier::visitLandingPadInst(LandingPadInst &LPI) {$/;"	f	class:Verifier
visitLoad	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitLoad(LoadInst &I) {$/;"	f	class:CallAnalyzer
visitLoad	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitLoad(const LoadInst &I) {$/;"	f	class:SelectionDAGBuilder
visitLoadInst	Analysis/Lint.cpp	/^void Lint::visitLoadInst(LoadInst &I) {$/;"	f	class:Lint
visitLoadInst	Analysis/MemoryBuiltins.cpp	/^SizeOffsetEvalType ObjectSizeOffsetEvaluator::visitLoadInst(LoadInst&) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitLoadInst	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitLoadInst(LoadInst&) {$/;"	f	class:ObjectSizeOffsetVisitor
visitLoadInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitLoadInst(LoadInst &I) {$/;"	f	class:Interpreter
visitLoadInst	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^Instruction *InstCombiner::visitLoadInst(LoadInst &LI) {$/;"	f	class:InstCombiner
visitLoadInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitLoadInst(LoadInst &I) {$/;"	f	class:SCCPSolver
visitLoadInst	Transforms/Scalar/SROA.cpp	/^  bool visitLoadInst(LoadInst &LI) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitLoadInst	Transforms/Scalar/SROA.cpp	/^  bool visitLoadInst(LoadInst &LI) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
visitLoadInst	Transforms/Scalar/SROA.cpp	/^  bool visitLoadInst(LoadInst &LI) {$/;"	f	class:__anon562::AggLoadStoreRewriter	file:
visitLoadInst	Transforms/Scalar/SROA.cpp	/^  void visitLoadInst(LoadInst &LI) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitLoadInst	VMCore/Verifier.cpp	/^void Verifier::visitLoadInst(LoadInst &LI) {$/;"	f	class:Verifier
visitLog	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::visitLog(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitLog10	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::visitLog10(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitLog2	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::visitLog2(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitMDNode	VMCore/Verifier.cpp	/^void Verifier::visitMDNode(MDNode &MD, Function *F) {$/;"	f	class:Verifier
visitMEMBARRIER	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitMEMBARRIER(SDNode* N) {$/;"	f	class:DAGCombiner
visitMERGE_VALUES	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitMERGE_VALUES(SDNode *N) {$/;"	f	class:DAGCombiner
visitMUL	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitMUL(SDNode *N) {$/;"	f	class:DAGCombiner
visitMULHS	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitMULHS(SDNode *N) {$/;"	f	class:DAGCombiner
visitMULHU	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitMULHU(SDNode *N) {$/;"	f	class:DAGCombiner
visitMachineBasicBlockAfter	CodeGen/MachineVerifier.cpp	/^MachineVerifier::visitMachineBasicBlockAfter(const MachineBasicBlock *MBB) {$/;"	f	class:MachineVerifier
visitMachineBasicBlockBefore	CodeGen/MachineVerifier.cpp	/^MachineVerifier::visitMachineBasicBlockBefore(const MachineBasicBlock *MBB) {$/;"	f	class:MachineVerifier
visitMachineBundleAfter	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::visitMachineBundleAfter(const MachineInstr *MI) {$/;"	f	class:MachineVerifier
visitMachineBundleBefore	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::visitMachineBundleBefore(const MachineInstr *MI) {$/;"	f	class:MachineVerifier
visitMachineFunctionAfter	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::visitMachineFunctionAfter() {$/;"	f	class:MachineVerifier
visitMachineFunctionBefore	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::visitMachineFunctionBefore() {$/;"	f	class:MachineVerifier
visitMachineInstrAfter	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::visitMachineInstrAfter(const MachineInstr *MI) {$/;"	f	class:MachineVerifier
visitMachineInstrBefore	CodeGen/MachineVerifier.cpp	/^void MachineVerifier::visitMachineInstrBefore(const MachineInstr *MI) {$/;"	f	class:MachineVerifier
visitMachineOperand	CodeGen/MachineVerifier.cpp	/^MachineVerifier::visitMachineOperand(const MachineOperand *MO, unsigned MONum) {$/;"	f	class:MachineVerifier
visitMemCmpCall	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^bool SelectionDAGBuilder::visitMemCmpCall(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitMemSetInst	Transforms/Scalar/SROA.cpp	/^  bool visitMemSetInst(MemSetInst &II) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitMemSetInst	Transforms/Scalar/SROA.cpp	/^  bool visitMemSetInst(MemSetInst &II) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
visitMemSetInst	Transforms/Scalar/SROA.cpp	/^  void visitMemSetInst(MemSetInst &II) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitMemTransferInst	Transforms/Scalar/SROA.cpp	/^  bool visitMemTransferInst(MemTransferInst &II) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitMemTransferInst	Transforms/Scalar/SROA.cpp	/^  bool visitMemTransferInst(MemTransferInst &II) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
visitMemTransferInst	Transforms/Scalar/SROA.cpp	/^  void visitMemTransferInst(MemTransferInst &II) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitMemoryReference	Analysis/Lint.cpp	/^void Lint::visitMemoryReference(Instruction &I,$/;"	f	class:Lint
visitMul	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitMul(const User &I)  { visitBinary(I, ISD::MUL); }$/;"	f	class:llvm::SelectionDAGBuilder
visitMul	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::visitMul(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitMulExpr	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::visitMulExpr(const SCEVMulExpr *S) {$/;"	f	class:SCEVExpander
visitNamedMDNode	VMCore/Verifier.cpp	/^void Verifier::visitNamedMDNode(NamedMDNode &NMD) {$/;"	f	class:Verifier
visitOR	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitOR(SDNode *N) {$/;"	f	class:DAGCombiner
visitOr	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitOr  (const User &I) { visitBinary(I, ISD::OR); }$/;"	f	class:llvm::SelectionDAGBuilder
visitOr	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Instruction *InstCombiner::visitOr(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitPHI	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitPHI(PHINode &I) {$/;"	f	class:CallAnalyzer
visitPHI	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitPHI(const PHINode &) {$/;"	f	class:SelectionDAGBuilder
visitPHINode	Analysis/MemoryBuiltins.cpp	/^SizeOffsetEvalType ObjectSizeOffsetEvaluator::visitPHINode(PHINode &PHI) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitPHINode	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitPHINode(PHINode&) {$/;"	f	class:ObjectSizeOffsetVisitor
visitPHINode	Analysis/SparsePropagation.cpp	/^void SparseSolver::visitPHINode(PHINode &PN) {$/;"	f	class:SparseSolver
visitPHINode	ExecutionEngine/Interpreter/Interpreter.h	/^  void visitPHINode(PHINode &PN) { $/;"	f	class:llvm::Interpreter
visitPHINode	Transforms/InstCombine/InstCombinePHI.cpp	/^Instruction *InstCombiner::visitPHINode(PHINode &PN) {$/;"	f	class:InstCombiner
visitPHINode	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitPHINode(PHINode &PN) {$/;"	f	class:SCCPSolver
visitPHINode	Transforms/Scalar/SROA.cpp	/^  bool visitPHINode(PHINode &PN) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitPHINode	Transforms/Scalar/SROA.cpp	/^  bool visitPHINode(PHINode &PN) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
visitPHINode	Transforms/Scalar/SROA.cpp	/^  bool visitPHINode(PHINode &PN) {$/;"	f	class:__anon562::AggLoadStoreRewriter	file:
visitPHINode	Transforms/Scalar/SROA.cpp	/^  void visitPHINode(PHINode &PN) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitPHINode	Transforms/Scalar/SROA.cpp	/^  void visitPHINode(PHINode &PN) {$/;"	f	class:__anon560::PHIOrSelectSpeculator	file:
visitPHINode	VMCore/Verifier.cpp	/^void Verifier::visitPHINode(PHINode &PN) {$/;"	f	class:Verifier
visitPow	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^SelectionDAGBuilder::visitPow(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitPtrToInt	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitPtrToInt(PtrToIntInst &I) {$/;"	f	class:CallAnalyzer
visitPtrToInt	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitPtrToInt(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitPtrToInt	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitPtrToInt(PtrToIntInst &CI) {$/;"	f	class:InstCombiner
visitPtrToIntInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitPtrToIntInst(PtrToIntInst &I) {$/;"	f	class:Interpreter
visitPtrToIntInst	VMCore/Verifier.cpp	/^void Verifier::visitPtrToIntInst(PtrToIntInst &I) {$/;"	f	class:Verifier
visitResume	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitResume(const ResumeInst &RI) {$/;"	f	class:SelectionDAGBuilder
visitResumeInst	Transforms/Scalar/SCCP.cpp	/^  void visitResumeInst    (TerminatorInst &I) { \/*returns void*\/ }$/;"	f	class:__anon531::SCCPSolver	file:
visitRet	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitRet(const ReturnInst &I) {$/;"	f	class:SelectionDAGBuilder
visitReturnInst	Analysis/Lint.cpp	/^void Lint::visitReturnInst(ReturnInst &I) {$/;"	f	class:Lint
visitReturnInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitReturnInst(ReturnInst &I) {$/;"	f	class:Interpreter
visitReturnInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitReturnInst(ReturnInst &I) {$/;"	f	class:SCCPSolver
visitReturnInst	VMCore/Verifier.cpp	/^void Verifier::visitReturnInst(ReturnInst &RI) {$/;"	f	class:Verifier
visitSDIV	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSDIV(SDNode *N) {$/;"	f	class:DAGCombiner
visitSDIVREM	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSDIVREM(SDNode *N) {$/;"	f	class:DAGCombiner
visitSDiv	Analysis/Lint.cpp	/^void Lint::visitSDiv(BinaryOperator &I) {$/;"	f	class:Lint
visitSDiv	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitSDiv(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitSDiv	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::visitSDiv(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitSELECT	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSELECT(SDNode *N) {$/;"	f	class:DAGCombiner
visitSELECT_CC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSELECT_CC(SDNode *N) {$/;"	f	class:DAGCombiner
visitSETCC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSETCC(SDNode *N) {$/;"	f	class:DAGCombiner
visitSExt	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitSExt(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitSExt	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitSExt(SExtInst &CI) {$/;"	f	class:InstCombiner
visitSExtInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitSExtInst(SExtInst &I) {$/;"	f	class:Interpreter
visitSExtInst	VMCore/Verifier.cpp	/^void Verifier::visitSExtInst(SExtInst &I) {$/;"	f	class:Verifier
visitSHL	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSHL(SDNode *N) {$/;"	f	class:DAGCombiner
visitSIGN_EXTEND	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSIGN_EXTEND(SDNode *N) {$/;"	f	class:DAGCombiner
visitSIGN_EXTEND_INREG	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSIGN_EXTEND_INREG(SDNode *N) {$/;"	f	class:DAGCombiner
visitSINT_TO_FP	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSINT_TO_FP(SDNode *N) {$/;"	f	class:DAGCombiner
visitSIToFP	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitSIToFP(const User &I){$/;"	f	class:SelectionDAGBuilder
visitSIToFP	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitSIToFP(CastInst &CI) {$/;"	f	class:InstCombiner
visitSIToFPInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitSIToFPInst(SIToFPInst &I) {$/;"	f	class:Interpreter
visitSIToFPInst	VMCore/Verifier.cpp	/^void Verifier::visitSIToFPInst(SIToFPInst &I) {$/;"	f	class:Verifier
visitSMULO	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSMULO(SDNode *N) {$/;"	f	class:DAGCombiner
visitSMUL_LOHI	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSMUL_LOHI(SDNode *N) {$/;"	f	class:DAGCombiner
visitSMaxExpr	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::visitSMaxExpr(const SCEVSMaxExpr *S) {$/;"	f	class:SCEVExpander
visitSRA	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSRA(SDNode *N) {$/;"	f	class:DAGCombiner
visitSREM	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSREM(SDNode *N) {$/;"	f	class:DAGCombiner
visitSRL	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSRL(SDNode *N) {$/;"	f	class:DAGCombiner
visitSRem	Analysis/Lint.cpp	/^void Lint::visitSRem(BinaryOperator &I) {$/;"	f	class:Lint
visitSRem	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitSRem(const User &I) { visitBinary(I, ISD::SREM); }$/;"	f	class:llvm::SelectionDAGBuilder
visitSRem	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::visitSRem(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitSTORE	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSTORE(SDNode *N) {$/;"	f	class:DAGCombiner
visitSUB	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSUB(SDNode *N) {$/;"	f	class:DAGCombiner
visitSUBC	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSUBC(SDNode *N) {$/;"	f	class:DAGCombiner
visitSUBE	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitSUBE(SDNode *N) {$/;"	f	class:DAGCombiner
visitSelect	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitSelect(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitSelectInst	Analysis/MemoryBuiltins.cpp	/^SizeOffsetEvalType ObjectSizeOffsetEvaluator::visitSelectInst(SelectInst &I) {$/;"	f	class:ObjectSizeOffsetEvaluator
visitSelectInst	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitSelectInst(SelectInst &I) {$/;"	f	class:ObjectSizeOffsetVisitor
visitSelectInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitSelectInst(SelectInst &I) {$/;"	f	class:Interpreter
visitSelectInst	Transforms/InstCombine/InstCombineSelect.cpp	/^Instruction *InstCombiner::visitSelectInst(SelectInst &SI) {$/;"	f	class:InstCombiner
visitSelectInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitSelectInst(SelectInst &I) {$/;"	f	class:SCCPSolver
visitSelectInst	Transforms/Scalar/SROA.cpp	/^  bool visitSelectInst(SelectInst &SI) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitSelectInst	Transforms/Scalar/SROA.cpp	/^  bool visitSelectInst(SelectInst &SI) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
visitSelectInst	Transforms/Scalar/SROA.cpp	/^  bool visitSelectInst(SelectInst &SI) {$/;"	f	class:__anon562::AggLoadStoreRewriter	file:
visitSelectInst	Transforms/Scalar/SROA.cpp	/^  void visitSelectInst(SelectInst &SI) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitSelectInst	Transforms/Scalar/SROA.cpp	/^  void visitSelectInst(SelectInst &SI) {$/;"	f	class:__anon560::PHIOrSelectSpeculator	file:
visitSelectInst	VMCore/Verifier.cpp	/^void Verifier::visitSelectInst(SelectInst &SI) {$/;"	f	class:Verifier
visitSelectInstWithICmp	Transforms/InstCombine/InstCombineSelect.cpp	/^Instruction *InstCombiner::visitSelectInstWithICmp(SelectInst &SI,$/;"	f	class:InstCombiner
visitShift	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitShift(const User &I, unsigned Opcode) {$/;"	f	class:SelectionDAGBuilder
visitShiftByConstant	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitShiftByConstant(SDNode *N, unsigned Amt) {$/;"	f	class:DAGCombiner
visitShl	Analysis/Lint.cpp	/^void Lint::visitShl(BinaryOperator &I) {$/;"	f	class:Lint
visitShl	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitShl (const User &I) { visitShift(I, ISD::SHL); }$/;"	f	class:llvm::SelectionDAGBuilder
visitShl	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitShl(BinaryOperator &I) {$/;"	f	class:Interpreter
visitShl	Transforms/InstCombine/InstCombineShifts.cpp	/^Instruction *InstCombiner::visitShl(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitShuffleVector	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitShuffleVector(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitShuffleVectorInst	Transforms/InstCombine/InstCombineVectorOps.cpp	/^Instruction *InstCombiner::visitShuffleVectorInst(ShuffleVectorInst &SVI) {$/;"	f	class:InstCombiner
visitShuffleVectorInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitShuffleVectorInst(ShuffleVectorInst &I) {$/;"	f	class:SCCPSolver
visitShuffleVectorInst	VMCore/Verifier.cpp	/^void Verifier::visitShuffleVectorInst(ShuffleVectorInst &SV) {$/;"	f	class:Verifier
visitSignExtendExpr	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::visitSignExtendExpr(const SCEVSignExtendExpr *S) {$/;"	f	class:SCEVExpander
visitSoftInstr	CodeGen/ExecutionDepsFix.cpp	/^void ExeDepsFix::visitSoftInstr(MachineInstr *mi, unsigned mask) {$/;"	f	class:ExeDepsFix
visitStore	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitStore(StoreInst &I) {$/;"	f	class:CallAnalyzer
visitStore	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitStore(const StoreInst &I) {$/;"	f	class:SelectionDAGBuilder
visitStoreInst	Analysis/Lint.cpp	/^void Lint::visitStoreInst(StoreInst &I) {$/;"	f	class:Lint
visitStoreInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitStoreInst(StoreInst &I) {$/;"	f	class:Interpreter
visitStoreInst	Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp	/^Instruction *InstCombiner::visitStoreInst(StoreInst &SI) {$/;"	f	class:InstCombiner
visitStoreInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitStoreInst(StoreInst &SI) {$/;"	f	class:SCCPSolver
visitStoreInst	Transforms/Scalar/SROA.cpp	/^  bool visitStoreInst(StoreInst &SI) {$/;"	f	class:AllocaPartitioning::PartitionBuilder	file:
visitStoreInst	Transforms/Scalar/SROA.cpp	/^  bool visitStoreInst(StoreInst &SI) {$/;"	f	class:__anon561::AllocaPartitionRewriter	file:
visitStoreInst	Transforms/Scalar/SROA.cpp	/^  bool visitStoreInst(StoreInst &SI) {$/;"	f	class:__anon562::AggLoadStoreRewriter	file:
visitStoreInst	Transforms/Scalar/SROA.cpp	/^  void visitStoreInst(StoreInst &SI) {$/;"	f	class:AllocaPartitioning::UseBuilder	file:
visitStoreInst	VMCore/Verifier.cpp	/^void Verifier::visitStoreInst(StoreInst &SI) {$/;"	f	class:Verifier
visitSub	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitSub(BinaryOperator &I) {$/;"	f	class:CallAnalyzer
visitSub	Analysis/Lint.cpp	/^void Lint::visitSub(BinaryOperator &I) {$/;"	f	class:Lint
visitSub	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitSub(const User &I)  { visitBinary(I, ISD::SUB); }$/;"	f	class:llvm::SelectionDAGBuilder
visitSub	Transforms/InstCombine/InstCombineAddSub.cpp	/^Instruction *InstCombiner::visitSub(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitSwitch	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitSwitch(const SwitchInst &SI) {$/;"	f	class:SelectionDAGBuilder
visitSwitchCase	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitSwitchCase(CaseBlock &CB,$/;"	f	class:SelectionDAGBuilder
visitSwitchInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitSwitchInst(SwitchInst &I) {$/;"	f	class:Interpreter
visitSwitchInst	Transforms/InstCombine/InstructionCombining.cpp	/^Instruction *InstCombiner::visitSwitchInst(SwitchInst &SI) {$/;"	f	class:InstCombiner
visitSwitchInst	VMCore/Verifier.cpp	/^void Verifier::visitSwitchInst(SwitchInst &SI) {$/;"	f	class:Verifier
visitTRUNCATE	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitTRUNCATE(SDNode *N) {$/;"	f	class:DAGCombiner
visitTargetIntrinsic	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitTargetIntrinsic(const CallInst &I,$/;"	f	class:SelectionDAGBuilder
visitTerminatorInst	Analysis/SparsePropagation.cpp	/^void SparseSolver::visitTerminatorInst(TerminatorInst &TI) {$/;"	f	class:SparseSolver
visitTerminatorInst	Transforms/Scalar/SCCP.cpp	/^void SCCPSolver::visitTerminatorInst(TerminatorInst &TI) {$/;"	f	class:SCCPSolver
visitTerminatorInst	VMCore/Verifier.cpp	/^void Verifier::visitTerminatorInst(TerminatorInst &I) {$/;"	f	class:Verifier
visitTokenFactor	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitTokenFactor(SDNode *N) {$/;"	f	class:DAGCombiner
visitTokens	MC/MCDisassembler/EDInst.cpp	/^int EDInst::visitTokens(EDTokenVisitor_t visitor) {$/;"	f	class:EDInst
visitTrunc	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitTrunc(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitTrunc	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitTrunc(TruncInst &CI) {$/;"	f	class:InstCombiner
visitTruncInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitTruncInst(TruncInst &I) {$/;"	f	class:Interpreter
visitTruncInst	VMCore/Verifier.cpp	/^void Verifier::visitTruncInst(TruncInst &I) {$/;"	f	class:Verifier
visitTruncateExpr	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::visitTruncateExpr(const SCEVTruncateExpr *S) {$/;"	f	class:SCEVExpander
visitUDIV	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitUDIV(SDNode *N) {$/;"	f	class:DAGCombiner
visitUDIVREM	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitUDIVREM(SDNode *N) {$/;"	f	class:DAGCombiner
visitUDiv	Analysis/Lint.cpp	/^void Lint::visitUDiv(BinaryOperator &I) {$/;"	f	class:Lint
visitUDiv	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitUDiv(const User &I) { visitBinary(I, ISD::UDIV); }$/;"	f	class:llvm::SelectionDAGBuilder
visitUDiv	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::visitUDiv(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitUDivExpr	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::visitUDivExpr(const SCEVUDivExpr *S) {$/;"	f	class:SCEVExpander
visitUINT_TO_FP	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitUINT_TO_FP(SDNode *N) {$/;"	f	class:DAGCombiner
visitUIToFP	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitUIToFP(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitUIToFP	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitUIToFP(CastInst &CI) {$/;"	f	class:InstCombiner
visitUIToFPInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitUIToFPInst(UIToFPInst &I) {$/;"	f	class:Interpreter
visitUIToFPInst	VMCore/Verifier.cpp	/^void Verifier::visitUIToFPInst(UIToFPInst &I) {$/;"	f	class:Verifier
visitUMULO	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitUMULO(SDNode *N) {$/;"	f	class:DAGCombiner
visitUMUL_LOHI	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitUMUL_LOHI(SDNode *N) {$/;"	f	class:DAGCombiner
visitUMaxExpr	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::visitUMaxExpr(const SCEVUMaxExpr *S) {$/;"	f	class:SCEVExpander
visitUREM	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitUREM(SDNode *N) {$/;"	f	class:DAGCombiner
visitURem	Analysis/Lint.cpp	/^void Lint::visitURem(BinaryOperator &I) {$/;"	f	class:Lint
visitURem	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitURem(const User &I) { visitBinary(I, ISD::UREM); }$/;"	f	class:llvm::SelectionDAGBuilder
visitURem	Transforms/InstCombine/InstCombineMulDivRem.cpp	/^Instruction *InstCombiner::visitURem(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitUnaryFloatCall	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^bool SelectionDAGBuilder::visitUnaryFloatCall(const CallInst &I,$/;"	f	class:SelectionDAGBuilder
visitUnaryInstruction	Analysis/InlineCost.cpp	/^bool CallAnalyzer::visitUnaryInstruction(UnaryInstruction &I) {$/;"	f	class:CallAnalyzer
visitUndefValue	Analysis/MemoryBuiltins.cpp	/^SizeOffsetType ObjectSizeOffsetVisitor::visitUndefValue(UndefValue&) {$/;"	f	class:ObjectSizeOffsetVisitor
visitUnreachable	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitUnreachable(const UnreachableInst &I) { \/* noop *\/ }$/;"	f	class:llvm::SelectionDAGBuilder
visitUnreachableInst	Analysis/Lint.cpp	/^void Lint::visitUnreachableInst(UnreachableInst &I) {$/;"	f	class:Lint
visitUnreachableInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitUnreachableInst(UnreachableInst &I) {$/;"	f	class:Interpreter
visitUnreachableInst	Transforms/Scalar/SCCP.cpp	/^  void visitUnreachableInst(TerminatorInst &I) { \/*returns void*\/ }$/;"	f	class:__anon531::SCCPSolver	file:
visitUnwindInst	Transforms/Scalar/SCCP.cpp	/^  void visitUnwindInst    (TerminatorInst &I) { \/*returns void*\/ }$/;"	f	class:__anon531::SCCPSolver	file:
visitUserOp1	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitUserOp1(const Instruction &I) {$/;"	f	class:llvm::SelectionDAGBuilder
visitUserOp1	VMCore/Verifier.cpp	/^void Verifier::visitUserOp1(Instruction &I) {$/;"	f	class:Verifier
visitUserOp2	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitUserOp2(const Instruction &I) {$/;"	f	class:llvm::SelectionDAGBuilder
visitUserOp2	VMCore/Verifier.cpp	/^    void visitUserOp2(Instruction &I) { visitUserOp1(I); }$/;"	f	struct:__anon610::Verifier
visitUsers	Transforms/Scalar/SROA.cpp	/^  bool visitUsers(AllocaPartitioning::const_use_iterator I,$/;"	f	class:__anon561::AllocaPartitionRewriter
visitUsers	Transforms/Scalar/SROA.cpp	/^  void visitUsers(AllocaPartitioning::const_iterator PI) {$/;"	f	class:__anon560::PHIOrSelectSpeculator
visitVAArg	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitVAArg(const VAArgInst &I) {$/;"	f	class:SelectionDAGBuilder
visitVAArgInst	Analysis/Lint.cpp	/^void Lint::visitVAArgInst(VAArgInst &I) {$/;"	f	class:Lint
visitVAArgInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitVAArgInst(VAArgInst &I) {$/;"	f	class:Interpreter
visitVAArgInst	Transforms/Scalar/SCCP.cpp	/^  void visitVAArgInst     (Instruction &I) { markAnythingOverdefined(&I); }$/;"	f	class:__anon531::SCCPSolver	file:
visitVAArgInst	VMCore/Verifier.cpp	/^    void visitVAArgInst(VAArgInst &VAA) { visitInstruction(VAA); }$/;"	f	struct:__anon610::Verifier
visitVACopy	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitVACopy(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitVAEnd	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitVAEnd(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitVAStart	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitVAStart(const CallInst &I) {$/;"	f	class:SelectionDAGBuilder
visitVECTOR_SHUFFLE	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitVECTOR_SHUFFLE(SDNode *N) {$/;"	f	class:DAGCombiner
visitXOR	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitXOR(SDNode *N) {$/;"	f	class:DAGCombiner
visitXor	Analysis/Lint.cpp	/^void Lint::visitXor(BinaryOperator &I) {$/;"	f	class:Lint
visitXor	CodeGen/SelectionDAG/SelectionDAGBuilder.h	/^  void visitXor (const User &I) { visitBinary(I, ISD::XOR); }$/;"	f	class:llvm::SelectionDAGBuilder
visitXor	Transforms/InstCombine/InstCombineAndOrXor.cpp	/^Instruction *InstCombiner::visitXor(BinaryOperator &I) {$/;"	f	class:InstCombiner
visitZERO_EXTEND	CodeGen/SelectionDAG/DAGCombiner.cpp	/^SDValue DAGCombiner::visitZERO_EXTEND(SDNode *N) {$/;"	f	class:DAGCombiner
visitZExt	CodeGen/SelectionDAG/SelectionDAGBuilder.cpp	/^void SelectionDAGBuilder::visitZExt(const User &I) {$/;"	f	class:SelectionDAGBuilder
visitZExt	Transforms/InstCombine/InstCombineCasts.cpp	/^Instruction *InstCombiner::visitZExt(ZExtInst &CI) {$/;"	f	class:InstCombiner
visitZExtInst	ExecutionEngine/Interpreter/Execution.cpp	/^void Interpreter::visitZExtInst(ZExtInst &I) {$/;"	f	class:Interpreter
visitZExtInst	VMCore/Verifier.cpp	/^void Verifier::visitZExtInst(ZExtInst &I) {$/;"	f	class:Verifier
visitZeroExtendExpr	Analysis/ScalarEvolutionExpander.cpp	/^Value *SCEVExpander::visitZeroExtendExpr(const SCEVZeroExtendExpr *S) {$/;"	f	class:SCEVExpander
vregsLiveIn	CodeGen/MachineVerifier.cpp	/^      RegMap vregsLiveIn;$/;"	m	struct:__anon139::MachineVerifier::BBInfo	file:
vregsPassed	CodeGen/MachineVerifier.cpp	/^      RegSet vregsPassed;$/;"	m	struct:__anon139::MachineVerifier::BBInfo	file:
vregsRequired	CodeGen/MachineVerifier.cpp	/^      RegSet vregsRequired;$/;"	m	struct:__anon139::MachineVerifier::BBInfo	file:
vregsToAlloc	CodeGen/RegAllocPBQP.cpp	/^  RegSet vregsToAlloc, emptyIntervalVRegs;$/;"	m	class:__anon135::RegAllocPBQP	file:
vrm	CodeGen/RegAllocPBQP.cpp	/^  VirtRegMap *vrm;$/;"	m	class:__anon135::RegAllocPBQP	file:
vrm	CodeGen/Spiller.cpp	/^  VirtRegMap *vrm;$/;"	m	class:__anon143::SpillerBase	file:
vvvv	Target/X86/Disassembler/X86DisassemblerDecoder.h	/^  Reg                           vvvv;$/;"	m	struct:InternalInstruction
vvvvFromVEX2of2	Target/X86/Disassembler/X86DisassemblerDecoder.h	58;"	d
vvvvFromVEX3of3	Target/X86/Disassembler/X86DisassemblerDecoder.h	53;"	d
wFromREX	Target/X86/Disassembler/X86DisassemblerDecoder.h	43;"	d
wFromVEX3of3	Target/X86/Disassembler/X86DisassemblerDecoder.h	52;"	d
waitForUnlock	Support/LockFileManager.cpp	/^void LockFileManager::waitForUnlock() {$/;"	f	class:LockFileManager
warning	Linker/Linker.cpp	/^Linker::warning(StringRef message) {$/;"	f	class:Linker
wasEscaped	Support/YAMLParser.cpp	/^static bool wasEscaped(StringRef::iterator First,$/;"	f	file:
wasRun	VMCore/PassManager.cpp	/^  bool wasRun;$/;"	m	class:llvm::FunctionPassManagerImpl	file:
water_iterator	Target/ARM/ARMConstantIslandPass.cpp	/^    typedef std::vector<MachineBasicBlock*>::iterator water_iterator;$/;"	t	class:__anon310::ARMConstantIslands	file:
weakCrossingSIVtest	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::weakCrossingSIVtest(const SCEV *Coeff,$/;"	f	class:DependenceAnalysis
weakZeroDstSIVtest	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::weakZeroDstSIVtest(const SCEV *SrcCoeff,$/;"	f	class:DependenceAnalysis
weakZeroSrcSIVtest	Analysis/DependenceAnalysis.cpp	/^bool DependenceAnalysis::weakZeroSrcSIVtest(const SCEV *DstCoeff,$/;"	f	class:DependenceAnalysis
width_descending	Analysis/ScalarEvolutionExpander.cpp	/^static bool width_descending(Value *lhs, Value *rhs) {$/;"	f	file:
write	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::write(const char *Ptr, size_t Size) {$/;"	f	class:raw_ostream
write	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::write(unsigned char C) {$/;"	f	class:raw_ostream
write	Transforms/Instrumentation/GCOVProfiling.cpp	/^    void write(uint32_t i) {$/;"	f	class:__anon490::GCOVRecord
writeAlias	Transforms/IPO/MergeFunctions.cpp	/^void MergeFunctions::writeAlias(Function *F, Function *G) {$/;"	f	class:MergeFunctions
writeAllMDNodes	VMCore/AsmWriter.cpp	/^void AssemblyWriter::writeAllMDNodes() {$/;"	f	class:AssemblyWriter
writeAtomic	VMCore/AsmWriter.cpp	/^void AssemblyWriter::writeAtomic(AtomicOrdering Ordering,$/;"	f	class:AssemblyWriter
writeAtomicRMWOperation	VMCore/AsmWriter.cpp	/^static void writeAtomicRMWOperation(raw_ostream &Out,$/;"	f	file:
writeBytes	Transforms/Instrumentation/GCOVProfiling.cpp	/^    void writeBytes(const char *Bytes, int Size) {$/;"	f	class:__anon490::GCOVRecord
writeGCOVString	Transforms/Instrumentation/GCOVProfiling.cpp	/^    void writeGCOVString(StringRef s) {$/;"	f	class:__anon490::GCOVRecord
writeInteger	Archive/ArchiveWriter.cpp	/^static inline void writeInteger(unsigned num, std::ofstream& ARFile) {$/;"	f	file:
writeMember	Archive/ArchiveWriter.cpp	/^Archive::writeMember($/;"	f	class:Archive
writeNopData	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^bool ARMAsmBackend::writeNopData(uint64_t Count, MCObjectWriter *OW) const {$/;"	f	class:ARMAsmBackend
writeNopData	Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp	/^bool MBlazeAsmBackend::writeNopData(uint64_t Count, MCObjectWriter *OW) const {$/;"	f	class:__anon455::MBlazeAsmBackend
writeNopData	Target/Mips/MCTargetDesc/MipsAsmBackend.cpp	/^  bool writeNopData(uint64_t Count, MCObjectWriter *OW) const {$/;"	f	class:__anon429::MipsAsmBackend
writeNopData	Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp	/^  bool writeNopData(uint64_t Count, MCObjectWriter *OW) const {$/;"	f	class:__anon320::PPCAsmBackend
writeNopData	Target/X86/MCTargetDesc/X86AsmBackend.cpp	/^bool X86AsmBackend::writeNopData(uint64_t Count, MCObjectWriter *OW) const {$/;"	f	class:X86AsmBackend
writeOperand	VMCore/AsmWriter.cpp	/^void AssemblyWriter::writeOperand(const Value *Operand, bool PrintType) {$/;"	f	class:AssemblyWriter
writeOut	Transforms/Instrumentation/GCOVProfiling.cpp	/^    void writeOut() {$/;"	f	class:__anon490::GCOVBlock
writeOut	Transforms/Instrumentation/GCOVProfiling.cpp	/^    void writeOut() {$/;"	f	class:__anon490::GCOVFunction
writeOut	Transforms/Instrumentation/GCOVProfiling.cpp	/^    void writeOut() {$/;"	f	class:__anon490::GCOVLines
writeParamOperand	VMCore/AsmWriter.cpp	/^void AssemblyWriter::writeParamOperand(const Value *Operand,$/;"	f	class:AssemblyWriter
writeSectionData	MC/MCAssembler.cpp	/^void MCAssembler::writeSectionData(const MCSectionData *SD,$/;"	f	class:MCAssembler
writeSignedDecimal	Support/APFloat.cpp	/^writeSignedDecimal (char *dst, int value)$/;"	f	file:
writeSymbolTable	Archive/ArchiveWriter.cpp	/^Archive::writeSymbolTable(std::ofstream& ARFile) {$/;"	f	class:Archive
writeThunk	Transforms/IPO/MergeFunctions.cpp	/^void MergeFunctions::writeThunk(Function *F, Function *G) {$/;"	f	class:MergeFunctions
writeThunkOrAlias	Transforms/IPO/MergeFunctions.cpp	/^void MergeFunctions::writeThunkOrAlias(Function *F, Function *G) {$/;"	f	class:MergeFunctions
writeToDisk	Archive/ArchiveWriter.cpp	/^Archive::writeToDisk(bool CreateSymbolTable, bool TruncateNames,$/;"	f	class:Archive
writeUnsignedDecimal	Support/APFloat.cpp	/^writeUnsignedDecimal (char *dst, unsigned int n)$/;"	f	file:
write_escaped	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::write_escaped(StringRef Str,$/;"	f	class:raw_ostream
write_hex	Support/raw_ostream.cpp	/^raw_ostream &raw_ostream::write_hex(unsigned long long N) {$/;"	f	class:raw_ostream
write_impl	Support/FormattedStream.cpp	/^void formatted_raw_ostream::write_impl(const char *Ptr, size_t Size) {$/;"	f	class:formatted_raw_ostream
write_impl	Support/circular_raw_ostream.cpp	/^void circular_raw_ostream::write_impl(const char *Ptr, size_t Size) {$/;"	f	class:circular_raw_ostream
write_impl	Support/raw_os_ostream.cpp	/^void raw_os_ostream::write_impl(const char *Ptr, size_t Size) {$/;"	f	class:raw_os_ostream
write_impl	Support/raw_ostream.cpp	/^void raw_fd_ostream::write_impl(const char *Ptr, size_t Size) {$/;"	f	class:raw_fd_ostream
write_impl	Support/raw_ostream.cpp	/^void raw_null_ostream::write_impl(const char *Ptr, size_t Size) {$/;"	f	class:raw_null_ostream
write_impl	Support/raw_ostream.cpp	/^void raw_string_ostream::write_impl(const char *Ptr, size_t Size) {$/;"	f	class:raw_string_ostream
write_impl	Support/raw_ostream.cpp	/^void raw_svector_ostream::write_impl(const char *Ptr, size_t Size) {$/;"	f	class:raw_svector_ostream
write_uint16_le	MC/WinCOFFObjectWriter.cpp	/^static inline void write_uint16_le(void *Data, uint16_t const &Value) {$/;"	f	file:
write_uint32_le	MC/WinCOFFObjectWriter.cpp	/^static inline void write_uint32_le(void *Data, uint32_t const &Value) {$/;"	f	file:
write_uint8_le	MC/WinCOFFObjectWriter.cpp	/^static inline void write_uint8_le(void *Data, uint8_t const &Value) {$/;"	f	file:
writer_acquire	Support/RWMutex.cpp	/^bool RWMutexImpl::writer_acquire() { return true; }$/;"	f	class:llvm::RWMutexImpl
writer_release	Support/RWMutex.cpp	/^bool RWMutexImpl::writer_release() { return true; }$/;"	f	class:llvm::RWMutexImpl
x86DisassemblerDebug	Target/X86/Disassembler/X86Disassembler.cpp	/^void x86DisassemblerDebug(const char *file,$/;"	f
x86DisassemblerGetInstrName	Target/X86/Disassembler/X86Disassembler.cpp	/^const char *x86DisassemblerGetInstrName(unsigned Opcode, const void *mii) {$/;"	f
x87DoubleExtended	Support/APFloat.cpp	/^  const fltSemantics APFloat::x87DoubleExtended = { 16383, -16382, 64, true };$/;"	m	class:llvm::APFloat	file:
xFromREX	Target/X86/Disassembler/X86DisassemblerDecoder.h	45;"	d
xFromVEX2of3	Target/X86/Disassembler/X86DisassemblerDecoder.h	49;"	d
yaml	Support/YAMLParser.cpp	/^namespace yaml {$/;"	n	namespace:llvm	file:
zap	VMCore/Use.cpp	/^void Use::zap(Use *Start, const Use *Stop, bool del) {$/;"	f	class:llvm::Use
zeroCoefficient	Analysis/DependenceAnalysis.cpp	/^const SCEV *DependenceAnalysis::zeroCoefficient(const SCEV *Expr,$/;"	f	class:DependenceAnalysis
zeroExtend	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::zeroExtend(uint32_t DstTySize) const {$/;"	f	class:ConstantRange
zeroSignificand	Support/APFloat.cpp	/^APFloat::zeroSignificand()$/;"	f	class:APFloat
zext	Support/APInt.cpp	/^APInt APInt::zext(unsigned width) const {$/;"	f	class:APInt
zextOrSelf	Support/APInt.cpp	/^APInt APInt::zextOrSelf(unsigned width) const {$/;"	f	class:APInt
zextOrTrunc	Support/APInt.cpp	/^APInt APInt::zextOrTrunc(unsigned width) const {$/;"	f	class:APInt
zextOrTrunc	Support/ConstantRange.cpp	/^ConstantRange ConstantRange::zextOrTrunc(uint32_t DstTySize) const {$/;"	f	class:ConstantRange
~APFloat	Support/APFloat.cpp	/^APFloat::~APFloat()$/;"	f	class:APFloat
~ARMAsmBackend	Target/ARM/MCTargetDesc/ARMAsmBackend.cpp	/^  ~ARMAsmBackend() {$/;"	f	class:__anon284::ARMAsmBackend
~ARMConstantPoolSymbol	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolSymbol::~ARMConstantPoolSymbol() {$/;"	f	class:ARMConstantPoolSymbol
~ARMConstantPoolValue	Target/ARM/ARMConstantPoolValue.cpp	/^ARMConstantPoolValue::~ARMConstantPoolValue() {}$/;"	f	class:ARMConstantPoolValue
~ARMDisassembler	Target/ARM/Disassembler/ARMDisassembler.cpp	/^  ~ARMDisassembler() {$/;"	f	class:__anon291::ARMDisassembler
~ARMELFObjectWriter	Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp	/^ARMELFObjectWriter::~ARMELFObjectWriter() {}$/;"	f	class:ARMELFObjectWriter
~ARMELFWriterInfo	Target/ARM/ARMELFWriterInfo.cpp	/^ARMELFWriterInfo::~ARMELFWriterInfo() {}$/;"	f	class:ARMELFWriterInfo
~ARMException	CodeGen/AsmPrinter/ARMException.cpp	/^ARMException::~ARMException() {}$/;"	f	class:ARMException
~ARMMCCodeEmitter	Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp	/^  ~ARMMCCodeEmitter() {}$/;"	f	class:__anon283::ARMMCCodeEmitter
~ARMSelectionDAGInfo	Target/ARM/ARMSelectionDAGInfo.cpp	/^ARMSelectionDAGInfo::~ARMSelectionDAGInfo() {$/;"	f	class:ARMSelectionDAGInfo
~AbstractLatticeFunction	Analysis/SparsePropagation.cpp	/^AbstractLatticeFunction::~AbstractLatticeFunction() {}$/;"	f	class:AbstractLatticeFunction
~AggBuffer	Target/NVPTX/NVPTXAsmPrinter.h	/^    ~AggBuffer() {$/;"	f	class:llvm::NVPTXAsmPrinter::AggBuffer
~AggressiveAntiDepBreaker	CodeGen/AggressiveAntiDepBreaker.cpp	/^AggressiveAntiDepBreaker::~AggressiveAntiDepBreaker() {$/;"	f	class:AggressiveAntiDepBreaker
~AliasAnalysis	Analysis/AliasAnalysis.cpp	/^AliasAnalysis::~AliasAnalysis() {}$/;"	f	class:AliasAnalysis
~AliasAnalysisCounter	Analysis/AliasAnalysisCounter.cpp	/^    ~AliasAnalysisCounter() {$/;"	f	class:__anon43::AliasAnalysisCounter
~AllocaHolder	ExecutionEngine/Interpreter/Interpreter.h	/^  ~AllocaHolder() {$/;"	f	class:llvm::AllocaHolder
~AllocaHolderHandle	ExecutionEngine/Interpreter/Interpreter.h	/^  ~AllocaHolderHandle() { if (--H->RefCnt == 0) delete H; }$/;"	f	class:llvm::AllocaHolderHandle
~AllocaInst	VMCore/Instructions.cpp	/^AllocaInst::~AllocaInst() {$/;"	f	class:AllocaInst
~AllocationOrder	CodeGen/AllocationOrder.cpp	/^AllocationOrder::~AllocationOrder() {$/;"	f	class:AllocationOrder
~AntiDepBreaker	CodeGen/PostRASchedulerList.cpp	/^AntiDepBreaker::~AntiDepBreaker() { }$/;"	f	class:AntiDepBreaker
~Archive	Archive/Archive.cpp	/^Archive::~Archive() {$/;"	f	class:Archive
~ArgvArray	ExecutionEngine/ExecutionEngine.cpp	/^  ~ArgvArray() { clear(); }$/;"	f	class:__anon200::ArgvArray
~Array	CodeGen/LiveIntervalUnion.h	/^    ~Array() { clear(); }$/;"	f	class:llvm::LiveIntervalUnion::Array
~AsmLexer	MC/MCParser/AsmLexer.cpp	/^AsmLexer::~AsmLexer() {$/;"	f	class:AsmLexer
~AsmParser	MC/MCParser/AsmParser.cpp	/^AsmParser::~AsmParser() {$/;"	f	class:AsmParser
~AsmPrinter	CodeGen/AsmPrinter/AsmPrinter.cpp	/^AsmPrinter::~AsmPrinter() {$/;"	f	class:AsmPrinter
~AssemblyAnnotationWriter	VMCore/AsmWriter.cpp	/^AssemblyAnnotationWriter::~AssemblyAnnotationWriter() {}$/;"	f	class:AssemblyAnnotationWriter
~AttrListPtr	VMCore/Attributes.cpp	/^AttrListPtr::~AttrListPtr() {$/;"	f	class:AttrListPtr
~AttributeEmitter	Target/ARM/ARMAsmPrinter.cpp	/^    virtual ~AttributeEmitter() {}$/;"	f	class:__anon313::AttributeEmitter
~AttributeListImpl	VMCore/Attributes.cpp	/^AttributeListImpl::~AttributeListImpl() {$/;"	f	class:AttributeListImpl
~BallLarusDag	Analysis/PathNumbering.cpp	/^BallLarusDag::~BallLarusDag() {$/;"	f	class:BallLarusDag
~BasicBlock	VMCore/BasicBlock.cpp	/^BasicBlock::~BasicBlock() {$/;"	f	class:BasicBlock
~Binary	Object/Binary.cpp	/^Binary::~Binary() {$/;"	f	class:Binary
~BitcodeReader	Bitcode/Reader/BitcodeReader.h	/^  ~BitcodeReader() {$/;"	f	class:llvm::BitcodeReader
~BitcodeReaderValueList	Bitcode/Reader/BitcodeReader.h	/^  ~BitcodeReaderValueList() {$/;"	f	class:llvm::BitcodeReaderValueList
~BlockFrequencyInfo	Analysis/BlockFrequencyInfo.cpp	/^BlockFrequencyInfo::~BlockFrequencyInfo() {$/;"	f	class:BlockFrequencyInfo
~BumpPtrAllocator	Support/Allocator.cpp	/^BumpPtrAllocator::~BumpPtrAllocator() {$/;"	f	class:llvm::BumpPtrAllocator
~CallInst	VMCore/Instructions.cpp	/^CallInst::~CallInst() {$/;"	f	class:CallInst
~CaptureTracker	Analysis/CaptureTracking.cpp	/^CaptureTracker::~CaptureTracker() {}$/;"	f	class:CaptureTracker
~CleanupInstaller	Support/ToolOutputFile.cpp	/^tool_output_file::CleanupInstaller::~CleanupInstaller() {$/;"	f	class:tool_output_file::CleanupInstaller
~CompileUnit	CodeGen/AsmPrinter/DwarfCompileUnit.cpp	/^CompileUnit::~CompileUnit() {$/;"	f	class:CompileUnit
~CrashRecoveryContext	Support/CrashRecoveryContext.cpp	/^CrashRecoveryContext::~CrashRecoveryContext() {$/;"	f	class:CrashRecoveryContext
~CrashRecoveryContextCleanup	Support/CrashRecoveryContext.cpp	/^CrashRecoveryContextCleanup::~CrashRecoveryContextCleanup() {}$/;"	f	class:CrashRecoveryContextCleanup
~CrashRecoveryContextImpl	Support/CrashRecoveryContext.cpp	/^  ~CrashRecoveryContextImpl() {$/;"	f	struct:__anon255::CrashRecoveryContextImpl
~CriticalAntiDepBreaker	CodeGen/CriticalAntiDepBreaker.cpp	/^CriticalAntiDepBreaker::~CriticalAntiDepBreaker() {$/;"	f	class:CriticalAntiDepBreaker
~Cursor	CodeGen/InterferenceCache.h	/^    ~Cursor() { setEntry(0); }$/;"	f	class:llvm::InterferenceCache::Cursor
~DIContext	DebugInfo/DIContext.cpp	/^DIContext::~DIContext() {}$/;"	f	class:DIContext
~DIE	CodeGen/AsmPrinter/DIE.cpp	/^DIE::~DIE() {$/;"	f	class:DIE
~DIEBlock	CodeGen/AsmPrinter/DIE.h	/^    virtual ~DIEBlock() {}$/;"	f	class:llvm::DIEBlock
~DIEValue	CodeGen/AsmPrinter/DIE.h	/^    virtual ~DIEValue() {}$/;"	f	class:llvm::DIEValue
~DataFileStreamer	Support/DataStream.cpp	/^  virtual ~DataFileStreamer() {$/;"	f	class:__anon234::DataFileStreamer
~DataLayout	VMCore/DataLayout.cpp	/^DataLayout::~DataLayout() {$/;"	f	class:DataLayout
~DataStreamer	Support/DataStream.cpp	/^DataStreamer::~DataStreamer() {}$/;"	f	class:llvm::DataStreamer
~DefaultJITMemoryManager	ExecutionEngine/JIT/JITMemoryManager.cpp	/^DefaultJITMemoryManager::~DefaultJITMemoryManager() {$/;"	f	class:DefaultJITMemoryManager
~DeltaAlgorithm	Support/DeltaAlgorithm.cpp	/^DeltaAlgorithm::~DeltaAlgorithm() {$/;"	f	class:DeltaAlgorithm
~DumpingState	DebugInfo/DWARFDebugLine.cpp	/^DWARFDebugLine::DumpingState::~DumpingState() {}$/;"	f	class:DWARFDebugLine::DumpingState
~DwarfAccelTable	CodeGen/AsmPrinter/DwarfAccelTable.cpp	/^DwarfAccelTable::~DwarfAccelTable() { }$/;"	f	class:DwarfAccelTable
~DwarfCFIException	CodeGen/AsmPrinter/DwarfCFIException.cpp	/^DwarfCFIException::~DwarfCFIException() {}$/;"	f	class:DwarfCFIException
~DwarfDebug	CodeGen/AsmPrinter/DwarfDebug.cpp	/^DwarfDebug::~DwarfDebug() {$/;"	f	class:DwarfDebug
~DwarfException	CodeGen/AsmPrinter/DwarfException.cpp	/^DwarfException::~DwarfException() {}$/;"	f	class:DwarfException
~EDDisassembler	MC/MCDisassembler/EDDisassembler.cpp	/^EDDisassembler::~EDDisassembler() {$/;"	f	class:EDDisassembler
~EDInst	MC/MCDisassembler/EDInst.cpp	/^EDInst::~EDInst() {$/;"	f	class:EDInst
~EDMemoryObject	MC/MCDisassembler/EDDisassembler.cpp	/^    ~EDMemoryObject() { }$/;"	f	class:__anon204::EDMemoryObject
~EDOperand	MC/MCDisassembler/EDOperand.cpp	/^EDOperand::~EDOperand() {$/;"	f	class:EDOperand
~EDToken	MC/MCDisassembler/EDToken.cpp	/^EDToken::~EDToken() {$/;"	f	class:EDToken
~ELFObjectImage	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^    virtual ~ELFObjectImage() {$/;"	f	class:__anon180::ELFObjectImage
~ELFObjectWriter	MC/ELFObjectWriter.cpp	/^ELFObjectWriter::~ELFObjectWriter()$/;"	f	class:ELFObjectWriter
~Ensemble	CodeGen/MachineTraceMetrics.cpp	/^MachineTraceMetrics::Ensemble::~Ensemble() {}$/;"	f	class:MachineTraceMetrics::Ensemble
~Evaluator	Transforms/IPO/GlobalOpt.cpp	/^  ~Evaluator() {$/;"	f	class:__anon591::Evaluator
~ExecutionEngine	ExecutionEngine/ExecutionEngine.cpp	/^ExecutionEngine::~ExecutionEngine() {$/;"	f	class:ExecutionEngine
~ExplicitSymbolsDeleter	Support/DynamicLibrary.cpp	/^  ~ExplicitSymbolsDeleter() {$/;"	f	struct:__anon242::ExplicitSymbolsDeleter
~FastISel	CodeGen/SelectionDAG/FastISel.cpp	/^FastISel::~FastISel() {}$/;"	f	class:FastISel
~FileOutputBuffer	Support/FileOutputBuffer.cpp	/^FileOutputBuffer::~FileOutputBuffer() {$/;"	f	class:llvm::FileOutputBuffer
~FoldingSetImpl	Support/FoldingSet.cpp	/^FoldingSetImpl::~FoldingSetImpl() {$/;"	f	class:FoldingSetImpl
~Function	VMCore/Function.cpp	/^Function::~Function() {$/;"	f	class:Function
~FunctionPassManager	VMCore/PassManager.cpp	/^FunctionPassManager::~FunctionPassManager() {$/;"	f	class:FunctionPassManager
~GCFunctionInfo	CodeGen/GCMetadata.cpp	/^GCFunctionInfo::~GCFunctionInfo() {}$/;"	f	class:GCFunctionInfo
~GCMetadataPrinter	CodeGen/GCMetadataPrinter.cpp	/^GCMetadataPrinter::~GCMetadataPrinter() { }$/;"	f	class:GCMetadataPrinter
~GCModuleInfo	CodeGen/GCMetadata.cpp	/^GCModuleInfo::~GCModuleInfo() {$/;"	f	class:GCModuleInfo
~GCOVBlock	Transforms/Instrumentation/GCOVProfiling.cpp	/^    ~GCOVBlock() {$/;"	f	class:__anon490::GCOVBlock
~GCOVBlock	VMCore/GCOV.cpp	/^GCOVBlock::~GCOVBlock() {$/;"	f	class:GCOVBlock
~GCOVFile	VMCore/GCOV.cpp	/^GCOVFile::~GCOVFile() {$/;"	f	class:GCOVFile
~GCOVFunction	Transforms/Instrumentation/GCOVProfiling.cpp	/^    ~GCOVFunction() {$/;"	f	class:__anon490::GCOVFunction
~GCOVFunction	VMCore/GCOV.cpp	/^GCOVFunction::~GCOVFunction() {$/;"	f	class:GCOVFunction
~GCStrategy	CodeGen/GCStrategy.cpp	/^GCStrategy::~GCStrategy() {$/;"	f	class:GCStrategy
~GDBJITRegistrar	ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp	/^GDBJITRegistrar::~GDBJITRegistrar() {$/;"	f	class:__anon178::GDBJITRegistrar
~GVMaterializer	VMCore/GVMaterializer.cpp	/^GVMaterializer::~GVMaterializer() {}$/;"	f	class:GVMaterializer
~HandleSDNode	CodeGen/SelectionDAG/SelectionDAG.cpp	/^HandleSDNode::~HandleSDNode() {$/;"	f	class:HandleSDNode
~HexagonSelectionDAGInfo	Target/Hexagon/HexagonSelectionDAGInfo.cpp	/^HexagonSelectionDAGInfo::~HexagonSelectionDAGInfo() {$/;"	f	class:HexagonSelectionDAGInfo
~ImmutablePass	VMCore/Pass.cpp	/^ImmutablePass::~ImmutablePass() { }$/;"	f	class:ImmutablePass
~IndirectBrInst	VMCore/Instructions.cpp	/^IndirectBrInst::~IndirectBrInst() {$/;"	f	class:IndirectBrInst
~InlineAsm	VMCore/InlineAsm.cpp	/^InlineAsm::~InlineAsm() {$/;"	f	class:InlineAsm
~InlineSpiller	CodeGen/InlineSpiller.cpp	/^  ~InlineSpiller() {}$/;"	f	class:__anon155::InlineSpiller	file:
~Instruction	VMCore/Instruction.cpp	/^Instruction::~Instruction() {$/;"	f	class:Instruction
~IntelJITEventListener	ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp	/^  ~IntelJITEventListener() {$/;"	f	class:__anon198::IntelJITEventListener
~Interpreter	ExecutionEngine/Interpreter/Interpreter.cpp	/^Interpreter::~Interpreter() {$/;"	f	class:Interpreter
~JIT	ExecutionEngine/JIT/JIT.cpp	/^JIT::~JIT() {$/;"	f	class:JIT
~JITEmitter	ExecutionEngine/JIT/JITEmitter.cpp	/^    ~JITEmitter() {$/;"	f	class:__anon182::JITEmitter
~JITEventListener	ExecutionEngine/JIT/JIT.cpp	/^JITEventListener::~JITEventListener() {}$/;"	f	class:JITEventListener
~JITMemoryManager	ExecutionEngine/JIT/JITMemoryManager.cpp	/^JITMemoryManager::~JITMemoryManager() {}$/;"	f	class:JITMemoryManager
~JITRegistrar	ExecutionEngine/RuntimeDyld/JITRegistrar.h	/^  virtual ~JITRegistrar() {}$/;"	f	class:llvm::JITRegistrar
~JITResolver	ExecutionEngine/JIT/JITEmitter.cpp	/^JITResolver::~JITResolver() {$/;"	f	class:JITResolver
~JITSlabAllocator	ExecutionEngine/JIT/JITMemoryManager.cpp	/^    virtual ~JITSlabAllocator() { }$/;"	f	class:__anon190::JITSlabAllocator
~LLLexer	AsmParser/LLLexer.h	/^    ~LLLexer() {}$/;"	f	class:llvm::LLLexer
~LLVMContext	VMCore/LLVMContext.cpp	/^LLVMContext::~LLVMContext() { delete pImpl; }$/;"	f	class:LLVMContext
~LLVMContextImpl	VMCore/LLVMContextImpl.cpp	/^LLVMContextImpl::~LLVMContextImpl() {$/;"	f	class:LLVMContextImpl
~LandingPadInst	VMCore/Instructions.cpp	/^LandingPadInst::~LandingPadInst() {$/;"	f	class:LandingPadInst
~LexicalScopes	CodeGen/LexicalScopes.cpp	/^LexicalScopes::~LexicalScopes() {$/;"	f	class:LexicalScopes
~LibCallAliasAnalysis	Analysis/LibCallAliasAnalysis.cpp	/^LibCallAliasAnalysis::~LibCallAliasAnalysis() {$/;"	f	class:LibCallAliasAnalysis
~LibCallInfo	Analysis/LibCallSemantics.cpp	/^LibCallInfo::~LibCallInfo() {$/;"	f	class:LibCallInfo
~LibCallOptimization	Transforms/Scalar/SimplifyLibCalls.cpp	/^  virtual ~LibCallOptimization() {}$/;"	f	class:__anon544::LibCallOptimization
~LibCallOptimization	Transforms/Utils/SimplifyLibCalls.cpp	/^  virtual ~LibCallOptimization() {}$/;"	f	class:__anon473::LibCallOptimization
~LibCallSimplifier	Transforms/Utils/SimplifyLibCalls.cpp	/^LibCallSimplifier::~LibCallSimplifier() {$/;"	f	class:llvm::LibCallSimplifier
~LineReader	Target/NVPTX/NVPTXAsmPrinter.h	/^  ~LineReader() {$/;"	f	class:llvm::LineReader
~Linker	Linker/Linker.cpp	/^Linker::~Linker() {$/;"	f	class:Linker
~LiveDebugVariables	CodeGen/LiveDebugVariables.cpp	/^LiveDebugVariables::~LiveDebugVariables() {$/;"	f	class:LiveDebugVariables
~LiveIntervals	CodeGen/LiveIntervalAnalysis.cpp	/^LiveIntervals::~LiveIntervals() {$/;"	f	class:LiveIntervals
~LockFileManager	Support/LockFileManager.cpp	/^LockFileManager::~LockFileManager() {$/;"	f	class:LockFileManager
~MBlazeDisassembler	Target/MBlaze/Disassembler/MBlazeDisassembler.h	/^  ~MBlazeDisassembler() {$/;"	f	class:llvm::MBlazeDisassembler
~MBlazeELFObjectWriter	Target/MBlaze/MCTargetDesc/MBlazeELFObjectWriter.cpp	/^MBlazeELFObjectWriter::~MBlazeELFObjectWriter() {$/;"	f	class:MBlazeELFObjectWriter
~MBlazeELFWriterInfo	Target/MBlaze/MBlazeELFWriterInfo.cpp	/^MBlazeELFWriterInfo::~MBlazeELFWriterInfo() {}$/;"	f	class:MBlazeELFWriterInfo
~MBlazeMCCodeEmitter	Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp	/^  ~MBlazeMCCodeEmitter() {}$/;"	f	class:__anon454::MBlazeMCCodeEmitter
~MBlazeSelectionDAGInfo	Target/MBlaze/MBlazeSelectionDAGInfo.cpp	/^MBlazeSelectionDAGInfo::~MBlazeSelectionDAGInfo() {$/;"	f	class:MBlazeSelectionDAGInfo
~MCAsmBackend	MC/MCAsmBackend.cpp	/^MCAsmBackend::~MCAsmBackend() {}$/;"	f	class:MCAsmBackend
~MCAsmInfo	MC/MCAsmInfo.cpp	/^MCAsmInfo::~MCAsmInfo() {$/;"	f	class:MCAsmInfo
~MCAsmLexer	MC/MCParser/MCAsmLexer.cpp	/^MCAsmLexer::~MCAsmLexer() {$/;"	f	class:MCAsmLexer
~MCAsmParser	MC/MCParser/MCAsmParser.cpp	/^MCAsmParser::~MCAsmParser() {$/;"	f	class:MCAsmParser
~MCAsmParserExtension	MC/MCParser/MCAsmParserExtension.cpp	/^MCAsmParserExtension::~MCAsmParserExtension() {$/;"	f	class:MCAsmParserExtension
~MCAsmParserSemaCallback	MC/MCParser/AsmParser.cpp	/^MCAsmParserSemaCallback::~MCAsmParserSemaCallback() {} $/;"	f	class:MCAsmParserSemaCallback
~MCAsmStreamer	MC/MCAsmStreamer.cpp	/^  ~MCAsmStreamer() {}$/;"	f	class:__anon214::MCAsmStreamer
~MCAssembler	MC/MCAssembler.cpp	/^MCAssembler::~MCAssembler() {$/;"	f	class:MCAssembler
~MCCodeEmitter	MC/MCCodeEmitter.cpp	/^MCCodeEmitter::~MCCodeEmitter() {$/;"	f	class:MCCodeEmitter
~MCContext	MC/MCContext.cpp	/^MCContext::~MCContext() {$/;"	f	class:MCContext
~MCDisassembler	MC/MCDisassembler.cpp	/^MCDisassembler::~MCDisassembler() {$/;"	f	class:MCDisassembler
~MCELFStreamer	MC/MCELFStreamer.cpp	/^  ~MCELFStreamer() {}$/;"	f	class:__anon215::MCELFStreamer
~MCFragment	MC/MCAssembler.cpp	/^MCFragment::~MCFragment() {$/;"	f	class:MCFragment
~MCInstPrinter	MC/MCInstPrinter.cpp	/^MCInstPrinter::~MCInstPrinter() {$/;"	f	class:MCInstPrinter
~MCJIT	ExecutionEngine/MCJIT/MCJIT.cpp	/^MCJIT::~MCJIT() {$/;"	f	class:MCJIT
~MCMachObjectTargetWriter	MC/MCMachObjectTargetWriter.cpp	/^MCMachObjectTargetWriter::~MCMachObjectTargetWriter() {$/;"	f	class:MCMachObjectTargetWriter
~MCObjectStreamer	MC/MCObjectStreamer.cpp	/^MCObjectStreamer::~MCObjectStreamer() {$/;"	f	class:MCObjectStreamer
~MCObjectWriter	MC/MCObjectWriter.cpp	/^MCObjectWriter::~MCObjectWriter() {$/;"	f	class:MCObjectWriter
~MCSection	MC/MCSection.cpp	/^MCSection::~MCSection() {$/;"	f	class:MCSection
~MCSectionCOFF	MC/MCSectionCOFF.cpp	/^MCSectionCOFF::~MCSectionCOFF() {} \/\/ anchor.$/;"	f	class:MCSectionCOFF
~MCSectionELF	MC/MCSectionELF.cpp	/^MCSectionELF::~MCSectionELF() {} \/\/ anchor.$/;"	f	class:MCSectionELF
~MCStreamer	MC/MCStreamer.cpp	/^MCStreamer::~MCStreamer() {$/;"	f	class:MCStreamer
~MCTargetAsmLexer	MC/MCTargetAsmLexer.cpp	/^MCTargetAsmLexer::~MCTargetAsmLexer() {}$/;"	f	class:MCTargetAsmLexer
~MCTargetAsmParser	MC/MCParser/MCTargetAsmParser.cpp	/^MCTargetAsmParser::~MCTargetAsmParser() {$/;"	f	class:MCTargetAsmParser
~MDNode	VMCore/Metadata.cpp	/^MDNode::~MDNode() {$/;"	f	class:MDNode
~MDNodeOperand	VMCore/Metadata.cpp	/^  ~MDNodeOperand() {}$/;"	f	class:llvm::MDNodeOperand
~MMIAddrLabelMap	CodeGen/MachineModuleInfo.cpp	/^  ~MMIAddrLabelMap() {$/;"	f	class:llvm::MMIAddrLabelMap
~MPPassManager	VMCore/PassManager.cpp	/^  virtual ~MPPassManager() {$/;"	f	class:llvm::MPPassManager
~MSP430SelectionDAGInfo	Target/MSP430/MSP430SelectionDAGInfo.cpp	/^MSP430SelectionDAGInfo::~MSP430SelectionDAGInfo() {$/;"	f	class:MSP430SelectionDAGInfo
~MachOObject	Object/MachOObject.cpp	/^MachOObject::~MachOObject() {$/;"	f	class:MachOObject
~MachineBasicBlock	CodeGen/MachineBasicBlock.cpp	/^MachineBasicBlock::~MachineBasicBlock() {$/;"	f	class:MachineBasicBlock
~MachineBlockFrequencyInfo	CodeGen/MachineBlockFrequencyInfo.cpp	/^MachineBlockFrequencyInfo::~MachineBlockFrequencyInfo() {$/;"	f	class:MachineBlockFrequencyInfo
~MachineConstantPool	CodeGen/MachineFunction.cpp	/^MachineConstantPool::~MachineConstantPool() {$/;"	f	class:MachineConstantPool
~MachineDominatorTree	CodeGen/MachineDominators.cpp	/^MachineDominatorTree::~MachineDominatorTree() {$/;"	f	class:MachineDominatorTree
~MachineFunction	CodeGen/MachineFunction.cpp	/^MachineFunction::~MachineFunction() {$/;"	f	class:MachineFunction
~MachineFunctionAnalysis	CodeGen/MachineFunctionAnalysis.cpp	/^MachineFunctionAnalysis::~MachineFunctionAnalysis() {$/;"	f	class:MachineFunctionAnalysis
~MachineFunctionInfo	CodeGen/MachineFunction.cpp	/^MachineFunctionInfo::~MachineFunctionInfo() {}$/;"	f	class:MachineFunctionInfo
~MachineInstr	CodeGen/MachineInstr.cpp	/^MachineInstr::~MachineInstr() {$/;"	f	class:MachineInstr
~MachineModuleInfo	CodeGen/MachineModuleInfo.cpp	/^MachineModuleInfo::~MachineModuleInfo() {$/;"	f	class:MachineModuleInfo
~MachineModuleInfoImpl	CodeGen/MachineModuleInfo.cpp	/^MachineModuleInfoImpl::~MachineModuleInfoImpl() {}$/;"	f	class:MachineModuleInfoImpl
~MachinePostDominatorTree	CodeGen/MachinePostDominators.cpp	/^MachinePostDominatorTree::~MachinePostDominatorTree() {$/;"	f	class:MachinePostDominatorTree
~MachineRegisterInfo	CodeGen/MachineRegisterInfo.cpp	/^MachineRegisterInfo::~MachineRegisterInfo() {$/;"	f	class:MachineRegisterInfo
~MachineSSAUpdater	CodeGen/MachineSSAUpdater.cpp	/^MachineSSAUpdater::~MachineSSAUpdater() {$/;"	f	class:MachineSSAUpdater
~MachineSchedContext	CodeGen/MachineScheduler.cpp	/^MachineSchedContext::~MachineSchedContext() {$/;"	f	class:MachineSchedContext
~MallocSlabAllocator	Support/Allocator.cpp	/^MallocSlabAllocator::~MallocSlabAllocator() { }$/;"	f	class:llvm::MallocSlabAllocator
~ManagedStringPool	Target/NVPTX/ManagedStringPool.h	/^  ~ManagedStringPool() {$/;"	f	class:llvm::ManagedStringPool
~MapVector	Transforms/Scalar/ObjCARC.cpp	/^    ~MapVector() {$/;"	f	class:__anon498::MapVector
~MarkPendingLoopPredicate	Analysis/ScalarEvolution.cpp	/^  ~MarkPendingLoopPredicate() {$/;"	f	struct:MarkPendingLoopPredicate
~MemoryBuffer	Support/MemoryBuffer.cpp	/^MemoryBuffer::~MemoryBuffer() { }$/;"	f	class:MemoryBuffer
~MemoryBufferMMapFile	Support/MemoryBuffer.cpp	/^  ~MemoryBufferMMapFile() {$/;"	f	class:__anon238::MemoryBufferMMapFile
~MemoryDependenceAnalysis	Analysis/MemoryDependenceAnalysis.cpp	/^MemoryDependenceAnalysis::~MemoryDependenceAnalysis() {$/;"	f	class:MemoryDependenceAnalysis
~MemoryObject	Support/MemoryObject.cpp	/^MemoryObject::~MemoryObject() {$/;"	f	class:MemoryObject
~MipsDisassemblerBase	Target/Mips/Disassembler/MipsDisassembler.cpp	/^  virtual ~MipsDisassemblerBase() {}$/;"	f	class:__anon433::MipsDisassemblerBase
~MipsELFObjectWriter	Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp	/^MipsELFObjectWriter::~MipsELFObjectWriter() {}$/;"	f	class:MipsELFObjectWriter
~MipsELFWriterInfo	Target/Mips/MipsELFWriterInfo.cpp	/^MipsELFWriterInfo::~MipsELFWriterInfo() {}$/;"	f	class:MipsELFWriterInfo
~MipsMCCodeEmitter	Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp	/^  ~MipsMCCodeEmitter() {}$/;"	f	class:__anon432::MipsMCCodeEmitter
~MipsSelectionDAGInfo	Target/Mips/MipsSelectionDAGInfo.cpp	/^MipsSelectionDAGInfo::~MipsSelectionDAGInfo() {$/;"	f	class:MipsSelectionDAGInfo
~MipsTargetMachine	Target/Mips/MipsTargetMachine.h	/^  virtual ~MipsTargetMachine() { delete InstrInfo; }$/;"	f	class:llvm::MipsTargetMachine
~Module	VMCore/Module.cpp	/^Module::~Module() {$/;"	f	class:Module
~ModulePass	VMCore/Pass.cpp	/^ModulePass::~ModulePass() { }$/;"	f	class:ModulePass
~MutexImpl	Support/Mutex.cpp	/^MutexImpl::~MutexImpl() { }$/;"	f	class:llvm::MutexImpl
~NVPTXAsmPrinter	Target/NVPTX/NVPTXAsmPrinter.h	/^  ~NVPTXAsmPrinter() {$/;"	f	class:llvm::NVPTXAsmPrinter
~NVPTXSection	Target/NVPTX/NVPTXSection.h	/^  ~NVPTXSection() {}$/;"	f	class:llvm::NVPTXSection
~NVPTXTargetObjectFile	Target/NVPTX/NVPTXTargetObjectFile.h	/^  ~NVPTXTargetObjectFile() {$/;"	f	class:llvm::NVPTXTargetObjectFile
~Name2PairMap	Support/Timer.cpp	/^  ~Name2PairMap() {$/;"	f	class:__anon246::Name2PairMap
~NamedMDNode	VMCore/Metadata.cpp	/^NamedMDNode::~NamedMDNode() {$/;"	f	class:NamedMDNode
~OProfileJITEventListener	ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp	/^OProfileJITEventListener::~OProfileJITEventListener() {$/;"	f	class:__anon193::OProfileJITEventListener
~ObjectImageCommon	ExecutionEngine/RuntimeDyld/ObjectImageCommon.h	/^  virtual ~ObjectImageCommon() { delete ObjFile; }$/;"	f	class:llvm::ObjectImageCommon
~PHINode	VMCore/Instructions.cpp	/^PHINode::~PHINode() {$/;"	f	class:PHINode
~PMDataManager	VMCore/PassManager.cpp	/^PMDataManager::~PMDataManager() {$/;"	f	class:PMDataManager
~PMTopLevelManager	VMCore/PassManager.cpp	/^PMTopLevelManager::~PMTopLevelManager() {$/;"	f	class:PMTopLevelManager
~PPCELFObjectWriter	Target/PowerPC/MCTargetDesc/PPCELFObjectWriter.cpp	/^PPCELFObjectWriter::~PPCELFObjectWriter() {$/;"	f	class:PPCELFObjectWriter
~PPCMCCodeEmitter	Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp	/^  ~PPCMCCodeEmitter() {}$/;"	f	class:__anon319::PPCMCCodeEmitter
~PPCSelectionDAGInfo	Target/PowerPC/PPCSelectionDAGInfo.cpp	/^PPCSelectionDAGInfo::~PPCSelectionDAGInfo() {$/;"	f	class:PPCSelectionDAGInfo
~PSVGlobalsTy	CodeGen/PseudoSourceValue.cpp	/^  ~PSVGlobalsTy() {$/;"	f	struct:__anon100::PSVGlobalsTy
~Pass	VMCore/Pass.cpp	/^Pass::~Pass() {$/;"	f	class:Pass
~PassManager	VMCore/PassManager.cpp	/^PassManager::~PassManager() {$/;"	f	class:PassManager
~PassManagerBase	VMCore/PassManager.cpp	/^PassManagerBase::~PassManagerBase() {}$/;"	f	class:PassManagerBase
~PassManagerBuilder	Transforms/IPO/PassManagerBuilder.cpp	/^PassManagerBuilder::~PassManagerBuilder() {$/;"	f	class:PassManagerBuilder
~PassNameParser	VMCore/Pass.cpp	/^PassNameParser::~PassNameParser() {}$/;"	f	class:PassNameParser
~PassRegistrationListener	VMCore/Pass.cpp	/^PassRegistrationListener::~PassRegistrationListener() {$/;"	f	class:PassRegistrationListener
~PassRegistry	VMCore/PassRegistry.cpp	/^PassRegistry::~PassRegistry() {$/;"	f	class:PassRegistry
~PathProfileInfo	Analysis/PathProfileInfo.cpp	/^PathProfileInfo::~PathProfileInfo() {$/;"	f	class:PathProfileInfo
~PathProfileLoaderPass	Analysis/PathProfileInfo.cpp	/^PathProfileLoaderPass::~PathProfileLoaderPass() {$/;"	f	class:PathProfileLoaderPass
~PerFunctionState	AsmParser/LLParser.cpp	/^LLParser::PerFunctionState::~PerFunctionState() {$/;"	f	class:LLParser::PerFunctionState
~PostDominatorTree	Analysis/PostDominators.cpp	/^PostDominatorTree::~PostDominatorTree() {$/;"	f	class:PostDominatorTree
~PrettyStackTraceEntry	Support/PrettyStackTrace.cpp	/^PrettyStackTraceEntry::~PrettyStackTraceEntry() {$/;"	f	class:PrettyStackTraceEntry
~PrintFunctionPass	VMCore/PrintModulePass.cpp	/^    ~PrintFunctionPass() {$/;"	f	class:__anon619::PrintFunctionPass
~PrintModulePass	VMCore/PrintModulePass.cpp	/^    ~PrintModulePass() {$/;"	f	class:__anon619::PrintModulePass
~ProfileInfoT	Analysis/ProfileInfo.cpp	/^ProfileInfoT<Function, BasicBlock>::~ProfileInfoT() {$/;"	f	class:llvm::ProfileInfoT
~ProfileInfoT	Analysis/ProfileInfo.cpp	/^ProfileInfoT<MachineFunction, MachineBasicBlock>::~ProfileInfoT() {}$/;"	f	class:llvm::ProfileInfoT
~PromoteMem2Reg	Transforms/Utils/PromoteMemoryToRegister.cpp	/^    ~PromoteMem2Reg() {$/;"	f	struct:__anon469::PromoteMem2Reg
~RTDyldMemoryManager	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^RTDyldMemoryManager::~RTDyldMemoryManager() {}$/;"	f	class:RTDyldMemoryManager
~RWMutexImpl	Support/RWMutex.cpp	/^RWMutexImpl::~RWMutexImpl() { }$/;"	f	class:llvm::RWMutexImpl
~RecursionSetRemover	Transforms/Scalar/JumpThreading.cpp	/^      ~RecursionSetRemover() {$/;"	f	struct:__anon542::JumpThreading::RecursionSetRemover
~RegAllocBase	CodeGen/RegAllocBase.h	/^  virtual ~RegAllocBase() {}$/;"	f	class:llvm::RegAllocBase
~Regex	Support/Regex.cpp	/^Regex::~Regex() {$/;"	f	class:Regex
~Region	Analysis/RegionInfo.cpp	/^Region::~Region() {$/;"	f	class:Region
~RegionInfo	Analysis/RegionInfo.cpp	/^RegionInfo::~RegionInfo() {$/;"	f	class:RegionInfo
~ReturnInst	VMCore/Instructions.cpp	/^ReturnInst::~ReturnInst() {$/;"	f	class:ReturnInst
~RuntimeDyld	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^RuntimeDyld::~RuntimeDyld() {$/;"	f	class:llvm::RuntimeDyld
~RuntimeDyldELF	ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp	/^RuntimeDyldELF::~RuntimeDyldELF() {$/;"	f	class:llvm::RuntimeDyldELF
~RuntimeDyldImpl	ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp	/^RuntimeDyldImpl::~RuntimeDyldImpl() {}$/;"	f	class:RuntimeDyldImpl
~SPUSelectionDAGInfo	Target/CellSPU/SPUSelectionDAGInfo.cpp	/^SPUSelectionDAGInfo::~SPUSelectionDAGInfo() {$/;"	f	class:SPUSelectionDAGInfo
~SSAUpdater	Transforms/Utils/SSAUpdater.cpp	/^SSAUpdater::~SSAUpdater() {$/;"	f	class:SSAUpdater
~SchedBoundary	CodeGen/MachineScheduler.cpp	/^    ~SchedBoundary() { delete HazardRec; }$/;"	f	struct:__anon126::ConvergingScheduler::SchedBoundary
~SchedBoundary	Target/Hexagon/HexagonMachineScheduler.h	/^    ~SchedBoundary() {$/;"	f	struct:llvm::ConvergingVLIWScheduler::SchedBoundary
~ScheduleDAG	CodeGen/ScheduleDAG.cpp	/^ScheduleDAG::~ScheduleDAG() {}$/;"	f	class:ScheduleDAG
~ScheduleDAGRRList	CodeGen/SelectionDAG/ScheduleDAGRRList.cpp	/^  ~ScheduleDAGRRList() {$/;"	f	class:__anon76::ScheduleDAGRRList
~ScheduleDAGSDNodes	CodeGen/SelectionDAG/ScheduleDAGSDNodes.h	/^    virtual ~ScheduleDAGSDNodes() {}$/;"	f	class:llvm::ScheduleDAGSDNodes
~ScheduleDAGVLIW	CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp	/^  ~ScheduleDAGVLIW() {$/;"	f	class:__anon84::ScheduleDAGVLIW
~ScheduleHazardRecognizer	CodeGen/ScheduleDAG.cpp	/^ScheduleHazardRecognizer::~ScheduleHazardRecognizer() {}$/;"	f	class:ScheduleHazardRecognizer
~SchedulePostRATDList	CodeGen/PostRASchedulerList.cpp	/^SchedulePostRATDList::~SchedulePostRATDList() {$/;"	f	class:SchedulePostRATDList
~ScopedHandle	Support/Windows/Windows.h	/^  ~ScopedHandle() {$/;"	f	class:ScopedHandle
~SelectionDAG	CodeGen/SelectionDAG/SelectionDAG.cpp	/^SelectionDAG::~SelectionDAG() {$/;"	f	class:SelectionDAG
~SelectionDAGISel	CodeGen/SelectionDAG/SelectionDAGISel.cpp	/^SelectionDAGISel::~SelectionDAGISel() {$/;"	f	class:SelectionDAGISel
~SimplifyFortifiedLibCalls	Transforms/Utils/BuildLibCalls.cpp	/^SimplifyFortifiedLibCalls::~SimplifyFortifiedLibCalls() { }$/;"	f	class:SimplifyFortifiedLibCalls
~SlabAllocator	Support/Allocator.cpp	/^SlabAllocator::~SlabAllocator() { }$/;"	f	class:llvm::SlabAllocator
~SmallPtrSetImpl	Support/SmallPtrSet.cpp	/^SmallPtrSetImpl::~SmallPtrSetImpl() {$/;"	f	class:SmallPtrSetImpl
~SourceMgr	Support/SourceMgr.cpp	/^SourceMgr::~SourceMgr() {$/;"	f	class:SourceMgr
~SparcSelectionDAGInfo	Target/Sparc/SparcSelectionDAGInfo.cpp	/^SparcSelectionDAGInfo::~SparcSelectionDAGInfo() {$/;"	f	class:SparcSelectionDAGInfo
~SpillPlacement	CodeGen/SpillPlacement.h	/^  ~SpillPlacement() { releaseMemory(); }$/;"	f	class:llvm::SpillPlacement
~Spiller	CodeGen/Spiller.cpp	/^Spiller::~Spiller() {}$/;"	f	class:Spiller
~State	DebugInfo/DWARFDebugLine.cpp	/^DWARFDebugLine::State::~State() {}$/;"	f	class:DWARFDebugLine::State
~StatisticInfo	Support/Statistic.cpp	/^StatisticInfo::~StatisticInfo() {$/;"	f	class:StatisticInfo
~Stream	Support/YAMLParser.cpp	/^Stream::~Stream() {}$/;"	f	class:Stream
~StreamableMemoryObject	Support/StreamableMemoryObject.cpp	/^StreamableMemoryObject::~StreamableMemoryObject() { }$/;"	f	class:llvm::StreamableMemoryObject
~StringPool	Support/StringPool.cpp	/^StringPool::~StringPool() {$/;"	f	class:StringPool
~StructLayoutMap	VMCore/DataLayout.cpp	/^  virtual ~StructLayoutMap() {$/;"	f	class:__anon617::StructLayoutMap
~SwitchInst	VMCore/Instructions.cpp	/^SwitchInst::~SwitchInst() {$/;"	f	class:SwitchInst
~TGLexer	TableGen/TGLexer.h	/^  ~TGLexer() {}$/;"	f	class:llvm::TGLexer
~TargetELFWriterInfo	Target/TargetELFWriterInfo.cpp	/^TargetELFWriterInfo::~TargetELFWriterInfo() {}$/;"	f	class:TargetELFWriterInfo
~TargetFrameLowering	CodeGen/TargetFrameLoweringImpl.cpp	/^TargetFrameLowering::~TargetFrameLowering() {$/;"	f	class:TargetFrameLowering
~TargetInstrInfo	Target/TargetInstrInfo.cpp	/^TargetInstrInfo::~TargetInstrInfo() {$/;"	f	class:TargetInstrInfo
~TargetIntrinsicInfo	Target/TargetIntrinsicInfo.cpp	/^TargetIntrinsicInfo::~TargetIntrinsicInfo() {$/;"	f	class:TargetIntrinsicInfo
~TargetLowering	CodeGen/SelectionDAG/TargetLowering.cpp	/^TargetLowering::~TargetLowering() {$/;"	f	class:TargetLowering
~TargetLoweringObjectFile	Target/TargetLoweringObjectFile.cpp	/^TargetLoweringObjectFile::~TargetLoweringObjectFile() {$/;"	f	class:TargetLoweringObjectFile
~TargetMachine	Target/TargetMachine.cpp	/^TargetMachine::~TargetMachine() {$/;"	f	class:TargetMachine
~TargetPassConfig	CodeGen/Passes.cpp	/^TargetPassConfig::~TargetPassConfig() {$/;"	f	class:TargetPassConfig
~TargetRegisterInfo	Target/TargetRegisterInfo.cpp	/^TargetRegisterInfo::~TargetRegisterInfo() {}$/;"	f	class:TargetRegisterInfo
~TargetSelectionDAGInfo	CodeGen/SelectionDAG/TargetSelectionDAGInfo.cpp	/^TargetSelectionDAGInfo::~TargetSelectionDAGInfo() {$/;"	f	class:TargetSelectionDAGInfo
~TargetSubtargetInfo	Target/TargetSubtargetInfo.cpp	/^TargetSubtargetInfo::~TargetSubtargetInfo() {}$/;"	f	class:TargetSubtargetInfo
~TerminatorInst	VMCore/Instructions.cpp	/^TerminatorInst::~TerminatorInst() {$/;"	f	class:TerminatorInst
~ThreadLocalImpl	Support/ThreadLocal.cpp	/^ThreadLocalImpl::~ThreadLocalImpl() { }$/;"	f	class:llvm::ThreadLocalImpl
~ThumbDisassembler	Target/ARM/Disassembler/ARMDisassembler.cpp	/^  ~ThumbDisassembler() {$/;"	f	class:__anon291::ThumbDisassembler
~Timer	Support/Timer.cpp	/^Timer::~Timer() {$/;"	f	class:Timer
~TimerGroup	Support/Timer.cpp	/^TimerGroup::~TimerGroup() {$/;"	f	class:TimerGroup
~TimingInfo	VMCore/PassManager.cpp	/^  ~TimingInfo() {$/;"	f	class:__anon615::TimingInfo
~TypePrinting	VMCore/AsmWriter.cpp	/^  ~TypePrinting() {}$/;"	f	class:__anon611::TypePrinting
~UnaryInstruction	VMCore/Instructions.cpp	/^UnaryInstruction::~UnaryInstruction() {$/;"	f	class:UnaryInstruction
~VLIWPacketizerList	CodeGen/DFAPacketizer.cpp	/^VLIWPacketizerList::~VLIWPacketizerList() {$/;"	f	class:VLIWPacketizerList
~VLIWResourceModel	Target/Hexagon/HexagonMachineScheduler.h	/^  ~VLIWResourceModel() {$/;"	f	class:llvm::VLIWResourceModel
~ValID	AsmParser/LLParser.h	/^    ~ValID() {$/;"	f	struct:llvm::ValID
~Value	VMCore/Value.cpp	/^Value::~Value() {$/;"	f	class:Value
~ValueSymbolTable	VMCore/ValueSymbolTable.cpp	/^ValueSymbolTable::~ValueSymbolTable() {$/;"	f	class:ValueSymbolTable
~Win64Exception	CodeGen/AsmPrinter/Win64Exception.cpp	/^Win64Exception::~Win64Exception() {}$/;"	f	class:Win64Exception
~WinCOFFObjectWriter	MC/WinCOFFObjectWriter.cpp	/^WinCOFFObjectWriter::~WinCOFFObjectWriter() {$/;"	f	class:WinCOFFObjectWriter
~X86COFFMachineModuleInfo	Target/X86/X86COFFMachineModuleInfo.cpp	/^X86COFFMachineModuleInfo::~X86COFFMachineModuleInfo() {$/;"	f	class:X86COFFMachineModuleInfo
~X86ELFObjectWriter	Target/X86/MCTargetDesc/X86ELFObjectWriter.cpp	/^X86ELFObjectWriter::~X86ELFObjectWriter()$/;"	f	class:X86ELFObjectWriter
~X86ELFWriterInfo	Target/X86/X86ELFWriterInfo.cpp	/^X86ELFWriterInfo::~X86ELFWriterInfo() {}$/;"	f	class:X86ELFWriterInfo
~X86GenericDisassembler	Target/X86/Disassembler/X86Disassembler.cpp	/^X86GenericDisassembler::~X86GenericDisassembler() {$/;"	f	class:X86GenericDisassembler
~X86MCCodeEmitter	Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp	/^  ~X86MCCodeEmitter() {}$/;"	f	class:__anon353::X86MCCodeEmitter
~X86SelectionDAGInfo	Target/X86/X86SelectionDAGInfo.cpp	/^X86SelectionDAGInfo::~X86SelectionDAGInfo() {$/;"	f	class:X86SelectionDAGInfo
~X86WinCOFFObjectWriter	Target/X86/MCTargetDesc/X86WinCOFFObjectWriter.cpp	/^X86WinCOFFObjectWriter::~X86WinCOFFObjectWriter() {}$/;"	f	class:X86WinCOFFObjectWriter
~XCoreFunctionInfo	Target/XCore/XCoreMachineFunctionInfo.h	/^  ~XCoreFunctionInfo() {}$/;"	f	class:llvm::XCoreFunctionInfo
~XCoreSelectionDAGInfo	Target/XCore/XCoreSelectionDAGInfo.cpp	/^XCoreSelectionDAGInfo::~XCoreSelectionDAGInfo() {$/;"	f	class:XCoreSelectionDAGInfo
~error_category	Support/system_error.cpp	/^error_category::~error_category() {$/;"	f	class:llvm::error_category
~raw_fd_ostream	Support/raw_ostream.cpp	/^raw_fd_ostream::~raw_fd_ostream() {$/;"	f	class:raw_fd_ostream
~raw_null_ostream	Support/raw_ostream.cpp	/^raw_null_ostream::~raw_null_ostream() {$/;"	f	class:raw_null_ostream
~raw_os_ostream	Support/raw_os_ostream.cpp	/^raw_os_ostream::~raw_os_ostream() {$/;"	f	class:raw_os_ostream
~raw_ostream	Support/raw_ostream.cpp	/^raw_ostream::~raw_ostream() {$/;"	f	class:raw_ostream
~raw_string_ostream	Support/raw_ostream.cpp	/^raw_string_ostream::~raw_string_ostream() {$/;"	f	class:raw_string_ostream
~raw_svector_ostream	Support/raw_ostream.cpp	/^raw_svector_ostream::~raw_svector_ostream() {$/;"	f	class:raw_svector_ostream
